I am package HummusJS .....

> hummus@1.0.112 test
> mocha -R tap ./tests/*.js --timeout 15000

I am package Shopify-api-node .....

> shopify-api-node@3.12.1 test
> c8 --reporter=lcov --reporter=text mocha



  Shopify#accessScope
    ✓ gets a list of access scopes associated to the access token

  Shopify#apiPermission
    ✓ deletes an api permission

  Shopify#applicationCharge
    ✓ create a new one-time application charge
    ✓ retrieves a single one-time application charge by its ID (1/2)
    ✓ retrieves a single one-time application charge by its ID (2/2)
    ✓ retrieves all one-time application charges (1/2)
    ✓ retrieves all one-time application charges (2/2)
    ✓ activates a one-time application charge

  Shopify#applicationCredit
    ✓ creates an application credit
    ✓ retrieves a single application charge by its ID (1/2)
    ✓ retrieves a single application charge by its ID (2/2)
    ✓ retrieves all application credits (1/2)
    ✓ retrieves all application credits (2/2)

  Shopify#article
    ✓ gets a list of all articles from a certain blog (1/2)
    ✓ gets a list of all articles from a certain blog (2/2)
    ✓ gets a count of all articles from a certain blog (1/2)
    ✓ gets a count of all articles from a certain blog (2/2)
    ✓ gets a single article by its ID (1/2)
    ✓ gets a single article by its ID (2/2)
    ✓ create a new article for a blog
    ✓ updates an article
    ✓ gets a list all the authors of articles
    ✓ gets a list of all tags of articles (1/3)
    ✓ gets a list of all tags of articles (2/3)
    ✓ gets a list of all tags of articles (3/3)
    ✓ gets a list of all tags from a specific blog (1/2)
    ✓ gets a list of all tags from a specific blog (2/2)
    ✓ deletes an article of a blog

  Shopify#asset
    ✓ gets a list of all theme assets (1/2)
    ✓ gets a list of all theme assets (2/2)
    ✓ gets a single asset
    ✓ updates an asset
    ✓ creates an asset
    ✓ deletes an asset

  Shopify#balance
    ✓ gets the current balance
    ✓ gets a list of balance transactions (1/2)
    ✓ gets a list of balance transactions (2/2)

  Shopify#blog
    ✓ gets a list of all blogs (1/2)
    ✓ gets a list of all blogs (2/2)
    ✓ gets a count of all blogs
    ✓ gets a single blog by its ID (1/2)
    ✓ gets a single blog by its ID (2/2)
    ✓ creates a new blog
    ✓ updates a blog
    ✓ deletes a blog

  Shopify#cancellation-request
    ✓ sends a cancellation request (1/2)
    ✓ sends a cancellation request (2/2)
    ✓ accepts a cancellation request (1/2)
    ✓ accepts a cancellation request (2/2)
    ✓ rejects a cancellation request (1/2)
    ✓ rejects a cancellation request (2/2)

  Shopify#carrierService
    ✓ creates a carrier service
    ✓ updates a carrier service
    ✓ gets a list of all carrier services
    ✓ gets a single carrier service by its ID
    ✓ deletes a carrier service

  Shopify#checkout
    ✓ gets a count of all checkout (1/2)
    ✓ gets a count of all checkout (2/2)
    ✓ gets a list of all checkout (1/2)
    ✓ gets a list of all checkout (2/2)
    ✓ creates a new checkout
    ✓ completes a free checkout
    ✓ completes a free checkout and retries 202 response
    ✓ gets a single checkout by its token
    ✓ updates an existing checkout
    ✓ gets a list of shipping rates
    ✓ gets a list of shipping rates and retries 202 response

  Shopify#collect
    ✓ adds a product to collection
    ✓ removes a product from a collection
    ✓ gets a list of all collects (1/2)
    ✓ gets a list of all collects (2/2)
    ✓ gets a count of all collects (1/2)
    ✓ gets a count of all collects (2/2)
    ✓ gets a single collect by its ID (1/2)
    ✓ gets a single collect by its ID (2/2)

  Shopify#collectionListing
    ✓ gets collection listings published to an application (1/2)
    ✓ gets collection listings published to an application (2/2)
    ✓ gets product IDs published to a collection (1/2)
    ✓ gets product IDs published to a collection (2/2)
    ✓ gets a collection listing by its ID

  Shopify#collection
    ✓ gets a collection by its ID (1/2)
    ✓ gets a collection by its ID (2/2)
    ✓ gets a list of products belonging to a collection (1/2)
    ✓ gets a list of products belonging to a collection (2/2)

  Shopify#comment
    ✓ gets a list of all comments (1/2)
    ✓ gets a list of all comments (2/2)
    ✓ gets a count of all comments (1/2)
    ✓ gets a count of all comments (2/2)
    ✓ gets a single comment by its ID (1/2)
    ✓ gets a single comment by its ID (2/2)
    ✓ creates a new comment for an article
    ✓ updates a comment
    ✓ marks a comment as spam
    ✓ marks a comment as not spam
    ✓ approves a pending comment
    ✓ removes a comment
    ✓ restores a comment

  Shopify#country
    ✓ gets a list of all countries (1/2)
    ✓ gets a list of all countries (2/2)
    ✓ gets a count of all countries
    ✓ gets a single country by its ID (1/2)
    ✓ gets a single country by its ID (2/2)
    ✓ creates a new country
    ✓ updates a country
    ✓ deletes a country

  Shopify#currency
    ✓ gets a list of currencies enabled on a shop

  Shopify#customCollection
    ✓ gets a list of all custom collections (1/2)
    ✓ gets a list of all custom collections (2/2)
    ✓ gets a count of all custom collections (1/2)
    ✓ gets a count of all custom collections (2/2)
    ✓ gets a single custom collection by its ID (1/2)
    ✓ gets a single custom collection by its ID (2/2)
    ✓ creates a new custom collection
    ✓ updates a custom collection
    ✓ deletes a custom collection

  Shopify#customerAddress
    ✓ gets a list of all addresses from a customer (1/2)
    ✓ gets a list of all articles from a certain blog (2/2)
    ✓ gets a single address by its ID
    ✓ creates a new address for a customer
    ✓ updates an address
    ✓ deletes an address
    ✓ performs bulk operations against a number of addresses
    ✓ sets default address for a customer

  Shopify#customerSavedSearch
    ✓ gets a list of all customers saved searches (1/2)
    ✓ gets a list of all customers saved searches (2/2)
    ✓ gets a count of all customer saved searches (1/2)
    ✓ gets a count of all customer saved searches (2/2)
    ✓ gets a single customer saved search by its ID (1/2)
    ✓ gets a single customer saved search by its ID (2/2)
    ✓ gets all customers who match the criteria of a customer saved search (1/2)
    ✓ gets all customers who match the criteria of a customer saved search (2/2)
    ✓ creates a new customer saved search
    ✓ updates a customer saved search
    ✓ deletes a customer saved search

  Shopify#customer
    ✓ gets a list of all customers (1/2)
    ✓ gets a list of all customers (2/2)
    ✓ gets a list of customers matching a given query
    ✓ gets a single customer by its ID (1/2)
    ✓ gets a single customer by its ID (2/2)
    ✓ creates a new customer
    ✓ updates a customer
    ✓ creates an account activation URL for a customer
    ✓ sends an account invite for the customer (1/2)
    ✓ sends an account invite for the customer (2/2)
    ✓ deletes a customer
    ✓ gets a count of all customers
    ✓ gets all open orders belonging to a customer
    ✓ gets any orders belonging to a customer

  Shopify#deprecatedApiCall
    ✓ gets a list of deprecated API calls

  Shopify#discountCodeCreationJob
    ✓ creates a new discount code creation job
    ✓ gets a single discount code creation job by its ID
    ✓ gets a list of discount codes for a discount code creation job

  Shopify#discountCode
    ✓ creates a new discount code
    ✓ updates a single discount code
    ✓ gets a list of discount codes
    ✓ gets a single discount code by its ID
    ✓ looks up a discount code
    ✓ deletes an existing discount code

  Shopify#disputeEvidence
    ✓ get the dispute evidence associated with the dispute ID (1/2)
    ✓ get the dispute evidence associated with the dispute ID (2/2)
    ✓ updates the dispute evidence associated with dispute ID
    ✓ injects the api version to the request path if provided

  Shopify#disputeFileUpload
    ✓ uploads a file to a dispute
    ✓ deletes a dispute evidence file

  Shopify#dispute
    ✓ gets a list disputes (1/2)
    ✓ gets a list disputes (2/2)
    ✓ gets a single dispute by its ID

  Shopify#draftOrder
    ✓ gets a list of draft orders (1/2)
    ✓ gets a list of draft orders (2/2)
    ✓ gets a count of all draft orders
    ✓ gets a single draft order by its ID (1/2)
    ✓ gets a single draft order by its ID (2/2)
    ✓ creates a new draft order
    ✓ updates a draft order
    ✓ deletes a draft order
    ✓ completes a draft order
    ✓ sends an invoice for a draft order

  Shopify#event
    ✓ gets a list of events (1/2)
    ✓ gets a list of events (2/2)
    ✓ gets a count of all events (1/2)
    ✓ gets a count of all events (2/2)
    ✓ gets a single event by its ID (1/2)
    ✓ gets a single event by its ID (2/2)

  Shopify#fulfillmentEvent
    ✓ gets a list of all fulfillments events for a fulfillment (1/2)
    ✓ gets a list of all fulfillments events for a fulfillment (2/2)
    ✓ gets a single fulfillment event by its ID
    ✓ create a fulfillment event
    ✓ updates a fulfillment event
    ✓ deletes a fulfillment event
    ✓ injects the api version to the request path if provided

  Shopify#fulfillmentOrder
    ✓ gets a list of fulfillment orders on a shop for a specific app
    ✓ gets a single fulfillment order by its ID
    ✓ cancels a fulfillment order
    ✓ marks a fulfillment order as incomplete (1/2)
    ✓ marks a fulfillment order as incomplete (2/2)
    ✓ gets a list of locations that a fulfillment order can move to
    ✓ moves a fulfillment order to a new location
    ✓ reschedules the fulfill_at time of a scheduled fulfillment order
    ✓ retrieves fulfillments associated with a fulfillment order

  Shopify#fulfillment-request
    ✓ sends a fulfillment request
    ✓ accepts a fulfillment request (1/2)
    ✓ accepts a fulfillment request (2/2)
    ✓ rejects a fulfillment request (1/2)
    ✓ rejects a fulfillment request (2/2)

  Shopify#fulfillmentService
    ✓ gets a list of all fulfillment services
    ✓ creates a new fulfillment service
    ✓ gets a single fulfillment service by its ID
    ✓ updates a fulfillment service
    ✓ deletes a fulfillment service

  Shopify#fulfillment
    ✓ gets a list of all fulfillments for an order (1/2)
    ✓ gets a list of all fulfillments for an order (2/2)
    ✓ gets a count of all fulfillments for an order (1/2)
    ✓ gets a count of all fulfillments for an order (2/2)
    ✓ gets a single fulfillment by its ID (1/2)
    ✓ gets a single fulfillment by its ID (2/2)
    ✓ creates a fulfillment for an order
    ✓ creates a fulfillment for one or many fulfillment orders
    ✓ updates a fulfillment
    ✓ completes a pending fulfillment
    ✓ opens a pending fulfillment
    ✓ cancels a fulfillment for a specific order ID
    ✓ cancels a fulfillment
    ✓ injects the api version to the request path if provided
    ✓ updates the tracking information for a fulfillment

  Shopify#giftCardAdjustment
    ✓ gets a list of all gift card adjustments
    ✓ gets a single gift card adjustment by its ID
    ✓ creates a new gift card adjustment

  Shopify#giftCard
    ✓ gets a list of all gift cards (1/2)
    ✓ gets a list of all gift cards (2/2)
    ✓ gets a single gift card by its ID
    ✓ gets a count of all gift cards (1/2)
    ✓ gets a count of all gift cards (2/2)
    ✓ creates a new gift card
    ✓ updates a gift card
    ✓ disables a gift card
    ✓ searches for gift cards matching a given query

  Shopify#inventoryItem
    ✓ gets a list of inventory items
    ✓ updates an existing inventory item
    ✓ gets an inventory item by its ID

  Shopify#inventoryLevel
    ✓ gets a list of inventory levels
    ✓ adjusts the inventory level for an inventory item at a location
    ✓ removes an inventory level from a location
    ✓ connects an inventory item to a location
    ✓ sets the inventory level for an inventory item at a location

  Shopify#location
    ✓ gets a list of all locations
    ✓ gets a single location by its ID
    ✓ gets a count of locations
    ✓ gets a list of inventory levels for a location (1/2)
    ✓ gets a list of inventory levels for a location (2/2)

  Shopify#marketingEvent
    ✓ gets a list of all marketing events (1/2)
    ✓ gets a list of all marketing events (2/2)
    ✓ gets a count of all marketing events
    ✓ gets a single marketing event by its ID
    ✓ creates a new marketing event
    ✓ updates a marketing event
    ✓ deletes a marketing event
    ✓ creates marketing engagements

  Shopify#metafield
    ✓ gets a list of metafields that belong to a store (1/2)
    ✓ gets a list of metafields that belong to a store (2/2)
    ✓ gets a count of metafields that belong to a store (1/2)
    ✓ gets a count of metafields that belong to a store (2/2)
    ✓ gets a single metafield by its ID (1/2)
    ✓ gets a single metafield by its ID (2/2)
    ✓ creates a new metafield for a store
    ✓ updates a metafield
    ✓ deletes a metafield

  Shopify#orderRisk
    ✓ create a new order risk for an order
    ✓ gets a list of all order risks from an order
    ✓ gets a single order risk by its ID
    ✓ updates an order risk
    ✓ deletes an order risk

  Shopify#order
    ✓ gets a list of all orders (1/2)
    ✓ gets a list of all orders (2/2)
    ✓ gets a single order by its ID (1/2)
    ✓ gets a single order by its ID (2/2)
    ✓ gets a count of all orders (1/2)
    ✓ gets a count of all orders (2/2)
    ✓ closes an order
    ✓ re-opens a closed order
    ✓ cancels an order (1/2)
    ✓ cancels an order (2/2)
    ✓ creates a new order
    ✓ updates an order
    ✓ deletes an order
    ✓ retrieves a list of fulfillment orders for a specific order

  Shopify#page
    ✓ gets a list of all pages (1/2)
    ✓ gets a list of all pages (2/2)
    ✓ gets a count of all pages (1/2)
    ✓ gets a count of all pages (2/2)
    ✓ gets a single page by its ID (1/2)
    ✓ gets a single page by its ID (2/2)
    ✓ creates a new page
    ✓ updates a page
    ✓ deletes a page

  Shopify#payment
    ✓ gets a list of payments on a particular checkout
    ✓ creates a new payment
    ✓ gets a single payment by its ID
    ✓ counts the number of payments attempted on a checkout

  Shopify#payout
    ✓ gets a list payouts (1/2)
    ✓ gets a list payouts (2/2)
    ✓ gets a single payout by its ID
    ✓ injects the api version to the request path if provided

  Shopify#policy
    ✓ gets a list of all policies (1/2)
    ✓ gets a list of all policies (2/2)

  Shopify#priceRule
    ✓ creates a new price rule
    ✓ updates a price rule
    ✓ gets a list of price rule objects (1/2)
    ✓ gets a list of price rule objects (2/2)
    ✓ gets a single price rule by its ID
    ✓ deletes a price rule

  Shopify#productImage
    ✓ gets a list of all product images for a product (1/2)
    ✓ gets a list of all product images for a product (2/2)
    ✓ gets a count of all product images (1/2)
    ✓ gets a count of all product images (2/2)
    ✓ gets a single product image by its ID (1/2)
    ✓ gets a single product image by its ID (2/2)
    ✓ creates a new product image
    ✓ updates a product image
    ✓ deletes a product image

  Shopify#productListing
    ✓ gets product listings published to an application (1/4)
    ✓ gets product listings published to an application (2/4)
    ✓ gets product listings published to an application (3/4)
    ✓ gets product listings published to an application (4/4)
    ✓ gets product IDs published to an application (1/2)
    ✓ gets product IDs published to an application (2/2)
    ✓ gets a count of products published to an application
    ✓ gets a specific product listing
    ✓ gets a specific product listing with presentment option
    ✓ creates a product listing (1/4)
    ✓ creates a product listing (2/4)
    ✓ creates a product listing (3/4)
    ✓ creates a product listing (4/4)
    ✓ deletes a product listing

  Shopify#productResourceFeedback
    ✓ creates a resource feedback
    ✓ gets a list of resource feedbacks

  Shopify#productVariant
    ✓ gets a list of all product variants for a product (1/4)
    ✓ gets a list of all product variants for a product (2/4)
    ✓ gets a list of all product variants for a product (3/4)
    ✓ gets a list of all product variants for a product (4/4)
    ✓ gets a count of all product variants
    ✓ gets a single product variant by its ID (1/4)
    ✓ gets a single product variant by its ID (2/4)
    ✓ gets a single product variant by its ID (3/4)
    ✓ gets a single product variant by its ID (4/4)
    ✓ creates a new product variant
    ✓ creates a new product variant with presentment option
    ✓ updates a product variant
    ✓ updates a product variant with presentment option
    ✓ deletes a product variant

  Shopify#product
    ✓ gets a list of all products (1/4)
    ✓ gets a list of all products (2/4)
    ✓ gets a list of all products (3/4)
    ✓ gets a list of all products (4/4)
    ✓ gets a count of all products (1/2)
    ✓ gets a count of all products (2/2)
    ✓ gets a single product by its ID (1/4)
    ✓ gets a single product by its ID (2/4)
    ✓ gets a single product by its ID (3/4)
    ✓ gets a single product by its ID (4/4)
    ✓ creates a new product
    ✓ creates a new product with presentment option
    ✓ updates a product
    ✓ updates a product with presentment option
    ✓ deletes a product

  Shopify#province
    ✓ gets a list of all provinces for a country (1/2)
    ✓ gets a list of all provinces for a country (2/2)
    ✓ gets a count of all provinces (1/2)
    ✓ gets a count of all provinces (2/2)
    ✓ gets a single province by its ID (1/2)
    ✓ gets a single province by its ID (2/2)
    ✓ updates a province

  Shopify#recurringApplicationCharge
    ✓ creates a recurring application charge
    ✓ gets a single recurring application charge by its ID (1/2)
    ✓ gets a single recurring application charge by its ID (2/2)
    ✓ gets a list of all recurring application charges (1/2)
    ✓ gets a list of all recurring application charges (2/2)
    ✓ activates a recurring application charge
    ✓ deletes a recurring application charge
    ✓ customizes a recurring application charge

  Shopify#redirect
    ✓ gets a list of all redirects (1/2)
    ✓ gets a list of all redirects (2/2)
    ✓ gets a count of all redirects (1/2)
    ✓ gets a count of all redirects (2/2)
    ✓ gets a single redirect by its ID (1/2)
    ✓ gets a single redirect by its ID (2/2)
    ✓ creates a new redirect
    ✓ updates a redirect
    ✓ deletes a redirect

  Shopify#refund
    ✓ gets a list of refunds for an order (1/2)
    ✓ gets a list of refunds for an order (2/2)
    ✓ gets a single refund by its ID (1/2)
    ✓ gets a single refund by its ID (2/2)
    ✓ calculates a refund
    ✓ creates a refund for an existing order

  Shopify#report
    ✓ gets a list of all reports (1/2)
    ✓ gets a list of all reports (2/2)
    ✓ gets a single report by its ID (1/2)
    ✓ gets a single report by its ID (2/2)
    ✓ creates a new report
    ✓ updates a report
    ✓ deletes a report

  Shopify#resourceFeedback
    ✓ creates a resource feedback
    ✓ gets a list of resource feedbacks

  Shopify#scriptTag
    ✓ gets a list of all script tags (1/2)
    ✓ gets a list of all script tags (2/2)
    ✓ gets a count of all script tags (1/2)
    ✓ gets a count of all script tags (2/2)
    ✓ gets a single script tag by its ID (1/2)
    ✓ gets a single script tag by its ID (2/2)
    ✓ creates a new script tag
    ✓ updates a script tag
    ✓ deletes a script tag

  Shopify#shippingZone
    ✓ gets a list of all shipping zones (1/2)
    ✓ gets a list of all shipping zones (2/2)

  Shopify#shop
    ✓ gets the configuration of the shop (1/2)
    ✓ gets the configuration of the shop (2/2)
    ✓ injects the api version to the request path if provided

  Shopify
    ✓ exports the constructor
    ✓ throws an error when required options missing or invalid
    ✓ makes the new operator optional
    ✓ allows the shop's 'myshopify.com' domain to be used as shopName
    ✓ adds the Authorization header when using apiKey and password
    ✓ adds the X-Shopify-Access-Token header when using accessToken
    ✓ instantiates the resources lazily
    ✓ allows to manually instantiate a resource
    ✓ has undefined callLimit and callGraphqlLimits values for the initial instance
    Shopify#request
      ✓ returns a RequestError when the request fails
      ✓ returns a TimeoutError when timeout expires (1/2) (116ms)
      ✓ returns a TimeoutError when timeout expires (2/2) (204ms)
      ✓ returns a ParseError when it fails to parse the response body
      ✓ returns an HTTPError when the server response code is not 2xx
      ✓ uses basic auth as intended
      ✓ builds the request body as intended (1/2)
      ✓ builds the request body as intended (2/2)
      ✓ updates callLimits if the relevant header exists (1/2)
      ✓ updates callLimits if the relevant header exists (2/2)
      ✓ emits the 'callLimits' event
      ✓ does not update callLimits if the relevant header is missing
      ✓ returns the subtree with root node at key
      ✓ returns the full response body when key is not provided
      ✓ returns an empty object when response body is empty
      ✓ returns pagination parameters when available (1/3)
      ✓ returns pagination parameters when available (2/3)
      ✓ returns pagination parameters when available (3/3)
      ✓ is throttled when the autoLimit option is set (205ms)
      ✓ honors the parseJson and stringifyJson options
      ✓ retries 429 errors from Shopify according to the header (1014ms)
      ✓ retries 429 errors from Shopify that don't have a header (4014ms)
      ✓ retries 429 errors from Shopify that have broken header values (1080ms)
      ✓ honors the maxRetries option (6023ms)
      ✓ does not retry 404 errors
      ✓ does not retry 422 errors that return an error string
      ✓ does not retry 422 errors that return an errors array
      ✓ does not retry 422 errors that return an errors object
      ✓ retries 500 errors from shopify (2009ms)
      ✓ retries network system level errors immediately (1009ms)
      ✓ retries a variety of errors in order (5424ms)
      ✓ calls hooks passed as options when accessing resources
      ✓ calls hooks passed as options when making raw requests
      ✓ calls the beforeRetry hook for retried requests (1008ms)
    Shopify#graphql
      ✓ returns a RequestError when the request fails
      ✓ returns an Error with GraphQL info if the request fails (1/2)
      ✓ returns an Error with GraphQL info if the request fails (2/2)
      ✓ returns a TimeoutError when timeout expires (1/2) (104ms)
      ✓ returns a TimeoutError when timeout expires (2/2) (204ms)
      ✓ returns a ParseError when it fails to parse the response body
      ✓ returns an HTTPError when the server response code is not 2xx
      ✓ uses basic auth as intended
      ✓ updates callGraphqlLimits if the extensions attribute exists
      ✓ emits the 'callGraphqlLimits' event
      ✓ does not update callGraphqlLimits if extensions is missing
      ✓ does not update callGraphqlLimits if throttleStatus is missing
      ✓ returns a valid response when using graphql endpoint (1/2)
      ✓ returns a valid response when using graphql endpoint (2/2)
      ✓ injects the api version to the request path if provided
      ✓ honors the parseJson and stringifyJson options
      ✓ does not retry errors from broken GraphQL queries
      ✓ retries 500 errors from Shopify (2011ms)
      ✓ retries timeout errors from Shopify (1908ms)
      ✓ retries network system level errors immediately (1007ms)
      ✓ retries GraphQL cost limit exceeded errors (1234ms)
      ✓ calls hooks passed as options when making graphql requests
      ✓ calls the beforeRetry hook for retried requests (1007ms)
      ✓ calls the beforeError hook for errors

  Shopify#smartCollection
    ✓ gets a list of all smart collections (1/2)
    ✓ gets a list of all smart collections (2/2)
    ✓ gets a count of all smart collections (1/2)
    ✓ gets a count of all smart collections (2/2)
    ✓ gets a single smart collection by its ID (1/2)
    ✓ gets a single smart collection by its ID (2/2)
    ✓ creates a new smart collection
    ✓ updates a smart collection
    ✓ sets the ordering type of products in a smart collection (1/2)
    ✓ sets the ordering type of products in a smart collection (2/2)
    ✓ deletes a smart collection
    ✓ retrieves a list of products in a smart collection (1/2)
    ✓ retrieves a list of products in a smart collection (2/2)

  Shopify#storefrontAccessToken
    ✓ creates a storefront access token
    ✓ deletes an existing/issued public access token
    ✓ gets a list of public access tokens

  Shopify#tenderTransaction
    ✓ gets a list of tender transactions (1/2)
    ✓ gets a list of tender transactions (2/2)

  Shopify#theme
    ✓ gets a list of all themes (1/2)
    ✓ gets a list of all themes (2/2)
    ✓ gets a single theme by its ID (1/2)
    ✓ gets a single theme by its ID (2/2)
    ✓ creates a new theme
    ✓ updates a theme
    ✓ deletes a theme

  Shopify#transaction
    ✓ gets a list of all transactions for an order (1/2)
    ✓ gets a list of all transactions for an order (2/2)
    ✓ gets a count of all transactions
    ✓ gets a single transaction by its ID (1/2)
    ✓ gets a single transaction by its ID (2/2)
    ✓ creates a new transaction

  Shopify#usageCharge
    ✓ creates a new usage charge
    ✓ gets a single usage charge by its ID (1/2)
    ✓ gets a single usage charge by its ID (2/2)
    ✓ gets a list of all usage charges (1/2)
    ✓ gets a list of all usage charges (2/2)

  Shopify#user
    ✓ gets a list of all users
    ✓ gets a single user by its ID
    ✓ gets the current logged-in user

  Shopify#webhook
    ✓ gets a list of all webhooks (1/2)
    ✓ gets a list of all webhooks (2/2)
    ✓ gets a count of all webhooks (1/2)
    ✓ gets a count of all webhooks (2/2)
    ✓ gets a single webhook by its ID (1/2)
    ✓ gets a single webhook by its ID (2/2)
    ✓ creates a new webhook
    ✓ updates a webhook
    ✓ deletes a webhook


  532 passing (32s)

----------------------------------|---------|----------|---------|---------|-------------------
File                              | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s 
----------------------------------|---------|----------|---------|---------|-------------------
All files                         |     100 |      100 |     100 |     100 |                   
 Shopify-api-node                 |     100 |      100 |     100 |     100 |                   
  index.js                        |     100 |      100 |     100 |     100 |                   
 Shopify-api-node/mixins          |     100 |      100 |     100 |     100 |                   
  base-child.js                   |     100 |      100 |     100 |     100 |                   
  base.js                         |     100 |      100 |     100 |     100 |                   
  shopify-payments-child.js       |     100 |      100 |     100 |     100 |                   
  shopify-payments.js             |     100 |      100 |     100 |     100 |                   
 Shopify-api-node/resources       |     100 |      100 |     100 |     100 |                   
  access-scope.js                 |     100 |      100 |     100 |     100 |                   
  api-permission.js               |     100 |      100 |     100 |     100 |                   
  application-charge.js           |     100 |      100 |     100 |     100 |                   
  application-credit.js           |     100 |      100 |     100 |     100 |                   
  article.js                      |     100 |      100 |     100 |     100 |                   
  asset.js                        |     100 |      100 |     100 |     100 |                   
  balance.js                      |     100 |      100 |     100 |     100 |                   
  blog.js                         |     100 |      100 |     100 |     100 |                   
  cancellation-request.js         |     100 |      100 |     100 |     100 |                   
  carrier-service.js              |     100 |      100 |     100 |     100 |                   
  checkout.js                     |     100 |      100 |     100 |     100 |                   
  collect.js                      |     100 |      100 |     100 |     100 |                   
  collection-listing.js           |     100 |      100 |     100 |     100 |                   
  collection.js                   |     100 |      100 |     100 |     100 |                   
  comment.js                      |     100 |      100 |     100 |     100 |                   
  country.js                      |     100 |      100 |     100 |     100 |                   
  currency.js                     |     100 |      100 |     100 |     100 |                   
  custom-collection.js            |     100 |      100 |     100 |     100 |                   
  customer-address.js             |     100 |      100 |     100 |     100 |                   
  customer-saved-search.js        |     100 |      100 |     100 |     100 |                   
  customer.js                     |     100 |      100 |     100 |     100 |                   
  deprecated-api-call.js          |     100 |      100 |     100 |     100 |                   
  discount-code-creation-job.js   |     100 |      100 |     100 |     100 |                   
  discount-code.js                |     100 |      100 |     100 |     100 |                   
  dispute-evidence.js             |     100 |      100 |     100 |     100 |                   
  dispute-file-upload.js          |     100 |      100 |     100 |     100 |                   
  dispute.js                      |     100 |      100 |     100 |     100 |                   
  draft-order.js                  |     100 |      100 |     100 |     100 |                   
  event.js                        |     100 |      100 |     100 |     100 |                   
  fulfillment-event.js            |     100 |      100 |     100 |     100 |                   
  fulfillment-order.js            |     100 |      100 |     100 |     100 |                   
  fulfillment-request.js          |     100 |      100 |     100 |     100 |                   
  fulfillment-service.js          |     100 |      100 |     100 |     100 |                   
  fulfillment.js                  |     100 |      100 |     100 |     100 |                   
  gift-card-adjustment.js         |     100 |      100 |     100 |     100 |                   
  gift-card.js                    |     100 |      100 |     100 |     100 |                   
  index.js                        |     100 |      100 |     100 |     100 |                   
  inventory-item.js               |     100 |      100 |     100 |     100 |                   
  inventory-level.js              |     100 |      100 |     100 |     100 |                   
  location.js                     |     100 |      100 |     100 |     100 |                   
  marketing-event.js              |     100 |      100 |     100 |     100 |                   
  metafield.js                    |     100 |      100 |     100 |     100 |                   
  order-risk.js                   |     100 |      100 |     100 |     100 |                   
  order.js                        |     100 |      100 |     100 |     100 |                   
  page.js                         |     100 |      100 |     100 |     100 |                   
  payment.js                      |     100 |      100 |     100 |     100 |                   
  payout.js                       |     100 |      100 |     100 |     100 |                   
  policy.js                       |     100 |      100 |     100 |     100 |                   
  price-rule.js                   |     100 |      100 |     100 |     100 |                   
  product-image.js                |     100 |      100 |     100 |     100 |                   
  product-listing.js              |     100 |      100 |     100 |     100 |                   
  product-resource-feedback.js    |     100 |      100 |     100 |     100 |                   
  product-variant.js              |     100 |      100 |     100 |     100 |                   
  product.js                      |     100 |      100 |     100 |     100 |                   
  province.js                     |     100 |      100 |     100 |     100 |                   
  recurring-application-charge.js |     100 |      100 |     100 |     100 |                   
  redirect.js                     |     100 |      100 |     100 |     100 |                   
  refund.js                       |     100 |      100 |     100 |     100 |                   
  report.js                       |     100 |      100 |     100 |     100 |                   
  resource-feedback.js            |     100 |      100 |     100 |     100 |                   
  script-tag.js                   |     100 |      100 |     100 |     100 |                   
  shipping-zone.js                |     100 |      100 |     100 |     100 |                   
  shop.js                         |     100 |      100 |     100 |     100 |                   
  smart-collection.js             |     100 |      100 |     100 |     100 |                   
  storefront-access-token.js      |     100 |      100 |     100 |     100 |                   
  tender-transaction.js           |     100 |      100 |     100 |     100 |                   
  theme.js                        |     100 |      100 |     100 |     100 |                   
  transaction.js                  |     100 |      100 |     100 |     100 |                   
  usage-charge.js                 |     100 |      100 |     100 |     100 |                   
  user.js                         |     100 |      100 |     100 |     100 |                   
  webhook.js                      |     100 |      100 |     100 |     100 |                   
----------------------------------|---------|----------|---------|---------|-------------------
I am package aedes .....

> aedes@0.48.1 test
> npm run lint && npm run unit && npm run test:typescript


> aedes@0.48.1 lint
> npm run lint:standard && npm run lint:typescript && npm run lint:markdown


> aedes@0.48.1 lint:standard
> standard --verbose | snazzy

I am package alexa-app .....

> alexa-app@5.0.0 test
> mocha "./test/*.spec.js" -r @babel/register



  Alexa
    app
      request
        without an audioPlayer intent
          AudioPlayer.PlaybackFinished
            ✓ should succeed and return empty object 
          AudioPlayer.PlaybackFailed
            ✓ should succeed and return empty object 
          AudioPlayer.PlaybackNearlyFinished
            ✓ should succeed and return empty object 
          AudioPlayer.PlaybackStarted
            ✓ should succeed and return empty object 
          AudioPlayer.PlaybackStopped
            ✓ should succeed and return empty object 
        with an audioPlayer intent
          ✓ includes the context object
          ✓ request includes AudioPlayer object
        response
          alexa directive response
            ✓ contains AudioPlayer directive array property
            ✓ audioPlayerPlay directive contains stream object
            ✓ audioPlayerStop directive
            ✓ audioPlayerClearQueue w/o clearBehavior arg
            ✓ audioPlayerClearQueue w/ clearBehavior arg
      request with AudioPlayer.PlaybackFinished type
        set PlaybackFinished event handler with play directive
          response
            ✓ with NO_AUDIO_PLAYER_EVENT_HANDLER_FOUND message
        set PlaybackFinished event handler with async response
          response
            ✓ with NO_AUDIO_PLAYER_EVENT_HANDLER_FOUND message

  Alexa
    app
      #request
        cards response
          with an intent request of airportInfoIntent
            intent handler with AccountLink called on res
              ✓ responds with a account link card
            with a missing required attribute
              of a known type
                ✓ adds no card response
              of an unknown type
                ✓ adds no card response
            intent handler with card and say function called on res
              ✓ responds with a speech and card using deprecated api
              ✓ responds with a speech and simple card
              ✓ responds with a speech and standard card with images
              ✓ responds with ask for permissions concent
              ✓ responds with a speech and no card because it was called with invalid info
            intent handler with multi-line card
              ✓ responds with a card keeping multi lines

  Alexa
    app
      instantiate app
        ✓ fails when alexa.app was called without the new keyword

  Alexa
    #alexa.request.slot
      ✓ get slot value if correct
      ✓ gets defaultValue if slot value is undefined
    app
      #customslot
        with a complete slot value object
          ✓ adds the slot value
        with an incomplete slot value object
          ✓ adds the slot value with default params
        with strings
          ✓ converts the string into a slot value
        with a mix of strings and objects
          ✓ assigns both properly

  Alexa
    app
      #request
        dialog object
          #dialogState
            ✓ returns an intent's dialogState
          #isStarted
            when an intent's dialogState is STARTED
              ✓ reports dialogState is STARTED
            when an intent's dialogState is not STARTED
              ✓ reports dialogState is not STARTED
            when an intent's dialogState is undefined
              ✓ reports dialogState is not STARTED
          #isInProgress
            when an intent's dialogState is IN_PROGRESS
              ✓ reports dialogState is IN_PROGRESS
            when an intent's dialogState is not IN_PROGRESS
              ✓ reports dialogState is not IN_PROGRESS
          #isCompleted
            when an intent's dialogState is COMPLETED
              ✓ reports dialogState is COMPLETED
            when an intent's dialogState is not COMPLETED
              ✓ reports dialogState is not COMPLETED
        dialog response
          request's intent has a dialogState of STARTED
            intent configured to delegate dialog to Alexa
              ✓ contains directive property with Dialog.Delegate directive object
              ✓ does not utilize intent's intentHandler
            intent is manually handling the dialog
              ✓ contains no directive properties
              ✓ utilizes intent's intentHandler
          request's intent has a dialogState of IN_PROGRESS
            intent configured to delegate dialog to Alexa
              ✓ contains directive property with Dialog.Delegate directive object
              ✓ does not utilize intent's intentHandler
            intent is manually handling the dialog
              ✓ contains no directive properties
              ✓ utilizes intent's intentHandler
          request's intent has a dialogState of COMPLETED
            intent configured to delegate dialog to Alexa
              ✓ contains no directive properties
              ✓ utilizes intent's intentHandler
            intent is manually handling the dialog
              ✓ contains no directive properties
              ✓ utilizes intent's intentHandler

  Alexa
    app
      #request
        directives response
          alexa directive response
            ✓ contains directive property with custom object
            ✓ clears directive property when clear is called

  Alexa
    app
      #request
        response
          with a request of Display.ElementSelected
            with no displayElementSelected handler
              outputSpeech
                ✓ responds with NO_DISPLAY_ELEMENT_SELECTED message
            with a matching intent handler
              outputSpeech
                ✓ handles reprompting correctly
                ✓ combines multiple reprompts?
                ✓ combines says into a larger response
                ✓ responds with expected message
                ✓ responds with expected message for promise
                ✓ handles error for promise
              requestToken
                ✓ handles reprompting correctly

  Alexa
    app
      #request generating error
        response
          ✓ fails with unhandled message: error.message.
          ✓ fails with unhandled message: "Unhandled exception:" message.
          ✓ fails with unhandled message: "Unhandled exception."
          ✓ fails with handled message: app.messages[e].

  Alexa
    app
      initialization
        ✓ sets the name of the app
        ✓ adds to alexa.apps
        defaults
          ✓ sets persistent session to true
          ✓ sets exhaustiveUtterances to false
    app without a name
      ✓ doesn't add the app to alexa.apps

  Alexa
    app
      #request
        response
          defaults
            ✓ responds with expected version attribute
            alexa response
              ✓ responds with expected alexa response defaults
          with an intent request of airportInfoIntent
            with no intent handler
              outputSpeech
                ✓ responds with NO_INTENT_FOUND message
            with a matching intent handler
              outputSpeech
                ✓ clears output when clear is called
                ✓ clears output when clear is called and say is then called
                ✓ combines says into a larger response
                ✓ responds with expected message
                ✓ responds with expected message for promise
                ✓ retrieves an intent confirmation status
                ✓ retrieves a slot value
                ✓ retrieves a slot confirmation status
                ✓ retrieves default slot value
                with a post method
                  ✓ invokes the post method after the intenthandler
                with a pre method
                  ✓ invokes the pre method before intenthandler
                  ✓ allows pre function to resolve wihout going through the intent handler
                when an intent's confirmationStatus is CONFIRMED
                  ✓ reports confirmation
                when an intent's confirmationStatus is not CONFIRMED
                  ✓ reports no confirmation
                when a slot's confirmationStatus is CONFIRMED
                  ✓ reports confirmation
                  ✓ can handle no resolutions
                when a slot's confirmationStatus is not CONFIRMED
                  ✓ reports no confirmation
                when a slot has matched resolutions
                  ✓ reports matched resolution
                  ✓ has a name for the resolution value
                  ✓ has an id for the resolution value
                  ✓ fallbacks to first resolution if index doesn't exist
                when a slot has non-matched resolutions
                  ✓ reports non-matched resolution
                  ✓ has no values for the resolution
                when fail is called
                  ✓ fails ungracefully
                  ✓ can clear failure in post
                when an exception occurs
                  ✓ reports failure
                when a response promise is rejected
                  ✓ reports failure
            with a manipulated intent request
              ✓ retrieves default slot value due to missing intent

  Alexa
    app
      #intent
        with schema
          ✓ assigns handler
          ✓ assigns name
          dialog
            ✓ assigns dialog
        without schema
          ✓ assigns handler
          ✓ assigns name

  Alexa
    app
      #request
        response
          with an intent request of launchIntent
            with no launch handler
              outputSpeech
                ✓ responds with NO_LAUNCH_FUNCTION message
            with a matching intent handler
              outputSpeech
                ✓ handles reprompting correctly
                ✓ combines multiple reprompts?
                ✓ combines says into a larger response
                ✓ responds with expected message
                ✓ responds with expected message for promise
                ✓ handles error for promise

  Alexa
    app
      #request
        response
          with a request of type GameEngine.InputHandlerEvent
            with no type handler
              outputSpeech
                ✓ responds with INVALID_REQUEST_TYPE message
            with a matching type handler
              outputSpeech
                ✓ responds with expected message
                ✓ responds with expected message for promise

  Alexa
    app
      request
        with a playback controller command
          ✓ should not return speech output
          ✓ should call the matching playbackController handler
          ✓ should not call other playbackController handlers
        without a playback controller command
          ✓ should not call the playbackController handler

  Alexa
    app
      airportInfoIntent request
        route request to welcome intent
          ✓ output speech contains text from both intents
        route request to undefined intent
          ✓ output speech contains NO_INTENT_FOUND response
        route request to launch function
          ✓ output speech contains text from launch callback
        route request to custom request handler
          ✓ output speech contains text from sayHello custom request handler
          ✓ appends a failure if no such custom request exists
        route request to NextCommandIssued handler of playbackController through PlaybackNearlyFinished
          ✓ output speech contains text from airportInfoIntent
          ✓ and AudioPlayer directive in response from PlaybackNearlyFinished AudioPlayer event handler
        chain several routes to count from one to five
          ✓ output speech contains text from airportInfoIntent, oneIntent, twoIntent, threeIntent, fourIntent and fiveIntent

  Alexa
    app
      #schema
        ✓ calls the intent schema as the default
      #schemas.intent
        with a minimum intent
          ✓ contains no slots
        with empty slots
          ✓ contains no slots
        with a slot
          ✓ includes slots
        with multiple intents
          ✓ generates the expected schema
      #schemas.skillBuilder
        with a minimum intent
          ✓ contains no slots
        with empty slots
          ✓ contains no slots
        with a slot
          ✓ includes slots
        with simple utterances
          ✓ contains utterances
        with multiple intents
          ✓ generates the expected schema
        with a custom slot
          ✓ includes custom slots
          with multiple custom slots
            ✓ includes all custom slots
      #schemas.askcli
        the invocation name
          when no invocation name is set
            ✓ should use the app name
          when the app's invocationName is set
            ✓ should use the invocationName
            when a custom invocation name is passed in
              ✓ should override the app's setting
        with a minimum intent
          ✓ contains no slots
        with empty slots
          ✓ contains no slots
        with a slot
          ✓ includes slots
        with simple utterances
          ✓ contains utterances
        with multiple intents
          ✓ generates the expected schema
        with a custom slot
          ✓ includes custom slots
          with multiple custom slots
            ✓ includes all custom slots

  Alexa
    app
      sessionEnded #request
        response
          ✓ invokes a globally defined sessionEnded function
          ✓ returns a response without a defined sessionEnded function

  Alexa
    app
      #request
        intent handler with shouldEndSession = false
          ✓ reponds with expected context applicationId
          ✓ responds with a session object
          ✓ has a res object with expected properties
          ✓ does not update session properties without explicit set
          ✓ does not update session properties when clearing non-existant attribute
          ✓ updates session properties with explicit set
      #response
        intent handler with shouldEndSession = false
          ✓ responds with an empty session object after clearing session
        intent handler without shouldEndSession
          ✓ responds without shouldEndSession
      #response
        intent handler with shouldEndSession = false
          ✓ responds with session object missing a cleared session variable
      #response
        intent handler with shouldEndSession = false
          ✓ responds with a copied session object
      #response
        intent handler with shouldEndSession = false
          ✓ responds reprompted message on shouldEndSession
      #request
        request without session
          ✓ responds with an empty session object
      #request
        request without session
          ✓ session.clear() should fail the app
      #request
        request without session
          ✓ session.get(key) should fail the app
      #request
        request with session
          ✓ session.get(key) should not throw if attribute is not present
      #request
        request with session
          ✓ should respond to changes to request.type() performed in app.pre
      #request
        request with session
          ✓ session.get(key) should not throw if attribute is not present
      #request
        request with session
          ✓ session.clear() should not throw
      #request
        request with session and attributes
          ✓ session.clear() should not throw
      #request
        request without session
          trying to get session variable
            ✓ it fails with NO_SESSION message
          trying to set session variable
            ✓ it fails with NO_SESSION message
      intent request with malformed session
        ✓ responds a valid session object
      update session in post()
        ✓ responds with updated session object

  Alexa
    app
      unknown type #request
        response
          ✓ invokes a globally defined error function that throws an error
          ✓ swallows uncaught errors without a message in the globally defined error function
          ✓ responds with a spoken message for uncaught errors in the globally defined error function
          ✓ responds with a spoken message for uncaught errors in the globally defined error function and resolves
          ✓ responds with a spoken message for uncaught errors in the globally defined error function and fails
          ✓ fails with not a valid request

  Alexa
    app
      #utterances
        ✓ generates expected list of sample utterances

  Alexa
    app
      #express fails when missing required field
        ✓ throws error on missing express app and express router
      #express warns when redundant param is passed
        1) warns on given both params 'expressApp' and 'router'
      #express with default options
        2) "before each" hook for "returns a response for a valid request"
      #express with debug set to true
        3) "before each" hook for "returns debug utterances"
      #express with debug set to true and has empty intents
        4) "before each" hook for "returns no utterances"
      #express with debug set to false
        5) "before each" hook for "cannot dump debug schema"
      #express with pre and post functions
        6) "before each" hook for "invokes pre and post functions"
      #express with debug and checkCert=true
        7) "before each" hook for "requires a cert header"

  Alexa
    app
      #handler
        ✓ calls context.succeed on success
        ✓ calls context.fail on error
      #lambda
        ✓ returns the default handler

  Utils
    #normalizeApiPath
      ✓ correctly normalizes alexa into /alexa
      ✓ correctly normalizes /alexa into /alexa
      ✓ correctly normalizes //alexa into /alexa
      ✓ correctly normalizes ///alexa into /alexa
      ✓ correctly normalizes alexa/ into /alexa/
      ✓ correctly normalizes alexa// into /alexa/
      ✓ correctly normalizes alexa/// into /alexa/
      ✓ correctly normalizes /alexa/ into /alexa/
      ✓ correctly normalizes //alexa// into /alexa/
      ✓ correctly normalizes ///alexa/// into /alexa/
      ✓ correctly normalizes ///api///alexa/// into /api/alexa/

  SSML
    #conversion
      convert to SSML
        plain string to SSML conversion
          ✓ should wrap a plain string in <speak> tags
          ✓ should wrap a plain string in <speak> tags
          ✓ should wrap a plain string in <speak> tags
        strings with embedded SSML tags
          ✓ should wrap these strings in <speak> tags
          ✓ should wrap these strings in <speak> tags
          ✓ should wrap these strings in <speak> tags
          ✓ should wrap these strings in <speak> tags
          ✓ should wrap these strings in <speak> tags
        strings appended to current SSML string
          ✓ should append prior to the trailing </speak> tag
        SSML strings without embedded SSML tags appended to current SSML string
          ✓ should append prior to the trailing </speak> tag
        SSML strings with embedded SSML tags appended to current SSML string
          ✓ should append prior to the trailing </speak> tag
    #cleanse
      cleanse SSML
        cleanse simple SSML
          ✓ should remove <speak> tags
          ✓ should remove <speak> tags
          ✓ should remove <speak> tags
        cleanse SSML with embedded tags
          ✓ should remove <speak> and embedded <audio> SSML tags
          ✓ should remove <speak> and embedded <break> SSML tags
          ✓ should remove <speak> but not embedded <p> SSML/HTML tags
          ✓ should remove <speak> and embedded <phoneme> tags
          ✓ should remove <speak> and embedded <s> SSML tags
          ✓ should remove <speak> and embedded <say-as> tags
          ✓ should remove <speak> and embedded <w> SSML tags
          ✓ should remove <speak> and embedded SSML/non-HTML tags, leaving other tags
          ✓ should not truncate spaces before periods
          ✓ should not truncate multiple line breaks
          ✓ but should truncate whitespaces and tabs around line breaks


  221 passing (280ms)
  7 failing

  1) Alexa
       app
         #express warns when redundant param is passed
           warns on given both params 'expressApp' and 'router':
     TypeError: setPrototypeOf is not a function
      at Function.module.exports [as Router] (node_modules/express/lib/router/index.js:51:3)
      at Context.Router (test/alexa_integration_express.spec.js:55:27)
      at processImmediate (node:internal/timers:466:21)

  2) Alexa
       app
         #express with default options
           "before each" hook for "returns a response for a valid request":
     TypeError: setPrototypeOf is not a function
      at new module.exports (node_modules/express/lib/router/index.js:51:3)
      at Function.lazyrouter (node_modules/express/lib/application.js:139:20)
      at Function.use (node_modules/express/lib/application.js:214:8)
      at alexa.app.use [as express] (index.js:897:14)
      at Context.express (test/alexa_integration_express.spec.js:65:17)
      at processImmediate (node:internal/timers:466:21)

  3) Alexa
       app
         #express with debug set to true
           "before each" hook for "returns debug utterances":
     TypeError: setPrototypeOf is not a function
      at new module.exports (node_modules/express/lib/router/index.js:51:3)
      at Function.lazyrouter (node_modules/express/lib/application.js:139:20)
      at Function.app.<computed> [as get] (node_modules/express/lib/application.js:479:10)
      at alexa.app.get [as express] (index.js:876:14)
      at Context.express (test/alexa_integration_express.spec.js:122:17)
      at processImmediate (node:internal/timers:466:21)

  4) Alexa
       app
         #express with debug set to true and has empty intents
           "before each" hook for "returns no utterances":
     TypeError: setPrototypeOf is not a function
      at new module.exports (node_modules/express/lib/router/index.js:51:3)
      at Function.lazyrouter (node_modules/express/lib/application.js:139:20)
      at Function.app.<computed> [as get] (node_modules/express/lib/application.js:479:10)
      at alexa.app.get [as express] (index.js:876:14)
      at Context.express (test/alexa_integration_express.spec.js:190:17)
      at processImmediate (node:internal/timers:466:21)

  5) Alexa
       app
         #express with debug set to false
           "before each" hook for "cannot dump debug schema":
     TypeError: setPrototypeOf is not a function
      at Function.module.exports [as Router] (node_modules/express/lib/router/index.js:51:3)
      at Context.Router (test/alexa_integration_express.spec.js:209:30)
      at processImmediate (node:internal/timers:466:21)

  6) Alexa
       app
         #express with pre and post functions
           "before each" hook for "invokes pre and post functions":
     TypeError: setPrototypeOf is not a function
      at new module.exports (node_modules/express/lib/router/index.js:51:3)
      at Function.lazyrouter (node_modules/express/lib/application.js:139:20)
      at Function.use (node_modules/express/lib/application.js:214:8)
      at alexa.app.use [as express] (index.js:897:14)
      at Context.express (test/alexa_integration_express.spec.js:230:17)
      at processImmediate (node:internal/timers:466:21)

  7) Alexa
       app
         #express with debug and checkCert=true
           "before each" hook for "requires a cert header":
     TypeError: setPrototypeOf is not a function
      at new module.exports (node_modules/express/lib/router/index.js:51:3)
      at Function.lazyrouter (node_modules/express/lib/application.js:139:20)
      at Function.app.<computed> [as get] (node_modules/express/lib/application.js:479:10)
      at alexa.app.get [as express] (index.js:876:14)
      at Context.express (test/alexa_integration_express.spec.js:255:17)
      at processImmediate (node:internal/timers:466:21)



I am package arraybuffer-loader .....

> arraybuffer-loader@1.0.8 test
> npm-run-all test-browser test-node


> arraybuffer-loader@1.0.8 test-browser
> karma start --single-run


START:
[34mℹ[39m [90m｢wdm｣[39m: Hash: [1m9d2c943b68425fd58dd0[39m[22m
Version: webpack [1m4.46.0[39m[22m
Time: [1m50[39m[22mms
Built at: 04/12/2023 [1m12:08:14 PM[39m[22m
[34mℹ[39m [90m｢wdm｣[39m: Compiled successfully.
[34mℹ[39m [90m｢wdm｣[39m: Compiling...
[34mℹ[39m [90m｢wdm｣[39m: Failed to compile.
[32m12 04 2023 12:08:15.433:INFO [karma-server]: [39mKarma v4.4.1 server started at http://0.0.0.0:9876/
[32m12 04 2023 12:08:15.434:INFO [launcher]: [39mLaunching browsers ChromeHeadless with concurrency 1
[32m12 04 2023 12:08:15.452:INFO [launcher]: [39mStarting browser ChromeHeadless
[91m12 04 2023 12:08:15.455:ERROR [launcher]: [39mNo binary for ChromeHeadless browser on your platform.
  Please, set "CHROME_BIN" env variable.

Finished in 0 secs / 0 secs @ 12:08:15 GMT+0000 (Coordinated Universal Time)

I am package base .....

> base@3.0.0 test
> mocha



  constructor
    ✓ should return an instance of Base
    ✓ should "visit" over an object to extend the instance
    ✓ should map "visit" over an array to extend the instance
    ✓ should set options passed as the second argument
    ✓ should merge options throughout the inheritance chain
    ✓ should set isApp on the instance

  static properties
    ✓ should expose `.use` method
    ✓ should extend static properties
    .use
      ✓ should use a globally loaded plugin through the static use method
      ✓ should use a globally loaded plugin through the static use method with namespace
      ✓ should use different globally installed plugins when using different namespaces

  extend prototype methods
    ✓ should extend the prototype of the given Ctor
    ✓ should expose `prototype.set` method
    ✓ should expose `prototype.get` method
    ✓ should expose `prototype.del` method
    ✓ should expose `prototype.visit` method
    ✓ should expose `prototype.define` method
    ✓ should add prototype methods to the given Ctor

  instance properties
    ✓ should expose the options property
    ✓ should expose the cache property

  prototype methods
    .use
      ✓ should expose a .use method
      ✓ should call the function passed to `use`
      ✓ should expose the app instance
      ✓ should expose the app instance as "this"
      ✓ should run a plugin multiple times
      ✓ should not run a plugin more than once when a plugin name is given
    when `isRegistered` is used
      ✓ should not call a plugin more than once on the same instance
      ✓ should not register a plugin when `false` is passed as the 2nd arg
      ✓ should not call a plugin more than once on the same instance
    .define
      ✓ should define a key-value pair on the instance
      ✓ should define an own property
      ✓ should define a non-emumerable property
      ✓ should multiple properties
    .set
      ✓ should set a key-value pair on the instance
      ✓ should set nested property
      ✓ should set a nested property with the key as an array
      ✓ should set an object on the instance
    .get
      ✓ should get a property from the instance
      ✓ should get a nested property from the instance
      ✓ should get a property using an array
      ✓ should get a property using an array of path segments
    .has
      ✓ should work with namespaces
      ✓ should check for a property from the instance
      ✓ should check for a nested property from the instance
      ✓ should check for a property using an array
      ✓ should check for a property using a list of arguments
    .visit
      ✓ should visit an object with the given method
      ✓ should visit an array with the given method
    .del
      ✓ should remove a property
      ✓ should remove an array of properties

  namespaces
    constructor
      ✓ should expose `namespace`
      ✓ should extend the given Ctor with static methods
    prototype methods
      set
        ✓ should set a key-value pair on the instance
        ✓ should set an object on the instance
      get
        ✓ should get a property from the instance
        ✓ should visit an object with the given method
        ✓ should visit an array with the given method
      del
        ✓ should remove a property

  .base
    ✓ should set a `base` property on the instance
    ✓ should use `parent` to set app.base

  .is
    ✓ should set a name prefixed with `is` on the instance
    ✓ should remove isApp when another type is set

  events
    ✓ should emit and listen for events
    ✓ should emit set
    ✓ should emit get
    ✓ should emit del
    ✓ should emit when a named plugin is registered the first time


  67 passing (39ms)

I am package bash-match .....

> bash-match@1.0.2 test
> mocha

I am package binary-mirror-config .....

> binary-mirror-config@2.9.1 test
> npm run lint && egg-bin test


> binary-mirror-config@2.9.1 lint
> eslint test index.js



  test/index.test.js
    ✔ should mirrors exists
    failure
      ✔ should fail (611ms)
    success
      ✔ should work
canvas@undefined download from binary mirror: {"module_name":"canvas","module_path":"build/Release","host":"https://cdn.npmmirror.com/binaries/canvas","remote_path":"v{version}","package_name":"{module_name}-v{version}-{node_abi}-{platform}-{libc}-{arch}.tar.gz"}
    method test
canvas@undefined download from binary mirror: {"host":"https://cdn.npmmirror.com/binaries/canvas"}
      ✔ should work (682ms)
sqlite3@undefined download from binary mirror: {"module_name":"node_sqlite3","module_path":"./lib/binding/napi-v{napi_build_version}-{platform}-{libc}-{arch}","host":"https://cdn.npmmirror.com/binaries/sqlite3","remote_path":"v{version}","package_name":"napi-v{napi_build_version}-{platform}-{libc}-{arch}.tar.gz","napi_versions":[3,6]}
      ✔ should work with sqlite3
      modify file
cwebp-bin@8.0.0 download from mirrors: {"https://raw.githubusercontent.com/imagemin/cwebp-bin":"https://cdn.npmmirror.com/binaries/cwebp-bin","https://raw.github.com/imagemin/cwebp-bin":"https://cdn.npmmirror.com/binaries/cwebp-bin"}, changed file: /data/js-variants/multee/VariantsPureDep/binary-mirror-config/variant_files/binary-mirror-config/test/fixtures/cwebp-bin/lib/index.js
cwebp-bin@8.0.0 download from mirrors: {"https://raw.githubusercontent.com/imagemin/cwebp-bin":"https://cdn.npmmirror.com/binaries/cwebp-bin","https://raw.github.com/imagemin/cwebp-bin":"https://cdn.npmmirror.com/binaries/cwebp-bin"}, changed file: /data/js-variants/multee/VariantsPureDep/binary-mirror-config/variant_files/binary-mirror-config/test/fixtures/cwebp-bin/lib/install.js
        ✔ should work with cwebp-bin


  6 passing (1s)

[mochawesome] Report JSON saved to /data/js-variants/multee/VariantsPureDep/binary-mirror-config/variant_files/binary-mirror-config/node_modules/.mochawesome-reports/mochawesome.json

[mochawesome] Report HTML saved to /data/js-variants/multee/VariantsPureDep/binary-mirror-config/variant_files/binary-mirror-config/node_modules/.mochawesome-reports/mochawesome.html

I am package bitcoinjs-lib .....

> bitcoinjs-lib@6.1.0 test
> npm run build && npm run format:ci && npm run lint && npm run nobuild:coverage


> bitcoinjs-lib@6.1.0 build
> npm run clean && tsc -p ./tsconfig.json && npm run formatjs


> bitcoinjs-lib@6.1.0 clean
> rimraf src

I am package body-parser .....

> body-parser@1.20.1 test
> mocha --require test/support/env --reporter spec --check-leaks --bail test/

I am package bpmn-engine .....

> bpmn-engine@15.1.2 test
> mocha -R dot



  ........................................................
  ........................................................
  ........................................................
  ........................................................
  ........................................................
  ........................................................
  ........................................................
  ........................................................
  ........................................................
  .............................

  533 passing (5s)


> bpmn-engine@15.1.2 posttest
> eslint . --cache && npm run toc


> bpmn-engine@15.1.2 toc
> node scripts/generate-api-toc ./docs/API.md,./docs/Examples.md

I am package cache-base .....

> cache-base@4.0.2 test
> nyc --reporter=text --reporter=html mocha



  custom property
    constructor:
      ✓ should create an instance of Cache
      ✓ should set 
    get/set:
      set() - add:
        ✓ should set a new property with the given value
      set() - update:
        ✓ should update an existing property with the given value
        ✓ should get the given property
    .set()
      ✓ should set a value
      ✓ should set properties on the `data` object
      ✓ should allow an object to be set directly
      ✓ should set nested properties on the `data` object
      ✓ should return the instance
      ✓ should be chainable
      ✓ should return undefined when not set
    .get()
      ✓ should otherwise return the value

  events
    set
      ✓ should emit a "set" event
      ✓ should emit the key with "set" events
      ✓ should emit the value with "set" events
    get
      ✓ should emit a get event
      ✓ should emit the key with "get" events
      ✓ should emit the value with "get" events
    del
      ✓ should emit a del event
      ✓ should emit the key with "del" events
      ✓ should emit each deleted key when multiple properties are deleted

  cache-base
    constructor:
      ✓ should create an instance of Cache
      ✓ should set values passed on the ctor
    prime
      ✓ should prime a property on the cache with the given value
      ✓ should not prime a property if it already exists
      ✓ should prime an object
    default
      ✓ should set a default value on cache.defaults
      ✓ should not set a default value on the cache object
      ✓ should be overridden when values are set
      ✓ should not set a default if it already exists
      ✓ should take an object
      ✓ should take an array of objects
      ✓ should return a value from cache.defaults when only the key is passed
      ✓ should return the default value with `.get()`
    set
      ✓ should set a value
      ✓ should set properties on `app.cache` when defined as key-value pairs
      ✓ should set properties on `app.cache` when defined as as an object
      ✓ should set nested properties on the `app.cache`
      ✓ should be chainable
      ✓ should return undefined when not set
    get
      ✓ should return undefined when no set
      ✓ should get a value
      ✓ should get a nested property value
      ✓ should support passing key as an array
    union
      ✓ should union a string value
      ✓ should union multiple string values
      ✓ should union multiple arrays
      ✓ should union strings and arrays
      ✓ should union nested string values
      ✓ should union and uniquify arrays
    has
      ✓ should return true if cache has a value for the given key
      ✓ should work with escaped keys
      ✓ should return true if a nested key value on the cache
    hasOwn
      ✓ should return true if a cache has own key
      ✓ should work with escaped keys
      ✓ should return true if a nested key exists `.hasOwn()` on the cache
    del
      ✓ should delete a property from the cache
      ✓ should delete all property from the cache when no key is passed
    keys
      ✓ should return all enumerable property names from the cache
    size
      ✓ should return the length of cache.keys


  61 passing (44ms)

----------|----------|----------|----------|----------|-------------------|
File      |  % Stmts | % Branch |  % Funcs |  % Lines | Uncovered Line #s |
----------|----------|----------|----------|----------|-------------------|
All files |    90.67 |    82.35 |      100 |    98.51 |                   |
 index.js |    90.67 |    82.35 |      100 |    98.51 |               173 |
----------|----------|----------|----------|----------|-------------------|
I am package caching-transform .....

> caching-transform@4.0.0 pretest
> xo


> caching-transform@4.0.0 test
> npm run -s tests-only

I am package comedy .....

> comedy@2.1.7 test
> cross-env TS_NODE_FILES=true node --experimental-worker node_modules/mocha/bin/_mocha -R spec --recursive --timeout 20000 --require ts-node/register --compilers ts:typescript

I am package compression .....

> compression@1.7.4 test
> mocha --check-leaks --reporter spec --bail



  compression()
    ✔ should skip HEAD
    ✔ should skip unknown accept-encoding
    ✔ should skip if content-encoding already set
    ✔ should set Vary
    ✔ should set Vary even if Accept-Encoding is not set
    ✔ should not set Vary if Content-Type does not pass filter
    ✔ should set Vary for HEAD request
    ✔ should transfer chunked
    ✔ should remove Content-Length for chunked
    ✔ should work with encoding arguments
    ✔ should allow writing after close
    ✔ should back-pressure when compressed
    ✔ should back-pressure when uncompressed
    ✔ should transfer large bodies
    ✔ should transfer large bodies with multiple writes
    threshold
      ✔ should not compress responses below the threshold size
      ✔ should compress responses above the threshold size
      ✔ should compress when streaming without a content-length
      ✔ should not compress when streaming and content-length is lower than threshold
      ✔ should compress when streaming and content-length is larger than threshold
      ✔ should handle writing hex data
      ✔ should consider res.end() as 0 length
      ✔ should work with res.end(null)
    when "Accept-Encoding: gzip"
      ✔ should respond with gzip
      ✔ should return false writing after end
    when "Accept-Encoding: deflate"
      ✔ should respond with deflate
    when "Accept-Encoding: gzip, deflate"
      ✔ should respond with gzip
    when "Accept-Encoding: deflate, gzip"
      ✔ should respond with gzip
    when "Cache-Control: no-transform" response header
      ✔ should not compress response
      ✔ should not set Vary headerh
    .filter
      ✔ should be a function
      ✔ should return false on empty response
      ✔ should return true for "text/plain"
      ✔ should return false for "application/x-bogus"
    res.flush()
      ✔ should always be present
      ✔ should flush the response
      ✔ should flush small chunks for gzip
      ✔ should flush small chunks for deflate


  38 passing (233ms)

I am package connect .....

> connect@3.7.0 test
> mocha --require test/support/env --reporter spec --bail --check-leaks test/



  app.listen()
    ✔ should wrap in an http.Server

  app.use()
    ✔ should not obscure FQDNs
    with a connect app
      ✔ should ignore FQDN in search
      ✔ should ignore FQDN in path
      ✔ should adjust FQDN req.url
      ✔ should adjust FQDN req.url with multiple handlers
      ✔ should adjust FQDN req.url with multiple routed handlers

  app.use()
    ✔ should match all paths with "/"
    ✔ should match full path
    ✔ should match left-side of path
    ✔ should match up to dot
    ✔ should not match shorter path
    ✔ should not end match in middle of component
    ✔ should be case insensitive (lower-case route, mixed-case request)
    ✔ should be case insensitive (mixed-case route, lower-case request)
    ✔ should be case insensitive (mixed-case route, mixed-case request)
    ✔ should ignore fn.arity > 4
    with a connect app
      ✔ should mount
      ✔ should retain req.originalUrl
      ✔ should adjust req.url
      ✔ should strip trailing slash
      ✔ should set .route
      ✔ should not add trailing slash to req.url
    with a node app
      ✔ should mount
    error handling
      ✔ should send errors to airty 4 fns
      ✔ should skip to non-error middleware
      ✔ should start at error middleware declared after error
      ✔ should stack error fns
      ✔ should invoke error stack even when headers sent

  app
    ✔ should inherit from event emitter
    ✔ should work in http.createServer
    ✔ should be a callable function
    ✔ should invoke callback if request not handled
    ✔ should invoke callback on error
    ✔ should work as middleware
    ✔ should escape the 500 response body
    404 handler
      ✔ should escape the 404 response body
      ✔ shoud not fire after headers sent
      ✔ shoud have no body for HEAD
    error handler
      ✔ should have escaped response body
      ✔ should use custom error code
      ✔ should keep error statusCode
      ✔ shoud not fire after headers sent
      ✔ shoud have no body for HEAD


  44 passing (176ms)

I am package cordova-common .....

> cordova-common@5.0.0-dev test
> npm run lint && npm run cover


> cordova-common@5.0.0-dev lint
> eslint .


> cordova-common@5.0.0-dev cover
> nyc npm run test:unit

I am package cordova-js .....

> cordova-js@7.0.0-dev pretest
> npm run build:test


> cordova-js@7.0.0-dev build:test
> node build-tools/test-build pkg/cordova.test.js


> cordova-js@7.0.0-dev test
> npm run lint && karma start


> cordova-js@7.0.0-dev lint
> eslint --ignore-path .gitignore .

[32m12 04 2023 12:13:00.922:INFO [karma-server]: [39mKarma v6.3.20 server started at http://localhost:9876/
[32m12 04 2023 12:13:00.925:INFO [launcher]: [39mLaunching browsers ChromeHeadless with concurrency unlimited
[32m12 04 2023 12:13:00.932:INFO [launcher]: [39mStarting browser ChromeHeadless
[91m12 04 2023 12:13:00.973:ERROR [launcher]: [39mCannot start ChromeHeadless
	/data/js-variants/multee/VariantsPureDep/cordova-js/variant_files/cordova-js/node_modules/puppeteer/.local-chromium/linux-901912/chrome-linux/chrome: error while loading shared libraries: libatk-1.0.so.0: cannot open shared object file: No such file or directory

[91m12 04 2023 12:13:00.974:ERROR [launcher]: [39mChromeHeadless stdout: 
[91m12 04 2023 12:13:00.974:ERROR [launcher]: [39mChromeHeadless stderr: /data/js-variants/multee/VariantsPureDep/cordova-js/variant_files/cordova-js/node_modules/puppeteer/.local-chromium/linux-901912/chrome-linux/chrome: error while loading shared libraries: libatk-1.0.so.0: cannot open shared object file: No such file or directory

[32m12 04 2023 12:13:00.976:INFO [launcher]: [39mTrying to start ChromeHeadless again (1/2).
[91m12 04 2023 12:13:00.985:ERROR [launcher]: [39mCannot start ChromeHeadless
	/data/js-variants/multee/VariantsPureDep/cordova-js/variant_files/cordova-js/node_modules/puppeteer/.local-chromium/linux-901912/chrome-linux/chrome: error while loading shared libraries: libatk-1.0.so.0: cannot open shared object file: No such file or directory

[91m12 04 2023 12:13:00.985:ERROR [launcher]: [39mChromeHeadless stdout: 
[91m12 04 2023 12:13:00.986:ERROR [launcher]: [39mChromeHeadless stderr: /data/js-variants/multee/VariantsPureDep/cordova-js/variant_files/cordova-js/node_modules/puppeteer/.local-chromium/linux-901912/chrome-linux/chrome: error while loading shared libraries: libatk-1.0.so.0: cannot open shared object file: No such file or directory

[32m12 04 2023 12:13:00.987:INFO [launcher]: [39mTrying to start ChromeHeadless again (2/2).
[91m12 04 2023 12:13:00.994:ERROR [launcher]: [39mCannot start ChromeHeadless
	/data/js-variants/multee/VariantsPureDep/cordova-js/variant_files/cordova-js/node_modules/puppeteer/.local-chromium/linux-901912/chrome-linux/chrome: error while loading shared libraries: libatk-1.0.so.0: cannot open shared object file: No such file or directory

[91m12 04 2023 12:13:00.995:ERROR [launcher]: [39mChromeHeadless stdout: 
[91m12 04 2023 12:13:00.995:ERROR [launcher]: [39mChromeHeadless stderr: /data/js-variants/multee/VariantsPureDep/cordova-js/variant_files/cordova-js/node_modules/puppeteer/.local-chromium/linux-901912/chrome-linux/chrome: error while loading shared libraries: libatk-1.0.so.0: cannot open shared object file: No such file or directory

[91m12 04 2023 12:13:00.997:ERROR [launcher]: [39mChromeHeadless failed 2 times (cannot start). Giving up.
I am package cordova-node-xcode .....

> xcode@3.0.2-dev test
> npm run cover


> xcode@3.0.2-dev cover
> nyc npm run test:unit


> xcode@3.0.2-dev test:unit
> nodeunit test/parser test


[1mbuild-config[22m
✔ should parse the build config section
✔ should read a decimal value correctly
✔ should read an escaped value correctly

[1mcomments[22m
✔ should ignore comments outside the main object

[1mdotsInNames[22m
✔ should parse com.apple.BackgroundModes

[1mfile-references[22m
✔ should have a PBXFileReference section

[1mhash[22m
✔ should have the top-line comment in place
✔ should parse a numeric attribute
✔ should parse an empty object
✔ should split out properties and comments
✔ should parse non-commented hash things

[1mheader-search[22m
✔ should read a decimal value correctly

[1msection[22m
✔ should have a PBXTargetDependency section
✔ should have the right child of PBXTargetDependency section
✔ should have the right properties on the dependency

[1msection-entries[22m
✔ should have a PBXVariantGroup section
✔ should have two children for PBXVariantGroup
✔ should store quote-surround values correctly

[1msection-split[22m
✔ should have a PBXTargetDependency section
✔ should have the right child of PBXTargetDependency section
✔ should have the right properties on the dependency
✔ should merge two PBXTargetDependency sections

[1mtwo-sections[22m
✔ should parse a project with two sections
✔ should have both sections on the project object

[1mwith_array[22m
✔ should parse arrays with commented entries
✔ should parse arrays with uncommented entries
✔ should parse empty arrays
✔ should be correct ordered
✔ should parse values and comments correctly

[1mBuildSettings[22m
✔ addAndRemoveToFromBuildSettings - add should add the build setting to each configuration section
✔ addAndRemoveToFromBuildSettings - remove should remove from the build settings in each configuration section

[1mFrameworkSearchPaths[22m
✔ addAndRemoveToFromFrameworkSearchPaths - add should add the path to each configuration section
✔ addAndRemoveToFromFrameworkSearchPaths - remove should remove from the path to each configuration section

[1mHeaderSearchPaths[22m
✔ addAndRemoveToFromHeaderSearchPaths - add should add the path to each configuration section
✔ addAndRemoveToFromHeaderSearchPaths - add should not mangle string arguments and add to each config section
✔ addAndRemoveToFromHeaderSearchPaths - remove should remove from the path to each configuration section

[1mLibrarySearchPaths[22m
✔ addAndRemoveToFromLibrarySearchPaths - add should add the path to each configuration section
✔ addAndRemoveToFromLibrarySearchPaths - add should not mangle string arguments and add to each config section
✔ addAndRemoveToFromLibrarySearchPaths - remove should remove from the path to each configuration section

[1mOtherLinkerFlags[22m
✔ addAndRemoveToFromOtherLinkerFlags - add should add the flag to each configuration section
✔ addAndRemoveToFromOtherLinkerFlags - remove should remove from the path to each configuration section

[1maddBuildPhase[22m
✔ addBuildPhase - should return a pbxBuildPhase
✔ addBuildPhase - should set a uuid on the pbxBuildPhase
✔ addBuildPhase - should add all files to build phase
✔ addBuildPhase - should add the PBXBuildPhase object correctly
✔ addBuildPhase - should add each of the files to PBXBuildFile section
✔ addBuildPhase - should add each of the files to PBXFileReference section
✔ addBuildPhase - should not add files to PBXFileReference section if already added
✔ addBuildPhase - should not add files to PBXBuildFile section if already added
✔ addBuildPhase - should add only missing files to PBXFileReference section
✔ addBuildPhase - should set target to Wrapper given 'application' as target
✔ addBuildPhase - should set target to Plugins given 'app_extension' as target
✔ addBuildPhase - should set target to Wapper given 'bundle' as target
✔ addBuildPhase - should set target to Wapper given 'command_line_tool' as target
✔ addBuildPhase - should set target to Products Directory given 'dynamic_library' as target
✔ addBuildPhase - should set target to Shared Framework given 'framework' as target
✔ addBuildPhase - should set target to Frameworks given 'frameworks' as target
✔ addBuildPhase - should set target to Products Directory given 'static_library' as target
✔ addBuildPhase - should set target to Wrapper given 'unit_test_bundle' as target
✔ addBuildPhase - should set target to Wrapper given 'watch_app' as target
✔ addBuildPhase - should set target to Products Directory given 'watch2_app' as target
✔ addBuildPhase - should set target to Plugins given 'watch_extension' as target
✔ addBuildPhase - should set target to Plugins given 'watch2_extension' as target
✔ addBuildPhase - should add a script build phase to echo "hello world!"

[1maddFramework[22m
✔ addFramework - should return a pbxFile
✔ addFramework - should set a fileRef on the pbxFile
✔ addFramework - should populate the PBXFileReference section with 2 fields
✔ addFramework - should populate the PBXFileReference comment correctly
✔ addFramework - should add the PBXFileReference object correctly
✔ addFramework - should populate the PBXBuildFile section with 2 fields
✔ addFramework - should add the PBXBuildFile comment correctly
✔ addFramework - should add the PBXBuildFile object correctly
✔ addFramework - should add the PBXBuildFile object correctly /w weak linked frameworks
✔ addFramework - should add to the Frameworks PBXGroup
✔ addFramework - should have the right values for the PBXGroup entry
✔ addFramework - should add to the PBXFrameworksBuildPhase
✔ addFramework - should not add to the PBXFrameworksBuildPhase
✔ addFramework - should have the right values for the Sources entry
✔ addFramework - duplicate entries - should return false
✔ addFramework - should pbxFile correctly for custom frameworks
✔ addFramework - should add to the Embed Frameworks PBXCopyFilesBuildPhase
✔ addFramework - should not add to the Embed Frameworks PBXCopyFilesBuildPhase by default
✔ addFramework - should add the PBXBuildFile object correctly /w signable frameworks

[1maddHeaderFile[22m
✔ addHeaderFile - should return a pbxFile
✔ addHeaderFile - should set a fileRef on the pbxFile
✔ addHeaderFile - should populate the PBXFileReference section with 2 fields
✔ addHeaderFile - should populate the PBXFileReference comment correctly
✔ addHeaderFile - should add the PBXFileReference object correctly
✔ addHeaderFile - should add to the Plugins PBXGroup group
✔ addHeaderFile - should have the right values for the PBXGroup entry
✔ addHeaderFile - duplicate entries - should return false
✔ addHeaderFile - duplicate entries - should not add another entry anywhere

[1maddRemovePbxGroup[22m
✔ addRemovePbxGroup - should return a pbxGroup
✔ addRemovePbxGroup - should set a uuid on the pbxGroup
✔ addRemovePbxGroup - should add all files to pbxGroup
✔ addRemovePbxGroup - should add the PBXGroup object correctly
✔ addRemovePbxGroup - should add <group> sourceTree if no other specified
✔ addRemovePbxGroup - should add each of the files to PBXBuildFile section
✔ addRemovePbxGroup - should not add any of the files to PBXBuildFile section if already added
✔ addRemovePbxGroup - should not add any of the files to PBXBuildFile section when they contain special symbols and are already added
✔ addRemovePbxGroup - should add all files which are not added and not add files already added to PBXBuildFile section
✔ addRemovePbxGroup - should add each of the files to PBXFileReference section
✔ addRemovePbxGroup - should not add any of the files to PBXFileReference section if already added
✔ addRemovePbxGroup - should not add any of the files to PBXFileReference section when they contain special symbols and are already added
✔ addRemovePbxGroup - should add all files which are not added and not add files already added to PBXFileReference section
undefined
✔ addRemovePbxGroup - should remove a pbxGroup

[1maddResourceFile[22m
✔ addResourceFile - should return a pbxFile
✔ addResourceFile - should set a uuid on the pbxFile
✔ addResourceFile - should set a fileRef on the pbxFile
✔ addResourceFile - should populate the PBXBuildFile section with 2 fields
✔ addResourceFile - should add the PBXBuildFile comment correctly
✔ addResourceFile - should add the PBXBuildFile object correctly
✔ addResourceFile - should populate the PBXFileReference section with 2 fields
✔ addResourceFile - should populate the PBXFileReference comment correctly
✔ addResourceFile - should add the PBXFileReference object correctly
✔ addResourceFile - should add to the Resources PBXGroup group
✔ addResourceFile - should have the right values for the PBXGroup entry
✔ addResourceFile - should add to the PBXSourcesBuildPhase
✔ addResourceFile - should have the right values for the Sources entry
✔ addResourceFile - should remove "Resources/" from path if group path is set
✔ addResourceFile - when added with { plugin: true } - should add the PBXFileReference with the "Plugins" path
✔ addResourceFile - when added with { plugin: true } - should add to the Plugins PBXGroup group
✔ addResourceFile - when added with { plugin: true } - should have the Plugins values for the PBXGroup entry
✔ addResourceFile - when added with { plugin: true } - should add to the PBXSourcesBuildPhase
✔ addResourceFile - when added with { plugin: true } - should have the right values for the Sources entry
✔ addResourceFile - when added with { plugin: true } - should remove "Plugins/" from path if group path is set
✔ addResourceFile - when added with { variantGroup: true } - should not add to the PBXResourcesBuildPhase and PBXBuildFile
✔ addResourceFile - duplicate entries - should return false
✔ addResourceFile - duplicate entries - should return false (plugin entries)
✔ addResourceFile - duplicate entries - should not add another entry anywhere

[1maddSourceFile[22m
✔ addSourceFile - should return a pbxFile
✔ addSourceFile - should set a uuid on the pbxFile
✔ addSourceFile - should set a fileRef on the pbxFile
✔ addSourceFile - should populate the PBXBuildFile section with 2 fields
✔ addSourceFile - should add the PBXBuildFile comment correctly
✔ addSourceFile - should add the PBXBuildFile object correctly
✔ addSourceFile - should populate the PBXFileReference section with 2 fields
✔ addSourceFile - should populate the PBXFileReference comment correctly
✔ addSourceFile - should add the PBXFileReference object correctly
✔ addSourceFile - should add to the Plugins PBXGroup group
✔ addSourceFile - should have the right values for the PBXGroup entry
✔ addSourceFile - should add to the PBXSourcesBuildPhase
✔ addSourceFile - should have the right values for the Sources entry
✔ addSourceFile - duplicate entries - should return false
✔ addSourceFile - duplicate entries - should not add another entry anywhere

[1maddStaticLibrary[22m
✔ addStaticLibrary - should return a pbxFile
✔ addStaticLibrary - should set a fileRef on the pbxFile
✔ addStaticLibrary - should populate the PBXBuildFile section with 2 fields
✔ addStaticLibrary - should populate the PBXBuildFile section with 2 fields as plugin
✔ addStaticLibrary - should add the PBXBuildFile comment correctly
✔ addStaticLibrary - should add the PBXBuildFile object correctly
✔ addStaticLibrary - should populate the PBXFileReference section with 2 fields
✔ addStaticLibrary - should populate the PBXFileReference comment correctly
✔ addStaticLibrary - should add the PBXFileReference object correctly
✔ addStaticLibrary - should add to the PBXFrameworksBuildPhase
✔ addStaticLibrary - should have the right values for the Sources entry
✔ addStaticLibrary - should set LIBRARY_SEARCH_PATHS for appropriate build configurations
✔ addStaticLibrary - should ensure LIBRARY_SEARCH_PATHS inherits defaults correctly
✔ addStaticLibrary - should ensure the new library is in LIBRARY_SEARCH_PATHS
✔ addStaticLibrary - should add to the Plugins group, optionally
✔ addStaticLibrary - should add the right LIBRARY_SEARCH_PATHS entry for plugins - with group set
✔ addStaticLibrary - should add the right LIBRARY_SEARCH_PATHS entry for plugins - without group set
✔ addStaticLibrary - duplicate entries - should return false
✔ addStaticLibrary - duplicate entries - should return false (plugin entries)

[1maddTarget[22m
✔ addTarget - should throw when target name is missing
✔ addTarget - should throw when provided blank or empty target name
✔ addTarget - should throw when target type missing
✔ addTarget - should throw when invalid target type
✔ addTarget - should create a new target
✔ addTarget - should create a new target with bundleid
✔ addTarget - should add debug and release configurations to build configuration list
✔ addTarget - should add to build configuration list with default configuration name
✔ addTarget - should add to build configuration list with comment
✔ addTarget - should create a new target and add source, framework, resource and header files and the corresponding build phases
✔ addTarget - should create target with correct pbxNativeTarget name
✔ addTarget - should add build phase for extension target
✔ addTarget - should not add build phase for non-extension target
✔ addTarget - should add target as a target dependency to the main target
✔ addTarget - should have "wrapper.application" filetype for application product
✔ addTarget - should have "wrapper.app-extension" filetype for app_extension product
✔ addTarget - should have "wrapper.plug-in" filetype for bundle product
✔ addTarget - should have "compiled.mach-o.dylib" filetype for command_line_tool product
✔ addTarget - should have "compiled.mach-o.dylib" filetype for dynamic_library product
✔ addTarget - should have "wrapper.framework" filetype for framework product
✔ addTarget - should have "archive.ar" filetype for static_library product
✔ addTarget - should have "wrapper.cfbundle" filetype for unit_test_bundle product
✔ addTarget - should have "wrapper.application" filetype for watch_app product
✔ addTarget - should have "wrapper.application" filetype for watch2_app product
✔ addTarget - should have "wrapper.app-extension" filetype for watch_extension product
✔ addTarget - should have "wrapper.app-extension" filetype for watch2_extension product

[1maddTargetDependency[22m
✔ addTargetDependency - should return undefined when no target specified
✔ addTargetDependency - should throw when target not found in nativeTargetsSection
✔ addTargetDependency - should throw when any dependency target not found in nativeTargetsSection
✔ addTargetDependency - should return the pbxTarget
✔ addTargetDependency - should add targetDependencies to target
✔ addTargetDependency - should not modify native target dependencies if PBXTargetDependency object does not exist
✔ addTargetDependency - should not modify native target dependencies if PBXContainerItemProxy object does not exist
✔ addTargetDependency - should create a PBXTargetDependency for each dependency target
✔ addTargetDependency - should set right comment for each target dependency
✔ addTargetDependency - should set right comment for each dependency target
✔ addTargetDependency - should create a PBXContainerItemProxy for each PBXTargetDependency
✔ addTargetDependency - should set right comment for each container item proxy
✔ addTargetDependency - should set each PBXContainerItemProxy`s remoteGlobalIDString correctly
✔ addTargetDependency - should set each PBXContainerItemProxy`s remoteInfo correctly
✔ addTargetDependency - should set each PBXContainerItemProxy`s containerPortal correctly
✔ addTargetDependency - should set each PBXContainerItemProxy`s containerPortal_comment correctly
✔ addTargetDependency - should set each PBXContainerItemProxy`s proxyType correctly

[1maddToPbxFileReferenceSection[22m
✔ addToPbxFileReferenceSection function - should add file and comment to fileReferenceSection
✔ addToPbxFileReferenceSection function - should add file with preset explicitFileType to fileReferenceSection correctly
✔ addToPbxFileReferenceSection function - should add file with preset includeInIndex to fileReferenceSection correctly
✔ addToPbxFileReferenceSection function - should add file with preset sourceTree to fileReferenceSection correctly

[1maddWatch2App[22m
✔ addWatchApp - should create a new watch2 app target with the correct product type
✔ addWatchApp - should create a new watch2 app target with the correct product type, without needing a subfolder name
✔ addWatchApp - should create a new watch2 app target and add source, framework, resource and header files and the corresponding build phases
✔ addWatchApp - should create a new watch2 app target and add watch build phase
✔ addWatchApp - should create a new watch2 app with appropriate target extension

[1maddWatch2Extension[22m
✔ addWatchExtension - should create a new watch2 extension target with the correct product type
✔ addWatchExtension - should create a new watch2 extension target and add source, framework, resource and header files and the corresponding build phases
✔ addWatchExtension - should not create a new watch2 extension build phase if no watch2 app exists
✔ addWatchExtension - should create a new watch2 extension build phase if watch2 app exists
✔ addWatchExtension - should create a new watch2 extension and add to existing watch2 app build phase and dependency
✔ addWatchExtension - should not modify watch2 target unless adding watch2 extension
✔ addWatchExtension - should create a new watch2 extension with appropriate target extension

[1maddWatchApp[22m
✔ addWatchApp - should create a new watch app target with the correct product type
✔ addWatchApp - should create a new watch app target with the correct product type, without needing a subfolder name
✔ addWatchApp - should create a new watch app target and add source, framework, resource and header files and the corresponding build phases

[1maddWatchExtension[22m
✔ addWatchExtension - should create a new watch extension target
✔ addWatchExtension - should create a new watch extension target and add source, framework, resource and header files and the corresponding build phases
✔ addWatchExtension - should not create a new watch extension build phase if no watch app exists

[1maddXCConfigurationList[22m
✔ addXCConfigurationList - should return an XCConfigurationList
✔ addXCConfigurationList - should set a uuid on the XCConfigurationList
✔ addXCConfigurationList - should add configurations to pbxBuildConfigurationSection
✔ addXCConfigurationList - should add XCConfigurationList to pbxXCConfigurationListSection
✔ addXCConfigurationList - should add XCConfigurationList object correctly
✔ addXCConfigurationList - should add correct configurations to XCConfigurationList and to pbxBuildConfigurationSection
✔ addXCConfigurationList - should set comments for pbxBuildConfigurations

[1mdataModelDocument[22m
✔ dataModelDocument - should return a pbxFile
✔ dataModelDocument - should set a uuid on the pbxFile
✔ dataModelDocument - should set a fileRef on the pbxFile
✔ dataModelDocument - should set an optional target on the pbxFile
✔ dataModelDocument - should populate the PBXBuildFile section with 2 fields
✔ dataModelDocument - should populate the PBXFileReference section with 2 fields for single model document
✔ dataModelDocument - should populate the PBXFileReference section with 2 fields for each model of a model document
✔ dataModelDocument - should add to resources group by default
✔ dataModelDocument - should add to group specified by key
✔ dataModelDocument - should add to group specified by name
✔ dataModelDocument - should add to the PBXSourcesBuildPhase
✔ dataModelDocument - should create a XCVersionGroup section
✔ dataModelDocument - should populate the XCVersionGroup comment correctly
✔ dataModelDocument - should add the XCVersionGroup object correctly

[1mgroup[22m
✔ getGroupByKey - should return PBXGroup for Classes
✔ getGroupByKey - should return PBXGroup for Plugins
✔ createGroup - should create a new Test Group
✔ findGroupKey - should return a valid group key
✔ addGroupToGroup - should create a new test group then add group to Classes group
✔ predefinedPbxGroups - should add a file to "Plugins" group
✔ predefinedPbxGroups - should remove a file from "Plugins" group
✔ predefinedPbxGroups - should add a file to "Resources" group
✔ predefinedPbxGroups - should remove a file from "Resources" group
✔ predefinedPbxGroups - should add a file to "Frameworks" group
✔ predefinedPbxGroups - should remove a file from "Frameworks" group
✔ predefinedPbxGroups - should add a file to "Products" group
✔ predefinedPbxGroups - should remove a file from "Products" group
✔ addSourceFileToGroup - should create group + add source file
✔ removeSourceFileFromGroup - should create group + add source file then remove source file
✔ addHeaderFileToGroup - should create group + add header file
✔ removeHeaderFileFromGroup - should create group + add source file then remove header file
✔ addResourceFileToGroup - should add resource file (PNG) to the splash group
✔ removeResourceFileFromGroup - should add resource file (PNG) then remove resource file from splash group
✔ retrieveBuildPropertyForBuild - should retrieve valid build property 
✔ retrieveBuildConfigByName - should retrieve valid build config
✔ validatePropReplaceFix - should create build configuration for VALID_ARCHS when none existed
✔ validateHasFile - should return true for has file MainViewController.m
✔ testWritingPBXProject - should successfully write to PBXProject TargetAttributes
✔ testWritingPBXProject - should add target attribute to PBXProject TargetAttributes
✔ testWritingPBXProject - should change target attribute at PBXProject TargetAttributes
✔ testWritingPBXProject - should remove target attribute from PBXProject TargetAttributes

[1mknownRegions[22m
✔ addKnownRegion - should add new region to existing knownRegions
✔ addKnownRegion - should not add region if it already exists in knownRegions
✔ addKnownRegion - should create knownRegions array if it does not exist
✔ removeKnownRegion - should remove named region from knownRegions
✔ removeKnownRegion - should do nothing if named region does not exist in knownRegions
✔ hasKnownRegion - should return true if named region exists in knownRegions
✔ hasKnownRegion - should return false if named region does not exist in knownRegions

[1mmultipleTargets[22m
✔ addFilesToTarget - should add the file to a proper target
✔ addFilesToTarget - should remove the file from the proper target
✔ addFilesToTarget - should fail when specifying an invalid target
✔ addFilesToTarget - should add the library to a proper target
✔ addFilesToTarget - should remove the library to a proper target
✔ addFilesToTarget - should add the framework to a proper target
✔ addFilesToTarget - should add a ressource fileto a proper target
✔ addFilesToTarget - should remove a ressource file from a proper target

[1mpbxFile[22m
✔ lastKnownFileType - should detect that a .m path means sourcecode.c.objc
✔ lastKnownFileType - should detect that a .h path means sourceFile.c.h
✔ lastKnownFileType - should detect that a .bundle path means "wrapper.plug-in"
✔ lastKnownFileType - should detect that a .xib path means file.xib
✔ lastKnownFileType - should detect that a .dylib path means "compiled.mach-o.dylib"
✔ lastKnownFileType - should detect that a .tbd path means sourcecode.text-based-dylib-definition
✔ lastKnownFileType - should detect that a .framework path means wrapper.framework
✔ lastKnownFileType - should detect that a .a path means archive.ar
✔ lastKnownFileType - should detect that a .xcdatamodel path means wrapper.xcdatamodel
✔ lastKnownFileType - should allow lastKnownFileType to be overridden
✔ lastKnownFileType - should set lastKnownFileType to unknown if undetectable
✔ group - should be Sources for source files
✔ group - should be Sources for data model document files
✔ group - should be Frameworks for dylibs
✔ group - should be Frameworks for tbds
✔ group - should be Frameworks for frameworks
✔ group - should be Resources for all other files
✔ group - should be Frameworks for archives
✔ basename - should be as expected
✔ sourceTree - should be SDKROOT for dylibs
✔ sourceTree - should be SDKROOT for tbds
✔ sourceTree - should be SDKROOT for frameworks
✔ sourceTree - should default to "<group>" otherwise
✔ sourceTree - should be overridable either way
✔ sourceTree - should be  "<group>" for archives
✔ path - should be "usr/lib" for dylibs (relative to SDKROOT)
✔ path - should be "usr/lib" for tbds (relative to SDKROOT)
✔ path - should be "System/Library/Frameworks" for frameworks
✔ path - should default to the first argument otherwise
✔ settings - should not be defined by default
✔ settings - should be undefined if weak is false or non-boolean
✔ settings - should be {ATTRIBUTES:["Weak"]} if weak linking specified
✔ settings - should be {ATTRIBUTES:["CodeSignOnCopy"]} if sign specified
✔ settings - should be {ATTRIBUTES:["Weak","CodeSignOnCopy"]} if both weak linking and sign specified
✔ settings - should be {COMPILER_FLAGS:"blah"} if compiler flags specified
✔ settings - should be .appex if {explicitFileType:'"wrapper.app-extension"'} specified

[1mpbxItemByComment[22m
✔ pbxItemByComment - should return PBXTargetDependency
✔ pbxItemByComment - should return PBXContainerItemProxy
✔ pbxItemByComment - should return PBXResourcesBuildPhase
✔ pbxItemByComment - should return PBXShellScriptBuildPhase
✔ pbxItemByComment - should return null when PBXNativeTarget not found

[1mpbxProject[22m
✔ creation - should create a pbxProject with the new operator
✔ creation - should create a pbxProject without the new operator
✔ parseSync function - should return the hash object
✔ parseSync function - should contain valid data in the returned objects hash
✔ parse function - should emit an "end" event
✔ parse function - should take the end callback as a parameter
✔ parse function - should allow evented error handling
✔ parse function - should pass the hash object to the callback function
✔ parse function - should handle projects with comments in the header
✔ parse function - should attach the hash object to the pbx object
✔ parse function - it should pass an error object back when the parsing fails
✔ allUuids function - should return the right amount of uuids
✔ generateUuid function - should return a 24 character string
✔ generateUuid function - should be an uppercase hex string
✔ updateProductName function - should change the PRODUCT_NAME field in the .pbxproj file
✔ updateBuildProperty function - should change build properties in the .pbxproj file
✔ updateBuildProperty function - should change all targets in .pbxproj with multiple targets
✔ updateBuildProperty function - should change only one target in .pbxproj with multiple targets
✔ getBuildProperty function - should change all targets in .pbxproj with multiple targets
✔ getBuildProperty function - should change only one target in .pbxproj with multiple targets
✔ addBuildProperty function - should add 4 build properties in the .pbxproj file
✔ addBuildProperty function - should add 2 build properties in the .pbxproj file for specific build
✔ addBuildProperty function - should not add build properties in the .pbxproj file for nonexist build
✔ removeBuildProperty function - should remove all build properties in the .pbxproj file
✔ removeBuildProperty function - should remove specific build properties in the .pbxproj file
✔ removeBuildProperty function - should not remove any build properties in the .pbxproj file
✔ removeBuildProperty function - should fine with remove inexist build properties in the .pbxproj file
✔ productName field - should return the product name
✔ addPluginFile function - should strip the Plugin path prefix
✔ addPluginFile function - should add files to the .pbxproj file using the / path seperator
✔ hasFile - should return true if the file is in the project
✔ hasFile - should return false if the file is not in the project

[1mpbxTargetByName[22m
✔ pbxTargetByName - should return PBXNativeTarget
✔ pbxTargetByName - should return null when PBXNativeTarget not found

[1mpbxWriter[22m
✔ writeSync - should write out the "hash" test
✔ writeSync - should write out the "with_array" test
✔ writeSync - should write out the "section" test
✔ writeSync - should write out the "two-sections" test
✔ writeSync - should write out the "section-entries" test
✔ writeSync - should write out the "build-config" test
✔ writeSync - should write out the "header-search" test
✔ writeSync - should write out the "nested-object" test
✔ writeSync - should write out the "build-files" test
✔ writeSync - should write out the "file-references" test
✔ writeSync - should not null and undefined with the "omitEmptyValues" option set to false test
✔ writeSync - should drop null and undefined with the "omitEmptyValues" option set to true test

[1mremoveFramework[22m
✔ removeFramework - should return a pbxFile
✔ removeFramework - should set a fileRef on the pbxFile
✔ removeFramework - should remove 2 fields from the PBXFileReference section
✔ removeFramework - should remove 2 fields from the PBXBuildFile section
✔ removeFramework - should remove from the Frameworks PBXGroup
✔ removeFramework - should remove from the PBXFrameworksBuildPhase
✔ removeFramework - should remove custom frameworks
✔ removeFramework - should remove embedded frameworks

[1mremoveHeaderFile[22m
✔ removeHeaderFile - should return a pbxFile
✔ removeHeaderFile - should set a fileRef on the pbxFile
✔ removeHeaderFile - should remove 2 fields from the PBXFileReference section
✔ removeHeaderFile - should remove comment from the PBXFileReference correctly
✔ removeHeaderFile - should remove the PBXFileReference object correctly
✔ removeHeaderFile - should remove from the Plugins PBXGroup group

[1mremoveResourceFile[22m
✔ removeResourceFile - should return a pbxFile
✔ removeResourceFile - should set a uuid on the pbxFile
✔ removeResourceFile - should set a fileRef on the pbxFile
✔ removeResourceFile - should remove 2 fields from the PBXBuildFile section
✔ removeResourceFile - should remove the PBXBuildFile comment correctly
✔ removeResourceFile - should remove the PBXBuildFile object correctly
✔ removeResourceFile - should remove 2 fields from the PBXFileReference section
✔ removeResourceFile - should populate the PBXFileReference comment correctly
✔ removeResourceFile - should remove the PBXFileReference object correctly
✔ removeResourceFile - should remove from the Resources PBXGroup group
✔ removeResourceFile - should remove from the PBXSourcesBuildPhase

[1mremoveSourceFile[22m
✔ removeSourceFile - should return a pbxFile
✔ removeSourceFile - should set a uuid on the pbxFile
✔ removeSourceFile - should set a fileRef on the pbxFile
✔ removeSourceFile - should remove 2 fields from the PBXBuildFile section
✔ removeSourceFile - should remove comment from the PBXBuildFile correctly
✔ removeSourceFile - should remove the PBXBuildFile object correctly
✔ removeSourceFile - should remove 2 fields from the PBXFileReference section
✔ removeSourceFile - should remove the PBXFileReference comment correctly
✔ removeSourceFile - should remove the PBXFileReference object correctly
✔ removeSourceFile - should remove from the Plugins PBXGroup group
✔ removeSourceFile - should have the right values for the PBXGroup entry
✔ removeSourceFile - should remove from the PBXSourcesBuildPhase
✔ removeSourceFile - should have the right values for the Sources entry
✔ removeSourceFile - should remove file from PBXFileReference after modified by Xcode

[1mvariantGroup[22m
✔ getVariantGroupByKey - should return PBXVariantGroup for Localizable.strings
✔ createVariantGroup - should create a new Test Variant Group
✔ findVariantGroupKey - should return a valid group key
✔ createLocalisationVariantGroup - should create a new localisation variationgroup then add group to Resources group
✔ addResourceFileToLocalisationGroup - should add resource file to the TestVariantGroup group
✔ removeResourceFileFromGroup - should add resource file then remove resource file from Localizable.strings group

[1mxcode5searchPaths[22m
✔ addAndRemoveToFromLibrarySearchPaths - add should add the path to each configuration section
✔ addAndRemoveToFromLibrarySearchPaths - remove should remove from the path to each configuration section

[1m[32mOK: [39m[22m1599 assertions (10156ms)
-------------------------------|---------|----------|---------|---------|---------------------------
File                           | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s         
-------------------------------|---------|----------|---------|---------|---------------------------
All files                      |    89.4 |    78.99 |   91.45 |   89.97 |                           
 cordova-node-xcode            |       0 |      100 |     100 |       0 |                           
  index.js                     |       0 |      100 |     100 |       0 | 18                        
 cordova-node-xcode/lib        |   96.26 |    88.65 |   95.97 |   96.38 |                           
  parseJob.js                  |     100 |      100 |     100 |     100 |                           
  pbxFile.js                   |   95.45 |    87.14 |   88.88 |   95.45 | 177-183                   
  pbxProject.js                |   95.92 |    88.36 |   95.94 |   96.08 | ...81,2047-2048,2062-2063 
  pbxWriter.js                 |   98.75 |       92 |     100 |   98.71 | 135,293                   
 cordova-node-xcode/lib/parser |   81.33 |     65.2 |   84.11 |   82.27 |                           
  pbxproj.js                   |   81.33 |     65.2 |   84.11 |   82.27 | ...26-1827,1875-1876,1888 
-------------------------------|---------|----------|---------|---------|---------------------------
I am package cote .....

> cote@1.0.3 test
> NODE_ENV=dev nyc -x="**/examples/*" -x="**/*balanced*.js" -x="**/test/*.js" -x="**/lib/*.js" ava --timeout=60000

I am package csv-stream .....

> csv-streamify@4.0.0 pretest
> standard


> csv-streamify@4.0.0 test
> mocha -R spec



  spectrum
    1) comma_in_quotes
    2) empty
    3) empty_crlf
    4) escaped_quotes
    5) json
    6) newlines
    7) newlines_crlf
    8) quotes_and_newlines
    9) simple
    10) simple_crlf
    11) utf8

  without callback
    12) should emit a buffer per line (flowing-mode, objectMode: false)
    13) should emit a string containing one line

  with callback
    14) should callback with entire parsed document

  newline
    15) should respect options.newline

  object mode
    16) should emit an array per line (non-flowing-mode)
    17) should emit one array per line (flowing-mode)
    18) should emit single column properly (issue #17)
    19) should emit multiple columns properly

  edge cases
    20) should handle line breaks spanning multiple chunks
    21) should handle quotes spanning multiple chunks
    22) should handle all the quotes (issue #14)


  0 passing (51ms)
  22 failing

  1) spectrum
       comma_in_quotes:
     Uncaught TypeError: asyncWrite is not a function
      at onwrite (node_modules/readable-stream/lib/_stream_writable.js:470:7)
      at WritableState.onwrite (node_modules/readable-stream/lib/_stream_writable.js:180:5)
      at DestroyableTransform.afterTransform (node_modules/readable-stream/lib/_stream_transform.js:93:3)
      at DestroyableTransform.parse [as _transform] (csv-streamify.js:169:5)
      at DestroyableTransform.Transform._read (node_modules/readable-stream/lib/_stream_transform.js:184:10)
      at DestroyableTransform.Transform._write (node_modules/readable-stream/lib/_stream_transform.js:172:83)
      at doWrite (node_modules/readable-stream/lib/_stream_writable.js:418:64)
      at writeOrBuffer (node_modules/readable-stream/lib/_stream_writable.js:407:5)
      at DestroyableTransform.Writable.write (node_modules/readable-stream/lib/_stream_writable.js:334:11)
      at ReadStream.ondata (node:internal/streams/readable:754:22)
      at ReadStream.emit (node:events:513:28)
      at addChunk (node:internal/streams/readable:315:12)
      at readableAddChunk (node:internal/streams/readable:289:9)
      at ReadStream.Readable.push (node:internal/streams/readable:228:10)
      at node:internal/fs/streams:279:14
      at FSReqCallback.wrapper [as oncomplete] (node:fs:675:5)

  2) spectrum
       empty:
     Uncaught TypeError: pna.nextTick is not a function
      at maybeReadMore (node_modules/readable-stream/lib/_stream_readable.js:517:9)
      at addChunk (node_modules/readable-stream/lib/_stream_readable.js:300:3)
      at readableAddChunk (node_modules/readable-stream/lib/_stream_readable.js:278:11)
      at DestroyableTransform.Readable.push (node_modules/readable-stream/lib/_stream_readable.js:245:10)
      at DestroyableTransform.Transform.push (node_modules/readable-stream/lib/_stream_transform.js:148:32)
      at emitLine (csv-streamify.js:73:14)
      at DestroyableTransform.parse [as _transform] (csv-streamify.js:106:9)
      at DestroyableTransform.Transform._read (node_modules/readable-stream/lib/_stream_transform.js:184:10)
      at DestroyableTransform.Transform._write (node_modules/readable-stream/lib/_stream_transform.js:172:83)
      at doWrite (node_modules/readable-stream/lib/_stream_writable.js:418:64)
      at writeOrBuffer (node_modules/readable-stream/lib/_stream_writable.js:407:5)
      at DestroyableTransform.Writable.write (node_modules/readable-stream/lib/_stream_writable.js:334:11)
      at ReadStream.ondata (node:internal/streams/readable:754:22)
      at ReadStream.emit (node:events:513:28)
      at addChunk (node:internal/streams/readable:315:12)
      at readableAddChunk (node:internal/streams/readable:289:9)
      at ReadStream.Readable.push (node:internal/streams/readable:228:10)
      at node:internal/fs/streams:279:14
      at FSReqCallback.wrapper [as oncomplete] (node:fs:675:5)

  3) spectrum
       empty_crlf:
     Uncaught TypeError: pna.nextTick is not a function
      at maybeReadMore (node_modules/readable-stream/lib/_stream_readable.js:517:9)
      at addChunk (node_modules/readable-stream/lib/_stream_readable.js:300:3)
      at readableAddChunk (node_modules/readable-stream/lib/_stream_readable.js:278:11)
      at DestroyableTransform.Readable.push (node_modules/readable-stream/lib/_stream_readable.js:245:10)
      at DestroyableTransform.Transform.push (node_modules/readable-stream/lib/_stream_transform.js:148:32)
      at emitLine (csv-streamify.js:73:14)
      at DestroyableTransform.parse [as _transform] (csv-streamify.js:106:9)
      at DestroyableTransform.Transform._read (node_modules/readable-stream/lib/_stream_transform.js:184:10)
      at DestroyableTransform.Transform._write (node_modules/readable-stream/lib/_stream_transform.js:172:83)
      at doWrite (node_modules/readable-stream/lib/_stream_writable.js:418:64)
      at writeOrBuffer (node_modules/readable-stream/lib/_stream_writable.js:407:5)
      at DestroyableTransform.Writable.write (node_modules/readable-stream/lib/_stream_writable.js:334:11)
      at ReadStream.ondata (node:internal/streams/readable:754:22)
      at ReadStream.emit (node:events:513:28)
      at addChunk (node:internal/streams/readable:315:12)
      at readableAddChunk (node:internal/streams/readable:289:9)
      at ReadStream.Readable.push (node:internal/streams/readable:228:10)
      at node:internal/fs/streams:279:14
      at FSReqCallback.wrapper [as oncomplete] (node:fs:675:5)

  4) spectrum
       escaped_quotes:
     Uncaught TypeError: pna.nextTick is not a function
      at maybeReadMore (node_modules/readable-stream/lib/_stream_readable.js:517:9)
      at addChunk (node_modules/readable-stream/lib/_stream_readable.js:300:3)
      at readableAddChunk (node_modules/readable-stream/lib/_stream_readable.js:278:11)
      at DestroyableTransform.Readable.push (node_modules/readable-stream/lib/_stream_readable.js:245:10)
      at DestroyableTransform.Transform.push (node_modules/readable-stream/lib/_stream_transform.js:148:32)
      at emitLine (csv-streamify.js:73:14)
      at DestroyableTransform.parse [as _transform] (csv-streamify.js:106:9)
      at DestroyableTransform.Transform._read (node_modules/readable-stream/lib/_stream_transform.js:184:10)
      at DestroyableTransform.Transform._write (node_modules/readable-stream/lib/_stream_transform.js:172:83)
      at doWrite (node_modules/readable-stream/lib/_stream_writable.js:418:64)
      at writeOrBuffer (node_modules/readable-stream/lib/_stream_writable.js:407:5)
      at DestroyableTransform.Writable.write (node_modules/readable-stream/lib/_stream_writable.js:334:11)
      at ReadStream.ondata (node:internal/streams/readable:754:22)
      at ReadStream.emit (node:events:513:28)
      at addChunk (node:internal/streams/readable:315:12)
      at readableAddChunk (node:internal/streams/readable:289:9)
      at ReadStream.Readable.push (node:internal/streams/readable:228:10)
      at node:internal/fs/streams:279:14
      at FSReqCallback.wrapper [as oncomplete] (node:fs:675:5)

  5) spectrum
       json:
     Uncaught TypeError: asyncWrite is not a function
      at onwrite (node_modules/readable-stream/lib/_stream_writable.js:470:7)
      at WritableState.onwrite (node_modules/readable-stream/lib/_stream_writable.js:180:5)
      at DestroyableTransform.afterTransform (node_modules/readable-stream/lib/_stream_transform.js:93:3)
      at DestroyableTransform.parse [as _transform] (csv-streamify.js:169:5)
      at DestroyableTransform.Transform._read (node_modules/readable-stream/lib/_stream_transform.js:184:10)
      at DestroyableTransform.Transform._write (node_modules/readable-stream/lib/_stream_transform.js:172:83)
      at doWrite (node_modules/readable-stream/lib/_stream_writable.js:418:64)
      at writeOrBuffer (node_modules/readable-stream/lib/_stream_writable.js:407:5)
      at DestroyableTransform.Writable.write (node_modules/readable-stream/lib/_stream_writable.js:334:11)
      at ReadStream.ondata (node:internal/streams/readable:754:22)
      at ReadStream.emit (node:events:513:28)
      at addChunk (node:internal/streams/readable:315:12)
      at readableAddChunk (node:internal/streams/readable:289:9)
      at ReadStream.Readable.push (node:internal/streams/readable:228:10)
      at node:internal/fs/streams:279:14
      at FSReqCallback.wrapper [as oncomplete] (node:fs:675:5)

  6) spectrum
       newlines:
     Uncaught TypeError: pna.nextTick is not a function
      at maybeReadMore (node_modules/readable-stream/lib/_stream_readable.js:517:9)
      at addChunk (node_modules/readable-stream/lib/_stream_readable.js:300:3)
      at readableAddChunk (node_modules/readable-stream/lib/_stream_readable.js:278:11)
      at DestroyableTransform.Readable.push (node_modules/readable-stream/lib/_stream_readable.js:245:10)
      at DestroyableTransform.Transform.push (node_modules/readable-stream/lib/_stream_transform.js:148:32)
      at emitLine (csv-streamify.js:73:14)
      at DestroyableTransform.parse [as _transform] (csv-streamify.js:106:9)
      at DestroyableTransform.Transform._read (node_modules/readable-stream/lib/_stream_transform.js:184:10)
      at DestroyableTransform.Transform._write (node_modules/readable-stream/lib/_stream_transform.js:172:83)
      at doWrite (node_modules/readable-stream/lib/_stream_writable.js:418:64)
      at writeOrBuffer (node_modules/readable-stream/lib/_stream_writable.js:407:5)
      at DestroyableTransform.Writable.write (node_modules/readable-stream/lib/_stream_writable.js:334:11)
      at ReadStream.ondata (node:internal/streams/readable:754:22)
      at ReadStream.emit (node:events:513:28)
      at addChunk (node:internal/streams/readable:315:12)
      at readableAddChunk (node:internal/streams/readable:289:9)
      at ReadStream.Readable.push (node:internal/streams/readable:228:10)
      at node:internal/fs/streams:279:14
      at FSReqCallback.wrapper [as oncomplete] (node:fs:675:5)

  7) spectrum
       newlines_crlf:
     Uncaught TypeError: pna.nextTick is not a function
      at maybeReadMore (node_modules/readable-stream/lib/_stream_readable.js:517:9)
      at addChunk (node_modules/readable-stream/lib/_stream_readable.js:300:3)
      at readableAddChunk (node_modules/readable-stream/lib/_stream_readable.js:278:11)
      at DestroyableTransform.Readable.push (node_modules/readable-stream/lib/_stream_readable.js:245:10)
      at DestroyableTransform.Transform.push (node_modules/readable-stream/lib/_stream_transform.js:148:32)
      at emitLine (csv-streamify.js:73:14)
      at DestroyableTransform.parse [as _transform] (csv-streamify.js:106:9)
      at DestroyableTransform.Transform._read (node_modules/readable-stream/lib/_stream_transform.js:184:10)
      at DestroyableTransform.Transform._write (node_modules/readable-stream/lib/_stream_transform.js:172:83)
      at doWrite (node_modules/readable-stream/lib/_stream_writable.js:418:64)
      at writeOrBuffer (node_modules/readable-stream/lib/_stream_writable.js:407:5)
      at DestroyableTransform.Writable.write (node_modules/readable-stream/lib/_stream_writable.js:334:11)
      at ReadStream.ondata (node:internal/streams/readable:754:22)
      at ReadStream.emit (node:events:513:28)
      at addChunk (node:internal/streams/readable:315:12)
      at readableAddChunk (node:internal/streams/readable:289:9)
      at ReadStream.Readable.push (node:internal/streams/readable:228:10)
      at node:internal/fs/streams:279:14
      at FSReqCallback.wrapper [as oncomplete] (node:fs:675:5)

  8) spectrum
       quotes_and_newlines:
     Uncaught TypeError: pna.nextTick is not a function
      at maybeReadMore (node_modules/readable-stream/lib/_stream_readable.js:517:9)
      at addChunk (node_modules/readable-stream/lib/_stream_readable.js:300:3)
      at readableAddChunk (node_modules/readable-stream/lib/_stream_readable.js:278:11)
      at DestroyableTransform.Readable.push (node_modules/readable-stream/lib/_stream_readable.js:245:10)
      at DestroyableTransform.Transform.push (node_modules/readable-stream/lib/_stream_transform.js:148:32)
      at emitLine (csv-streamify.js:73:14)
      at DestroyableTransform.parse [as _transform] (csv-streamify.js:106:9)
      at DestroyableTransform.Transform._read (node_modules/readable-stream/lib/_stream_transform.js:184:10)
      at DestroyableTransform.Transform._write (node_modules/readable-stream/lib/_stream_transform.js:172:83)
      at doWrite (node_modules/readable-stream/lib/_stream_writable.js:418:64)
      at writeOrBuffer (node_modules/readable-stream/lib/_stream_writable.js:407:5)
      at DestroyableTransform.Writable.write (node_modules/readable-stream/lib/_stream_writable.js:334:11)
      at ReadStream.ondata (node:internal/streams/readable:754:22)
      at ReadStream.emit (node:events:513:28)
      at addChunk (node:internal/streams/readable:315:12)
      at readableAddChunk (node:internal/streams/readable:289:9)
      at ReadStream.Readable.push (node:internal/streams/readable:228:10)
      at node:internal/fs/streams:279:14
      at FSReqCallback.wrapper [as oncomplete] (node:fs:675:5)

  9) spectrum
       simple:
     Uncaught TypeError: asyncWrite is not a function
      at onwrite (node_modules/readable-stream/lib/_stream_writable.js:470:7)
      at WritableState.onwrite (node_modules/readable-stream/lib/_stream_writable.js:180:5)
      at DestroyableTransform.afterTransform (node_modules/readable-stream/lib/_stream_transform.js:93:3)
      at DestroyableTransform.parse [as _transform] (csv-streamify.js:169:5)
      at DestroyableTransform.Transform._read (node_modules/readable-stream/lib/_stream_transform.js:184:10)
      at DestroyableTransform.Transform._write (node_modules/readable-stream/lib/_stream_transform.js:172:83)
      at doWrite (node_modules/readable-stream/lib/_stream_writable.js:418:64)
      at writeOrBuffer (node_modules/readable-stream/lib/_stream_writable.js:407:5)
      at DestroyableTransform.Writable.write (node_modules/readable-stream/lib/_stream_writable.js:334:11)
      at ReadStream.ondata (node:internal/streams/readable:754:22)
      at ReadStream.emit (node:events:513:28)
      at addChunk (node:internal/streams/readable:315:12)
      at readableAddChunk (node:internal/streams/readable:289:9)
      at ReadStream.Readable.push (node:internal/streams/readable:228:10)
      at node:internal/fs/streams:279:14
      at FSReqCallback.wrapper [as oncomplete] (node:fs:675:5)

  10) spectrum
       simple_crlf:
     Uncaught TypeError: pna.nextTick is not a function
      at maybeReadMore (node_modules/readable-stream/lib/_stream_readable.js:517:9)
      at addChunk (node_modules/readable-stream/lib/_stream_readable.js:300:3)
      at readableAddChunk (node_modules/readable-stream/lib/_stream_readable.js:278:11)
      at DestroyableTransform.Readable.push (node_modules/readable-stream/lib/_stream_readable.js:245:10)
      at DestroyableTransform.Transform.push (node_modules/readable-stream/lib/_stream_transform.js:148:32)
      at emitLine (csv-streamify.js:73:14)
      at DestroyableTransform.parse [as _transform] (csv-streamify.js:106:9)
      at DestroyableTransform.Transform._read (node_modules/readable-stream/lib/_stream_transform.js:184:10)
      at DestroyableTransform.Transform._write (node_modules/readable-stream/lib/_stream_transform.js:172:83)
      at doWrite (node_modules/readable-stream/lib/_stream_writable.js:418:64)
      at writeOrBuffer (node_modules/readable-stream/lib/_stream_writable.js:407:5)
      at DestroyableTransform.Writable.write (node_modules/readable-stream/lib/_stream_writable.js:334:11)
      at ReadStream.ondata (node:internal/streams/readable:754:22)
      at ReadStream.emit (node:events:513:28)
      at addChunk (node:internal/streams/readable:315:12)
      at readableAddChunk (node:internal/streams/readable:289:9)
      at ReadStream.Readable.push (node:internal/streams/readable:228:10)
      at node:internal/fs/streams:279:14
      at FSReqCallback.wrapper [as oncomplete] (node:fs:675:5)

  11) spectrum
       utf8:
     Uncaught TypeError: pna.nextTick is not a function
      at maybeReadMore (node_modules/readable-stream/lib/_stream_readable.js:517:9)
      at addChunk (node_modules/readable-stream/lib/_stream_readable.js:300:3)
      at readableAddChunk (node_modules/readable-stream/lib/_stream_readable.js:278:11)
      at DestroyableTransform.Readable.push (node_modules/readable-stream/lib/_stream_readable.js:245:10)
      at DestroyableTransform.Transform.push (node_modules/readable-stream/lib/_stream_transform.js:148:32)
      at emitLine (csv-streamify.js:73:14)
      at DestroyableTransform.parse [as _transform] (csv-streamify.js:106:9)
      at DestroyableTransform.Transform._read (node_modules/readable-stream/lib/_stream_transform.js:184:10)
      at DestroyableTransform.Transform._write (node_modules/readable-stream/lib/_stream_transform.js:172:83)
      at doWrite (node_modules/readable-stream/lib/_stream_writable.js:418:64)
      at writeOrBuffer (node_modules/readable-stream/lib/_stream_writable.js:407:5)
      at DestroyableTransform.Writable.write (node_modules/readable-stream/lib/_stream_writable.js:334:11)
      at ReadStream.ondata (node:internal/streams/readable:754:22)
      at ReadStream.emit (node:events:513:28)
      at addChunk (node:internal/streams/readable:315:12)
      at readableAddChunk (node:internal/streams/readable:289:9)
      at ReadStream.Readable.push (node:internal/streams/readable:228:10)
      at node:internal/fs/streams:279:14
      at FSReqCallback.wrapper [as oncomplete] (node:fs:675:5)

  12) without callback
       should emit a buffer per line (flowing-mode, objectMode: false):
     TypeError: pna.nextTick is not a function
      at resume (node_modules/readable-stream/lib/_stream_readable.js:783:9)
      at DestroyableTransform.Readable.resume (node_modules/readable-stream/lib/_stream_readable.js:775:5)
      at DestroyableTransform.Readable.on (node_modules/readable-stream/lib/_stream_readable.js:745:53)
      at Context.<anonymous> (test/csv-streamify.js:17:12)
      at processImmediate (node:internal/timers:466:21)

  13) without callback
       should emit a string containing one line:
     TypeError: pna.nextTick is not a function
      at resume (node_modules/readable-stream/lib/_stream_readable.js:783:9)
      at DestroyableTransform.Readable.resume (node_modules/readable-stream/lib/_stream_readable.js:775:5)
      at DestroyableTransform.Readable.on (node_modules/readable-stream/lib/_stream_readable.js:745:53)
      at Context.<anonymous> (test/csv-streamify.js:37:12)
      at processImmediate (node:internal/timers:466:21)

  14) with callback
       should callback with entire parsed document:
     Uncaught TypeError: pna.nextTick is not a function
      at maybeReadMore (node_modules/readable-stream/lib/_stream_readable.js:517:9)
      at addChunk (node_modules/readable-stream/lib/_stream_readable.js:300:3)
      at readableAddChunk (node_modules/readable-stream/lib/_stream_readable.js:278:11)
      at DestroyableTransform.Readable.push (node_modules/readable-stream/lib/_stream_readable.js:245:10)
      at DestroyableTransform.Transform.push (node_modules/readable-stream/lib/_stream_transform.js:148:32)
      at emitLine (csv-streamify.js:73:14)
      at DestroyableTransform.parse [as _transform] (csv-streamify.js:106:9)
      at DestroyableTransform.Transform._read (node_modules/readable-stream/lib/_stream_transform.js:184:10)
      at DestroyableTransform.Transform._write (node_modules/readable-stream/lib/_stream_transform.js:172:83)
      at doWrite (node_modules/readable-stream/lib/_stream_writable.js:418:64)
      at writeOrBuffer (node_modules/readable-stream/lib/_stream_writable.js:407:5)
      at DestroyableTransform.Writable.write (node_modules/readable-stream/lib/_stream_writable.js:334:11)
      at ReadStream.ondata (node:internal/streams/readable:754:22)
      at ReadStream.emit (node:events:513:28)
      at addChunk (node:internal/streams/readable:315:12)
      at readableAddChunk (node:internal/streams/readable:289:9)
      at ReadStream.Readable.push (node:internal/streams/readable:228:10)
      at node:internal/fs/streams:279:14
      at FSReqCallback.wrapper [as oncomplete] (node:fs:675:5)

  15) newline
       should respect options.newline:
     TypeError: pna.nextTick is not a function
      at resume (node_modules/readable-stream/lib/_stream_readable.js:783:9)
      at DestroyableTransform.Readable.resume (node_modules/readable-stream/lib/_stream_readable.js:775:5)
      at DestroyableTransform.Readable.on (node_modules/readable-stream/lib/_stream_readable.js:745:53)
      at Context.<anonymous> (test/csv-streamify.js:81:12)
      at processImmediate (node:internal/timers:466:21)

  16) object mode
       should emit an array per line (non-flowing-mode):
     TypeError: pna.nextTick is not a function
      at DestroyableTransform.Readable.on (node_modules/readable-stream/lib/_stream_readable.js:752:13)
      at Context.<anonymous> (test/csv-streamify.js:101:12)
      at processImmediate (node:internal/timers:466:21)

  17) object mode
       should emit one array per line (flowing-mode):
     TypeError: pna.nextTick is not a function
      at resume (node_modules/readable-stream/lib/_stream_readable.js:783:9)
      at DestroyableTransform.Readable.resume (node_modules/readable-stream/lib/_stream_readable.js:775:5)
      at DestroyableTransform.Readable.on (node_modules/readable-stream/lib/_stream_readable.js:745:53)
      at Context.<anonymous> (test/csv-streamify.js:123:12)
      at processImmediate (node:internal/timers:466:21)

  18) object mode
       should emit single column properly (issue #17):
     TypeError: pna.nextTick is not a function
      at resume (node_modules/readable-stream/lib/_stream_readable.js:783:9)
      at DestroyableTransform.Readable.resume (node_modules/readable-stream/lib/_stream_readable.js:775:5)
      at DestroyableTransform.Readable.on (node_modules/readable-stream/lib/_stream_readable.js:745:53)
      at Context.<anonymous> (test/csv-streamify.js:140:38)
      at processImmediate (node:internal/timers:466:21)

  19) object mode
       should emit multiple columns properly:
     Uncaught TypeError: pna.nextTick is not a function
      at maybeReadMore (node_modules/readable-stream/lib/_stream_readable.js:517:9)
      at addChunk (node_modules/readable-stream/lib/_stream_readable.js:300:3)
      at readableAddChunk (node_modules/readable-stream/lib/_stream_readable.js:278:11)
      at DestroyableTransform.Readable.push (node_modules/readable-stream/lib/_stream_readable.js:245:10)
      at DestroyableTransform.Transform.push (node_modules/readable-stream/lib/_stream_transform.js:148:32)
      at emitLine (csv-streamify.js:73:14)
      at DestroyableTransform.parse [as _transform] (csv-streamify.js:106:9)
      at DestroyableTransform.Transform._read (node_modules/readable-stream/lib/_stream_transform.js:184:10)
      at DestroyableTransform.Transform._write (node_modules/readable-stream/lib/_stream_transform.js:172:83)
      at doWrite (node_modules/readable-stream/lib/_stream_writable.js:418:64)
      at writeOrBuffer (node_modules/readable-stream/lib/_stream_writable.js:407:5)
      at DestroyableTransform.Writable.write (node_modules/readable-stream/lib/_stream_writable.js:334:11)
      at StringStream.ondata (node:internal/streams/readable:754:22)
      at StringStream.emit (node:events:513:28)
      at addChunk (node:internal/streams/readable:315:12)
      at readableAddChunk (node:internal/streams/readable:289:9)
      at StringStream.Readable.push (node:internal/streams/readable:228:10)
      at /data/js-variants/multee/VariantsPureDep/csv-stream/variant_files/csv-stream/node_modules/string-to-stream/index.js:18:12
      at processTicksAndRejections (node:internal/process/task_queues:78:11)

  20) edge cases
       should handle line breaks spanning multiple chunks:
     TypeError: asyncWrite is not a function
      at onwrite (node_modules/readable-stream/lib/_stream_writable.js:470:7)
      at WritableState.onwrite (node_modules/readable-stream/lib/_stream_writable.js:180:5)
      at DestroyableTransform.afterTransform (node_modules/readable-stream/lib/_stream_transform.js:93:3)
      at DestroyableTransform.parse [as _transform] (csv-streamify.js:169:5)
      at DestroyableTransform.Transform._read (node_modules/readable-stream/lib/_stream_transform.js:184:10)
      at DestroyableTransform.Transform._write (node_modules/readable-stream/lib/_stream_transform.js:172:83)
      at doWrite (node_modules/readable-stream/lib/_stream_writable.js:418:64)
      at writeOrBuffer (node_modules/readable-stream/lib/_stream_writable.js:407:5)
      at DestroyableTransform.Writable.write (node_modules/readable-stream/lib/_stream_writable.js:334:11)
      at Context.<anonymous> (test/csv-streamify.js:169:12)
      at processImmediate (node:internal/timers:466:21)

  21) edge cases
       should handle quotes spanning multiple chunks:
     TypeError: asyncWrite is not a function
      at onwrite (node_modules/readable-stream/lib/_stream_writable.js:470:7)
      at WritableState.onwrite (node_modules/readable-stream/lib/_stream_writable.js:180:5)
      at DestroyableTransform.afterTransform (node_modules/readable-stream/lib/_stream_transform.js:93:3)
      at DestroyableTransform.parse [as _transform] (csv-streamify.js:169:5)
      at DestroyableTransform.Transform._read (node_modules/readable-stream/lib/_stream_transform.js:184:10)
      at DestroyableTransform.Transform._write (node_modules/readable-stream/lib/_stream_transform.js:172:83)
      at doWrite (node_modules/readable-stream/lib/_stream_writable.js:418:64)
      at writeOrBuffer (node_modules/readable-stream/lib/_stream_writable.js:407:5)
      at DestroyableTransform.Writable.write (node_modules/readable-stream/lib/_stream_writable.js:334:11)
      at Context.<anonymous> (test/csv-streamify.js:179:12)
      at processImmediate (node:internal/timers:466:21)

  22) edge cases
       should handle all the quotes (issue #14):
     Uncaught TypeError: pna.nextTick is not a function
      at maybeReadMore (node_modules/readable-stream/lib/_stream_readable.js:517:9)
      at addChunk (node_modules/readable-stream/lib/_stream_readable.js:300:3)
      at readableAddChunk (node_modules/readable-stream/lib/_stream_readable.js:278:11)
      at DestroyableTransform.Readable.push (node_modules/readable-stream/lib/_stream_readable.js:245:10)
      at DestroyableTransform.Transform.push (node_modules/readable-stream/lib/_stream_transform.js:148:32)
      at emitLine (csv-streamify.js:73:14)
      at DestroyableTransform.parse [as _transform] (csv-streamify.js:106:9)
      at DestroyableTransform.Transform._read (node_modules/readable-stream/lib/_stream_transform.js:184:10)
      at DestroyableTransform.Transform._write (node_modules/readable-stream/lib/_stream_transform.js:172:83)
      at doWrite (node_modules/readable-stream/lib/_stream_writable.js:418:64)
      at writeOrBuffer (node_modules/readable-stream/lib/_stream_writable.js:407:5)
      at DestroyableTransform.Writable.write (node_modules/readable-stream/lib/_stream_writable.js:334:11)
      at StringStream.ondata (node:internal/streams/readable:754:22)
      at StringStream.emit (node:events:513:28)
      at addChunk (node:internal/streams/readable:315:12)
      at readableAddChunk (node:internal/streams/readable:289:9)
      at StringStream.Readable.push (node:internal/streams/readable:228:10)
      at /data/js-variants/multee/VariantsPureDep/csv-stream/variant_files/csv-stream/node_modules/string-to-stream/index.js:18:12
      at processTicksAndRejections (node:internal/process/task_queues:78:11)



I am package cwd .....

> cwd@0.10.0 test
> mocha



  cwd:
    ✓ should return the absolute filepath to the cwd
    ✓ should return the absolute filepath to the given file
    ✓ should work with multiple arguments
    ✓ should return the absolute path relative to the cwd


  4 passing (11ms)

I am package deferred-leveldown .....

> deferred-leveldown@7.0.0 test
> standard && hallmark && nyc node test.js

  /data/js-variants/multee/VariantsPureDep/deferred-leveldown/variant_files/deferred-leveldown/test.js:13:3: Expected property shorthand. (object-shorthand) (warning)
  /data/js-variants/multee/VariantsPureDep/deferred-leveldown/variant_files/deferred-leveldown/test.js:315:44: Expected property shorthand. (object-shorthand) (warning)
  /data/js-variants/multee/VariantsPureDep/deferred-leveldown/variant_files/deferred-leveldown/test.js:319:44: Expected property shorthand. (object-shorthand) (warning)
  /data/js-variants/multee/VariantsPureDep/deferred-leveldown/variant_files/deferred-leveldown/test.js:326:44: Expected property shorthand. (object-shorthand) (warning)
  /data/js-variants/multee/VariantsPureDep/deferred-leveldown/variant_files/deferred-leveldown/test.js:330:44: Expected property shorthand. (object-shorthand) (warning)
  /data/js-variants/multee/VariantsPureDep/deferred-leveldown/variant_files/deferred-leveldown/test.js:334:46: Expected property shorthand. (object-shorthand) (warning)
  /data/js-variants/multee/VariantsPureDep/deferred-leveldown/variant_files/deferred-leveldown/test.js:446:22: Expected property shorthand. (object-shorthand) (warning)
  /data/js-variants/multee/VariantsPureDep/deferred-leveldown/variant_files/deferred-leveldown/test.js:446:32: Expected property shorthand. (object-shorthand) (warning)
  /data/js-variants/multee/VariantsPureDep/deferred-leveldown/variant_files/deferred-leveldown/test.js:507:22: Expected property shorthand. (object-shorthand) (warning)
  /data/js-variants/multee/VariantsPureDep/deferred-leveldown/variant_files/deferred-leveldown/test.js:507:36: Expected property shorthand. (object-shorthand) (warning)
  /data/js-variants/multee/VariantsPureDep/deferred-leveldown/variant_files/deferred-leveldown/test.js:532:22: Expected property shorthand. (object-shorthand) (warning)
  /data/js-variants/multee/VariantsPureDep/deferred-leveldown/variant_files/deferred-leveldown/test.js:532:36: Expected property shorthand. (object-shorthand) (warning)
I am package delete-empty .....

> delete-empty@3.0.0 test
> mocha

I am package demeteorizer .....

> demeteorizer@4.3.0 pretest
> standard


> demeteorizer@4.3.0 test
> lab --threshold 100

I am package diagnostics .....

> diagnostics@2.0.2 test
> nyc --reporter=text --reporter=lcov npm run test:runner


> diagnostics@2.0.2 test:runner
> npm run test:basic && npm run test:node && npm run test:browser && npm run test:react-native


> diagnostics@2.0.2 test:basic
> mocha --require test/mock.js test/*.test.js



  diagnostics(adapters)
    hash
      ✓ is disabled by default
      ✓ reads #debug=...
      ✓ reads #diagnostics=...
    localstorage
      ✓ is disabled by default
      ✓ reads the debug key
      ✓ reads the diagnostics key
    process.env
      ✓ is disabled by default
      ✓ reads the DEBUG variable
      ✓ reads the DIAGNOSTICS key
    asyncstorage
      ✓ is disabled by default
      ✓ reads the debug key
      ✓ reads the diagnostics key

  diagnostics(base)
    ✓ returns the passed function with addition static props
    custom loggers:
      #set
        ✓ is a function
      #write
        ✓ will write to the #set logger
    environment adapters:
      #use
        ✓ is a function
        ✓ returns true when an new adapter is addded
        ✓ returns false if an adapter has been previously added
      #enabled
        ✓ is a function
        ✓ calls the assigned adapter with the namespace
        ✓ can process async based adapters (102ms)
    message transforming:
      #modify
        ✓ is a function
        ✓ returns true when a modifer is added
        ✓ returns false when a modifier is already added
      #process
        ✓ calls the stored modifier
        ✓ calls all modifiers in order and passes transformed message to next
    log processing:
      #nope
        ✓ is a function
        ✓ returns a function that returns false when called
        ✓ assigns the properties to the returned function
      #yep
        ✓ is a function
        ✓ returns a function that returns true
        ✓ assigns the properties to the returned function
        ✓ calls the process, and write methods

  diagnostics(logger)
    console
      ✓ is a function
      ✓ logs to console.log

  diagnostics(modifiers)
    namespace
      ✓ is a function
      ✓ will prefix messages with the namespace
      ✓ should slice the color flag as second argument
      ✓ does not render colors if `colors===false`
    namespace-ansi
      ✓ is a function
      ✓ adds the namespace
      ✓ does not render colors if `colors===false`


  42 passing (133ms)


> diagnostics@2.0.2 test:node
> mocha --require test/mock test/node.js



  diagnostics(node)
    ✓ returns a debugger function
    properties
      ✓ has the `modify`, `set` and `use` functions
      ✓ has dev/prod booleans
      ✓ has the namespace assigned to it
      ✓ is enabled (43ms)
    logging
      ✓ writes prefixed messages to the logger


  6 passing (126ms)


> diagnostics@2.0.2 test:browser
> mocha --require test/mock test/browser.js



  diagnostics(browser)
    ✓ returns a debugger function
    properties
      ✓ has the `modify`, `set` and `use` functions
      ✓ has dev/prod booleans
      ✓ has the namespace assigned to it
      ✓ is enabled (42ms)
    logging
      ✓ writes prefixed messages to the logger


  6 passing (133ms)


> diagnostics@2.0.2 test:react-native
> mocha --require test/mock test/react-native.js



  diagnostics(react-native)
    ✓ returns a debugger function
    properties
      ✓ has the `modify`, `set` and `use` functions
      ✓ has dev/prod booleans
      ✓ has the namespace assigned to it
      ✓ is enabled (43ms)
    logging
      ✓ writes prefixed messages to the logger


  6 passing (130ms)

--------------------------|----------|----------|----------|----------|-------------------|
File                      |  % Stmts | % Branch |  % Funcs |  % Lines | Uncovered Line #s |
--------------------------|----------|----------|----------|----------|-------------------|
All files                 |    96.51 |    86.89 |    93.55 |    97.52 |                   |
 diagnostics              |      100 |    91.67 |    93.75 |      100 |                   |
  diagnostics.js          |      100 |    91.67 |    93.75 |      100 |               138 |
 diagnostics/adapters     |      100 |    88.89 |      100 |      100 |                   |
  asyncstorage.js         |      100 |       80 |      100 |      100 |                 7 |
  hash.js                 |      100 |      100 |      100 |      100 |                   |
  index.js                |      100 |      100 |      100 |      100 |                   |
  localstorage.js         |      100 |      100 |      100 |      100 |                   |
  process.env.js          |      100 |      100 |      100 |      100 |                   |
 diagnostics/browser      |    94.12 |       90 |      100 |    94.12 |                   |
  development.js          |      100 |      100 |      100 |      100 |                   |
  index.js                |    66.67 |       50 |      100 |    66.67 |                 5 |
 diagnostics/logger       |      100 |      100 |      100 |      100 |                   |
  console.js              |      100 |      100 |      100 |      100 |                   |
 diagnostics/modifiers    |      100 |      100 |      100 |      100 |                   |
  namespace-ansi.js       |      100 |      100 |      100 |      100 |                   |
  namespace.js            |      100 |      100 |      100 |      100 |                   |
 diagnostics/node         |    94.44 |    83.33 |      100 |    94.44 |                   |
  development.js          |      100 |       90 |      100 |      100 |                14 |
  index.js                |    66.67 |       50 |      100 |    66.67 |                 5 |
 diagnostics/react-native |     87.1 |    78.57 |       75 |    92.86 |                   |
  development.js          |    89.29 |    83.33 |       75 |       96 |                39 |
  index.js                |    66.67 |       50 |      100 |    66.67 |                 5 |
--------------------------|----------|----------|----------|----------|-------------------|
I am package easy-soap-request .....

> easy-soap-request@5.2.0 test
> nyc mocha **/*test.js

----------|---------|----------|---------|---------|-------------------
File      | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s 
----------|---------|----------|---------|---------|-------------------
All files |      20 |        0 |       0 |      20 |                   
 index.js |      20 |        0 |       0 |      20 | 20-52             
----------|---------|----------|---------|---------|-------------------
I am package encoding-down .....

> encoding-down@7.1.0 test
> standard && hallmark && nyc node test

  /data/js-variants/multee/VariantsPureDep/encoding-down/variant_files/encoding-down/test/index.js:12:3: Expected property shorthand. (object-shorthand) (warning)
I am package eslint-formatter-pretty .....

> eslint-formatter-pretty@4.1.0 test
> xo && ava && tsd


  ✖ output 
  ✔ file heading links to the first error line
  ✔ file heading links to the first warning line if no errors in the file
  ✖ no line numbers 
  ✖ show line numbers 
  ✔ link rules to documentation when terminal supports links
  ✔ sort by severity, then line number, then column number
  ✔ display warning total before error total
  ✔ files will be sorted with least errors at the bottom, but zero errors at the top
  ✔ files with similar errorCounts will sort according to warningCounts
  ✔ use the `rulesMeta` property to get docs URL
  ✔ doesn't throw errors when rule docs aren't found

  3 tests failed

  output

  /data/js-variants/multee/VariantsPureDep/eslint-formatter-pretty/variant_files/eslint-formatter-pretty/test/test.js:46

   45:   t.regex(stripAnsi(output), /index\.js:18:2\n/);                        
   46:   t.regex(stripAnsi(output), /✖ {3}1:1 {2}AVA should be imported as test…
   47: });                                                                      

  Value must match expression:

  `␊
    ../../../../../../../Users/sindresorhus/dev/eslint-formatter-pretty/foo.js:8:2␊
       8:2  Unexpected todo comment.             no-warning-comments␊
  ␊
    ../../../../../../../Users/sindresorhus/dev/eslint-formatter-pretty/foo.js:8:2␊
       8:2  Unexpected todo comment.             @typescript-eslint/no-unused-vars␊
  ␊
    ../../../../../../../Users/sindresorhus/dev/eslint-formatter-pretty/index.js:18:2␊
       8:2  Unexpected todo comment.             no-warning-comments␊
      18:2  More than 1 blank line not allowed.  no-multiple-empty-lines␊
  ␊
    ../../../../../../../Users/sindresorhus/dev/eslint-formatter-pretty/test.js:1:1␊
       1:1  AVA should be imported as test.      ava/use-test␊
  ␊
    3 warnings␊
    2 errors␊
  `

  Regular expression:

  /✖ {3}1:1 {2}AVA should be imported as test. {6}ava\/use-test/



  no line numbers

  /data/js-variants/multee/VariantsPureDep/eslint-formatter-pretty/variant_files/eslint-formatter-pretty/test/test.js:68

   67:   t.regex(stripAnsi(output), /index\.js\n/);                             
   68:   t.regex(stripAnsi(output), /✖ {2}AVA should be imported as test. {6}av…
   69: });                                                                      

  Value must match expression:

  `␊
    ../../../../../../../Users/sindresorhus/dev/eslint-formatter-pretty/index.js␊
      Unexpected todo comment.             no-warning-comments␊
      More than 1 blank line not allowed.  no-multiple-empty-lines␊
  ␊
    ../../../../../../../Users/sindresorhus/dev/eslint-formatter-pretty/test.js␊
      AVA should be imported as test.      ava/use-test␊
  ␊
    1 warning␊
    2 errors␊
  `

  Regular expression:

  /✖ {2}AVA should be imported as test. {6}ava\/use-test/



  show line numbers

  /data/js-variants/multee/VariantsPureDep/eslint-formatter-pretty/variant_files/eslint-formatter-pretty/test/test.js:75

   74:   console.log(output);                                                   
   75:   t.regex(stripAnsi(output), /⚠ {3}0:0 {2}Unexpected todo comment. {13}n…
   76:   t.regex(stripAnsi(output), /✖ {3}1:1 {2}AVA should be imported as test…

  Value must match expression:

  `␊
    ../../../../../../../Users/sindresorhus/dev/eslint-formatter-pretty/index.js:18:2␊
       0:0  Unexpected todo comment.             no-warning-comments␊
      18:2  More than 1 blank line not allowed.  no-multiple-empty-lines␊
  ␊
    ../../../../../../../Users/sindresorhus/dev/eslint-formatter-pretty/test.js:1:1␊
       1:1  AVA should be imported as test.      ava/use-test␊
  ␊
    1 warning␊
    2 errors␊
  `

  Regular expression:

  /⚠ {3}0:0 {2}Unexpected todo comment. {13}no-warning-comments/

I am package expand-brackets .....

> expand-brackets@4.0.0 test
> mocha



  brackets
    main export
      1) should create the equivalent regex character classes for POSIX expressions:
    .match
      2) should support POSIX.2 character classes
      ✓ should match word characters
      ✓ should match literal brackets when escaped
      ✓ should match character classes
      ✓ should match character class alphabetical ranges
      ✓ should match character classes with leading dashes
      ✓ should match character classes with trailing dashes
      ✓ should match bracket literals
      ✓ should match bracket literals
      ✓ should negation patterns
      ✓ should match negated dashes
      ✓ should match negated brackets
      ✓ should match alpha-numeric characters
      3) should not create an invalid posix character class:
      4) should return `true` when the pattern matches:
      5) should return `false` when the pattern does not match:
    .makeRe()
      6) should make a regular expression for the given pattern:
    .match()
      7) should return an array of matching strings:
    POSIX: From the test suite for the POSIX.2 (BRE) pattern matching code:
      8) First, test POSIX.2 character classes
      9) should match using POSIX.2 negation patterns
      10) should match word characters
      11) should match digits with word class
      12) should not digits
      ✓ should not match word characters with digit class
      13) should match uppercase alpha characters
      ✓ should not match lowercase alpha characters
      ✓ should not match digits with upper class
      14) should match lowercase alpha characters
      ✓ should not match uppercase alpha characters
      15) should match one lower and one upper character
      16) should match hexidecimal digits
      17) should match punctuation characters (\-!"#$%&'()\*+,./:;<=>?@[\]^_`{|}~)
      ✓ should only match one character
      18) should only match zero or more characters
      19) invalid character class expressions are just characters to be matched
      20) should match the start of a valid sh identifier
      21) should match the first two characters of a valid sh identifier
      22) how about A?
      23) OK, what's a tab?  is it a blank? a space?
      ✓ let's check out characters in the ASCII range
      ✓ punctuation
      24) graph

  original wildmatch
    ✓ should support basic wildmatch (brackets) features
    ✓ should support Extended slash-matching features
    ✓ should match braces
    ✓ should match parens
    ✓ should match escaped characters
    ✓ should match brackets
    ✓ should not choke on malformed posix brackets
    ✓ should not choke on non-bracket characters
    25) should support Character class tests
    ✓ should support Additional tests, including some malformed wildmats
    26) should support Case-sensitivy features
    27) should support Additional tests not found in the original wildmatch


  28 passing (159ms)
  27 failing

  1) brackets
       main export
         should create the equivalent regex character classes for POSIX expressions::

      AssertionError [ERR_ASSERTION]: 'foo[[lower]]bar' == 'foo[a-z]bar'
      + expected - actual

      -foo[[lower]]bar
      +foo[a-z]bar
      
      at Context.<anonymous> (test/test.js:11:14)
      at processImmediate (node:internal/timers:466:21)

  2) brackets
       .match
         should support POSIX.2 character classes:

      AssertionError [ERR_ASSERTION]: [[:xdigit:]]
      + expected - actual

      -[]
      +[
      +  "e"
      +]
      
      at module.exports (test/support/match.js:25:10)
      at Context.<anonymous> (test/test.js:27:7)
      at processImmediate (node:internal/timers:466:21)

  3) brackets
       .match
         should not create an invalid posix character class::

      AssertionError [ERR_ASSERTION]: '[abc[punct]\\[0-9]' == '[abc\\-!"#$%&\'()\\*+,./:;<=>?@[\\]^_`{|}~\\[0-9]'
      + expected - actual

      -[abc[punct]\[0-9]
      +[abc\-!"#$%&'()\*+,./:;<=>?@[\]^_`{|}~\[0-9]
      
      at Context.<anonymous> (test/test.js:96:14)
      at processImmediate (node:internal/timers:466:21)

  4) brackets
       .match
         should return `true` when the pattern matches::

      AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

  assert(match.isMatch('a', '[[:lower:]]'))

      + expected - actual

      -false
      +true
      
      at Context.<anonymous> (test/test.js:100:7)
      at processImmediate (node:internal/timers:466:21)

  5) brackets
       .match
         should return `false` when the pattern does not match::

      AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

  assert(match.isMatch('A', '[![:lower:]]'))

      + expected - actual

      -false
      +true
      
      at Context.<anonymous> (test/test.js:118:7)
      at processImmediate (node:internal/timers:466:21)

  6) brackets
       .makeRe()
         should make a regular expression for the given pattern::

      AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:

/^(?:[[alpha]123])$/

should loosely deep-equal

/^(?:[a-zA-Z123])$/
      + expected - actual

      -/^(?:[[alpha]123])$/
      +/^(?:[a-zA-Z123])$/
      
      at Context.<anonymous> (test/test.js:129:14)
      at processImmediate (node:internal/timers:466:21)

  7) brackets
       .match()
         should return an array of matching strings::

      AssertionError [ERR_ASSERTION]: [[:alpha:]][[:digit:]][[:upper:]]
      + expected - actual

      -[]
      +[
      +  "a1B"
      +]
      
      at module.exports (test/support/match.js:25:10)
      at Context.<anonymous> (test/test.js:136:7)
      at processImmediate (node:internal/timers:466:21)

  8) brackets
       POSIX: From the test suite for the POSIX.2 (BRE) pattern matching code:
         First, test POSIX.2 character classes:

      AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

  assert(match.isMatch('e', '[[:xdigit:]]'))

      + expected - actual

      -false
      +true
      
      at Context.<anonymous> (test/test.js:143:7)
      at processImmediate (node:internal/timers:466:21)

  9) brackets
       POSIX: From the test suite for the POSIX.2 (BRE) pattern matching code:
         should match using POSIX.2 negation patterns:

      AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

  assert(match.isMatch('9', '[![:alpha:]]'))

      + expected - actual

      -false
      +true
      
      at Context.<anonymous> (test/test.js:150:7)
      at processImmediate (node:internal/timers:466:21)

  10) brackets
       POSIX: From the test suite for the POSIX.2 (BRE) pattern matching code:
         should match word characters:

      AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

  assert(match.isMatch('A', '[[:word:]]'))

      + expected - actual

      -false
      +true
      
      at Context.<anonymous> (test/test.js:155:7)
      at processImmediate (node:internal/timers:466:21)

  11) brackets
       POSIX: From the test suite for the POSIX.2 (BRE) pattern matching code:
         should match digits with word class:

      AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

  assert(match.isMatch('1', '[[:word:]]'))

      + expected - actual

      -false
      +true
      
      at Context.<anonymous> (test/test.js:162:7)
      at processImmediate (node:internal/timers:466:21)

  12) brackets
       POSIX: From the test suite for the POSIX.2 (BRE) pattern matching code:
         should not digits:

      AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

  assert(match.isMatch('1', '[[:digit:]]'))

      + expected - actual

      -false
      +true
      
      at Context.<anonymous> (test/test.js:167:7)
      at processImmediate (node:internal/timers:466:21)

  13) brackets
       POSIX: From the test suite for the POSIX.2 (BRE) pattern matching code:
         should match uppercase alpha characters:

      AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

  assert(match.isMatch('A', '[[:upper:]]'))

      + expected - actual

      -false
      +true
      
      at Context.<anonymous> (test/test.js:177:7)
      at processImmediate (node:internal/timers:466:21)

  14) brackets
       POSIX: From the test suite for the POSIX.2 (BRE) pattern matching code:
         should match lowercase alpha characters:

      AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

  assert(match.isMatch('a', '[[:lower:]]'))

      + expected - actual

      -false
      +true
      
      at Context.<anonymous> (test/test.js:192:7)
      at processImmediate (node:internal/timers:466:21)

  15) brackets
       POSIX: From the test suite for the POSIX.2 (BRE) pattern matching code:
         should match one lower and one upper character:

      AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

  assert(match.isMatch('aA', '[[:lower:]][[:upper:]]'))

      + expected - actual

      -false
      +true
      
      at Context.<anonymous> (test/test.js:202:7)
      at processImmediate (node:internal/timers:466:21)

  16) brackets
       POSIX: From the test suite for the POSIX.2 (BRE) pattern matching code:
         should match hexidecimal digits:

      AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

  assert(match.isMatch('ababab', '[[:xdigit:]]*'))

      + expected - actual

      -false
      +true
      
      at Context.<anonymous> (test/test.js:208:7)
      at processImmediate (node:internal/timers:466:21)

  17) brackets
       POSIX: From the test suite for the POSIX.2 (BRE) pattern matching code:
         should match punctuation characters (\-!"#$%&'()\*+,./:;<=>?@[\]^_`{|}~):

      AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

  assert(match.isMatch('!', '[[:punct:]]'))

      + expected - actual

      -false
      +true
      
      at Context.<anonymous> (test/test.js:214:7)
      at processImmediate (node:internal/timers:466:21)

  18) brackets
       POSIX: From the test suite for the POSIX.2 (BRE) pattern matching code:
         should only match zero or more characters:

      AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

  assert(match.isMatch('?*+', '[[:punct:]]*'))

      + expected - actual

      -false
      +true
      
      at Context.<anonymous> (test/test.js:232:7)
      at processImmediate (node:internal/timers:466:21)

  19) brackets
       POSIX: From the test suite for the POSIX.2 (BRE) pattern matching code:
         invalid character class expressions are just characters to be matched:

      AssertionError [ERR_ASSERTION]: [abc[:punct:][0-9]
      + expected - actual

      -[]
      +[
      +  "!"
      +]
      
      at module.exports (test/support/match.js:25:10)
      at Context.<anonymous> (test/test.js:239:7)
      at processImmediate (node:internal/timers:466:21)

  20) brackets
       POSIX: From the test suite for the POSIX.2 (BRE) pattern matching code:
         should match the start of a valid sh identifier:

      AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

  assert(match.isMatch('PATH', '[_[:alpha:]]*'))

      + expected - actual

      -false
      +true
      
      at Context.<anonymous> (test/test.js:243:7)
      at processImmediate (node:internal/timers:466:21)

  21) brackets
       POSIX: From the test suite for the POSIX.2 (BRE) pattern matching code:
         should match the first two characters of a valid sh identifier:

      AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

  assert(match.isMatch('PATH', '[_[:alpha:]][_[:alnum:]]*'))

      + expected - actual

      -false
      +true
      
      at Context.<anonymous> (test/test.js:247:7)
      at processImmediate (node:internal/timers:466:21)

  22) brackets
       POSIX: From the test suite for the POSIX.2 (BRE) pattern matching code:
         how about A?:

      AssertionError [ERR_ASSERTION]: [[:digit:]]
      + expected - actual

      -[]
      +[
      +  "9"
      +]
      
      at module.exports (test/support/match.js:25:10)
      at Context.<anonymous> (test/test.js:256:7)
      at processImmediate (node:internal/timers:466:21)

  23) brackets
       POSIX: From the test suite for the POSIX.2 (BRE) pattern matching code:
         OK, what's a tab?  is it a blank? a space?:

      AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

  assert(match.isMatch('\t', '[[:blank:]]'))

      + expected - actual

      -false
      +true
      
      at Context.<anonymous> (test/test.js:264:7)
      at processImmediate (node:internal/timers:466:21)

  24) brackets
       POSIX: From the test suite for the POSIX.2 (BRE) pattern matching code:
         graph:

      AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

  assert(match.isMatch('A', '[[:graph:]]'))

      + expected - actual

      -false
      +true
      
      at Context.<anonymous> (test/test.js:279:7)
      at processImmediate (node:internal/timers:466:21)

  25) original wildmatch
       should support Character class tests:

      AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

  assert(match.isMatch(' ', '[[:digit:][:upper:][:space:]]'))

      + expected - actual

      -false
      +true
      
      at Context.<anonymous> (test/wildmatch.js:70:5)
      at processImmediate (node:internal/timers:466:21)

  26) original wildmatch
       should support Case-sensitivy features:

      AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

  assert(match.isMatch('a', '[[:lower:]]'))

      + expected - actual

      -false
      +true
      
      at Context.<anonymous> (test/wildmatch.js:147:5)
      at processImmediate (node:internal/timers:466:21)

  27) original wildmatch
       should support Additional tests not found in the original wildmatch:

      AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

  assert(match.isMatch('-', '[[:space:]-\\]]'))

      + expected - actual

      -false
      +true
      
      at Context.<anonymous> (test/wildmatch.js:173:5)
      at processImmediate (node:internal/timers:466:21)



I am package extglob .....

> extglob@3.0.0 test
> mocha



  bash tests derived from the pd-ksh test suite:
    ✓ 11) should match /dev/@(tcp|udp)/*/*
    ✓ 14) should match 0|[1-9]*([0-9])
    ✓ 15) should match 0|[1-9]*([0-9])
    ✓ 16) should not match 0|[1-9]*([0-9])
    ✓ 17) should match 0|[1-9]*([0-9])
    ✓ 20) should match +([0-7])
    ✓ 21) should match +([0-7])
    ✓ 22) should not match +([0-7])
    ✓ 25) should match para@(chute|graph)
    ✓ 26) should not match para@(chute|graph)
    ✓ 27) should match para?([345]|99)1
    ✓ 28) should not match para?([345]|99)1
    ✓ 29) should not match para*([0-9])
    ✓ 30) should match para*([0-9])
    ✓ 31) should match para*([0-9])
    ✓ 32) should not match para*([0-9])
    ✓ 33) should not match para+([0-9])
    ✓ 34) should match para+([0-9])
    ✓ 35) should match para!(*.[0-9])
    ✓ 36) should match para!(*.[0-9])
    ✓ 37) should match para!(*.[0-9])
    ✓ 38) should match para!(*.[0-9])
    ✓ 41) should match *(0|1|3|5|7|9)
    ✓ 42) should not match *(0|1|3|5|7|9)
    ✓ 43) should match *(0|1|3|5|7|9)
    ✓ 44) should not match *(0|1|3|5|7|9)
    ✓ 45) should match *.c?(c)
    ✓ 46) should not match *.c?(c)
    ✓ 47) should match *.c?(c)
    ✓ 48) should not match *.c?(c)
    ✓ 49) should match !(*.c|*.h|Makefile.in|config*|README)
    ✓ 50) should not match !(*.c|*.h|Makefile.in|config*|README)
    ✓ 51) should match !(*.c|*.h|Makefile.in|config*|README)
    ✓ 52) should not match *\;[1-9]*([0-9])
    ✓ 53) should not match *\;[1-9]*([0-9])
    ✓ 54) should not match *\;[1-9]*([0-9])
    ✓ 55) should not match *\;[1-9]*([0-9])
    ✓ 56) should not match *;[1-9]*([0-9])
    ✓ 57) should match *;[1-9]*([0-9])*
    ✓ 58) should match *;[1-9]**([0-9])*
    ✓ 59) should not match *;[1-9]*([0-9])
    ✓ 61) should match !([*)*
    ✓ 62) should match !(\[*)*
    ✓ 63) should match !([*)*
    ✓ 64) should match !(\[*)*
    ✓ 65) should match !([*)*
    ✓ 66) should match !(\[*)*
    ✓ 67) should match +(a|b[)*
    ✓ 68) should match +(a|b\[)*
    ✓ 69) should match +(a|b[)*
    ✓ 70) should match +(a|b\[)*
    ✓ 71) should not match +(a|b[)*
    ✓ 72) should not match [a*(]*z
    ✓ 73) should not match [a*\(]*z
    ✓ 74) should match [a*(]*z
    ✓ 75) should match [a*\(]*z
    ✓ 76) should not match [a*(]*z
    ✓ 77) should not match [a*\(]*z
    ✓ 79) should not match +()c
    ✓ 80) should not match +()x
    ✓ 81) should match +(*)c
    ✓ 82) should not match +(*)x
    ✓ 83) should not match no-file+(a|b)stuff
    ✓ 84) should not match no-file+(a*(c)|b)stuff
    ✓ 86) should not match a+(b|c)d
    ✓ 87) should match a+(b|c)d
    ✓ 88) should match a+(b|c)d
    ✓ 90) should not match a!(@(b|B))d
    ✓ 91) should not match a!(@(b|B))d
    ✓ 92) should match a!(@(b|B))d
    ✓ 94) should not match a[b*(foo|bar)]d
    ✓ 95) should match a[b*(foo|bar)]d
    ✓ 96) should not match a[b*(foo|bar)]d
    ✓ 99) should not match *(a|b[)
    ✓ 100) should match *(a|b[)|f*
    ✓ 102) should match *(a|b[)
    ✓ 105) should match ab*(e|f)
    ✓ 106) should not match ab*(e|f)
    ✓ 107) should not match ab*(e|f)
    ✓ 108) should not match ab*(e|f)
    ✓ 109) should match ab*(e|f)
    ✓ 111) should not match b?*(e|f)
    ✓ 112) should not match b?*(e|f)
    ✓ 113) should not match b?*(e|f)
    ✓ 114) should not match b?*(e|f)
    ✓ 115) should not match b?*(e|f)
    ✓ 117) should not match ab*d+(e|f)
    ✓ 118) should match ab*d+(e|f)
    ✓ 119) should not match ab*d+(e|f)
    ✓ 120) should not match ab*d+(e|f)
    ✓ 121) should not match ab*d+(e|f)
    ✓ 123) should match ab**(e|f)
    ✓ 124) should match ab**(e|f)
    ✓ 125) should match ab**(e|f)
    ✓ 126) should match ab**(e|f)
    ✓ 127) should match ab**(e|f)
    ✓ 129) should not match ab*+(e|f)
    ✓ 130) should match ab*+(e|f)
    ✓ 131) should match ab*+(e|f)
    ✓ 132) should not match ab*+(e|f)
    ✓ 133) should match ab*+(e|f)
    ✓ 135) should match ab**(e|f)
    ✓ 136) should match ab**(e|f)
    ✓ 137) should match ab**(e|f)
    ✓ 138) should match ab**(e|f)
    ✓ 139) should match ab**(e|f)
    ✓ 141) should not match ab**(e|f)g
    ✓ 142) should not match ab**(e|f)g
    ✓ 143) should not match ab**(e|f)g
    ✓ 144) should match ab**(e|f)g
    ✓ 145) should not match ab**(e|f)g
    ✓ 147) should not match ab*+(e|f)
    ✓ 148) should match ab*+(e|f)
    ✓ 149) should match ab*+(e|f)
    ✓ 150) should not match ab*+(e|f)
    ✓ 151) should match ab*+(e|f)
    ✓ 153) should not match ab***ef
    ✓ 154) should match ab***ef
    ✓ 155) should match ab***ef
    ✓ 156) should not match ab***ef
    ✓ 157) should match ab***ef
    ✓ 159) should match ab**
    ✓ 160) should match ab**
    ✓ 161) should match ab**
    ✓ 162) should match ab**
    ✓ 163) should match ab**
    ✓ 166) should match *?(a)bc
    1) 169) should match a[^[:alnum:]]b
    ✓ 170) should match a[-.,:; _]b
    2) 171) should match a@([^[:alnum:]])b
    ✓ 172) should match a@([-.,:; _])b
    ✓ 173) should match a@([.])b
    ✓ 174) should match a@([^.])b
    ✓ 175) should match a@([^x])b
    3) 176) should match a+([^[:alnum:]])b
    4) 177) should match a@(.|[^[:alnum:]])b
    ✓ 179) should not match *([[:space:]]),*([[:space:]])
    5) 180) should match a*([[:space:]]),*([[:space:]])b

  bash extglob1 tests
    6) 11 "a.c" should match +([[:alpha:].])
    7) 12 "a.c" should match +([[:alpha:].])+([[:alpha:].])
    8) 13 "a.c" should match *([[:alpha:].])
    9) 14 "a.c" should match *([[:alpha:].])*([[:alpha:].])
    10) 15 "a.c" should match ?([[:alpha:].])?([[:alpha:].])?([[:alpha:].])
    11) 16 "a.c" should match @([[:alpha:].])@([[:alpha:].])@([[:alpha:].])
    12) 17 "." should not match !([[:alpha:].])
    13) 18 "." should match ?([[:alpha:].])
    14) 19 "." should match @([[:alpha:].])
    15) 20 "." should match *([[:alpha:].])
    16) 21 "." should match +([[:alpha:].])

  bash extglob1a tests
    ✓ 11 should match a*!(x)
    ✓ 12 should match a*!(x)
    ✓ 13 should not match a*!(x)
    ✓ 14 should match a*!(x)
    ✓ 15 should match a!(x)
    ✓ 16 should match a!(x)
    ✓ 17 should not match a!(x)
    ✓ 18 should not match a!(x)
    ✓ 19 should match a*?(x)
    ✓ 20 should match a*?(x)
    ✓ 21 should not match a*?(x)
    ✓ 22 should match a*?(x)
    ✓ 23 should match a?(x)
    ✓ 24 should not match a?(x)
    ✓ 25 should not match a?(x)
    ✓ 26 should match a?(x)

  bash extglob2 tests
    ✓ 11 should match *(f*(o))
    ✓ 12 should match *(f*(o))
    ✓ 13 should match *(f*(o))
    ✓ 14 should match *(f*(o))
    ✓ 15 should match *(f*(o))
    ✓ 16 should not match *(f+(o))
    ✓ 17 should not match *(f*(o))
    ✓ 18 should not match *(f*(o))
    ✓ 19 should match *(*(of*(o)x)o)
    ✓ 20 should not match *(f*(o))
    ✓ 21 should match *(f*(o)x)
    ✓ 22 should not match *(f*(o)x)
    ✓ 23 should match *(f*(o)x)
    ✓ 24 should match *(*(of*(o)x)o)
    ✓ 25 should match *(*(of*(o)x)o)
    ✓ 26 should match *(*(of*(o)x)o)
    ✓ 27 should match *(*(of*(o)x)o)
    ✓ 28 should not match *(*(of*(o)x)o)
    ✓ 29 should match *(*(of*(o)x)o)
    ✓ 30 should match *(@(a))a@(c)
    ✓ 31 should match *(@(a))a@(c)
    ✓ 32 should not match *(@(a))a@(c)
    ✓ 33 should match *(@(a))a@(c)
    ✓ 34 should not match *(@(a))a@(c)
    ✓ 35 should match ?@(a|b)*@(c)d
    ✓ 36 should match @(ab|a*@(b))*(c)d
    ✓ 37 should match @(ab|a*(b))*(c)d
    ✓ 38 should match @(ab|a*(b))*(c)d
    ✓ 39 should match @(b+(c)d|e*(f)g?|?(h)i@(j|k))
    ✓ 40 should match @(b+(c)d|e*(f)g?|?(h)i@(j|k))
    ✓ 41 should match @(b+(c)d|e*(f)g?|?(h)i@(j|k))
    ✓ 42 should match *(b+(c)d|e*(f)g?|?(h)i@(j|k))
    ✓ 43 should not match @(b+(c)d|e+(f)g?|?(h)i@(j|k))
    ✓ 44 should match *(of+(o))
    ✓ 45 should match *(oxf+(ox))
    ✓ 46 should not match *(oxf+(ox))
    ✓ 47 should match *(of+(o)|f)
    ✓ 49 should match @(foo|f|fo)*(f|of+(o))
    ✓ 50 should match *(of|oof+(o))
    ✓ 51 should match *(*(f)*(o))
    ✓ 53 should match *(fo|foo)
    ✓ 55 should match !(x)
    ✓ 56 should match !(x)*
    ✓ 57 should not match !(foo)
    ✓ 58 should not match !(foo)*
    ✓ 59 should match !(foo)
    ✓ 60 should not match !(foo)*
    ✓ 61 should not match !(*.*).!(*.*)
    ✓ 62 should not match !(*.*).!(*.*)
    ✓ 63 should not match mu!(*(c))?.pa!(*(z))?
    ✓ 64 should match !(f)
    ✓ 65 should match *(!(f))
    ✓ 66 should match +(!(f))
    ✓ 67 should match !(f)
    ✓ 68 should match *(!(f))
    ✓ 69 should match +(!(f))
    ✓ 70 should match !(f)
    ✓ 71 should match *(!(f))
    ✓ 72 should match +(!(f))
    ✓ 73 should not match !(f)
    ✓ 74 should not match *(!(f))
    ✓ 75 should not match +(!(f))
    ✓ 76 should match @(!(z*)|*x)
    ✓ 77 should not match @(!(z*)|*x)
    ✓ 78 should match @(!(z*)|*x)
    ✓ 79 should match @(!(z*)|*x)
    ✓ 80 should not match *(!(foo))
    ✓ 81 should not match !(foo)b*
    ✓ 82 should not match !(foo)b*

  bash extglob3 tests
    ✓ 11 should match @(ab|+([^/]))/..?(/)
    ✓ 12 should match +([^/])/..?(/)
    ✓ 13 should match @(ab|?b)/..?(/)
    ✓ 14 should match +([^/])/../
    ✓ 15 should match +([!/])/..?(/)
    ✓ 16 should match @(ab|+([!/]))/..?(/)
    ✓ 17 should match +([!/])/../
    ✓ 18 should match +([!/])/..?(/)
    ✓ 19 should match +([!/])/..@(/)
    ✓ 20 should match +(ab)/..?(/)
    ✓ 21 should match [!/][!/]/../
    ✓ 22 should match @(ab|?b)/..?(/)
    ✓ 23 should match [^/][^/]/../
    ✓ 24 should match ?b/..?(/)
    ✓ 25 should match +(?b)/..?(/)
    ✓ 26 should match +(?b|?b)/..?(/)
    ✓ 27 should match @(?b|?b)/..?(/)
    ✓ 28 should match @(a?|?b)/..?(/)
    ✓ 29 should match ?(ab)/..?(/)
    ✓ 30 should match ?(ab|??)/..?(/)
    ✓ 31 should match @(??)/..?(/)
    ✓ 32 should match @(??|a*)/..?(/)
    ✓ 33 should match @(a*)/..?(/)
    ✓ 34 should match +(??)/..?(/)
    ✓ 35 should match +(??|a*)/..?(/)
    ✓ 36 should match +(a*)/..?(/)
    ✓ 37 should match @(x)

  running extglob against minimatch tests
    ✓ "*(a|b[)" should not match *(a|b\[)
    ✓ "123abc" should not match ab*d+(e|f)
    ✓ "123abc" should not match ab?*(e|f)
    ✓ "a" should not match !(a)
    ✓ "a" should not match (b)
    ✓ "a" should not match ??
    ✓ "a" should not match a??b
    ✓ "a" should not match b?(a|b)
    ✓ "a." should not match *.+(b|d)
    ✓ "a" should match !(*.a|*.b|*.c)
    ✓ "a.a" should not match !(*.[a-b]*)
    ✓ "a.a" should not match !(*.a|*.b|*.c)
    ✓ "a.a" should not match !(*[a-b].[a-b]*)
    ✓ "a.a" should not match !*.(a|b)
    ✓ "a.a" should not match !*.(a|b)*
    ✓ "a.a" should not match *.!(a)
    ✓ "a.a" should not match *.+(b|d)
    ✓ "a.a.a" should not match !(*.[a-b]*)
    ✓ "a.a.a" should not match !(*[a-b].[a-b]*)
    ✓ "a.a.a" should not match !*.(a|b)
    ✓ "a.a.a" should not match !*.(a|b)*
    ✓ "a.a.a" should not match *.+(b|d)
    ✓ "a.abcd" should not match !(*.a|*.b|*.c)
    ✓ "a.abcd" should not match !(*.a|*.b|*.c)*
    ✓ "a.abcd" should not match *.!(a|b|c)
    ✓ "a.abcd" should not match *.!(a|b|c)*
    ✓ "a.b" should not match !(*.*)
    ✓ "a.b" should not match !(*.[a-b]*)
    ✓ "a.b" should not match !(*[a-b].[a-b]*)
    ✓ "a.b" should not match !*.(a|b)
    ✓ "a.b" should not match !*.(a|b)*
    ✓ "a.bb" should not match !(*.[a-b]*)
    ✓ "a.bb" should not match !(*[a-b].[a-b]*)
    ✓ "a.bb" should not match !*.(a|b)
    ✓ "a.bb" should not match !*.(a|b)*
    ✓ "a.ccc" should not match !*.(a|b)
    ✓ "a.ccc" should not match !*.(a|b)*
    ✓ "a.ccc" should not match *.+(b|d)
    ✓ "a.js" should not match !(*.js)
    ✓ "a.js" should not match *.!(js)
    ✓ "a.js.js" should not match !(*.js)
    ✓ "aa" should not match ?
    ✓ "aa" should not match @(a)b
    ✓ "aa" should not match a??b
    ✓ "aab" should not match ?
    ✓ "aab" should not match ??
    ✓ "aab" should not match @(c)b
    ✓ "ab" should not match a!(@(b|B))
    ✓ "aB" should not match a!(@(b|B))
    ✓ "ab" should not match a(*b
    ✓ "ab" should not match ab**(e|f)g
    ✓ "ab" should not match ab*+(e|f)
    ✓ "ab" should not match ab*d+(e|f)
    ✓ "ab" should not match ab?*(e|f)
    ✓ "abcdef" should not match (a+|b)+
    ✓ "abcdef" should not match ab**(e|f)g
    ✓ "abcdef" should not match ab?*(e|f)
    ✓ "abcfef" should not match (a+|b)+
    ✓ "abcfef" should not match ab**(e|f)g
    ✓ "abcfef" should not match ab*d+(e|f)
    ✓ "abcfefg" should not match (a+|b)+
    ✓ "abcfefg" should not match ab*d+(e|f)
    ✓ "abcfefg" should not match ab?*(e|f)
    ✓ "abd" should not match (a+|b)+
    ✓ "abd" should not match a!(@(b|B))d
    ✓ "abd" should not match ab*d+(e|f)
    ✓ "abef" should not match (a+|b)+
    ✓ "abef" should not match *(a+|b)
    ✓ "abef" should not match ab**(e|f)g
    ✓ "abef" should not match ab*d+(e|f)
    ✓ "acd" should not match (a+|b)+
    ✓ "acd" should not match ab*d+(e|f)
    ✓ "acd" should not match ab?*(e|f)
    ✓ "ax" should not match a?(b*)
    ✓ "b/a" should not match !(b/a)
    ✓ "baaac" should not match *(@(a))a@(c)
    ✓ "bb" should not match a?(a|b)
    ✓ "c" should not match *(@(a))a@(c)
    ✓ "c.a" should not match !(*.[a-b]*)
    ✓ "c.a" should not match !*.(a|b)
    ✓ "c.a" should not match !*.(a|b)*
    ✓ "c.a" should not match *.!(a)
    ✓ "c.a" should not match *.+(b|d)
    ✓ "c.js" should not match !(*.js)
    ✓ "c.js" should not match *.!(js)
    ✓ "cow" should not match .!(*.*)
    ✓ "d.a.d" should not match !*.(a|b)
    ✓ "d.a.d" should not match !*.(a|b)*
    ✓ "egz" should not match @(b+(c)d|e+(f)g?|?(h)i@(j|k))
    ✓ "f" should not match !(f)
    ✓ "f" should not match *(!(f))
    ✓ "f" should not match +(!(f))
    ✓ "f.a" should not match !(*.a|*.b|*.c)
    ✓ "f.a" should not match *.!(a|b|c)
    ✓ "foo" should not match !(foo)
    ✓ "foo" should not match !(foo)*
    ✓ "foo" should not match !(foo)+
    ✓ "foo" should not match !(foo)b*
    ✓ "foo" should not match *(!(foo))
    ✓ "foo.js.js" should not match *.!(js)*
    ✓ "foo.js.js" should not match *.!(js)*.!(js)
    ✓ "foo.js.js" should not match *.!(js)+
    ✓ "foob" should not match !(foo)b*
    ✓ "foobar" should not match !(foo)*
    ✓ "foobar" should not match !(foo)b*
    ✓ "foobb" should not match !(foo)b*
    ✓ "foooofof" should not match *(f+(o))
    ✓ "foooofofx" should not match *(f*(o))
    ✓ "foooxfooxofoxfooox" should not match *(f*(o)x)
    ✓ "mad.moo.cow" should not match !(*.*).!(*.*)
    ✓ "mad.moo.cow" should not match .!(*.*)
    ✓ "Makefile.in" should not match !(*.c|*.h|Makefile.in|config*|README)
    ✓ "moo" should not match .!(*.*)
    ✓ "moo.cow" should not match !(*.*).!(*.*)
    ✓ "moo.cow" should not match .!(*.*)
    ✓ "mucca.pazza" should not match mu!(*(c))?.pa!(*(z))?
    ✓ "ofooofoofofooo" should not match *(f*(o))
    ✓ "ofoooxoofxoofoooxoofxofo" should not match *(*(of*(o)x)o)
    ✓ "oxfoxfox" should not match *(oxf+(ox))
    ✓ "shell.c" should not match !(*.c|*.h|Makefile.in|config*|README)
    ✓ "xfoooofof" should not match *(f*(o))
    ✓ "zoot" should not match @(!(z*)|*x)
    ✓ "zz" should not match (a+|b)*
    ✓ "a" should match (a)
    ✓ "a" should match *(a)
    ✓ "a" should match +(a)
    ✓ "a" should match ?
    ✓ "a" should match ?(a|b)
    ✓ "a" should match a?(a|b)
    ✓ "a" should match a?(x)
    ✓ "a((((b" should match a(*b
    ✓ "a((b" should match a(*b
    ✓ "a(b" should match a(*b
    ✓ "a." should match !(*.a|*.b|*.c)
    ✓ "a." should match *!(.a|.b|.c)
    ✓ "a." should match *.!(a)
    ✓ "a." should match *.!(a|b|c)
    ✓ "a.a" should match (a|d).(a|b)*
    ✓ "a.a" should match *!(.a|.b|.c)
    ✓ "a.a.a" should match *.!(a)
    ✓ "a.abcd" should match *!(*.a|*.b|*.c)*
    ✓ "a.abcd" should match *!(.a|.b|.c)
    ✓ "a.b" should match (a|d).(a|b)*
    ✓ "a.b" should match *!(.a|.b|.c)
    ✓ "a.b" should match *.!(a)
    ✓ "a.b" should match *.+(b|d)
    ✓ "a.bb" should match (a|d).(a|b)*
    ✓ "a.bb" should match *.+(b|d)
    ✓ "a.c" should match *!(.a|.b|.c)
    ✓ "a.c.d" should match !(*.a|*.b|*.c)
    ✓ "a.c.d" should match *!(.a|.b|.c)
    ✓ "a.c.d" should match *.!(a|b|c)
    ✓ "a.ccc" should match !(*.[a-b]*)
    ✓ "a.ccc" should match !(*[a-b].[a-b]*)
    ✓ "a.js" should match *!(.js)
    ✓ "a.js.js" should match *!(.js)
    ✓ "a.js.js" should match *.!(js)
    ✓ "a.md" should match !(*.js)
    ✓ "a.md" should match *!(.js)
    ✓ "a.md" should match *.!(js)
    ✓ "aa" should match !(a)
    ✓ "aaac" should match *(@(a))a@(c)
    ✓ "aab" should match a??b
    ✓ "aac" should match *(@(a))a@(c)
    ✓ "ab" should match !(*.*)
    ✓ "ab" should match (a+|b)+
    ✓ "ab" should match ab**(e|f)
    ✓ "ab]" should match a!(@(b|B))
    ✓ "abab" should match ab**(e|f)
    ✓ "abb" should match !(*.*)
    ✓ "abbcd" should match @(ab|a*(b))*(c)d
    ✓ "aBc" should match a!(@(b|B))
    ✓ "abcd" should match ?@(a|b)*@(c)d
    ✓ "abcd" should match @(ab|a*@(b))*(c)d
    ✓ "abcdef" should match (a+|b)*
    ✓ "abcdef" should match ab**(e|f)
    ✓ "abcdef" should match ab*+(e|f)
    ✓ "abcdef" should match ab*d+(e|f)
    ✓ "abcfef" should match (a+|b)*
    ✓ "abcfef" should match ab**(e|f)
    ✓ "abcfef" should match ab*+(e|f)
    ✓ "abcfef" should match ab?*(e|f)
    ✓ "abcfefg" should match (a+|b)*
    ✓ "abcfefg" should match ab**(e|f)
    ✓ "abd" should match (a+|b)*
    ✓ "abd" should match a!(@(b|B))
    ✓ "abd" should match ab**(e|f)
    ✓ "abd" should match ab?*(e|f)
    ✓ "abef" should match (a+|b)*
    ✓ "abef" should match ab**(e|f)
    ✓ "abef" should match ab*+(e|f)
    ✓ "abef" should match ab?*(e|f)
    ✓ "ac" should match *(@(a))a@(c)
    ✓ "ac" should match a!(@(b|B))
    ✓ "acd" should match (a+|b)*
    ✓ "acd" should match @(ab|a*(b))*(c)d
    ✓ "acd" should match a!(@(b|B))
    ✓ "acd" should match a!(@(b|B))d
    ✓ "ax" should match ?(a*|b)
    ✓ "b" should match (a+|b)*
    ✓ "b/b" should match !(b/a)
    ✓ "b/c" should match !(b/a)
    ✓ "ba" should match b?(a|b)
    ✓ "bar" should match !(foo)*
    ✓ "bar" should match !(foo)b*
    ✓ "baz" should match !(foo)*
    ✓ "baz" should match !(foo)b*
    ✓ "c.a" should match !(*[a-b].[a-b]*)
    ✓ "c.c" should match *!(.a|.b|.c)
    ✓ "c.ccc" should match !(*.[a-b]*)
    ✓ "c.ccc" should match !(*[a-b].[a-b]*)
    ✓ "c.js" should match *!(.js)
    ✓ "d.a.d" should match !(*.[a-b]*)
    ✓ "d.a.d" should match !(*[a-b].[a-b]*)
    ✓ "d.a.d" should match *.!(a)
    ✓ "d.a.d" should match *.+(b|d)
    ✓ "d.d" should match !(*.a|*.b|*.c)
    ✓ "d.d" should match *!(.a|.b|.c)
    ✓ "d.d" should match *.!(a|b|c)
    ✓ "d.js.d" should match !(*.js)
    ✓ "d.js.d" should match *!(.js)
    ✓ "d.js.d" should match *.!(js)
    ✓ "e.e" should match !(*.a|*.b|*.c)
    ✓ "e.e" should match *!(.a|.b|.c)
    ✓ "e.e" should match *.!(a|b|c)
    ✓ "effgz" should match @(b+(c)d|e*(f)g?|?(h)i@(j|k))
    ✓ "efgz" should match @(b+(c)d|e*(f)g?|?(h)i@(j|k))
    ✓ "egz" should match @(b+(c)d|e*(f)g?|?(h)i@(j|k))
    ✓ "egzefffgzbcdij" should match *(b+(c)d|e*(f)g?|?(h)i@(j|k))
    ✓ "f.a" should match *!(.a|.b|.c)
    ✓ "f.f" should match !(*.a|*.b|*.c)
    ✓ "f.f" should match *!(.a|.b|.c)
    ✓ "f.f" should match *.!(a|b|c)
    ✓ "fff" should match !(f)
    ✓ "fff" should match *(!(f))
    ✓ "fff" should match +(!(f))
    ✓ "fffooofoooooffoofffooofff" should match *(*(f)*(o))
    ✓ "ffo" should match *(f*(o))
    ✓ "fofo" should match *(f*(o))
    ✓ "fofoofoofofoo" should match *(fo|foo)
    ✓ "foo" should match !(f)
    ✓ "foo" should match !(x)
    ✓ "foo" should match !(x)*
    ✓ "foo" should match *(!(f))
    ✓ "foo" should match +(!(f))
    ✓ "foo.js.js" should match *.!(js)
    ✓ "foobar" should match !(foo)
    ✓ "foofoofo" should match @(foo|f|fo)*(f|of+(o))
    ✓ "fooofoofofooo" should match *(f*(o))
    ✓ "foooofo" should match *(f*(o))
    ✓ "foooofof" should match *(f*(o))
    ✓ "foooxfooxfoxfooox" should match *(f*(o)x)
    ✓ "foooxfooxfxfooox" should match *(f*(o)x)
    ✓ "foot" should match @(!(z*)|*x)
    ✓ "foox" should match @(!(z*)|*x)
    ✓ "Makefile" should match !(*.c|*.h|Makefile.in|config*|README)
    ✓ "ofoofo" should match *(of+(o))
    ✓ "ofoofo" should match *(of+(o)|f)
    ✓ "ofoooxoofxo" should match *(*(of*(o)x)o)
    ✓ "ofoooxoofxoofoooxoofxo" should match *(*(of*(o)x)o)
    ✓ "ofoooxoofxoofoooxoofxoo" should match *(*(of*(o)x)o)
    ✓ "ofoooxoofxoofoooxoofxooofxofxo" should match *(*(of*(o)x)o)
    ✓ "ofxoofxo" should match *(*(of*(o)x)o)
    ✓ "oofooofo" should match *(of|oof+(o))
    ✓ "ooo" should match !(f)
    ✓ "ooo" should match *(!(f))
    ✓ "ooo" should match +(!(f))
    ✓ "oxfoxoxfox" should match *(oxf+(ox))
    ✓ "parse.y" should match !(*.c|*.h|Makefile.in|config*|README)
    ✓ "zoox" should match @(!(z*)|*x)

  .capture()
    ✓ should return null if no match
    ✓ should capture paren groups
    ✓ should capture star groups
    ✓ should capture plus groups
    ✓ should capture optional groups
    ✓ should capture @ groups
    ✓ should capture negated groups

  errors
    ✓ should throw an error when extglob() receives an invalid pattern
    ✓ should throw an error when extglob.isMatch() receives an invalid pattern
    ✓ should throw an error when extglob.makeRe() receives an invalid pattern
    ✓ should throw an error when extglob.create() receives an invalid pattern
    ✓ should throw an error when extglob.isMatch() receives an invalid string
    ✓ should throw an error when extglob.match() receives an invalid pattern

  options
    options.nonull
      ✓ should return the pattern when no matches are found
    options.failglob
      ✓ should throw an error when no matches are found
    options.strict
      ✓ should throw an error when an opening brace is missing

  running extglob against minimatch tests
    "asd.jss.xyz"
      ✓ should not match "*.!(js)*.!(xy)"
      ✓ should not match "*.!(js)*.!(xy)*"
      ✓ should not match "*.!(js).!(xy)"

  extglobs
    ✓ should export a function
    - failing unit tests from bash
    ✓ should throw on imbalanced sets when `options.strictErrors` is true
    ✓ should match extglobs ending with statechar
    ✓ should not choke on non-extglobs
    ✓ should work with file extensions
    ✓ should support star (`*`) extglobs
    ✓ should support negation (`!`) extglobs
    ✓ should support plus (`+`) extglobs
    ✓ should support qmark (`?`) extglobs
    ✓ should support ampersand (`@`) extglobs
    ✓ should support qmark matching
    ✓ should match exactly one of the given pattern:
    ✓ stuff from korn's book
    ✓ tests derived from those in rosenblatt's korn shell book
    ✓ tests derived from the pd-ksh test suite
    ✓ simple kleene star tests
    ✓ this doesn't work in bash either (per bash extglob.tests notes)
    ✓ should support multiple extglobs:
    ✓ should correctly match empty parens
    ✓ should match escaped parens
    ✓ should match escaped backslashes
    ✓ should match common regex patterns

  bash unit tests
    ✓ should match extended globs from the bash spec:
    ✓ should backtrack in alternation matches
    ✓ should support exclusions
    ✓ valid numbers
    ✓ stuff from korn's book
    ✓ tests derived from those in rosenblatt's korn shell book
    ✓ tests derived from the pd-ksh test suite
    ✓ simple kleene star tests
    ✓ check extended globbing in pattern removal
    ✓ More tests derived from a bug report (in bash) concerning extended glob patterns following a *
    ✓ bug in all versions up to and including bash-2.05b
    17) should work with character classes
    18) should support POSIX character classes in extglobs
    ✓ should pass extglob2 tests
    ✓ should support backtracking in alternation matches
    ✓ should support exclusions
    ✓ should pass extglob3 tests


  571 passing (317ms)
  1 pending
  18 failing

  1) bash tests derived from the pd-ksh test suite: 169) should match a[^[:alnum:]]b:

      AssertionError [ERR_ASSERTION]: a[^[:alnum:]]b ) should match a[^[:alnum:]]b
      + expected - actual

      -[]
      +[
      +  "a b"
      +  "a,b"
      +  "a-b"
      +  "a.b"
      +  "a:b"
      +  "a;b"
      +  "a_b"
      +]
      
      at module.exports (test/support/match.js:26:10)
      at Context.<anonymous> (test/bash.extglob.js:193:9)
      at processImmediate (node:internal/timers:466:21)

  2) bash tests derived from the pd-ksh test suite: 171) should match a@([^[:alnum:]])b:

      AssertionError [ERR_ASSERTION]: a@([^[:alnum:]])b ) should match a@([^[:alnum:]])b
      + expected - actual

      -[]
      +[
      +  "a b"
      +  "a,b"
      +  "a-b"
      +  "a.b"
      +  "a:b"
      +  "a;b"
      +  "a_b"
      +]
      
      at module.exports (test/support/match.js:26:10)
      at Context.<anonymous> (test/bash.extglob.js:193:9)
      at processImmediate (node:internal/timers:466:21)

  3) bash tests derived from the pd-ksh test suite: 176) should match a+([^[:alnum:]])b:

      AssertionError [ERR_ASSERTION]: a+([^[:alnum:]])b ) should match a+([^[:alnum:]])b
      + expected - actual

      -[]
      +[
      +  "a b"
      +  "a,b"
      +  "a-b"
      +  "a.b"
      +  "a:b"
      +  "a;b"
      +  "a_b"
      +]
      
      at module.exports (test/support/match.js:26:10)
      at Context.<anonymous> (test/bash.extglob.js:193:9)
      at processImmediate (node:internal/timers:466:21)

  4) bash tests derived from the pd-ksh test suite: 177) should match a@(.|[^[:alnum:]])b:

      AssertionError [ERR_ASSERTION]: a@(.|[^[:alnum:]])b ) should match a@(.|[^[:alnum:]])b
      + expected - actual

       [
      +  "a b"
      +  "a,b"
      +  "a-b"
         "a.b"
      +  "a:b"
      +  "a;b"
      +  "a_b"
       ]
      
      at module.exports (test/support/match.js:26:10)
      at Context.<anonymous> (test/bash.extglob.js:193:9)
      at processImmediate (node:internal/timers:466:21)

  5) bash tests derived from the pd-ksh test suite: 180) should match a*([[:space:]]),*([[:space:]])b:

      AssertionError [ERR_ASSERTION]: ) should match a*([[:space:]]),*([[:space:]])b
      + expected - actual

      -false
      +true
      
      at Context.<anonymous> (test/bash.extglob.js:195:16)
      at processImmediate (node:internal/timers:466:21)

  6) bash extglob1 tests 11 "a.c" should match +([[:alpha:].]):

      AssertionError [ERR_ASSERTION]: "a.c" should match +([[:alpha:].])
      + expected - actual

      -false
      +true
      
      at Context.<anonymous> (test/bash.extglob1.js:32:14)
      at processImmediate (node:internal/timers:466:21)

  7) bash extglob1 tests 12 "a.c" should match +([[:alpha:].])+([[:alpha:].]):

      AssertionError [ERR_ASSERTION]: "a.c" should match +([[:alpha:].])+([[:alpha:].])
      + expected - actual

      -false
      +true
      
      at Context.<anonymous> (test/bash.extglob1.js:32:14)
      at processImmediate (node:internal/timers:466:21)

  8) bash extglob1 tests 13 "a.c" should match *([[:alpha:].]):

      AssertionError [ERR_ASSERTION]: "a.c" should match *([[:alpha:].])
      + expected - actual

      -false
      +true
      
      at Context.<anonymous> (test/bash.extglob1.js:32:14)
      at processImmediate (node:internal/timers:466:21)

  9) bash extglob1 tests 14 "a.c" should match *([[:alpha:].])*([[:alpha:].]):

      AssertionError [ERR_ASSERTION]: "a.c" should match *([[:alpha:].])*([[:alpha:].])
      + expected - actual

      -false
      +true
      
      at Context.<anonymous> (test/bash.extglob1.js:32:14)
      at processImmediate (node:internal/timers:466:21)

  10) bash extglob1 tests 15 "a.c" should match ?([[:alpha:].])?([[:alpha:].])?([[:alpha:].]):

      AssertionError [ERR_ASSERTION]: "a.c" should match ?([[:alpha:].])?([[:alpha:].])?([[:alpha:].])
      + expected - actual

      -false
      +true
      
      at Context.<anonymous> (test/bash.extglob1.js:32:14)
      at processImmediate (node:internal/timers:466:21)

  11) bash extglob1 tests 16 "a.c" should match @([[:alpha:].])@([[:alpha:].])@([[:alpha:].]):

      AssertionError [ERR_ASSERTION]: "a.c" should match @([[:alpha:].])@([[:alpha:].])@([[:alpha:].])
      + expected - actual

      -false
      +true
      
      at Context.<anonymous> (test/bash.extglob1.js:32:14)
      at processImmediate (node:internal/timers:466:21)

  12) bash extglob1 tests 17 "." should not match !([[:alpha:].]):

      AssertionError [ERR_ASSERTION]: "." should not match !([[:alpha:].])
      + expected - actual

      -true
      +false
      
      at Context.<anonymous> (test/bash.extglob1.js:32:14)
      at processImmediate (node:internal/timers:466:21)

  13) bash extglob1 tests 18 "." should match ?([[:alpha:].]):

      AssertionError [ERR_ASSERTION]: "." should match ?([[:alpha:].])
      + expected - actual

      -false
      +true
      
      at Context.<anonymous> (test/bash.extglob1.js:32:14)
      at processImmediate (node:internal/timers:466:21)

  14) bash extglob1 tests 19 "." should match @([[:alpha:].]):

      AssertionError [ERR_ASSERTION]: "." should match @([[:alpha:].])
      + expected - actual

      -false
      +true
      
      at Context.<anonymous> (test/bash.extglob1.js:32:14)
      at processImmediate (node:internal/timers:466:21)

  15) bash extglob1 tests 20 "." should match *([[:alpha:].]):

      AssertionError [ERR_ASSERTION]: "." should match *([[:alpha:].])
      + expected - actual

      -false
      +true
      
      at Context.<anonymous> (test/bash.extglob1.js:32:14)
      at processImmediate (node:internal/timers:466:21)

  16) bash extglob1 tests 21 "." should match +([[:alpha:].]):

      AssertionError [ERR_ASSERTION]: "." should match +([[:alpha:].])
      + expected - actual

      -false
      +true
      
      at Context.<anonymous> (test/bash.extglob1.js:32:14)
      at processImmediate (node:internal/timers:466:21)

  17) bash unit tests should work with character classes:

      AssertionError [ERR_ASSERTION]: a[^[:alnum:]]b
      + expected - actual

      -[]
      +[
      +  "a b"
      +  "a,b"
      +  "a-b"
      +  "a.b"
      +  "a:b"
      +  "a;b"
      +  "a_b"
      +]
      
      at module.exports (test/support/match.js:26:10)
      at Context.<anonymous> (test/test.js:412:5)
      at processImmediate (node:internal/timers:466:21)

  18) bash unit tests should support POSIX character classes in extglobs:

      AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

  assert(match.isMatch('a.c', '+([[:alpha:].])'))

      + expected - actual

      -false
      +true
      
      at Context.<anonymous> (test/test.js:424:5)
      at processImmediate (node:internal/timers:466:21)



I am package facebook-node-sdk .....

> fb@2.0.0 test
> npm run build && node ./node_modules/mocha/bin/mocha --recursive


> fb@2.0.0 build
> babel src/ -d lib/

src/FacebookApiException.js -> lib/FacebookApiException.js
src/fb.js -> lib/fb.js


  access_token
    FB.setAccessToken('access_token')
      ✓ should set an access_token used by api calls (86ms)
    FB.api('/me', { access_token: 'access_token' }, cb)
      ✓ should override an access_token set with FB.setAccessToken()
    FB.getAccessToken()
      when accessToken is not set
        ✓ should return null
      when accessToken is set
        ✓ should return the access_token
    FB.api('/me', { access_token: 'access_token' }, cb)
      ✓ should include the correct appsecret_proof in the query

  FB.api
    batch
      FB.api('', 'post', { batch: [ { method: 'get', relative_url: '4' }, { method: 'get', relative_url: 'me/friends?limit=50' } ], cb)
        ✓ should return batch results

  FB.api
    GET
      FB.api('4', cb)
        ✓ should have id 4
      FB.api('/4', cb)
        ✓ should have id 4
        ✓ should work without `this`
      FB.api(4, cb)
        ✓ should throw synchronously: Path is of type number, not string
      FB.api('4', { fields: 'id' }), cb)
        ✓ should return { id: '4' } object
      FB.api('/4?fields=name', cb)
        ✓ should return { id: '4', name: 'Mark Zuckerberg' } object
      FB.api('/', { yes: true, no: false }), cb)
        ✓ should serialize boolean parameter values to true/false strings ?yes=true&no=false
      FB.api('/', { object: { a: false, b: 2, c: 'cat' } }), cb)
        ✓ should serialize object parameter values to json ?object={"a":false,"b":2,"c":"cat"}
      FB.api('/', { array: [false, 2, 'c'] }), cb)
        ✓ should serialize array parameter values to json ?array=[false,2,"c"]
      FB.api('/4?fields=name', { fields: 'id,first_name' }, cb)
        ✓ should return { id: '4', name: 'Mark Zuckerberg' } object
    oauth
      FB.api('oauth/access_token', { ..., grant_type: 'client_credentials' }, cb)
        ✓ should return an { access_token: '...' } object
      FB.api('oauth/access_token', { grant_type: 'fb_exchange_token', ..., fb_exchange_token: ... }, cb)
        ✓ should return an object with expires as a number

  FB.api
    GET
      FB.napi('/4', cb)
        ✓ should have id 4
        ✓ should work without `this`
      FB.api('/4')
        ✓ should return a Promise
        ✓ should work when the Promise option is Bluebird

  FB.api
    headers
      FB.getAppUsage()
        ✓ should be updated
        ✓ should be set back to 0 if no header sent
      FB.getPageUsage()
        ✓ should be updated
        ✓ should be set back to 0 if no header sent

  FB.api
    POST
      FB.api('me/feed', 'post', { message: 'My first post using facebook-node-sdk' }, cb)
        ✓ should have id 4_14
      FB.api('path', 'post', { file: { value: new Buffer('...', 'utf8'), options: { contentType: 'text/plain' } }, cb)
        ✓ should upload a file containing '...'
      FB.api('path', 'post', { file: fs.createReadStream('./ellipsis.txt') }, cb)
        ✓ should upload a file containing '...'

  FB.extend
    FB.extend()
      ✓ should create a Facebook instance
      ✓ should not be the same instance as FB
    FB.extend({appId: '42'})
      ✓ should set options passed to it
      ✓ should inherit other options from FB
      ✓ should inherit options from FB set after its creation
    fb.extend({appId: '42'})
      ✓ should work on an instance made by `new Facebook()` like it does on `FB`
    FB.withAccessToken('access_token')
      ✓ should create a new instance with accessToken set

  import
    import FB from 'fb';
      ✓ should expose FB.api
      ✓ FB.api should work without `this`
    import {FB} from 'fb';
      ✓ should expose FB.api
      ✓ FB.api should work without `this`
    import {FacebookApiException} from 'fb';
      ✓ should expose the FacebookApiException error type

  Facebook
    new Facebook()
      ✓ should create an instance that behaves like FB
    new Facebook({appId: '42'})
      ✓ should set options
      ✓ should not share options with FB

  exports.FacebookApiException
    ✓ should be a function
    ✓ should create a FacebookApiException instance that derives from Error

  exports.version
    ✓ should be a string with this package's current version

  eslint
    ✓ should have no errors in . (1029ms)

  FB.getLoginUrl
    when no options are set
      FB.getLoginUrl({}})
        ✓ should throw
      FB.getLoginUrl({ appId: 'app_id' }})
        ✓ should equal https://www.facebook.com/v2.5/dialog/oauth?response_type=code&redirect_uri=https%3A%2F%2Fwww.facebook.com%2Fconnect%2Flogin_success.html&client_id=app_id
      FB.getLoginUrl({ client_id: 'app_id' }})
        ✓ should equal https://www.facebook.com/v2.5/dialog/oauth?response_type=code&redirect_uri=https%3A%2F%2Fwww.facebook.com%2Fconnect%2Flogin_success.html&client_id=app_id
      FB.getLoginUrl({ client_id: 'app_id', scope: 'email' }})
        ✓ should equal https://www.facebook.com/v2.5/dialog/oauth?response_type=code&scope=email&redirect_uri=https%3A%2F%2Fwww.facebook.com%2Fconnect%2Flogin_success.html&client_id=app_id
      FB.getLoginUrl({ client_id: 'app_id', state: 'state_data' }})
        ✓ should equal https://www.facebook.com/v2.5/dialog/oauth?response_type=code&state=state_data&redirect_uri=https%3A%2F%2Fwww.facebook.com%2Fconnect%2Flogin_success.html&client_id=app_id
      FB.getLoginUrl({ client_id: 'app_id', redirectUri: 'http://example.com/' }})
        ✓ should equal https://www.facebook.com/v2.5/dialog/oauth?response_type=code&redirect_uri=http%3A%2F%2Fexample.com%2F&client_id=app_id
      FB.getLoginUrl({ client_id: 'app_id', redirect_uri: 'http://example.com/' }})
        ✓ should equal https://www.facebook.com/v2.5/dialog/oauth?response_type=code&redirect_uri=http%3A%2F%2Fexample.com%2F&client_id=app_id
      FB.getLoginUrl({ client_id: 'app_id', display: 'popup' }})
        ✓ should equal https://www.facebook.com/v2.5/dialog/oauth?response_type=code&display=popup&redirect_uri=https%3A%2F%2Fwww.facebook.com%2Fconnect%2Flogin_success.html&client_id=app_id
      FB.getLoginUrl({ client_id: 'app_id', responseType: 'token' }})
        ✓ should equal https://www.facebook.com/v2.5/dialog/oauth?response_type=token&redirect_uri=https%3A%2F%2Fwww.facebook.com%2Fconnect%2Flogin_success.html&client_id=app_id
      FB.getLoginUrl({ client_id: 'app_id', response_type: 'token' }})
        ✓ should equal https://www.facebook.com/v2.5/dialog/oauth?response_type=token&redirect_uri=https%3A%2F%2Fwww.facebook.com%2Fconnect%2Flogin_success.html&client_id=app_id
    when the redirectUri option is set to http://example.com/
      FB.getLoginUrl({ client_id: 'app_id' }})
        ✓ should equal https://www.facebook.com/v2.5/dialog/oauth?response_type=code&redirect_uri=http%3A%2F%2Fexample.com%2F&client_id=app_id
      FB.getLoginUrl({ client_id: 'app_id', redirectUri: 'http://example.org/' }})
        ✓ should equal https://www.facebook.com/v2.5/dialog/oauth?response_type=code&redirect_uri=http%3A%2F%2Fexample.org%2F&client_id=app_id
      FB.getLoginUrl({ client_id: 'app_id', redirect_uri: 'http://example.org/' }})
        ✓ should equal https://www.facebook.com/v2.5/dialog/oauth?response_type=code&redirect_uri=http%3A%2F%2Fexample.org%2F&client_id=app_id
    when the scope option is set to 'email'
      FB.getLoginUrl({ client_id: 'app_id' }})
        ✓ should equal https://www.facebook.com/v2.5/dialog/oauth?response_type=code&scope=email&redirect_uri=https%3A%2F%2Fwww.facebook.com%2Fconnect%2Flogin_success.html&client_id=app_id
      FB.getLoginUrl({ client_id: 'app_id', scope: 'email,user_likes' }})
        ✓ should equal https://www.facebook.com/v2.5/dialog/oauth?response_type=code&scope=email%2Cuser_likes&redirect_uri=https%3A%2F%2Fwww.facebook.com%2Fconnect%2Flogin_success.html&client_id=app_id

  FB.options
    beta
      ✓ Should default beta to false
      ✓ Should allow beta option to be set
      ✓ Should make use graph.facebook when beta is false
      ✓ Should make use graph.beta.facebook when beta is true
    userAgent
      ✓ Should default to thuzi_nodejssdk/2.0.0
      ✓ Should default the userAgent for FB.api requests to thuzi_nodejssdk/2.0.0
      ✓ Should be used as the userAgent for FB.api requests
    version
      ✓ Should default version to v2.5
      ✓ Should change the version used in FB.api requests
      ✓ Should not prepend a version to FB.api('/v2.12/4', cb) style requests
      ✓ Should change the version used in FB.getLoginUrl

  FB.parseSignedRequest
    FB.parseSignedRequest(signedRequest, app_secret)
      when app_secret is defined
        ✓ should decode the correct payload
        ✓ should prefer the app_secret argument over the appSecret option
      when signedRequest is undefined
        ✓ should return undefined
      when signedRequest is not two pieces separated by a .
        ✓ should return undefined
      when signedRequest is not base64 encoded
        ✓ should return undefined
      when signature is incorrect
        ✓ should return undefined
      when app_secret is undefined
        ✓ should use the appSecret option to decode the payload
        ✓ should throw when the appSecret option is not defined


  82 passing (1s)

I am package fastify .....

> fastify@4.11.0 test
> npm run lint && npm run unit && npm run test:typescript


> fastify@4.11.0 lint
> npm run lint:standard && npm run lint:typescript && npm run lint:markdown


> fastify@4.11.0 lint:standard
> standard | snazzy


> fastify@4.11.0 lint:typescript
> eslint -c types/.eslintrc.json types/**/*.d.ts test/types/**/*.test-d.ts


> fastify@4.11.0 lint:markdown
> markdownlint-cli2

markdownlint-cli2 v0.6.0 (markdownlint v0.27.0)

> fastify@4.11.0 unit
> tap

TAP version 13
# Subtest: test/404s.test.js
    # Subtest: default 404
        1..5
        ok 1 - should not error
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - unsupported method # time=37.575ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - framework-unsupported method # time=9.563ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - unsupported route # time=7.249ms
        
        # Subtest: using post method and multipart/formdata
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 5 - using post method and multipart/formdata # time=8.883ms
        
    ok 1 - default 404 # time=245.572ms
    
    # Subtest: customized 404
        1..6
        ok 1 - should not error
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - unsupported method # time=13.729ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - framework-unsupported method # time=4.86ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - unsupported route # time=4.794ms
        
        # Subtest: with error object
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - with error object # time=11.754ms
        
        # Subtest: error object with headers property
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 6 - error object with headers property # time=9.515ms
        
    ok 2 - customized 404 # time=62.962ms
    
    # Subtest: custom header in notFound handler
        1..2
        ok 1 - should not error
        # Subtest: not found with custom header
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
        ok 2 - not found with custom header # time=10.168ms
        
    ok 3 - custom header in notFound handler # time=38.636ms
    
    # Subtest: setting a custom 404 handler multiple times is an error
        1..5
        # Subtest: at the root level
            1..2
            ok 1 - type is Error
            ok 2 - should be equal
        ok 1 - at the root level # time=2.803ms
        
        # Subtest: at the plugin level
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 2 - at the plugin level # time=93.452ms
        
        # Subtest: at multiple levels
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 3 - at multiple levels # time=7.162ms
        
        # Subtest: at multiple levels / 2
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 4 - at multiple levels / 2 # time=38.121ms
        
        # Subtest: in separate plugins at the same level
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 5 - in separate plugins at the same level # time=15.767ms
        
    ok 4 - setting a custom 404 handler multiple times is an error # time=168.927ms
    
    # Subtest: encapsulated 404
        1..13
        ok 1 - should not error
        # Subtest: root unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - root unsupported method # time=21.363ms
        
        # Subtest: root framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - root framework-unsupported method # time=5.228ms
        
        # Subtest: root unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - root unsupported route # time=5.296ms
        
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 5 - unsupported method # time=5.639ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 6 - framework-unsupported method # time=5.038ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 7 - unsupported route # time=23.377ms
        
        # Subtest: unsupported method 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 8 - unsupported method 2 # time=4.399ms
        
        # Subtest: framework-unsupported method 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 9 - framework-unsupported method 2 # time=3.969ms
        
        # Subtest: unsupported route 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 10 - unsupported route 2 # time=8.884ms
        
        # Subtest: unsupported method 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 11 - unsupported method 3 # time=5.866ms
        
        # Subtest: framework-unsupported method 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 12 - framework-unsupported method 3 # time=5.027ms
        
        # Subtest: unsupported route 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 13 - unsupported route 3 # time=12.217ms
        
    ok 5 - encapsulated 404 # time=187.239ms
    
    # Subtest: custom 404 hook and handler context
        1..21
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should not error
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should not error
        ok 20 - should be equal
        ok 21 - should be equal
    ok 6 - custom 404 hook and handler context # time=65.576ms
    
    # Subtest: encapsulated custom 404 without - prefix hook and handler context
        1..13
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equal
    ok 7 - encapsulated custom 404 without - prefix hook and handler context # time=12.79ms
    
    # Subtest: run hooks on default 404
        1..7
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - preHandler called
        ok 4 - onSend called
        ok 5 - onResponse called
        ok 6 - should not error
        ok 7 - should be equal
    ok 8 - run hooks on default 404 # time=12.178ms
    
    # Subtest: run non-encapsulated plugin hooks on default 404
        1..6
        ok 1 - onRequest called
        ok 2 - preHandler called
        ok 3 - onSend called
        ok 4 - onResponse called
        ok 5 - should not error
        ok 6 - should be equal
    ok 9 - run non-encapsulated plugin hooks on default 404 # time=12.874ms
    
    # Subtest: run non-encapsulated plugin hooks on custom 404
        1..11
        ok 1 - onRequest called
        ok 2 - onRequest called
        ok 3 - preHandler called
        ok 4 - preHandler called
        ok 5 - onSend called
        ok 6 - onSend called
        ok 7 - onResponse called
        ok 8 - onResponse called
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
    ok 10 - run non-encapsulated plugin hooks on custom 404 # time=11.942ms
    
    # Subtest: run hook with encapsulated 404
        1..11
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - onRequest 2 called
        ok 4 - preHandler called
        ok 5 - preHandler 2 called
        ok 6 - onSend called
        ok 7 - onSend 2 called
        ok 8 - onResponse called
        ok 9 - onResponse 2 called
        ok 10 - should not error
        ok 11 - should be equal
    ok 11 - run hook with encapsulated 404 # time=15.943ms
    
    # Subtest: run hook with encapsulated 404 and framework-unsupported method
        1..11
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - onRequest 2 called
        ok 4 - preHandler called
        ok 5 - preHandler 2 called
        ok 6 - onSend called
        ok 7 - onSend 2 called
        ok 8 - onResponse called
        ok 9 - onResponse 2 called
        ok 10 - should not error
        ok 11 - should be equal
    ok 12 - run hook with encapsulated 404 and framework-unsupported method # time=31.015ms
    
    # Subtest: hooks check 404
        1..13
        ok 1 - should not error
        ok 2 - onRequest
        ok 3 - should be equivalent
        ok 4 - onSend
        ok 5 - onResponse
        ok 6 - onRequest
        ok 7 - should be equivalent
        ok 8 - onSend
        ok 9 - onResponse
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should not error
        ok 13 - should be equal
    ok 13 - hooks check 404 # time=33.517ms
    
    # Subtest: setNotFoundHandler should not suppress duplicated routes checking
        1..1
        ok 1 - expect truthy value
    ok 14 - setNotFoundHandler should not suppress duplicated routes checking # time=4.773ms
    
    # Subtest: log debug for 404
        1..1
        # Subtest: log debug
            1..7
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
        ok 1 - log debug # time=9.263ms
        
    ok 15 - log debug for 404 # time=17.122ms
    
    # Subtest: Unknown method
        1..5
        ok 1 - should not error
        ok 2 - expected to throw
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent strictly
    ok 16 - Unknown method # time=44.549ms
    
    # Subtest: recognizes errors from the http-errors module
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent strictly
    ok 17 - recognizes errors from the http-errors module # time=11.158ms
    
    # Subtest: the default 404 handler can be invoked inside a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
    ok 18 - the default 404 handler can be invoked inside a prefixed plugin # time=7.417ms
    
    # Subtest: an inherited custom 404 handler can be invoked inside a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - an inherited custom 404 handler can be invoked inside a prefixed plugin # time=15.447ms
    
    # Subtest: encapsulated custom 404 handler without a prefix is the handler for the entire 404 level
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 20 - encapsulated custom 404 handler without a prefix is the handler for the entire 404 level # time=12.552ms
    
    # Subtest: cannot set notFoundHandler after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 21 - cannot set notFoundHandler after binding # time=5.219ms
    
    # Subtest: 404 inside onSend
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 22 - 404 inside onSend # time=9.367ms
    
    # Subtest: onSend hooks run when an encapsulated route invokes the notFound handler
        1..3
        ok 1 - onSend hook called
        ok 2 - should not error
        ok 3 - should be equal
    ok 23 - onSend hooks run when an encapsulated route invokes the notFound handler # time=6.77ms
    
    # Subtest: preHandler option for setNotFoundHandler
        1..10
        # Subtest: preHandler option
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 1 - preHandler option # time=42.019ms
        
        # Subtest: preHandler hook in setNotFoundHandler should be called when callNotFound
            1..3
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 2 - preHandler hook in setNotFoundHandler should be called when callNotFound # time=8.057ms
        
        # Subtest: preHandler hook in setNotFoundHandler should accept an array of functions and be called when callNotFound
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 3 - preHandler hook in setNotFoundHandler should accept an array of functions and be called when callNotFound # time=24.267ms
        
        # Subtest: preHandler option should be called after preHandler hook
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 4 - preHandler option should be called after preHandler hook # time=6.202ms
        
        # Subtest: preHandler option should be unique per prefix
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 5 - preHandler option should be unique per prefix # time=14.158ms
        
        # Subtest: preHandler option should handle errors
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 6 - preHandler option should handle errors # time=6.551ms
        
        # Subtest: preHandler option should handle errors with custom status code
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 7 - preHandler option should handle errors with custom status code # time=6.233ms
        
        # Subtest: preHandler option could accept an array of functions
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 8 - preHandler option could accept an array of functions # time=6.229ms
        
        # Subtest: preHandler option does not interfere with preHandler
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 9 - preHandler option does not interfere with preHandler # time=12.107ms
        
        # Subtest: preHandler option should keep the context
            1..3
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 10 - preHandler option should keep the context # time=13.262ms
        
    ok 24 - preHandler option for setNotFoundHandler # time=153.972ms
    
    # Subtest: reply.notFound invoked the notFound handler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 25 - reply.notFound invoked the notFound handler # time=6.236ms
    
    # Subtest: The custom error handler should be invoked after the custom not found handler
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - type is Error
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 26 - The custom error handler should be invoked after the custom not found handler # time=7.545ms
    
    # Subtest: If the custom not found handler does not use an Error, the custom error handler should not be called
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 27 - If the custom not found handler does not use an Error, the custom error handler should not be called # time=6.393ms
    
    # Subtest: preValidation option
        1..3
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 28 - preValidation option # time=6.113ms
    
    # Subtest: preValidation option could accept an array of functions
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 29 - preValidation option could accept an array of functions # time=6.279ms
    
    # Subtest: Should fail to invoke callNotFound inside a 404 handler
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 30 - Should fail to invoke callNotFound inside a 404 handler # time=8.3ms
    
    # Subtest: 400 in case of bad url (pre find-my-way v2.2.0 was a 404)
        # Subtest: Dynamic route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 1 - Dynamic route # time=22.534ms
        
        # Subtest: Wildcard
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - Wildcard # time=6.783ms
        
        # Subtest: No route registered
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - No route registered # time=24.331ms
        
        # Subtest: Only / is registered
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - Only / is registered # time=6.955ms
        
        # Subtest: customized 404
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - customized 404 # time=7.03ms
        
        1..5
    ok 31 - 400 in case of bad url (pre find-my-way v2.2.0 was a 404) # time=76.957ms
    
    # Subtest: setNotFoundHandler should be chaining fastify instance
        # Subtest: Register route after setNotFoundHandler
            1..6
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should not error
            ok 5 - should be equal
            ok 6 - should be equal
        ok 1 - Register route after setNotFoundHandler # time=9.193ms
        
        1..1
    ok 32 - setNotFoundHandler should be chaining fastify instance # time=15.701ms
    
    # Subtest: Send 404 when frameworkError calls reply.callNotFound
        # Subtest: Dynamic route
            1..4
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 1 - Dynamic route # time=7.841ms
        
        1..1
    ok 33 - Send 404 when frameworkError calls reply.callNotFound # time=35.839ms
    
    # Subtest: hooks are applied to not found handlers /1
        ok 1 - should be equal
        1..1
    ok 34 - hooks are applied to not found handlers /1 # time=35.205ms
    
    # Subtest: hooks are applied to not found handlers /2
        ok 1 - should be equal
        1..1
    ok 35 - hooks are applied to not found handlers /2 # time=13.758ms
    
    # Subtest: hooks are applied to not found handlers /3
        ok 1 - should be equal
        1..1
    ok 36 - hooks are applied to not found handlers /3 # time=4.981ms
    
    1..36
    # time=1454.927ms
not ok 1 - test/404s.test.js # time=1454.927ms
  ---
  env: {}
  file: test/404s.test.js
  timeout: 30000
  command: /usr/local/bin/node
  args:
    - --allow-natives-syntax
    - test/404s.test.js
  stdio:
    - 0
    - pipe
    - 2
  cwd: /data/js-variants/multee/VariantsPureDep/fastify/variant_files/fastify
  exitCode: null
  signal: SIGTERM
  ...

# Subtest: test/500s.test.js
    # Subtest: default 500
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - default 500 # time=151.919ms
    
    # Subtest: custom 500
        1..6
        ok 1 - type is object
        ok 2 - type is Request
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 2 - custom 500 # time=11.279ms
    
    # Subtest: encapsulated 500
        1..10
        ok 1 - type is object
        ok 2 - type is Request
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equivalent
    ok 3 - encapsulated 500 # time=54.092ms
    
    # Subtest: custom 500 with hooks
        1..7
        ok 1 - onRequest
        ok 2 - onSend
        ok 3 - onResponse
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 4 - custom 500 with hooks # time=13.27ms
    
    # Subtest: cannot set errorHandler after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 5 - cannot set errorHandler after binding # time=42.208ms
    
    1..5
    # time=283.71ms
ok 2 - test/500s.test.js # time=283.71ms

# Subtest: test/allowUnsafeRegex.test.js
    # Subtest: allow unsafe regex
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - allow unsafe regex # time=98.132ms
    
    # Subtest: allow unsafe regex not match
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 2 - allow unsafe regex not match # time=19.116ms
    
    # Subtest: allow unsafe regex not safe
        1..1
        ok 1 - expected to throw
    ok 3 - allow unsafe regex not safe # time=96.256ms
    
    # Subtest: allow unsafe regex not safe by default
        1..1
        ok 1 - expected to throw
    ok 4 - allow unsafe regex not safe by default # time=3.546ms
    
    # Subtest: allow unsafe regex allow unsafe
        1..5
        ok 1 - expected to not throw
        ok 2 - should not error
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 5 - allow unsafe regex allow unsafe # time=27.806ms
    
    1..5
    # time=287.906ms
ok 3 - test/allowUnsafeRegex.test.js # time=287.906ms

# Subtest: test/als.test.js
    ok 1 - should not error
    ok 2 - expect truthy value
    ok 3 - should not error
    ok 4 - should be equal
    ok 5 - should be equivalent
    ok 6 - expect truthy value
    ok 7 - should not error
    ok 8 - should be equal
    ok 9 - should be equivalent
    ok 10 - expect truthy value
    ok 11 - should not error
    ok 12 - should be equal
    ok 13 - should be equivalent
    1..13
    # time=56.252ms
ok 4 - test/als.test.js # time=56.252ms

# Subtest: test/async-await.test.js
    # Subtest: async await
        1..11
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 1 - async await # time=349.789ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (undefined)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 2 - ignore the result of the promise if reply.send is called beforehand (undefined) # time=37.096ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (object)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 3 - ignore the result of the promise if reply.send is called beforehand (object) # time=39.157ms
    
    # Subtest: server logs an error if reply.send is called and a value is returned via async/await
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
    ok 4 - server logs an error if reply.send is called and a value is returned via async/await # time=98.492ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (undefined)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 5 - ignore the result of the promise if reply.send is called beforehand (undefined) # time=27.354ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (object)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 6 - ignore the result of the promise if reply.send is called beforehand (object) # time=11.647ms
    
    # Subtest: await reply if we will be calling reply.send in the future
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 7 - await reply if we will be calling reply.send in the future # time=10.837ms
    
    # Subtest: await reply if we will be calling reply.send in the future (error case)
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 8 - await reply if we will be calling reply.send in the future (error case) # time=12.604ms
    
    # Subtest: support reply decorators with await
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 9 - support reply decorators with await # time=39.576ms
    
    # Subtest: inject async await
        1..1
        ok 1 - should be equivalent
    ok 10 - inject async await # time=16.085ms
    
    # Subtest: inject async await - when the server equal up
        1..2
        ok 1 - should be equivalent
        ok 2 - should be equivalent
    ok 11 - inject async await - when the server equal up # time=230.056ms
    
    # Subtest: async await plugin
        1..1
        ok 1 - should be equivalent
    ok 12 - async await plugin # time=211.167ms
    
    # Subtest: does not call reply.send() twice if 204 response equal already sent
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 13 - does not call reply.send() twice if 204 response equal already sent # time=20.42ms
    
    # Subtest: promise was fulfilled with undefined
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - promise was fulfilled with undefined # time=22.763ms
    
    # Subtest: promise was fulfilled with undefined using inject
        ok 1 - should be equal
        ok 2 - should be equal
        1..2
    ok 15 - promise was fulfilled with undefined using inject # time=35.145ms
    
    # Subtest: error is not logged because promise was fulfilled with undefined but response was sent before promise resolution
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 16 - error is not logged because promise was fulfilled with undefined but response was sent before promise resolution # time=18.652ms
    
    # Subtest: Thrown Error instance sets HTTP status code
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - Thrown Error instance sets HTTP status code # time=6.46ms
    
    # Subtest: customErrorHandler support
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - customErrorHandler support # time=22.686ms
    
    # Subtest: customErrorHandler support without throwing
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 19 - customErrorHandler support without throwing # time=5.793ms
    
    # Subtest: customErrorHandler only called if reply not already sent
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 20 - customErrorHandler only called if reply not already sent # time=22.576ms
    
    # Subtest: setNotFoundHandler should accept return value
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 21 - setNotFoundHandler should accept return value # time=6.468ms
    
    # Subtest: customErrorHandler should accept return value
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 22 - customErrorHandler should accept return value # time=6.104ms
    
    # Subtest: await self
        ok 1 - should be equal
        1..1
    ok 23 - await self # time=39.815ms
    
    1..23
    # time=1313.605ms
ok 5 - test/async-await.test.js # time=1313.605ms

# Subtest: test/bodyLimit.test.js
    # Subtest: bodyLimit
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should not error
        ok 5 - should be equal
    ok 1 - bodyLimit # time=90.968ms
    
    # Subtest: default request.routeOptions.bodyLimit should be 1048576
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 2 - default request.routeOptions.bodyLimit should be 1048576 # time=18.949ms
    
    # Subtest: request.routeOptions.bodyLimit should be equal to route limit
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 3 - request.routeOptions.bodyLimit should be equal to route limit # time=14.509ms
    
    # Subtest: request.routeOptions.bodyLimit should be equal to server limit
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 4 - request.routeOptions.bodyLimit should be equal to server limit # time=37.364ms
    
    1..4
    # time=176.654ms
ok 6 - test/bodyLimit.test.js # time=176.654ms

# Subtest: test/build/error-serializer.test.js
    # Subtest: check generated code syntax
        1..1
        ok 1 - should be equal
    ok 1 - check generated code syntax # time=5262.612ms
    
    ok 2 - ensure the current error serializer is latest # SKIP
    1..2
    # skip: 1
    # time=5377.026ms
ok 7 - test/build/error-serializer.test.js # time=5377.026ms

# Subtest: test/build/version.test.js
    # Subtest: should be the same as package.json
        1..1
        ok 1 - should be equal
    ok 1 - should be the same as package.json # time=8.762ms
    
    1..1
    # time=15.085ms
ok 8 - test/build/version.test.js # time=15.085ms

# Subtest: test/case-insensitive.test.js
    # Subtest: case insensitive
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - case insensitive # time=102.562ms
    
    # Subtest: case insensitive inject
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 2 - case insensitive inject # time=38.699ms
    
    # Subtest: case insensitive (parametric)
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 3 - case insensitive (parametric) # time=33.192ms
    
    # Subtest: case insensitive (wildcard)
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 4 - case insensitive (wildcard) # time=26.147ms
    
    1..4
    # time=228.167ms
ok 9 - test/case-insensitive.test.js # time=228.167ms

# Subtest: test/chainable.test.js
    # Subtest: chainable - get
        1..1
        ok 1 - type is [object Object]
    ok 1 - chainable - get # time=13.126ms
    
    # Subtest: chainable - post
        1..1
        ok 1 - type is [object Object]
    ok 2 - chainable - post # time=3.039ms
    
    # Subtest: chainable - route
        1..1
        ok 1 - type is [object Object]
    ok 3 - chainable - route # time=2.808ms
    
    1..3
    # time=45.525ms
ok 10 - test/chainable.test.js # time=45.525ms

# Subtest: test/close-pipelining.test.js
    # Subtest: Should return 503 while closing - pipelining
        ok 1 - should be equivalent
        1..1
    ok 1 - Should return 503 while closing - pipelining # time=212.568ms
    
    # Subtest: Should not return 503 while closing - pipelining - return503OnClosing: false, skip Node >= v19.x
        ok 1 - should be equivalent
        1..1
    ok 2 - Should not return 503 while closing - pipelining - return503OnClosing: false, skip Node >= v19.x # time=31.659ms
    
    ok 3 - Should close the socket abruptly - pipelining - return503OnClosing: false, skip Node < v19.x # SKIP
    1..3
    # skip: 1
    # time=276.618ms
ok 11 - test/close-pipelining.test.js # time=276.618ms

# Subtest: test/close.test.js
    # Subtest: close callback
        1..4
        ok 1 - should not error
        ok 2 - type is [object Object]
        ok 3 - should not error
        ok 4 - expect truthy value
    ok 1 - close callback # time=126.139ms
    
    # Subtest: inside register
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - expect truthy value
    ok 2 - inside register # time=26.584ms
    
    # Subtest: close order
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 3 - close order # time=44.01ms
    
    # Subtest: close order - async
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 4 - close order - async # time=8.525ms
    
    # Subtest: should not throw an error if the server is not listening
        1..2
        ok 1 - type is [object Object]
        ok 2 - should not error
    ok 5 - should not throw an error if the server is not listening # time=4.176ms
    
    # Subtest: onClose should keep the context
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
    ok 6 - onClose should keep the context # time=39.692ms
    
    # Subtest: Should return error while closing (promise) - injection
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 7 - Should return error while closing (promise) - injection # time=58.328ms
    
    # Subtest: Should return error while closing (callback) - injection
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 8 - Should return error while closing (callback) - injection # time=129.662ms
    
    # Subtest: Current opened connection should continue to work after closing and return "connection: close" header - return503OnClosing: false, skip Node >= v19.x
        ok 1 - should not error
        ok 2 - should match pattern provided
        ok 3 - should match pattern provided
        ok 4 - should match pattern provided
        ok 5 - should match pattern provided
        1..5
    ok 9 - Current opened connection should continue to work after closing and return "connection: close" header - return503OnClosing: false, skip Node >= v19.x # time=46.212ms
    
    ok 10 - Current opened connection should NOT continue to work after closing and return "connection: close" header - return503OnClosing: false, skip Node < v19.x # SKIP
    # Subtest: Current opened connection should not accept new incoming connections
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 11 - Current opened connection should not accept new incoming connections # time=316.653ms
    
    # Subtest: Cannot be reopened the closed server without listen callback
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 12 - Cannot be reopened the closed server without listen callback # time=7.201ms
    
    # Subtest: Cannot be reopened the closed server has listen callback
        1..2
        ok 1 - should be equal
        ok 2 - expect truthy value
    ok 13 - Cannot be reopened the closed server has listen callback # time=36.436ms
    
    ok 14 - shutsdown while keep-alive connections are active (non-async, native) # SKIP
    ok 15 - shutsdown while keep-alive connections are active (non-async, idle, native) # SKIP
    # Subtest: shutsdown while keep-alive connections are active (non-async, custom)
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 16 - shutsdown while keep-alive connections are active (non-async, custom) # time=12.15ms
    
    1..16
    # skip: 3
    # time=870.348ms
ok 12 - test/close.test.js # time=870.348ms

# Subtest: test/connectionTimeout.test.js
    # Subtest: connectionTimeout
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 1 - connectionTimeout # time=64.455ms
    
    1..1
    # time=72.559ms
ok 13 - test/connectionTimeout.test.js # time=72.559ms

# Subtest: test/constrained-routes.test.js
    # Subtest: Should register a host constrained route
        1..7
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 1 - Should register a host constrained route # time=131.875ms
    
    # Subtest: Should register the same route with host constraints
        1..8
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 2 - Should register the same route with host constraints # time=16.243ms
    
    # Subtest: Should allow registering custom constrained routes
        1..8
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 3 - Should allow registering custom constrained routes # time=63.585ms
    
    # Subtest: Should allow registering custom constrained routes outside constructor
        1..8
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 4 - Should allow registering custom constrained routes outside constructor # time=16.491ms
    
    # Subtest: Add a constraint strategy after fastify instance was started
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - Cannot add constraint strategy when fastify instance is already started!
    ok 5 - Add a constraint strategy after fastify instance was started # time=8.978ms
    
    # Subtest: Add a constraint strategy should throw an error if there already exist custom strategy with the same name
        1..1
        ok 1 - There already exists a custom constraint with the name secret.
    ok 6 - Add a constraint strategy should throw an error if there already exist custom strategy with the same name # time=2.839ms
    
    # Subtest: Add a constraint strategy shouldn't throw an error if default constraint with the same name isn't used
        1..1
        ok 1 - (unnamed test)
    ok 7 - Add a constraint strategy shouldn't throw an error if default constraint with the same name isn't used # time=2.223ms
    
    # Subtest: Add a constraint strategy should throw an error if default constraint with the same name is used
        1..1
        ok 1 - There already exists a route with version constraint.
    ok 8 - Add a constraint strategy should throw an error if default constraint with the same name is used # time=3.749ms
    
    # Subtest: The hasConstraintStrategy should return false for default constraints until they are used
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 9 - The hasConstraintStrategy should return false for default constraints until they are used # time=6.828ms
    
    # Subtest: The hasConstraintStrategy should return true if there already exist a custom constraint with the same name
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 10 - The hasConstraintStrategy should return true if there already exist a custom constraint with the same name # time=4.267ms
    
    # Subtest: Should allow registering an unconstrained route after a constrained route
        1..6
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
    ok 11 - Should allow registering an unconstrained route after a constrained route # time=44.5ms
    
    # Subtest: Should allow registering constrained routes in a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 12 - Should allow registering constrained routes in a prefixed plugin # time=11.673ms
    
    # Subtest: Should allow registering a constrained GET route after a constrained HEAD route
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 13 - Should allow registering a constrained GET route after a constrained HEAD route # time=11.586ms
    
    # Subtest: Should allow registering a constrained GET route after an unconstrained HEAD route
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 14 - Should allow registering a constrained GET route after an unconstrained HEAD route # time=10.554ms
    
    # Subtest: Will not try to re-createprefixed HEAD route if it already exists and exposeHeadRoutes is true for constrained routes
        1..1
        ok 1 - expect truthy value
    ok 15 - Will not try to re-createprefixed HEAD route if it already exists and exposeHeadRoutes is true for constrained routes # time=6.916ms
    
    # Subtest: allows separate constrained and unconstrained HEAD routes
        1..1
        ok 1 - expect truthy value
    ok 16 - allows separate constrained and unconstrained HEAD routes # time=21.414ms
    
    # Subtest: allow async constraints
        1..5
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should be equal
        ok 5 - should be equal
    ok 17 - allow async constraints # time=23.982ms
    
    # Subtest: error in async constraints
        1..8
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should be equal
    ok 18 - error in async constraints # time=31.678ms
    
    1..18
    # time=472.332ms
ok 14 - test/constrained-routes.test.js # time=472.332ms

# Subtest: test/content-length.test.js
    # Subtest: default 413 with bodyLimit option
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - default 413 with bodyLimit option # time=107.812ms
    
    # Subtest: default 400 with wrong content-length
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 2 - default 400 with wrong content-length # time=12.639ms
    
    # Subtest: custom 413 with bodyLimit option
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 3 - custom 413 with bodyLimit option # time=27.354ms
    
    # Subtest: custom 400 with wrong content-length
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 4 - custom 400 with wrong content-length # time=7.511ms
    
    # Subtest: \#2214 - wrong content-length
        ok 1 - should be equal
        1..1
    ok 5 - \#2214 - wrong content-length # time=14.297ms
    
    # Subtest: \#2543 - wrong content-length with errorHandler
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
        1..3
    ok 6 - \#2543 - wrong content-length with errorHandler # time=22.874ms
    
    1..6
    # time=217.914ms
ok 15 - test/content-length.test.js # time=217.914ms

# Subtest: test/content-parser.test.js
    # Subtest: hasContentTypeParser
        1..0
    ok 1 - hasContentTypeParser # time=22.09ms
    
    # Subtest: should know about internal parsers
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
    ok 2 - should know about internal parsers # time=106.159ms
    
    # Subtest: should work with string and RegExp
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect falsey value
        ok 7 - expect falsey value
    ok 3 - should work with string and RegExp # time=7.154ms
    
    # Subtest: getParser
        1..0
    ok 4 - getParser # time=114.551ms
    
    # Subtest: existingParser
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - expect falsey value
        ok 6 - expect falsey value
        ok 7 - expect falsey value
        1..7
    ok 5 - existingParser # time=15.85ms
    
    # Subtest: add
        1..0
    ok 6 - add # time=11.229ms
    
    # Subtest: non-Error thrown from content parser is properly handled
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
    ok 7 - non-Error thrown from content parser is properly handled # time=51.444ms
    
    # Subtest: Error thrown 415 from content type is null and make post request to server
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 8 - Error thrown 415 from content type is null and make post request to server # time=35.69ms
    
    # Subtest: remove
        1..0
    ok 9 - remove # time=22.287ms
    
    # Subtest: remove all should remove all existing parsers and reset cache
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
    ok 10 - remove all should remove all existing parsers and reset cache # time=16.243ms
    
    # Subtest: Safeguard against malicious content-type / 1
        1..12
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
        ok 8 - should be equivalent
        ok 9 - should be equivalent
        ok 10 - should be equivalent
        ok 11 - should be equivalent
        ok 12 - should be equivalent
    ok 11 - Safeguard against malicious content-type / 1 # time=38.129ms
    
    # Subtest: Safeguard against malicious content-type / 2
        1..1
        ok 1 - should be equivalent
    ok 12 - Safeguard against malicious content-type / 2 # time=15.47ms
    
    # Subtest: Safeguard against malicious content-type / 3
        1..1
        ok 1 - should be equivalent
    ok 13 - Safeguard against malicious content-type / 3 # time=32.085ms
    
    # Subtest: Safeguard against content-type spoofing - string
        1..1
        ok 1 - should be called
    ok 14 - Safeguard against content-type spoofing - string # time=7.655ms
    
    # Subtest: Safeguard against content-type spoofing - regexp
        1..1
        ok 1 - should be called
    ok 15 - Safeguard against content-type spoofing - regexp # time=9.616ms
    
    # Subtest: content-type match parameters - string 1
        1..1
        ok 1 - should be called
    ok 16 - content-type match parameters - string 1 # time=20.228ms
    
    # Subtest: content-type match parameters - string 2
        1..1
        ok 1 - should be called
    ok 17 - content-type match parameters - string 2 # time=6.192ms
    
    # Subtest: content-type match parameters - regexp
        1..1
        ok 1 - should be called
    ok 18 - content-type match parameters - regexp # time=40.018ms
    
    # Subtest: content-type fail when parameters not match - string 1
        1..1
        ok 1 - should be equivalent
    ok 19 - content-type fail when parameters not match - string 1 # time=6.03ms
    
    # Subtest: content-type fail when parameters not match - string 2
        1..1
        ok 1 - should be equivalent
    ok 20 - content-type fail when parameters not match - string 2 # time=5.674ms
    
    # Subtest: content-type fail when parameters not match - regexp
        1..1
        ok 1 - should be equivalent
    ok 21 - content-type fail when parameters not match - regexp # time=11.23ms
    
    # Subtest: content-type regexp list should be cloned when plugin override
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 22 - content-type regexp list should be cloned when plugin override # time=17.573ms
    
    # Subtest: should return matching parser
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 23 - should return matching parser # time=3.237ms
    
    # Subtest: should return matching parser with caching
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 24 - should return matching parser with caching # time=4.278ms
    
    # Subtest: should prefer content type parser with string value
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 25 - should prefer content type parser with string value # time=2.187ms
    
    # Subtest: should return parser that catches all if no other is set
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 26 - should return parser that catches all if no other is set # time=3.353ms
    
    # Subtest: should return undefined if no matching parser exist
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 27 - should return undefined if no matching parser exist # time=2.261ms
    
    # Subtest: returns always false for "*"
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 28 - returns always false for "*" # time=2.342ms
    
    # Subtest: let you override the default parser once
        1..2
        ok 1 - Content type parser 'application/json' already present
        ok 2 - Content type parser 'text/plain' already present
    ok 29 - let you override the default parser once # time=5.232ms
    
    # Subtest: should only accept string and RegExp
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - The content type should be a string or a RegExp
        ok 4 - The content type should be a string or a RegExp
    ok 30 - should only accept string and RegExp # time=3.7ms
    
    # Subtest: should set "*" as parser that catches all
        1..1
        ok 1 - should be equal
    ok 31 - should set "*" as parser that catches all # time=1.116ms
    
    # Subtest: should remove default parser
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 32 - should remove default parser # time=1.745ms
    
    # Subtest: should remove RegExp parser
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 33 - should remove RegExp parser # time=1.43ms
    
    # Subtest: should throw an error if content type is neither string nor RegExp
        1..1
        ok 1 - expected to throw
    ok 34 - should throw an error if content type is neither string nor RegExp # time=1.753ms
    
    # Subtest: should not throw error if content type does not exist
        1..1
        ok 1 - expected to not throw
    ok 35 - should not throw error if content type does not exist # time=1.304ms
    
    # Subtest: should not remove any content type parser if content type does not exist
        1..1
        ok 1 - should be equivalent
    ok 36 - should not remove any content type parser if content type does not exist # time=1.207ms
    
    1..36
    # time=701.427ms
ok 16 - test/content-parser.test.js # time=701.427ms

# Subtest: test/content-type.test.js
    # Subtest: should remove content-type for setErrorHandler
        1..8
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
        ok 8 - should be equivalent
    ok 1 - should remove content-type for setErrorHandler # time=127.585ms
    
    1..1
    # time=155.697ms
ok 17 - test/content-type.test.js # time=155.697ms

# Subtest: test/context-config.test.js
    # Subtest: config
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 1 - config # time=100.397ms
    
    # Subtest: config with exposeHeadRoutes
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 2 - config with exposeHeadRoutes # time=19.82ms
    
    # Subtest: config without exposeHeadRoutes
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 3 - config without exposeHeadRoutes # time=33.432ms
    
    1..3
    # time=169.683ms
ok 18 - test/context-config.test.js # time=169.683ms

# Subtest: test/copy.test.js
    # Subtest: can be created - copy
        1..1
        ok 1 - (unnamed test)
    ok 1 - can be created - copy # time=12.643ms
    
    ok 2 - should not error
    # Subtest: request - copy
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 3 - request - copy # time=38.377ms
    
    1..3
    # time=143.327ms
ok 19 - test/copy.test.js # time=143.327ms

# Subtest: test/custom-http-server.test.js
    # Subtest: Should support a custom http server
        1..4
        ok 1 - it is called twice for every HOST interface
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - Should support a custom http server # time=83.204ms
    
    # Subtest: Should not allow forceCloseConnection=idle if the server does not support closeIdleConnections
        1..1
        ok 1 - Cannot set forceCloseConnections to 'idle' as your HTTP server does not support closeIdleConnections method
    ok 2 - Should not allow forceCloseConnection=idle if the server does not support closeIdleConnections # time=51.733ms
    
    1..2
    # time=145.322ms
ok 20 - test/custom-http-server.test.js # time=145.322ms

# Subtest: test/custom-parser-async.test.js
    # Subtest: contentTypeParser should add a custom async parser
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=38.313ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=20.315ms
        
    ok 1 - contentTypeParser should add a custom async parser # time=134.208ms
    
    1..1
    # time=140.877ms
ok 21 - test/custom-parser-async.test.js # time=140.877ms

# Subtest: test/custom-parser.test.js
    # Subtest: contentTypeParser method should exist
        1..1
        ok 1 - expect truthy value
    ok 1 - contentTypeParser method should exist # time=18.887ms
    
    # Subtest: contentTypeParser should add a custom parser
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=32.533ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=17.528ms
        
    ok 2 - contentTypeParser should add a custom parser # time=246.173ms
    
    # Subtest: contentTypeParser should handle multiple custom parsers
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 3 - contentTypeParser should handle multiple custom parsers # time=31.867ms
    
    # Subtest: contentTypeParser should handle an array of custom contentTypes
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 4 - contentTypeParser should handle an array of custom contentTypes # time=56.571ms
    
    # Subtest: contentTypeParser should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 5 - contentTypeParser should handle errors # time=12.327ms
    
    # Subtest: contentTypeParser should support encapsulation
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - expect falsey value
        ok 6 - expect falsey value
    ok 6 - contentTypeParser should support encapsulation # time=21.315ms
    
    # Subtest: contentTypeParser should support encapsulation, second try
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - contentTypeParser should support encapsulation, second try # time=30.612ms
    
    # Subtest: contentTypeParser shouldn't support request with undefined "Content-Type"
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 8 - contentTypeParser shouldn't support request with undefined "Content-Type" # time=17.167ms
    
    # Subtest: the content type should be a string or RegExp
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 9 - the content type should be a string or RegExp # time=3.355ms
    
    # Subtest: the content type cannot be an empty string
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 10 - the content type cannot be an empty string # time=4.006ms
    
    # Subtest: the content type handler should be a function
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 11 - the content type handler should be a function # time=27.377ms
    
    # Subtest: catch all content type parser
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 12 - catch all content type parser # time=44.61ms
    
    # Subtest: catch all content type parser should not interfere with other conte type parsers
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 13 - catch all content type parser should not interfere with other conte type parsers # time=15.495ms
    
    # Subtest: '*' catch undefined Content-Type requests
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - '*' catch undefined Content-Type requests # time=34.797ms
    
    # Subtest: cannot add custom parser after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 15 - cannot add custom parser after binding # time=8.187ms
    
    # Subtest: Can override the default json parser
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 16 - Can override the default json parser # time=29.261ms
    
    # Subtest: Can override the default plain text parser
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 17 - Can override the default plain text parser # time=23.169ms
    
    # Subtest: Can override the default json parser in a plugin
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 18 - Can override the default json parser in a plugin # time=10.791ms
    
    # Subtest: Can't override the json parser multiple times
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 19 - Can't override the json parser multiple times # time=2.56ms
    
    # Subtest: Can't override the plain text parser multiple times
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 20 - Can't override the plain text parser multiple times # time=2.892ms
    
    # Subtest: Should get the body as string
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 21 - Should get the body as string # time=11.96ms
    
    # Subtest: Should return defined body with no custom parser defined and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 22 - Should return defined body with no custom parser defined and content type = 'text/plain' # time=10.061ms
    
    # Subtest: Should have typeof body object with no custom parser defined, no body defined and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 23 - Should have typeof body object with no custom parser defined, no body defined and content type = 'text/plain' # time=8.396ms
    
    # Subtest: Should have typeof body object with no custom parser defined, null body and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 24 - Should have typeof body object with no custom parser defined, null body and content type = 'text/plain' # time=10.46ms
    
    # Subtest: Should have typeof body object with no custom parser defined, undefined body and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 25 - Should have typeof body object with no custom parser defined, undefined body and content type = 'text/plain' # time=8.356ms
    
    # Subtest: Should get the body as string
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 26 - Should get the body as string # time=10.277ms
    
    # Subtest: Should get the body as buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 27 - Should get the body as buffer # time=10.001ms
    
    # Subtest: Should get the body as buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 28 - Should get the body as buffer # time=10ms
    
    # Subtest: Should parse empty bodies as a string
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 29 - Should parse empty bodies as a string # time=15.105ms
    
    # Subtest: Should parse empty bodies as a buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 30 - Should parse empty bodies as a buffer # time=9.665ms
    
    # Subtest: The charset should not interfere with the content type handling
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 31 - The charset should not interfere with the content type handling # time=10.031ms
    
    # Subtest: Wrong parseAs parameter
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 32 - Wrong parseAs parameter # time=2.513ms
    
    # Subtest: Should allow defining the bodyLimit per parser
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent strictly
    ok 33 - Should allow defining the bodyLimit per parser # time=10.627ms
    
    # Subtest: route bodyLimit should take precedence over a custom parser bodyLimit
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent strictly
    ok 34 - route bodyLimit should take precedence over a custom parser bodyLimit # time=7.922ms
    
    # Subtest: should be able to use default parser for extra content type
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent strictly
    ok 35 - should be able to use default parser for extra content type # time=7.942ms
    
    # Subtest: contentTypeParser should add a custom parser with RegExp value
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=5.89ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=22.081ms
        
    ok 36 - contentTypeParser should add a custom parser with RegExp value # time=56.51ms
    
    # Subtest: contentTypeParser should add multiple custom parsers with RegExp values
        1..6
        ok 1 - should be equal
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 37 - contentTypeParser should add multiple custom parsers with RegExp values # time=57.08ms
    
    # Subtest: catch all content type parser should not interfere with content type parser
        1..10
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equivalent
    ok 38 - catch all content type parser should not interfere with content type parser # time=17.294ms
    
    # Subtest: should prefer string content types over RegExp ones
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 39 - should prefer string content types over RegExp ones # time=9.721ms
    
    # Subtest: removeContentTypeParser should support arrays of content types to remove
        1..8
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 40 - removeContentTypeParser should support arrays of content types to remove # time=11.213ms
    
    # Subtest: removeContentTypeParser should support encapsulation
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 41 - removeContentTypeParser should support encapsulation # time=42.68ms
    
    # Subtest: removeAllContentTypeParsers should support encapsulation
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 42 - removeAllContentTypeParsers should support encapsulation # time=16.018ms
    
    # Subtest: cannot remove all content type parsers after binding
        1..2
        ok 1 - should not error
        ok 2 - expected to throw
    ok 43 - cannot remove all content type parsers after binding # time=3.694ms
    
    # Subtest: cannot remove content type parsers after binding
        1..2
        ok 1 - should not error
        ok 2 - expected to throw
    ok 44 - cannot remove content type parsers after binding # time=3.859ms
    
    # Subtest: should be able to override the default json parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 45 - should be able to override the default json parser after removeAllContentTypeParsers # time=27.091ms
    
    # Subtest: should be able to override the default plain text parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 46 - should be able to override the default plain text parser after removeAllContentTypeParsers # time=7.369ms
    
    # Subtest: should be able to add a custom content type parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 47 - should be able to add a custom content type parser after removeAllContentTypeParsers # time=17.819ms
    
    1..47
    # time=1101.701ms
ok 22 - test/custom-parser.test.js # time=1101.701ms

# Subtest: test/custom-querystring-parser.test.js
    # Subtest: Custom querystring parser
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 1 - Custom querystring parser # time=150.163ms
    
    # Subtest: Custom querystring parser should be called also if there is nothing to parse
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 2 - Custom querystring parser should be called also if there is nothing to parse # time=16.636ms
    
    # Subtest: Querystring without value
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 3 - Querystring without value # time=36.253ms
    
    # Subtest: Custom querystring parser should be a function
        1..1
        ok 1 - should be equal
    ok 4 - Custom querystring parser should be a function # time=1.594ms
    
    1..4
    # time=215.583ms
ok 23 - test/custom-querystring-parser.test.js # time=215.583ms

# Subtest: test/decorator.test.js
    # Subtest: server methods should exist
        1..2
        ok 1 - expect truthy value
        ok 2 - expect truthy value
    ok 1 - server methods should exist # time=23.571ms
    
    # Subtest: should check if the given decoration already exist when null
        1..1
        ok 1 - expect truthy value
    ok 2 - should check if the given decoration already exist when null # time=118.444ms
    
    # Subtest: server methods should be encapsulated via .register
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 3 - server methods should be encapsulated via .register # time=10.282ms
    
    # Subtest: hasServerMethod should check if the given method already exist
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 4 - hasServerMethod should check if the given method already exist # time=28.047ms
    
    # Subtest: decorate should throw if a declared dependency is not present
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - (unnamed test)
    ok 5 - decorate should throw if a declared dependency is not present # time=14.94ms
    
    # Subtest: decorate should throw if declared dependency is not array
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - (unnamed test)
    ok 6 - decorate should throw if declared dependency is not array # time=6.792ms
    
    # Subtest: should pass error for missing request decorator
        1..2
        ok 1 - type is Error
        ok 2 - should match pattern provided
    ok 7 - should pass error for missing request decorator # time=10.895ms
    
    # Subtest: decorateReply inside register
        1..11
        ok 1 - should not error
        ok 2 - test exists
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 8 - decorateReply inside register # time=71.284ms
    
    # Subtest: decorateReply as plugin (inside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 9 - decorateReply as plugin (inside .after) # time=20.323ms
    
    # Subtest: decorateReply as plugin (outside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 10 - decorateReply as plugin (outside .after) # time=39.882ms
    
    # Subtest: decorateRequest inside register
        1..11
        ok 1 - should not error
        ok 2 - test exists
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 11 - decorateRequest inside register # time=20.518ms
    
    # Subtest: decorateRequest as plugin (inside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 12 - decorateRequest as plugin (inside .after) # time=47.667ms
    
    # Subtest: decorateRequest as plugin (outside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 13 - decorateRequest as plugin (outside .after) # time=19.726ms
    
    # Subtest: decorators should be instance separated
        1..1
        ok 1 - (unnamed test)
    ok 14 - decorators should be instance separated # time=3.378ms
    
    # Subtest: hasRequestDecorator
        # Subtest: is a function
            1..1
            ok 1 - expect truthy value
        ok 1 - is a function # time=2.124ms
        
        # Subtest: should check if the given request decoration already exist
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 2 - should check if the given request decoration already exist # time=2.607ms
        
        # Subtest: should check if the given request decoration already exist when null
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 3 - should check if the given request decoration already exist when null # time=2.678ms
        
        # Subtest: should be plugin encapsulable
            1..4
            ok 1 - expect falsey value
            ok 2 - expect falsey value
            ok 3 - expect truthy value
            ok 4 - expect falsey value
        ok 4 - should be plugin encapsulable # time=15.713ms
        
        # Subtest: should be inherited
            1..2
            ok 1 - expect truthy value
            ok 2 - expect truthy value
        ok 5 - should be inherited # time=8.976ms
        
        1..5
    ok 15 - hasRequestDecorator # time=62.691ms
    
    # Subtest: hasReplyDecorator
        # Subtest: is a function
            1..1
            ok 1 - expect truthy value
        ok 1 - is a function # time=2.129ms
        
        # Subtest: should check if the given reply decoration already exist
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 2 - should check if the given reply decoration already exist # time=2.645ms
        
        # Subtest: should check if the given reply decoration already exist when null
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 3 - should check if the given reply decoration already exist when null # time=2.442ms
        
        # Subtest: should be plugin encapsulable
            1..4
            ok 1 - expect falsey value
            ok 2 - expect falsey value
            ok 3 - expect truthy value
            ok 4 - expect falsey value
        ok 4 - should be plugin encapsulable # time=11.479ms
        
        # Subtest: should be inherited
            1..2
            ok 1 - expect truthy value
            ok 2 - expect truthy value
        ok 5 - should be inherited # time=16.377ms
        
        1..5
    ok 16 - hasReplyDecorator # time=156.55ms
    
    # Subtest: should register properties via getter/setter objects
        1..3
        ok 1 - expect truthy value
        ok 2 - a getter
        ok 3 - expect falsey value
    ok 17 - should register properties via getter/setter objects # time=4.672ms
    
    # Subtest: decorateRequest should work with getter/setter
        1..5
        ok 1 - expect falsey value
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - (unnamed test)
    ok 18 - decorateRequest should work with getter/setter # time=35.112ms
    
    # Subtest: decorateReply should work with getter/setter
        1..5
        ok 1 - expect falsey value
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - (unnamed test)
    ok 19 - decorateReply should work with getter/setter # time=9.647ms
    
    # Subtest: should register empty values
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 20 - should register empty values # time=3.967ms
    
    # Subtest: nested plugins can override things
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 21 - nested plugins can override things # time=6.922ms
    
    # Subtest: a decorator should addSchema to all the encapsulated tree
        1..1
        ok 1 - should not error
    ok 22 - a decorator should addSchema to all the encapsulated tree # time=5.263ms
    
    # Subtest: after can access to a decorated instance and previous plugin decoration
        1..11
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
    ok 23 - after can access to a decorated instance and previous plugin decoration # time=7.846ms
    
    # Subtest: decorate* should throw if called after ready
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 24 - decorate* should throw if called after ready # time=25.251ms
    
    # Subtest: decorate* should emit warning if an array is passed
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 25 - decorate* should emit warning if an array is passed # time=33.931ms
    
    # Subtest: decorate* should emit warning if object type is passed
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 26 - decorate* should emit warning if object type is passed # time=58.87ms
    
    # Subtest: decorate* should not emit warning if object with getter/setter is passed
        1..0
    ok 27 - decorate* should not emit warning if object with getter/setter is passed # time=28.909ms
    
    # Subtest: decorate* should not emit warning if string,bool,numbers are passed
        1..0
    ok 28 - decorate* should not emit warning if string,bool,numbers are passed # time=28.163ms
    
    # Subtest: Request/reply decorators should be able to access the server instance
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not be equal
        ok 4 - should be equal
        ok 5 - should not be equal
        ok 6 - should be equal
    ok 29 - Request/reply decorators should be able to access the server instance # time=26.022ms
    
    # Subtest: plugin required decorators
        1..0
    ok 30 - plugin required decorators # time=4.351ms
    
    # Subtest: decorateRequest/decorateReply empty string
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 31 - decorateRequest/decorateReply empty string # time=22.451ms
    
    # Subtest: decorateRequest/decorateReply is undefined
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 32 - decorateRequest/decorateReply is undefined # time=9.821ms
    
    # Subtest: decorateRequest/decorateReply is not set to a value
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 33 - decorateRequest/decorateReply is not set to a value # time=25.878ms
    
    # Subtest: decorateRequest with dependencies
        1..2
        ok 1 - expected to not throw
        ok 2 - expect truthy value
    ok 34 - decorateRequest with dependencies # time=2.327ms
    
    # Subtest: decorateRequest with dependencies (functions)
        1..2
        ok 1 - expected to not throw
        ok 2 - expect truthy value
    ok 35 - decorateRequest with dependencies (functions) # time=2.067ms
    
    # Subtest: chain of decorators on Request
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        1..6
    ok 36 - chain of decorators on Request # time=58.527ms
    
    # Subtest: chain of decorators on Reply
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        1..6
    ok 37 - chain of decorators on Reply # time=18.678ms
    
    1..37
    # time=1135.313ms
ok 24 - test/decorator.test.js # time=1135.313ms

# Subtest: test/default-route.test.js
    # Subtest: setDefaultRoute should emit a deprecation warning
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - setDefaultRoute should emit a deprecation warning # time=28.407ms
    
    # Subtest: getDefaultRoute should emit a deprecation warning
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 2 - getDefaultRoute should emit a deprecation warning # time=3.738ms
    
    # Subtest: should fail if defaultRoute is not a function
        1..1
        ok 1 - should be equal
    ok 3 - should fail if defaultRoute is not a function # time=28.289ms
    
    # Subtest: correctly sets, returns, and calls defaultRoute
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
    ok 4 - correctly sets, returns, and calls defaultRoute # time=50.573ms
    
    1..4
    # time=120.804ms
ok 25 - test/default-route.test.js # time=120.804ms

# Subtest: test/delete.test.js
    # Subtest: shorthand - delete
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - delete # time=11.052ms
    
    # Subtest: shorthand - delete params
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - delete params # time=2.49ms
    
    # Subtest: shorthand - delete, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - delete, querystring schema # time=1.849ms
    
    # Subtest: shorthand - get, headers schema
        1..1
        ok 1 - (unnamed test)
    ok 4 - shorthand - get, headers schema # time=1.808ms
    
    # Subtest: missing schema - delete
        1..1
        ok 1 - (unnamed test)
    ok 5 - missing schema - delete # time=1.659ms
    
    # Subtest: body - delete
        1..1
        ok 1 - (unnamed test)
    ok 6 - body - delete # time=1.317ms
    
    # Subtest: shorthand - delete with application/json Content-Type header and without body
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - shorthand - delete with application/json Content-Type header and without body # time=54.076ms
    
    ok 8 - should not error
    # Subtest: shorthand - request delete
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 9 - shorthand - request delete # time=42.526ms
    
    # Subtest: shorthand - request delete params schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 10 - shorthand - request delete params schema # time=7.358ms
    
    # Subtest: shorthand - request delete params schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 11 - shorthand - request delete params schema error # time=9.795ms
    
    # Subtest: shorthand - request delete headers schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 12 - shorthand - request delete headers schema # time=5.23ms
    
    # Subtest: shorthand - request delete headers schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 13 - shorthand - request delete headers schema error # time=5.222ms
    
    # Subtest: shorthand - request delete querystring schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 14 - shorthand - request delete querystring schema # time=5.644ms
    
    # Subtest: shorthand - request delete querystring schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 15 - shorthand - request delete querystring schema error # time=5.177ms
    
    # Subtest: shorthand - request delete missing schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 16 - shorthand - request delete missing schema # time=5.792ms
    
    # Subtest: shorthand - delete with body
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - shorthand - delete with body # time=9.301ms
    
    1..17
    # time=379.894ms
ok 26 - test/delete.test.js # time=379.894ms

# Subtest: test/diagnostics-channel.test.js
    # Subtest: diagnostics_channel when present and subscribers
        1..3
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should be equal
    ok 1 - diagnostics_channel when present and subscribers # time=1383.54ms
    
    # Subtest: diagnostics_channel when present and no subscribers
        1..1
        ok 1 - should be equal
    ok 2 - diagnostics_channel when present and no subscribers # time=24.159ms
    
    # Subtest: diagnostics_channel when not present
        1..1
        ok 1 - expected to not throw
    ok 3 - diagnostics_channel when not present # time=23.977ms
    
    1..3
    # time=1448.008ms
ok 27 - test/diagnostics-channel.test.js # time=1448.008ms

# Subtest: test/encapsulated-error-handler.test.js
    # Subtest: encapuslates an error handler
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 1 - encapuslates an error handler # time=90.308ms
    
    # Subtest: onError hook nested
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 2 - onError hook nested # time=14.338ms
    
    1..2
    # time=117.487ms
ok 28 - test/encapsulated-error-handler.test.js # time=117.487ms

# Subtest: test/esm/index.test.js
    # Subtest: named exports support
        ok 1 - should be equal
        1..1
    ok 1 - named exports support # time=58.197ms
    
    ok 2 - should be equal
    1..2
    # time=64.086ms
ok 29 - test/esm/index.test.js # time=64.086ms

# Subtest: test/fastify-instance.test.js
    # Subtest: root fastify instance is an object
        1..1
        ok 1 - type is object
    ok 1 - root fastify instance is an object # time=18.355ms
    
    # Subtest: fastify instance should contains ajv options
        1..1
        ok 1 - should be equivalent
    ok 2 - fastify instance should contains ajv options # time=6.842ms
    
    # Subtest: fastify instance should contains ajv options.plugins nested arrays
        1..1
        ok 1 - should be equivalent
    ok 3 - fastify instance should contains ajv options.plugins nested arrays # time=3.61ms
    
    # Subtest: fastify instance get invalid ajv options
        1..1
        ok 1 - expected to throw
    ok 4 - fastify instance get invalid ajv options # time=1.578ms
    
    # Subtest: fastify instance get invalid ajv options.plugins
        1..1
        ok 1 - expected to throw
    ok 5 - fastify instance get invalid ajv options.plugins # time=1.079ms
    
    # Subtest: fastify instance should contain default errorHandler
        1..3
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - should be equivalent
    ok 6 - fastify instance should contain default errorHandler # time=2.807ms
    
    # Subtest: errorHandler in plugin should be separate from the external one
        1..4
        ok 1 - should not be equivalent
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equivalent
    ok 7 - errorHandler in plugin should be separate from the external one # time=18.111ms
    
    1..7
    # time=75.748ms
ok 30 - test/fastify-instance.test.js # time=75.748ms

# Subtest: test/fluent-schema.test.js
    # Subtest: use fluent-json-schema object
        1..15
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equivalent
    ok 1 - use fluent-json-schema object # time=301.476ms
    
    # Subtest: use complex fluent-json-schema object
        1..1
        ok 1 - should not error
    ok 2 - use complex fluent-json-schema object # time=95.239ms
    
    # Subtest: use fluent schema and plain JSON schema
        1..1
        ok 1 - should not error
    ok 3 - use fluent schema and plain JSON schema # time=62.532ms
    
    # Subtest: Should call valueOf internally
        1..1
        ok 1 - should not error
    ok 4 - Should call valueOf internally # time=67.059ms
    
    1..4
    # time=541.196ms
ok 31 - test/fluent-schema.test.js # time=541.196ms

# Subtest: test/genReqId.test.js
    # Subtest: Should accept a custom genReqId function
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 1 - Should accept a custom genReqId function # time=107.254ms
    
    1..1
    # time=114.29ms
ok 32 - test/genReqId.test.js # time=114.29ms

# Subtest: test/get.test.js
    # Subtest: shorthand - get
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - get # time=11.073ms
    
    # Subtest: shorthand - get (return null)
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - get (return null) # time=2.6ms
    
    # Subtest: shorthand - get params
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - get params # time=2.808ms
    
    # Subtest: shorthand - get, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 4 - shorthand - get, querystring schema # time=2.052ms
    
    # Subtest: shorthand - get, headers schema
        1..1
        ok 1 - (unnamed test)
    ok 5 - shorthand - get, headers schema # time=2.843ms
    
    # Subtest: missing schema - get
        1..1
        ok 1 - (unnamed test)
    ok 6 - missing schema - get # time=1.822ms
    
    # Subtest: custom serializer - get
        1..1
        ok 1 - (unnamed test)
    ok 7 - custom serializer - get # time=1.819ms
    
    # Subtest: empty response
        1..1
        ok 1 - (unnamed test)
    ok 8 - empty response # time=1.642ms
    
    # Subtest: send a falsy boolean
        1..1
        ok 1 - (unnamed test)
    ok 9 - send a falsy boolean # time=2.1ms
    
    ok 10 - should not error
    # Subtest: shorthand - request get
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 11 - shorthand - request get # time=77.339ms
    
    # Subtest: shorthand - request get params schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 12 - shorthand - request get params schema # time=7.005ms
    
    # Subtest: shorthand - request get params schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 13 - shorthand - request get params schema error # time=7.284ms
    
    # Subtest: shorthand - request get headers schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - shorthand - request get headers schema # time=5.414ms
    
    # Subtest: shorthand - request get headers schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 15 - shorthand - request get headers schema error # time=5.773ms
    
    # Subtest: shorthand - request get querystring schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 16 - shorthand - request get querystring schema # time=6.015ms
    
    # Subtest: shorthand - request get querystring schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - shorthand - request get querystring schema error # time=4.726ms
    
    # Subtest: shorthand - request get missing schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - shorthand - request get missing schema # time=4.868ms
    
    # Subtest: shorthand - custom serializer
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 19 - shorthand - custom serializer # time=6.173ms
    
    # Subtest: shorthand - empty response
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 20 - shorthand - empty response # time=5.333ms
    
    # Subtest: shorthand - send a falsy boolean
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 21 - shorthand - send a falsy boolean # time=4.134ms
    
    # Subtest: shorthand - send null value
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 22 - shorthand - send null value # time=4.061ms
    
    1..22
    # time=402.284ms
ok 33 - test/get.test.js # time=402.284ms

# Subtest: test/handler-context.test.js
    # Subtest: handlers receive correct `this` context
        1..4
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 1 - handlers receive correct `this` context # time=82.034ms
    
    # Subtest: handlers have access to the internal context
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - type is Object
        ok 4 - expect truthy value
        ok 5 - should be equal
    ok 2 - handlers have access to the internal context # time=10.314ms
    
    1..2
    # time=102.373ms
ok 34 - test/handler-context.test.js # time=102.373ms

# Subtest: test/has-route.test.js
    # Subtest: hasRoute
        1..4
        # Subtest: hasRoute - invalid options
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
        ok 1 - hasRoute - invalid options # time=32.377ms
        
        # Subtest: hasRoute - primitive method
            1..2
            ok 1 - should be equal
            ok 2 - should be equal
        ok 2 - hasRoute - primitive method # time=7.859ms
        
        # Subtest: hasRoute - with constraints
            1..2
            ok 1 - should be equal
            ok 2 - should be equal
        ok 3 - hasRoute - with constraints # time=4.07ms
        
        # Subtest: hasRoute - parametric route regexp with constraints
            1..1
            ok 1 - should be equal
        ok 4 - hasRoute - parametric route regexp with constraints # time=3.945ms
        
    ok 1 - hasRoute # time=107.903ms
    
    1..1
    # time=113.496ms
ok 35 - test/has-route.test.js # time=113.496ms

# Subtest: test/head.test.js
    # Subtest: shorthand - head
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - head # time=27.449ms
    
    # Subtest: shorthand - head params
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - head params # time=3.344ms
    
    # Subtest: shorthand - head, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - head, querystring schema # time=2.284ms
    
    # Subtest: missing schema - head
        1..1
        ok 1 - (unnamed test)
    ok 4 - missing schema - head # time=15.061ms
    
    ok 5 - should not error
    # Subtest: shorthand - request head
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 6 - shorthand - request head # time=66.767ms
    
    # Subtest: shorthand - request head params schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 7 - shorthand - request head params schema # time=8.354ms
    
    # Subtest: shorthand - request head params schema error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 8 - shorthand - request head params schema error # time=7.075ms
    
    # Subtest: shorthand - request head querystring schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 9 - shorthand - request head querystring schema # time=5.829ms
    
    # Subtest: shorthand - request head querystring schema error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 10 - shorthand - request head querystring schema error # time=5.76ms
    
    # Subtest: shorthand - request head missing schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 11 - shorthand - request head missing schema # time=5.176ms
    
    1..11
    # time=385.586ms
ok 36 - test/head.test.js # time=385.586ms

# Subtest: test/hooks-async.test.js
    # Subtest: async hooks
        1..21
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should not error
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equivalent
        ok 19 - should not error
        ok 20 - should be equal
        ok 21 - expect truthy value
    ok 1 - async hooks # time=185.071ms
    
    # Subtest: modify payload
        1..10
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - expect truthy value
        ok 4 - should be equivalent
        ok 5 - expect truthy value
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
    ok 2 - modify payload # time=65.139ms
    
    # Subtest: onRequest hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 3 - onRequest hooks should be able to block a request # time=28.551ms
    
    # Subtest: preParsing hooks should be able to modify the payload
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 4 - preParsing hooks should be able to modify the payload # time=26.749ms
    
    # Subtest: preParsing hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 5 - preParsing hooks should handle errors # time=7.061ms
    
    # Subtest: preHandler hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 6 - preHandler hooks should be able to block a request # time=27.477ms
    
    # Subtest: preValidation hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 7 - preValidation hooks should be able to block a request # time=23.444ms
    
    # Subtest: preValidation hooks should be able to change request body before validation
        1..4
        ok 1 - (unnamed test)
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - preValidation hooks should be able to change request body before validation # time=106.317ms
    
    # Subtest: preSerialization hooks should be able to modify the payload
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 9 - preSerialization hooks should be able to modify the payload # time=12.902ms
    
    # Subtest: preSerialization hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 10 - preSerialization hooks should handle errors # time=10.266ms
    
    # Subtest: preValidation hooks should handle throwing null
        1..4
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 11 - preValidation hooks should handle throwing null # time=10.696ms
    
    # Subtest: preValidation hooks should handle throwing a string
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 12 - preValidation hooks should handle throwing a string # time=7.803ms
    
    # Subtest: onRequest hooks should be able to block a request (last hook)
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 13 - onRequest hooks should be able to block a request (last hook) # time=11.671ms
    
    # Subtest: preHandler hooks should be able to block a request (last hook)
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 14 - preHandler hooks should be able to block a request (last hook) # time=7.43ms
    
    # Subtest: onRequest respond with a stream
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 15 - onRequest respond with a stream # time=42.283ms
    
    # Subtest: preHandler respond with a stream
        1..7
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - expect truthy value
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 16 - preHandler respond with a stream # time=12.399ms
    
    # Subtest: Should log a warning if is an async function with `done`
        # Subtest: 3 arguments
            1..2
            ok 1 - FST_ERR_HOOK_INVALID_ASYNC_HANDLER
            ok 2 - expect truthy value
        ok 1 - 3 arguments # time=3.064ms
        
        # Subtest: 4 arguments
            1..6
            ok 1 - FST_ERR_HOOK_INVALID_ASYNC_HANDLER
            ok 2 - expect truthy value
            ok 3 - FST_ERR_HOOK_INVALID_ASYNC_HANDLER
            ok 4 - expect truthy value
            ok 5 - FST_ERR_HOOK_INVALID_ASYNC_HANDLER
            ok 6 - expect truthy value
        ok 2 - 4 arguments # time=2.732ms
        
        1..2
    ok 17 - Should log a warning if is an async function with `done` # time=20.487ms
    
    # Subtest: early termination, onRequest async
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 18 - early termination, onRequest async # time=10.371ms
    
    # Subtest: The this should be the same of the encapsulation level
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        1..4
    ok 19 - The this should be the same of the encapsulation level # time=14.511ms
    
    # Subtest: preSerializationEnd should handle errors if the serialize method throws
        # Subtest: works with sync preSerialization
            1..2
            ok 1 - should not error
            ok 2 - should not be equal
        ok 1 - works with sync preSerialization # time=16.034ms
        
        # Subtest: works with async preSerialization
            1..2
            ok 1 - should not error
            ok 2 - should not be equal
        ok 2 - works with async preSerialization # time=6.276ms
        
        1..2
    ok 20 - preSerializationEnd should handle errors if the serialize method throws # time=27.427ms
    
    # Subtest: nested hooks to do not crash on 404
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 21 - nested hooks to do not crash on 404 # time=11.387ms
    
    1..21
    # time=686.536ms
ok 37 - test/hooks-async.test.js # time=686.536ms

# Subtest: test/hooks.on-ready.test.js
    # Subtest: onReady should be called in order
        1..7
        ok 1 - called in root
        ok 2 - the this binding is the right instance
        ok 3 - called in childOne
        ok 4 - the this binding is the right instance
        ok 5 - called in childTwo
        ok 6 - the this binding is the right instance
        ok 7 - should not error
    ok 1 - onReady should be called in order # time=98.209ms
    
    # Subtest: async onReady should be called in order
        1..7
        ok 1 - called in root
        ok 2 - the this binding is the right instance
        ok 3 - called in childOne
        ok 4 - the this binding is the right instance
        ok 5 - called in childTwo
        ok 6 - the this binding is the right instance
        ok 7 - ready
    ok 2 - async onReady should be called in order # time=15.454ms
    
    # Subtest: mix ready and onReady
        1..2
        ok 1 - should be equal
        ok 2 - ready hooks execute once
    ok 3 - mix ready and onReady # time=18.352ms
    
    # Subtest: listen and onReady order
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - trigger the onReady
        ok 9 - do not trigger the onReady
    ok 4 - listen and onReady order # time=60.376ms
    
    # Subtest: multiple ready calls
        1..11
        ok 1 - ready and hooks not triggered yet
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - trigger the onReady
        ok 10 - do not trigger the onReady
        ok 11 - do not trigger the onReady
    ok 5 - multiple ready calls # time=28.79ms
    
    # Subtest: onReady should manage error in sync
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 6 - onReady should manage error in sync # time=7.257ms
    
    # Subtest: onReady should manage error in async
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 7 - onReady should manage error in async # time=20.744ms
    
    # Subtest: onReady should manage sync error
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 8 - onReady should manage sync error # time=9.728ms
    
    # Subtest: onReady can not add decorators or application hooks
        1..3
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should not error
    ok 9 - onReady can not add decorators or application hooks # time=6.184ms
    
    # Subtest: onReady cannot add lifecycle hooks
        1..5
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
    ok 10 - onReady cannot add lifecycle hooks # time=11.678ms
    
    # Subtest: onReady throw loading error
        1..2
        ok 1 - FST_ERR_HOOK_INVALID_ASYNC_HANDLER
        ok 2 - expect truthy value
    ok 11 - onReady throw loading error # time=2.955ms
    
    # Subtest: onReady does not call done
        1..6
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
        ok 6 - should be equal
    ok 12 - onReady does not call done # time=505.79ms
    
    # Subtest: onReady execution order
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 13 - onReady execution order # time=8.175ms
    
    # Subtest: ready return the server with callback
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 14 - ready return the server with callback # time=55.328ms
    
    # Subtest: ready return the server with Promise
        1..1
        ok 1 - should be equivalent
    ok 15 - ready return the server with Promise # time=6.392ms
    
    # Subtest: ready return registered
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
    ok 16 - ready return registered # time=17.886ms
    
    1..16
    # time=891.852ms
ok 38 - test/hooks.on-ready.test.js # time=891.852ms

# Subtest: test/hooks.test.js
    # Subtest: hooks
        1..49
        ok 1 - (unnamed test)
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - (unnamed test)
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - (unnamed test)
        ok 8 - (unnamed test)
        ok 9 - (unnamed test)
        ok 10 - (unnamed test)
        ok 11 - (unnamed test)
        ok 12 - (unnamed test)
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equal
        ok 21 - should be equal
        ok 22 - should be equal
        ok 23 - should be equal
        ok 24 - should be equal
        ok 25 - expect truthy value
        ok 26 - expect truthy value
        ok 27 - expect truthy value
        ok 28 - expect truthy value
        ok 29 - should be equal
        ok 30 - should be equal
        ok 31 - should be equal
        ok 32 - should be equal
        ok 33 - should be equal
        ok 34 - should be equal
        ok 35 - should be equal
        ok 36 - should be equal
        ok 37 - should be equal
        ok 38 - expect truthy value
        ok 39 - expect truthy value
        ok 40 - expect truthy value
        ok 41 - expect truthy value
        ok 42 - should not error
        ok 43 - should be equal
        ok 44 - should be equal
        ok 45 - should be equivalent
        ok 46 - should not error
        ok 47 - should be equal
        ok 48 - should not error
        ok 49 - should be equal
    ok 1 - hooks # time=316.829ms
    
    # Subtest: onRequest hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 2 - onRequest hook should support encapsulation / 1 # time=67.489ms
    
    # Subtest: onRequest hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 3 - onRequest hook should support encapsulation / 2 # time=9.634ms
    
    # Subtest: onRequest hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 4 - onRequest hook should support encapsulation / 3 # time=50.581ms
    
    # Subtest: preHandler hook should support encapsulation / 5
        1..17
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equivalent
    ok 5 - preHandler hook should support encapsulation / 5 # time=18.765ms
    
    # Subtest: onRoute hook should be called / 1
        1..2
        ok 1 - (unnamed test)
        ok 2 - should not error
    ok 6 - onRoute hook should be called / 1 # time=14.77ms
    
    # Subtest: onRoute hook should be called / 2
        1..5
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 7 - onRoute hook should be called / 2 # time=10.049ms
    
    # Subtest: onRoute hook should be called / 3
        1..5
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - (unnamed test)
        ok 5 - should not error
    ok 8 - onRoute hook should be called / 3 # time=25.925ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 4
        1..4
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - (unnamed test)
        ok 4 - should not error
    ok 9 - onRoute hook should be called (encapsulation support) / 4 # time=8.776ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 5
        1..2
        ok 1 - (unnamed test)
        ok 2 - should not error
    ok 10 - onRoute hook should be called (encapsulation support) / 5 # time=11.695ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 6
        1..1
        ok 1 - should not error
    ok 11 - onRoute hook should be called (encapsulation support) / 6 # time=4.938ms
    
    # Subtest: onRoute should keep the context
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
    ok 12 - onRoute should keep the context # time=22.388ms
    
    # Subtest: onRoute hook should pass correct route
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should not error
    ok 13 - onRoute hook should pass correct route # time=6.999ms
    
    # Subtest: onRoute hook should pass correct route with custom prefix
        1..11
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
    ok 14 - onRoute hook should pass correct route with custom prefix # time=10.282ms
    
    # Subtest: onRoute hook should pass correct route with custom options
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - type is function
        ok 6 - should not error
    ok 15 - onRoute hook should pass correct route with custom options # time=6.588ms
    
    # Subtest: onRoute hook should receive any route option
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 16 - onRoute hook should receive any route option # time=6.562ms
    
    # Subtest: onRoute hook should preserve system route configuration
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 17 - onRoute hook should preserve system route configuration # time=5.34ms
    
    # Subtest: onRoute hook should preserve handler function in options of shorthand route system configuration
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 18 - onRoute hook should preserve handler function in options of shorthand route system configuration # time=5.034ms
    
    # Subtest: onRoute hook should be called once when prefixTrailingSlash
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 19 - onRoute hook should be called once when prefixTrailingSlash # time=6.695ms
    
    # Subtest: onRoute hook should able to change the route url
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 20 - onRoute hook should able to change the route url # time=11.353ms
    
    # Subtest: onRoute hook that throws should be caught
        1..1
        ok 1 - expect truthy value
    ok 21 - onRoute hook that throws should be caught # time=4.592ms
    
    # Subtest: onRoute hook with many prefix
        1..3
        ok 1 - should match pattern provided
        ok 2 - should match pattern provided
        ok 3 - should not error
    ok 22 - onRoute hook with many prefix # time=14.615ms
    
    # Subtest: onRoute hook should not be called when it registered after route
        1..3
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
    ok 23 - onRoute hook should not be called when it registered after route # time=4.539ms
    
    # Subtest: onResponse hook should log request error
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 24 - onResponse hook should log request error # time=92.659ms
    
    # Subtest: onResponse hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 25 - onResponse hook should support encapsulation / 1 # time=13.529ms
    
    # Subtest: onResponse hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 26 - onResponse hook should support encapsulation / 2 # time=19.74ms
    
    # Subtest: onResponse hook should support encapsulation / 3
        1..16
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 27 - onResponse hook should support encapsulation / 3 # time=24.386ms
    
    # Subtest: onSend hook should support encapsulation / 1
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 28 - onSend hook should support encapsulation / 1 # time=5.194ms
    
    # Subtest: onSend hook should support encapsulation / 2
        1..16
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 29 - onSend hook should support encapsulation / 2 # time=23.602ms
    
    # Subtest: onSend hook is called after payload is serialized and headers are set
        1..30
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should be equal
        ok 15 - should not error
        ok 16 - should be equal
        ok 17 - should be equivalent
        ok 18 - should be equal
        ok 19 - should not error
        ok 20 - should be equal
        ok 21 - should be equivalent
        ok 22 - should be equal
        ok 23 - should not error
        ok 24 - should be equal
        ok 25 - should be equivalent
        ok 26 - should be equal
        ok 27 - should not error
        ok 28 - should be equal
        ok 29 - should be equivalent
        ok 30 - should be equal
    ok 30 - onSend hook is called after payload is serialized and headers are set # time=30.761ms
    
    # Subtest: modify payload
        1..10
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - expect truthy value
        ok 4 - should be equivalent
        ok 5 - expect truthy value
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
    ok 31 - modify payload # time=10.042ms
    
    # Subtest: clear payload
        1..6
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 32 - clear payload # time=5.993ms
    
    # Subtest: onSend hook throws
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
    ok 33 - onSend hook throws # time=19.598ms
    
    # Subtest: onSend hook should receive valid request and reply objects if onRequest hook fails
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 34 - onSend hook should receive valid request and reply objects if onRequest hook fails # time=14.582ms
    
    # Subtest: onSend hook should receive valid request and reply objects if a custom content type parser fails
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 35 - onSend hook should receive valid request and reply objects if a custom content type parser fails # time=8.453ms
    
    # Subtest: Content-Length header should be updated if onSend hook modifies the payload
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 36 - Content-Length header should be updated if onSend hook modifies the payload # time=5.722ms
    
    # Subtest: cannot add hook after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 37 - cannot add hook after binding # time=7.621ms
    
    # Subtest: onRequest hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 38 - onRequest hooks should be able to block a request # time=7.275ms
    
    # Subtest: preValidation hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 39 - preValidation hooks should be able to block a request # time=6.416ms
    
    # Subtest: preValidation hooks should be able to change request body before validation
        1..4
        ok 1 - (unnamed test)
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 40 - preValidation hooks should be able to change request body before validation # time=109.157ms
    
    # Subtest: preParsing hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 41 - preParsing hooks should be able to block a request # time=5.849ms
    
    # Subtest: preHandler hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 42 - preHandler hooks should be able to block a request # time=5.105ms
    
    # Subtest: onRequest hooks should be able to block a request (last hook)
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 43 - onRequest hooks should be able to block a request (last hook) # time=4.857ms
    
    # Subtest: preHandler hooks should be able to block a request (last hook)
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 44 - preHandler hooks should be able to block a request (last hook) # time=4.988ms
    
    # Subtest: preParsing hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 45 - preParsing hooks should handle errors # time=4.987ms
    
    # Subtest: onRequest respond with a stream
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 46 - onRequest respond with a stream # time=9.589ms
    
    # Subtest: preHandler respond with a stream
        1..7
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - expect truthy value
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 47 - preHandler respond with a stream # time=7.773ms
    
    # Subtest: Register an hook after a plugin inside a plugin
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 48 - Register an hook after a plugin inside a plugin # time=10.261ms
    
    # Subtest: Register an hook after a plugin inside a plugin (with preHandler option)
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 49 - Register an hook after a plugin inside a plugin (with preHandler option) # time=8.53ms
    
    # Subtest: Register hooks inside a plugin after an encapsulated plugin
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 50 - Register hooks inside a plugin after an encapsulated plugin # time=9.255ms
    
    # Subtest: onRequest hooks should run in the order in which they are defined
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 51 - onRequest hooks should run in the order in which they are defined # time=10.965ms
    
    # Subtest: preHandler hooks should run in the order in which they are defined
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 52 - preHandler hooks should run in the order in which they are defined # time=10.873ms
    
    # Subtest: onSend hooks should run in the order in which they are defined
        1..8
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equivalent
    ok 53 - onSend hooks should run in the order in which they are defined # time=13.633ms
    
    # Subtest: onResponse hooks should run in the order in which they are defined
        1..8
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equivalent
    ok 54 - onResponse hooks should run in the order in which they are defined # time=10.583ms
    
    # Subtest: onRequest, preHandler, and onResponse hooks that resolve to a value do not cause an error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 55 - onRequest, preHandler, and onResponse hooks that resolve to a value do not cause an error # time=5.821ms
    
    # Subtest: If a response header has been set inside an hook it shoulod not be overwritten by the final response handler
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 56 - If a response header has been set inside an hook it shoulod not be overwritten by the final response handler # time=5.457ms
    
    # Subtest: If the content type has been set inside an hook it should not be changed
        1..5
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 57 - If the content type has been set inside an hook it should not be changed # time=5.494ms
    
    # Subtest: request in onRequest, preParsing, preValidation and onResponse
        1..18
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
        ok 8 - should be equivalent
        ok 9 - should be equivalent
        ok 10 - should be equivalent
        ok 11 - should be equivalent
        ok 12 - should be equivalent
        ok 13 - should be equivalent
        ok 14 - should be equivalent
        ok 15 - should be equivalent
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
    ok 58 - request in onRequest, preParsing, preValidation and onResponse # time=17.752ms
    
    # Subtest: preValidation hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 59 - preValidation hook should support encapsulation / 1 # time=13.073ms
    
    # Subtest: preValidation hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 60 - preValidation hook should support encapsulation / 2 # time=4.283ms
    
    # Subtest: preValidation hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 61 - preValidation hook should support encapsulation / 3 # time=40.268ms
    
    # Subtest: onError hook
        1..3
        ok 1 - should match pattern provided
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 62 - onError hook # time=6.578ms
    
    # Subtest: reply.send should throw if called inside the onError hook
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 63 - reply.send should throw if called inside the onError hook # time=5.798ms
    
    # Subtest: onError hook with setErrorHandler
        # Subtest: Send error
            1..3
            ok 1 - should match pattern provided
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 1 - Send error # time=5.744ms
        
        1..1
    ok 64 - onError hook with setErrorHandler # time=11.42ms
    
    # Subtest: preParsing hook should run before parsing and be able to modify the payload
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 65 - preParsing hook should run before parsing and be able to modify the payload # time=10.338ms
    
    # Subtest: preParsing hooks should run in the order in which they are defined
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 66 - preParsing hooks should run in the order in which they are defined # time=9.162ms
    
    # Subtest: preParsing hooks should support encapsulation
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 67 - preParsing hooks should support encapsulation # time=13.613ms
    
    # Subtest: preParsing hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 68 - preParsing hook should support encapsulation / 1 # time=7.375ms
    
    # Subtest: preParsing hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 69 - preParsing hook should support encapsulation / 2 # time=5.062ms
    
    # Subtest: preParsing hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 70 - preParsing hook should support encapsulation / 3 # time=15.862ms
    
    # Subtest: preSerialization hook should run before serialization and be able to modify the payload
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 71 - preSerialization hook should run before serialization and be able to modify the payload # time=17.732ms
    
    # Subtest: preSerialization hook should be able to throw errors which are validated against schema response
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
        1..6
    ok 72 - preSerialization hook should be able to throw errors which are validated against schema response # time=11.656ms
    
    # Subtest: preSerialization hook which returned error should still run onError hooks
        1..4
        ok 1 - should not error
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - should be equal
    ok 73 - preSerialization hook which returned error should still run onError hooks # time=8.527ms
    
    # Subtest: preSerialization hooks should run in the order in which they are defined
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 74 - preSerialization hooks should run in the order in which they are defined # time=24.124ms
    
    # Subtest: preSerialization hooks should support encapsulation
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 75 - preSerialization hooks should support encapsulation # time=44.766ms
    
    # Subtest: onRegister hook should be called / 1
        1..3
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - should not error
    ok 76 - onRegister hook should be called / 1 # time=5.596ms
    
    # Subtest: onRegister hook should be called / 2
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
    ok 77 - onRegister hook should be called / 2 # time=14.353ms
    
    # Subtest: onRegister hook should be called / 3
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
    ok 78 - onRegister hook should be called / 3 # time=24.123ms
    
    # Subtest: onRegister hook should be called (encapsulation)
        1..1
        ok 1 - should not error
    ok 79 - onRegister hook should be called (encapsulation) # time=3.047ms
    
    # Subtest: early termination, onRequest
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 80 - early termination, onRequest # time=22.242ms
    
    # Subtest: reply.send should throw if undefined error is thrown
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 81 - reply.send should throw if undefined error is thrown # time=6.775ms
    
    # Subtest: reply.send should throw if undefined error is thrown at preParsing hook
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 82 - reply.send should throw if undefined error is thrown at preParsing hook # time=8.373ms
    
    # Subtest: reply.send should throw if undefined error is thrown at onSend hook
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 83 - reply.send should throw if undefined error is thrown at onSend hook # time=5.772ms
    
    # Subtest: onTimeout should be triggered
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - onTimeout
        ok 5 - type is Error
        ok 6 - should be equal
    ok 84 - onTimeout should be triggered # time=511.315ms
    
    # Subtest: onTimeout should be triggered and socket _meta is set
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - onTimeout
        ok 5 - type is Error
        ok 6 - should be equal
    ok 85 - onTimeout should be triggered and socket _meta is set # time=513.198ms
    
    # Subtest: registering invalid hooks should throw an error
        1..3
        ok 1 - expected to throw: Error onRequest hook should be a function, instead got [object Undefined]
        ok 2 - expected to throw: Error onRequest hook should be a function, instead got [object Null]
        ok 3 - expected to throw: Error onSend hook should be a function, instead got [object Undefined]
    ok 86 - registering invalid hooks should throw an error # time=14.389ms
    
    1..86
    # time=2634.315ms
ok 39 - test/hooks.test.js # time=2634.315ms

# Subtest: test/http2/closing.test.js
    # Subtest: http/2 request while fastify closing
        ok 1 - http2 successfully loaded
        ok 2 - should not error
        # Subtest: return 200
            ok 1 - should be equal
            1..1
        ok 3 - return 200 # time=21.488ms
        
        1..3
    ok 1 - http/2 request while fastify closing # time=119.406ms
    
    # Subtest: http/2 request while fastify closing - return503OnClosing: false
        ok 1 - http2 successfully loaded
        ok 2 - should not error
        # Subtest: return 200
            ok 1 - should be equal
            1..1
        ok 3 - return 200 # time=10.631ms
        
        1..3
    ok 2 - http/2 request while fastify closing - return503OnClosing: false # time=29.593ms
    
    # Subtest: http/2 closes successfully with async await
        1..0
    ok 3 - http/2 closes successfully with async await # time=138.227ms
    
    # Subtest: https/2 closes successfully with async await
        1..0
    ok 4 - https/2 closes successfully with async await # time=40.505ms
    
    # Subtest: http/2 server side session emits a timeout event
        ok 1 - should be equal
        1..1
    ok 5 - http/2 server side session emits a timeout event # time=141.648ms
    
    1..5
    # time=515.824ms
ok 40 - test/http2/closing.test.js # time=515.824ms

# Subtest: test/http2/constraint.test.js
    # Subtest: A route supports host constraints under http2 protocol and secure connection
        1..5
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request - no constrain
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - https get request - no constrain # time=60.34ms
        
        # Subtest: https get request - constrain
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - https get request - constrain # time=15.233ms
        
        # Subtest: https get request - constrain - not found
            1..1
            ok 1 - should be equal
        ok 5 - https get request - constrain - not found # time=12.11ms
        
    ok 1 - A route supports host constraints under http2 protocol and secure connection # time=199.29ms
    
    1..1
    # time=234.506ms
ok 41 - test/http2/constraint.test.js # time=234.506ms

# Subtest: test/http2/head.test.js
    ok 1 - http2 successfully loaded
    ok 2 - should not error
    # Subtest: http HEAD request
        1..1
        ok 1 - should be equal
    ok 3 - http HEAD request # time=89.265ms
    
    1..3
    # time=187.366ms
ok 42 - test/http2/head.test.js # time=187.366ms

# Subtest: test/http2/missing-http2-module.test.js
    # Subtest: should throw when http2 module cannot be found
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - should throw when http2 module cannot be found # time=14.127ms
    
    1..1
    # time=21.112ms
ok 43 - test/http2/missing-http2-module.test.js # time=21.112ms

# Subtest: test/http2/plain.test.js
    ok 1 - http2 successfully loaded
    ok 2 - should not error
    # Subtest: http get request
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 3 - http get request # time=41.631ms
    
    # Subtest: http hostname
        1..1
        ok 1 - should be equal
    ok 4 - http hostname # time=8.899ms
    
    1..4
    # time=179.297ms
ok 44 - test/http2/plain.test.js # time=179.297ms

# Subtest: test/http2/secure-with-fallback.test.js
    # Subtest: secure with fallback
        1..7
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get error
            1..1
            ok 1 - should be equal
        ok 3 - https get error # time=42.854ms
        
        # Subtest: https post
            1..2
            ok 1 - should be equal
            ok 2 - should be equivalent
        ok 4 - https post # time=20.673ms
        
        # Subtest: https get request
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - https get request # time=14.636ms
        
        # Subtest: http1 get request
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 6 - http1 get request # time=35.94ms
        
        # Subtest: http1 get error
            1..2
            ok 1 - should not error
            ok 2 - should be equal
        ok 7 - http1 get error # time=19.277ms
        
    ok 1 - secure with fallback # time=240.293ms
    
    1..1
    # time=276.507ms
ok 45 - test/http2/secure-with-fallback.test.js # time=276.507ms

# Subtest: test/http2/secure.test.js
    # Subtest: secure
        1..4
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - https get request # time=48.773ms
        
        # Subtest: https get request without trust proxy - protocol
            1..2
            ok 1 - should be equivalent
            ok 2 - should be equivalent
        ok 4 - https get request without trust proxy - protocol # time=36.852ms
        
    ok 1 - secure # time=189.421ms
    
    1..1
    # time=225.086ms
ok 46 - test/http2/secure.test.js # time=225.086ms

# Subtest: test/http2/unknown-http-method.test.js
    ok 1 - should not error
    # Subtest: http UNKNOWN_METHOD request
        1..2
        ok 1 - should be equal
        ok 2 - should be equivalent
    ok 2 - http UNKNOWN_METHOD request # time=56.833ms
    
    1..2
    # time=161.451ms
ok 47 - test/http2/unknown-http-method.test.js # time=161.451ms

# Subtest: test/https/custom-https-server.test.js
    # Subtest: Should support a custom https server
        1..4
        ok 1 - it is called twice for every HOST interface
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - Should support a custom https server # time=153.286ms
    
    1..1
    # time=190.925ms
ok 48 - test/https/custom-https-server.test.js # time=190.925ms

# Subtest: test/https/https.test.js
    # Subtest: https
        1..4
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 3 - https get request # time=45.557ms
        
        # Subtest: https get request without trust proxy - protocol
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 4 - https get request without trust proxy - protocol # time=19.611ms
        
    ok 1 - https # time=210.213ms
    
    1..1
    # time=267.155ms
ok 49 - test/https/https.test.js # time=267.155ms

# Subtest: test/imports.test.js
    # Subtest: should import as default
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 1 - should import as default # time=973.613ms
    
    # Subtest: should import as esm
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 2 - should import as esm # time=1.694ms
    
    1..2
    # time=986.354ms
ok 50 - test/imports.test.js # time=986.354ms

# Subtest: test/inject.test.js
    # Subtest: inject should exist
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 1 - inject should exist # time=19.255ms
    
    # Subtest: should wait for the ready event
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 2 - should wait for the ready event # time=633.333ms
    
    # Subtest: inject get request
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 3 - inject get request # time=10.4ms
    
    # Subtest: inject get request - code check
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 4 - inject get request - code check # time=30.71ms
    
    # Subtest: inject get request - headers check
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 5 - inject get request - headers check # time=7.675ms
    
    # Subtest: inject get request - querystring
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 6 - inject get request - querystring # time=13.661ms
    
    # Subtest: inject get request - params
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 7 - inject get request - params # time=7.891ms
    
    # Subtest: inject get request - wildcard
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - inject get request - wildcard # time=7.579ms
    
    # Subtest: inject get request - headers
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 9 - inject get request - headers # time=27.696ms
    
    # Subtest: inject post request
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 10 - inject post request # time=31.065ms
    
    # Subtest: inject post request - send stream
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 11 - inject post request - send stream # time=10.791ms
    
    # Subtest: inject get request - reply stream
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 12 - inject get request - reply stream # time=14.478ms
    
    # Subtest: inject promisify - waiting for ready event
        1..1
        ok 1 - should be equal
    ok 13 - inject promisify - waiting for ready event # time=23.696ms
    
    # Subtest: inject promisify - after the ready event
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 14 - inject promisify - after the ready event # time=6.497ms
    
    # Subtest: inject promisify - when the server is up
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 15 - inject promisify - when the server is up # time=37.202ms
    
    # Subtest: should reject in error case
        1..1
        ok 1 - should be equal
    ok 16 - should reject in error case # time=509.978ms
    
    # Subtest: inject a multipart request using form-body
        1..2
        ok 1 - should be equal
        ok 2 - expect truthy value
    ok 17 - inject a multipart request using form-body # time=14.32ms
    
    # Subtest: should error the promise if ready errors
        1..3
        ok 1 - after is called
        ok 2 - expect truthy value
        ok 3 - should be equal
    ok 18 - should error the promise if ready errors # time=16.717ms
    
    # Subtest: should throw error if callback specified and if ready errors
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 19 - should throw error if callback specified and if ready errors # time=23.991ms
    
    # Subtest: should support builder-style injection with ready app
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
    ok 20 - should support builder-style injection with ready app # time=8.139ms
    
    # Subtest: should support builder-style injection with non-ready app
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
    ok 21 - should support builder-style injection with non-ready app # time=6.684ms
    
    # Subtest: should handle errors in builder-style injection correctly
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 22 - should handle errors in builder-style injection correctly # time=5.127ms
    
    1..22
    # time=1487.07ms
ok 51 - test/inject.test.js # time=1487.07ms

# Subtest: test/internals/all.test.js
    # Subtest: fastify.all should add all the methods to the same url
        1..32
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equivalent
        ok 9 - should not error
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equivalent
        ok 15 - should not error
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equivalent
        ok 19 - should not error
        ok 20 - should be equivalent
        ok 21 - should not error
        ok 22 - should be equivalent
        ok 23 - should not error
        ok 24 - should be equivalent
        ok 25 - should not error
        ok 26 - should be equivalent
        ok 27 - should not error
        ok 28 - should be equivalent
        ok 29 - should not error
        ok 30 - should be equivalent
        ok 31 - should not error
        ok 32 - should be equivalent
    ok 1 - fastify.all should add all the methods to the same url # time=117.501ms
    
    1..1
    # time=123.463ms
ok 52 - test/internals/all.test.js # time=123.463ms

# Subtest: test/internals/contentTypeParser.test.js
    # Subtest: rawBody function
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - rawBody function # time=41.169ms
    
    # Subtest: Should support Webpack and faux modules
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 2 - Should support Webpack and faux modules # time=19.951ms
    
    1..2
    # time=73.746ms
ok 53 - test/internals/contentTypeParser.test.js # time=73.746ms

# Subtest: test/internals/decorator.test.js
    # Subtest: decorate should add the given method to its instance
        1..1
        ok 1 - expect truthy value
    ok 1 - decorate should add the given method to its instance # time=6.997ms
    
    # Subtest: decorate is chainable
        1..3
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
    ok 2 - decorate is chainable # time=2.914ms
    
    # Subtest: checkExistence should check if a property is part of the given instance
        1..1
        ok 1 - expect truthy value
    ok 3 - checkExistence should check if a property is part of the given instance # time=1.755ms
    
    # Subtest: checkExistence should find the instance if not given
        1..1
        ok 1 - expect truthy value
    ok 4 - checkExistence should find the instance if not given # time=1.687ms
    
    # Subtest: checkExistence should check the prototype as well
        1..1
        ok 1 - expect truthy value
    ok 5 - checkExistence should check the prototype as well # time=1.536ms
    
    # Subtest: checkDependencies should throw if a dependency is not present
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 6 - checkDependencies should throw if a dependency is not present # time=1.742ms
    
    # Subtest: decorate should internally call checkDependencies
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 7 - decorate should internally call checkDependencies # time=1.061ms
    
    # Subtest: decorate should recognize getter/setter objects
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - (unnamed test)
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 8 - decorate should recognize getter/setter objects # time=3.237ms
    
    1..8
    # time=85.637ms
ok 54 - test/internals/decorator.test.js # time=85.637ms

# Subtest: test/internals/handleRequest.test.js
    # Subtest: handleRequest function - sent reply
        1..1
        ok 1 - should be equal
    ok 1 - handleRequest function - sent reply # time=7.682ms
    
    # Subtest: handleRequest function - invoke with error
        1..1
        ok 1 - should be equal
    ok 2 - handleRequest function - invoke with error # time=1.946ms
    
    # Subtest: handler function - invalid schema
        1..1
        ok 1 - errorHandler called
    ok 3 - handler function - invalid schema # time=125.241ms
    
    # Subtest: handler function - reply
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - (unnamed test)
    ok 4 - handler function - reply # time=4.224ms
    
    # Subtest: handler function - preValidationCallback with finished response
        1..0
    ok 5 - handler function - preValidationCallback with finished response # time=1.079ms
    
    # Subtest: request should be defined in onSend Hook on post request with content type application/json
        1..8
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - should not error
        ok 8 - should be equal
    ok 6 - request should be defined in onSend Hook on post request with content type application/json # time=535.796ms
    
    # Subtest: request should be defined in onSend Hook on post request with content type application/x-www-form-urlencoded
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - should be equal
    ok 7 - request should be defined in onSend Hook on post request with content type application/x-www-form-urlencoded # time=14.442ms
    
    # Subtest: request should be defined in onSend Hook on options request with content type application/x-www-form-urlencoded
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - should be equal
    ok 8 - request should be defined in onSend Hook on options request with content type application/x-www-form-urlencoded # time=36.673ms
    
    # Subtest: request should respond with an error if an unserialized payload is sent inside an async handler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
    ok 9 - request should respond with an error if an unserialized payload is sent inside an async handler # time=38.876ms
    
    1..9
    # time=820.192ms
ok 55 - test/internals/handleRequest.test.js # time=820.192ms

# Subtest: test/internals/hookRunner.test.js
    # Subtest: hookRunner - Basic
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 1 - hookRunner - Basic # time=15.714ms
    
    # Subtest: hookRunner - In case of error should skip to done
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 2 - hookRunner - In case of error should skip to done # time=5.086ms
    
    # Subtest: hookRunner - Should handle throw
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 3 - hookRunner - Should handle throw # time=4.262ms
    
    # Subtest: hookRunner - Should handle promises
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 4 - hookRunner - Should handle promises # time=33.79ms
    
    # Subtest: hookRunner - In case of error should skip to done (with promises)
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 5 - hookRunner - In case of error should skip to done (with promises) # time=3.862ms
    
    # Subtest: hookRunner - Be able to exit before its natural end
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 6 - hookRunner - Be able to exit before its natural end # time=2.236ms
    
    # Subtest: hookRunner - Promises that resolve to a value do not change the state
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 7 - hookRunner - Promises that resolve to a value do not change the state # time=2.545ms
    
    # Subtest: onSendHookRunner - Basic
        1..13
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should be equivalent
        ok 9 - should be equal
        ok 10 - should not error
        ok 11 - should be equivalent
        ok 12 - should be equivalent
        ok 13 - should be equal
    ok 8 - onSendHookRunner - Basic # time=16.844ms
    
    # Subtest: onSendHookRunner - Can change the payload
        1..7
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
    ok 9 - onSendHookRunner - Can change the payload # time=5.532ms
    
    # Subtest: onSendHookRunner - In case of error should skip to done
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 10 - onSendHookRunner - In case of error should skip to done # time=3.955ms
    
    # Subtest: onSendHookRunner - Should handle promises
        1..7
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
    ok 11 - onSendHookRunner - Should handle promises # time=4.956ms
    
    # Subtest: onSendHookRunner - In case of error should skip to done (with promises)
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 12 - onSendHookRunner - In case of error should skip to done (with promises) # time=4.762ms
    
    # Subtest: onSendHookRunner - Be able to exit before its natural end
        1..2
        ok 1 - should be equivalent
        ok 2 - should be equivalent
    ok 13 - onSendHookRunner - Be able to exit before its natural end # time=2.365ms
    
    1..13
    # time=164.48ms
ok 56 - test/internals/hookRunner.test.js # time=164.48ms

# Subtest: test/internals/hooks.test.js
    # Subtest: hooks should have 4 array with the registered hooks
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        1..8
    ok 1 - hooks should have 4 array with the registered hooks # time=11.369ms
    
    # Subtest: hooks.add should add a hook to the given hook
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        1..14
    ok 2 - hooks.add should add a hook to the given hook # time=6.798ms
    
    # Subtest: hooks should throw on unexisting handler
        1..1
        ok 1 - (unnamed test)
    ok 3 - hooks should throw on unexisting handler # time=1.285ms
    
    # Subtest: should throw on wrong parameters
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 4 - should throw on wrong parameters # time=2.11ms
    
    1..4
    # time=67.979ms
ok 57 - test/internals/hooks.test.js # time=67.979ms

# Subtest: test/internals/initialConfig.test.js
    # Subtest: Fastify.initialConfig is an object
        1..1
        ok 1 - type is object
    ok 1 - Fastify.initialConfig is an object # time=19.136ms
    
    # Subtest: without options passed to Fastify, initialConfig should expose default values
        1..1
        ok 1 - should be equivalent
    ok 2 - without options passed to Fastify, initialConfig should expose default values # time=9.714ms
    
    # Subtest: Fastify.initialConfig should expose all options
        1..20
        ok 1 - should be equal
        ok 2 - for security reason the key cert is hidden
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - expect truthy value
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equal
    ok 3 - Fastify.initialConfig should expose all options # time=27.994ms
    
    # Subtest: Should throw if you try to modify Fastify.initialConfig
        1..4
        ok 1 - type is TypeError
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - (unnamed test)
    ok 4 - Should throw if you try to modify Fastify.initialConfig # time=3.823ms
    
    # Subtest: We must avoid shallow freezing and ensure that the whole object is freezed
        1..4
        ok 1 - type is TypeError
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - key cert removed
    ok 5 - We must avoid shallow freezing and ensure that the whole object is freezed # time=35.104ms
    
    # Subtest: https value check
        1..1
        ok 1 - expect falsey value
    ok 6 - https value check # time=1.668ms
    
    # Subtest: Return an error if options do not match the validation schema
        1..6
        ok 1 - type is Error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
        ok 6 - (unnamed test)
    ok 7 - Return an error if options do not match the validation schema # time=89.322ms
    
    # Subtest: Original options must not be frozen
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - Original options must not be frozen # time=3.716ms
    
    # Subtest: Original options must not be altered (test deep cloning)
        1..3
        ok 1 - should be equal
        ok 2 - should be equivalent
        ok 3 - should be equivalent
    ok 9 - Original options must not be altered (test deep cloning) # time=6.165ms
    
    # Subtest: Should not have issues when passing stream options to Pino.js
        1..15
        ok 1 - type is object
        ok 2 - should be equivalent
        ok 3 - listen at log message is ok
        ok 4 - should not error
        ok 5 - reqId is defined
        ok 6 - req is defined
        ok 7 - message is set
        ok 8 - method is get
        ok 9 - expect truthy value
        ok 10 - should be equal
        ok 11 - reqId is defined
        ok 12 - res is defined
        ok 13 - message is set
        ok 14 - statusCode is 200
        ok 15 - responseTime is defined
    ok 10 - Should not have issues when passing stream options to Pino.js # time=59.34ms
    
    # Subtest: deepFreezeObject() should not throw on TypedArray
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - (unnamed test)
    ok 11 - deepFreezeObject() should not throw on TypedArray # time=2.561ms
    
    # Subtest: Fastify.initialConfig should accept the deprecated versioning option
        1..1
        ok 1 - should be equal
    ok 12 - Fastify.initialConfig should accept the deprecated versioning option # time=6.186ms
    
    # Subtest: pluginTimeout should be parsed correctly
        ok 1 - should be equal
        ok 2 - should be equal
        1..2
    ok 13 - pluginTimeout should be parsed correctly # time=3.872ms
    
    1..13
    # time=379.839ms
ok 58 - test/internals/initialConfig.test.js # time=379.839ms

# Subtest: test/internals/logger.test.js
    # Subtest: time resolution
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - time resolution # time=7.693ms
    
    # Subtest: The logger should add a unique id for every request
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - the id should not be duplicated
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - the id should not be duplicated
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - the id should not be duplicated
        ok 11 - expect truthy value
        ok 12 - should not error
        ok 13 - the id should not be duplicated
        ok 14 - expect truthy value
        ok 15 - should not error
        ok 16 - the id should not be duplicated
        ok 17 - expect truthy value
        ok 18 - should not error
        ok 19 - the id should not be duplicated
        ok 20 - expect truthy value
        ok 21 - should not error
        ok 22 - the id should not be duplicated
        ok 23 - expect truthy value
        ok 24 - should not error
        ok 25 - the id should not be duplicated
        ok 26 - expect truthy value
        ok 27 - should not error
        ok 28 - the id should not be duplicated
        ok 29 - expect truthy value
        ok 30 - should not error
        ok 31 - the id should not be duplicated
        1..31
    ok 2 - The logger should add a unique id for every request # time=109.498ms
    
    # Subtest: The logger should reuse request id header for req.id
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - the request id from the header should be returned
        1..4
    ok 3 - The logger should reuse request id header for req.id # time=11.724ms
    
    # Subtest: The logger should error if both stream and file destination are given
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 4 - The logger should error if both stream and file destination are given # time=2.366ms
    
    # Subtest: The serializer prevent fails if the request socket is undefined
        1..1
        ok 1 - should be equivalent
    ok 5 - The serializer prevent fails if the request socket is undefined # time=7.03ms
    
    1..5
    # time=151.115ms
ok 59 - test/internals/logger.test.js # time=151.115ms

# Subtest: test/internals/plugin.test.js
    # Subtest: shouldSkipOverride should check the 'skip-override' symbol
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 1 - shouldSkipOverride should check the 'skip-override' symbol # time=7.417ms
    
    # Subtest: getPluginName should return plugin name if the file is cached
        1..1
        ok 1 - should be equal
    ok 2 - getPluginName should return plugin name if the file is cached # time=2.61ms
    
    # Subtest: getMeta should return the object stored with the 'plugin-meta' symbol
        1..1
        ok 1 - should be equivalent
    ok 3 - getMeta should return the object stored with the 'plugin-meta' symbol # time=6.015ms
    
    # Subtest: checkDecorators should check if the given decorator is present in the instance
        1..1
        ok 1 - Everything ok
    ok 4 - checkDecorators should check if the given decorator is present in the instance # time=3.099ms
    
    # Subtest: checkDecorators should check if the given decorator is present in the instance (errored)
        1..1
        ok 1 - should be equal
    ok 5 - checkDecorators should check if the given decorator is present in the instance (errored) # time=1.642ms
    
    # Subtest: checkDecorators should accept optional decorators
        1..1
        ok 1 - Everything ok
    ok 6 - checkDecorators should accept optional decorators # time=5.844ms
    
    # Subtest: checkDependencies should check if the given dependency is present in the instance
        1..1
        ok 1 - Everything ok
    ok 7 - checkDependencies should check if the given dependency is present in the instance # time=1.839ms
    
    # Subtest: checkDependencies should check if the given dependency is present in the instance (errored)
        1..1
        ok 1 - should be equal
    ok 8 - checkDependencies should check if the given dependency is present in the instance (errored) # time=37.834ms
    
    1..8
    # time=128.089ms
ok 60 - test/internals/plugin.test.js # time=128.089ms

# Subtest: test/internals/reply-serialize.test.js
    # Subtest: Reply\#compileSerializationSchema
        1..4
        # Subtest: Should return a serialization function
            1..4
            ok 1 - type is Function
            ok 2 - type is string
            ok 3 - should be equal
            ok 4 - should be equal
        ok 1 - Should return a serialization function # time=95.585ms
        
        # Subtest: Should reuse the serialize fn across multiple invocations - Route without schema
            1..17
            ok 1 - build the schema compilation function
            ok 2 - type is Function
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - Are the same validate function
            ok 6 - type is Function
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - Are the same validate function
            ok 10 - type is Function
            ok 11 - should be equal
            ok 12 - should be equal
            ok 13 - Are the same validate function
            ok 14 - type is Function
            ok 15 - should be equal
            ok 16 - should be equal
            ok 17 - should be equal
        ok 2 - Should reuse the serialize fn across multiple invocations - Route without schema # time=20.089ms
        
        # Subtest: Should use the custom serializer compiler for the route
            1..17
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equivalent
            ok 7 - {"hello":"world"}
            ok 8 - should be equivalent
            ok 9 - {"hello":"world"}
            ok 10 - should be equal
            ok 11 - should be equal
            ok 12 - should be equal
            ok 13 - should be equal
            ok 14 - should be equal
            ok 15 - should be equal
            ok 16 - should be equivalent
            ok 17 - {"fullName":"Jone","phone":1090243795}
        ok 3 - Should use the custom serializer compiler for the route # time=19.074ms
        
        # Subtest: Should build a WeakMap for cache when called
            1..4
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - type is WeakMap
            ok 4 - should be equal
        ok 4 - Should build a WeakMap for cache when called # time=26.842ms
        
    ok 1 - Reply\#compileSerializationSchema # time=182.335ms
    
    # Subtest: Reply\#getSerializationFunction
        1..3
        # Subtest: Should retrieve the serialization function from the Schema definition
            1..13
            ok 1 - type is Function
            ok 2 - type is Function
            ok 3 - type is Function
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - expect falsey value
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
            ok 11 - should be equal
            ok 12 - should be equal
            ok 13 - should be equal
        ok 1 - Should retrieve the serialization function from the Schema definition # time=39.519ms
        
        # Subtest: Should retrieve the serialization function from the cached one
            1..6
            ok 1 - type is Function
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
        ok 2 - Should retrieve the serialization function from the cached one # time=43.579ms
        
        # Subtest: Should not instantiate a WeakMap if it is not needed
            1..4
            ok 1 - expect falsey value
            ok 2 - should be equal
            ok 3 - expect falsey value
            ok 4 - should be equal
        ok 3 - Should not instantiate a WeakMap if it is not needed # time=7.25ms
        
    ok 2 - Reply\#getSerializationFunction # time=115.831ms
    
    # Subtest: Reply\#serializeInput
        1..6
        # Subtest: Should throw if missed serialization function from HTTP status
            1..2
            ok 1 - should be equal
            ok 2 - should be equivalent
        ok 1 - Should throw if missed serialization function from HTTP status # time=29.939ms
        
        # Subtest: Should throw if missed serialization function from HTTP status with specific content type
            1..2
            ok 1 - should be equal
            ok 2 - should be equivalent
        ok 2 - Should throw if missed serialization function from HTTP status with specific content type # time=31.572ms
        
        # Subtest: Should use a serializer fn from HTTP status
            1..6
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
        ok 3 - Should use a serializer fn from HTTP status # time=45.636ms
        
        # Subtest: Should compile a serializer out of a schema if serializer fn missed
            1..10
            ok 1 - should be equal
            ok 2 - expect falsey value
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 4 - Should compile a serializer out of a schema if serializer fn missed # time=14.192ms
        
        # Subtest: Should use a cached serializer fn
            1..12
            ok 1 - should be equal
            ok 2 - expect falsey value
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
            ok 11 - should be equal
            ok 12 - should be equal
        ok 5 - Should use a cached serializer fn # time=9.743ms
        
        # Subtest: Should instantiate a WeakMap after first call
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - type is WeakMap
        ok 6 - Should instantiate a WeakMap after first call # time=9.131ms
        
    ok 3 - Reply\#serializeInput # time=150.939ms
    
    1..3
    # time=457.342ms
ok 61 - test/internals/reply-serialize.test.js # time=457.342ms

# Subtest: test/internals/reply.test.js
    # Subtest: Once called, Reply should return an object with methods
        1..13
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
        ok 12 - should be equal
        ok 13 - should be equal
    ok 1 - Once called, Reply should return an object with methods # time=17.442ms
    
    # Subtest: reply.send will logStream error and destroy the stream
        1..1
        ok 1 - Error not logged and not streamed
    ok 2 - reply.send will logStream error and destroy the stream # time=5.934ms
    
    # Subtest: reply.send throw with circular JSON
        1..1
        ok 1 - Converting circular structure to JSON
    ok 3 - reply.send throw with circular JSON # time=1.665ms
    
    # Subtest: reply.send returns itself
        1..1
        ok 1 - should be equal
    ok 4 - reply.send returns itself # time=2.052ms
    
    # Subtest: reply.serializer should set a custom serializer
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 5 - reply.serializer should set a custom serializer # time=1.76ms
    
    # Subtest: reply.serializer should support running preSerialization hooks
        1..3
        ok 1 - preSerialization
        ok 2 - should not error
        ok 3 - should be equal
    ok 6 - reply.serializer should support running preSerialization hooks # time=1132.064ms
    
    # Subtest: reply.serialize should serialize payload
        1..1
        ok 1 - should be equal
    ok 7 - reply.serialize should serialize payload # time=2.724ms
    
    # Subtest: reply.serialize should serialize payload with a custom serializer
        1..2
        ok 1 - should be equal
        ok 2 - custom serializer not called
    ok 8 - reply.serialize should serialize payload with a custom serializer # time=6.763ms
    
    # Subtest: reply.serialize should serialize payload with a context default serializer
        1..2
        ok 1 - should be equal
        ok 2 - custom serializer not called
    ok 9 - reply.serialize should serialize payload with a context default serializer # time=1.196ms
    
    # Subtest: reply.serialize should serialize payload with Fastify instance
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 10 - reply.serialize should serialize payload with Fastify instance # time=30.173ms
    
    # Subtest: within an instance
        ok 1 - should not error
        # Subtest: custom serializer should be used
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - custom serializer should be used # time=47.365ms
        
        # Subtest: status code and content-type should be correct
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 3 - status code and content-type should be correct # time=8.243ms
        
        # Subtest: auto status code shoud be 200
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - auto status code shoud be 200 # time=8.911ms
        
        # Subtest: auto type shoud be text/plain
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - auto type shoud be text/plain # time=6.508ms
        
        # Subtest: redirect to `/` - 1
            1..1
            ok 1 - should be equal
        ok 6 - redirect to `/` - 1 # time=5.123ms
        
        # Subtest: redirect to `/` - 2
            1..1
            ok 1 - should be equal
        ok 7 - redirect to `/` - 2 # time=5.574ms
        
        # Subtest: redirect to `/` - 3
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 8 - redirect to `/` - 3 # time=10.017ms
        
        # Subtest: redirect to `/` - 4
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 9 - redirect to `/` - 4 # time=12.756ms
        
        # Subtest: redirect to `/` - 5
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
        ok 10 - redirect to `/` - 5 # time=4.457ms
        
        # Subtest: redirect to `/` - 6
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 11 - redirect to `/` - 6 # time=7.993ms
        
        # Subtest: redirect to `/` - 7
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 12 - redirect to `/` - 7 # time=8ms
        
        # Subtest: redirect to `/` - 8
            1..1
            ok 1 - should be equal
        ok 13 - redirect to `/` - 8 # time=3.747ms
        
        # Subtest: redirect to `/` - 9
            1..1
            ok 1 - should be equal
        ok 14 - redirect to `/` - 9 # time=3.724ms
        
        # Subtest: redirect with async function to `/` - 10
            1..1
            ok 1 - should be equal
        ok 15 - redirect with async function to `/` - 10 # time=3.69ms
        
        1..15
    ok 11 - within an instance # time=249.578ms
    
    # Subtest: buffer without content type should send a application/octet-stream and raw buffer
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 12 - buffer without content type should send a application/octet-stream and raw buffer # time=18.055ms
    
    # Subtest: buffer with content type should not send application/octet-stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 13 - buffer with content type should not send application/octet-stream # time=11.186ms
    
    # Subtest: stream with content type should not send application/octet-stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 14 - stream with content type should not send application/octet-stream # time=29.557ms
    
    # Subtest: stream without content type should not send application/octet-stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 15 - stream without content type should not send application/octet-stream # time=92.366ms
    
    # Subtest: stream using reply.raw.writeHead should return customize headers
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 16 - stream using reply.raw.writeHead should return customize headers # time=25.989ms
    
    # Subtest: plain string without content type should send a text/plain
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 17 - plain string without content type should send a text/plain # time=42.003ms
    
    # Subtest: plain string with content type should be sent unmodified
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - plain string with content type should be sent unmodified # time=9.926ms
    
    # Subtest: plain string with content type and custom serializer should be serialized
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 19 - plain string with content type and custom serializer should be serialized # time=33.707ms
    
    # Subtest: plain string with content type application/json should NOT be serialized as json
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 20 - plain string with content type application/json should NOT be serialized as json # time=34.479ms
    
    # Subtest: plain string with custom json content type should NOT be serialized as json
        1..19
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equivalent
    ok 21 - plain string with custom json content type should NOT be serialized as json # time=24.807ms
    
    # Subtest: non-string with content type application/json SHOULD be serialized as json
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 22 - non-string with content type application/json SHOULD be serialized as json # time=32.91ms
    
    # Subtest: non-string with custom json's content-type SHOULD be serialized as json
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 23 - non-string with custom json's content-type SHOULD be serialized as json # time=24.124ms
    
    # Subtest: non-string with custom json content type SHOULD be serialized as json
        1..16
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 24 - non-string with custom json content type SHOULD be serialized as json # time=31.76ms
    
    # Subtest: error object with a content type that is not application/json should work
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 25 - error object with a content type that is not application/json should work # time=8.695ms
    
    # Subtest: undefined payload should be sent as-is
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 26 - undefined payload should be sent as-is # time=10.841ms
    
    # Subtest: for HEAD method, no body should be sent but content-length should be
        1..11
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
    ok 27 - for HEAD method, no body should be sent but content-length should be # time=14.073ms
    
    # Subtest: reply.send(new NotFound()) should not invoke the 404 handler
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 28 - reply.send(new NotFound()) should not invoke the 404 handler # time=13.121ms
    
    # Subtest: reply can set multiple instances of same header
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - expect truthy value
        ok 4 - should be equivalent strictly
    ok 29 - reply can set multiple instances of same header # time=7.04ms
    
    # Subtest: reply.hasHeader returns correct values
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 30 - reply.hasHeader returns correct values # time=6.219ms
    
    # Subtest: reply.getHeader returns correct values
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
        ok 4 - should be equivalent strictly
        ok 5 - should be equivalent strictly
    ok 31 - reply.getHeader returns correct values # time=23.608ms
    
    # Subtest: reply.getHeader returns raw header if there is not in the reply headers
        1..1
        ok 1 - should be equal
    ok 32 - reply.getHeader returns raw header if there is not in the reply headers # time=0.773ms
    
    # Subtest: reply.getHeaders returns correct values
        1..3
        ok 1 - should be equivalent strictly
        ok 2 - should be equivalent strictly
        ok 3 - should not error
    ok 33 - reply.getHeaders returns correct values # time=6.952ms
    
    # Subtest: reply.removeHeader can remove the value
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent strictly
        ok 5 - (unnamed test)
    ok 34 - reply.removeHeader can remove the value # time=8.586ms
    
    # Subtest: reply.header can reset the value
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent strictly
        ok 3 - (unnamed test)
    ok 35 - reply.header can reset the value # time=6.963ms
    
    # Subtest: reply.hasHeader computes raw and fastify headers
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - (unnamed test)
    ok 36 - reply.hasHeader computes raw and fastify headers # time=8.167ms
    
    # Subtest: Reply should handle JSON content type with a charset
        1..16
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should not error
        ok 16 - should be equal
    ok 37 - Reply should handle JSON content type with a charset # time=24.486ms
    
    # Subtest: Content type and charset set previously
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 38 - Content type and charset set previously # time=6.208ms
    
    # Subtest: .status() is an alias for .code()
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 39 - .status() is an alias for .code() # time=5.417ms
    
    # Subtest: .statusCode is getter and setter
        1..4
        ok 1 - 200
        ok 2 - 418
        ok 3 - should not error
        ok 4 - should be equal
    ok 40 - .statusCode is getter and setter # time=6.613ms
    
    # Subtest: reply.header setting multiple cookies as multiple Set-Cookie headers
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equivalent strictly
        ok 4 - should not error
        ok 5 - should not error
        ok 6 - expect truthy value
        ok 7 - should be equivalent strictly
    ok 41 - reply.header setting multiple cookies as multiple Set-Cookie headers # time=13.706ms
    
    # Subtest: should emit deprecation warning when trying to modify the reply.sent property
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - (unnamed test)
    ok 42 - should emit deprecation warning when trying to modify the reply.sent property # time=6.033ms
    
    # Subtest: should throw error when passing falsy value to reply.sent
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - (unnamed test)
    ok 43 - should throw error when passing falsy value to reply.sent # time=6.735ms
    
    # Subtest: should throw error when attempting to set reply.sent more than once
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - (unnamed test)
    ok 44 - should throw error when attempting to set reply.sent more than once # time=5.705ms
    
    # Subtest: should not throw error when attempting to set reply.sent if the underlining request was sent
        1..3
        ok 1 - expected to not throw
        ok 2 - should not error
        ok 3 - (unnamed test)
    ok 45 - should not throw error when attempting to set reply.sent if the underlining request was sent # time=5.766ms
    
    # Subtest: reply.getResponseTime() should return 0 before the timer is initialised on the reply by setting up response listeners
        1..1
        ok 1 - should be equal
    ok 46 - reply.getResponseTime() should return 0 before the timer is initialised on the reply by setting up response listeners # time=1.059ms
    
    # Subtest: reply.getResponseTime() should return a number greater than 0 after the timer is initialised on the reply by setting up response listeners
        1..1
        ok 1 - expect truthy value
    ok 47 - reply.getResponseTime() should return a number greater than 0 after the timer is initialised on the reply by setting up response listeners # time=7.339ms
    
    # Subtest: reply.getResponseTime() should return the time since a request started while inflight
        1..1
        ok 1 - should not be equal
    ok 48 - reply.getResponseTime() should return the time since a request started while inflight # time=4.611ms
    
    # Subtest: reply.getResponseTime() should return the same value after a request is finished
        1..1
        ok 1 - should be equal
    ok 49 - reply.getResponseTime() should return the same value after a request is finished # time=5.986ms
    
    # Subtest: reply should use the custom serializer
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 50 - reply should use the custom serializer # time=7.633ms
    
    # Subtest: reply should use the right serializer in encapsulated context
        1..9
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
    ok 51 - reply should use the right serializer in encapsulated context # time=14.815ms
    
    # Subtest: reply should use the right serializer in deep encapsulated context
        1..8
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 52 - reply should use the right serializer in deep encapsulated context # time=23.911ms
    
    # Subtest: reply should use the route serializer
        1..3
        ok 1 - should be equivalent
        ok 2 - should not error
        ok 3 - should be equal
    ok 53 - reply should use the route serializer # time=4.525ms
    
    # Subtest: cannot set the replySerializer when the server is running
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 54 - cannot set the replySerializer when the server is running # time=25.86ms
    
    # Subtest: reply should not call the custom serializer for errors and not found
        1..9
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
    ok 55 - reply should not call the custom serializer for errors and not found # time=15.432ms
    
    # Subtest: reply.then
        1..4
        # Subtest: without an error
            1..1
            ok 1 - fulfilled called
        ok 1 - without an error # time=12.296ms
        
        # Subtest: with an error
            1..1
            ok 1 - should be equal
        ok 2 - with an error # time=1.231ms
        
        # Subtest: with error but without reject callback
            1..1
            ok 1 - (unnamed test)
        ok 3 - with error but without reject callback # time=0.656ms
        
        # Subtest: with error, without reject callback, with logger
            1..1
            ok 1 - should be equal
        ok 4 - with error, without reject callback, with logger # time=1.283ms
        
    ok 56 - reply.then # time=22.487ms
    
    # Subtest: reply.sent should read from response.writableEnded if it is defined
        1..1
        ok 1 - should be equal
    ok 57 - reply.sent should read from response.writableEnded if it is defined # time=0.456ms
    
    # Subtest: redirect to an invalid URL should not crash the server
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        1..7
    ok 58 - redirect to an invalid URL should not crash the server # time=19.1ms
    
    # Subtest: invalid response headers should not crash the server
        ok 1 - only the first invalid header is logged
        ok 2 - should be equal
        ok 3 - should be equivalent
        1..3
    ok 59 - invalid response headers should not crash the server # time=9.941ms
    
    # Subtest: invalid response headers when sending back an error
        ok 1 - only the first invalid header is logged
        ok 2 - should be equal
        ok 3 - should be equivalent
        1..3
    ok 60 - invalid response headers when sending back an error # time=8.209ms
    
    # Subtest: invalid response headers and custom error handler
        ok 1 - custom error handler receives the error
        ok 2 - only the first invalid header is logged
        ok 3 - should be equal
        ok 4 - should be equivalent
        1..4
    ok 61 - invalid response headers and custom error handler # time=8.277ms
    
    1..61
    # time=2314.793ms
ok 62 - test/internals/reply.test.js # time=2314.793ms

# Subtest: test/internals/request-validate.test.js
    # Subtest: \#compileValidationSchema
        1..7
        # Subtest: Should return a function - Route without schema
            1..3
            ok 1 - type is Function
            ok 2 - expect truthy value
            ok 3 - expect falsey value
        ok 1 - Should return a function - Route without schema # time=184.346ms
        
        # Subtest: Validate function errors property should be null after validation when input is valid
            1..3
            ok 1 - expect truthy value
            ok 2 - expect truthy value
            ok 3 - should be equal
        ok 2 - Validate function errors property should be null after validation when input is valid # time=49.895ms
        
        # Subtest: Validate function errors property should be an array of errors after validation when input is valid
            1..4
            ok 1 - expect falsey value
            ok 2 - expect truthy value
            ok 3 - expect truthy value
            ok 4 - expect truthy value
        ok 3 - Validate function errors property should be an array of errors after validation when input is valid # time=90.37ms
        
        # Subtest: Should reuse the validate fn across multiple invocations - Route without schema
            1..16
            ok 1 - type is Function
            ok 2 - expect truthy value
            ok 3 - expect falsey value
            ok 4 - Are the same validate function
            ok 5 - type is Function
            ok 6 - expect truthy value
            ok 7 - expect falsey value
            ok 8 - Are the same validate function
            ok 9 - type is Function
            ok 10 - expect truthy value
            ok 11 - expect falsey value
            ok 12 - Are the same validate function
            ok 13 - type is Function
            ok 14 - expect truthy value
            ok 15 - expect falsey value
            ok 16 - should be equal
        ok 4 - Should reuse the validate fn across multiple invocations - Route without schema # time=57.986ms
        
        # Subtest: Should return a function - Route with schema
            1..3
            ok 1 - type is Function
            ok 2 - expect truthy value
            ok 3 - expect falsey value
        ok 5 - Should return a function - Route with schema # time=78.577ms
        
        # Subtest: Should use the custom validator compiler for the route
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equivalent
            ok 7 - expect truthy value
            ok 8 - should be equivalent
            ok 9 - expect truthy value
            ok 10 - should be equal
        ok 6 - Should use the custom validator compiler for the route # time=15.95ms
        
        # Subtest: Should instantiate a WeakMap when executed for first time
            1..5
            ok 1 - should be equal
            ok 2 - type is Function
            ok 3 - type is WeakMap
            ok 4 - type is Function
            ok 5 - type is WeakMap
        ok 7 - Should instantiate a WeakMap when executed for first time # time=72.528ms
        
    ok 1 - \#compileValidationSchema # time=577.146ms
    
    # Subtest: \#getValidationFunction
        1..6
        # Subtest: Should return a validation function
            1..1
            ok 1 - should be equal
        ok 1 - Should return a validation function # time=75.542ms
        
        # Subtest: Validate function errors property should be null after validation when input is valid
            1..3
            ok 1 - expect truthy value
            ok 2 - expect truthy value
            ok 3 - should be equal
        ok 2 - Validate function errors property should be null after validation when input is valid # time=46.755ms
        
        # Subtest: Validate function errors property should be an array of errors after validation when input is valid
            1..4
            ok 1 - expect falsey value
            ok 2 - expect truthy value
            ok 3 - expect truthy value
            ok 4 - expect truthy value
        ok 3 - Validate function errors property should be an array of errors after validation when input is valid # time=56.042ms
        
        # Subtest: Should return undefined if no schema compiled
            1..2
            ok 1 - expect falsey value
            ok 2 - expect falsey value
        ok 4 - Should return undefined if no schema compiled # time=23.041ms
        
        # Subtest: Should return the validation function from each HTTP part
            1..15
            ok 1 - expect truthy value
            ok 2 - expect truthy value
            ok 3 - expect falsey value
            ok 4 - expect truthy value
            ok 5 - expect truthy value
            ok 6 - expect falsey value
            ok 7 - expect truthy value
            ok 8 - expect truthy value
            ok 9 - expect truthy value
            ok 10 - expect truthy value
            ok 11 - expect falsey value
            ok 12 - should be equal
            ok 13 - expect truthy value
            ok 14 - expect falsey value
            ok 15 - should be equal
        ok 5 - Should return the validation function from each HTTP part # time=85.295ms
        
        # Subtest: Should not set a WeakMap if there is no schema
            1..1
            ok 1 - should be equal
        ok 6 - Should not set a WeakMap if there is no schema # time=10.879ms
        
    ok 2 - \#getValidationFunction # time=314.063ms
    
    # Subtest: \#validate
        1..7
        # Subtest: Should return true/false if input valid - Route without schema
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 1 - Should return true/false if input valid - Route without schema # time=53.331ms
        
        # Subtest: Should use the custom validator compiler for the route
            1..9
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equivalent
            ok 6 - should be equivalent
            ok 7 - expect truthy value
            ok 8 - expect truthy value
            ok 9 - should be equal
        ok 2 - Should use the custom validator compiler for the route # time=8.958ms
        
        # Subtest: Should return true/false if input valid - With Schema for Route defined
            1..8
            ok 1 - expect truthy value
            ok 2 - expect falsey value
            ok 3 - expect falsey value
            ok 4 - expect truthy value
            ok 5 - expect falsey value
            ok 6 - expect truthy value
            ok 7 - expect truthy value
            ok 8 - expect falsey value
        ok 3 - Should return true/false if input valid - With Schema for Route defined # time=48.125ms
        
        # Subtest: Should throw if missing validation fn for HTTP part and not schema provided
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 4 - Should throw if missing validation fn for HTTP part and not schema provided # time=13.768ms
        
        # Subtest: Should throw if missing validation fn for HTTP part and not valid schema provided
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 5 - Should throw if missing validation fn for HTTP part and not valid schema provided # time=11.109ms
        
        # Subtest: Should throw if invalid schema passed
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 6 - Should throw if invalid schema passed # time=11.068ms
        
        # Subtest: Should set a WeakMap if compiling the very first schema
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - type is WeakMap
        ok 7 - Should set a WeakMap if compiling the very first schema # time=32.046ms
        
    ok 3 - \#validate # time=191.243ms
    
    # Subtest: Nested Context
        1..1
        # Subtest: Level_1
            1..3
            # Subtest: \#compileValidationSchema
                1..4
                # Subtest: Should return a function - Route without schema
                    1..3
                    ok 1 - type is Function
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                ok 1 - Should return a function - Route without schema # time=78.696ms
                
                # Subtest: Should reuse the validate fn across multiple invocations - Route without schema
                    1..16
                    ok 1 - type is Function
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                    ok 4 - Are the same validate function
                    ok 5 - type is Function
                    ok 6 - expect truthy value
                    ok 7 - expect falsey value
                    ok 8 - Are the same validate function
                    ok 9 - type is Function
                    ok 10 - expect truthy value
                    ok 11 - expect falsey value
                    ok 12 - Are the same validate function
                    ok 13 - type is Function
                    ok 14 - expect truthy value
                    ok 15 - expect falsey value
                    ok 16 - should be equal
                ok 2 - Should reuse the validate fn across multiple invocations - Route without schema # time=60.538ms
                
                # Subtest: Should return a function - Route with schema
                    1..3
                    ok 1 - type is Function
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                ok 3 - Should return a function - Route with schema # time=31.173ms
                
                # Subtest: Should use the custom validator compiler for the route
                    1..10
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should be equal
                    ok 4 - should be equal
                    ok 5 - should be equal
                    ok 6 - should be equivalent
                    ok 7 - expect truthy value
                    ok 8 - should be equivalent
                    ok 9 - expect truthy value
                    ok 10 - should be equal
                ok 4 - Should use the custom validator compiler for the route # time=9.482ms
                
            ok 1 - \#compileValidationSchema # time=192.077ms
            
            # Subtest: \#getValidationFunction
                1..6
                # Subtest: Should return a validation function
                    1..1
                    ok 1 - should be equal
                ok 1 - Should return a validation function # time=79.508ms
                
                # Subtest: Should return undefined if no schema compiled
                    1..1
                    ok 1 - expect falsey value
                ok 2 - Should return undefined if no schema compiled # time=9.293ms
                
                # Subtest: Should return the validation function from each HTTP part
                    1..15
                    ok 1 - expect truthy value
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                    ok 4 - expect truthy value
                    ok 5 - expect truthy value
                    ok 6 - expect falsey value
                    ok 7 - expect truthy value
                    ok 8 - expect truthy value
                    ok 9 - expect truthy value
                    ok 10 - expect truthy value
                    ok 11 - expect falsey value
                    ok 12 - should be equal
                    ok 13 - expect truthy value
                    ok 14 - expect falsey value
                    ok 15 - should be equal
                ok 3 - Should return the validation function from each HTTP part # time=60.751ms
                
                # Subtest: Should return a validation function - nested
                    1..6
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should be equal
                    ok 4 - expect falsey value
                    ok 5 - should be equal
                    ok 6 - should be equal
                ok 4 - Should return a validation function - nested # time=16.403ms
                
                # Subtest: Should return undefined if no schema compiled - nested
                    1..3
                    ok 1 - should be equal
                    ok 2 - expect falsey value
                    ok 3 - should be equal
                ok 5 - Should return undefined if no schema compiled - nested # time=26.305ms
                
                # Subtest: Should per-route defined validation compiler
                    1..5
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should not be equal
                    ok 4 - should be equal
                    ok 5 - should be equal
                ok 6 - Should per-route defined validation compiler # time=26.063ms
                
            ok 2 - \#getValidationFunction # time=236.122ms
            
            # Subtest: \#validate
                1..3
                # Subtest: Should return true/false if input valid - Route without schema
                    1..2
                    ok 1 - expect falsey value
                    ok 2 - expect truthy value
                ok 1 - Should return true/false if input valid - Route without schema # time=36.317ms
                
                # Subtest: Should use the custom validator compiler for the route
                    1..10
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should be equal
                    ok 4 - should be equal
                    ok 5 - should be equivalent
                    ok 6 - should be equivalent
                    ok 7 - expect truthy value
                    ok 8 - expect truthy value
                    ok 9 - should be equal
                    ok 10 - should be equal
                ok 2 - Should use the custom validator compiler for the route # time=41.991ms
                
                # Subtest: Should return true/false if input valid - With Schema for Route defined and scoped validator compiler
                    1..13
                    ok 1 - expect truthy value
                    ok 2 - expect falsey value
                    ok 3 - expect falsey value
                    ok 4 - expect truthy value
                    ok 5 - expect falsey value
                    ok 6 - expect truthy value
                    ok 7 - expect truthy value
                    ok 8 - expect falsey value
                    ok 9 - should be equal
                    ok 10 - should be equal
                    ok 11 - should be equal
                    ok 12 - should be equal
                    ok 13 - should be equal
                ok 3 - Should return true/false if input valid - With Schema for Route defined and scoped validator compiler # time=91.388ms
                
            ok 3 - \#validate # time=178.823ms
            
        ok 1 - Level_1 # time=630.755ms
        
    ok 4 - Nested Context # time=636.474ms
    
    1..4
    # time=1725.977ms
ok 63 - test/internals/request-validate.test.js # time=1725.977ms

# Subtest: test/internals/request.test.js
    # Subtest: Regular request
        ok 1 - type is Request
        ok 2 - type is Function
        ok 3 - type is Function
        ok 4 - type is Function
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equal
        ok 21 - should be equal
        ok 22 - should be equal
        ok 23 - should be equal
        1..23
    ok 1 - Regular request # time=16.263ms
    
    # Subtest: Regular request - hostname from authority
        1..2
        ok 1 - type is Request
        ok 2 - should be equal
    ok 2 - Regular request - hostname from authority # time=1.499ms
    
    # Subtest: Regular request - host header has precedence over authority
        1..2
        ok 1 - type is Request
        ok 2 - should be equal
    ok 3 - Regular request - host header has precedence over authority # time=0.935ms
    
    # Subtest: Request with trust proxy
        1..22
        ok 1 - type is _Request
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - type is Function
        ok 17 - type is Function
        ok 18 - type is Function
        ok 19 - should be equal
        ok 20 - should be equal
        ok 21 - should be equal
        ok 22 - should be equal
    ok 4 - Request with trust proxy # time=12.064ms
    
    # Subtest: Request with trust proxy, encrypted
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 5 - Request with trust proxy, encrypted # time=1.016ms
    
    # Subtest: Request with trust proxy - no x-forwarded-host header
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 6 - Request with trust proxy - no x-forwarded-host header # time=0.935ms
    
    # Subtest: Request with trust proxy - no x-forwarded-host header and fallback to authority
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 7 - Request with trust proxy - no x-forwarded-host header and fallback to authority # time=1.053ms
    
    # Subtest: Request with trust proxy - x-forwarded-host header has precedence over host
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 8 - Request with trust proxy - x-forwarded-host header has precedence over host # time=1.194ms
    
    # Subtest: Request with trust proxy - handles multiple entries in x-forwarded-host/proto
        1..3
        ok 1 - type is _Request
        ok 2 - should be equal
        ok 3 - should be equal
    ok 9 - Request with trust proxy - handles multiple entries in x-forwarded-host/proto # time=1.265ms
    
    # Subtest: Request with trust proxy - plain
        1..1
        ok 1 - should be equivalent
    ok 10 - Request with trust proxy - plain # time=1.23ms
    
    # Subtest: Request with undefined socket
        1..18
        ok 1 - type is Request
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equivalent
        ok 16 - type is Function
        ok 17 - type is Function
        ok 18 - type is Function
    ok 11 - Request with undefined socket # time=4.17ms
    
    # Subtest: Request with trust proxy and undefined socket
        1..1
        ok 1 - should be equivalent
    ok 12 - Request with trust proxy and undefined socket # time=0.877ms
    
    1..12
    # time=118.602ms
ok 64 - test/internals/request.test.js # time=118.602ms

# Subtest: test/internals/server.test.js
    # Subtest: start listening
        ok 1 - server started
        1..1
    ok 1 - start listening # time=65.456ms
    
    # Subtest: DNS errors does not stop the main server on localhost - promise interface
        ok 1 - server started
        1..1
    ok 2 - DNS errors does not stop the main server on localhost - promise interface # time=21.135ms
    
    # Subtest: DNS errors does not stop the main server on localhost - callback interface
        1..2
        ok 1 - should not error
        ok 2 - server started
    ok 3 - DNS errors does not stop the main server on localhost - callback interface # time=23.109ms
    
    # Subtest: DNS returns empty binding
        1..2
        ok 1 - should not error
        ok 2 - server started
    ok 4 - DNS returns empty binding # time=29.298ms
    
    # Subtest: DNS returns more than two binding
        1..2
        ok 1 - should not error
        ok 2 - server started
    ok 5 - DNS returns more than two binding # time=38.368ms
    
    1..5
    # time=210.651ms
ok 65 - test/internals/server.test.js # time=210.651ms

# Subtest: test/internals/validation.test.js
    # Subtest: Symbols
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 1 - Symbols # time=9.666ms
    
    # Subtest: compileSchemasForValidation schema - missing schema
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 2 - compileSchemasForValidation schema - missing schema # time=9.778ms
    
    # Subtest: compileSchemasForValidation schema - missing output schema
        1..1
        ok 1 - should be equal
    ok 3 - compileSchemasForValidation schema - missing output schema # time=1.661ms
    
    # Subtest: compileSchemasForSerialization schema - missing schema
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 4 - compileSchemasForSerialization schema - missing schema # time=1.987ms
    
    # Subtest: compileSchemasForSerialization schema - missing output schema
        1..1
        ok 1 - should be equal
    ok 5 - compileSchemasForSerialization schema - missing output schema # time=1.086ms
    
    # Subtest: build schema - output schema
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 6 - build schema - output schema # time=84.197ms
    
    # Subtest: build schema - payload schema
        1..1
        ok 1 - should be equal
    ok 7 - build schema - payload schema # time=2.751ms
    
    # Subtest: build schema - avoid repeated normalize schema
        1..3
        ok 1 - should not be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 8 - build schema - avoid repeated normalize schema # time=2.756ms
    
    # Subtest: build schema - query schema
        1..2
        ok 1 - type is string
        ok 2 - should be equal
    ok 9 - build schema - query schema # time=4.088ms
    
    # Subtest: build schema - query schema abbreviated
        1..2
        ok 1 - type is string
        ok 2 - should be equal
    ok 10 - build schema - query schema abbreviated # time=3.113ms
    
    # Subtest: build schema - querystring schema
        1..2
        ok 1 - type is string
        ok 2 - should be equal
    ok 11 - build schema - querystring schema # time=3.108ms
    
    # Subtest: build schema - querystring schema abbreviated
        1..2
        ok 1 - type is string
        ok 2 - should be equal
    ok 12 - build schema - querystring schema abbreviated # time=12.884ms
    
    # Subtest: build schema - must throw if querystring and query schema exist
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 13 - build schema - must throw if querystring and query schema exist # time=1.402ms
    
    # Subtest: build schema - params schema
        1..1
        ok 1 - should be equal
    ok 14 - build schema - params schema # time=2.276ms
    
    # Subtest: build schema - headers schema
        1..1
        ok 1 - should be equal
    ok 15 - build schema - headers schema # time=2.363ms
    
    # Subtest: build schema - headers are lowercase
        1..1
        ok 1 - lowercase content-type exists
    ok 16 - build schema - headers are lowercase # time=0.912ms
    
    # Subtest: build schema - headers are not lowercased in case of custom object
        1..1
        ok 1 - type is Headers
    ok 17 - build schema - headers are not lowercased in case of custom object # time=0.734ms
    
    # Subtest: build schema - headers are not lowercased in case of custom validator provided
        1..1
        ok 1 - type is Headers
    ok 18 - build schema - headers are not lowercased in case of custom validator provided # time=0.734ms
    
    # Subtest: build schema - uppercased headers are not included
        1..1
        ok 1 - uppercase does not exist
    ok 19 - build schema - uppercased headers are not included # time=0.754ms
    
    1..19
    # time=241.714ms
ok 66 - test/internals/validation.test.js # time=241.714ms

# Subtest: test/keepAliveTimeout.test.js
    # Subtest: keepAliveTimeout
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not be equal
        ok 6 - should be equal
    ok 1 - keepAliveTimeout # time=76.693ms
    
    1..1
    # time=83.653ms
ok 67 - test/keepAliveTimeout.test.js # time=83.653ms

# Subtest: test/listen.deprecated.test.js
    # Subtest: listen accepts a port and a callback
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 1 - listen accepts a port and a callback # time=36.15ms
    
    # Subtest: listen accepts a port and a callback with (err, address)
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 2 - listen accepts a port and a callback with (err, address) # time=6.897ms
    
    # Subtest: listen accepts a port, address, and callback
        1..1
        ok 1 - should not error
    ok 3 - listen accepts a port, address, and callback # time=8.646ms
    
    # Subtest: listen accepts options, backlog and a callback
        1..1
        ok 1 - should not error
    ok 4 - listen accepts options, backlog and a callback # time=5.338ms
    
    # Subtest: listen accepts options (no port), backlog and a callback
        1..1
        ok 1 - should not error
    ok 5 - listen accepts options (no port), backlog and a callback # time=5.921ms
    
    # Subtest: listen accepts options (no host), backlog and a callback
        1..1
        ok 1 - should not error
    ok 6 - listen accepts options (no host), backlog and a callback # time=5.395ms
    
    # Subtest: listen accepts options (no port, no host), backlog and a callback
        1..1
        ok 1 - should not error
    ok 7 - listen accepts options (no port, no host), backlog and a callback # time=17.873ms
    
    # Subtest: listen accepts a port, address and a callback with (err, address)
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 8 - listen accepts a port, address and a callback with (err, address) # time=17.002ms
    
    # Subtest: listen accepts a port, address, backlog and callback
        1..1
        ok 1 - should not error
    ok 9 - listen accepts a port, address, backlog and callback # time=16.548ms
    
    # Subtest: listen accepts a port, address, backlog and callback with (err, address)
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 10 - listen accepts a port, address, backlog and callback with (err, address) # time=6.412ms
    
    # Subtest: listen without callback (port zero)
        1..1
        ok 1 - should be equal
    ok 11 - listen without callback (port zero) # time=18.232ms
    
    # Subtest: listen without callback (port not given)
        1..1
        ok 1 - should be equal
    ok 12 - listen without callback (port not given) # time=6.873ms
    
    # Subtest: listen null without callback with (address)
        1..1
        ok 1 - should be equal
    ok 13 - listen null without callback with (address) # time=6.681ms
    
    # Subtest: listen without port without callback with (address)
        1..1
        ok 1 - should be equal
    ok 14 - listen without port without callback with (address) # time=5.117ms
    
    # Subtest: listen with undefined without callback with (address)
        1..1
        ok 1 - should be equal
    ok 15 - listen with undefined without callback with (address) # time=6.602ms
    
    # Subtest: listen when firstArg is string(pipe) and without backlog
        1..1
        ok 1 - should be equal
    ok 16 - listen when firstArg is string(pipe) and without backlog # time=6.281ms
    
    # Subtest: listen when firstArg is string(pipe) and with backlog
        1..1
        ok 1 - should be equal
    ok 17 - listen when firstArg is string(pipe) and with backlog # time=8.105ms
    
    # Subtest: listen when firstArg is { path: string(pipe) } and with backlog and callback
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 18 - listen when firstArg is { path: string(pipe) } and with backlog and callback # time=4.409ms
    
    # Subtest: listen accepts a port as string, and callback
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 19 - listen accepts a port as string, and callback # time=4.662ms
    
    # Subtest: listen accepts a port as string, address and callback
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
    ok 20 - listen accepts a port as string, address and callback # time=6.582ms
    
    # Subtest: listen with invalid port string without callback with (address)
        1..1
        ok 1 - should be equal
    ok 21 - listen with invalid port string without callback with (address) # time=4.954ms
    
    1..21
    # time=322.525ms
ok 68 - test/listen.deprecated.test.js # time=322.525ms

# Subtest: test/listen.test.js
    # Subtest: listen works without arguments
        ok 1 - should be equal
        ok 2 - expect truthy value
        1..2
    ok 1 - listen works without arguments # time=37.322ms
    
    # Subtest: Async/await listen with arguments
        1..1
        ok 1 - should be equal
    ok 2 - Async/await listen with arguments # time=5.486ms
    
    # Subtest: Promise listen with arguments
        1..1
        ok 1 - should be equal
    ok 3 - Promise listen with arguments # time=12.612ms
    
    # Subtest: listen accepts a callback
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 4 - listen accepts a callback # time=34.393ms
    
    # Subtest: listen accepts options and a callback
        1..1
        ok 1 - should not error
    ok 5 - listen accepts options and a callback # time=6.133ms
    
    # Subtest: listen after Promise.resolve()
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 6 - listen after Promise.resolve() # time=28.067ms
    
    # Subtest: register after listen using Promise.resolve()
        1..1
        ok 1 - resolved
    ok 7 - register after listen using Promise.resolve() # time=13.696ms
    
    # Subtest: double listen errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - expect truthy value
    ok 8 - double listen errors # time=5.444ms
    
    # Subtest: double listen errors callback with (err, address)
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - expect truthy value
    ok 9 - double listen errors callback with (err, address) # time=22.6ms
    
    # Subtest: listen twice on the same port
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - expect truthy value
    ok 10 - listen twice on the same port # time=10.733ms
    
    # Subtest: listen twice on the same port callback with (err, address)
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - expect truthy value
    ok 11 - listen twice on the same port callback with (err, address) # time=41.013ms
    
    # Subtest: listen on socket
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent strictly
        ok 3 - should be equal
    ok 12 - listen on socket # time=23.351ms
    
    # Subtest: listen without callback with (address)
        1..1
        ok 1 - should be equal
    ok 13 - listen without callback with (address) # time=7.529ms
    
    # Subtest: double listen without callback rejects
        1..1
        ok 1 - expect truthy value
    ok 14 - double listen without callback rejects # time=14.895ms
    
    # Subtest: double listen without callback with (address)
        1..2
        ok 1 - should be equal
        ok 2 - expect truthy value
    ok 15 - double listen without callback with (address) # time=16.45ms
    
    # Subtest: listen twice on the same port without callback rejects
        1..1
        ok 1 - expect truthy value
    ok 16 - listen twice on the same port without callback rejects # time=12.406ms
    
    # Subtest: listen twice on the same port without callback rejects with (address)
        1..2
        ok 1 - should be equal
        ok 2 - expect truthy value
    ok 17 - listen twice on the same port without callback rejects with (address) # time=14.623ms
    
    # Subtest: listen on invalid port without callback rejects
        ok 1 - expect truthy value
        1..1
    ok 18 - listen on invalid port without callback rejects # time=3.761ms
    
    # Subtest: listen logs the port as info
        1..1
        ok 1 - expect truthy value
    ok 19 - listen logs the port as info # time=5.83ms
    
    # Subtest: listen on localhost binds IPv4 and IPv6 - promise interface
        1..2
        ok 1 - should be equal
        ok 2 - should be equivalent
    ok 20 - listen on localhost binds IPv4 and IPv6 - promise interface # time=29.691ms
    
    # Subtest: listen on localhost binds to all interfaces (both IPv4 and IPv6 if present) - callback interface
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 21 - listen on localhost binds to all interfaces (both IPv4 and IPv6 if present) - callback interface # time=11.178ms
    
    # Subtest: addresses getter
        1..4
        ok 1 - before ready
        ok 2 - after ready
        ok 3 - after listen
        ok 4 - after close
    ok 22 - addresses getter # time=23.591ms
    
    1..22
    # time=490.192ms
ok 69 - test/listen.test.js # time=490.192ms

# Subtest: test/lock.test.js
    # Subtest: can be created - lock
        1..1
        ok 1 - (unnamed test)
    ok 1 - can be created - lock # time=10.2ms
    
    ok 2 - should not error
    # Subtest: request - lock
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 3 - request - lock # time=62.734ms
    
    1..3
    # time=175.742ms
ok 70 - test/lock.test.js # time=175.742ms

# Subtest: test/logger.test.js
    # Subtest: defaults to info level
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - reqId is defined
        ok 4 - req is defined
        ok 5 - message is set
        ok 6 - method is get
        ok 7 - expect truthy value
        ok 8 - should be equal
        ok 9 - reqId is defined
        ok 10 - res is defined
        ok 11 - message is set
        ok 12 - statusCode is 200
        ok 13 - responseTime is defined
        1..13
    ok 1 - defaults to info level # time=133.267ms
    
    # Subtest: test log stream
        1..12
        ok 1 - should not error
        ok 2 - listen at log message is ok
        ok 3 - reqId is defined
        ok 4 - req is defined
        ok 5 - message is set
        ok 6 - method is get
        ok 7 - expect truthy value
        ok 8 - should be equal
        ok 9 - reqId is defined
        ok 10 - res is defined
        ok 11 - message is set
        ok 12 - statusCode is 200
    ok 2 - test log stream # time=46.745ms
    
    # Subtest: test error log stream
        1..11
        ok 1 - should not error
        ok 2 - listen at log message is ok
        ok 3 - reqId is defined
        ok 4 - req is defined
        ok 5 - message is set
        ok 6 - method is get
        ok 7 - expect truthy value
        ok 8 - reqId is defined
        ok 9 - res is defined
        ok 10 - message is set
        ok 11 - statusCode is 500
    ok 3 - test error log stream # time=210.13ms
    
    # Subtest: can use external logger instance
        1..6
        ok 1 - "Server listening at http://127.0.0.1:39693" dont match "/^Server listening at /"
        ok 2 - should not error
        ok 3 - "incoming request" dont match "/^incoming request$/"
        ok 4 - expect truthy value
        ok 5 - "log success" dont match "/^log success$/"
        ok 6 - "request completed" dont match "/^request completed$/"
    ok 4 - can use external logger instance # time=48.103ms
    
    # Subtest: can use external logger instance with custom serializer
        1..6
        ok 1 - should be equivalent
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - expect truthy value
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 5 - can use external logger instance with custom serializer # time=33.289ms
    
    # Subtest: expose the logger
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equivalent
    ok 6 - expose the logger # time=3.042ms
    
    # Subtest: The request id header key can be customized
        1..9
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - message is set
        ok 6 - should be equal
        ok 7 - message is set
        ok 8 - should be equal
        ok 9 - message is set
    ok 7 - The request id header key can be customized # time=110.58ms
    
    # Subtest: The request id header key can be ignored
        1..9
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - message is set
        ok 6 - should be equal
        ok 7 - message is set
        ok 8 - should be equal
        ok 9 - message is set
    ok 8 - The request id header key can be ignored # time=22.195ms
    
    # Subtest: The request id header key can be customized along with a custom id generator
        1..12
        ok 1 - should match pattern provided
        ok 2 - should be equal
        ok 3 - should match pattern provided
        ok 4 - should match pattern provided
        ok 5 - should match pattern provided
        ok 6 - should be equal
        ok 7 - should match pattern provided
        ok 8 - should match pattern provided
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
    ok 9 - The request id header key can be customized along with a custom id generator # time=18.544ms
    
    # Subtest: The request id header key can be ignored along with a custom id generator
        1..12
        ok 1 - should match pattern provided
        ok 2 - should be equal
        ok 3 - should match pattern provided
        ok 4 - should match pattern provided
        ok 5 - should match pattern provided
        ok 6 - should be equal
        ok 7 - should match pattern provided
        ok 8 - should match pattern provided
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
    ok 10 - The request id header key can be ignored along with a custom id generator # time=21.842ms
    
    # Subtest: The request id log label can be changed
        1..6
        ok 1 - should match pattern provided
        ok 2 - should be equal
        ok 3 - should match pattern provided
        ok 4 - should match pattern provided
        ok 5 - should not error
        ok 6 - should be equal
    ok 11 - The request id log label can be changed # time=12.698ms
    
    # Subtest: The logger should accept custom serializer
        1..9
        ok 1 - should not error
        ok 2 - listen at log message is ok
        ok 3 - req is defined
        ok 4 - message is set
        ok 5 - custom req serializer is use
        ok 6 - expect truthy value
        ok 7 - res is defined
        ok 8 - message is set
        ok 9 - default res serializer is use
    ok 12 - The logger should accept custom serializer # time=19.654ms
    
    # Subtest: reply.send logs an error if called twice in a row
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equivalent
    ok 13 - reply.send logs an error if called twice in a row # time=30.647ms
    
    # Subtest: logger can be silented
        1..17
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
        ok 8 - should be equivalent
        ok 9 - should be equivalent
        ok 10 - should be equivalent
        ok 11 - should be equivalent
        ok 12 - should be equivalent
        ok 13 - should be equivalent
        ok 14 - should be equivalent
        ok 15 - should be equivalent
        ok 16 - should be equivalent
        ok 17 - should be equivalent
    ok 14 - logger can be silented # time=8.088ms
    
    # Subtest: Should set a custom logLevel for a plugin
        1..7
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equivalent
    ok 15 - Should set a custom logLevel for a plugin # time=41.262ms
    
    # Subtest: Should set a custom logSerializers for a plugin
        1..3
        ok 1 - should be equivalent
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 16 - Should set a custom logSerializers for a plugin # time=10.475ms
    
    # Subtest: Should set a custom logLevel for every plugin
        1..18
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equivalent
        ok 15 - should not error
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equivalent
    ok 17 - Should set a custom logLevel for every plugin # time=48.823ms
    
    # Subtest: Should set a custom logSerializers for every plugin
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 18 - Should set a custom logSerializers for every plugin # time=22.547ms
    
    # Subtest: Should override serializers from route
        1..3
        ok 1 - should be equivalent
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 19 - Should override serializers from route # time=11.821ms
    
    # Subtest: Should override serializers from plugin
        1..3
        ok 1 - should be equivalent
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 20 - Should override serializers from plugin # time=57.844ms
    
    # Subtest: Should use serializers from plugin and route
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 21 - Should use serializers from plugin and route # time=10.896ms
    
    # Subtest: Should use serializers from instance fastify and route
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 22 - Should use serializers from instance fastify and route # time=44.422ms
    
    # Subtest: Should use serializers inherit from contexts
        1..5
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
    ok 23 - Should use serializers inherit from contexts # time=22.87ms
    
    # Subtest: Should increase the log level for a specific plugin
        1..4
        ok 1 - should be equivalent
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 24 - Should increase the log level for a specific plugin # time=10.572ms
    
    # Subtest: Should set the log level for the customized 404 handler
        1..4
        ok 1 - should be equivalent
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 25 - Should set the log level for the customized 404 handler # time=7.927ms
    
    # Subtest: Should set the log level for the customized 500 handler
        1..4
        ok 1 - should be equivalent
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 26 - Should set the log level for the customized 500 handler # time=9.494ms
    
    # Subtest: Should set a custom log level for a specific route
        1..7
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equivalent
    ok 27 - Should set a custom log level for a specific route # time=27.268ms
    
    # Subtest: The default 404 handler logs the incoming request
        1..5
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
    ok 28 - The default 404 handler logs the incoming request # time=16.774ms
    
    # Subtest: should serialize request and response
        1..3
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - should be equivalent
    ok 29 - should serialize request and response # time=7.289ms
    
    # Subtest: Wrap IPv6 address in listening log message
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 30 - Wrap IPv6 address in listening log message # time=4.562ms
    
    # Subtest: Do not wrap IPv4 address
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 31 - Do not wrap IPv4 address # time=4.06ms
    
    # Subtest: file option
        1..13
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - listen at log message is ok
        ok 4 - reqId is defined
        ok 5 - req is defined
        ok 6 - message is set
        ok 7 - method is get
        ok 8 - should be equal
        ok 9 - reqId is defined
        ok 10 - res is defined
        ok 11 - message is set
        ok 12 - statusCode is 200
        ok 13 - responseTime is defined
    ok 32 - file option # time=19.369ms
    
    # Subtest: should log the error if no error handler is defined
        1..8
        ok 1 - should not error
        ok 2 - listen at log message is ok
        ok 3 - message is set
        ok 4 - expect truthy value
        ok 5 - level is correct
        ok 6 - message is set
        ok 7 - message is set
        ok 8 - status code is set
    ok 33 - should log the error if no error handler is defined # time=13.291ms
    
    # Subtest: should log as info if error status code >= 400 and < 500 if no error handler is defined
        1..8
        ok 1 - should not error
        ok 2 - listen at log message is ok
        ok 3 - message is set
        ok 4 - expect truthy value
        ok 5 - level is correct
        ok 6 - message is set
        ok 7 - message is set
        ok 8 - status code is set
    ok 34 - should log as info if error status code >= 400 and < 500 if no error handler is defined # time=14.413ms
    
    # Subtest: should log as error if error status code >= 500 if no error handler is defined
        1..8
        ok 1 - should not error
        ok 2 - listen at log message is ok
        ok 3 - message is set
        ok 4 - expect truthy value
        ok 5 - level is correct
        ok 6 - message is set
        ok 7 - message is set
        ok 8 - status code is set
    ok 35 - should log as error if error status code >= 500 if no error handler is defined # time=12.437ms
    
    # Subtest: should not log the error if error handler is defined and it does not error
        1..8
        ok 1 - should not error
        ok 2 - listen at log message is ok
        ok 3 - message is set
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - level is correct
        ok 7 - message is set
        ok 8 - status code is set
    ok 36 - should not log the error if error handler is defined and it does not error # time=10.11ms
    
    # Subtest: should not rely on raw request to log errors
        1..7
        ok 1 - should not error
        ok 2 - listen at log message is ok
        ok 3 - message is set
        ok 4 - expect truthy value
        ok 5 - level is correct
        ok 6 - message is set
        ok 7 - status code is set
    ok 37 - should not rely on raw request to log errors # time=10.93ms
    
    # Subtest: should redact the authorization header if so specified
        1..7
        ok 1 - listen at log message is ok
        ok 2 - should not error
        ok 3 - authorization is redacted
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 38 - should redact the authorization header if so specified # time=38.873ms
    
    # Subtest: should not log incoming request and outgoing response when disabled
        1..3
        ok 1 - should be equivalent
        ok 2 - expect truthy value
        ok 3 - should be equivalent
    ok 39 - should not log incoming request and outgoing response when disabled # time=7.546ms
    
    # Subtest: should not log incoming request and outgoing response for 404 onBadUrl when disabled
        1..1
        ok 1 - should be equivalent
    ok 40 - should not log incoming request and outgoing response for 404 onBadUrl when disabled # time=4.465ms
    
    # Subtest: should pass when using unWritable props in the logger option
        1..1
        ok 1 - (unnamed test)
    ok 41 - should pass when using unWritable props in the logger option # time=2.01ms
    
    # Subtest: should be able to use a custom logger
        1..1
        ok 1 - (unnamed test)
    ok 42 - should be able to use a custom logger # time=1.693ms
    
    # Subtest: should create a default logger if provided one is invalid
        1..1
        ok 1 - (unnamed test)
    ok 43 - should create a default logger if provided one is invalid # time=1.894ms
    
    # Subtest: should not throw error when serializing custom req
        1..1
        ok 1 - should be equivalent
    ok 44 - should not throw error when serializing custom req # time=2.391ms
    
    1..44
    # time=1549.792ms
ok 71 - test/logger.test.js # time=1549.792ms

# Subtest: test/maxRequestsPerSocket.test.js
    # Subtest: maxRequestsPerSocket on node version >= 16.10.0
        1..8
        ok 1 - should not error
        ok 2 - should match pattern provided
        ok 3 - should match pattern provided
        ok 4 - should match pattern provided
        ok 5 - should match pattern provided
        ok 6 - should match pattern provided
        ok 7 - should match pattern provided
        ok 8 - should match pattern provided
    ok 1 - maxRequestsPerSocket on node version >= 16.10.0 # time=119.446ms
    
    # Subtest: maxRequestsPerSocket zero should behave same as null
        1..10
        ok 1 - should not error
        ok 2 - should match pattern provided
        ok 3 - should match pattern provided
        ok 4 - should match pattern provided
        ok 5 - should match pattern provided
        ok 6 - should match pattern provided
        ok 7 - should match pattern provided
        ok 8 - should match pattern provided
        ok 9 - should match pattern provided
        ok 10 - should match pattern provided
    ok 2 - maxRequestsPerSocket zero should behave same as null # time=29.67ms
    
    # Subtest: maxRequestsPerSocket should be set
        1..1
        ok 1 - should be equivalent
    ok 3 - maxRequestsPerSocket should be set # time=2.767ms
    
    # Subtest: maxRequestsPerSocket should 0
        1..1
        ok 1 - should be equivalent
    ok 4 - maxRequestsPerSocket should 0 # time=2.135ms
    
    # Subtest: requestTimeout passed to server
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 5 - requestTimeout passed to server # time=18.105ms
    
    1..5
    # time=185.871ms
ok 72 - test/maxRequestsPerSocket.test.js # time=185.871ms

# Subtest: test/middleware.test.js
    # Subtest: Should be able to override the default use API
        1..1
        ok 1 - should be equal
    ok 1 - Should be able to override the default use API # time=29.076ms
    
    # Subtest: Cannot decorate use twice
        1..1
        ok 1 - expect truthy value
    ok 2 - Cannot decorate use twice # time=3.755ms
    
    # Subtest: Encapsulation works
        1..1
        ok 1 - should be equal
    ok 3 - Encapsulation works # time=37.818ms
    
    1..3
    # time=87.208ms
ok 73 - test/middleware.test.js # time=87.208ms

# Subtest: test/mkcol.test.js
    # Subtest: can be created - mkcol
        1..1
        ok 1 - (unnamed test)
    ok 1 - can be created - mkcol # time=11.364ms
    
    ok 2 - should not error
    # Subtest: request - mkcol
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 3 - request - mkcol # time=31.891ms
    
    1..3
    # time=153.409ms
ok 74 - test/mkcol.test.js # time=153.409ms

# Subtest: test/move.test.js
    # Subtest: shorthand - move
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - move # time=11.308ms
    
    ok 2 - should not error
    # Subtest: request - move
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 3 - request - move # time=25.492ms
    
    1..3
    # time=113.074ms
ok 75 - test/move.test.js # time=113.074ms

# Subtest: test/noop-set.test.js
    # Subtest: does a lot of nothing
        ok 1 - type is object
        ok 2 - should be equal
        1..2
    ok 1 - does a lot of nothing # time=10.591ms
    
    1..1
    # time=16.854ms
ok 76 - test/noop-set.test.js # time=16.854ms

# Subtest: test/nullable-validation.test.js
    # Subtest: nullable string
        1..3
        ok 1 - should be equivalent
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 1 - nullable string # time=189.233ms
    
    # Subtest: object or null body
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 2 - object or null body # time=69.593ms
    
    # Subtest: nullable body
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 3 - nullable body # time=80.646ms
    
    # Subtest: Nullable body with 204
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 4 - Nullable body with 204 # time=47.722ms
    
    1..4
    # time=397.697ms
ok 77 - test/nullable-validation.test.js # time=397.697ms

# Subtest: test/options.error-handler.test.js
    # Subtest: OPTIONS can be created
        1..1
        ok 1 - (unnamed test)
    ok 1 - OPTIONS can be created # time=11.715ms
    
    # Subtest: OPTIONS without schema can be created
        1..1
        ok 1 - (unnamed test)
    ok 2 - OPTIONS without schema can be created # time=2.365ms
    
    # Subtest: OPTIONS with body and querystring
        1..1
        ok 1 - (unnamed test)
    ok 3 - OPTIONS with body and querystring # time=2.117ms
    
    # Subtest: OPTIONS with bodyLimit option
        1..1
        ok 1 - (unnamed test)
    ok 4 - OPTIONS with bodyLimit option # time=2.444ms
    
    # Subtest: OPTIONS can be created
        1..1
        ok 1 - (unnamed test)
    ok 5 - OPTIONS can be created # time=9.594ms
    
    # Subtest: OPTIONS - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 6 - OPTIONS - correctly replies # time=74.365ms
    
    # Subtest: OPTIONS - correctly replies with very large body
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 7 - OPTIONS - correctly replies with very large body # time=11.5ms
    
    # Subtest: OPTIONS - correctly replies if the content type has the charset
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 8 - OPTIONS - correctly replies if the content type has the charset # time=7.561ms
    
    # Subtest: OPTIONS without schema - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 9 - OPTIONS without schema - correctly replies # time=6.561ms
    
    # Subtest: OPTIONS with body and querystring - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 10 - OPTIONS with body and querystring - correctly replies # time=6.983ms
    
    # Subtest: OPTIONS with no body - correctly replies
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 11 - OPTIONS with no body - correctly replies # time=55.265ms
    
    # Subtest: OPTIONS returns 415 - incorrect media type if body is not json
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 12 - OPTIONS returns 415 - incorrect media type if body is not json # time=5.656ms
    
    # Subtest: OPTIONS returns 415 - should return 415 if Content-Type is not json or plain text
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 13 - OPTIONS returns 415 - should return 415 if Content-Type is not json or plain text # time=8.123ms
    
    # Subtest: OPTIONS returns 400 - Bad Request
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 14 - OPTIONS returns 400 - Bad Request # time=13.288ms
    
    # Subtest: OPTIONS returns 413 - Payload Too Large
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 15 - OPTIONS returns 413 - Payload Too Large # time=9.231ms
    
    # Subtest: OPTIONS should fail with empty body and application/json content-type
        1..0
    ok 16 - OPTIONS should fail with empty body and application/json content-type # time=1.079ms
    
    # Subtest: OPTIONS - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - OPTIONS - correctly replies # time=8.124ms
    
    # Subtest: OPTIONS - 400 on bad parameters
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 18 - OPTIONS - 400 on bad parameters # time=19.713ms
    
    # Subtest: OPTIONS - input-validation coerce
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - OPTIONS - input-validation coerce # time=10.712ms
    
    # Subtest: OPTIONS - input-validation custom schema compiler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 20 - OPTIONS - input-validation custom schema compiler # time=5.044ms
    
    # Subtest: OPTIONS - input-validation joi schema compiler ok
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 21 - OPTIONS - input-validation joi schema compiler ok # time=7.489ms
    
    # Subtest: OPTIONS - input-validation joi schema compiler ko
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 22 - OPTIONS - input-validation joi schema compiler ko # time=22.992ms
    
    # Subtest: OPTIONS - input-validation yup schema compiler ok
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 23 - OPTIONS - input-validation yup schema compiler ok # time=20.013ms
    
    # Subtest: OPTIONS - input-validation yup schema compiler ko
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 24 - OPTIONS - input-validation yup schema compiler ko # time=6.177ms
    
    # Subtest: OPTIONS - input-validation instance custom schema compiler encapsulated
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 25 - OPTIONS - input-validation instance custom schema compiler encapsulated # time=7.165ms
    
    # Subtest: OPTIONS - input-validation custom schema compiler encapsulated
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 26 - OPTIONS - input-validation custom schema compiler encapsulated # time=4.548ms
    
    ok 27 - type is object
    ok 28 - type is Request
    ok 29 - type is object
    ok 30 - type is Request
    ok 31 - type is object
    ok 32 - type is Request
    ok 33 - type is object
    ok 34 - type is Request
    ok 35 - type is object
    ok 36 - type is Request
    1..36
    # time=2225.702ms
ok 78 - test/options.error-handler.test.js # time=2225.702ms

# Subtest: test/options.test.js
    # Subtest: OPTIONS can be created
        1..1
        ok 1 - (unnamed test)
    ok 1 - OPTIONS can be created # time=10.269ms
    
    # Subtest: OPTIONS without schema can be created
        1..1
        ok 1 - (unnamed test)
    ok 2 - OPTIONS without schema can be created # time=2.102ms
    
    # Subtest: OPTIONS with body and querystring
        1..1
        ok 1 - (unnamed test)
    ok 3 - OPTIONS with body and querystring # time=1.807ms
    
    # Subtest: OPTIONS with bodyLimit option
        1..1
        ok 1 - (unnamed test)
    ok 4 - OPTIONS with bodyLimit option # time=1.867ms
    
    # Subtest: OPTIONS can be created
        1..1
        ok 1 - (unnamed test)
    ok 5 - OPTIONS can be created # time=3.724ms
    
    # Subtest: OPTIONS - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 6 - OPTIONS - correctly replies # time=115.822ms
    
    # Subtest: OPTIONS - correctly replies with very large body
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 7 - OPTIONS - correctly replies with very large body # time=11.77ms
    
    # Subtest: OPTIONS - correctly replies if the content type has the charset
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 8 - OPTIONS - correctly replies if the content type has the charset # time=9.705ms
    
    # Subtest: OPTIONS without schema - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 9 - OPTIONS without schema - correctly replies # time=8.817ms
    
    # Subtest: OPTIONS with body and querystring - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 10 - OPTIONS with body and querystring - correctly replies # time=23.979ms
    
    # Subtest: OPTIONS with no body - correctly replies
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 11 - OPTIONS with no body - correctly replies # time=39.791ms
    
    # Subtest: OPTIONS returns 415 - incorrect media type if body is not json
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 12 - OPTIONS returns 415 - incorrect media type if body is not json # time=4.853ms
    
    # Subtest: OPTIONS returns 415 - should return 415 if Content-Type is not json or plain text
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 13 - OPTIONS returns 415 - should return 415 if Content-Type is not json or plain text # time=6.053ms
    
    # Subtest: OPTIONS returns 400 - Bad Request
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 14 - OPTIONS returns 400 - Bad Request # time=13.09ms
    
    # Subtest: OPTIONS returns 413 - Payload Too Large
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 15 - OPTIONS returns 413 - Payload Too Large # time=8.453ms
    
    # Subtest: OPTIONS should fail with empty body and application/json content-type
        1..0
    ok 16 - OPTIONS should fail with empty body and application/json content-type # time=0.7ms
    
    # Subtest: OPTIONS - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - OPTIONS - correctly replies # time=5.464ms
    
    # Subtest: OPTIONS - 400 on bad parameters
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 18 - OPTIONS - 400 on bad parameters # time=21.426ms
    
    # Subtest: OPTIONS - input-validation coerce
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - OPTIONS - input-validation coerce # time=14.599ms
    
    # Subtest: OPTIONS - input-validation custom schema compiler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 20 - OPTIONS - input-validation custom schema compiler # time=5.043ms
    
    # Subtest: OPTIONS - input-validation joi schema compiler ok
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 21 - OPTIONS - input-validation joi schema compiler ok # time=7.046ms
    
    # Subtest: OPTIONS - input-validation joi schema compiler ko
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 22 - OPTIONS - input-validation joi schema compiler ko # time=7.221ms
    
    # Subtest: OPTIONS - input-validation yup schema compiler ok
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 23 - OPTIONS - input-validation yup schema compiler ok # time=7.428ms
    
    # Subtest: OPTIONS - input-validation yup schema compiler ko
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 24 - OPTIONS - input-validation yup schema compiler ko # time=6.516ms
    
    # Subtest: OPTIONS - input-validation instance custom schema compiler encapsulated
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 25 - OPTIONS - input-validation instance custom schema compiler encapsulated # time=4.951ms
    
    # Subtest: OPTIONS - input-validation custom schema compiler encapsulated
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 26 - OPTIONS - input-validation custom schema compiler encapsulated # time=4.821ms
    
    1..26
    # time=1589.583ms
ok 79 - test/options.test.js # time=1589.583ms

# Subtest: test/output-validation.test.js
    # Subtest: shorthand - output string
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - output string # time=12.599ms
    
    # Subtest: shorthand - output number
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - output number # time=3.197ms
    
    # Subtest: wrong object for schema - output
        1..1
        ok 1 - (unnamed test)
    ok 3 - wrong object for schema - output # time=2.897ms
    
    # Subtest: empty response
        1..1
        ok 1 - (unnamed test)
    ok 4 - empty response # time=2.83ms
    
    # Subtest: unlisted response code
        1..1
        ok 1 - (unnamed test)
    ok 5 - unlisted response code # time=3.227ms
    
    ok 6 - should not error
    # Subtest: shorthand - string get ok
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - shorthand - string get ok # time=60.472ms
    
    # Subtest: shorthand - number get ok
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 8 - shorthand - number get ok # time=7.907ms
    
    # Subtest: shorthand - wrong-object-for-schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 9 - shorthand - wrong-object-for-schema # time=8.055ms
    
    # Subtest: shorthand - empty
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 10 - shorthand - empty # time=4.94ms
    
    # Subtest: shorthand - 400
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 11 - shorthand - 400 # time=5.829ms
    
    1..11
    # time=263.774ms
ok 80 - test/output-validation.test.js # time=263.774ms

# Subtest: test/patch.error-handler.test.js
    # Subtest: PATCH can be created
        1..1
        ok 1 - (unnamed test)
    ok 1 - PATCH can be created # time=11.886ms
    
    # Subtest: PATCH without schema can be created
        1..1
        ok 1 - (unnamed test)
    ok 2 - PATCH without schema can be created # time=2.723ms
    
    # Subtest: PATCH with body and querystring
        1..1
        ok 1 - (unnamed test)
    ok 3 - PATCH with body and querystring # time=2.244ms
    
    # Subtest: PATCH with bodyLimit option
        1..1
        ok 1 - (unnamed test)
    ok 4 - PATCH with bodyLimit option # time=2.472ms
    
    # Subtest: PATCH can be created
        1..1
        ok 1 - (unnamed test)
    ok 5 - PATCH can be created # time=3.226ms
    
    # Subtest: PATCH - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 6 - PATCH - correctly replies # time=72.731ms
    
    # Subtest: PATCH - correctly replies with very large body
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 7 - PATCH - correctly replies with very large body # time=15.038ms
    
    # Subtest: PATCH - correctly replies if the content type has the charset
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 8 - PATCH - correctly replies if the content type has the charset # time=7.127ms
    
    # Subtest: PATCH without schema - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 9 - PATCH without schema - correctly replies # time=23.71ms
    
    # Subtest: PATCH with body and querystring - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 10 - PATCH with body and querystring - correctly replies # time=6.862ms
    
    # Subtest: PATCH with no body - correctly replies
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 11 - PATCH with no body - correctly replies # time=82.725ms
    
    # Subtest: PATCH returns 415 - incorrect media type if body is not json
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 12 - PATCH returns 415 - incorrect media type if body is not json # time=7.312ms
    
    # Subtest: PATCH returns 400 - Bad Request
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 13 - PATCH returns 400 - Bad Request # time=13.327ms
    
    # Subtest: PATCH returns 413 - Payload Too Large
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
    ok 14 - PATCH returns 413 - Payload Too Large # time=18.943ms
    
    # Subtest: PATCH should fail with empty body and application/json content-type
        1..12
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equivalent
        ok 9 - should not error
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equivalent
    ok 15 - PATCH should fail with empty body and application/json content-type # time=28.02ms
    
    # Subtest: PATCH - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 16 - PATCH - correctly replies # time=26.282ms
    
    # Subtest: PATCH - 400 on bad parameters
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - PATCH - 400 on bad parameters # time=5.55ms
    
    # Subtest: PATCH - input-validation coerce
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 18 - PATCH - input-validation coerce # time=4.7ms
    
    # Subtest: PATCH - input-validation custom schema compiler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - PATCH - input-validation custom schema compiler # time=4.833ms
    
    # Subtest: PATCH - input-validation joi schema compiler ok
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 20 - PATCH - input-validation joi schema compiler ok # time=6.784ms
    
    # Subtest: PATCH - input-validation joi schema compiler ko
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 21 - PATCH - input-validation joi schema compiler ko # time=6.419ms
    
    # Subtest: PATCH - input-validation yup schema compiler ok
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 22 - PATCH - input-validation yup schema compiler ok # time=6.335ms
    
    # Subtest: PATCH - input-validation yup schema compiler ko
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 23 - PATCH - input-validation yup schema compiler ko # time=6.402ms
    
    # Subtest: PATCH - input-validation instance custom schema compiler encapsulated
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 24 - PATCH - input-validation instance custom schema compiler encapsulated # time=18.309ms
    
    # Subtest: PATCH - input-validation custom schema compiler encapsulated
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 25 - PATCH - input-validation custom schema compiler encapsulated # time=4.637ms
    
    ok 26 - type is object
    ok 27 - type is Request
    ok 28 - type is object
    ok 29 - type is Request
    ok 30 - type is object
    ok 31 - type is Request
    ok 32 - type is object
    ok 33 - type is Request
    ok 34 - type is object
    ok 35 - type is Request
    ok 36 - type is object
    ok 37 - type is Request
    ok 38 - type is object
    ok 39 - type is Request
    ok 40 - type is object
    ok 41 - type is Request
    ok 42 - type is object
    ok 43 - type is Request
    ok 44 - type is object
    ok 45 - type is Request
    ok 46 - type is object
    ok 47 - type is Request
    ok 48 - type is object
    ok 49 - type is Request
    1..49
    # time=1553.156ms
ok 81 - test/patch.error-handler.test.js # time=1553.156ms

# Subtest: test/patch.test.js
    # Subtest: PATCH can be created
        1..1
        ok 1 - (unnamed test)
    ok 1 - PATCH can be created # time=11.75ms
    
    # Subtest: PATCH without schema can be created
        1..1
        ok 1 - (unnamed test)
    ok 2 - PATCH without schema can be created # time=2.737ms
    
    # Subtest: PATCH with body and querystring
        1..1
        ok 1 - (unnamed test)
    ok 3 - PATCH with body and querystring # time=2.233ms
    
    # Subtest: PATCH with bodyLimit option
        1..1
        ok 1 - (unnamed test)
    ok 4 - PATCH with bodyLimit option # time=2.512ms
    
    # Subtest: PATCH can be created
        1..1
        ok 1 - (unnamed test)
    ok 5 - PATCH can be created # time=3.348ms
    
    # Subtest: PATCH - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 6 - PATCH - correctly replies # time=80.917ms
    
    # Subtest: PATCH - correctly replies with very large body
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 7 - PATCH - correctly replies with very large body # time=11.127ms
    
    # Subtest: PATCH - correctly replies if the content type has the charset
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 8 - PATCH - correctly replies if the content type has the charset # time=7.155ms
    
    # Subtest: PATCH without schema - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 9 - PATCH without schema - correctly replies # time=6.634ms
    
    # Subtest: PATCH with body and querystring - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 10 - PATCH with body and querystring - correctly replies # time=6.569ms
    
    # Subtest: PATCH with no body - correctly replies
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 11 - PATCH with no body - correctly replies # time=49.517ms
    
    # Subtest: PATCH returns 415 - incorrect media type if body is not json
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 12 - PATCH returns 415 - incorrect media type if body is not json # time=7.074ms
    
    # Subtest: PATCH returns 400 - Bad Request
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 13 - PATCH returns 400 - Bad Request # time=14.919ms
    
    # Subtest: PATCH returns 413 - Payload Too Large
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
    ok 14 - PATCH returns 413 - Payload Too Large # time=30.651ms
    
    # Subtest: PATCH should fail with empty body and application/json content-type
        1..12
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equivalent
        ok 9 - should not error
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equivalent
    ok 15 - PATCH should fail with empty body and application/json content-type # time=40.897ms
    
    # Subtest: PATCH - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 16 - PATCH - correctly replies # time=5.995ms
    
    # Subtest: PATCH - 400 on bad parameters
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - PATCH - 400 on bad parameters # time=5.366ms
    
    # Subtest: PATCH - input-validation coerce
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 18 - PATCH - input-validation coerce # time=5.625ms
    
    # Subtest: PATCH - input-validation custom schema compiler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - PATCH - input-validation custom schema compiler # time=5.333ms
    
    # Subtest: PATCH - input-validation joi schema compiler ok
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 20 - PATCH - input-validation joi schema compiler ok # time=16.346ms
    
    # Subtest: PATCH - input-validation joi schema compiler ko
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 21 - PATCH - input-validation joi schema compiler ko # time=6.946ms
    
    # Subtest: PATCH - input-validation yup schema compiler ok
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 22 - PATCH - input-validation yup schema compiler ok # time=6.404ms
    
    # Subtest: PATCH - input-validation yup schema compiler ko
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 23 - PATCH - input-validation yup schema compiler ko # time=5.902ms
    
    # Subtest: PATCH - input-validation instance custom schema compiler encapsulated
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 24 - PATCH - input-validation instance custom schema compiler encapsulated # time=4.365ms
    
    # Subtest: PATCH - input-validation custom schema compiler encapsulated
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 25 - PATCH - input-validation custom schema compiler encapsulated # time=4.377ms
    
    1..25
    # time=1335.348ms
ok 82 - test/patch.test.js # time=1335.348ms

# Subtest: test/plugin.test.js
    # Subtest: require a plugin
        1..1
        ok 1 - expect truthy value
    ok 1 - require a plugin # time=173.094ms
    
    # Subtest: plugin metadata - ignore prefix
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 2 - plugin metadata - ignore prefix # time=55.623ms
    
    # Subtest: plugin metadata - naming plugins
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 3 - plugin metadata - naming plugins # time=25.665ms
    
    # Subtest: fastify.register with fastify-plugin should not encapsulate his code
        1..10
        ok 1 - expect falsey value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - should not error
        ok 6 - expect truthy value
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equivalent
    ok 4 - fastify.register with fastify-plugin should not encapsulate his code # time=75.51ms
    
    # Subtest: fastify.register with fastify-plugin should provide access to external fastify instance if opts argument is a function
        1..22
        ok 1 - expect falsey value
        ok 2 - expect falsey value
        ok 3 - expect falsey value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect falsey value
        ok 10 - expect truthy value
        ok 11 - expect falsey value
        ok 12 - expect truthy value
        ok 13 - expect truthy value
        ok 14 - should be equal
        ok 15 - expect falsey value
        ok 16 - expect falsey value
        ok 17 - should not error
        ok 18 - expect truthy value
        ok 19 - should not error
        ok 20 - should be equal
        ok 21 - should be equal
        ok 22 - should be equivalent
    ok 5 - fastify.register with fastify-plugin should provide access to external fastify instance if opts argument is a function # time=33.233ms
    
    # Subtest: fastify.register with fastify-plugin registers fastify level plugins
        1..15
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - should not error
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
        ok 12 - should not error
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equivalent
    ok 6 - fastify.register with fastify-plugin registers fastify level plugins # time=26.159ms
    
    # Subtest: check dependencies - should not throw
        1..12
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - expect falsey value
        ok 6 - should not error
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
    ok 7 - check dependencies - should not throw # time=28.747ms
    
    # Subtest: check dependencies - should throw
        1..12
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - expect falsey value
        ok 6 - should not error
        ok 7 - expect truthy value
        ok 8 - expect falsey value
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
    ok 8 - check dependencies - should throw # time=29.67ms
    
    # Subtest: set the plugin name based on the plugin displayName symbol
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
    ok 9 - set the plugin name based on the plugin displayName symbol # time=12.28ms
    
    # Subtest: plugin name will change when using no encapsulation
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
    ok 10 - plugin name will change when using no encapsulation # time=8.142ms
    
    # Subtest: plugin name is undefined when accessing in no plugin context
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 11 - plugin name is undefined when accessing in no plugin context # time=5.475ms
    
    # Subtest: set the plugin name based on the plugin function name
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 12 - set the plugin name based on the plugin function name # time=27.561ms
    
    # Subtest: approximate a plugin name when no meta data is available
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
    ok 13 - approximate a plugin name when no meta data is available # time=8.497ms
    
    # Subtest: approximate a plugin name also when fastify-plugin has no meta data
        1..4
        ok 1 - should match pattern provided
        ok 2 - should match pattern provided
        ok 3 - should match pattern provided
        ok 4 - should not error
    ok 14 - approximate a plugin name also when fastify-plugin has no meta data # time=26.928ms
    
    # Subtest: plugin encapsulation
        1..10
        ok 1 - expect falsey value
        ok 2 - should not error
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equivalent
    ok 15 - plugin encapsulation # time=25.121ms
    
    # Subtest: if a plugin raises an error and there is not a callback to handle it, the server must not start
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 16 - if a plugin raises an error and there is not a callback to handle it, the server must not start # time=5.892ms
    
    # Subtest: add hooks after route declaration
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 17 - add hooks after route declaration # time=17.643ms
    
    # Subtest: nested plugins
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
    ok 18 - nested plugins # time=20.285ms
    
    # Subtest: nested plugins awaited
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
    ok 19 - nested plugins awaited # time=24.052ms
    
    # Subtest: plugin metadata - decorators
        1..1
        ok 1 - expect truthy value
    ok 20 - plugin metadata - decorators # time=8.971ms
    
    # Subtest: plugin metadata - decorators - should throw
        1..1
        ok 1 - should be equal
    ok 21 - plugin metadata - decorators - should throw # time=18.557ms
    
    # Subtest: plugin metadata - decorators - should throw with plugin name
        1..1
        ok 1 - should be equal
    ok 22 - plugin metadata - decorators - should throw with plugin name # time=16.517ms
    
    # Subtest: plugin metadata - dependencies
        1..1
        ok 1 - everything right
    ok 23 - plugin metadata - dependencies # time=3.805ms
    
    # Subtest: plugin metadata - dependencies (nested)
        1..1
        ok 1 - everything right
    ok 24 - plugin metadata - dependencies (nested) # time=4.173ms
    
    # Subtest: pluginTimeout
        1..5
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - expect truthy value
        ok 5 - should be equal
    ok 25 - pluginTimeout # time=15.88ms
    
    # Subtest: pluginTimeout - named function
        1..5
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - expect truthy value
        ok 5 - should be equal
    ok 26 - pluginTimeout - named function # time=14.281ms
    
    # Subtest: pluginTimeout default
        1..5
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - expect truthy value
        ok 5 - should be equal
    ok 27 - pluginTimeout default # time=-1295663135.997ms
    
    # Subtest: plugin metadata - version
        1..1
        ok 1 - everything right
    ok 28 - plugin metadata - version # time=8.672ms
    
    # Subtest: plugin metadata - version range
        1..1
        ok 1 - everything right
    ok 29 - plugin metadata - version range # time=5.18ms
    
    # Subtest: plugin metadata - version not matching requirement
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 30 - plugin metadata - version not matching requirement # time=31.89ms
    
    # Subtest: plugin metadata - version not matching requirement 2
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 31 - plugin metadata - version not matching requirement 2 # time=3.535ms
    
    # Subtest: plugin metadata - version not matching requirement 3
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 32 - plugin metadata - version not matching requirement 3 # time=3.247ms
    
    # Subtest: plugin metadata - release candidate
        1..2
        ok 1 - should not error
        ok 2 - everything right
    ok 33 - plugin metadata - release candidate # time=36.644ms
    
    # Subtest: fastify-rc loads prior version plugins
        1..2
        ok 1 - should not error
        ok 2 - everything right
    ok 34 - fastify-rc loads prior version plugins # time=3.934ms
    
    # Subtest: hasPlugin method exists as a function
        1..1
        ok 1 - should be equal
    ok 35 - hasPlugin method exists as a function # time=1.894ms
    
    # Subtest: hasPlugin returns true if the specified plugin has been registered
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
    ok 36 - hasPlugin returns true if the specified plugin has been registered # time=6.239ms
    
    # Subtest: hasPlugin returns false if the specified plugin has not been registered
        1..1
        ok 1 - expect falsey value
    ok 37 - hasPlugin returns false if the specified plugin has not been registered # time=1.253ms
    
    # Subtest: hasPlugin returns false when using encapsulation
        1..25
        ok 1 - expect truthy value
        ok 2 - expect falsey value
        ok 3 - expect falsey value
        ok 4 - expect falsey value
        ok 5 - expect falsey value
        ok 6 - expect falsey value
        ok 7 - expect truthy value
        ok 8 - expect falsey value
        ok 9 - expect falsey value
        ok 10 - expect falsey value
        ok 11 - expect falsey value
        ok 12 - expect falsey value
        ok 13 - expect truthy value
        ok 14 - expect falsey value
        ok 15 - expect falsey value
        ok 16 - expect falsey value
        ok 17 - expect falsey value
        ok 18 - expect falsey value
        ok 19 - expect truthy value
        ok 20 - expect falsey value
        ok 21 - expect falsey value
        ok 22 - expect falsey value
        ok 23 - expect falsey value
        ok 24 - expect falsey value
        ok 25 - expect truthy value
    ok 38 - hasPlugin returns false when using encapsulation # time=14.175ms
    
    # Subtest: hasPlugin returns true when using no encapsulation
        1..26
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - expect falsey value
        ok 5 - expect falsey value
        ok 6 - expect falsey value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect falsey value
        ok 10 - expect falsey value
        ok 11 - expect falsey value
        ok 12 - expect truthy value
        ok 13 - expect truthy value
        ok 14 - expect truthy value
        ok 15 - expect falsey value
        ok 16 - expect falsey value
        ok 17 - expect truthy value
        ok 18 - expect truthy value
        ok 19 - expect truthy value
        ok 20 - expect truthy value
        ok 21 - expect falsey value
        ok 22 - expect truthy value
        ok 23 - expect truthy value
        ok 24 - expect truthy value
        ok 25 - expect truthy value
        ok 26 - expect truthy value
    ok 39 - hasPlugin returns true when using no encapsulation # time=8.643ms
    
    1..39
    # time=888.886ms
ok 83 - test/plugin.test.js # time=888.886ms

# Subtest: test/pretty-print.test.js
    # Subtest: pretty print - static routes
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - pretty print - static routes # time=54.75ms
    
    # Subtest: pretty print - parametric routes
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 2 - pretty print - parametric routes # time=11.088ms
    
    # Subtest: pretty print - mixed parametric routes
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 3 - pretty print - mixed parametric routes # time=42.951ms
    
    # Subtest: pretty print - wildcard routes
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 4 - pretty print - wildcard routes # time=28.376ms
    
    # Subtest: pretty print - empty plugins
        1..2
        ok 1 - should be equal
        ok 2 - should match pattern provided
    ok 5 - pretty print - empty plugins # time=26.282ms
    
    # Subtest: pretty print - nested plugins
        1..4
        ok 1 - should be equal
        ok 2 - should match pattern provided
        ok 3 - should match pattern provided
        ok 4 - should match pattern provided
    ok 6 - pretty print - nested plugins # time=15.008ms
    
    # Subtest: pretty print - commonPrefix
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 7 - pretty print - commonPrefix # time=29.729ms
    
    # Subtest: pretty print - includeMeta, includeHooks
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 8 - pretty print - includeMeta, includeHooks # time=31.423ms
    
    1..8
    # time=271.929ms
ok 84 - test/pretty-print.test.js # time=271.929ms

# Subtest: test/promises.test.js
    ok 1 - should not error
    # Subtest: shorthand - sget return promise es6 get
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 2 - shorthand - sget return promise es6 get # time=60.274ms
    
    # Subtest: shorthand - sget promise es6 get return error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 3 - shorthand - sget promise es6 get return error # time=8.635ms
    
    # Subtest: sget promise double send
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 4 - sget promise double send # time=7.208ms
    
    # Subtest: thenable
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 5 - thenable # time=11.673ms
    
    # Subtest: thenable (error)
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 6 - thenable (error) # time=5.568ms
    
    # Subtest: return-reply
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - return-reply # time=6.038ms
    
    1..7
    # time=184.116ms
ok 85 - test/promises.test.js # time=184.116ms

# Subtest: test/propfind.test.js
    # Subtest: can be created - propfind
        1..1
        ok 1 - (unnamed test)
    ok 1 - can be created - propfind # time=10.69ms
    
    ok 2 - should not error
    # Subtest: request - propfind
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 3 - request - propfind # time=74.822ms
    
    # Subtest: request with other path - propfind
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 4 - request with other path - propfind # time=16.746ms
    
    # Subtest: request with body - propfind
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 5 - request with body - propfind # time=19.771ms
    
    1..5
    # time=288.708ms
ok 86 - test/propfind.test.js # time=288.708ms

# Subtest: test/proppatch.test.js
    # Subtest: shorthand - proppatch
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - proppatch # time=10.827ms
    
    ok 2 - should not error
    # Subtest: request - proppatch
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 3 - request - proppatch # time=27.361ms
    
    1..3
    # time=150.59ms
ok 87 - test/proppatch.test.js # time=150.59ms

# Subtest: test/proto-poisoning.test.js
    # Subtest: proto-poisoning error
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 1 - proto-poisoning error # time=105.699ms
    
    # Subtest: proto-poisoning remove
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 2 - proto-poisoning remove # time=17.879ms
    
    # Subtest: proto-poisoning ignore
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 3 - proto-poisoning ignore # time=17.139ms
    
    # Subtest: constructor-poisoning error (default in v3)
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 4 - constructor-poisoning error (default in v3) # time=10.627ms
    
    # Subtest: constructor-poisoning error
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 5 - constructor-poisoning error # time=18.586ms
    
    # Subtest: constructor-poisoning remove
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 6 - constructor-poisoning remove # time=11.117ms
    
    1..6
    # time=194.988ms
ok 88 - test/proto-poisoning.test.js # time=194.988ms

# Subtest: test/put.error-handler.test.js
    # Subtest: PUT can be created
        1..1
        ok 1 - (unnamed test)
    ok 1 - PUT can be created # time=27.686ms
    
    # Subtest: PUT without schema can be created
        1..1
        ok 1 - (unnamed test)
    ok 2 - PUT without schema can be created # time=2.33ms
    
    # Subtest: PUT with body and querystring
        1..1
        ok 1 - (unnamed test)
    ok 3 - PUT with body and querystring # time=1.879ms
    
    # Subtest: PUT with bodyLimit option
        1..1
        ok 1 - (unnamed test)
    ok 4 - PUT with bodyLimit option # time=2.123ms
    
    # Subtest: PUT can be created
        1..1
        ok 1 - (unnamed test)
    ok 5 - PUT can be created # time=3.127ms
    
    # Subtest: PUT - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 6 - PUT - correctly replies # time=127.005ms
    
    # Subtest: PUT - correctly replies with very large body
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 7 - PUT - correctly replies with very large body # time=37.255ms
    
    # Subtest: PUT - correctly replies if the content type has the charset
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 8 - PUT - correctly replies if the content type has the charset # time=8.182ms
    
    # Subtest: PUT without schema - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 9 - PUT without schema - correctly replies # time=16.792ms
    
    # Subtest: PUT with body and querystring - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 10 - PUT with body and querystring - correctly replies # time=7.6ms
    
    # Subtest: PUT with no body - correctly replies
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 11 - PUT with no body - correctly replies # time=44.17ms
    
    # Subtest: PUT returns 415 - incorrect media type if body is not json
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 12 - PUT returns 415 - incorrect media type if body is not json # time=7.501ms
    
    # Subtest: PUT returns 400 - Bad Request
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 13 - PUT returns 400 - Bad Request # time=36.192ms
    
    # Subtest: PUT returns 413 - Payload Too Large
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
    ok 14 - PUT returns 413 - Payload Too Large # time=18.21ms
    
    # Subtest: PUT should fail with empty body and application/json content-type
        1..12
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equivalent
        ok 9 - should not error
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equivalent
    ok 15 - PUT should fail with empty body and application/json content-type # time=34.287ms
    
    # Subtest: PUT - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 16 - PUT - correctly replies # time=5.509ms
    
    # Subtest: PUT - 400 on bad parameters
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - PUT - 400 on bad parameters # time=5.682ms
    
    # Subtest: PUT - input-validation coerce
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 18 - PUT - input-validation coerce # time=5.005ms
    
    # Subtest: PUT - input-validation custom schema compiler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - PUT - input-validation custom schema compiler # time=5.174ms
    
    # Subtest: PUT - input-validation joi schema compiler ok
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 20 - PUT - input-validation joi schema compiler ok # time=7.12ms
    
    # Subtest: PUT - input-validation joi schema compiler ko
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 21 - PUT - input-validation joi schema compiler ko # time=7.385ms
    
    # Subtest: PUT - input-validation yup schema compiler ok
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 22 - PUT - input-validation yup schema compiler ok # time=7.587ms
    
    # Subtest: PUT - input-validation yup schema compiler ko
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 23 - PUT - input-validation yup schema compiler ko # time=7.373ms
    
    # Subtest: PUT - input-validation instance custom schema compiler encapsulated
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 24 - PUT - input-validation instance custom schema compiler encapsulated # time=6.958ms
    
    # Subtest: PUT - input-validation custom schema compiler encapsulated
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 25 - PUT - input-validation custom schema compiler encapsulated # time=7.135ms
    
    ok 26 - type is object
    ok 27 - type is Request
    ok 28 - type is object
    ok 29 - type is Request
    ok 30 - type is object
    ok 31 - type is Request
    ok 32 - type is object
    ok 33 - type is Request
    ok 34 - type is object
    ok 35 - type is Request
    ok 36 - type is object
    ok 37 - type is Request
    ok 38 - type is object
    ok 39 - type is Request
    ok 40 - type is object
    ok 41 - type is Request
    ok 42 - type is object
    ok 43 - type is Request
    ok 44 - type is object
    ok 45 - type is Request
    ok 46 - type is object
    ok 47 - type is Request
    ok 48 - type is object
    ok 49 - type is Request
    1..49
    # time=1609.527ms
ok 89 - test/put.error-handler.test.js # time=1609.527ms

# Subtest: test/put.test.js
    # Subtest: PUT can be created
        1..1
        ok 1 - (unnamed test)
    ok 1 - PUT can be created # time=11.537ms
    
    # Subtest: PUT without schema can be created
        1..1
        ok 1 - (unnamed test)
    ok 2 - PUT without schema can be created # time=2.816ms
    
    # Subtest: PUT with body and querystring
        1..1
        ok 1 - (unnamed test)
    ok 3 - PUT with body and querystring # time=2.376ms
    
    # Subtest: PUT with bodyLimit option
        1..1
        ok 1 - (unnamed test)
    ok 4 - PUT with bodyLimit option # time=2.495ms
    
    # Subtest: PUT can be created
        1..1
        ok 1 - (unnamed test)
    ok 5 - PUT can be created # time=4.032ms
    
    # Subtest: PUT - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 6 - PUT - correctly replies # time=119.462ms
    
    # Subtest: PUT - correctly replies with very large body
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 7 - PUT - correctly replies with very large body # time=11.136ms
    
    # Subtest: PUT - correctly replies if the content type has the charset
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 8 - PUT - correctly replies if the content type has the charset # time=7.544ms
    
    # Subtest: PUT without schema - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 9 - PUT without schema - correctly replies # time=6.304ms
    
    # Subtest: PUT with body and querystring - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 10 - PUT with body and querystring - correctly replies # time=6.468ms
    
    # Subtest: PUT with no body - correctly replies
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 11 - PUT with no body - correctly replies # time=33.382ms
    
    # Subtest: PUT returns 415 - incorrect media type if body is not json
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 12 - PUT returns 415 - incorrect media type if body is not json # time=9.118ms
    
    # Subtest: PUT returns 400 - Bad Request
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 13 - PUT returns 400 - Bad Request # time=11.755ms
    
    # Subtest: PUT returns 413 - Payload Too Large
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
    ok 14 - PUT returns 413 - Payload Too Large # time=44.612ms
    
    # Subtest: PUT should fail with empty body and application/json content-type
        1..12
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equivalent
        ok 9 - should not error
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equivalent
    ok 15 - PUT should fail with empty body and application/json content-type # time=24.573ms
    
    # Subtest: PUT - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 16 - PUT - correctly replies # time=6.109ms
    
    # Subtest: PUT - 400 on bad parameters
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - PUT - 400 on bad parameters # time=5.701ms
    
    # Subtest: PUT - input-validation coerce
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 18 - PUT - input-validation coerce # time=5.188ms
    
    # Subtest: PUT - input-validation custom schema compiler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - PUT - input-validation custom schema compiler # time=5.48ms
    
    # Subtest: PUT - input-validation joi schema compiler ok
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 20 - PUT - input-validation joi schema compiler ok # time=7.343ms
    
    # Subtest: PUT - input-validation joi schema compiler ko
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 21 - PUT - input-validation joi schema compiler ko # time=6.989ms
    
    # Subtest: PUT - input-validation yup schema compiler ok
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 22 - PUT - input-validation yup schema compiler ok # time=7.008ms
    
    # Subtest: PUT - input-validation yup schema compiler ko
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 23 - PUT - input-validation yup schema compiler ko # time=6.78ms
    
    # Subtest: PUT - input-validation instance custom schema compiler encapsulated
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 24 - PUT - input-validation instance custom schema compiler encapsulated # time=5.126ms
    
    # Subtest: PUT - input-validation custom schema compiler encapsulated
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 25 - PUT - input-validation custom schema compiler encapsulated # time=4.573ms
    
    1..25
    # time=1532.78ms
ok 90 - test/put.test.js # time=1532.78ms

# Subtest: test/register.test.js
    # Subtest: register
        1..17
        ok 1 - should not be equal
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not be equal
        ok 6 - expect truthy value
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should not error
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equivalent
    ok 1 - register # time=165.178ms
    
    # Subtest: internal route declaration should pass the error generated by the register to the done handler / 1
        1..1
        ok 1 - should be equal
    ok 2 - internal route declaration should pass the error generated by the register to the done handler / 1 # time=9.241ms
    
    # Subtest: internal route declaration should pass the error generated by the register to the done handler / 2
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 3 - internal route declaration should pass the error generated by the register to the done handler / 2 # time=35.63ms
    
    # Subtest: awaitable register and after
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        1..3
    ok 4 - awaitable register and after # time=29.281ms
    
    # Subtest: awaitable register error handling
        ok 1 - expect rejected Promise: Error kaboom
        ok 2 - expect rejected Promise: Error kaboom
        ok 3 - expect rejected Promise: Error kaboom
        1..3
    ok 5 - awaitable register error handling # time=46.66ms
    
    # Subtest: awaitable after error handling
        ok 1 - expect rejected Promise: Error kaboom
        ok 2 - expect rejected Promise
        1..2
    ok 6 - awaitable after error handling # time=23.986ms
    
    # Subtest: chainable register
        1..3
        ok 1 - first loaded
        ok 2 - second loaded
        ok 3 - third loaded
    ok 7 - chainable register # time=9.453ms
    
    1..7
    # time=330.762ms
ok 91 - test/register.test.js # time=330.762ms

# Subtest: test/reply-code.test.js
    # Subtest: code should handle null/undefined/float
        1..8
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
    ok 1 - code should handle null/undefined/float # time=104.274ms
    
    1..1
    # time=111.566ms
ok 92 - test/reply-code.test.js # time=111.566ms

# Subtest: test/reply-error.test.js
    # Subtest: Reply error handling - code: 400
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - Reply error handling - code: 400 # time=271.691ms
    
    # Subtest: Reply error handling - code: 401
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 2 - Reply error handling - code: 401 # time=11.389ms
    
    # Subtest: Reply error handling - code: 402
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 3 - Reply error handling - code: 402 # time=33.938ms
    
    # Subtest: Reply error handling - code: 403
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 4 - Reply error handling - code: 403 # time=9.357ms
    
    # Subtest: Reply error handling - code: 404
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 5 - Reply error handling - code: 404 # time=28.489ms
    
    # Subtest: Reply error handling - code: 405
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 6 - Reply error handling - code: 405 # time=6.933ms
    
    # Subtest: Reply error handling - code: 406
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - Reply error handling - code: 406 # time=9.92ms
    
    # Subtest: Reply error handling - code: 407
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 8 - Reply error handling - code: 407 # time=8.262ms
    
    # Subtest: Reply error handling - code: 408
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 9 - Reply error handling - code: 408 # time=14.823ms
    
    # Subtest: Reply error handling - code: 409
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 10 - Reply error handling - code: 409 # time=10.961ms
    
    # Subtest: Reply error handling - code: 410
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 11 - Reply error handling - code: 410 # time=8.5ms
    
    # Subtest: Reply error handling - code: 411
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 12 - Reply error handling - code: 411 # time=10.068ms
    
    # Subtest: Reply error handling - code: 412
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 13 - Reply error handling - code: 412 # time=7.486ms
    
    # Subtest: Reply error handling - code: 413
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 14 - Reply error handling - code: 413 # time=7.93ms
    
    # Subtest: Reply error handling - code: 414
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 15 - Reply error handling - code: 414 # time=12.617ms
    
    # Subtest: Reply error handling - code: 415
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 16 - Reply error handling - code: 415 # time=44.504ms
    
    # Subtest: Reply error handling - code: 416
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 17 - Reply error handling - code: 416 # time=6.609ms
    
    # Subtest: Reply error handling - code: 417
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - Reply error handling - code: 417 # time=6.287ms
    
    # Subtest: Reply error handling - code: 418
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 19 - Reply error handling - code: 418 # time=6.324ms
    
    # Subtest: Reply error handling - code: 421
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 20 - Reply error handling - code: 421 # time=7.279ms
    
    # Subtest: Reply error handling - code: 422
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 21 - Reply error handling - code: 422 # time=6.902ms
    
    # Subtest: Reply error handling - code: 423
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 22 - Reply error handling - code: 423 # time=6.175ms
    
    # Subtest: Reply error handling - code: 424
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 23 - Reply error handling - code: 424 # time=24.348ms
    
    # Subtest: Reply error handling - code: 425
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 24 - Reply error handling - code: 425 # time=6.223ms
    
    # Subtest: Reply error handling - code: 426
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 25 - Reply error handling - code: 426 # time=9.568ms
    
    # Subtest: Reply error handling - code: 428
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 26 - Reply error handling - code: 428 # time=25.257ms
    
    # Subtest: Reply error handling - code: 429
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 27 - Reply error handling - code: 429 # time=5.3ms
    
    # Subtest: Reply error handling - code: 431
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 28 - Reply error handling - code: 431 # time=4.752ms
    
    # Subtest: Reply error handling - code: 451
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 29 - Reply error handling - code: 451 # time=7.445ms
    
    # Subtest: Reply error handling - code: 500
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 30 - Reply error handling - code: 500 # time=4.776ms
    
    # Subtest: Reply error handling - code: 501
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 31 - Reply error handling - code: 501 # time=4.016ms
    
    # Subtest: Reply error handling - code: 502
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 32 - Reply error handling - code: 502 # time=5.249ms
    
    # Subtest: Reply error handling - code: 503
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 33 - Reply error handling - code: 503 # time=6.164ms
    
    # Subtest: Reply error handling - code: 504
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 34 - Reply error handling - code: 504 # time=5.749ms
    
    # Subtest: Reply error handling - code: 505
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 35 - Reply error handling - code: 505 # time=5.053ms
    
    # Subtest: Reply error handling - code: 506
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 36 - Reply error handling - code: 506 # time=5.919ms
    
    # Subtest: Reply error handling - code: 507
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 37 - Reply error handling - code: 507 # time=4.689ms
    
    # Subtest: Reply error handling - code: 508
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 38 - Reply error handling - code: 508 # time=4.315ms
    
    # Subtest: Reply error handling - code: 509
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 39 - Reply error handling - code: 509 # time=4.709ms
    
    # Subtest: Reply error handling - code: 510
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 40 - Reply error handling - code: 510 # time=5.792ms
    
    # Subtest: Reply error handling - code: 511
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 41 - Reply error handling - code: 511 # time=6.678ms
    
    # Subtest: preHandler hook error handling with external code
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 42 - preHandler hook error handling with external code # time=8.057ms
    
    # Subtest: onRequest hook error handling with external done
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 43 - onRequest hook error handling with external done # time=6.507ms
    
    # Subtest: Should reply 400 on client error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 44 - Should reply 400 on client error # time=36.111ms
    
    # Subtest: Should set the response from client error handler
        1..5
        ok 1 - should not error
        ok 2 - type is Error
        ok 3 - should be equal
        ok 4 - Log level is not warn
        ok 5 - should be equal
    ok 45 - Should set the response from client error handler # time=33.59ms
    
    # Subtest: Error instance sets HTTP status code
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 46 - Error instance sets HTTP status code # time=21.748ms
    
    # Subtest: Error status code below 400 defaults to 500
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 47 - Error status code below 400 defaults to 500 # time=5.087ms
    
    # Subtest: Error.status property support
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 48 - Error.status property support # time=4.844ms
    
    # Subtest: Support rejection with values that are not Error instances
        1..11
        # Subtest: Type: number
            1..4
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 1 - Type: number # time=61.261ms
        
        # Subtest: Type: string
            1..4
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 2 - Type: string # time=7.197ms
        
        # Subtest: Type: object
            1..4
            ok 1 - should be equivalent
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 3 - Type: object # time=7.36ms
        
        # Subtest: Type: object
            1..4
            ok 1 - should be equivalent
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 4 - Type: object # time=4.685ms
        
        # Subtest: Type: object
            1..4
            ok 1 - should be equivalent
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 5 - Type: object # time=5.14ms
        
        # Subtest: Type: undefined
            1..4
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 6 - Type: undefined # time=5.144ms
        
        # Subtest: Type: number
            1..4
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 7 - Type: number # time=5.169ms
        
        # Subtest: Type: string
            1..4
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 8 - Type: string # time=5.066ms
        
        # Subtest: Type: object
            1..4
            ok 1 - should be equivalent
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 9 - Type: object # time=4.636ms
        
        # Subtest: Type: object
            1..4
            ok 1 - should be equivalent
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 10 - Type: object # time=4.472ms
        
        # Subtest: Type: object
            1..4
            ok 1 - should be equivalent
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 11 - Type: object # time=4.417ms
        
    ok 49 - Support rejection with values that are not Error instances # time=130.055ms
    
    # Subtest: invalid schema - ajv
        1..4
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 50 - invalid schema - ajv # time=107.693ms
    
    # Subtest: should set the status code and the headers from the error object (from route handler) (no custom error handler)
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 51 - should set the status code and the headers from the error object (from route handler) (no custom error handler) # time=5.409ms
    
    # Subtest: should set the status code and the headers from the error object (from custom error handler)
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 52 - should set the status code and the headers from the error object (from custom error handler) # time=5.683ms
    
    # Subtest: '*' should throw an error due to serializer can not handle the payload type
        1..3
        ok 1 - type is TypeError
        ok 2 - should be equal
        ok 3 - should be equal
    ok 53 - '*' should throw an error due to serializer can not handle the payload type # time=4.848ms
    
    # Subtest: should throw an error if the custom serializer does not serialize the payload to a valid type
        1..3
        ok 1 - type is TypeError
        ok 2 - should be equal
        ok 3 - should be equal
    ok 54 - should throw an error if the custom serializer does not serialize the payload to a valid type # time=5.242ms
    
    # Subtest: should not set headers or status code for custom error handler
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 55 - should not set headers or status code for custom error handler # time=6.177ms
    
    # Subtest: error thrown by custom error handler routes to default error handler
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 56 - error thrown by custom error handler routes to default error handler # time=6.853ms
    
    # Subtest: allow re-thrown error to default error handler when route handler is async and error handler is sync
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 57 - allow re-thrown error to default error handler when route handler is async and error handler is sync # time=5.995ms
    
    # Subtest: should throw error if error code is undefined
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 58 - should throw error if error code is undefined # time=4.221ms
    
    # Subtest: should throw error if error code is null
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 59 - should throw error if error code is null # time=4.006ms
    
    # Subtest: should throw error if error code is error_code
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 60 - should throw error if error code is error_code # time=3.989ms
    
    # Subtest: should throw error if error code is 0
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 61 - should throw error if error code is 0 # time=4.488ms
    
    # Subtest: should throw error if error code is 1
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 62 - should throw error if error code is 1 # time=10.287ms
    
    # Subtest: should throw error if error code is 99
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 63 - should throw error if error code is 99 # time=3.929ms
    
    # Subtest: should throw error if error code is 600
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 64 - should throw error if error code is 600 # time=16.266ms
    
    # Subtest: should throw error if error code is 700
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 65 - should throw error if error code is 700 # time=9.152ms
    
    # Subtest: error handler is triggered when a string is thrown from sync handler
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
    ok 66 - error handler is triggered when a string is thrown from sync handler # time=4.224ms
    
    # Subtest: status code should be set to 500 and return an error json payload if route handler throws any non Error object expression
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 67 - status code should be set to 500 and return an error json payload if route handler throws any non Error object expression # time=5.056ms
    
    # Subtest: should preserve the status code set by the user if an expression is thrown in a sync route
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 68 - should preserve the status code set by the user if an expression is thrown in a sync route # time=3.921ms
    
    # Subtest: should trigger error handlers if a sync route throws any non-error object
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 69 - should trigger error handlers if a sync route throws any non-error object # time=3.874ms
    
    # Subtest: should trigger error handlers if a sync route throws undefined
        1..1
        ok 1 - should be equal
    ok 70 - should trigger error handlers if a sync route throws undefined # time=3.787ms
    
    # Subtest: setting content-type on reply object should not hang the server case 1
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 71 - setting content-type on reply object should not hang the server case 1 # time=3.693ms
    
    # Subtest: setting content-type on reply object should not hang the server case 2
        1..1
        ok 1 - should be equivalent
    ok 72 - setting content-type on reply object should not hang the server case 2 # time=32.478ms
    
    # Subtest: setting content-type on reply object should not hang the server case 3
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 73 - setting content-type on reply object should not hang the server case 3 # time=4.118ms
    
    # Subtest: pipe stream inside error handler should not cause error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 74 - pipe stream inside error handler should not cause error # time=87.874ms
    
    1..74
    # time=1350.449ms
ok 93 - test/reply-error.test.js # time=1350.449ms

# Subtest: test/reply-trailers.test.js
    # Subtest: send trailers when payload is empty string
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not contain all provided fields
    ok 1 - send trailers when payload is empty string # time=117.272ms
    
    # Subtest: send trailers when payload is empty buffer
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not contain all provided fields
    ok 2 - send trailers when payload is empty buffer # time=12.748ms
    
    # Subtest: send trailers when payload is undefined
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not contain all provided fields
    ok 3 - send trailers when payload is undefined # time=37.47ms
    
    # Subtest: send trailers when payload is json
        1..7
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not contain all provided fields
    ok 4 - send trailers when payload is json # time=10.084ms
    
    # Subtest: send trailers when payload is stream
        1..7
        ok 1 - should be equivalent
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not contain all provided fields
    ok 5 - send trailers when payload is stream # time=23.808ms
    
    # Subtest: send trailers when using async-await
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not contain all provided fields
    ok 6 - send trailers when using async-await # time=12.108ms
    
    # Subtest: error in trailers should be ignored
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not contain all provided fields
        ok 5 - should not contain all provided fields
    ok 7 - error in trailers should be ignored # time=8.871ms
    
    # Subtest: should emit deprecation warning when using direct return
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not contain all provided fields
    ok 8 - should emit deprecation warning when using direct return # time=14.263ms
    
    # Subtest: trailer handler counter
        1..2
        # Subtest: callback with timeout
            1..9
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should not error
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should not contain all provided fields
        ok 1 - callback with timeout # time=518.01ms
        
        # Subtest: async-await
            1..9
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should not error
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should not contain all provided fields
        ok 2 - async-await # time=527.482ms
        
    ok 9 - trailer handler counter # time=1053.173ms
    
    # Subtest: removeTrailer
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect falsey value
        ok 6 - should not contain all provided fields
    ok 10 - removeTrailer # time=8.449ms
    
    # Subtest: remove all trailers
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - expect falsey value
        ok 4 - expect falsey value
        ok 5 - expect falsey value
        ok 6 - should not contain all provided fields
    ok 11 - remove all trailers # time=35.021ms
    
    # Subtest: hasTrailer
        1..10
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - expect falsey value
        ok 10 - should not contain all provided fields
    ok 12 - hasTrailer # time=9.216ms
    
    # Subtest: throw error when trailer header name is not allowed
        1..14
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should not error
        ok 14 - should be equal
    ok 13 - throw error when trailer header name is not allowed # time=23.588ms
    
    # Subtest: throw error when trailer header value is not function
        1..10
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should not error
        ok 10 - should be equal
    ok 14 - throw error when trailer header value is not function # time=7.271ms
    
    1..14
    # time=1386.979ms
ok 94 - test/reply-trailers.test.js # time=1386.979ms

# Subtest: test/request-error.test.js
    # Subtest: default 400 on request error
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - default 400 on request error # time=106.54ms
    
    # Subtest: default 400 on request error with custom error handler
        1..6
        ok 1 - type is object
        ok 2 - type is Request
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 2 - default 400 on request error with custom error handler # time=12.397ms
    
    # Subtest: default clientError handler ignores ECONNRESET
        1..3
        ok 1 - should not error
        ok 2 - should match pattern provided
        ok 3 - should not match pattern provided
    ok 3 - default clientError handler ignores ECONNRESET # time=62.511ms
    
    # Subtest: default clientError handler ignores sockets in destroyed state
        1..1
        ok 1 - (unnamed test)
    ok 4 - default clientError handler ignores sockets in destroyed state # time=2.039ms
    
    # Subtest: default clientError handler destroys sockets in writable state
        1..2
        ok 1 - should match pattern provided
        ok 2 - destroy should be called
    ok 5 - default clientError handler destroys sockets in writable state # time=3.143ms
    
    # Subtest: default clientError handler destroys http sockets in non-writable state
        1..1
        ok 1 - destroy should be called
    ok 6 - default clientError handler destroys http sockets in non-writable state # time=1.848ms
    
    # Subtest: error handler binding
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 7 - error handler binding # time=10.089ms
    
    # Subtest: encapsulated error handler binding
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should be equal
    ok 8 - encapsulated error handler binding # time=29.497ms
    
    # Subtest: default clientError replies with bad request on reused keep-alive connection
        1..2
        ok 1 - should not error
        ok 2 - should match pattern provided
    ok 9 - default clientError replies with bad request on reused keep-alive connection # time=21.934ms
    
    # Subtest: request.routeOptions should be immutable
        1..14
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - expected to throw: TypeError Cannot set property routeOptions of \#<Request> which has only a getter
        ok 5 - expected to throw: TypeError Cannot assign to read only property 'method' of object '\#<Object>'
        ok 6 - expected to throw: TypeError Cannot assign to read only property 'url' of object '\#<Object>'
        ok 7 - expected to throw: TypeError Cannot assign to read only property 'bodyLimit' of object '\#<Object>'
        ok 8 - expected to throw: TypeError Cannot assign to read only property 'attachValidation' of object '\#<Object>'
        ok 9 - expected to throw: TypeError Cannot assign to read only property 'logLevel' of object '\#<Object>'
        ok 10 - expected to throw: TypeError Cannot assign to read only property 'version' of object '\#<Object>'
        ok 11 - expected to throw: TypeError Cannot assign to read only property 'prefixTrailingSlash' of object '\#<Object>'
        ok 12 - expected to throw: TypeError Cannot add property newAttribute, object is not extensible
        ok 13 - should not error
        ok 14 - should be equal
    ok 10 - request.routeOptions should be immutable # time=37.024ms
    
    # Subtest: test request.routeOptions.version
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 11 - test request.routeOptions.version # time=20.243ms
    
    1..11
    # time=320.23ms
ok 95 - test/request-error.test.js # time=320.23ms

# Subtest: test/requestTimeout.test.js
    # Subtest: requestTimeout passed to server
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 1 - requestTimeout passed to server # time=40.666ms
    
    # Subtest: requestTimeout should be set
        1..1
        ok 1 - should be equivalent
    ok 2 - requestTimeout should be set # time=4.904ms
    
    # Subtest: requestTimeout should 0
        1..1
        ok 1 - should be equivalent
    ok 3 - requestTimeout should 0 # time=2.814ms
    
    1..3
    # time=63.683ms
ok 96 - test/requestTimeout.test.js # time=63.683ms

# Subtest: test/route-hooks.test.js
    # Subtest: preHandler
        1..3
        ok 1 - hook called
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 1 - preHandler # time=206.456ms
    
    # Subtest: preHandler option should be called after preHandler hook
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
    ok 2 - preHandler option should be called after preHandler hook # time=13.219ms
    
    # Subtest: preHandler option could accept an array of functions
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
    ok 3 - preHandler option could accept an array of functions # time=27.203ms
    
    # Subtest: preHandler option does not interfere with preHandler hook
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 4 - preHandler option does not interfere with preHandler hook # time=10.349ms
    
    # Subtest: onSend
        1..3
        ok 1 - hook called
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 5 - onSend # time=20.171ms
    
    # Subtest: onSend option should be called after onSend hook
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
    ok 6 - onSend option should be called after onSend hook # time=33.772ms
    
    # Subtest: onSend option could accept an array of functions
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
    ok 7 - onSend option could accept an array of functions # time=6.416ms
    
    # Subtest: onSend option does not interfere with onSend hook
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 8 - onSend option does not interfere with onSend hook # time=25.999ms
    
    # Subtest: onRequest
        1..3
        ok 1 - hook called
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 9 - onRequest # time=18.6ms
    
    # Subtest: onRequest option should be called after onRequest hook
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
    ok 10 - onRequest option should be called after onRequest hook # time=7.304ms
    
    # Subtest: onRequest option could accept an array of functions
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
    ok 11 - onRequest option could accept an array of functions # time=10.754ms
    
    # Subtest: onRequest option does not interfere with onRequest hook
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 12 - onRequest option does not interfere with onRequest hook # time=10.442ms
    
    # Subtest: onResponse
        1..3
        ok 1 - hook called
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 13 - onResponse # time=8.158ms
    
    # Subtest: onResponse option should be called after onResponse hook
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
    ok 14 - onResponse option should be called after onResponse hook # time=6.139ms
    
    # Subtest: onResponse option could accept an array of functions
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
    ok 15 - onResponse option could accept an array of functions # time=6.014ms
    
    # Subtest: onResponse option does not interfere with onResponse hook
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 16 - onResponse option does not interfere with onResponse hook # time=18.456ms
    
    # Subtest: preValidation
        1..3
        ok 1 - hook called
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 17 - preValidation # time=6.794ms
    
    # Subtest: preValidation option should be called after preValidation hook
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
    ok 18 - preValidation option should be called after preValidation hook # time=6.55ms
    
    # Subtest: preValidation option could accept an array of functions
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
    ok 19 - preValidation option could accept an array of functions # time=9.847ms
    
    # Subtest: preValidation option does not interfere with preValidation hook
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 20 - preValidation option does not interfere with preValidation hook # time=9.308ms
    
    # Subtest: preParsing
        1..3
        ok 1 - hook called
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 21 - preParsing # time=6.805ms
    
    # Subtest: preParsing option should be called after preParsing hook
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
    ok 22 - preParsing option should be called after preParsing hook # time=9.374ms
    
    # Subtest: preParsing option could accept an array of functions
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
    ok 23 - preParsing option could accept an array of functions # time=6.036ms
    
    # Subtest: preParsing option does not interfere with preParsing hook
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 24 - preParsing option does not interfere with preParsing hook # time=7.491ms
    
    # Subtest: preHandler option should be unique per route
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 25 - preHandler option should be unique per route # time=7.724ms
    
    # Subtest: preHandler option should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 26 - preHandler option should handle errors # time=8.601ms
    
    # Subtest: preHandler option should handle throwing objects
        1..4
        ok 1 - the error object throws by the user
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 27 - preHandler option should handle throwing objects # time=23.473ms
    
    # Subtest: preHandler option should handle throwing objects by default
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 28 - preHandler option should handle throwing objects by default # time=7.184ms
    
    # Subtest: preHandler option should handle errors with custom status code
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 29 - preHandler option should handle errors with custom status code # time=5.661ms
    
    # Subtest: preHandler option should keep the context
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 30 - preHandler option should keep the context # time=14.541ms
    
    # Subtest: preHandler option should keep the context (array)
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 31 - preHandler option should keep the context (array) # time=5.207ms
    
    # Subtest: onRequest option should be unique per route
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 32 - onRequest option should be unique per route # time=6.488ms
    
    # Subtest: onRequest option should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 33 - onRequest option should handle errors # time=20.731ms
    
    # Subtest: onRequest option should handle throwing objects
        1..4
        ok 1 - the error object throws by the user
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 34 - onRequest option should handle throwing objects # time=5.81ms
    
    # Subtest: onRequest option should handle throwing objects by default
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 35 - onRequest option should handle throwing objects by default # time=4.87ms
    
    # Subtest: onRequest option should handle errors with custom status code
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 36 - onRequest option should handle errors with custom status code # time=4.732ms
    
    # Subtest: onRequest option should keep the context
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 37 - onRequest option should keep the context # time=4.978ms
    
    # Subtest: onRequest option should keep the context (array)
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 38 - onRequest option should keep the context (array) # time=4.831ms
    
    # Subtest: preValidation option should be unique per route
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 39 - preValidation option should be unique per route # time=6.482ms
    
    # Subtest: preValidation option should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 40 - preValidation option should handle errors # time=5.211ms
    
    # Subtest: preValidation option should handle throwing objects
        1..4
        ok 1 - the error object throws by the user
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 41 - preValidation option should handle throwing objects # time=5.765ms
    
    # Subtest: preValidation option should handle throwing objects by default
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 42 - preValidation option should handle throwing objects by default # time=5.054ms
    
    # Subtest: preValidation option should handle errors with custom status code
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 43 - preValidation option should handle errors with custom status code # time=5.239ms
    
    # Subtest: preValidation option should keep the context
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 44 - preValidation option should keep the context # time=4.643ms
    
    # Subtest: preValidation option should keep the context (array)
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 45 - preValidation option should keep the context (array) # time=4.748ms
    
    # Subtest: preParsing option should be unique per route
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 46 - preParsing option should be unique per route # time=11.852ms
    
    # Subtest: preParsing option should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 47 - preParsing option should handle errors # time=14.153ms
    
    # Subtest: preParsing option should handle throwing objects
        1..4
        ok 1 - the error object throws by the user
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 48 - preParsing option should handle throwing objects # time=5.749ms
    
    # Subtest: preParsing option should handle throwing objects by default
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 49 - preParsing option should handle throwing objects by default # time=4.943ms
    
    # Subtest: preParsing option should handle errors with custom status code
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 50 - preParsing option should handle errors with custom status code # time=4.825ms
    
    # Subtest: preParsing option should keep the context
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 51 - preParsing option should keep the context # time=4.942ms
    
    # Subtest: preParsing option should keep the context (array)
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 52 - preParsing option should keep the context (array) # time=5.165ms
    
    # Subtest: preValidation option should be called before preHandler hook
        1..3
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 53 - preValidation option should be called before preHandler hook # time=5.206ms
    
    # Subtest: preSerialization option should be able to modify the payload
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 54 - preSerialization option should be able to modify the payload # time=4.974ms
    
    # Subtest: preParsing option should be called before preValidation hook
        1..3
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 55 - preParsing option should be called before preValidation hook # time=19.352ms
    
    # Subtest: preParsing option should be able to modify the payload
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 56 - preParsing option should be able to modify the payload # time=5.459ms
    
    # Subtest: onRequest option should be called before preParsing
        1..3
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 57 - onRequest option should be called before preParsing # time=4.693ms
    
    # Subtest: onTimeout on route
        1..4
        ok 1 - should not error
        ok 2 - onTimeout called
        ok 3 - type is Error
        ok 4 - should be equal
    ok 58 - onTimeout on route # time=551.637ms
    
    # Subtest: onError on route
        1..3
        ok 1 - should match pattern provided
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 59 - onError on route # time=6.665ms
    
    1..59
    # time=1352.241ms
ok 97 - test/route-hooks.test.js # time=1352.241ms

# Subtest: test/route-prefix.test.js
    # Subtest: Prefix options should add a prefix for all the routes inside a register / 1
        1..6
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equivalent
    ok 1 - Prefix options should add a prefix for all the routes inside a register / 1 # time=162.005ms
    
    # Subtest: Prefix options should add a prefix for all the routes inside a register / 2
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 2 - Prefix options should add a prefix for all the routes inside a register / 2 # time=16.999ms
    
    # Subtest: Prefix options should add a prefix for all the chained routes inside a register / 3
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 3 - Prefix options should add a prefix for all the chained routes inside a register / 3 # time=28.415ms
    
    # Subtest: Prefix should support parameters as well
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 4 - Prefix should support parameters as well # time=8.954ms
    
    # Subtest: Prefix should support /
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 5 - Prefix should support / # time=10.391ms
    
    # Subtest: Prefix without /
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 6 - Prefix without / # time=10.321ms
    
    # Subtest: Prefix with trailing /
        1..6
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equivalent
    ok 7 - Prefix with trailing / # time=25.767ms
    
    # Subtest: Prefix works multiple levels deep
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 8 - Prefix works multiple levels deep # time=10.775ms
    
    # Subtest: Different register - encapsulation check
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 9 - Different register - encapsulation check # time=16.441ms
    
    # Subtest: Can retrieve prefix within encapsulated instances
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 10 - Can retrieve prefix within encapsulated instances # time=14.665ms
    
    # Subtest: matches both /prefix and /prefix/ with a / route
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 11 - matches both /prefix and /prefix/ with a / route # time=48.572ms
    
    # Subtest: prefix "/prefix/" does not match "/prefix" with a / route
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 12 - prefix "/prefix/" does not match "/prefix" with a / route # time=32.772ms
    
    # Subtest: matches both /prefix and /prefix/ with a / route - ignoreTrailingSlash: true
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 13 - matches both /prefix and /prefix/ with a / route - ignoreTrailingSlash: true # time=9.254ms
    
    # Subtest: matches both /prefix and /prefix/ with a / route - ignoreDuplicateSlashes: true
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 14 - matches both /prefix and /prefix/ with a / route - ignoreDuplicateSlashes: true # time=30.686ms
    
    # Subtest: matches both /prefix and /prefix/  with a / route - prefixTrailingSlash: "both", ignoreTrailingSlash: false
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 15 - matches both /prefix and /prefix/  with a / route - prefixTrailingSlash: "both", ignoreTrailingSlash: false # time=18.629ms
    
    # Subtest: matches both /prefix and /prefix/  with a / route - prefixTrailingSlash: "both", ignoreDuplicateSlashes: false
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 16 - matches both /prefix and /prefix/  with a / route - prefixTrailingSlash: "both", ignoreDuplicateSlashes: false # time=8.386ms
    
    # Subtest: matches both /prefix and /prefix/ with a / route - ignoreTrailingSlash: true, ignoreDuplicateSlashes: true
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 17 - matches both /prefix and /prefix/ with a / route - ignoreTrailingSlash: true, ignoreDuplicateSlashes: true # time=24.968ms
    
    # Subtest: matches both /prefix and /prefix/ with a / route - ignoreTrailingSlash: true, ignoreDuplicateSlashes: false
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 18 - matches both /prefix and /prefix/ with a / route - ignoreTrailingSlash: true, ignoreDuplicateSlashes: false # time=7.213ms
    
    # Subtest: returns 404 status code with /prefix/ and / route - prefixTrailingSlash: "both" (default), ignoreTrailingSlash: true
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 19 - returns 404 status code with /prefix/ and / route - prefixTrailingSlash: "both" (default), ignoreTrailingSlash: true # time=23.242ms
    
    # Subtest: matches both /prefix and /prefix/  with a / route - prefixTrailingSlash: "both", ignoreDuplicateSlashes: true
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 20 - matches both /prefix and /prefix/  with a / route - prefixTrailingSlash: "both", ignoreDuplicateSlashes: true # time=6.972ms
    
    # Subtest: matches both /prefix and /prefix/  with a / route - prefixTrailingSlash: "both", ignoreTrailingSlash: true, ignoreDuplicateSlashes: true
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 21 - matches both /prefix and /prefix/  with a / route - prefixTrailingSlash: "both", ignoreTrailingSlash: true, ignoreDuplicateSlashes: true # time=22.063ms
    
    # Subtest: matches both /prefix and /prefix/  with a / route - prefixTrailingSlash: "both", ignoreDuplicateSlashes: true
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 22 - matches both /prefix and /prefix/  with a / route - prefixTrailingSlash: "both", ignoreDuplicateSlashes: true # time=6.082ms
    
    # Subtest: matches only /prefix  with a / route - prefixTrailingSlash: "no-slash", ignoreTrailingSlash: false
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equal
    ok 23 - matches only /prefix  with a / route - prefixTrailingSlash: "no-slash", ignoreTrailingSlash: false # time=7.105ms
    
    # Subtest: matches only /prefix  with a / route - prefixTrailingSlash: "no-slash", ignoreDuplicateSlashes: false
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equal
    ok 24 - matches only /prefix  with a / route - prefixTrailingSlash: "no-slash", ignoreDuplicateSlashes: false # time=8.976ms
    
    # Subtest: matches only /prefix/  with a / route - prefixTrailingSlash: "slash", ignoreTrailingSlash: false
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equal
    ok 25 - matches only /prefix/  with a / route - prefixTrailingSlash: "slash", ignoreTrailingSlash: false # time=7.218ms
    
    # Subtest: calls onRoute only once when prefixing
        1..1
        ok 1 - should be equivalent
    ok 26 - calls onRoute only once when prefixing # time=15.074ms
    
    1..26
    # time=639.413ms
ok 98 - test/route-prefix.test.js # time=639.413ms

# Subtest: test/route.test.js
    # Subtest: route
        1..9
        # Subtest: route - get
            1..1
            ok 1 - (unnamed test)
        ok 1 - route - get # time=10.029ms
        
        # Subtest: missing schema - route
            1..1
            ok 1 - (unnamed test)
        ok 2 - missing schema - route # time=3.554ms
        
        # Subtest: invalid handler attribute - route
            1..1
            ok 1 - (unnamed test)
        ok 3 - invalid handler attribute - route # time=1.66ms
        
        # Subtest: Multiple methods
            1..1
            ok 1 - (unnamed test)
        ok 4 - Multiple methods # time=2.583ms
        
        # Subtest: Add multiple methods
            1..1
            ok 1 - (unnamed test)
        ok 5 - Add multiple methods # time=5.727ms
        
        # Subtest: cannot add another route after binding
            1..1
            ok 1 - (unnamed test)
        ok 6 - cannot add another route after binding # time=1.92ms
        
        # Subtest: route - get
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 7 - route - get # time=40.439ms
        
        # Subtest: route - missing schema
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 8 - route - missing schema # time=8.142ms
        
        # Subtest: route - multiple methods
            1..6
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
            ok 4 - should not error
            ok 5 - should be equal
            ok 6 - should be equivalent
        ok 9 - route - multiple methods # time=11.553ms
        
    ok 1 - route # time=302.914ms
    
    # Subtest: invalid schema - route
        1..3
        ok 1 - the error is throw on preReady
        ok 2 - should be equal
        ok 3 - should match pattern provided
    ok 2 - invalid schema - route # time=80.958ms
    
    # Subtest: same route definition object on multiple prefixes
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 3 - same route definition object on multiple prefixes # time=36.828ms
    
    # Subtest: path can be specified in place of uri
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 4 - path can be specified in place of uri # time=50.293ms
    
    # Subtest: invalid bodyLimit option - route
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 5 - invalid bodyLimit option - route # time=3.498ms
    
    # Subtest: handler function in options of shorthand route should works correctly
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 6 - handler function in options of shorthand route should works correctly # time=32.526ms
    
    # Subtest: does not mutate joi schemas
        1..4
        ok 1 - should be equivalent
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - does not mutate joi schemas # time=20.239ms
    
    # Subtest: multiple routes with one schema
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 8 - multiple routes with one schema # time=46.755ms
    
    # Subtest: route error handler overrides default error handler
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 9 - route error handler overrides default error handler # time=9.335ms
    
    # Subtest: route error handler does not affect other routes
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 10 - route error handler does not affect other routes # time=14.47ms
    
    # Subtest: async error handler for a route
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 11 - async error handler for a route # time=9.407ms
    
    # Subtest: route error handler overrides global custom error handler
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 12 - route error handler overrides global custom error handler # time=8.273ms
    
    # Subtest: throws when route with empty url
        1..1
        ok 1 - should be equal
    ok 13 - throws when route with empty url # time=63.846ms
    
    # Subtest: throws when route with empty url in shorthand declaration
        1..1
        ok 1 - should be equal
    ok 14 - throws when route with empty url in shorthand declaration # time=2.962ms
    
    # Subtest: throws when route-level error handler is not a function
        1..1
        ok 1 - should be equal
    ok 15 - throws when route-level error handler is not a function # time=1.915ms
    
    # Subtest: Creates a HEAD route for each GET one (default)
        1..8
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
    ok 16 - Creates a HEAD route for each GET one (default) # time=11.146ms
    
    # Subtest: Do not create a HEAD route for each GET one (exposeHeadRoutes: false)
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 17 - Do not create a HEAD route for each GET one (exposeHeadRoutes: false) # time=42.09ms
    
    # Subtest: Creates a HEAD route for each GET one
        1..8
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
    ok 18 - Creates a HEAD route for each GET one # time=10.495ms
    
    # Subtest: Creates a HEAD route for a GET one with prefixTrailingSlash
        1..1
        ok 1 - expect truthy value
    ok 19 - Creates a HEAD route for a GET one with prefixTrailingSlash # time=16.664ms
    
    # Subtest: Will not create a HEAD route that is not GET
        1..11
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should not error
        ok 11 - should be equal
    ok 20 - Will not create a HEAD route that is not GET # time=28.442ms
    
    # Subtest: HEAD route should handle properly each response type
        1..25
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should not error
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equal
        ok 21 - should not error
        ok 22 - should be equal
        ok 23 - should be equal
        ok 24 - should be equal
        ok 25 - should be equal
    ok 21 - HEAD route should handle properly each response type # time=55.212ms
    
    # Subtest: HEAD route should respect custom onSend handlers
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 22 - HEAD route should respect custom onSend handlers # time=6.361ms
    
    # Subtest: route onSend can be function or array of functions
        1..12
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
    ok 23 - route onSend can be function or array of functions # time=8.819ms
    
    # Subtest: no warning for exposeHeadRoute
        1..0
    ok 24 - no warning for exposeHeadRoute # time=21.406ms
    
    # Subtest: HEAD route should handle stream.on('error')
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 25 - HEAD route should handle stream.on('error') # time=14.217ms
    
    # Subtest: HEAD route should be exposed by default
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 26 - HEAD route should be exposed by default # time=9.97ms
    
    # Subtest: HEAD route should be exposed if route exposeHeadRoute is set
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 27 - HEAD route should be exposed if route exposeHeadRoute is set # time=8.091ms
    
    # Subtest: Set a custom HEAD route before GET one without disabling exposeHeadRoutes (global)
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 28 - Set a custom HEAD route before GET one without disabling exposeHeadRoutes (global) # time=6.507ms
    
    # Subtest: Set a custom HEAD route before GET one without disabling exposeHeadRoutes (route)
        1..7
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 29 - Set a custom HEAD route before GET one without disabling exposeHeadRoutes (route) # time=67.936ms
    
    # Subtest: HEAD routes properly auto created for GET routes when prefixTrailingSlash: 'no-slash'
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 30 - HEAD routes properly auto created for GET routes when prefixTrailingSlash: 'no-slash' # time=7.27ms
    
    # Subtest: HEAD routes properly auto created for GET routes when prefixTrailingSlash: 'both'
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 31 - HEAD routes properly auto created for GET routes when prefixTrailingSlash: 'both' # time=10.67ms
    
    # Subtest: Request and Reply share the route config
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - there are url and method additional properties
    ok 32 - Request and Reply share the route config # time=13.202ms
    
    # Subtest: Will not try to re-createprefixed HEAD route if it already exists and exposeHeadRoutes is true
        1..1
        ok 1 - expect truthy value
    ok 33 - Will not try to re-createprefixed HEAD route if it already exists and exposeHeadRoutes is true # time=5.322ms
    
    # Subtest: GET route with body schema should throw
        1..1
        ok 1 - expected to throw: Error Body validation schema for GET:/get route is not supported!
    ok 34 - GET route with body schema should throw # time=3.524ms
    
    # Subtest: HEAD route with body schema should throw
        1..1
        ok 1 - expected to throw: Error Body validation schema for HEAD:/shouldThrow route is not supported!
    ok 35 - HEAD route with body schema should throw # time=2.347ms
    
    # Subtest: [HEAD, GET] route with body schema should throw
        1..1
        ok 1 - expected to throw: Error Body validation schema for HEAD:/shouldThrowHead route is not supported!
    ok 36 - [HEAD, GET] route with body schema should throw # time=2.613ms
    
    # Subtest: GET route with body schema should throw - shorthand
        1..1
        ok 1 - expected to throw: Error Body validation schema for GET:/shouldThrow route is not supported!
    ok 37 - GET route with body schema should throw - shorthand # time=2.349ms
    
    # Subtest: HEAD route with body schema should throw - shorthand
        1..1
        ok 1 - expected to throw: Error Body validation schema for HEAD:/shouldThrow2 route is not supported!
    ok 38 - HEAD route with body schema should throw - shorthand # time=2.058ms
    
    # Subtest: route with non-english characters
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 39 - route with non-english characters # time=19.092ms
    
    # Subtest: invalid url attribute - non string URL
        1..1
        ok 1 - should be equal
    ok 40 - invalid url attribute - non string URL # time=1.452ms
    
    # Subtest: exposeHeadRoute should not reuse the same route option
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 41 - exposeHeadRoute should not reuse the same route option # time=2.055ms
    
    1..41
    # time=1095.441ms
ok 99 - test/route.test.js # time=1095.441ms

# Subtest: test/router-options.test.js
    # Subtest: Should honor ignoreTrailingSlash option
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 1 - Should honor ignoreTrailingSlash option # time=104.307ms
    
    # Subtest: Should honor ignoreDuplicateSlashes option
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 2 - Should honor ignoreDuplicateSlashes option # time=11.859ms
    
    # Subtest: Should honor ignoreTrailingSlash and ignoreDuplicateSlashes options
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 3 - Should honor ignoreTrailingSlash and ignoreDuplicateSlashes options # time=18.965ms
    
    # Subtest: Should honor maxParamLength option
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 4 - Should honor maxParamLength option # time=29.962ms
    
    # Subtest: Should expose router options via getters on request and reply
        1..10
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should not error
        ok 10 - should be equal
    ok 5 - Should expose router options via getters on request and reply # time=131.769ms
    
    # Subtest: Should set is404 flag for unmatched paths
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
    ok 6 - Should set is404 flag for unmatched paths # time=6.976ms
    
    # Subtest: Should honor frameworkErrors option - FST_ERR_BAD_URL
        1..3
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
    ok 7 - Should honor frameworkErrors option - FST_ERR_BAD_URL # time=13.002ms
    
    # Subtest: Should honor frameworkErrors option - FST_ERR_ASYNC_CONSTRAINT
        1..3
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
    ok 8 - Should honor frameworkErrors option - FST_ERR_ASYNC_CONSTRAINT # time=8.114ms
    
    1..8
    # time=358.733ms
ok 100 - test/router-options.test.js # time=358.733ms

# Subtest: test/same-shape.test.js
    # Subtest: same shape on Request
        1..1
        ok 1 - should be equal
    ok 1 - same shape on Request # time=88.919ms
    
    # Subtest: same shape on Request when object
        1..1
        ok 1 - should be equal
    ok 2 - same shape on Request when object # time=9.233ms
    
    # Subtest: same shape on Reply
        1..1
        ok 1 - should be equal
    ok 3 - same shape on Reply # time=12.689ms
    
    # Subtest: same shape on Reply when object
        1..1
        ok 1 - should be equal
    ok 4 - same shape on Reply when object # time=8.21ms
    
    1..4
    # time=153.027ms
ok 101 - test/same-shape.test.js # time=153.027ms

# Subtest: test/schema-examples.test.js
    # Subtest: Example - URI $id
        1..1
        ok 1 - should not error
    ok 1 - Example - URI $id # time=168.898ms
    
    # Subtest: Example - string $id
        1..1
        ok 1 - should not error
    ok 2 - Example - string $id # time=58.377ms
    
    # Subtest: Example - get schema
        1..1
        ok 1 - should be equivalent
    ok 3 - Example - get schema # time=14.713ms
    
    # Subtest: Example - get schema encapsulated
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        1..3
    ok 4 - Example - get schema encapsulated # time=88.598ms
    
    # Subtest: Example - validation
        1..1
        ok 1 - should not error
    ok 5 - Example - validation # time=106.257ms
    
    # Subtest: Example - ajv config
        1..1
        ok 1 - should not error
    ok 6 - Example - ajv config # time=206.226ms
    
    # Subtest: Example Joi
        1..1
        ok 1 - should not error
    ok 7 - Example Joi # time=321.352ms
    
    # Subtest: Example yup
        1..1
        ok 1 - should not error
    ok 8 - Example yup # time=551.795ms
    
    # Subtest: Example - serialization
        1..1
        ok 1 - should not error
    ok 9 - Example - serialization # time=16.179ms
    
    # Subtest: Example - serialization 2
        1..1
        ok 1 - should not error
    ok 10 - Example - serialization 2 # time=10.158ms
    
    # Subtest: Example - serializator
        1..1
        ok 1 - should not error
    ok 11 - Example - serializator # time=7.81ms
    
    # Subtest: Example - schemas examples
        1..1
        ok 1 - should not error
    ok 12 - Example - schemas examples # time=63.275ms
    
    # Subtest: should return custom error messages with ajv-errors
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 13 - should return custom error messages with ajv-errors # time=93.164ms
    
    # Subtest: should be able to handle formats of ajv-formats when added by plugins option
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 14 - should be able to handle formats of ajv-formats when added by plugins option # time=44.843ms
    
    # Subtest: should return localized error messages with ajv-i18n
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 15 - should return localized error messages with ajv-i18n # time=70.784ms
    
    1..15
    # time=1838.074ms
ok 102 - test/schema-examples.test.js # time=1838.074ms

# Subtest: test/schema-feature.test.js
    # Subtest: Should expose addSchema function
        1..1
        ok 1 - should be equal
    ok 1 - Should expose addSchema function # time=20.432ms
    
    # Subtest: Should expose getSchema function
        1..1
        ok 1 - should be equal
    ok 2 - Should expose getSchema function # time=2.599ms
    
    # Subtest: Should expose getSchemas function
        1..1
        ok 1 - should be equal
    ok 3 - Should expose getSchemas function # time=2.127ms
    
    # Subtest: Should expose setValidatorCompiler function
        1..1
        ok 1 - should be equal
    ok 4 - Should expose setValidatorCompiler function # time=1.985ms
    
    # Subtest: Should expose setSerializerCompiler function
        1..1
        ok 1 - should be equal
    ok 5 - Should expose setSerializerCompiler function # time=2.544ms
    
    # Subtest: cannot call setValidatorCompiler after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 6 - cannot call setValidatorCompiler after binding # time=145.957ms
    
    # Subtest: cannot call setSerializerCompiler after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 7 - cannot call setSerializerCompiler after binding # time=7.844ms
    
    # Subtest: The schemas should be added to an internal storage
        1..1
        ok 1 - should be equivalent
    ok 8 - The schemas should be added to an internal storage # time=7.271ms
    
    # Subtest: The schemas should be accessible via getSchemas
        1..1
        ok 1 - should be equivalent
    ok 9 - The schemas should be accessible via getSchemas # time=5.223ms
    
    # Subtest: The schema should be accessible by id via getSchema
        1..5
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should not error
    ok 10 - The schema should be accessible by id via getSchema # time=16.272ms
    
    # Subtest: Get validatorCompiler after setValidatorCompiler
        1..2
        ok 1 - expect truthy value
        ok 2 - should not error
    ok 11 - Get validatorCompiler after setValidatorCompiler # time=24.131ms
    
    # Subtest: Get serializerCompiler after setSerializerCompiler
        1..2
        ok 1 - expect truthy value
        ok 2 - should not error
    ok 12 - Get serializerCompiler after setSerializerCompiler # time=11.61ms
    
    # Subtest: Get compilers is empty when settle on routes
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 13 - Get compilers is empty when settle on routes # time=85.109ms
    
    # Subtest: Should throw if the $id property is missing
        1..1
        ok 1 - should be equal
    ok 14 - Should throw if the $id property is missing # time=2.217ms
    
    # Subtest: Cannot add multiple times the same id
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 15 - Cannot add multiple times the same id # time=2.265ms
    
    # Subtest: Cannot add schema for query and querystring
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 16 - Cannot add schema for query and querystring # time=16.24ms
    
    # Subtest: Should throw of the schema does not exists in input
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 17 - Should throw of the schema does not exists in input # time=83.411ms
    
    # Subtest: Should throw of the schema does not exists in output
        1..2
        ok 1 - should be equal
        ok 2 - should match pattern provided
    ok 18 - Should throw of the schema does not exists in output # time=17.6ms
    
    # Subtest: Should not change the input schemas
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - the $id is not removed
        ok 4 - should be equivalent
    ok 19 - Should not change the input schemas # time=99.476ms
    
    # Subtest: First level $ref
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 20 - First level $ref # time=49.811ms
    
    # Subtest: Customize validator compiler in instance and route
        1..28
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - headers evaluated
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - body evaluated
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - querystring evaluated
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - params evaluated
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should not error
        ok 20 - should be equal
        ok 21 - should be equivalent
        ok 22 - should be equivalent
        ok 23 - should be equivalent
        ok 24 - should be equivalent
        ok 25 - should match pattern provided
        ok 26 - should not error
        ok 27 - should be equal
        ok 28 - should be equivalent
    ok 21 - Customize validator compiler in instance and route # time=40.54ms
    
    # Subtest: Use the same schema across multiple routes
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 22 - Use the same schema across multiple routes # time=78.289ms
    
    # Subtest: Encapsulation should intervene
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 23 - Encapsulation should intervene # time=36.399ms
    
    # Subtest: Encapsulation isolation
        1..1
        ok 1 - should not error
    ok 24 - Encapsulation isolation # time=30.687ms
    
    # Subtest: Add schema after register
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 25 - Add schema after register # time=66.075ms
    
    # Subtest: Encapsulation isolation for getSchemas
        1..5
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
    ok 26 - Encapsulation isolation for getSchemas # time=17.214ms
    
    # Subtest: Use the same schema id in different places
        1..1
        ok 1 - should not error
    ok 27 - Use the same schema id in different places # time=62.777ms
    
    # Subtest: Get schema anyway should not add `properties` if allOf is present
        1..1
        ok 1 - should not error
    ok 28 - Get schema anyway should not add `properties` if allOf is present # time=99.884ms
    
    # Subtest: Get schema anyway should not add `properties` if oneOf is present
        1..1
        ok 1 - should not error
    ok 29 - Get schema anyway should not add `properties` if oneOf is present # time=48.398ms
    
    # Subtest: Get schema anyway should not add `properties` if anyOf is present
        1..1
        ok 1 - should not error
    ok 30 - Get schema anyway should not add `properties` if anyOf is present # time=31.476ms
    
    # Subtest: Shared schema should be ignored in string enum
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 31 - Shared schema should be ignored in string enum # time=41.595ms
    
    # Subtest: Shared schema should NOT be ignored in != string enum
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 32 - Shared schema should NOT be ignored in != string enum # time=43.731ms
    
    # Subtest: Case insensitive header validation
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 33 - Case insensitive header validation # time=38.198ms
    
    # Subtest: Not evaluate json-schema $schema keyword
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 34 - Not evaluate json-schema $schema keyword # time=31.195ms
    
    # Subtest: Validation context in validation result
        1..5
        ok 1 - should be equal
        ok 2 - detailed errors
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 35 - Validation context in validation result # time=54.084ms
    
    # Subtest: The schema build should not modify the input
        1..3
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - expect truthy value
    ok 36 - The schema build should not modify the input # time=33.08ms
    
    # Subtest: Cross schema reference with encapsulation references
        1..1
        ok 1 - should not error
    ok 37 - Cross schema reference with encapsulation references # time=101.9ms
    
    # Subtest: Check how many AJV instances are built \#1
        1..12
        ok 1 - validator not initialized
        ok 2 - validator not initialized
        ok 3 - validator not initialized
        ok 4 - validator not initialized
        ok 5 - should not error
        ok 6 - validator initialized on preReady
        ok 7 - validator initialized on preReady
        ok 8 - validator is only one for all the instances
        ok 9 - validator initialized on preReady
        ok 10 - validator is only one for all the instances
        ok 11 - validator initialized on preReady
        ok 12 - validator is only one for all the instances
    ok 38 - Check how many AJV instances are built \#1 # time=49.106ms
    
    # Subtest: onReady hook has the compilers ready
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - should not error
        ok 6 - it is called once
    ok 39 - onReady hook has the compilers ready # time=77.13ms
    
    # Subtest: Check how many AJV instances are built \#2 - verify validatorPool
        1..13
        ok 1 - validator not initialized
        ok 2 - validator not initialized
        ok 3 - validator not initialized
        ok 4 - validator not initialized
        ok 5 - validator not initialized
        ok 6 - validator not initialized
        ok 7 - validator not initialized
        ok 8 - validator is initialized
        ok 9 - this context must share the validator with the same schemas
        ok 10 - this context must share the validator of the parent
        ok 11 - validator is initialized
        ok 12 - this context has its own compiler
        ok 13 - should not error
    ok 40 - Check how many AJV instances are built \#2 - verify validatorPool # time=57.434ms
    
    # Subtest: Add schema order should not break the startup
        1..1
        ok 1 - should not error
    ok 41 - Add schema order should not break the startup # time=39.735ms
    
    # Subtest: The schema compiler recreate itself if needed
        1..1
        ok 1 - should not error
    ok 42 - The schema compiler recreate itself if needed # time=44.288ms
    
    # Subtest: Schema controller setter
        1..2
        ok 1 - allow empty object
        ok 2 - should be equal
    ok 43 - Schema controller setter # time=2.333ms
    
    # Subtest: Schema controller bucket
        1..10
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - three schema added
        ok 10 - one bucket built for every register call + 1 for the root instance
    ok 44 - Schema controller bucket # time=16.36ms
    
    # Subtest: setSchemaController per instance
        1..7
        ok 1 - instance1 has created the bucket
        ok 2 - instance2 has created the bucket
        ok 3 - add is called
        ok 4 - getSchemas is called
        ok 5 - getSchema is called
        ok 6 - the schema are loaded
        ok 7 - should not error
    ok 45 - setSchemaController per instance # time=7.197ms
    
    # Subtest: setSchemaController: Inherits correctly parent schemas with a customized validator instance
        1..5
        ok 1 - Contains same number of schemas
        ok 2 - Contains expected schemas
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - Should not coearce the string into array
    ok 46 - setSchemaController: Inherits correctly parent schemas with a customized validator instance # time=121.938ms
    
    # Subtest: setSchemaController: Inherits buildSerializer from parent if not present within the instance
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - Should be called from the child
        ok 4 - Should not be called from the child
        ok 5 - Should be called from the child
        ok 6 - Should not coerce the string into array
    ok 47 - setSchemaController: Inherits buildSerializer from parent if not present within the instance # time=36.271ms
    
    # Subtest: setSchemaController: Inherits buildValidator from parent if not present within the instance
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - Should be called from the child
        ok 4 - Should not be called from the child
        ok 5 - Should be called from the child
        ok 6 - Should not coearce the string into array
    ok 48 - setSchemaController: Inherits buildValidator from parent if not present within the instance # time=39.47ms
    
    # Subtest: Should throw if not default validator passed
        1..4
        ok 1 - should be equal
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - Should not coearce the string into array
    ok 49 - Should throw if not default validator passed # time=41.844ms
    
    # Subtest: Should coerce the array if the default validator is used
        1..2
        ok 1 - should be equal
        ok 2 - Should coearce the string into array
    ok 50 - Should coerce the array if the default validator is used # time=39.357ms
    
    # Subtest: Should return a human-friendly error if response status codes are not specified
        1..2
        ok 1 - should be equal
        ok 2 - should match pattern provided
    ok 51 - Should return a human-friendly error if response status codes are not specified # time=4.837ms
    
    # Subtest: setSchemaController: custom validator instance should not mutate headers schema
        1..2
        ok 1 - type is Headers
        ok 2 - type is Headers
    ok 52 - setSchemaController: custom validator instance should not mutate headers schema # time=4.882ms
    
    1..52
    # time=2108.899ms
ok 103 - test/schema-feature.test.js # time=2108.899ms

# Subtest: test/schema-serialization.test.js
    # Subtest: basic test
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 1 - basic test # time=138.74ms
    
    # Subtest: custom serializer options
        1..3
        ok 1 - should not error
        ok 2 - it must use the ceil rouding
        ok 3 - should be equal
    ok 2 - custom serializer options # time=12.935ms
    
    # Subtest: Different content types
        1..32
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should not error
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should not error
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should not error
        ok 19 - should be equal
        ok 20 - should be equal
        ok 21 - should not error
        ok 22 - should be equal
        ok 23 - should be equal
        ok 24 - should not error
        ok 25 - should be equal
        ok 26 - should be equal
        ok 27 - should not error
        ok 28 - should be equal
        ok 29 - should be equal
        ok 30 - should not error
        ok 31 - should be equal
        ok 32 - should be equal
    ok 3 - Different content types # time=75.584ms
    
    # Subtest: Invalid multiple content schema, throw FST_ERR_SCH_CONTENT_MISSING_SCHEMA error
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 4 - Invalid multiple content schema, throw FST_ERR_SCH_CONTENT_MISSING_SCHEMA error # time=20.697ms
    
    # Subtest: Use the same schema id in different places
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 5 - Use the same schema id in different places # time=34.034ms
    
    # Subtest: Use shared schema and $ref with $id in response ($ref to $id)
        1..5
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 6 - Use shared schema and $ref with $id in response ($ref to $id) # time=168.927ms
    
    # Subtest: Shared schema should be pass to serializer and validator ($ref to shared schema /definitions)
        1..5
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 7 - Shared schema should be pass to serializer and validator ($ref to shared schema /definitions) # time=157.841ms
    
    # Subtest: Custom setSerializerCompiler
        1..7
        ok 1 - the serializer is set by the parent
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
    ok 8 - Custom setSerializerCompiler # time=12.827ms
    
    # Subtest: Custom setSerializerCompiler returns bad serialized output
        1..4
        ok 1 - returning an invalid serialization
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent strictly
    ok 9 - Custom setSerializerCompiler returns bad serialized output # time=40.222ms
    
    # Subtest: Custom serializer per route
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - the custom and route serializer has been called
        1..4
    ok 10 - Custom serializer per route # time=24.349ms
    
    # Subtest: Reply serializer win over serializer 
        1..6
        ok 1 - the custom compiler has been created
        ok 2 - the custom compiler has been created
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
    ok 11 - Reply serializer win over serializer # time=9.1ms
    
    # Subtest: Reply serializer win over serializer 
        1..6
        ok 1 - the custom compiler has been created
        ok 2 - the custom compiler has been created
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
    ok 12 - Reply serializer win over serializer # time=24.864ms
    
    # Subtest: The schema compiler recreate itself if needed
        1..1
        ok 1 - should not error
    ok 13 - The schema compiler recreate itself if needed # time=26.134ms
    
    # Subtest: The schema changes the default error handler output
        1..4
        ok 1 - should be equal
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 14 - The schema changes the default error handler output # time=15.968ms
    
    # Subtest: do not crash if status code serializer errors
        ok 1 - should be equal
        ok 2 - should be equivalent
        1..2
    ok 15 - do not crash if status code serializer errors # time=70.699ms
    
    # Subtest: custom schema serializer error, empty message
        1..2
        ok 1 - should be equal
        ok 2 - should be equivalent
    ok 16 - custom schema serializer error, empty message # time=28.48ms
    
    # Subtest: error in custom schema serialize compiler, throw FST_ERR_SCH_SERIALIZATION_BUILD error
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 17 - error in custom schema serialize compiler, throw FST_ERR_SCH_SERIALIZATION_BUILD error # time=9.65ms
    
    # Subtest: Errors in searilizer sended to errorHandler
        ok 1 - should be equal
        ok 2 - should be equivalent
        ok 3 - error presents
        ok 4 - Serialization sign presents
        1..4
    ok 18 - Errors in searilizer sended to errorHandler # time=11.896ms
    
    # Subtest: capital X
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 19 - capital X # time=9.225ms
    
    # Subtest: allow default as status code and used as last fallback
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 20 - allow default as status code and used as last fallback # time=13.597ms
    
    1..20
    # time=939.7ms
ok 104 - test/schema-serialization.test.js # time=939.7ms

# Subtest: test/schema-special-usage.test.js
    # Subtest: Ajv plugins array parameter
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 1 - Ajv plugins array parameter # time=248.506ms
    
    # Subtest: Should handle root $merge keywords in header
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 2 - Should handle root $merge keywords in header # time=97.552ms
    
    # Subtest: Should handle root $patch keywords in header
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 3 - Should handle root $patch keywords in header # time=117.534ms
    
    # Subtest: Should handle $merge keywords in body
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 4 - Should handle $merge keywords in body # time=75.578ms
    
    # Subtest: Should handle $patch keywords in body
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 5 - Should handle $patch keywords in body # time=110.201ms
    
    # Subtest: serializer read validator's schemas
        1..4
        ok 1 - is always empty because fastify.addSchema is not called
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 6 - serializer read validator's schemas # time=122.113ms
    
    # Subtest: setSchemaController in a plugin
        1..5
        ok 1 - the bucket is created
        ok 2 - the querystring schema is compiled
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 7 - setSchemaController in a plugin # time=57.216ms
    
    # Subtest: side effect on schema let the server crash
        1..0
    ok 8 - side effect on schema let the server crash # time=43.876ms
    
    # Subtest: only response schema trigger AJV pollution
        1..0
    ok 9 - only response schema trigger AJV pollution # time=32.574ms
    
    # Subtest: only response schema trigger AJV pollution \#2
        1..0
    ok 10 - only response schema trigger AJV pollution \#2 # time=74.234ms
    
    # Subtest: setSchemaController in a plugin with head routes
        1..6
        ok 1 - the bucket is created
        ok 2 - the schema is reused
        ok 3 - the schema is reused
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 11 - setSchemaController in a plugin with head routes # time=129.936ms
    
    # Subtest: multiple refs with the same ids
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 12 - multiple refs with the same ids # time=50.5ms
    
    # Subtest: JOI validation overwrite request headers
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 13 - JOI validation overwrite request headers # time=23.96ms
    
    # Subtest: Custom schema object should not trigger FST_ERR_SCH_DUPLICATE
        ok 1 - fastify is ready
        1..1
    ok 14 - Custom schema object should not trigger FST_ERR_SCH_DUPLICATE # time=6.602ms
    
    # Subtest: The default schema compilers should not be called when overwritte by the user
        ok 1 - The custom validator compiler should be called
        ok 2 - The custom serializer compiler should be called
        1..2
    ok 15 - The default schema compilers should not be called when overwritte by the user # time=193.475ms
    
    1..15
    # time=1405.376ms
ok 105 - test/schema-special-usage.test.js # time=1405.376ms

# Subtest: test/schema-validation.test.js
    # Subtest: Basic validation test
        1..6
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
    ok 1 - Basic validation test # time=329.984ms
    
    # Subtest: External AJV instance
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 2 - External AJV instance # time=140.101ms
    
    # Subtest: Encapsulation
        1..19
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - the route validator does not change the instance one
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equivalent
        ok 16 - should be equal
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equivalent
    ok 3 - Encapsulation # time=96.813ms
    
    # Subtest: Triple $ref with a simple $id
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 4 - Triple $ref with a simple $id # time=160.055ms
    
    # Subtest: Extending schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 5 - Extending schema # time=73.435ms
    
    # Subtest: Should work with nested ids
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 6 - Should work with nested ids # time=68.16ms
    
    # Subtest: Use the same schema across multiple routes
        1..8
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 7 - Use the same schema across multiple routes # time=66.866ms
    
    # Subtest: JSON Schema validation keywords
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 8 - JSON Schema validation keywords # time=84.08ms
    
    # Subtest: Nested id calls
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 9 - Nested id calls # time=54.875ms
    
    # Subtest: Use the same schema id in different places
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 10 - Use the same schema id in different places # time=43.394ms
    
    # Subtest: Use shared schema and $ref with $id ($ref to $id)
        1..5
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 11 - Use shared schema and $ref with $id ($ref to $id) # time=63.914ms
    
    # Subtest: Use items with $ref
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 12 - Use items with $ref # time=33.714ms
    
    # Subtest: Use $ref to /definitions
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 13 - Use $ref to /definitions # time=38.286ms
    
    # Subtest: Custom AJV settings - pt1
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 14 - Custom AJV settings - pt1 # time=35.278ms
    
    # Subtest: Custom AJV settings - pt2
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 15 - Custom AJV settings - pt2 # time=42.957ms
    
    # Subtest: Custom AJV settings on different parameters - pt1
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 16 - Custom AJV settings on different parameters - pt1 # time=48.974ms
    
    # Subtest: Custom AJV settings on different parameters - pt2
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
    ok 17 - Custom AJV settings on different parameters - pt2 # time=52.022ms
    
    # Subtest: The same $id in route's schema must not overwrite others
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 18 - The same $id in route's schema must not overwrite others # time=44.821ms
    
    # Subtest: Custom validator compiler should not mutate schema
        1..2
        ok 1 - type is Headers
        ok 2 - type is Headers
    ok 19 - Custom validator compiler should not mutate schema # time=5.061ms
    
    1..19
    # time=1499.767ms
ok 106 - test/schema-validation.test.js # time=1499.767ms

# Subtest: test/search.test.js
    # Subtest: search
        1..1
        ok 1 - (unnamed test)
    ok 1 - search # time=15.142ms
    
    # Subtest: search, params schema
        1..1
        ok 1 - (unnamed test)
    ok 2 - search, params schema # time=3.146ms
    
    # Subtest: search, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 3 - search, querystring schema # time=2.851ms
    
    # Subtest: search, body schema
        1..1
        ok 1 - (unnamed test)
    ok 4 - search, body schema # time=2.317ms
    
    ok 5 - should not error
    # Subtest: request - search
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 6 - request - search # time=43.585ms
    
    # Subtest: request search params schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - request search params schema # time=8.265ms
    
    # Subtest: request search params schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 8 - request search params schema error # time=7.868ms
    
    # Subtest: request search querystring schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 9 - request search querystring schema # time=14.225ms
    
    # Subtest: request search querystring schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 10 - request search querystring schema error # time=5.823ms
    
    # Subtest: request search body schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 11 - request search body schema # time=9.665ms
    
    # Subtest: request search body schema error
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 12 - request search body schema error # time=8.432ms
    
    1..12
    # time=351.933ms
ok 107 - test/search.test.js # time=351.933ms

# Subtest: test/server.test.js
    # Subtest: listen should accept null port
        1..1
        ok 1 - should not error
    ok 1 - listen should accept null port # time=56.448ms
    
    # Subtest: listen should accept undefined port
        1..1
        ok 1 - should not error
    ok 2 - listen should accept undefined port # time=6.685ms
    
    # Subtest: listen should accept stringified number port
        1..1
        ok 1 - should not error
    ok 3 - listen should accept stringified number port # time=12.648ms
    
    # Subtest: listen should reject string port
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 4 - listen should reject string port # time=8.144ms
    
    1..4
    # time=125.483ms
ok 108 - test/server.test.js # time=125.483ms

# Subtest: test/skip-reply-send.test.js
    # Subtest: skip automatic reply.send() with reply.sent = true and a body
        ok 1 - should not be equal
        ok 2 - should not be equal
        ok 3 - should not be equal
        ok 4 - should not be equal
        ok 5 - should be equal
        ok 6 - should be equal
        1..6
    ok 1 - skip automatic reply.send() with reply.sent = true and a body # time=134.993ms
    
    # Subtest: skip automatic reply.send() with reply.sent = true and no body
        ok 1 - should not be equal
        ok 2 - should not be equal
        ok 3 - should not be equal
        ok 4 - should not be equal
        ok 5 - should be equal
        ok 6 - should be equal
        1..6
    ok 2 - skip automatic reply.send() with reply.sent = true and no body # time=13.96ms
    
    # Subtest: skip automatic reply.send() with reply.sent = true and an error
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        1..5
    ok 3 - skip automatic reply.send() with reply.sent = true and an error # time=158.971ms
    
    # Subtest: Hijacking inside onRequest skips all the following hooks and handler execution
        1..4
        # Subtest: Sending a response using reply.raw => onResponse hook is called
            ok 1 - should not be equal
            ok 2 - should not be equal
            ok 3 - onResponse should be called
            ok 4 - should not be equal
            ok 5 - should not be equal
            ok 6 - should be equal
            ok 7 - should be equal
            1..7
        ok 1 - Sending a response using reply.raw => onResponse hook is called # time=24.319ms
        
        # Subtest: Sending a response using req.socket => onResponse not called
            ok 1 - should not be equal
            ok 2 - should not be equal
            ok 3 - should not error
            ok 4 - should not be equal
            ok 5 - should not be equal
            ok 6 - should match pattern provided
            1..6
        ok 2 - Sending a response using req.socket => onResponse not called # time=65.492ms
        
        # Subtest: Throwing an error doesnt trigger any hooks
            ok 1 - should not be equal
            ok 2 - should not be equal
            ok 3 - should not error
            1..3
        ok 3 - Throwing an error doesnt trigger any hooks # time=1005.244ms
        
        # Subtest: Calling reply.send() after hijacking logs a warning
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equal
            1..3
        ok 4 - Calling reply.send() after hijacking logs a warning # time=1005.65ms
        
    ok 4 - Hijacking inside onRequest skips all the following hooks and handler execution # time=2112.622ms
    
    # Subtest: Hijacking inside preParsing skips all the following hooks and handler execution
        1..4
        # Subtest: Sending a response using reply.raw => onResponse hook is called
            ok 1 - should not be equal
            ok 2 - should not be equal
            ok 3 - onRequest should be called
            ok 4 - onResponse should be called
            ok 5 - should not be equal
            ok 6 - should not be equal
            ok 7 - should be equal
            ok 8 - should be equal
            1..8
        ok 1 - Sending a response using reply.raw => onResponse hook is called # time=41.547ms
        
        # Subtest: Sending a response using req.socket => onResponse not called
            ok 1 - should not be equal
            ok 2 - should not be equal
            ok 3 - should not error
            ok 4 - should not be equal
            ok 5 - should not be equal
            ok 6 - onRequest should be called
            ok 7 - should match pattern provided
            1..7
        ok 2 - Sending a response using req.socket => onResponse not called # time=43.82ms
        
        # Subtest: Throwing an error doesnt trigger any hooks
            ok 1 - should not be equal
            ok 2 - should not be equal
            ok 3 - onRequest should be called
            ok 4 - should not error
            1..4
        ok 3 - Throwing an error doesnt trigger any hooks # time=1005.661ms
        
        # Subtest: Calling reply.send() after hijacking logs a warning
            ok 1 - onRequest should be called
            ok 2 - should be equal
            ok 3 - should not error
            ok 4 - should be equal
            1..4
        ok 4 - Calling reply.send() after hijacking logs a warning # time=1005.333ms
        
    ok 5 - Hijacking inside preParsing skips all the following hooks and handler execution # time=2122.423ms
    
    # Subtest: Hijacking inside preValidation skips all the following hooks and handler execution
        1..4
        # Subtest: Sending a response using reply.raw => onResponse hook is called
            ok 1 - should not be equal
            ok 2 - should not be equal
            ok 3 - onRequest should be called
            ok 4 - preParsing should be called
            ok 5 - onResponse should be called
            ok 6 - should not be equal
            ok 7 - should not be equal
            ok 8 - should be equal
            ok 9 - should be equal
            1..9
        ok 1 - Sending a response using reply.raw => onResponse hook is called # time=16.688ms
        
        # Subtest: Sending a response using req.socket => onResponse not called
            ok 1 - should not be equal
            ok 2 - should not be equal
            ok 3 - should not error
            ok 4 - should not be equal
            ok 5 - should not be equal
            ok 6 - onRequest should be called
            ok 7 - preParsing should be called
            ok 8 - should match pattern provided
            1..8
        ok 2 - Sending a response using req.socket => onResponse not called # time=8.764ms
        
        # Subtest: Throwing an error doesnt trigger any hooks
            ok 1 - should not be equal
            ok 2 - should not be equal
            ok 3 - onRequest should be called
            ok 4 - preParsing should be called
            ok 5 - should not error
            1..5
        ok 3 - Throwing an error doesnt trigger any hooks # time=1003.538ms
        
        # Subtest: Calling reply.send() after hijacking logs a warning
            ok 1 - onRequest should be called
            ok 2 - preParsing should be called
            ok 3 - should be equal
            ok 4 - should not error
            ok 5 - should be equal
            1..5
        ok 4 - Calling reply.send() after hijacking logs a warning # time=1003.245ms
        
    ok 6 - Hijacking inside preValidation skips all the following hooks and handler execution # time=2037.757ms
    
    # Subtest: Hijacking inside preHandler skips all the following hooks and handler execution
        1..4
        # Subtest: Sending a response using reply.raw => onResponse hook is called
            ok 1 - should not be equal
            ok 2 - should not be equal
            ok 3 - onRequest should be called
            ok 4 - preParsing should be called
            ok 5 - preValidation should be called
            ok 6 - onResponse should be called
            ok 7 - should not be equal
            ok 8 - should not be equal
            ok 9 - should be equal
            ok 10 - should be equal
            1..10
        ok 1 - Sending a response using reply.raw => onResponse hook is called # time=18.857ms
        
        # Subtest: Sending a response using req.socket => onResponse not called
            ok 1 - should not be equal
            ok 2 - should not be equal
            ok 3 - should not error
            ok 4 - should not be equal
            ok 5 - should not be equal
            ok 6 - onRequest should be called
            ok 7 - preParsing should be called
            ok 8 - preValidation should be called
            ok 9 - should match pattern provided
            1..9
        ok 2 - Sending a response using req.socket => onResponse not called # time=16.563ms
        
        # Subtest: Throwing an error doesnt trigger any hooks
            ok 1 - should not be equal
            ok 2 - should not be equal
            ok 3 - onRequest should be called
            ok 4 - preParsing should be called
            ok 5 - preValidation should be called
            ok 6 - should not error
            1..6
        ok 3 - Throwing an error doesnt trigger any hooks # time=1002.259ms
        
        # Subtest: Calling reply.send() after hijacking logs a warning
            ok 1 - onRequest should be called
            ok 2 - preParsing should be called
            ok 3 - preValidation should be called
            ok 4 - should be equal
            ok 5 - should not error
            ok 6 - should be equal
            1..6
        ok 4 - Calling reply.send() after hijacking logs a warning # time=1002.388ms
        
    ok 7 - Hijacking inside preHandler skips all the following hooks and handler execution # time=2045.958ms
    
    # Subtest: Hijacking inside handler skips all the following hooks and handler execution
        1..4
        # Subtest: Sending a response using reply.raw => onResponse hook is called
            ok 1 - should not be equal
            ok 2 - should not be equal
            ok 3 - onRequest should be called
            ok 4 - preParsing should be called
            ok 5 - preValidation should be called
            ok 6 - onResponse should be called
            ok 7 - should not be equal
            ok 8 - should not be equal
            ok 9 - should be equal
            ok 10 - should be equal
            1..10
        ok 1 - Sending a response using reply.raw => onResponse hook is called # time=17.343ms
        
        # Subtest: Sending a response using req.socket => onResponse not called
            ok 1 - should not be equal
            ok 2 - should not be equal
            ok 3 - should not error
            ok 4 - should not be equal
            ok 5 - should not be equal
            ok 6 - onRequest should be called
            ok 7 - preParsing should be called
            ok 8 - preValidation should be called
            ok 9 - should match pattern provided
            1..9
        ok 2 - Sending a response using req.socket => onResponse not called # time=11.568ms
        
        # Subtest: Throwing an error doesnt trigger any hooks
            ok 1 - onRequest should be called
            ok 2 - preParsing should be called
            ok 3 - preValidation should be called
            ok 4 - should be equal
            ok 5 - should not error
            ok 6 - should be equal
            1..6
        ok 3 - Throwing an error doesnt trigger any hooks # time=1003.213ms
        
        # Subtest: Calling reply.send() after hijacking logs a warning
            ok 1 - onRequest should be called
            ok 2 - preParsing should be called
            ok 3 - preValidation should be called
            ok 4 - should be equal
            ok 5 - should not error
            ok 6 - should be equal
            1..6
        ok 4 - Calling reply.send() after hijacking logs a warning # time=1003.64ms
        
    ok 8 - Hijacking inside handler skips all the following hooks and handler execution # time=2041.365ms
    
    1..8
    # time=10677.608ms
ok 109 - test/skip-reply-send.test.js # time=10677.608ms

# Subtest: test/stream.test.js
    # Subtest: should respond with a stream
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
    ok 1 - should respond with a stream # time=134.064ms
    
    # Subtest: should respond with a stream (error)
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 2 - should respond with a stream (error) # time=17.578ms
    
    # Subtest: should trigger the onSend hook
        1..4
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 3 - should trigger the onSend hook # time=40.697ms
    
    # Subtest: should trigger the onSend hook only twice if pumping the stream fails, first with the stream, second with the serialized error
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 4 - should trigger the onSend hook only twice if pumping the stream fails, first with the stream, second with the serialized error # time=12.729ms
    
    # Subtest: onSend hook stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 5 - onSend hook stream # time=16.837ms
    
    # Subtest: onSend hook stream should work even if payload is not a proper stream
        1..1
        ok 1 - should be equal
    ok 6 - onSend hook stream should work even if payload is not a proper stream # time=58.851ms
    
    # Subtest: onSend hook stream should work on payload with "close" ending function
        1..1
        ok 1 - (unnamed test)
    ok 7 - onSend hook stream should work on payload with "close" ending function # time=61.344ms
    
    # Subtest: Destroying streams prematurely
        1..6
        ok 1 - should not error
        ok 2 - Received request
        ok 3 - should be equal
        ok 4 - Response closed
        ok 5 - should be equal
        ok 6 - should be equal
    ok 8 - Destroying streams prematurely # time=49.733ms
    
    # Subtest: Destroying streams prematurely should call close method
        1..7
        ok 1 - should not error
        ok 2 - Received request
        ok 3 - should be equal
        ok 4 - Response closed
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - expect truthy value
    ok 9 - Destroying streams prematurely should call close method # time=15.066ms
    
    # Subtest: Destroying streams prematurely should call close method when destroy is not a function
        1..7
        ok 1 - should not error
        ok 2 - Received request
        ok 3 - should be equal
        ok 4 - Response closed
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - expect truthy value
    ok 10 - Destroying streams prematurely should call close method when destroy is not a function # time=18.355ms
    
    # Subtest: Destroying streams prematurely should call abort method
        1..7
        ok 1 - should not error
        ok 2 - Received request
        ok 3 - should be equal
        ok 4 - Response closed
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - expect truthy value
    ok 11 - Destroying streams prematurely should call abort method # time=13.841ms
    
    # Subtest: Destroying streams prematurely, log is disabled
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - Response closed
        ok 4 - expect truthy value
    ok 12 - Destroying streams prematurely, log is disabled # time=12.701ms
    
    # Subtest: should respond with a stream1
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 13 - should respond with a stream1 # time=17.644ms
    
    # Subtest: return a 404 if the stream emits a 404 error
        1..5
        ok 1 - should not error
        ok 2 - Received request
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 14 - return a 404 if the stream emits a 404 error # time=11.544ms
    
    # Subtest: should support send module 200 and 404
        1..8
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 15 - should support send module 200 and 404 # time=21.475ms
    
    # Subtest: should destroy stream when response is ended
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 16 - should destroy stream when response is ended # time=10.912ms
    
    # Subtest: should mark reply as sent before pumping the payload stream into response for async route handler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 17 - should mark reply as sent before pumping the payload stream into response for async route handler # time=58.845ms
    
    # Subtest: reply.send handles aborted requests
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 18 - reply.send handles aborted requests # time=9.356ms
    
    # Subtest: request terminated should not crash fastify
        1..10
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should end properly
    ok 19 - request terminated should not crash fastify # time=117.543ms
    
    1..19
    # time=718.916ms
ok 110 - test/stream.test.js # time=718.916ms

# Subtest: test/sync-routes.test.js
    # Subtest: sync route
        ok 1 - should be equal
        ok 2 - should be equal
        1..2
    ok 1 - sync route # time=77.074ms
    
    # Subtest: sync route return null
        ok 1 - should be equal
        ok 2 - should be equal
        1..2
    ok 2 - sync route return null # time=9.706ms
    
    # Subtest: sync route, error
        ok 1 - should be equal
        1..1
    ok 3 - sync route, error # time=33.685ms
    
    1..3
    # time=131.686ms
ok 111 - test/sync-routes.test.js # time=131.686ms

# Subtest: test/throw.test.js
    # Subtest: Fastify should throw on wrong options
        1..2
        ok 1 - should be equal
        ok 2 - (unnamed test)
    ok 1 - Fastify should throw on wrong options # time=7.603ms
    
    # Subtest: Fastify should throw on multiple assignment to the same route
        1..1
        ok 1 - should be equal
    ok 2 - Fastify should throw on multiple assignment to the same route # time=17.189ms
    
    # Subtest: Fastify should throw for an invalid schema, printing the error route - headers
        1..2
        ok 1 - should be equal
        ok 2 - should match pattern provided
    ok 3 - Fastify should throw for an invalid schema, printing the error route - headers # time=130.827ms
    
    # Subtest: Fastify should throw for an invalid schema, printing the error route - body
        1..2
        ok 1 - should be equal
        ok 2 - should match pattern provided
    ok 4 - Fastify should throw for an invalid schema, printing the error route - body # time=51.619ms
    
    # Subtest: Fastify should throw for an invalid shorthand option type
        1..3
        ok 1 - should be equal
        ok 2 - should match pattern provided
        ok 3 - (unnamed test)
    ok 5 - Fastify should throw for an invalid shorthand option type # time=3.303ms
    
    # Subtest: Should throw on unsupported method
        1..1
        ok 1 - (unnamed test)
    ok 6 - Should throw on unsupported method # time=2.63ms
    
    # Subtest: Should throw on missing handler
        1..1
        ok 1 - (unnamed test)
    ok 7 - Should throw on missing handler # time=2.106ms
    
    # Subtest: Should throw if one method is unsupported
        1..1
        ok 1 - (unnamed test)
    ok 8 - Should throw if one method is unsupported # time=2.052ms
    
    # Subtest: Should throw on duplicate content type parser
        1..1
        ok 1 - (unnamed test)
    ok 9 - Should throw on duplicate content type parser # time=2.895ms
    
    # Subtest: Should throw on duplicate decorator
        1..1
        ok 1 - (unnamed test)
    ok 10 - Should throw on duplicate decorator # time=3.616ms
    
    # Subtest: Should not throw on duplicate decorator encapsulation
        1..1
        ok 1 - expected to not throw
    ok 11 - Should not throw on duplicate decorator encapsulation # time=17.228ms
    
    # Subtest: Should throw on duplicate request decorator
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 12 - Should throw on duplicate request decorator # time=4.289ms
    
    # Subtest: Should throw if request decorator dependencies are not met
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 13 - Should throw if request decorator dependencies are not met # time=2.769ms
    
    # Subtest: Should throw on duplicate reply decorator
        1..1
        ok 1 - expect truthy value
    ok 14 - Should throw on duplicate reply decorator # time=1.799ms
    
    # Subtest: Should throw if reply decorator dependencies are not met
        1..1
        ok 1 - expect truthy value
    ok 15 - Should throw if reply decorator dependencies are not met # time=1.583ms
    
    # Subtest: Should throw if handler as the third parameter to the shortcut method is missing and the second parameter is not a function and also not an object
        1..5
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - (unnamed test)
        ok 4 - (unnamed test)
        ok 5 - (unnamed test)
    ok 16 - Should throw if handler as the third parameter to the shortcut method is missing and the second parameter is not a function and also not an object # time=2.347ms
    
    # Subtest: Should throw if handler as the third parameter to the shortcut method is missing and the second parameter is not a function and also not an object
        1..5
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - (unnamed test)
        ok 4 - (unnamed test)
        ok 5 - (unnamed test)
    ok 17 - Should throw if handler as the third parameter to the shortcut method is missing and the second parameter is not a function and also not an object # time=2.382ms
    
    # Subtest: Should throw if there is handler function as the third parameter to the shortcut method and options as the second parameter is not an object
        1..5
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - (unnamed test)
        ok 4 - (unnamed test)
        ok 5 - (unnamed test)
    ok 18 - Should throw if there is handler function as the third parameter to the shortcut method and options as the second parameter is not an object # time=1.89ms
    
    # Subtest: Should throw if found duplicate handler as the third parameter to the shortcut method and in options
        1..1
        ok 1 - (unnamed test)
    ok 19 - Should throw if found duplicate handler as the third parameter to the shortcut method and in options # time=1.15ms
    
    1..19
    # time=287.246ms
ok 112 - test/throw.test.js # time=287.246ms

# Subtest: test/trace.test.js
    # Subtest: shorthand - trace
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - trace # time=19.242ms
    
    1..1
    # time=25.794ms
ok 113 - test/trace.test.js # time=25.794ms

# Subtest: test/trust-proxy.test.js
    # Subtest: trust proxy, not add properties to node req
        1..8
        ok 1 - should not error
        ok 2 - ip is defined
        ok 3 - gets ip from x-forwarded-for
        ok 4 - hostname is defined
        ok 5 - gets hostname from x-forwarded-host
        ok 6 - ip is defined
        ok 7 - gets ip from x-forwarded-for
        ok 8 - gets ips from x-forwarded-for
    ok 1 - trust proxy, not add properties to node req # time=86.202ms
    
    # Subtest: trust proxy chain
        1..3
        ok 1 - should not error
        ok 2 - ip is defined
        ok 3 - gets ip from x-forwarded-for
    ok 2 - trust proxy chain # time=18.502ms
    
    # Subtest: trust proxy function
        1..3
        ok 1 - should not error
        ok 2 - ip is defined
        ok 3 - gets ip from x-forwarded-for
    ok 3 - trust proxy function # time=36.115ms
    
    # Subtest: trust proxy number
        1..4
        ok 1 - should not error
        ok 2 - ip is defined
        ok 3 - gets ip from x-forwarded-for
        ok 4 - gets ips from x-forwarded-for
    ok 4 - trust proxy number # time=11.236ms
    
    # Subtest: trust proxy IP addresses
        1..4
        ok 1 - should not error
        ok 2 - ip is defined
        ok 3 - gets ip from x-forwarded-for
        ok 4 - gets ips from x-forwarded-for
    ok 5 - trust proxy IP addresses # time=37.315ms
    
    # Subtest: trust proxy protocol
        1..13
        ok 1 - should not error
        ok 2 - ip is defined
        ok 3 - gets ip from x-forwarded-for
        ok 4 - protocol is defined
        ok 5 - gets protocol from x-forwarded-proto
        ok 6 - ip is defined
        ok 7 - gets ip from x-forwarded-for
        ok 8 - protocol is defined
        ok 9 - gets protocol from x-forwarded-proto
        ok 10 - ip is defined
        ok 11 - gets ip from x-forwarded-for
        ok 12 - protocol is defined
        ok 13 - gets protocol from x-forwarded-proto
    ok 6 - trust proxy protocol # time=22.369ms
    
    1..6
    # time=276.875ms
ok 114 - test/trust-proxy.test.js # time=276.875ms

# Subtest: test/type-provider.test.js
    # Subtest: Should export withTypeProvider function
        1..1
        ok 1 - (unnamed test)
    ok 1 - Should export withTypeProvider function # time=21.055ms
    
    # Subtest: Should return same instance
        1..1
        ok 1 - should be equal
    ok 2 - Should return same instance # time=3.141ms
    
    1..2
    # time=35.666ms
ok 115 - test/type-provider.test.js # time=35.666ms

# Subtest: test/unlock.test.js
    # Subtest: can be created - unlock
        1..1
        ok 1 - (unnamed test)
    ok 1 - can be created - unlock # time=10.551ms
    
    ok 2 - should not error
    # Subtest: request - unlock
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 3 - request - unlock # time=26.835ms
    
    1..3
    # time=107.202ms
ok 116 - test/unlock.test.js # time=107.202ms

# Subtest: test/unsupported-httpversion.test.js
    # Subtest: Will return 505 HTTP error if HTTP version (2.0 when server is 1.1) is not supported
        ok 1 - should not error
        ok 2 - should match pattern provided
        1..2
    ok 1 - Will return 505 HTTP error if HTTP version (2.0 when server is 1.1) is not supported # time=61.627ms
    
    1..1
    # time=69.446ms
ok 117 - test/unsupported-httpversion.test.js # time=69.446ms

# Subtest: test/upgrade.test.js
    ok 1 - requires both IPv4 and IPv6 # SKIP
    1..1
    # skip: 1
    # time=7.415ms
ok 118 - test/upgrade.test.js # time=7.415ms

# Subtest: test/url-rewriting.test.js
    # Subtest: Should rewrite url
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equivalent
        ok 5 - should be equal
    ok 1 - Should rewrite url # time=80.775ms
    
    # Subtest: Should not rewrite if the url is the same
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 2 - Should not rewrite if the url is the same # time=18.324ms
    
    # Subtest: Should throw an error
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 3 - Should throw an error # time=74.383ms
    
    1..3
    # time=184.379ms
ok 119 - test/url-rewriting.test.js # time=184.379ms

# Subtest: test/validation-error-handling.test.js
    # Subtest: should work with valid payload
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 1 - should work with valid payload # time=141.14ms
    
    # Subtest: should fail immediately with invalid payload
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 2 - should fail immediately with invalid payload # time=36.144ms
    
    # Subtest: should be able to use setErrorHandler specify custom validation error
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 3 - should be able to use setErrorHandler specify custom validation error # time=31.34ms
    
    # Subtest: validation error has 400 statusCode set
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 4 - validation error has 400 statusCode set # time=28.439ms
    
    # Subtest: error inside custom error handler should have validationContext
        1..1
        ok 1 - should be equal
    ok 5 - error inside custom error handler should have validationContext # time=7.081ms
    
    # Subtest: error inside custom error handler should have validationContext if specified by custom error handler
        1..1
        ok 1 - should be equal
    ok 6 - error inside custom error handler should have validationContext if specified by custom error handler # time=4.746ms
    
    # Subtest: should be able to attach validation to request
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 7 - should be able to attach validation to request # time=24.629ms
    
    # Subtest: should respect when attachValidation is explicitly set to false
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 8 - should respect when attachValidation is explicitly set to false # time=28.114ms
    
    # Subtest: Attached validation error should take precedence over setErrorHandler
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 9 - Attached validation error should take precedence over setErrorHandler # time=40.463ms
    
    # Subtest: should handle response validation error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 10 - should handle response validation error # time=11.638ms
    
    # Subtest: should handle response validation error with promises
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 11 - should handle response validation error with promises # time=9.595ms
    
    # Subtest: should return a defined output message parsing AJV errors
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 12 - should return a defined output message parsing AJV errors # time=26.741ms
    
    # Subtest: should return a defined output message parsing JOI errors
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 13 - should return a defined output message parsing JOI errors # time=10.124ms
    
    # Subtest: should return a defined output message parsing JOI error details
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 14 - should return a defined output message parsing JOI error details # time=4.792ms
    
    # Subtest: the custom error formatter context must be the server instance
        1..4
        ok 1 - should be equivalent
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 15 - the custom error formatter context must be the server instance # time=25.038ms
    
    # Subtest: the custom error formatter context must be the server instance in options
        1..4
        ok 1 - should be equivalent
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 16 - the custom error formatter context must be the server instance in options # time=31.946ms
    
    # Subtest: should call custom error formatter
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equivalent
        ok 9 - should be equal
    ok 17 - should call custom error formatter # time=21.045ms
    
    # Subtest: should catch error inside formatter and return message
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 18 - should catch error inside formatter and return message # time=26.491ms
    
    # Subtest: cannot create a fastify instance with wrong type of errorFormatter
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 19 - cannot create a fastify instance with wrong type of errorFormatter # time=3.116ms
    
    # Subtest: should register a route based schema error formatter
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 20 - should register a route based schema error formatter # time=19.483ms
    
    # Subtest: prefer route based error formatter over global one
        1..9
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equivalent
        ok 9 - should be equal
    ok 21 - prefer route based error formatter over global one # time=27.93ms
    
    # Subtest: adding schemaErrorFormatter
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 22 - adding schemaErrorFormatter # time=18.041ms
    
    # Subtest: plugin override
        1..15
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equivalent
        ok 9 - should be equal
        ok 10 - should not error
        ok 11 - should be equivalent
        ok 12 - should be equal
        ok 13 - should not error
        ok 14 - should be equivalent
        ok 15 - should be equal
    ok 23 - plugin override # time=31.421ms
    
    1..23
    # time=620.7ms
ok 120 - test/validation-error-handling.test.js # time=620.7ms

# Subtest: test/versioned-routes.test.js
    # Subtest: Should register a versioned route
        1..11
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equivalent
        ok 9 - should be equal
        ok 10 - should not error
        ok 11 - should be equal
    ok 1 - Should register a versioned route # time=68.66ms
    
    # Subtest: Should register a versioned route via route constraints
        1..6
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
    ok 2 - Should register a versioned route via route constraints # time=10.943ms
    
    # Subtest: Should register the same route with different versions
        1..8
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 3 - Should register the same route with different versions # time=10.948ms
    
    # Subtest: The versioned route should take precedence
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 4 - The versioned route should take precedence # time=10.664ms
    
    # Subtest: Versioned route but not version header should return a 404
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 5 - Versioned route but not version header should return a 404 # time=6.115ms
    
    # Subtest: Should register a versioned route
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
    ok 6 - Should register a versioned route # time=36.921ms
    
    # Subtest: Shorthand route declaration
        1..5
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 7 - Shorthand route declaration # time=6.553ms
    
    # Subtest: The not found handler should not erase the Accept-Version header
        1..13
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
        ok 8 - should be equivalent
        ok 9 - should be equivalent
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equivalent
        ok 13 - should be equal
    ok 8 - The not found handler should not erase the Accept-Version header # time=10.772ms
    
    # Subtest: Bad accept version (inject)
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 9 - Bad accept version (inject) # time=5.417ms
    
    # Subtest: Bas accept version (server)
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 10 - Bas accept version (server) # time=12.05ms
    
    # Subtest: test log stream
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 11 - test log stream # time=95.809ms
    
    # Subtest: Should register a versioned route with custom versioning strategy
        1..8
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 12 - Should register a versioned route with custom versioning strategy # time=12.834ms
    
    # Subtest: Should get error using an invalid a versioned route, using default validation (deprecated versioning option)
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
    ok 13 - Should get error using an invalid a versioned route, using default validation (deprecated versioning option) # time=6.056ms
    
    # Subtest: Vary header check (for documentation example)
        1..8
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equivalent
        ok 7 - should be equal
        ok 8 - should be equal
    ok 14 - Vary header check (for documentation example) # time=6.762ms
    
    # Subtest: Should trigger a warning when a versioned route is registered via version option
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 15 - Should trigger a warning when a versioned route is registered via version option # time=41.168ms
    
    1..15
    # time=403.288ms
ok 121 - test/versioned-routes.test.js # time=403.288ms

# Subtest: test/wrapThenable.test.js
    # Subtest: should resolve immediately when reply[kReplyHijacked] is true
        1..0
    ok 1 - should resolve immediately when reply[kReplyHijacked] is true # time=3.774ms
    
    # Subtest: should reject immediately when reply[kReplyHijacked] is true
        1..1
        ok 1 - should be equal
    ok 2 - should reject immediately when reply[kReplyHijacked] is true # time=3.322ms
    
    1..2
    # time=34.343ms
ok 122 - test/wrapThenable.test.js # time=34.343ms

1..122
# failed 1 of 122 tests
# time=52551.824ms
-----------------------------|---------|----------|---------|---------|-------------------
File                         | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s 
-----------------------------|---------|----------|---------|---------|-------------------
All files                    |     100 |      100 |     100 |     100 |                   
 fastify                     |     100 |      100 |     100 |     100 |                   
  fastify.js                 |     100 |      100 |     100 |     100 |                   
 fastify/lib                 |     100 |      100 |     100 |     100 |                   
  contentTypeParser.js       |     100 |      100 |     100 |     100 |                   
  context.js                 |     100 |      100 |     100 |     100 |                   
  decorate.js                |     100 |      100 |     100 |     100 |                   
  error-handler.js           |     100 |      100 |     100 |     100 |                   
  errors.js                  |     100 |      100 |     100 |     100 |                   
  fourOhFour.js              |     100 |      100 |     100 |     100 |                   
  handleRequest.js           |     100 |      100 |     100 |     100 |                   
  headRoute.js               |     100 |      100 |     100 |     100 |                   
  hooks.js                   |     100 |      100 |     100 |     100 |                   
  httpMethods.js             |     100 |      100 |     100 |     100 |                   
  initialConfigValidation.js |     100 |      100 |     100 |     100 |                   
  logger.js                  |     100 |      100 |     100 |     100 |                   
  noop-set.js                |     100 |      100 |     100 |     100 |                   
  pluginOverride.js          |     100 |      100 |     100 |     100 |                   
  pluginUtils.js             |     100 |      100 |     100 |     100 |                   
  reply.js                   |     100 |      100 |     100 |     100 |                   
  reqIdGenFactory.js         |     100 |      100 |     100 |     100 |                   
  request.js                 |     100 |      100 |     100 |     100 |                   
  route.js                   |     100 |      100 |     100 |     100 |                   
  schema-controller.js       |     100 |      100 |     100 |     100 |                   
  schemas.js                 |     100 |      100 |     100 |     100 |                   
  server.js                  |     100 |      100 |     100 |     100 |                   
  symbols.js                 |     100 |      100 |     100 |     100 |                   
  validation.js              |     100 |      100 |     100 |     100 |                   
  warnings.js                |     100 |      100 |     100 |     100 |                   
  wrapThenable.js            |     100 |      100 |     100 |     100 |                   
-----------------------------|---------|----------|---------|---------|-------------------
I am package filer .....
✨  Built in 16.23s.

tests/dist/index.js    655.78 KB    13.75s

START:
[32m12 04 2023 12:16:10.853:INFO [karma-server]: [39mKarma v6.3.14 server started at http://localhost:9876/
[32m12 04 2023 12:16:10.855:INFO [launcher]: [39mLaunching browsers ChromeHeadless, FirefoxHeadless with concurrency unlimited
[32m12 04 2023 12:16:10.861:INFO [launcher]: [39mStarting browser ChromeHeadless
[91m12 04 2023 12:16:10.863:ERROR [launcher]: [39mNo binary for ChromeHeadless browser on your platform.
  Please, set "CHROME_BIN" env variable.
[32m12 04 2023 12:16:10.864:INFO [launcher]: [39mStarting browser FirefoxHeadless
[91m12 04 2023 12:16:10.874:ERROR [launcher]: [39mCannot start FirefoxHeadless
	Can not find the binary firefox
	Please set env variable FIREFOX_BIN
[91m12 04 2023 12:16:10.875:ERROR [launcher]: [39mFirefoxHeadless stdout: 
[91m12 04 2023 12:16:10.875:ERROR [launcher]: [39mFirefoxHeadless stderr: 

Finished in 0 secs / 0 secs @ 12:16:10 GMT+0000 (Coordinated Universal Time)

SUMMARY
No tests did run in any browsers.I am package finalhandler .....

> finalhandler@1.2.0 test
> mocha --reporter spec --bail --check-leaks test/



  finalhandler(req, res)
    headers
      ✔ should ignore err.headers without status code
      ✔ should ignore err.headers with invalid res.status
      ✔ should ignore err.headers with invalid res.statusCode
      ✔ should include err.headers with err.status
      ✔ should include err.headers with err.statusCode
      ✔ should ignore err.headers when not an object
    status code
      ✔ should 404 on no error
      ✔ should 500 on error
      ✔ should use err.statusCode
      ✔ should ignore non-error err.statusCode code
      ✔ should ignore non-numeric err.statusCode
      ✔ should use err.status
      ✔ should use err.status over err.statusCode
      ✔ should set status to 500 when err.status < 400
      ✔ should set status to 500 when err.status > 599
      ✔ should use err.statusCode over invalid err.status
      ✔ should ignore non-error err.status code
      ✔ should ignore non-numeric err.status
    status message
      ✔ should be "Not Found" on no error
      ✔ should be "Internal Server Error" on error
      ✔ should be "Bad Request" when err.statusCode = 400
      ✔ should reset existing res.statusMessage
    404 response
      ✔ should include method and pathname
      ✔ should escape method and pathname characters
      ✔ should encode bad pathname characters
      ✔ should fallback to generic pathname without URL
      ✔ should include original pathname
      ✔ should include pathname only
      ✔ should handle HEAD
      ✔ should include X-Content-Type-Options header
      ✔ should include Content-Security-Policy header
      ✔ should not hang/error if there is a request body
    error response
      ✔ should include error stack
      ✔ should handle HEAD
      ✔ should include X-Content-Type-Options header
      ✔ should includeContent-Security-Policy header
      ✔ should handle non-error-objects
      ✔ should handle null prototype objects
      ✔ should send staus code name when production
      when there is a request body
        ✔ should not hang/error when unread
        ✔ should not hang/error when actively piped
        ✔ should not hang/error when read
      when res.statusCode set
        ✔ should keep when >= 400
        ✔ should convert to 500 is not a number
        ✔ should override with err.status
        ✔ should default body to status message in production
      when res.statusCode undefined
        ✔ should set to 500
    headers set
      ✔ should persist set headers
      ✔ should override content-type and length
      ✔ should remove other content headers
    request started
      ✔ should not respond
      ✔ should terminate on error
    onerror
      ✔ should be invoked when error


  53 passing (166ms)

I am package find-file-up .....

> find-file-up@2.0.1 test
> mocha

I am package find-pkg .....

> find-pkg@2.0.0 test
> mocha

I am package firefox-profile-js .....

> firefox-profile@4.2.2 test
> grunt travis

Running "mochacov:unit" (mochacov) task


  firefox profile command line interface (CLI)
    when called with -h or --help
      ✓ should display the `usage` help message with -h (134ms)
      ✓ should display the `usage` help message with --help (112ms)
    when called with -o or --output flag
      ✓ should create an empty profile in the output folder (138ms)
    when called with -p or --profile param
      - should copy an existing profile
    when called with -c or --copy param
      ✓ should copy an existing profile folder (120ms)
    when called with -b or --base64
      ✓ should write to stdoutthe base64 zipped representation of the profile if no value is specified (120ms)
      ✓ should write to a file the base64 zipped representation of the profile if a file_path is specified (119ms)

  firefox_profile
    #constructor
      ✓ without parameter, a temp folder will be created 
      ✓ with string parameter, lock files should not be copied over 
      ✓ should copy the profile into destinationDirectory if specified 
    #Firefox.copy
      ✓ lock files should not be copied over 
      ✓ should return an error if no profileDirectory is provided 
      ✓ should copy the profile into destinationDirectory if specified 
    #Firefox.copyFromUserProfile
      ✓ lock files should not be copied over 
      ✓ should return an error if no name is provided 
      ✓ should copy the profile into destinationDirectory if specified 
    #setPreference
      ✓ should correctly store boolean values 
      should correctly store string values
        ✓ without newline characters 
        ✓ with newline characters 
    #setProxy
      ✓ should throw an expection if no proxyType is specified 
      ✓ should allow to set manual proxy 
      ✓ should allow to set auto-config proxy 
    #updatePreferences
      ✓ should correctly output a boolean value in user.js 
      should correctly output a string value in user.js
        ✓ without new line characters 
        ✓ with new line characters 
    #encoded
      - should work with a brand new profile
      - should call updatePreferences if preferences were modified
    #__addonDetails
      ✓ should correctly retrieve addon details from rdf that does not use namespace 
      ✓ should correctly retrieve addon details from rdf that uses namespace 
      ✓ should correctly retrieve addon details from addon that does not use install.rdf 
    #_sanitizePref()
      ✓ you correctly deal you boolean values 
    #addExtension
      ✓ should unzip extensions in profile folder 
      ✓ should unzip extensions in profile folder for jetpack addons 
      ✓ should not unzip extensions in profile folder when unpack is false 
      ✓ should not unzip webextensions in profile folder 
      ✓ should return the addon details gathered from install.rdf 
      ✓ should return the addon details gathered from package.json 
      ✓ should return the addon details gathered from manifest.json 
      ✓ should read id from manifest.json's browser_specific_settings 
    #path
      ✓ should return the profile directory 
    #canAcceptUntrustedCerts
      ✓ should return default value if not set 
    #setAcceptUntrustedCerts
      ✓ should properly set value 
    #canAssumeUntrustedCertIssuer
      ✓ should return default value if not set 
    #setAssumeUntrustedCertIssuer
      ✓ should properly set value 
    #nativeEventsEnabled
      ✓ should return default value if not set 
    #setNativeEventsEnabled
      ✓ should properly set value 
    #shouldDeleteOnExit
      ✓ should properly set internal property 
    #deleteDir
      ✓ should delete profile dir 
    #_cleanOnExit
      ✓ should delete profile dir 

  profile_finder
    #constructor
      ✓ should call Finder.locateUserDirectory if no param is provided 
      ✓ should not call Finder.locateUserDirectory if a param is provided 
    #Finder.locateUserDirectory
      ✓ should return path to user profile 
      ✓ should return path to user profile 
      ✓ should return path to user profile 
    #readProfiles
      ✓ should return only profiles from profiles.ini 
    #getPath
      ✓ should call readProfiles if it was not called before 
      ✓ should not call readProfiles if it was not called before 
      ✓ should return a profile if it exists 

  install extension
    - should be able to install an extension in firefox and run firebug-specific javascript


  55 passing (920ms)
  4 pending


Done.
I am package gaxios .....

> gaxios@5.0.2 pretest
> npm run compile


> gaxios@5.0.2 precompile
> gts clean

version: 16
Removing build ...

> gaxios@5.0.2 compile
> tsc -p .


> gaxios@5.0.2 test
> c8 mocha build/test



  🦖 option validation
    ✓ should throw an error if a url is not provided

  🚙 error handling
    ✓ should throw on non-2xx responses by default

  🥁 configuration options
    ✓ should use options passed into the constructor
    ✓ should handle nested options passed into the constructor
    ✓ should allow setting a base url in the options
    ✓ should allow overriding valid status
    ✓ should allow setting maxContentLength
    ✓ should support redirects by default
    ✓ should support disabling redirects
    ✓ should allow overriding the adapter
    ✓ should allow overriding the adapter with default adapter wrapper
    ✓ should encode URL parameters
    ✓ should preserve the original querystring
    ✓ should handle empty querystring params
    ✓ should encode parameters from the params option
    ✓ should merge URL parameters with the params option
    ✓ should allow overriding the param serializer
    ✓ should return json by default
    ✓ should send an application/json header by default
    ✓ should load the proxy from the cache
    ✓ should include the request data in the response config
    ✓ should not stringify the data if it is appended by a form
    ✓ should allow explicitly setting the fetch implementation to node-fetch
    proxying
      ✓ should use an https proxy if asked nicely
      ✓ should not proxy when url matches no_proxy
      ✓ should proxy if url does not match no_proxy env variable
      ✓ should not proxy if no_proxy env var matches the origin or hostname of the URL
      ✓ should not proxy if no_proxy env variable has asterisk, and URL partially matches
      ✓ should proxy if no_proxy env variable has asterisk, but URL is not matching
      ✓ should not proxy if no_proxy env variable starts with a dot, and URL partially matches
      ✓ should allow comma-separated lists for no_proxy env variables

  🎏 data handling
    ✓ should accpet a ReadableStream as request data
    ✓ should accept a string in the request data
    ✓ should set application/json content-type for object request by default
    ✓ should allow other JSON content-types to be specified
    ✓ should stringify with qs when content-type is set to application/x-www-form-urlencoded
    ✓ should return stream if asked nicely
    ✓ should return an ArrayBuffer if asked nicely
    ✓ should return a blob if asked nicely
    ✓ should return text if asked nicely
    ✓ should return status text

  🍂 defaults & instances
    ✓ should allow creating a new instance
    ✓ should allow passing empty options
    ✓ should allow buffer to be posted
    ✓ should set content-type to application/json by default, for buffer
    mtls
      ✓ uses HTTPS agent if cert and key provided, on first request
      ✓ uses HTTPS agent if cert and key provided, on subsequent requests

  📝 main exports
    ✓ should export all the types

  🛸 retry & exponential backoff
    ✓ should provide an expected set of defaults (2116ms)
    ✓ should retry on 500 on the main export (106ms)
    ✓ should not retry on a post
    ✓ should not retry if user aborted request
    ✓ should retry at least the configured number of times (2118ms)
    ✓ should not retry more than configured (107ms)
    ✓ should not retry on 4xx errors
    ✓ should retain the baseUrl on retry (107ms)
    ✓ should not retry if retries set to 0
    ✓ should notify on retry attempts (108ms)
    ✓ accepts async onRetryAttempt handler (107ms)
    ✓ should support overriding the shouldRetry method
    ✓ should support overriding the shouldRetry method with a promise
    ✓ should retry on ENOTFOUND (106ms)
    ✓ should retry on ETIMEDOUT (107ms)
    ✓ should allow configuring noResponseRetries
    ✓ should delay the initial retry by 100ms by default (107ms)
    ✓ should respect the retryDelay if configured (508ms)


  66 passing (6s)

-----------------|---------|----------|---------|---------|-------------------
File             | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s 
-----------------|---------|----------|---------|---------|-------------------
All files        |   96.08 |    87.35 |      96 |   96.08 |                   
 gaxios          |      50 |       20 |       0 |      50 |                   
  .mocharc.js    |   79.31 |       25 |     100 |   79.31 | 21-22,24-25,27-28 
  .prettierrc.js |       0 |        0 |       0 |       0 | 1-17              
 gaxios/src      |   98.92 |    89.34 |     100 |   98.92 |                   
  common.ts      |     100 |      100 |     100 |     100 |                   
  gaxios.ts      |   97.75 |    84.61 |     100 |   97.75 | 287-294           
  index.ts       |     100 |      100 |     100 |     100 |                   
  retry.ts       |     100 |      100 |     100 |     100 |                   
-----------------|---------|----------|---------|---------|-------------------
I am package git-pull-or-clone .....

> git-pull-or-clone@2.0.2 test
> standard && DEBUG=git-pull-or-clone tape test/*.js

TAP version 13
# remove tmp folder
# git clone
ok 1 null
# git pull
Already up to date.
ok 2 null
# git pull without depth limit
Already up to date.
ok 3 null
# git pull with invalid depth
ok 4 should throw
# git clone shouldnt allow command injection, via attack vector one
ok 5 /tmp/pwn3 should not exist, potential security vulnerability detected
ok 6 null
# git clone shouldnt allow command injection, via attack vector two
ok 7 /tmp/pwn4 should not exist, potential security vulnerability detected
ok 8 null

1..8
# tests 8
# pass  8

# ok

I am package git-username .....

> git-username@1.0.0 test
> mocha



  username
    ✓ should return the username from a git remote origin url
    ✓ should return null when not found
    ✓ should return throw an error when not found and options.strict is true


  3 passing (13ms)

I am package gradient-string .....

> gradient-string@2.0.2 test
> cross-env FORCE_COLOR=1 c8 ava


  [32m✔[39m throw error if wrong gradient arguments
  [32m✔[39m do not throw error if nothing to color
  [32m✔[39m throw error if options is not an object
  [32m✔[39m throw error if interpolation is not a string
  [32m✔[39m throw error if hsvSpin is not a string, but only if interpolation is HSV
  [32m✔[39m works fine
  [32m✔[39m varargs syntax equal to array syntax
  [32m✔[39m supports aliases
  [32m✔[39m multiline option works the same way on one line strings
  [32m✔[39m multiline option works fine
  [32m✔[39m case insensitive options
  [90m─[39m

  [32m11 tests passed[39m
----------|---------|----------|---------|---------|-------------------
File      | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s 
----------|---------|----------|---------|---------|-------------------
[32;1mAll files[0m | [32;1m    100[0m | [32;1m   96.55[0m | [32;1m    100[0m | [32;1m    100[0m | [33;1m                 [0m 
[32;1m index.js[0m | [32;1m    100[0m | [32;1m   96.55[0m | [32;1m    100[0m | [32;1m    100[0m | [33;1m11               [0m 
----------|---------|----------|---------|---------|-------------------
I am package grant .....

> grant@5.4.21 test
> npm run test:ci


> grant@5.4.21 test:ci
> npx mocha --recursive

I am package gray-matter .....

> gray-matter@4.0.3 test
> mocha



  gray-matter
    ✓ should work with empty front-matter
    ✓ should add content with empty front matter to file.empty
    ✓ should update file.isEmpty to true
    ✓ should work when front-matter has comments

  gray-matter (windows carriage returns)
    ✓ should extract YAML front matter
    ✓ should cache orig string as a buffer on the "orig property"
    ✓ should throw parsing errors
    ✓ should throw an error when a string is not passed:
    ✓ should return an object when the string is 0 length:
    ✓ should extract YAML front matter and content
    ✓ should use a custom delimiter as a string.
    ✓ should use custom delimiters as an array.
    ✓ should correctly identify delimiters and ignore strings that look like delimiters.
    ✓ should correctly parse a string that only has an opening delimiter
    ✓ should not try to parse a string has content that looks like front-matter.

  .excerpt
    ✓ should get an excerpt after front matter
    ✓ should not get excerpt when disabled
    ✓ should use a custom separator
    ✓ should use a custom separator when no front-matter exists
    ✓ should use a custom function to get excerpt

  gray-matter
    ✓ should extract YAML front matter
    ✓ should cache original string as a buffer on the "orig property"
    ✓ extra characters should throw parsing errors
    ✓ boolean yaml types should still return the empty object
    ✓ string yaml types should still return the empty object
    ✓ number yaml types should still return the empty object
    ✓ should throw an error when a string is not passed:
    ✓ should return an object when the string is 0 length:
    ✓ should extract YAML front matter and content
    ✓ should use a custom delimiter as a string.
    ✓ should use custom delimiters as an array.
    ✓ should correctly identify delimiters and ignore strings that look like delimiters.
    ✓ should correctly parse a string that only has an opening delimiter
    ✓ should not try to parse a string has content that looks like front-matter.

  .language
    ✓ should detect the name of the language to parse
    ✓ should work around whitespace

  .read
    ✓ should extract YAML front matter from files with content.
    ✓ should parse complex YAML front matter.
    ✓ should return an object when a file is empty.
    ✓ should return an object when no front matter exists.
    ✓ should parse YAML files directly

  .test
    ✓ should return `true` if the string has front-matter:

  parse coffee
    ✓ should throw an error when coffee cannot be parsed
    ✓ should parse coffee front matter
    ✓ should eval functions in coffee front matter
    ✓ should eval functions in auto-detected coffee front matter
    ✓ should detect "coffee" as the language
    ✓ should detect "coffeescript" as the language

  parse cson:
    ✓ should parse CSON front matter.
    ✓ should evaluate functions in CSON front matter.
    ✓ should evaluate functions in auto-detected CSON front matter.
    ✓ should auto-detect cson as the language.

  custom parser:
    ✓ should allow a custom parser to be registered:

  parse javascript:
    ✓ should parse front matter when options.lang is javascript
    ✓ should parse front matter when options.language is js
    ✓ should eval functions
    ✓ should detect "javascript" after the first delimiter

  parse json:
    ✓ should parse JSON front matter.
    ✓ should auto-detect JSON as the language.

  parse TOML:
    ✓ should parse toml front matter.
    ✓ should auto-detect TOML as the language.
    ✓ should throw on TOML syntax errors

  parse YAML:
    ✓ should parse YAML
    ✓ should parse YAML with closing ...
    ✓ should parse YAML front matter
    ✓ should detect YAML as the language with no language defined after the first fence
    ✓ should detect YAML as the language
    ✓ should use safeLoad when specified

  .stringify
    ✓ should stringify front-matter from a file object
    ✓ should stringify from a string
    ✓ should use custom delimiters to stringify
    ✓ should stringify a file object
    ✓ should stringify an excerpt
    ✓ should not add an excerpt if it already exists

  vinyl files
    ✓ should take a vinyl file


  75 passing (112ms)

I am package gulp-autoprefixer .....

> gulp-autoprefixer@8.0.0 test
> xo && ava

I am package gulp-changed .....

> gulp-changed@4.0.3 test
> xo && ava

I am package gulp-chmod .....

> gulp-chmod@3.0.0 test
> xo && mocha

I am package gulp-debug .....

> gulp-debug@4.0.0 test
> xo && ava

I am package gulp-filter .....

> gulp-filter@7.0.0 test
> xo && mocha

I am package gulp-hb .....

> gulp-hb@8.0.0 test
> nyc ava -v

----------|----------|----------|----------|----------|-------------------|
File      |  % Stmts | % Branch |  % Funcs |  % Lines | Uncovered Line #s |
----------|----------|----------|----------|----------|-------------------|
All files |        0 |        0 |        0 |        0 |                   |
----------|----------|----------|----------|----------|-------------------|
I am package gulp-html-replace .....

> gulp-html-replace@1.6.2 test
> mocha

I am package gulp-jasmine .....

> gulp-jasmine@4.0.0 test
> xo && ava

I am package gulp-nunjucks .....

> gulp-nunjucks@5.1.0 test
> xo && ava

I am package gulp-size .....

> gulp-size@4.0.1 test
> xo && mocha

I am package gulp-template .....

> gulp-template@5.0.0 test
> xo && mocha test.js

I am package gulp-zip .....

> gulp-zip@5.1.0 test
> xo && ava

I am package i18next-http-backend .....

> i18next-http-backend@2.1.1 test
> npm run lint && npm run build && npm run test:fetch && npm run test:xmlhttpreq && npm run test:typescript


> i18next-http-backend@2.1.1 lint
> eslint .


> i18next-http-backend@2.1.1 build
> npm run compile && npm run browser


> i18next-http-backend@2.1.1 compile
> npm run compile:esm && npm run compile:cjs


> i18next-http-backend@2.1.1 compile:esm
> rm -rf esm && mkdir esm && BABEL_ENV=esm babel lib -d esm && cp lib/getFetch.cjs esm/getFetch.cjs && rm -f esm/getFetch.js && node -e "fs.writeFileSync('esm/getFetch.cjs', fs.readFileSync('esm/getFetch.cjs').toString().replace('/* eslint-disable no-var, no-undef */\n', ''))"

Successfully compiled 4 files with Babel (1375ms).

> i18next-http-backend@2.1.1 compile:cjs
> rm -rf cjs && mkdir cjs && BABEL_ENV=cjs babel lib -d cjs && echo '{"type":"commonjs"}' > cjs/package.json && cp lib/getFetch.cjs cjs/getFetch.js && node -e "fs.writeFileSync('cjs/getFetch.js', fs.readFileSync('cjs/getFetch.js').toString().replace('/* eslint-disable no-var, no-undef */\n', ''))" && node -e "fs.writeFileSync('cjs/request.js', fs.readFileSync('cjs/request.js').toString().replace('getFetch.cjs', 'getFetch.js'))"

Successfully compiled 4 files with Babel (673ms).

> i18next-http-backend@2.1.1 browser
> browserify --ignore cross-fetch --standalone i18nextHttpBackend cjs/index.js -o i18nextHttpBackend.js && uglifyjs i18nextHttpBackend.js --compress --mangle -o i18nextHttpBackend.min.js


> i18next-http-backend@2.1.1 test:fetch
> mocha test -R spec --exit --experimental-modules



  BackendConnector basic load using fetch
JSON Server is running
    #load
      ✔ should load data

  http backend using fetch
    #read
      ✔ should load data
[0mGET /locales/en/notexisting [33m404[0m 2.226 ms - 161[0m
      ✔ should throw error on not existing file
      ✔ should throw error on non json file
      ✔ should load data on a stringified json file
      ✔ should load json5 data
      ✔ should load custom parser data
    with loadPath function
      #read
        ✔ should load data
    with loadPath function (promise)
      #read
        ✔ should load data
    with custom request option
      #read
        ✔ should read data
      #create
        ✔ should write data
    with loadPath function returning falsy
      #read
        ✔ should not load data
    with addPath function
      #create
        ✔ should write data

  request fetch
    #missing
      ✔ should load data
    #load with queryStringParams
      ✔ should load data


  15 passing (141ms)


> i18next-http-backend@2.1.1 test:xmlhttpreq
> mocha test -R spec --require test/fixtures/xmlHttpRequest.cjs --exit --experimental-modules



  BackendConnector basic load using XMLHttpRequest
JSON Server is running
    #load
      ✔ should load data

  http backend using XMLHttpRequest
    #read
      ✔ should load data
[0mGET /locales/en/notexisting [33m404[0m 1.949 ms - 161[0m
      ✔ should throw error on not existing file
      ✔ should throw error on non json file
      ✔ should load data on a stringified json file
      ✔ should load json5 data
      ✔ should load custom parser data
    with loadPath function
      #read
        ✔ should load data
    with loadPath function (promise)
      #read
        ✔ should load data
    with custom request option
      #read
        ✔ should read data
      #create
        ✔ should write data
    with loadPath function returning falsy
      #read
        ✔ should not load data
    with addPath function
      #create
        ✔ should write data

  request XMLHttpRequest
    #missing
      ✔ should load data
    #load with queryStringParams
      ✔ should load data


  15 passing (108ms)


> i18next-http-backend@2.1.1 test:typescript
> tslint --project tsconfig.json && tsd

I am package ink-big-text .....

> ink-big-text@1.2.0 pretest
> npm run build


> ink-big-text@1.2.0 build
> babel index.js --out-file=dist.js


> ink-big-text@1.2.0 test
> xo && ava


  test.js:8:2
  ⚠  8:2  Unexpected todo comment.  no-warning-comments

  1 warning

  ✔ render (562ms)

  1 test passed

I am package ink-link .....

> ink-link@2.0.1 pretest
> npm run build


> ink-link@2.0.1 build
> babel index.js --out-file=dist.js


> ink-link@2.0.1 test
> xo && ava && tsd


  ✖ render Did not match snapshot
  ✔ render fallback (340ms)
  ✔ exclude fallback if disabled (302ms)
  ✔ include fallback if explicitly enabled (387ms)

  1 test failed

  render

  /data/js-variants/multee/VariantsPureDep/ink-link/variant_files/ink-link/test.js:30
I am package is-reachable .....

> is-reachable@5.2.1 test
> xo && ava test.js && tsd


  ✔ with impossible timeout
  ✔ unreachable hostname
  ✔ unknown service
  ✔ hostname and port
  ✔ hostname
  ✔ ip
  ✔ imap host and port
  ✔ http server on custom port
  ✔ ip and protocol (127ms)
  ✔ multiple https urls (149ms)
  ✔ with timeout (145ms)
  ✔ unreachable pathname (164ms)
  ✔ unreachable http server on custom port (3.2s)

  13 tests passed

I am package iterator-stream .....

> level-iterator-stream@5.0.0 test
> standard && hallmark && (nyc -s node test.js | faucet) && nyc report

I am package jsdoc-api .....

> jsdoc-api@8.0.0 test
> test-runner --max-file-concurrency 1 test/*.js

I am package level .....

> level@8.0.0 test
> standard && ts-standard *.ts && nyc node test.js

----------|---------|----------|---------|---------|-------------------
File      | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s 
----------|---------|----------|---------|---------|-------------------
All files |     100 |      100 |     100 |     100 |                   
 index.js |     100 |      100 |     100 |     100 |                   
----------|---------|----------|---------|---------|-------------------
I am package level-rocksdb .....

> level-rocksdb@5.0.0 test
> standard && hallmark && nyc node test.js

I am package levelup .....

> levelup@5.1.1 test
> standard && hallmark && (nyc -s node test/self.js | faucet) && nyc report

  /data/js-variants/multee/VariantsPureDep/levelup/variant_files/levelup/test/common.js:15:5: Expected property shorthand. (object-shorthand) (warning)
  /data/js-variants/multee/VariantsPureDep/levelup/variant_files/levelup/test/common.js:16:5: Expected property shorthand. (object-shorthand) (warning)
  /data/js-variants/multee/VariantsPureDep/levelup/variant_files/levelup/test/self.js:11:3: Expected property shorthand. (object-shorthand) (warning)
  /data/js-variants/multee/VariantsPureDep/levelup/variant_files/levelup/test/self.js:23:3: Expected property shorthand. (object-shorthand) (warning)
I am package markdown-toc .....

> markdown-toc@1.2.0 test
> mocha

I am package markdownlint .....

> markdownlint@0.27.0 test
> ava test/markdownlint-test.js test/markdownlint-test-config.js test/markdownlint-test-custom-rules.js test/markdownlint-test-helpers.js test/markdownlint-test-result-object.js test/markdownlint-test-scenarios.js


  ✔ markdownlint-config › configSingleSync
  ✔ markdownlint-config › configAbsoluteSync
  ✔ markdownlint-config › configTildeSync
  ✔ markdownlint-config › configMultipleSync
  ✔ markdownlint-config › configBadFileSync
  ✔ markdownlint-config › configBadChildFileSync
  ✔ markdownlint-config › configBadJsonSync
  ✔ markdownlint-config › configBadChildJsonSync
  ✔ markdownlint-config › configSingleYamlSync
  ✔ markdownlint-config › configMultipleYamlSync
  ✔ markdownlint-config › configMultipleHybridSync
  ✔ markdownlint-config › configCustomFileSystemSync
  ✔ markdownlint-config › configBadHybridSync
  ✔ markdownlint-config › configCustomFileSystem (120ms)
  ✔ markdownlint-config › configCustomFileSystemPromise
  ✔ markdownlint-config › configBadFile (115ms)
  ✔ markdownlint-config › configBadFilePromise
  ✔ markdownlint-config › configSingle (150ms)
  ✔ markdownlint-config › configAbsolute (147ms)
  ✔ markdownlint-config › configTilde (147ms)
  ✔ markdownlint-config › configBadJson (140ms)
  ✔ markdownlint-config › configSingleYaml (140ms)
  ✔ markdownlint-config › configBadHybrid
  ✔ markdownlint-config › configSinglePromise
  ✔ markdownlint-config › configBadChildFile (147ms)
  ✔ markdownlint-config › configBadChildPackage (146ms)
  ✔ markdownlint-config › configBadChildJson (148ms)
  ✔ markdownlint-config › configMultipleWithRequireResolve (157ms)
  ✔ markdownlint-config › configMultiple (161ms)
  ✔ markdownlint-config › configMultipleYaml (133ms)
  ✔ markdownlint-config › configMultipleHybrid (133ms)
  ✔ markdownlint-helpers › clearHtmlCommentTextValid
  ✔ markdownlint-helpers › clearHtmlCommentTextInvalid
  ✔ markdownlint-helpers › clearHtmlCommentTextNonGreedy
  ✔ markdownlint-helpers › clearHtmlCommentTextEmbedded
  ✔ markdownlint-helpers › unescapeMarkdown
  ✔ markdownlint-helpers › isBlankLine
  ✔ markdownlint-helpers › includesSorted
  ✔ markdownlint-helpers › forEachInlineCodeSpan
  ✔ markdownlint-helpers › getPreferredLineEnding
  ✔ markdownlint-helpers › applyFix
  ✔ markdownlint-helpers › applyFixes
  ✔ markdownlint-helpers › forEachLink
  ✔ markdownlint-helpers › htmlElementRanges
  ✔ markdownlint-helpers › expandTildePath
  ✔ markdownlint-helpers › urlFe
  ✔ markdownlint-helpers › getReferenceLinkImageData().shortcuts
  ✔ markdownlint-result-object › resultFormattingSyncV0
  ✔ markdownlint-result-object › resultObjectToStringNotEnumerable (115ms)
  ✘ [fail]: markdownlint-result-object › resultFormattingV3 Rejected promise returned by test
  ✔ markdownlint-result-object › onePerLineResultVersion0
  ✔ markdownlint-result-object › onePerLineResultVersion1
  ✔ markdownlint-result-object › onePerLineResultVersion2
  ✔ markdownlint-result-object › manyPerLineResultVersion3
  ✔ markdownlint-result-object › frontMatterResultVersion3
  ✔ markdownlint-result-object › resultFormattingV2
  ✔ markdownlint-result-object › resultFormattingV0 (134ms)
  ✔ markdownlint-result-object › resultFormattingV1
  ✔ markdownlint-scenarios › MD022-MD030.md (252ms)
  ✔ markdownlint-scenarios › MD030-warning-message.md (258ms)
  ✔ markdownlint-scenarios › MD051-MD060.md (267ms)
  ✔ markdownlint-scenarios › atx-heading-spacing-trailing-spaces.md (280ms)
  ✔ markdownlint-scenarios › backslashes-and-backticks.md (283ms)
  ✔ markdownlint-scenarios › bare-urls.md (301ms)
  ✔ markdownlint-scenarios › blanks-around-fences-in-lists.md (320ms)

  Uncaught exception in test/markdownlint-test-scenarios.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  ✔ markdownlint-scenarios › blanks-around.md (335ms)
  ✔ markdownlint-scenarios › blockquote-headings.md (356ms)
  ✔ markdownlint-scenarios › blockquote-spaces-nested.md (374ms)

  Uncaught exception in test/markdownlint-test-scenarios.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  Uncaught exception in test/markdownlint-test-scenarios.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  Uncaught exception in test/markdownlint-test-scenarios.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  ✔ markdownlint-scenarios › code-block-in-list.md (385ms)
  ✔ markdownlint-scenarios › code-block-trailing-spaces.md (389ms)
  ✔ markdownlint-scenarios › code-block-with-tabs.md (396ms)
  ✔ markdownlint-scenarios › code-blocks-and-spans.md (402ms)
  ✔ markdownlint-scenarios › byte-order-marker-utf8.md (408ms)
  ✔ markdownlint-scenarios › code-with-tabs-allowed.md (413ms)
  ✔ markdownlint-scenarios › code-fences-in-blockquotes.md (417ms)
  ✔ markdownlint-scenarios › code-with-tabs-blocked.md (424ms)

  Uncaught exception in test/markdownlint-test-scenarios.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  ✔ markdownlint-scenarios › code_block_dollar.md (430ms)
  ✔ markdownlint-scenarios › code_block_dollar_fence.md (436ms)

  Uncaught exception in test/markdownlint-test-scenarios.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  Uncaught exception in test/markdownlint-test-scenarios.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  Uncaught exception in test/markdownlint-test-scenarios.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  Uncaught exception in test/markdownlint-test-scenarios.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  ✔ markdownlint-scenarios › custom-rules.md (448ms)

  Uncaught exception in test/markdownlint-test-scenarios.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  ✔ markdownlint-scenarios › emoji-headings.md (459ms)

  Uncaught exception in test/markdownlint-test-scenarios.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  Uncaught exception in test/markdownlint-test-scenarios.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  ✔ markdownlint-scenarios › empty-links.md (475ms)
  ✔ markdownlint-scenarios › empty_doc.md (478ms)

  Uncaught exception in test/markdownlint-test-scenarios.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  ✔ markdownlint-scenarios › fenced-code-unmatched.md (482ms)
  ✔ markdownlint-scenarios › fenced_code_blocks_in_lists.md (486ms)

  Uncaught exception in test/markdownlint-test-scenarios.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  ✔ markdownlint-scenarios › fenced_code_with_nesting.md (502ms)
  ✔ markdownlint-scenarios › first_heading_good_atx.md (507ms)
  ✔ markdownlint-scenarios › first_line_top_level_heading_atx.md (510ms)
  ✔ markdownlint-scenarios › first_heading_good_setext.md (513ms)
  ✔ markdownlint-scenarios › first_line_top_level_heading_setext.md (516ms)

  Uncaught exception in test/markdownlint-test-scenarios.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  ✔ markdownlint-scenarios › fixing-with-front-matter.md (525ms)
  ✔ markdownlint-scenarios › front-matter-empty.md (528ms)
  ✔ markdownlint-scenarios › front-matter-no-crlf.md (530ms)
  ✔ markdownlint-scenarios › front-matter-title-json.md (534ms)
  ✔ markdownlint-scenarios › front-matter-title-json-spaces.md (536ms)
  ✔ markdownlint-scenarios › front-matter-title-pandoc-spaces.md (538ms)
  ✔ markdownlint-scenarios › front-matter-title-pandoc.md (540ms)
  ✔ markdownlint-scenarios › front-matter-title-toml-spaces.md (542ms)
  ✔ markdownlint-scenarios › front-matter-title-toml.md (544ms)
  ✔ markdownlint-scenarios › front-matter-with-dashes.md (547ms)
  ✔ markdownlint-scenarios › front-matter-with-disable-next-line.md (554ms)
  ✔ markdownlint-scenarios › front-matter.md (557ms)
  ✔ markdownlint-scenarios › github-footnote-syntax.md (562ms)
  ✔ markdownlint-scenarios › h1-image-as-top-level-heading.md (564ms)
  ✔ markdownlint-scenarios › h2-as-top-level-heading.md (567ms)
  ✔ markdownlint-scenarios › h3-as-top-level-heading.md (569ms)
  ✔ markdownlint-scenarios › h1-as-top-level-heading.md (571ms)
  ✔ markdownlint-scenarios › heading_duplicate_content.md (574ms)
  ✔ markdownlint-scenarios › heading_duplicate_content_no_different_nesting.md (576ms)
  ✔ markdownlint-scenarios › heading_multiple_toplevel.md (580ms)
  ✔ markdownlint-scenarios › heading_trailing_punctuation.md (589ms)
  ✔ markdownlint-scenarios › headings-with-html-entities.md (595ms)
  ✔ markdownlint-scenarios › headings-with-invalid-spaces.md (602ms)
  ✔ markdownlint-scenarios › headings-without-content.md (605ms)
  ✔ markdownlint-scenarios › headings_good.md (607ms)
  ✔ markdownlint-scenarios › headings_good_with_issue_numbers.md (610ms)
  ✔ markdownlint-scenarios › headings_surrounding_space_atx.md (613ms)
  ✔ markdownlint-scenarios › headings_surrounding_space_setext.md (618ms)
  ✔ markdownlint-scenarios › headings_bad.md (622ms)
  ✔ markdownlint-scenarios › hr-in-blockquote-dash.md (625ms)
  ✔ markdownlint-scenarios › hr-in-blockquote-under.md (628ms)

  Uncaught exception in test/markdownlint-test-scenarios.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  ✔ markdownlint-scenarios › hr-style-custom.md (633ms)
  ✔ markdownlint-scenarios › html-comment-in-list-item.md (638ms)
  ✔ markdownlint-scenarios › hr-in-blockquote-star.md (644ms)
  ✔ markdownlint-scenarios › html-comment-in-code-and-table.md (651ms)
  ✔ markdownlint-scenarios › html-comment-in-markdown-table.md (660ms)

  Uncaught exception in test/markdownlint-test-scenarios.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  ✔ markdownlint-scenarios › ignore-comments.md (675ms)
  ✔ markdownlint-scenarios › hugo-quickstart-example-json.md (678ms)
  ✔ markdownlint-scenarios › inconsistent_bullet_indent_same_level.md (681ms)

  Uncaught exception in test/markdownlint-test-scenarios.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  Uncaught exception in test/markdownlint-test-scenarios.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  Uncaught exception in test/markdownlint-test-scenarios.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  ✔ markdownlint-scenarios › inline-configure-file-invalid.md (690ms)
  ✔ markdownlint-scenarios › inline-configure-file-multiple-instances.md (698ms)
  ✔ markdownlint-scenarios › inline-configure-file-multiple-lines.md (701ms)
  ✔ markdownlint-scenarios › inline-configure-file-single-line.md (703ms)

  Uncaught exception in test/markdownlint-test-scenarios.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  Uncaught exception in test/markdownlint-test-scenarios.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  Uncaught exception in test/markdownlint-test-scenarios.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  ✔ markdownlint-scenarios › invalid-ul-style-style.md (713ms)
  ✔ markdownlint-scenarios › jekyll_post_2.md (716ms)
  ✔ markdownlint-scenarios › jekyll_post.md (718ms)
  ✔ markdownlint-scenarios › line-breaks-inside-code-spans.md (724ms)

  Uncaught exception in test/markdownlint-test-scenarios.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  ✔ markdownlint-test › simpleSync (184ms)
  ✔ markdownlint-test › missingCallback (138ms)
  ✔ markdownlint-test › badFileSync (137ms)
  ✔ markdownlint-test › customFileSystemSync (132ms)
  ✔ markdownlint-test › validateJsonUsingConfigSchemaStrict (126ms)
  ✔ markdownlint-test › validateConfigSchemaAllowsUnknownProperties
  ✔ markdownlint-test › validateConfigSchemaAppliesToUnknownProperties
  ✔ markdownlint-test › allBuiltInRulesHaveValidUrl
  ✔ markdownlint-test › someCustomRulesHaveValidUrl
  ✘ [fail]: markdownlint-test › token-map-spans Error thrown in test
  ✔ markdownlint-test › getVersion
  ✔ markdownlint-test › constants
  ✔ markdownlint-test › simpleAsync (208ms)
  ✔ markdownlint-test › stringInputLineEndings (179ms)
  ✔ markdownlint-test › inputOnlyNewline (167ms)
  ✔ markdownlint-test › nullFrontMatter (154ms)
  ✔ markdownlint-test › customFrontMatter (152ms)
  ✔ markdownlint-test › noInlineConfig (150ms)
  ✔ markdownlint-test › missingOptions (139ms)
  ✔ markdownlint-test › missingFilesAndStrings (139ms)
  ✔ markdownlint-test › missingStringValue (135ms)
  ✔ markdownlint-test › customFileSystemAsync (131ms)
  ✔ markdownlint-test › markdownItPluginsSingle
  ✘ [fail]: markdownlint-test › markdownItPluginsMultiple Rejected promise returned by test
  ✔ markdownlint-test › markdownItPluginsMathjax
  ✔ markdownlint-test › markdownItPluginsMathjaxIssue166
  ✔ markdownlint-test › Pandoc footnote via footnote plugin
  ✔ markdownlint-test › simplePromise (186ms)
  ✔ markdownlint-test › configParsersInvalid
  ✔ markdownlint-test › configParsersJSON
  ✔ markdownlint-test › configParsersYAML
  ✔ markdownlint-test › styleFiles (167ms)
  ✔ markdownlint-test › badFile (148ms)
  ✔ markdownlint-test › badFilePromise (145ms)
  ✔ markdownlint-scenarios › links.md (734ms)
  ✔ markdownlint-scenarios › lint-javascript.md (739ms)

  Uncaught exception in test/markdownlint-test-scenarios.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › Array.link (node_modules/markdown-it/lib/rules_inline/link.js:141:21)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)

  Uncaught exception in test/markdownlint-test-scenarios.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  Uncaught exception in test/markdownlint-test-scenarios.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  ✔ markdownlint-test › defaultTrue (199ms)
  ✔ markdownlint-scenarios › list-indentation-start-indented-no-indent.md (764ms)
  ✔ markdownlint-test › defaultFalse (201ms)
  ✔ markdownlint-test › defaultUndefined (204ms)
  ✔ markdownlint-test › disableRules (205ms)
  ✔ markdownlint-test › enableRules (209ms)
  ✔ markdownlint-custom-rules › customRulesBadProperty (233ms)
  ✔ markdownlint-custom-rules › customRulesThrowForFileSync (209ms)
  ✔ markdownlint-custom-rules › customRulesThrowForStringSync (195ms)
  ✔ markdownlint-custom-rules › customRulesOnErrorNullSync (189ms)
  ✔ markdownlint-custom-rules › customRulesOnErrorBad (186ms)
  ✔ markdownlint-custom-rules › customRulesOnErrorInvalid (147ms)
  ✔ markdownlint-custom-rules › customRulesOnErrorValid (120ms)
  ✔ markdownlint-custom-rules › customRulesOnErrorInvalidHandledSync
  ✔ markdownlint-custom-rules › customRulesAsyncThrowsInSyncContext
  ✔ markdownlint-custom-rules › customRulesThrowStringFilesUnhandledSync
  ✔ markdownlint-custom-rules › customRulesThrowStringFilesHandledSync
  ✔ markdownlint-custom-rules › customRulesThrowStringStringsUnhandledSync
  ✔ markdownlint-custom-rules › customRulesThrowStringStringsHandledSync
  ✔ markdownlint-custom-rules › customRulesThrowErrorFilesUnhandledSync
  ✔ markdownlint-custom-rules › customRulesThrowErrorFilesHandledSync
  ✔ markdownlint-custom-rules › customRulesThrowErrorStringsUnhandledSync
  ✔ markdownlint-custom-rules › customRulesThrowErrorStringsHandledSync
  ✔ markdownlint-custom-rules › customRulesNpmPackage (262ms)
  ✔ markdownlint-custom-rules › customRulesUsedNameName (218ms)
  ✔ markdownlint-custom-rules › customRulesUsedNameTag (214ms)
  ✔ markdownlint-custom-rules › customRulesUsedTagName (213ms)
  ✔ markdownlint-custom-rules › customRulesThrowForString (201ms)
  ✔ markdownlint-custom-rules › customRulesOnErrorNull (193ms)
  ✔ markdownlint-custom-rules › customRulesOnErrorLazy
  ✔ markdownlint-custom-rules › customRulesOnErrorModified
  ✔ markdownlint-custom-rules › customRulesOnErrorInvalidHandled
  ✔ markdownlint-custom-rules › customRulesStringName
  ✔ markdownlint-custom-rules › customRulesThrowStringStringsUnhandledAsync
  ✔ markdownlint-custom-rules › customRulesThrowStringStringsHandledAsync
  ✔ markdownlint-custom-rules › customRulesThrowErrorStringsUnhandledAsync
  ✔ markdownlint-custom-rules › customRulesThrowErrorStringsHandledAsync
  ✔ markdownlint-custom-rules › customRulesAsyncExceptionStringStringsUnhandled
  ✔ markdownlint-custom-rules › customRulesAsyncExceptionStringStringsHandled
  ✔ markdownlint-custom-rules › customRulesAsyncExceptionErrorStringsUnhandled
  ✔ markdownlint-custom-rules › customRulesAsyncExceptionErrorStringsHandled
  ✔ markdownlint-custom-rules › customRulesParamsAreStable
  ✔ markdownlint-custom-rules › customRulesAsyncIgnoresSyncReturn
  ✔ markdownlint-custom-rules › customRulesAsyncRejectStringStringsUnhandled
  ✔ markdownlint-custom-rules › customRulesAsyncRejectStringStringsHandled
  ✔ markdownlint-custom-rules › customRulesAsyncRejectErrorStringsUnhandled
  ✔ markdownlint-custom-rules › customRulesAsyncRejectErrorStringsHandled
  ✔ markdownlint-test › enableRulesMixedCase (211ms)
  ✔ markdownlint-test › disableTag (215ms)
  ✔ markdownlint-test › enableTag (217ms)
  ✔ markdownlint-test › enableTagMixedCase (222ms)

  Uncaught exception in test/markdownlint-test.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  Uncaught exception in test/markdownlint-test.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  ✔ markdownlint-scenarios › list-item-prefix-alignment.md (802ms)
  ✔ markdownlint-scenarios › list-syntax-in-paragraph-text.md (811ms)
  ✔ markdownlint-test › filesArrayNotModified (227ms)
  ✔ markdownlint-custom-rules › customRulesThrowForFile (247ms)
  ✔ markdownlint-scenarios › lists-with-commented-items.md (817ms)
  ✔ markdownlint-test › texmath test files with texmath plugin (118ms)
  ✔ markdownlint-scenarios › lists-in-blockquote.md (836ms)
  ✔ markdownlint-scenarios › lists-with-fenced-code.md (840ms)
  ✔ markdownlint-scenarios › long-lines-long-reference-definitions-stern.md (845ms)
  ✔ markdownlint-scenarios › lists-incomplete.md (851ms)
  ✔ markdownlint-scenarios › long-lines-long-reference-definitions-strict.md (854ms)

  Uncaught exception in test/markdownlint-test.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  ✔ markdownlint-scenarios › long-lines-long-reference-definitions.md (859ms)

  Uncaught exception in test/markdownlint-test-scenarios.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  Uncaught exception in test/markdownlint-test-scenarios.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  ✔ markdownlint-scenarios › markdown-extra-footnote.md (865ms)
  ✔ markdownlint-scenarios › md003-escaped-trailing-hash.md (871ms)
  ✔ markdownlint-scenarios › md004-list-items-in-blockquote.md (877ms)
  ✔ markdownlint-scenarios › md033-cannot-read-property-of-undefined.md (882ms)

  Uncaught exception in test/markdownlint-test-scenarios.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  Uncaught exception in test/markdownlint-test-scenarios.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  ✔ markdownlint-scenarios › md052-invalid-range-bug.md (889ms)
  ✔ markdownlint-scenarios › mixed_heading_types_atx.md (892ms)

  Uncaught exception in test/markdownlint-test.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  ✔ markdownlint-scenarios › mixed_heading_types_setext.md (895ms)
  ✔ markdownlint-scenarios › mixed_heading_types_atx_closed.md (902ms)
  ✔ markdownlint-scenarios › no-alt-text.md (908ms)
  ✔ markdownlint-scenarios › no_first_line_top_level_heading.md (910ms)
  ✔ markdownlint-scenarios › no_first_line_heading.md (913ms)

  Uncaught exception in test/markdownlint-test.js

  test/markdownlint-test.js:858

   857:       // @ts-ignore                                
   858:       for (const token of md.parse(contents, {})) {
   859:         if (                                       

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › readFile (test/markdownlint-test.js:858:30)

  ✔ markdownlint-scenarios › no-multiple-blanks.md (920ms)
  ✔ markdownlint-scenarios › ordered-list-item-prefix-one_or_ordered.md (929ms)
  ✔ markdownlint-scenarios › ordered-list-item-prefix-single-alternate.md (932ms)
  ✔ markdownlint-scenarios › pandoc-footnotes.md (940ms)
  ✔ markdownlint-test › validateConfigExampleJson (256ms)
  ✔ markdownlint-test › configParsersJSONC (227ms)
  ✔ markdownlint-test › configParsersTOML (223ms)
  ✔ markdownlint-scenarios › prettier-tab-width-2-default.md (950ms)

  Uncaught exception in test/markdownlint-test.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  ✔ markdownlint-scenarios › prettier-tab-width-4.md (957ms)
  ✔ markdownlint-scenarios › proper-names-links.md (963ms)
  ✔ markdownlint-scenarios › proper-names-substrings.md (967ms)

  Uncaught exception in test/markdownlint-test.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.strikethrough (node_modules/markdown-it/lib/rules_inline/strikethrough.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  Uncaught exception in test/markdownlint-test.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.strikethrough (node_modules/markdown-it/lib/rules_inline/strikethrough.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  Uncaught exception in test/markdownlint-test-scenarios.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:117:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › Array.link (node_modules/markdown-it/lib/rules_inline/link.js:141:21)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)

  ✔ markdownlint-scenarios › reference-links-ignored-definitions-empty.md (983ms)
  ✔ markdownlint-scenarios › reference-links-ignored-definitions.md (986ms)
  ✘ [fail]: markdownlint-scenarios › reversed-link-issue-with-markdownlint-12.md Rejected promise returned by test
  ✔ markdownlint-scenarios › short-headings.md (1s)

  Uncaught exception in test/markdownlint-test-scenarios.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  ✔ markdownlint-scenarios › simple-table.md (1s)

  Uncaught exception in test/markdownlint-test-scenarios.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  ✘ test/markdownlint-test.js exited with a non-zero exit code: 1

  Uncaught exception in test/markdownlint-test-scenarios.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › Array.link (node_modules/markdown-it/lib/rules_inline/link.js:141:21)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)

  Uncaught exception in test/markdownlint-test-scenarios.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  Uncaught exception in test/markdownlint-test-scenarios.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  Uncaught exception in test/markdownlint-test-scenarios.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:117:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › Array.link (node_modules/markdown-it/lib/rules_inline/link.js:141:21)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)

  Uncaught exception in test/markdownlint-test-scenarios.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  ✔ markdownlint-scenarios › sublist-bullet-style.md (1s)
  ✔ markdownlint-scenarios › table-issue-with-markdown-it-12.md (1s)
  ✔ markdownlint-scenarios › texmath-content-in-lists.md (1s)

  Uncaught exception in test/markdownlint-test-scenarios.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  Uncaught exception in test/markdownlint-test-scenarios.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  ✔ markdownlint-scenarios › trailing-spaces-in-lists-default.md (1s)
  ✔ markdownlint-scenarios › unclosed-html-comment.md (1s)

  Uncaught exception in test/markdownlint-test-scenarios.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  ✔ markdownlint-scenarios › unclosed-html-comment-in-code-span.md (1s)
  ✔ markdownlint-scenarios › unterminated-html-comment.md (1s)
  ✔ markdownlint-scenarios › validate-json.md (1s)

  Uncaught exception in test/markdownlint-test-scenarios.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  ✘ test/markdownlint-test-scenarios.js exited with a non-zero exit code: 1
  ✔ markdownlint-custom-rules › customRulesLintJavaScript (3.1s)

  Uncaught exception in test/markdownlint-test-custom-rules.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  Uncaught exception in test/markdownlint-test-custom-rules.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  Uncaught exception in test/markdownlint-test-custom-rules.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  ✔ markdownlint-custom-rules › customRulesThrowStringFilesUnhandledAsync (3.2s)
  ✔ markdownlint-custom-rules › customRulesThrowErrorFilesUnhandledAsync (3.1s)
  ✔ markdownlint-custom-rules › customRulesThrowStringFilesHandledAsync (3.2s)

  Uncaught exception in test/markdownlint-test-custom-rules.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  ✔ markdownlint-custom-rules › customRulesThrowErrorFilesHandledAsync (3.2s)
  ✔ markdownlint-custom-rules › customRulesAsyncExceptionStringFilesUnhandled (3.2s)
  ✔ markdownlint-custom-rules › customRulesAsyncExceptionErrorFilesUnhandled (3.2s)
  ✔ markdownlint-custom-rules › customRulesAsyncExceptionStringFilesHandled (3.2s)
  ✔ markdownlint-custom-rules › customRulesAsyncExceptionErrorFilesHandled (3.2s)
  ✔ markdownlint-custom-rules › customRulesAsyncRejectStringFilesUnhandled (3.1s)
  ✔ markdownlint-custom-rules › customRulesAsyncRejectStringFilesHandled (3.1s)
  ✔ markdownlint-custom-rules › customRulesAsyncRejectErrorFilesUnhandled (3.1s)
  ✔ markdownlint-custom-rules › customRulesAsyncRejectErrorFilesHandled (3.1s)
  ✔ markdownlint-custom-rules › customRulesAsyncDeferredStringStringsUnhandled (3.2s)
  ✔ markdownlint-custom-rules › customRulesAsyncReadFiles (3.2s)
  ✔ markdownlint-custom-rules › customRulesAsyncDeferredErrorStringsHandled (3.1s)
  ✔ markdownlint-custom-rules › customRulesAsyncDeferredStringStringsHandled (3.2s)
  ✔ markdownlint-custom-rules › customRulesAsyncDeferredErrorStringsUnhandled (3.2s)

  Uncaught exception in test/markdownlint-test-custom-rules.js

  TypeError: UNICODE_PUNCT_RE.test is not a function

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.strikethrough (node_modules/markdown-it/lib/rules_inline/strikethrough.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)

  ✘ test/markdownlint-test-custom-rules.js exited with a non-zero exit code: 1
  ─

  markdownlint-result-object › resultFormattingV3

  Rejected promise returned by test. Reason:

  TypeError {
    message: 'UNICODE_PUNCT_RE.test is not a function',
  }

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintWorker (lib/markdownlint.js:920:7)



  markdownlint-test › token-map-spans

  Error thrown in test:

  TypeError {
    message: 'UNICODE_PUNCT_RE.test is not a function',
  }

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintContentWrapper (lib/markdownlint.js:814:12)



  markdownlint-test › markdownItPluginsMultiple

  Rejected promise returned by test. Reason:

  TypeError {
    message: 'UNICODE_PUNCT_RE.test is not a function',
  }

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:116:49)
  › Array.strikethrough (node_modules/markdown-it/lib/rules_inline/strikethrough.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)
  › lintContent (lib/markdownlint.js:555:21)
  › lintWorker (lib/markdownlint.js:920:7)



  markdownlint-scenarios › reversed-link-issue-with-markdownlint-12.md

  Rejected promise returned by test. Reason:

  TypeError {
    message: 'UNICODE_PUNCT_RE.test is not a function',
  }

  › isPunctChar (node_modules/markdown-it/lib/common/utils.js:189:27)
  › StateInline.scanDelims (node_modules/markdown-it/lib/rules_inline/state_inline.js:117:49)
  › Array.emphasis (node_modules/markdown-it/lib/rules_inline/emphasis.js:17:19)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › Array.link (node_modules/markdown-it/lib/rules_inline/link.js:141:21)
  › ParserInline.tokenize (node_modules/markdown-it/lib/parser_inline.js:143:22)
  › ParserInline.parse (node_modules/markdown-it/lib/parser_inline.js:171:8)
  › Array.inline (node_modules/markdown-it/lib/rules_core/inline.js:10:23)
  › Core.process (node_modules/markdown-it/lib/parser_core.js:54:13)
  › MarkdownIt.parse (node_modules/markdown-it/lib/index.js:524:13)

  ─

  4 tests failed
  56 uncaught exceptions
I am package matrix .....

> dstructs-matrix@2.1.2 test
> mocha

I am package mem .....

> level-mem@6.0.1 test
> standard && hallmark && nyc node test.js

I am package memdown .....

> memdown@6.1.1 test
> standard && hallmark && (nyc -s node test.js | faucet) && nyc report

  /data/js-variants/multee/VariantsPureDep/memdown/variant_files/memdown/test.js:12:3: Expected property shorthand. (object-shorthand) (warning)
  /data/js-variants/multee/VariantsPureDep/memdown/variant_files/memdown/test.js:479:25: Expected property shorthand. (object-shorthand) (warning)
I am package merge-deep .....

> merge-deep@3.0.3 test
> mocha



  mergeDeep
    ✓ should merge object properties without affecting any object
    ✓ should do a deep merge
    ✓ should not merge strings
    ✓ should clone objects during merge
    ✓ should not merge an objects into an array
    ✓ should deep clone arrays during merge
    ✓ should union when both values are array
    ✓ should union when the first value is an array
    ✓ should uniquify array values
    ✓ should clone unioned arrays
    ✓ should copy source properties
    ✓ should clone arrays
    1) should clone RegExps
    2) should clone Dates
    ✓ should not clone objects created with custom constructor
    ✓ should not clone invalid keys
    ✓ should allow being used for custom constructors


  15 passing (47ms)
  2 failing

  1) mergeDeep should clone RegExps:
     AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:

{}

should loosely deep-equal

/test/g
      at Context.<anonymous> (test.js:122:12)
      at processImmediate (node:internal/timers:466:21)

  2) mergeDeep should clone Dates:
     AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:

{}

should loosely deep-equal

2023-04-12T12:19:11.763Z
      at Context.<anonymous> (test.js:128:12)
      at processImmediate (node:internal/timers:466:21)



I am package metalsmith-layouts .....

> @metalsmith/layouts@2.6.0 pretest
> npm run build


> @metalsmith/layouts@2.6.0 build
> microbundle --target node --no-sourcemap -f cjs,esm --strict --generateTypes=false

Build "@metalsmith/layouts" to lib:
      2.07 kB: index.cjs.gz
      1.76 kB: index.cjs.br
      1.92 kB: index.js.gz
      1.64 kB: index.js.br

> @metalsmith/layouts@2.6.0 test
> nyc mocha



  @metalsmith/layouts
    ✔ should apply a single layout to a single file (176ms)
    ✔ should apply a single layout to a single file with an async jstransformer
    ✔ should apply a single layout to multiple files
    ✔ should apply multiple layouts to multiple files
    ✔ should apply a default layout
    ✔ should override a default layout
    ✔ should apply a string pattern
    ✔ should apply an array of string patterns
    ✔ should ignore binary files
    ✔ should accept an alternate directory for layouts
    ✔ should process variables from the frontmatter
    ✔ should process variables from the metadata
    ✔ should override variables from the metadata with local ones
    ✔ should return an error when there are no valid files to process
    ✔ should not return an error when there are no valid files to process and suppressNoFilesError is true
    ✔ should return an error for an invalid pattern
    ✔ should ignore layouts without an extension
    ✔ should ignore layouts without a jstransformer
    ✔ should allow default layouts to be disabled from the frontmatter
    ✔ should prefix rendering errors with the filename


  20 passing (333ms)

-----------|---------|----------|---------|---------|-------------------
File       | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s 
-----------|---------|----------|---------|---------|-------------------
All files  |     100 |    96.55 |     100 |     100 |                   
 index.cjs |     100 |    96.55 |     100 |     100 | 9                 
-----------|---------|----------|---------|---------|-------------------
I am package method-override .....

> method-override@3.0.0 test
> mocha --check-leaks --reporter spec --bail test/



  methodOverride(getter)
    ✓ should not touch the method by default
    ✓ should use X-HTTP-Method-Override by default
    with query
      ✓ should work missing query
      ✓ should be case in-sensitive
      ✓ should ignore invalid methods
      ✓ should handle key referencing array
      ✓ should only work with POST
    with header
      ✓ should work missing header
      ✓ should be case in-sensitive
      ✓ should ignore invalid methods
      ✓ should handle multiple headers
      ✓ should set Vary header
      ✓ should set Vary header even with no override
    with function
      ✓ should work missing header
      ✓ should be case in-sensitive
      ✓ should ignore invalid methods
    given "options.methods"
      ✓ should allow other methods
      ✓ should allow all methods
      ✓ should not call getter when method not allowed


  19 passing (82ms)

I am package morgan .....

> morgan@1.10.0 test
> mocha --check-leaks --reporter spec --bail



  morgan()
    arguments
      ✓ should use default format
      format
        ✓ should accept format as format name
        ✓ should accept format as format string
        ✓ should accept format as function
        ✓ should reject format as bool
        back-compat
          ✓ should accept options object
          ✓ should accept format in options for back-compat
          ✓ should accept format function in options for back-compat
      stream
        ✓ should default to process.stdout
        ✓ should set stream to write logs to
    tokens
      :date
        ✓ should get current date in "web" format by default
        ✓ should get current date in "clf" format
        ✓ should get current date in "iso" format
        ✓ should get current date in "web" format
        ✓ should be blank for unknown format
      :http-version
        ✓ should be 1.0 or 1.1
      :req
        ✓ should get request properties
        ✓ should display all values of array headers
      :res
        ✓ should get response properties
        ✓ should display all values of array headers
      :remote-addr
        ✓ should get remote address
        ✓ should use req.ip if there
        ✓ should work on https server
        ✓ should work when connection: close
        ✓ should work when connection: keep-alive
        ✓ should work when req.ip is a getter
        ✓ should not fail if req.connection missing
      :remote-user
        ✓ should be empty if none present
        ✓ should support Basic authorization
        ✓ should be empty for empty Basic authorization user
      :response-time
        ✓ should be in milliseconds
        ✓ should have three digits by default
        ✓ should have five digits with argument "5"
        ✓ should have no digits with argument "0"
        ✓ should not include response write time (52ms)
        ✓ should be empty without hidden property
        ✓ should be empty before response
        ✓ should be empty if morgan invoked after response sent
      :status
        ✓ should get response status
        ✓ should not exist before response sent
        ✓ should not exist for aborted request
      :total-time
        ✓ should be in milliseconds
        ✓ should have three digits by default
        ✓ should have five digits with argument "5"
        ✓ should have no digits with argument "0"
        ✓ should include response write time (52ms)
        ✓ should be empty without hidden property
        ✓ should be empty before response
        ✓ should be empty if morgan invoked after response sent
      :url
        ✓ should get request URL
        ✓ should use req.originalUrl if exists
        ✓ should not exist for aborted request
    formats
      a function
        ✓ should log result of function
        ✓ should not log for undefined return
        ✓ should not log for null return
      a string
        ✓ should accept format as format string of tokens
        ✓ should accept text mixed with tokens
        ✓ should accept special characters
      combined
        ✓ should match expectations
      common
        ✓ should match expectations
      default
        ✓ should match expectations
      dev
        ✓ should not color 1xx
        ✓ should color 2xx green
        ✓ should color 3xx cyan
        ✓ should color 4xx yelow
        ✓ should color 5xx red
        with "immediate: true" option
          ✓ should not have color or response values
      short
        ✓ should match expectations
      tiny
        ✓ should match expectations
    with buffer option
      ✓ should flush log periodically (1002ms)
      ✓ should accept custom interval (203ms)
    with immediate option
      ✓ should not have value for :res
      ✓ should not have value for :response-time
      ✓ should not have value for :status
      ✓ should log before response
    with skip option
      ✓ should be able to skip based on request
      ✓ should be able to skip based on response

  morgan.compile(format)
    arguments
      format
        ✓ should be required
        ✓ should reject functions
        ✓ should reject numbers
        ✓ should compile a string into a function


  81 passing (2s)

I am package ms-rest-azure-js .....

> @azure/ms-rest-azure-js@2.1.0 test
> run-p test:tslint test:unit


> @azure/ms-rest-azure-js@2.1.0 test:unit
> nyc mocha


> @azure/ms-rest-azure-js@2.1.0 test:tslint
> tslint -p . -c tslint.json --exclude test/**/*.ts

I am package ms-rest-js .....

> @azure/ms-rest-js@2.6.4 test
> run-p test:tslint test:unit test:karma


> @azure/ms-rest-js@2.6.4 test:karma
> npm run build:test-browser && node ./node_modules/karma/bin/karma start karma.conf.ts --browsers ChromeNoSecurity --single-run


> @azure/ms-rest-js@2.6.4 test:tslint
> tslint -p .


> @azure/ms-rest-js@2.6.4 test:unit
> cross-env TS_NODE_FILES=true nyc mocha


> @azure/ms-rest-js@2.6.4 build:test-browser
> webpack --config webpack.testconfig.ts

I am package multileveldown .....

> multileveldown@5.0.1 test
> standard && hallmark && (nyc -s tape test/*.js | faucet) && nyc report

I am package multistream .....

> multistream@4.1.0 test
> standard && npm run test-node && npm run test-browser


> multistream@4.1.0 test-node
> tape test/*.js

I am package mysql .....

> mysql@2.18.1 test
> node test/run.js

1..198
not ok 1 test/unit/test-ConnectionConfig.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 2 test/unit/test-Mysql.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 3 test/unit/test-PoolConfig.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 4 test/integration/connection/test-bad-credentials.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 5 test/integration/connection/test-bulk-insert.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 6 test/integration/connection/test-change-user-charset.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 7 test/integration/connection/test-change-user-reset.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 8 test/integration/connection/test-connection-config-flags-affected-rows.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 9 test/integration/connection/test-connection-destroy.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 10 test/integration/connection/test-connection-thread-id.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 11 test/integration/connection/test-error-sqlmessage.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 12 test/integration/connection/test-insert-results.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 13 test/integration/connection/test-load-data-infile-disable.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 14 test/integration/connection/test-load-data-infile.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 15 test/integration/connection/test-multiple-statements-load-data-infile.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 16 test/integration/connection/test-multiple-statements-streaming.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 17 test/integration/connection/test-multiple-statements-with-error.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 18 test/integration/connection/test-multiple-statements.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 19 test/integration/connection/test-nested-tables-query.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 20 test/integration/connection/test-ping.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 21 test/integration/connection/test-procedure-with-multiple-selects.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 22 test/integration/connection/test-procedure-with-single-select.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 23 test/integration/connection/test-query-changed-rows.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 24 test/integration/connection/test-query-empty.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 25 test/integration/connection/test-query-escape-id.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 26 test/integration/connection/test-query-escaping.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 27 test/integration/connection/test-query.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 28 test/integration/connection/test-select-empty-string.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 29 test/integration/connection/test-send-and-receive-large-packets.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 30 test/integration/connection/test-send-and-receive-large-text.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 31 test/integration/connection/test-server-timeout-disconnect.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 32 test/integration/connection/test-statistics.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 33 test/integration/connection/test-timezones.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 34 test/integration/connection/test-transaction-commit.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 35 test/integration/connection/test-transaction-rollback.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 36 test/integration/connection/test-type-cast-null-fields.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 37 test/integration/connection/test-type-cast-query.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 38 test/integration/connection/test-type-casting.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 39 test/unit/connection/test-auth-no-old-password.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 40 test/integration/connection/test-zerofill-results.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 41 test/unit/connection/test-auth-no-password.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 42 test/unit/connection/test-auth-old-password.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 43 test/unit/connection/test-auth-password.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 44 test/unit/connection/test-auth-switch-native.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 45 test/unit/connection/test-auth-switch-unknown.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 46 test/unit/connection/test-callback-errors-are-not-caught.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 47 test/unit/connection/test-callback-primitive-errors-are-not-caught.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 48 test/unit/connection/test-change-database-fatal-error.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 49 test/unit/connection/test-change-user-auth-switch-unknown.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 50 test/unit/connection/test-change-user-auth-switch.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 51 test/unit/connection/test-change-user-before-connect.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 52 test/unit/connection/test-change-user-empty-queue.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 53 test/unit/connection/test-change-user-fatal-error.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 54 test/unit/connection/test-change-user-timeout.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 55 test/unit/connection/test-change-user.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 56 test/unit/connection/test-connect-domain.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 57 test/unit/connection/test-connect-error-event.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 58 test/unit/connection/test-connect-event.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 59 test/unit/connection/test-connect-no-domain.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 60 test/unit/connection/test-connect-timeout-only.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 61 test/unit/connection/test-connect-timeout.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 62 test/unit/connection/test-connection-error.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 63 test/unit/connection/test-connection-ssl-ciphers-unknown.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 64 test/unit/connection/test-connection-ssl-ciphers.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 65 test/unit/connection/test-connection-ssl-denied.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 66 test/unit/connection/test-connection-ssl-ignore.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 67 test/unit/connection/test-connection-ssl-max-version-accept.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 68 test/unit/connection/test-connection-ssl-max-version-reject.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 69 test/unit/connection/test-connection-ssl-min-version-accept.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 70 test/unit/connection/test-connection-ssl-min-version-reject.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 71 test/unit/connection/test-connection-ssl-reject.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 72 test/unit/connection/test-connection-ssl.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 73 test/unit/connection/test-connection-thread-id-error.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 74 test/unit/connection/test-connection-thread-id.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 75 test/unit/connection/test-custom-query-format.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 76 test/unit/connection/test-custom-type-cast.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 77 test/unit/connection/test-date-type-cast.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 78 test/unit/connection/test-datetime-type-cast.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 79 test/unit/connection/test-debug-exclude.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 80 test/unit/connection/test-debug-parser-error.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 81 test/unit/connection/test-debug.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 82 test/unit/connection/test-domain-implicit.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 83 test/unit/connection/test-domains.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 84 test/unit/connection/test-double-connect.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 85 test/unit/connection/test-drain-event.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 86 test/unit/connection/test-end-event.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 87 test/unit/connection/test-enqueue-event.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 88 test/unit/connection/test-error-event.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 89 test/unit/connection/test-error-trace-bad-stack.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 90 test/unit/connection/test-error-trace-no-stack.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 91 test/unit/connection/test-error-trace.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 92 test/unit/connection/test-exception-safety.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 93 test/unit/connection/test-fatal-connect-error.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 94 test/unit/connection/test-fatal-network-error-going-to-all-callbacks.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 95 test/unit/connection/test-fatal-network-error-without-handlers.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 96 test/unit/connection/test-host-denied-error.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 97 test/unit/connection/test-implicit-connect.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 98 test/unit/connection/test-incorrect-packet-sequence.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 99 test/unit/connection/test-insecure-auth-error.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 100 test/unit/connection/test-large-blobs.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 101 test/unit/connection/test-load-data-infile-disable.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 102 test/unit/connection/test-long-stack-traces-disabled.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 103 test/unit/connection/test-long-stack-traces-for-connection-errors.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 104 test/unit/connection/test-long-stack-traces.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 105 test/unit/connection/test-packet-out-of-order.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 106 test/unit/connection/test-parser-error.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 107 test/unit/connection/test-query-after-destroy.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 108 test/unit/connection/test-protocol-stray-packet.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 109 test/unit/connection/test-query-after-end.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 110 test/unit/connection/test-query-timeout.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 111 test/unit/connection/test-query-after-end-without-callback.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 112 test/unit/connection/test-quit-ok-packet.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 113 test/unit/connection/test-timestamp-type-cast.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 114 test/unit/connection/test-server-unexpected-disconnect.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 115 test/unit/connection/test-unix-domain-socket.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 116 test/unit/pool-cluster/test-add-after-end.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 117 test/unit/pool-cluster/test-add-same-id.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 118 test/unit/pool-cluster/test-connection-default-selector.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 119 test/unit/pool-cluster/test-connection-error-remove.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 120 test/unit/pool-cluster/test-connection-error.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 121 test/unit/pool-cluster/test-connection-fatal-error-remove.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 122 test/unit/pool-cluster/test-connection-no-retry.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 123 test/unit/pool-cluster/test-connection-order-fatal.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 124 test/unit/pool-cluster/test-connection-order.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 125 test/unit/pool-cluster/test-connection-random.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 126 test/unit/pool-cluster/test-connection-retry-fatal-end.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 127 test/unit/pool-cluster/test-connection-retry.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 128 test/unit/pool-cluster/test-connection-rr-error.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 129 test/unit/pool-cluster/test-connection-rr.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 130 test/unit/pool-cluster/test-end-empty.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 131 test/unit/pool-cluster/test-internals.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 132 test/unit/pool-cluster/test-pattern.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 133 test/unit/pool-cluster/test-query-connection-error.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 134 test/unit/pool-cluster/test-query-pool-error.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 135 test/unit/pool-cluster/test-query-restore.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 136 test/unit/pool-cluster/test-query.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 137 test/unit/pool-cluster/test-remove-by-name.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 138 test/unit/pool-cluster/test-remove-by-pattern.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 139 test/unit/pool-cluster/test-remove-fatal-end.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 140 test/unit/pool-cluster/test-restore.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 141 test/unit/pool-cluster/test-restore-events.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 142 test/unit/pool/test-acquire-after-end.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 143 test/unit/pool/test-acquire-event.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 144 test/unit/pool/test-acquire-timeout-existing.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 145 test/unit/pool/test-acquire-timeout-new.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 146 test/unit/pool/test-change-user-config.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 147 test/unit/pool/test-change-user-restore.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 148 test/unit/pool/test-connection-bad.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 149 test/unit/pool/test-connection-destroy.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 150 test/unit/pool/test-connection-domain.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 151 test/unit/pool/test-connection-event.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 152 test/unit/pool/test-connection-fatal-end.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 153 test/unit/pool/test-connection-limit-no-wait.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 154 test/unit/pool/test-connection-limit.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 155 test/unit/pool/test-connection-release-after-error.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 156 test/unit/pool/test-connection-no-domain.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 157 test/unit/pool/test-connection-reset.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 158 test/unit/pool/test-custom-type-cast.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 159 test/unit/pool/test-debug.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 160 test/unit/pool/test-destroy-connection.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 161 test/unit/pool/test-domain-implicit.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 162 test/unit/pool/test-domains.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 163 test/unit/pool/test-double-release.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 164 test/unit/pool/test-end-empty.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 165 test/unit/pool/test-end-ping.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 166 test/unit/pool/test-end-queued.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 167 test/unit/pool/test-enqueue-event.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 168 test/unit/pool/test-escape-id.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 169 test/unit/pool/test-escape.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 170 test/unit/pool/test-get-connection.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 171 test/unit/pool/test-long-stack-traces.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 172 test/unit/pool/test-pool-connection.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 173 test/unit/pool/test-protocol-stray-packet.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 174 test/unit/pool/test-query-connection-error.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 175 test/unit/pool/test-query-end-after-error.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 176 test/unit/pool/test-query-error.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 177 test/unit/pool/test-query-events.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 178 test/unit/pool/test-query-stream-connection-error.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 179 test/unit/pool/test-query-streaming-rows.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 180 test/unit/pool/test-query.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 181 test/unit/pool/test-queue-limit.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 182 test/unit/pool/test-release-event.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 183 test/unit/protocol/test-Parser.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 184 test/unit/protocol/test-SqlString.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 185 test/unit/query/test-args-query-bad-callback.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 186 test/unit/query/test-args-query-like-object-values.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 187 test/unit/query/test-args-query-like-object.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 188 test/unit/query/test-error-event-fatal.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 189 test/unit/query/test-error-event.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 190 test/unit/query/test-query-end-after-error.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 191 test/unit/query/test-query-events.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 192 test/unit/query/test-result-rows-enumerate.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 193 test/unit/query/test-stream-emits-close-after-end.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 194 test/unit/query/test-stream-before-queue.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 195 test/unit/query/test-stream-emits-close.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 196 test/unit/query/test-streaming-destroy.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 197 test/unit/query/test-streaming-quick-pause-resume.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
not ok 198 test/unit/query/test-streaming-rows.js
  /data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85
  util.inherits(Readable, Stream);
       ^
  
  TypeError: util.inherits is not a function
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/lib/_stream_readable.js:85:6)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
      at Module.load (node:internal/modules/cjs/loader:1004:32)
      at Function.Module._load (node:internal/modules/cjs/loader:839:12)
      at Module.require (node:internal/modules/cjs/loader:1028:19)
      at require (node:internal/modules/cjs/helpers:102:18)
      at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/mysql/variant_files/mysql/node_modules/readable-stream/readable.js:12:30)
      at Module._compile (node:internal/modules/cjs/loader:1126:14)
      at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
  
I am package nanomatch .....

> nanomatch@1.2.9 test
> mocha



  .any()
    empty patterns
      ✓ should correctly handle empty patterns
    non-globs
      ✓ should match literal paths
    stars (single pattern)
      ✓ should return true when one of the given patterns matches the string
      ✓ should return false when the path does not match the pattern
      ✓ should match a path segment for each single star
      ✓ should regard non-exclusive double-stars as single stars
      ✓ should return false when full file paths are not matched:
    stars (multiple patterns)
      ✓ should return true when any of the patterns match
      ✓ should return false when none of the patterns match
    file extensions
      ✓ should match files that contain the given extension:
      ✓ should not match files that do not contain the given extension:
    dot files
      ✓ should match dotfiles when a dot is explicitly defined in the pattern:
      ✓ should match leading `./` when `**` is in the pattern
      ✓ should not match dotfiles when a dot is not defined in the pattern:
      ✓ should match dotfiles when `dot` is set:
      ✓ should not match dotfiles when `dot` is not set:
    qmarks
      ✓ question marks should not match slashes:
    dot-slash
      ✓ should match paths with leading `./`:

  .contains()
    patterns
      ✓ should correctly deal with empty patterns
      ✓ should return true when the path contains the pattern
      ✓ should match with conmon glob patterns
      ✓ should return false when the path does not contain the pattern
      ✓ should match files that contain the given extension:
      ✓ should not match files that do not contain the given extension:
      ✓ should match dotfiles when a dot is explicitly defined in the pattern:
      ✓ should match dotfiles when `dot` or `dotfiles` is set:
      ✓ should not match dotfiles when `dot` or `dotfiles` is not set:
      ✓ should match file paths:
      ✓ should return true when full file paths are matched:
      ✓ should match path segments:
      ✓ should return false when full file paths are not matched:
      ✓ should match paths with leading `./`:
    windows paths
      ✓ should match with conmon glob patterns
      ✓ should match files that contain the given extension:
      ✓ should match dotfiles when `dot` or `dotfiles` is set:
      ✓ should not match dotfiles when `dot` or `dotfiles` is not set:
      ✓ should match file paths:
      ✓ should return true when full file paths are matched:
      ✓ should match path segments:
      ✓ should return false when full file paths are not matched:
      ✓ should match dotfiles when a dot is explicitly defined in the pattern:
      ✓ should match paths with leading `./`:

  .isMatch():
    error handling:
      ✓ should throw on bad args
    matching:
      ✓ should escape plus signs to match string literals
      ✓ should not escape plus signs that follow brackets
      ✓ should support stars following brackets
      ✓ should not escape plus signs that follow parens
      ✓ should support stars following parens
      ✓ should not match slashes with single stars
      ✓ should not match dots with stars by default
      ✓ should correctly deal with empty globs
      ✓ should match with non-glob patterns
      ✓ should match file names
      ✓ should match with conmon glob patterns
      ✓ should exactly match leading slash
      ✓ should match files with the given extension
      ✓ should match wildcards
      ✓ should match globstars
      ✓ should match slashes
      ✓ question marks should not match slashes
      ✓ should not match dotfiles when `dot` or `dotfiles` are not set
      ✓ should match dotfiles when `dot` or `dotfiles` is set
      ✓ should match file paths
      ✓ should match full file paths
      ✓ should match paths with leading `./` when pattern has `./`
      ✓ should match paths with leading `./`

  nanomatch
    posix paths
      ✓ should return an array of matches for a literal string
      ✓ should return an array of matches for an array of literal strings
      ✓ should support regex logical or
      ✓ should support regex ranges
      ✓ should support single globs (*)
      ✓ should support globstars (**)
      ✓ should support negation patterns
      ✓ should work with file extensions
      ✓ should match literal brackets
    windows paths
      ✓ should return an array of matches for a literal string
      ✓ should return an array of matches for an array of literal strings
      ✓ should support regex logical or
      ✓ should support regex ranges
      ✓ should support single globs (*)
      ✓ should support globstars (**)
      ✓ should work with file extensions
      ✓ should support negation patterns

  .match method
    posix paths
      ✓ should return an array of matches for a literal string
      ✓ should support regex logical or
      ✓ should support regex ranges
      ✓ should support negation patterns
    windows paths
      ✓ should return an array of matches for a literal string
      ✓ should support regex logical or
      ✓ should support regex ranges
      ✓ should support negation patterns

  .matchKeys method
    error handling
      ✓ should throw when the first argument is not an object
    match object keys
      ✓ should return a new object with only keys that match the given glob pattern
      ✓ should return a new object with only keys that match a regex:

  .match method
    posix paths
      ✓ should return an array of matches for a literal string
      ✓ should support regex logical or
      ✓ should support regex ranges
      ✓ should support negation patterns
    posix paths (array of patterns)
      ✓ should return an array of matches for a literal string
      ✓ should support regex logical or
      ✓ should support regex ranges
      ✓ should support negation patterns
    windows paths
      ✓ should return an array of matches for a literal string
      ✓ should support regex logical or
      ✓ should support regex ranges
      ✓ should support negation patterns

  .not method
    posix paths
      ✓ should return an array of matches for a literal string
      ✓ should support regex logical or
      ✓ should support regex ranges
      ✓ should support globs (*)
      ✓ should support globstars (**)
      ✓ should support negation patterns
    windows paths
      ✓ should return an array of matches for a literal string
      ✓ should support regex logical or
      ✓ should support regex ranges
      ✓ should support globs (*)
      ✓ should support globstars (**)
      ✓ should support negation patterns

  bash options and features:
    failglob:
      ✓ should throw an error when no matches are found:
    bash
      ✓ should handle "regular globbing":
      ✓ should match directories:
      ✓ should use escaped characters as literals:
      ✓ should work for quoted characters
      ✓ should match escaped quotes
      ✓ should work for escaped paths/dots:
      ✓ Pattern from Larry Wall's Configure that caused bash to blow up:
      ✓ should support character classes
      ✓ should support basic wildmatch (brackets) features
      ✓ should support Extended slash-matching features
      ✓ should match braces
      ✓ should match parens
      ✓ should match escaped characters
      ✓ should match brackets
      ✓ tests with multiple `*'s:
      ✓ none of these should output anything:
    wildmat
      ✓ Basic wildmat features
      ✓ should support recursion

  bash.spec
    dotglob:
      ✓ "a/b/.x" should not match "**/.x/**"
      ✓ ".x" should not match "**/.x/**"
      ✓ ".x/" should match "**/.x/**"
      ✓ ".x/a" should match "**/.x/**"
      ✓ ".x/a/b" should match "**/.x/**"
      ✓ ".x/.x" should not match "**/.x/**"
      ✓ "a/.x" should not match "**/.x/**"
      ✓ "a/b/.x/c" should match "**/.x/**"
      ✓ "a/b/.x/c/d" should match "**/.x/**"
      ✓ "a/b/.x/c/d/e" should match "**/.x/**"
      ✓ "a/b/.x/" should match "**/.x/**"
      ✓ "a/.x/b" should match "**/.x/**"
      ✓ "a/.x/b/.x/c" should not match "**/.x/**"
      ✓ ".bashrc" should not match "?bashrc"
      ✓ ".bar.baz/" should match ".*.*"
      ✓ ".bar.baz" should match ".*.*"
    glob:
      ✓ "a/b/.x" should not match "**/.x/**"
      ✓ ".x" should not match "**/.x/**"
      ✓ ".x/" should match "**/.x/**"
      ✓ ".x/a" should match "**/.x/**"
      ✓ ".x/a/b" should match "**/.x/**"
      ✓ ".x/.x" should not match "**/.x/**"
      ✓ "a/.x" should not match "**/.x/**"
      ✓ "a/b/.x/c" should match "**/.x/**"
      ✓ "a/b/.x/c/d" should match "**/.x/**"
      ✓ "a/b/.x/c/d/e" should match "**/.x/**"
      ✓ "a/b/.x/" should match "**/.x/**"
      ✓ "a/.x/b" should match "**/.x/**"
      ✓ "a/.x/b/.x/c" should not match "**/.x/**"
      ✓ "a/c/b" should match "a/*/b"
      ✓ "a/.d/b" should not match "a/*/b"
      ✓ "a/./b" should not match "a/*/b"
      ✓ "a/../b" should not match "a/*/b"
      ✓ "ab" should match "ab**"
      ✓ "abcdef" should match "ab**"
      ✓ "abef" should match "ab**"
      ✓ "abcfef" should match "ab**"
      ✓ "ab" should not match "ab***ef"
      ✓ "abcdef" should match "ab***ef"
      ✓ "abef" should match "ab***ef"
      ✓ "abcfef" should match "ab***ef"
      ✓ ".bashrc" should not match "?bashrc"
      ✓ "abbc" should not match "ab?bc"
      ✓ "abc" should not match "ab?bc"
      ✓ "a.a" should match "[a-d]*.[a-b]"
      ✓ "a.b" should match "[a-d]*.[a-b]"
      ✓ "c.a" should match "[a-d]*.[a-b]"
      ✓ "a.a.a" should match "[a-d]*.[a-b]"
      ✓ "a.a.a" should match "[a-d]*.[a-b]*.[a-b]"
      ✓ "a.a" should match "*.[a-b]"
      ✓ "a.b" should match "*.[a-b]"
      ✓ "a.a.a" should match "*.[a-b]"
      ✓ "c.a" should match "*.[a-b]"
      ✓ "d.a.d" should not match "*.[a-b]"
      ✓ "a.bb" should not match "*.[a-b]"
      ✓ "a.ccc" should not match "*.[a-b]"
      ✓ "c.ccc" should not match "*.[a-b]"
      ✓ "a.a" should match "*.[a-b]*"
      ✓ "a.b" should match "*.[a-b]*"
      ✓ "a.a.a" should match "*.[a-b]*"
      ✓ "c.a" should match "*.[a-b]*"
      ✓ "d.a.d" should match "*.[a-b]*"
      ✓ "d.a.d" should not match "*.[a-b]*.[a-b]*"
      ✓ "d.a.d" should match "*.[a-d]*.[a-d]*"
      ✓ "a.bb" should match "*.[a-b]*"
      ✓ "a.ccc" should not match "*.[a-b]*"
      ✓ "c.ccc" should not match "*.[a-b]*"
      ✓ "a.a" should match "*[a-b].[a-b]*"
      ✓ "a.b" should match "*[a-b].[a-b]*"
      ✓ "a.a.a" should match "*[a-b].[a-b]*"
      ✓ "c.a" should not match "*[a-b].[a-b]*"
      ✓ "d.a.d" should not match "*[a-b].[a-b]*"
      ✓ "a.bb" should match "*[a-b].[a-b]*"
      ✓ "a.ccc" should not match "*[a-b].[a-b]*"
      ✓ "c.ccc" should not match "*[a-b].[a-b]*"
      ✓ "abd" should match "[a-y]*[^c]"
      ✓ "abe" should match "[a-y]*[^c]"
      ✓ "bb" should match "[a-y]*[^c]"
      ✓ "bcd" should match "[a-y]*[^c]"
      ✓ "ca" should match "[a-y]*[^c]"
      ✓ "cb" should match "[a-y]*[^c]"
      ✓ "dd" should match "[a-y]*[^c]"
      ✓ "de" should match "[a-y]*[^c]"
      ✓ "bdir/" should match "[a-y]*[^c]"
      ✓ "abd" should match "**/*"
    globstar:
      ✓ "a.js" should match "**/*.js"
      ✓ "a/a.js" should match "**/*.js"
      ✓ "a/a/b.js" should match "**/*.js"
      ✓ "a/b/z.js" should match "a/b/**/*.js"
      ✓ "a/b/c/z.js" should match "a/b/**/*.js"
      ✓ "foo.md" should match "**/*.md"
      ✓ "foo/bar.md" should match "**/*.md"
      ✓ "foo/bar" should match "foo/**/bar"
      ✓ "foo/bar" should match "foo/**bar"
      ✓ "ab/a/d" should match "**/*"
      ✓ "ab/b" should match "**/*"
      ✓ "a/b/c/d/a.js" should match "**/*"
      ✓ "a/b/c.js" should match "**/*"
      ✓ "a/b/c.txt" should match "**/*"
      ✓ "a/b/.js/c.txt" should not match "**/*"
      ✓ "a.js" should match "**/*"
      ✓ "za.js" should match "**/*"
      ✓ "ab" should match "**/*"
      ✓ "a.b" should match "**/*"
      ✓ "foo/" should match "foo/**/"
      ✓ "foo/bar" should not match "foo/**/"
      ✓ "foo/bazbar" should not match "foo/**/"
      ✓ "foo/barbar" should not match "foo/**/"
      ✓ "foo/bar/baz/qux" should not match "foo/**/"
      ✓ "foo/bar/baz/qux/" should match "foo/**/"

  .capture()
    ✓ should return null if no match
    ✓ should return an empty array if there are no captures
    ✓ should capture stars
    ✓ should capture globstars

  .isMatch
    ✓ should match a with !**
    ✓ should match a with !** and {dot: true}
    ✓ should match a with !** and {nonegate: true}
    ✓ should match a.md with !**
    ✓ should match a.md with !** and {dot: true}
    ✓ should match a.md with !** and {nonegate: true}
    ✓ should match a.js with !**
    ✓ should match a.js with !** and {dot: true}
    ✓ should match a.js with !** and {nonegate: true}
    ✓ should match a/ with !**
    ✓ should match a/ with !** and {dot: true}
    ✓ should match a/ with !** and {nonegate: true}
    ✓ should match a/b with !**
    ✓ should match a/b with !** and {dot: true}
    ✓ should match a/b with !** and {nonegate: true}
    ✓ should match a/b/.c.md with !**
    ✓ should match a/b/.c.md with !** and {dot: true}
    ✓ should match a/b/.c.md with !** and {nonegate: true}
    ✓ should match a/b/c with !**
    ✓ should match a/b/c with !** and {dot: true}
    ✓ should match a/b/c with !** and {nonegate: true}
    ✓ should match a/b/c.md with !**
    ✓ should match a/b/c.md with !** and {dot: true}
    ✓ should match a/b/c.md with !** and {nonegate: true}
    ✓ should match a/b/c/ with !**
    ✓ should match a/b/c/ with !** and {dot: true}
    ✓ should match a/b/c/ with !** and {nonegate: true}
    ✓ should match a/b/c/d with !**
    ✓ should match a/b/c/d with !** and {dot: true}
    ✓ should match a/b/c/d with !** and {nonegate: true}
    ✓ should match a/b/c/d/ with !**
    ✓ should match a/b/c/d/ with !** and {dot: true}
    ✓ should match a/b/c/d/ with !** and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with !**
    ✓ should match a/b/c/d/e/f/z.js with !** and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with !** and {nonegate: true}
    ✓ should match a/b/c/z.js with !**
    ✓ should match a/b/c/z.js with !** and {dot: true}
    ✓ should match a/b/c/z.js with !** and {nonegate: true}
    ✓ should match a/bb with !**
    ✓ should match a/bb with !** and {dot: true}
    ✓ should match a/bb with !** and {nonegate: true}
    ✓ should match a/cb with !**
    ✓ should match a/cb with !** and {dot: true}
    ✓ should match a/cb with !** and {nonegate: true}
    ✓ should match abbbz with !**
    ✓ should match abbbz with !** and {dot: true}
    ✓ should match abbbz with !** and {nonegate: true}
    ✓ should match abc with !**
    ✓ should match abc with !** and {dot: true}
    ✓ should match abc with !** and {nonegate: true}
    ✓ should match abd with !**
    ✓ should match abd with !** and {dot: true}
    ✓ should match abd with !** and {nonegate: true}
    ✓ should match z.js with !**
    ✓ should match z.js with !** and {dot: true}
    ✓ should match z.js with !** and {nonegate: true}
    ✓ should match za.js with !**
    ✓ should match za.js with !** and {dot: true}
    ✓ should match za.js with !** and {nonegate: true}
    ✓ should match !a.js with !**
    ✓ should match !a.js with !** and {dot: true}
    ✓ should match !a.js with !** and {nonegate: true}
    ✓ should match !a/b with !**
    ✓ should match !a/b with !** and {dot: true}
    ✓ should match !a/b with !** and {nonegate: true}
    ✓ should match !a/b/ with !**
    ✓ should match !a/b/ with !** and {dot: true}
    ✓ should match !a/b/ with !** and {nonegate: true}
    ✓ should match !a/b/c with !**
    ✓ should match !a/b/c with !** and {dot: true}
    ✓ should match !a/b/c with !** and {nonegate: true}
    ✓ should match !a/b/c/ with !**
    ✓ should match !a/b/c/ with !** and {dot: true}
    ✓ should match !a/b/c/ with !** and {nonegate: true}
    ✓ should match !a/!b with !**
    ✓ should match !a/!b with !** and {dot: true}
    ✓ should match !a/!b with !** and {nonegate: true}
    ✓ should match !a/!b/c with !**
    ✓ should match !a/!b/c with !** and {dot: true}
    ✓ should match !a/!b/c with !** and {nonegate: true}
    ✓ should match !a/!b/c/d with !**
    ✓ should match !a/!b/c/d with !** and {dot: true}
    ✓ should match !a/!b/c/d with !** and {nonegate: true}
    ✓ should match !a/b/.c.md with !**
    ✓ should match !a/b/.c.md with !** and {dot: true}
    ✓ should match !a/b/.c.md with !** and {nonegate: true}
    ✓ should match /a/ with !**
    ✓ should match /a/ with !** and {dot: true}
    ✓ should match /a/ with !** and {nonegate: true}
    ✓ should match /a/b with !**
    ✓ should match /a/b with !** and {dot: true}
    ✓ should match /a/b with !** and {nonegate: true}
    ✓ should match /a/cb with !**
    ✓ should match /a/cb with !** and {dot: true}
    ✓ should match /a/cb with !** and {nonegate: true}
    ✓ should match /a/bb with !**
    ✓ should match /a/bb with !** and {dot: true}
    ✓ should match /a/bb with !** and {nonegate: true}
    ✓ should match /a/b/c with !**
    ✓ should match /a/b/c with !** and {dot: true}
    ✓ should match /a/b/c with !** and {nonegate: true}
    ✓ should match /a/b/c/ with !**
    ✓ should match /a/b/c/ with !** and {dot: true}
    ✓ should match /a/b/c/ with !** and {nonegate: true}
    ✓ should match /a/b/c/d with !**
    ✓ should match /a/b/c/d with !** and {dot: true}
    ✓ should match /a/b/c/d with !** and {nonegate: true}
    ✓ should match /a/b/c/d/ with !**
    ✓ should match /a/b/c/d/ with !** and {dot: true}
    ✓ should match /a/b/c/d/ with !** and {nonegate: true}
    ✓ should match . with !**
    ✓ should match . with !** and {dot: true}
    ✓ should match . with !** and {nonegate: true}
    ✓ should match ./ with !**
    ✓ should match ./ with !** and {dot: true}
    ✓ should match ./ with !** and {nonegate: true}
    ✓ should match .. with !**
    ✓ should match .. with !** and {dot: true}
    ✓ should match .. with !** and {nonegate: true}
    ✓ should match ../c with !**
    ✓ should match ../c with !** and {dot: true}
    ✓ should match ../c with !** and {nonegate: true}
    ✓ should match ../c with !**
    ✓ should match ../c with !** and {dot: true}
    ✓ should match ../c with !** and {nonegate: true}
    ✓ should match ./../c with !**
    ✓ should match ./../c with !** and {dot: true}
    ✓ should match ./../c with !** and {nonegate: true}
    ✓ should match ./a/../c with !**
    ✓ should match ./a/../c with !** and {dot: true}
    ✓ should match ./a/../c with !** and {nonegate: true}
    ✓ should match /.. with !**
    ✓ should match /.. with !** and {dot: true}
    ✓ should match /.. with !** and {nonegate: true}
    ✓ should match /../c with !**
    ✓ should match /../c with !** and {dot: true}
    ✓ should match /../c with !** and {nonegate: true}
    ✓ should match /../.c with !**
    ✓ should match /../.c with !** and {dot: true}
    ✓ should match /../.c with !** and {nonegate: true}
    ✓ should match /../.c/ with !**
    ✓ should match /../.c/ with !** and {dot: true}
    ✓ should match /../.c/ with !** and {nonegate: true}
    ✓ should match /a/../c with !**
    ✓ should match /a/../c with !** and {dot: true}
    ✓ should match /a/../c with !** and {nonegate: true}
    ✓ should match a/../c with !**
    ✓ should match a/../c with !** and {dot: true}
    ✓ should match a/../c with !** and {nonegate: true}
    ✓ should match ../.b/.c with !**
    ✓ should match ../.b/.c with !** and {dot: true}
    ✓ should match ../.b/.c with !** and {nonegate: true}
    ✓ should match ../b/.c with !**
    ✓ should match ../b/.c with !** and {dot: true}
    ✓ should match ../b/.c with !** and {nonegate: true}
    ✓ should match ./.b/.c with !**
    ✓ should match ./.b/.c with !** and {dot: true}
    ✓ should match ./.b/.c with !** and {nonegate: true}
    ✓ should match ./b/.c with !**
    ✓ should match ./b/.c with !** and {dot: true}
    ✓ should match ./b/.c with !** and {nonegate: true}
    ✓ should match .b with !**
    ✓ should match .b with !** and {dot: true}
    ✓ should match .b with !** and {nonegate: true}
    ✓ should match .b.c with !**
    ✓ should match .b.c with !** and {dot: true}
    ✓ should match .b.c with !** and {nonegate: true}
    ✓ should match .b.c/ with !**
    ✓ should match .b.c/ with !** and {dot: true}
    ✓ should match .b.c/ with !** and {nonegate: true}
    ✓ should match .b/ with !**
    ✓ should match .b/ with !** and {dot: true}
    ✓ should match .b/ with !** and {nonegate: true}
    ✓ should match .b/.c with !**
    ✓ should match .b/.c with !** and {dot: true}
    ✓ should match .b/.c with !** and {nonegate: true}
    ✓ should match .b/c with !**
    ✓ should match .b/c with !** and {dot: true}
    ✓ should match .b/c with !** and {nonegate: true}
    ✓ should match b/.c with !**
    ✓ should match b/.c with !** and {dot: true}
    ✓ should match b/.c with !** and {nonegate: true}
    ✓ should match b/.c/ with !**
    ✓ should match b/.c/ with !** and {dot: true}
    ✓ should match b/.c/ with !** and {nonegate: true}
    ✓ should match a/+b/c with !**
    ✓ should match a/+b/c with !** and {dot: true}
    ✓ should match a/+b/c with !** and {nonegate: true}
    ✓ should match +a/+b/c with !**
    ✓ should match +a/+b/c with !** and {dot: true}
    ✓ should match +a/+b/c with !** and {nonegate: true}
    ✓ should match a (foo) with !**
    ✓ should match a (foo) with !** and {dot: true}
    ✓ should match a (foo) with !** and {nonegate: true}
    ✓ should match a (foo)/(bar) with !**
    ✓ should match a (foo)/(bar) with !** and {dot: true}
    ✓ should match a (foo)/(bar) with !** and {nonegate: true}
    ✓ should match a/b/c (1) with !**
    ✓ should match a/b/c (1) with !** and {dot: true}
    ✓ should match a/b/c (1) with !** and {nonegate: true}
    ✓ should match a/b (2)/c (1) with !**
    ✓ should match a/b (2)/c (1) with !** and {dot: true}
    ✓ should match a/b (2)/c (1) with !** and {nonegate: true}
    ✓ should match a/b/c [def] with !**
    ✓ should match a/b/c [def] with !** and {dot: true}
    ✓ should match a/b/c [def] with !** and {nonegate: true}
    ✓ should match a with !**/*
    ✓ should match a with !**/* and {dot: true}
    ✓ should match a with !**/* and {nonegate: true}
    ✓ should match a.md with !**/*
    ✓ should match a.md with !**/* and {dot: true}
    ✓ should match a.md with !**/* and {nonegate: true}
    ✓ should match a.js with !**/*
    ✓ should match a.js with !**/* and {dot: true}
    ✓ should match a.js with !**/* and {nonegate: true}
    ✓ should match a/ with !**/*
    ✓ should match a/ with !**/* and {dot: true}
    ✓ should match a/ with !**/* and {nonegate: true}
    ✓ should match a/b with !**/*
    ✓ should match a/b with !**/* and {dot: true}
    ✓ should match a/b with !**/* and {nonegate: true}
    ✓ should match a/b/.c.md with !**/*
    ✓ should match a/b/.c.md with !**/* and {dot: true}
    ✓ should match a/b/.c.md with !**/* and {nonegate: true}
    ✓ should match a/b/c with !**/*
    ✓ should match a/b/c with !**/* and {dot: true}
    ✓ should match a/b/c with !**/* and {nonegate: true}
    ✓ should match a/b/c.md with !**/*
    ✓ should match a/b/c.md with !**/* and {dot: true}
    ✓ should match a/b/c.md with !**/* and {nonegate: true}
    ✓ should match a/b/c/ with !**/*
    ✓ should match a/b/c/ with !**/* and {dot: true}
    ✓ should match a/b/c/ with !**/* and {nonegate: true}
    ✓ should match a/b/c/d with !**/*
    ✓ should match a/b/c/d with !**/* and {dot: true}
    ✓ should match a/b/c/d with !**/* and {nonegate: true}
    ✓ should match a/b/c/d/ with !**/*
    ✓ should match a/b/c/d/ with !**/* and {dot: true}
    ✓ should match a/b/c/d/ with !**/* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with !**/*
    ✓ should match a/b/c/d/e/f/z.js with !**/* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with !**/* and {nonegate: true}
    ✓ should match a/b/c/z.js with !**/*
    ✓ should match a/b/c/z.js with !**/* and {dot: true}
    ✓ should match a/b/c/z.js with !**/* and {nonegate: true}
    ✓ should match a/bb with !**/*
    ✓ should match a/bb with !**/* and {dot: true}
    ✓ should match a/bb with !**/* and {nonegate: true}
    ✓ should match a/cb with !**/*
    ✓ should match a/cb with !**/* and {dot: true}
    ✓ should match a/cb with !**/* and {nonegate: true}
    ✓ should match abbbz with !**/*
    ✓ should match abbbz with !**/* and {dot: true}
    ✓ should match abbbz with !**/* and {nonegate: true}
    ✓ should match abc with !**/*
    ✓ should match abc with !**/* and {dot: true}
    ✓ should match abc with !**/* and {nonegate: true}
    ✓ should match abd with !**/*
    ✓ should match abd with !**/* and {dot: true}
    ✓ should match abd with !**/* and {nonegate: true}
    ✓ should match z.js with !**/*
    ✓ should match z.js with !**/* and {dot: true}
    ✓ should match z.js with !**/* and {nonegate: true}
    ✓ should match za.js with !**/*
    ✓ should match za.js with !**/* and {dot: true}
    ✓ should match za.js with !**/* and {nonegate: true}
    ✓ should match !a.js with !**/*
    ✓ should match !a.js with !**/* and {dot: true}
    ✓ should match !a.js with !**/* and {nonegate: true}
    ✓ should match !a/b with !**/*
    ✓ should match !a/b with !**/* and {dot: true}
    ✓ should match !a/b with !**/* and {nonegate: true}
    ✓ should match !a/b/ with !**/*
    ✓ should match !a/b/ with !**/* and {dot: true}
    ✓ should match !a/b/ with !**/* and {nonegate: true}
    ✓ should match !a/b/c with !**/*
    ✓ should match !a/b/c with !**/* and {dot: true}
    ✓ should match !a/b/c with !**/* and {nonegate: true}
    ✓ should match !a/b/c/ with !**/*
    ✓ should match !a/b/c/ with !**/* and {dot: true}
    ✓ should match !a/b/c/ with !**/* and {nonegate: true}
    ✓ should match !a/!b with !**/*
    ✓ should match !a/!b with !**/* and {dot: true}
    ✓ should match !a/!b with !**/* and {nonegate: true}
    ✓ should match !a/!b/c with !**/*
    ✓ should match !a/!b/c with !**/* and {dot: true}
    ✓ should match !a/!b/c with !**/* and {nonegate: true}
    ✓ should match !a/!b/c/d with !**/*
    ✓ should match !a/!b/c/d with !**/* and {dot: true}
    ✓ should match !a/!b/c/d with !**/* and {nonegate: true}
    ✓ should match !a/b/.c.md with !**/*
    ✓ should match !a/b/.c.md with !**/* and {dot: true}
    ✓ should match !a/b/.c.md with !**/* and {nonegate: true}
    ✓ should match /a/ with !**/*
    ✓ should match /a/ with !**/* and {dot: true}
    ✓ should match /a/ with !**/* and {nonegate: true}
    ✓ should match /a/b with !**/*
    ✓ should match /a/b with !**/* and {dot: true}
    ✓ should match /a/b with !**/* and {nonegate: true}
    ✓ should match /a/cb with !**/*
    ✓ should match /a/cb with !**/* and {dot: true}
    ✓ should match /a/cb with !**/* and {nonegate: true}
    ✓ should match /a/bb with !**/*
    ✓ should match /a/bb with !**/* and {dot: true}
    ✓ should match /a/bb with !**/* and {nonegate: true}
    ✓ should match /a/b/c with !**/*
    ✓ should match /a/b/c with !**/* and {dot: true}
    ✓ should match /a/b/c with !**/* and {nonegate: true}
    ✓ should match /a/b/c/ with !**/*
    ✓ should match /a/b/c/ with !**/* and {dot: true}
    ✓ should match /a/b/c/ with !**/* and {nonegate: true}
    ✓ should match /a/b/c/d with !**/*
    ✓ should match /a/b/c/d with !**/* and {dot: true}
    ✓ should match /a/b/c/d with !**/* and {nonegate: true}
    ✓ should match /a/b/c/d/ with !**/*
    ✓ should match /a/b/c/d/ with !**/* and {dot: true}
    ✓ should match /a/b/c/d/ with !**/* and {nonegate: true}
    ✓ should match . with !**/*
    ✓ should match . with !**/* and {dot: true}
    ✓ should match . with !**/* and {nonegate: true}
    ✓ should match ./ with !**/*
    ✓ should match ./ with !**/* and {dot: true}
    ✓ should match ./ with !**/* and {nonegate: true}
    ✓ should match .. with !**/*
    ✓ should match .. with !**/* and {dot: true}
    ✓ should match .. with !**/* and {nonegate: true}
    ✓ should match ../c with !**/*
    ✓ should match ../c with !**/* and {dot: true}
    ✓ should match ../c with !**/* and {nonegate: true}
    ✓ should match ../c with !**/*
    ✓ should match ../c with !**/* and {dot: true}
    ✓ should match ../c with !**/* and {nonegate: true}
    ✓ should match ./../c with !**/*
    ✓ should match ./../c with !**/* and {dot: true}
    ✓ should match ./../c with !**/* and {nonegate: true}
    ✓ should match ./a/../c with !**/*
    ✓ should match ./a/../c with !**/* and {dot: true}
    ✓ should match ./a/../c with !**/* and {nonegate: true}
    ✓ should match /.. with !**/*
    ✓ should match /.. with !**/* and {dot: true}
    ✓ should match /.. with !**/* and {nonegate: true}
    ✓ should match /../c with !**/*
    ✓ should match /../c with !**/* and {dot: true}
    ✓ should match /../c with !**/* and {nonegate: true}
    ✓ should match /../.c with !**/*
    ✓ should match /../.c with !**/* and {dot: true}
    ✓ should match /../.c with !**/* and {nonegate: true}
    ✓ should match /../.c/ with !**/*
    ✓ should match /../.c/ with !**/* and {dot: true}
    ✓ should match /../.c/ with !**/* and {nonegate: true}
    ✓ should match /a/../c with !**/*
    ✓ should match /a/../c with !**/* and {dot: true}
    ✓ should match /a/../c with !**/* and {nonegate: true}
    ✓ should match a/../c with !**/*
    ✓ should match a/../c with !**/* and {dot: true}
    ✓ should match a/../c with !**/* and {nonegate: true}
    ✓ should match ../.b/.c with !**/*
    ✓ should match ../.b/.c with !**/* and {dot: true}
    ✓ should match ../.b/.c with !**/* and {nonegate: true}
    ✓ should match ../b/.c with !**/*
    ✓ should match ../b/.c with !**/* and {dot: true}
    ✓ should match ../b/.c with !**/* and {nonegate: true}
    ✓ should match ./.b/.c with !**/*
    ✓ should match ./.b/.c with !**/* and {dot: true}
    ✓ should match ./.b/.c with !**/* and {nonegate: true}
    ✓ should match ./b/.c with !**/*
    ✓ should match ./b/.c with !**/* and {dot: true}
    ✓ should match ./b/.c with !**/* and {nonegate: true}
    ✓ should match .b with !**/*
    ✓ should match .b with !**/* and {dot: true}
    ✓ should match .b with !**/* and {nonegate: true}
    ✓ should match .b.c with !**/*
    ✓ should match .b.c with !**/* and {dot: true}
    ✓ should match .b.c with !**/* and {nonegate: true}
    ✓ should match .b.c/ with !**/*
    ✓ should match .b.c/ with !**/* and {dot: true}
    ✓ should match .b.c/ with !**/* and {nonegate: true}
    ✓ should match .b/ with !**/*
    ✓ should match .b/ with !**/* and {dot: true}
    ✓ should match .b/ with !**/* and {nonegate: true}
    ✓ should match .b/.c with !**/*
    ✓ should match .b/.c with !**/* and {dot: true}
    ✓ should match .b/.c with !**/* and {nonegate: true}
    ✓ should match .b/c with !**/*
    ✓ should match .b/c with !**/* and {dot: true}
    ✓ should match .b/c with !**/* and {nonegate: true}
    ✓ should match b/.c with !**/*
    ✓ should match b/.c with !**/* and {dot: true}
    ✓ should match b/.c with !**/* and {nonegate: true}
    ✓ should match b/.c/ with !**/*
    ✓ should match b/.c/ with !**/* and {dot: true}
    ✓ should match b/.c/ with !**/* and {nonegate: true}
    ✓ should match a/+b/c with !**/*
    ✓ should match a/+b/c with !**/* and {dot: true}
    ✓ should match a/+b/c with !**/* and {nonegate: true}
    ✓ should match +a/+b/c with !**/*
    ✓ should match +a/+b/c with !**/* and {dot: true}
    ✓ should match +a/+b/c with !**/* and {nonegate: true}
    ✓ should match a (foo) with !**/*
    ✓ should match a (foo) with !**/* and {dot: true}
    ✓ should match a (foo) with !**/* and {nonegate: true}
    ✓ should match a (foo)/(bar) with !**/*
    ✓ should match a (foo)/(bar) with !**/* and {dot: true}
    ✓ should match a (foo)/(bar) with !**/* and {nonegate: true}
    ✓ should match a/b/c (1) with !**/*
    ✓ should match a/b/c (1) with !**/* and {dot: true}
    ✓ should match a/b/c (1) with !**/* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with !**/*
    ✓ should match a/b (2)/c (1) with !**/* and {dot: true}
    ✓ should match a/b (2)/c (1) with !**/* and {nonegate: true}
    ✓ should match a/b/c [def] with !**/*
    ✓ should match a/b/c [def] with !**/* and {dot: true}
    ✓ should match a/b/c [def] with !**/* and {nonegate: true}
    ✓ should match a with !**/*.md
    ✓ should match a with !**/*.md and {dot: true}
    ✓ should match a with !**/*.md and {nonegate: true}
    ✓ should match a.md with !**/*.md
    ✓ should match a.md with !**/*.md and {dot: true}
    ✓ should match a.md with !**/*.md and {nonegate: true}
    ✓ should match a.js with !**/*.md
    ✓ should match a.js with !**/*.md and {dot: true}
    ✓ should match a.js with !**/*.md and {nonegate: true}
    ✓ should match a/ with !**/*.md
    ✓ should match a/ with !**/*.md and {dot: true}
    ✓ should match a/ with !**/*.md and {nonegate: true}
    ✓ should match a/b with !**/*.md
    ✓ should match a/b with !**/*.md and {dot: true}
    ✓ should match a/b with !**/*.md and {nonegate: true}
    ✓ should match a/b/.c.md with !**/*.md
    ✓ should match a/b/.c.md with !**/*.md and {dot: true}
    ✓ should match a/b/.c.md with !**/*.md and {nonegate: true}
    ✓ should match a/b/c with !**/*.md
    ✓ should match a/b/c with !**/*.md and {dot: true}
    ✓ should match a/b/c with !**/*.md and {nonegate: true}
    ✓ should match a/b/c.md with !**/*.md
    ✓ should match a/b/c.md with !**/*.md and {dot: true}
    ✓ should match a/b/c.md with !**/*.md and {nonegate: true}
    ✓ should match a/b/c/ with !**/*.md
    ✓ should match a/b/c/ with !**/*.md and {dot: true}
    ✓ should match a/b/c/ with !**/*.md and {nonegate: true}
    ✓ should match a/b/c/d with !**/*.md
    ✓ should match a/b/c/d with !**/*.md and {dot: true}
    ✓ should match a/b/c/d with !**/*.md and {nonegate: true}
    ✓ should match a/b/c/d/ with !**/*.md
    ✓ should match a/b/c/d/ with !**/*.md and {dot: true}
    ✓ should match a/b/c/d/ with !**/*.md and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with !**/*.md
    ✓ should match a/b/c/d/e/f/z.js with !**/*.md and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with !**/*.md and {nonegate: true}
    ✓ should match a/b/c/z.js with !**/*.md
    ✓ should match a/b/c/z.js with !**/*.md and {dot: true}
    ✓ should match a/b/c/z.js with !**/*.md and {nonegate: true}
    ✓ should match a/bb with !**/*.md
    ✓ should match a/bb with !**/*.md and {dot: true}
    ✓ should match a/bb with !**/*.md and {nonegate: true}
    ✓ should match a/cb with !**/*.md
    ✓ should match a/cb with !**/*.md and {dot: true}
    ✓ should match a/cb with !**/*.md and {nonegate: true}
    ✓ should match abbbz with !**/*.md
    ✓ should match abbbz with !**/*.md and {dot: true}
    ✓ should match abbbz with !**/*.md and {nonegate: true}
    ✓ should match abc with !**/*.md
    ✓ should match abc with !**/*.md and {dot: true}
    ✓ should match abc with !**/*.md and {nonegate: true}
    ✓ should match abd with !**/*.md
    ✓ should match abd with !**/*.md and {dot: true}
    ✓ should match abd with !**/*.md and {nonegate: true}
    ✓ should match z.js with !**/*.md
    ✓ should match z.js with !**/*.md and {dot: true}
    ✓ should match z.js with !**/*.md and {nonegate: true}
    ✓ should match za.js with !**/*.md
    ✓ should match za.js with !**/*.md and {dot: true}
    ✓ should match za.js with !**/*.md and {nonegate: true}
    ✓ should match !a.js with !**/*.md
    ✓ should match !a.js with !**/*.md and {dot: true}
    ✓ should match !a.js with !**/*.md and {nonegate: true}
    ✓ should match !a/b with !**/*.md
    ✓ should match !a/b with !**/*.md and {dot: true}
    ✓ should match !a/b with !**/*.md and {nonegate: true}
    ✓ should match !a/b/ with !**/*.md
    ✓ should match !a/b/ with !**/*.md and {dot: true}
    ✓ should match !a/b/ with !**/*.md and {nonegate: true}
    ✓ should match !a/b/c with !**/*.md
    ✓ should match !a/b/c with !**/*.md and {dot: true}
    ✓ should match !a/b/c with !**/*.md and {nonegate: true}
    ✓ should match !a/b/c/ with !**/*.md
    ✓ should match !a/b/c/ with !**/*.md and {dot: true}
    ✓ should match !a/b/c/ with !**/*.md and {nonegate: true}
    ✓ should match !a/!b with !**/*.md
    ✓ should match !a/!b with !**/*.md and {dot: true}
    ✓ should match !a/!b with !**/*.md and {nonegate: true}
    ✓ should match !a/!b/c with !**/*.md
    ✓ should match !a/!b/c with !**/*.md and {dot: true}
    ✓ should match !a/!b/c with !**/*.md and {nonegate: true}
    ✓ should match !a/!b/c/d with !**/*.md
    ✓ should match !a/!b/c/d with !**/*.md and {dot: true}
    ✓ should match !a/!b/c/d with !**/*.md and {nonegate: true}
    ✓ should match !a/b/.c.md with !**/*.md
    ✓ should match !a/b/.c.md with !**/*.md and {dot: true}
    ✓ should match !a/b/.c.md with !**/*.md and {nonegate: true}
    ✓ should match /a/ with !**/*.md
    ✓ should match /a/ with !**/*.md and {dot: true}
    ✓ should match /a/ with !**/*.md and {nonegate: true}
    ✓ should match /a/b with !**/*.md
    ✓ should match /a/b with !**/*.md and {dot: true}
    ✓ should match /a/b with !**/*.md and {nonegate: true}
    ✓ should match /a/cb with !**/*.md
    ✓ should match /a/cb with !**/*.md and {dot: true}
    ✓ should match /a/cb with !**/*.md and {nonegate: true}
    ✓ should match /a/bb with !**/*.md
    ✓ should match /a/bb with !**/*.md and {dot: true}
    ✓ should match /a/bb with !**/*.md and {nonegate: true}
    ✓ should match /a/b/c with !**/*.md
    ✓ should match /a/b/c with !**/*.md and {dot: true}
    ✓ should match /a/b/c with !**/*.md and {nonegate: true}
    ✓ should match /a/b/c/ with !**/*.md
    ✓ should match /a/b/c/ with !**/*.md and {dot: true}
    ✓ should match /a/b/c/ with !**/*.md and {nonegate: true}
    ✓ should match /a/b/c/d with !**/*.md
    ✓ should match /a/b/c/d with !**/*.md and {dot: true}
    ✓ should match /a/b/c/d with !**/*.md and {nonegate: true}
    ✓ should match /a/b/c/d/ with !**/*.md
    ✓ should match /a/b/c/d/ with !**/*.md and {dot: true}
    ✓ should match /a/b/c/d/ with !**/*.md and {nonegate: true}
    ✓ should match . with !**/*.md
    ✓ should match . with !**/*.md and {dot: true}
    ✓ should match . with !**/*.md and {nonegate: true}
    ✓ should match ./ with !**/*.md
    ✓ should match ./ with !**/*.md and {dot: true}
    ✓ should match ./ with !**/*.md and {nonegate: true}
    ✓ should match .. with !**/*.md
    ✓ should match .. with !**/*.md and {dot: true}
    ✓ should match .. with !**/*.md and {nonegate: true}
    ✓ should match ../c with !**/*.md
    ✓ should match ../c with !**/*.md and {dot: true}
    ✓ should match ../c with !**/*.md and {nonegate: true}
    ✓ should match ../c with !**/*.md
    ✓ should match ../c with !**/*.md and {dot: true}
    ✓ should match ../c with !**/*.md and {nonegate: true}
    ✓ should match ./../c with !**/*.md
    ✓ should match ./../c with !**/*.md and {dot: true}
    ✓ should match ./../c with !**/*.md and {nonegate: true}
    ✓ should match ./a/../c with !**/*.md
    ✓ should match ./a/../c with !**/*.md and {dot: true}
    ✓ should match ./a/../c with !**/*.md and {nonegate: true}
    ✓ should match /.. with !**/*.md
    ✓ should match /.. with !**/*.md and {dot: true}
    ✓ should match /.. with !**/*.md and {nonegate: true}
    ✓ should match /../c with !**/*.md
    ✓ should match /../c with !**/*.md and {dot: true}
    ✓ should match /../c with !**/*.md and {nonegate: true}
    ✓ should match /../.c with !**/*.md
    ✓ should match /../.c with !**/*.md and {dot: true}
    ✓ should match /../.c with !**/*.md and {nonegate: true}
    ✓ should match /../.c/ with !**/*.md
    ✓ should match /../.c/ with !**/*.md and {dot: true}
    ✓ should match /../.c/ with !**/*.md and {nonegate: true}
    ✓ should match /a/../c with !**/*.md
    ✓ should match /a/../c with !**/*.md and {dot: true}
    ✓ should match /a/../c with !**/*.md and {nonegate: true}
    ✓ should match a/../c with !**/*.md
    ✓ should match a/../c with !**/*.md and {dot: true}
    ✓ should match a/../c with !**/*.md and {nonegate: true}
    ✓ should match ../.b/.c with !**/*.md
    ✓ should match ../.b/.c with !**/*.md and {dot: true}
    ✓ should match ../.b/.c with !**/*.md and {nonegate: true}
    ✓ should match ../b/.c with !**/*.md
    ✓ should match ../b/.c with !**/*.md and {dot: true}
    ✓ should match ../b/.c with !**/*.md and {nonegate: true}
    ✓ should match ./.b/.c with !**/*.md
    ✓ should match ./.b/.c with !**/*.md and {dot: true}
    ✓ should match ./.b/.c with !**/*.md and {nonegate: true}
    ✓ should match ./b/.c with !**/*.md
    ✓ should match ./b/.c with !**/*.md and {dot: true}
    ✓ should match ./b/.c with !**/*.md and {nonegate: true}
    ✓ should match .b with !**/*.md
    ✓ should match .b with !**/*.md and {dot: true}
    ✓ should match .b with !**/*.md and {nonegate: true}
    ✓ should match .b.c with !**/*.md
    ✓ should match .b.c with !**/*.md and {dot: true}
    ✓ should match .b.c with !**/*.md and {nonegate: true}
    ✓ should match .b.c/ with !**/*.md
    ✓ should match .b.c/ with !**/*.md and {dot: true}
    ✓ should match .b.c/ with !**/*.md and {nonegate: true}
    ✓ should match .b/ with !**/*.md
    ✓ should match .b/ with !**/*.md and {dot: true}
    ✓ should match .b/ with !**/*.md and {nonegate: true}
    ✓ should match .b/.c with !**/*.md
    ✓ should match .b/.c with !**/*.md and {dot: true}
    ✓ should match .b/.c with !**/*.md and {nonegate: true}
    ✓ should match .b/c with !**/*.md
    ✓ should match .b/c with !**/*.md and {dot: true}
    ✓ should match .b/c with !**/*.md and {nonegate: true}
    ✓ should match b/.c with !**/*.md
    ✓ should match b/.c with !**/*.md and {dot: true}
    ✓ should match b/.c with !**/*.md and {nonegate: true}
    ✓ should match b/.c/ with !**/*.md
    ✓ should match b/.c/ with !**/*.md and {dot: true}
    ✓ should match b/.c/ with !**/*.md and {nonegate: true}
    ✓ should match a/+b/c with !**/*.md
    ✓ should match a/+b/c with !**/*.md and {dot: true}
    ✓ should match a/+b/c with !**/*.md and {nonegate: true}
    ✓ should match +a/+b/c with !**/*.md
    ✓ should match +a/+b/c with !**/*.md and {dot: true}
    ✓ should match +a/+b/c with !**/*.md and {nonegate: true}
    ✓ should match a (foo) with !**/*.md
    ✓ should match a (foo) with !**/*.md and {dot: true}
    ✓ should match a (foo) with !**/*.md and {nonegate: true}
    ✓ should match a (foo)/(bar) with !**/*.md
    ✓ should match a (foo)/(bar) with !**/*.md and {dot: true}
    ✓ should match a (foo)/(bar) with !**/*.md and {nonegate: true}
    ✓ should match a/b/c (1) with !**/*.md
    ✓ should match a/b/c (1) with !**/*.md and {dot: true}
    ✓ should match a/b/c (1) with !**/*.md and {nonegate: true}
    ✓ should match a/b (2)/c (1) with !**/*.md
    ✓ should match a/b (2)/c (1) with !**/*.md and {dot: true}
    ✓ should match a/b (2)/c (1) with !**/*.md and {nonegate: true}
    ✓ should match a/b/c [def] with !**/*.md
    ✓ should match a/b/c [def] with !**/*.md and {dot: true}
    ✓ should match a/b/c [def] with !**/*.md and {nonegate: true}
    ✓ should match a with !*.*
    ✓ should match a with !*.* and {dot: true}
    ✓ should match a with !*.* and {nonegate: true}
    ✓ should match a.md with !*.*
    ✓ should match a.md with !*.* and {dot: true}
    ✓ should match a.md with !*.* and {nonegate: true}
    ✓ should match a.js with !*.*
    ✓ should match a.js with !*.* and {dot: true}
    ✓ should match a.js with !*.* and {nonegate: true}
    ✓ should match a/ with !*.*
    ✓ should match a/ with !*.* and {dot: true}
    ✓ should match a/ with !*.* and {nonegate: true}
    ✓ should match a/b with !*.*
    ✓ should match a/b with !*.* and {dot: true}
    ✓ should match a/b with !*.* and {nonegate: true}
    ✓ should match a/b/.c.md with !*.*
    ✓ should match a/b/.c.md with !*.* and {dot: true}
    ✓ should match a/b/.c.md with !*.* and {nonegate: true}
    ✓ should match a/b/c with !*.*
    ✓ should match a/b/c with !*.* and {dot: true}
    ✓ should match a/b/c with !*.* and {nonegate: true}
    ✓ should match a/b/c.md with !*.*
    ✓ should match a/b/c.md with !*.* and {dot: true}
    ✓ should match a/b/c.md with !*.* and {nonegate: true}
    ✓ should match a/b/c/ with !*.*
    ✓ should match a/b/c/ with !*.* and {dot: true}
    ✓ should match a/b/c/ with !*.* and {nonegate: true}
    ✓ should match a/b/c/d with !*.*
    ✓ should match a/b/c/d with !*.* and {dot: true}
    ✓ should match a/b/c/d with !*.* and {nonegate: true}
    ✓ should match a/b/c/d/ with !*.*
    ✓ should match a/b/c/d/ with !*.* and {dot: true}
    ✓ should match a/b/c/d/ with !*.* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with !*.*
    ✓ should match a/b/c/d/e/f/z.js with !*.* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with !*.* and {nonegate: true}
    ✓ should match a/b/c/z.js with !*.*
    ✓ should match a/b/c/z.js with !*.* and {dot: true}
    ✓ should match a/b/c/z.js with !*.* and {nonegate: true}
    ✓ should match a/bb with !*.*
    ✓ should match a/bb with !*.* and {dot: true}
    ✓ should match a/bb with !*.* and {nonegate: true}
    ✓ should match a/cb with !*.*
    ✓ should match a/cb with !*.* and {dot: true}
    ✓ should match a/cb with !*.* and {nonegate: true}
    ✓ should match abbbz with !*.*
    ✓ should match abbbz with !*.* and {dot: true}
    ✓ should match abbbz with !*.* and {nonegate: true}
    ✓ should match abc with !*.*
    ✓ should match abc with !*.* and {dot: true}
    ✓ should match abc with !*.* and {nonegate: true}
    ✓ should match abd with !*.*
    ✓ should match abd with !*.* and {dot: true}
    ✓ should match abd with !*.* and {nonegate: true}
    ✓ should match z.js with !*.*
    ✓ should match z.js with !*.* and {dot: true}
    ✓ should match z.js with !*.* and {nonegate: true}
    ✓ should match za.js with !*.*
    ✓ should match za.js with !*.* and {dot: true}
    ✓ should match za.js with !*.* and {nonegate: true}
    ✓ should match !a.js with !*.*
    ✓ should match !a.js with !*.* and {dot: true}
    ✓ should match !a.js with !*.* and {nonegate: true}
    ✓ should match !a/b with !*.*
    ✓ should match !a/b with !*.* and {dot: true}
    ✓ should match !a/b with !*.* and {nonegate: true}
    ✓ should match !a/b/ with !*.*
    ✓ should match !a/b/ with !*.* and {dot: true}
    ✓ should match !a/b/ with !*.* and {nonegate: true}
    ✓ should match !a/b/c with !*.*
    ✓ should match !a/b/c with !*.* and {dot: true}
    ✓ should match !a/b/c with !*.* and {nonegate: true}
    ✓ should match !a/b/c/ with !*.*
    ✓ should match !a/b/c/ with !*.* and {dot: true}
    ✓ should match !a/b/c/ with !*.* and {nonegate: true}
    ✓ should match !a/!b with !*.*
    ✓ should match !a/!b with !*.* and {dot: true}
    ✓ should match !a/!b with !*.* and {nonegate: true}
    ✓ should match !a/!b/c with !*.*
    ✓ should match !a/!b/c with !*.* and {dot: true}
    ✓ should match !a/!b/c with !*.* and {nonegate: true}
    ✓ should match !a/!b/c/d with !*.*
    ✓ should match !a/!b/c/d with !*.* and {dot: true}
    ✓ should match !a/!b/c/d with !*.* and {nonegate: true}
    ✓ should match !a/b/.c.md with !*.*
    ✓ should match !a/b/.c.md with !*.* and {dot: true}
    ✓ should match !a/b/.c.md with !*.* and {nonegate: true}
    ✓ should match /a/ with !*.*
    ✓ should match /a/ with !*.* and {dot: true}
    ✓ should match /a/ with !*.* and {nonegate: true}
    ✓ should match /a/b with !*.*
    ✓ should match /a/b with !*.* and {dot: true}
    ✓ should match /a/b with !*.* and {nonegate: true}
    ✓ should match /a/cb with !*.*
    ✓ should match /a/cb with !*.* and {dot: true}
    ✓ should match /a/cb with !*.* and {nonegate: true}
    ✓ should match /a/bb with !*.*
    ✓ should match /a/bb with !*.* and {dot: true}
    ✓ should match /a/bb with !*.* and {nonegate: true}
    ✓ should match /a/b/c with !*.*
    ✓ should match /a/b/c with !*.* and {dot: true}
    ✓ should match /a/b/c with !*.* and {nonegate: true}
    ✓ should match /a/b/c/ with !*.*
    ✓ should match /a/b/c/ with !*.* and {dot: true}
    ✓ should match /a/b/c/ with !*.* and {nonegate: true}
    ✓ should match /a/b/c/d with !*.*
    ✓ should match /a/b/c/d with !*.* and {dot: true}
    ✓ should match /a/b/c/d with !*.* and {nonegate: true}
    ✓ should match /a/b/c/d/ with !*.*
    ✓ should match /a/b/c/d/ with !*.* and {dot: true}
    ✓ should match /a/b/c/d/ with !*.* and {nonegate: true}
    ✓ should match . with !*.*
    ✓ should match . with !*.* and {dot: true}
    ✓ should match . with !*.* and {nonegate: true}
    ✓ should match ./ with !*.*
    ✓ should match ./ with !*.* and {dot: true}
    ✓ should match ./ with !*.* and {nonegate: true}
    ✓ should match .. with !*.*
    ✓ should match .. with !*.* and {dot: true}
    ✓ should match .. with !*.* and {nonegate: true}
    ✓ should match ../c with !*.*
    ✓ should match ../c with !*.* and {dot: true}
    ✓ should match ../c with !*.* and {nonegate: true}
    ✓ should match ../c with !*.*
    ✓ should match ../c with !*.* and {dot: true}
    ✓ should match ../c with !*.* and {nonegate: true}
    ✓ should match ./../c with !*.*
    ✓ should match ./../c with !*.* and {dot: true}
    ✓ should match ./../c with !*.* and {nonegate: true}
    ✓ should match ./a/../c with !*.*
    ✓ should match ./a/../c with !*.* and {dot: true}
    ✓ should match ./a/../c with !*.* and {nonegate: true}
    ✓ should match /.. with !*.*
    ✓ should match /.. with !*.* and {dot: true}
    ✓ should match /.. with !*.* and {nonegate: true}
    ✓ should match /../c with !*.*
    ✓ should match /../c with !*.* and {dot: true}
    ✓ should match /../c with !*.* and {nonegate: true}
    ✓ should match /../.c with !*.*
    ✓ should match /../.c with !*.* and {dot: true}
    ✓ should match /../.c with !*.* and {nonegate: true}
    ✓ should match /../.c/ with !*.*
    ✓ should match /../.c/ with !*.* and {dot: true}
    ✓ should match /../.c/ with !*.* and {nonegate: true}
    ✓ should match /a/../c with !*.*
    ✓ should match /a/../c with !*.* and {dot: true}
    ✓ should match /a/../c with !*.* and {nonegate: true}
    ✓ should match a/../c with !*.*
    ✓ should match a/../c with !*.* and {dot: true}
    ✓ should match a/../c with !*.* and {nonegate: true}
    ✓ should match ../.b/.c with !*.*
    ✓ should match ../.b/.c with !*.* and {dot: true}
    ✓ should match ../.b/.c with !*.* and {nonegate: true}
    ✓ should match ../b/.c with !*.*
    ✓ should match ../b/.c with !*.* and {dot: true}
    ✓ should match ../b/.c with !*.* and {nonegate: true}
    ✓ should match ./.b/.c with !*.*
    ✓ should match ./.b/.c with !*.* and {dot: true}
    ✓ should match ./.b/.c with !*.* and {nonegate: true}
    ✓ should match ./b/.c with !*.*
    ✓ should match ./b/.c with !*.* and {dot: true}
    ✓ should match ./b/.c with !*.* and {nonegate: true}
    ✓ should match .b with !*.*
    ✓ should match .b with !*.* and {dot: true}
    ✓ should match .b with !*.* and {nonegate: true}
    ✓ should match .b.c with !*.*
    ✓ should match .b.c with !*.* and {dot: true}
    ✓ should match .b.c with !*.* and {nonegate: true}
    ✓ should match .b.c/ with !*.*
    ✓ should match .b.c/ with !*.* and {dot: true}
    ✓ should match .b.c/ with !*.* and {nonegate: true}
    ✓ should match .b/ with !*.*
    ✓ should match .b/ with !*.* and {dot: true}
    ✓ should match .b/ with !*.* and {nonegate: true}
    ✓ should match .b/.c with !*.*
    ✓ should match .b/.c with !*.* and {dot: true}
    ✓ should match .b/.c with !*.* and {nonegate: true}
    ✓ should match .b/c with !*.*
    ✓ should match .b/c with !*.* and {dot: true}
    ✓ should match .b/c with !*.* and {nonegate: true}
    ✓ should match b/.c with !*.*
    ✓ should match b/.c with !*.* and {dot: true}
    ✓ should match b/.c with !*.* and {nonegate: true}
    ✓ should match b/.c/ with !*.*
    ✓ should match b/.c/ with !*.* and {dot: true}
    ✓ should match b/.c/ with !*.* and {nonegate: true}
    ✓ should match a/+b/c with !*.*
    ✓ should match a/+b/c with !*.* and {dot: true}
    ✓ should match a/+b/c with !*.* and {nonegate: true}
    ✓ should match +a/+b/c with !*.*
    ✓ should match +a/+b/c with !*.* and {dot: true}
    ✓ should match +a/+b/c with !*.* and {nonegate: true}
    ✓ should match a (foo) with !*.*
    ✓ should match a (foo) with !*.* and {dot: true}
    ✓ should match a (foo) with !*.* and {nonegate: true}
    ✓ should match a (foo)/(bar) with !*.*
    ✓ should match a (foo)/(bar) with !*.* and {dot: true}
    ✓ should match a (foo)/(bar) with !*.* and {nonegate: true}
    ✓ should match a/b/c (1) with !*.*
    ✓ should match a/b/c (1) with !*.* and {dot: true}
    ✓ should match a/b/c (1) with !*.* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with !*.*
    ✓ should match a/b (2)/c (1) with !*.* and {dot: true}
    ✓ should match a/b (2)/c (1) with !*.* and {nonegate: true}
    ✓ should match a/b/c [def] with !*.*
    ✓ should match a/b/c [def] with !*.* and {dot: true}
    ✓ should match a/b/c [def] with !*.* and {nonegate: true}
    ✓ should match a with !*.js
    ✓ should match a with !*.js and {dot: true}
    ✓ should match a with !*.js and {nonegate: true}
    ✓ should match a.md with !*.js
    ✓ should match a.md with !*.js and {dot: true}
    ✓ should match a.md with !*.js and {nonegate: true}
    ✓ should match a.js with !*.js
    ✓ should match a.js with !*.js and {dot: true}
    ✓ should match a.js with !*.js and {nonegate: true}
    ✓ should match a/ with !*.js
    ✓ should match a/ with !*.js and {dot: true}
    ✓ should match a/ with !*.js and {nonegate: true}
    ✓ should match a/b with !*.js
    ✓ should match a/b with !*.js and {dot: true}
    ✓ should match a/b with !*.js and {nonegate: true}
    ✓ should match a/b/.c.md with !*.js
    ✓ should match a/b/.c.md with !*.js and {dot: true}
    ✓ should match a/b/.c.md with !*.js and {nonegate: true}
    ✓ should match a/b/c with !*.js
    ✓ should match a/b/c with !*.js and {dot: true}
    ✓ should match a/b/c with !*.js and {nonegate: true}
    ✓ should match a/b/c.md with !*.js
    ✓ should match a/b/c.md with !*.js and {dot: true}
    ✓ should match a/b/c.md with !*.js and {nonegate: true}
    ✓ should match a/b/c/ with !*.js
    ✓ should match a/b/c/ with !*.js and {dot: true}
    ✓ should match a/b/c/ with !*.js and {nonegate: true}
    ✓ should match a/b/c/d with !*.js
    ✓ should match a/b/c/d with !*.js and {dot: true}
    ✓ should match a/b/c/d with !*.js and {nonegate: true}
    ✓ should match a/b/c/d/ with !*.js
    ✓ should match a/b/c/d/ with !*.js and {dot: true}
    ✓ should match a/b/c/d/ with !*.js and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with !*.js
    ✓ should match a/b/c/d/e/f/z.js with !*.js and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with !*.js and {nonegate: true}
    ✓ should match a/b/c/z.js with !*.js
    ✓ should match a/b/c/z.js with !*.js and {dot: true}
    ✓ should match a/b/c/z.js with !*.js and {nonegate: true}
    ✓ should match a/bb with !*.js
    ✓ should match a/bb with !*.js and {dot: true}
    ✓ should match a/bb with !*.js and {nonegate: true}
    ✓ should match a/cb with !*.js
    ✓ should match a/cb with !*.js and {dot: true}
    ✓ should match a/cb with !*.js and {nonegate: true}
    ✓ should match abbbz with !*.js
    ✓ should match abbbz with !*.js and {dot: true}
    ✓ should match abbbz with !*.js and {nonegate: true}
    ✓ should match abc with !*.js
    ✓ should match abc with !*.js and {dot: true}
    ✓ should match abc with !*.js and {nonegate: true}
    ✓ should match abd with !*.js
    ✓ should match abd with !*.js and {dot: true}
    ✓ should match abd with !*.js and {nonegate: true}
    ✓ should match z.js with !*.js
    ✓ should match z.js with !*.js and {dot: true}
    ✓ should match z.js with !*.js and {nonegate: true}
    ✓ should match za.js with !*.js
    ✓ should match za.js with !*.js and {dot: true}
    ✓ should match za.js with !*.js and {nonegate: true}
    ✓ should match !a.js with !*.js
    ✓ should match !a.js with !*.js and {dot: true}
    ✓ should match !a.js with !*.js and {nonegate: true}
    ✓ should match !a/b with !*.js
    ✓ should match !a/b with !*.js and {dot: true}
    ✓ should match !a/b with !*.js and {nonegate: true}
    ✓ should match !a/b/ with !*.js
    ✓ should match !a/b/ with !*.js and {dot: true}
    ✓ should match !a/b/ with !*.js and {nonegate: true}
    ✓ should match !a/b/c with !*.js
    ✓ should match !a/b/c with !*.js and {dot: true}
    ✓ should match !a/b/c with !*.js and {nonegate: true}
    ✓ should match !a/b/c/ with !*.js
    ✓ should match !a/b/c/ with !*.js and {dot: true}
    ✓ should match !a/b/c/ with !*.js and {nonegate: true}
    ✓ should match !a/!b with !*.js
    ✓ should match !a/!b with !*.js and {dot: true}
    ✓ should match !a/!b with !*.js and {nonegate: true}
    ✓ should match !a/!b/c with !*.js
    ✓ should match !a/!b/c with !*.js and {dot: true}
    ✓ should match !a/!b/c with !*.js and {nonegate: true}
    ✓ should match !a/!b/c/d with !*.js
    ✓ should match !a/!b/c/d with !*.js and {dot: true}
    ✓ should match !a/!b/c/d with !*.js and {nonegate: true}
    ✓ should match !a/b/.c.md with !*.js
    ✓ should match !a/b/.c.md with !*.js and {dot: true}
    ✓ should match !a/b/.c.md with !*.js and {nonegate: true}
    ✓ should match /a/ with !*.js
    ✓ should match /a/ with !*.js and {dot: true}
    ✓ should match /a/ with !*.js and {nonegate: true}
    ✓ should match /a/b with !*.js
    ✓ should match /a/b with !*.js and {dot: true}
    ✓ should match /a/b with !*.js and {nonegate: true}
    ✓ should match /a/cb with !*.js
    ✓ should match /a/cb with !*.js and {dot: true}
    ✓ should match /a/cb with !*.js and {nonegate: true}
    ✓ should match /a/bb with !*.js
    ✓ should match /a/bb with !*.js and {dot: true}
    ✓ should match /a/bb with !*.js and {nonegate: true}
    ✓ should match /a/b/c with !*.js
    ✓ should match /a/b/c with !*.js and {dot: true}
    ✓ should match /a/b/c with !*.js and {nonegate: true}
    ✓ should match /a/b/c/ with !*.js
    ✓ should match /a/b/c/ with !*.js and {dot: true}
    ✓ should match /a/b/c/ with !*.js and {nonegate: true}
    ✓ should match /a/b/c/d with !*.js
    ✓ should match /a/b/c/d with !*.js and {dot: true}
    ✓ should match /a/b/c/d with !*.js and {nonegate: true}
    ✓ should match /a/b/c/d/ with !*.js
    ✓ should match /a/b/c/d/ with !*.js and {dot: true}
    ✓ should match /a/b/c/d/ with !*.js and {nonegate: true}
    ✓ should match . with !*.js
    ✓ should match . with !*.js and {dot: true}
    ✓ should match . with !*.js and {nonegate: true}
    ✓ should match ./ with !*.js
    ✓ should match ./ with !*.js and {dot: true}
    ✓ should match ./ with !*.js and {nonegate: true}
    ✓ should match .. with !*.js
    ✓ should match .. with !*.js and {dot: true}
    ✓ should match .. with !*.js and {nonegate: true}
    ✓ should match ../c with !*.js
    ✓ should match ../c with !*.js and {dot: true}
    ✓ should match ../c with !*.js and {nonegate: true}
    ✓ should match ../c with !*.js
    ✓ should match ../c with !*.js and {dot: true}
    ✓ should match ../c with !*.js and {nonegate: true}
    ✓ should match ./../c with !*.js
    ✓ should match ./../c with !*.js and {dot: true}
    ✓ should match ./../c with !*.js and {nonegate: true}
    ✓ should match ./a/../c with !*.js
    ✓ should match ./a/../c with !*.js and {dot: true}
    ✓ should match ./a/../c with !*.js and {nonegate: true}
    ✓ should match /.. with !*.js
    ✓ should match /.. with !*.js and {dot: true}
    ✓ should match /.. with !*.js and {nonegate: true}
    ✓ should match /../c with !*.js
    ✓ should match /../c with !*.js and {dot: true}
    ✓ should match /../c with !*.js and {nonegate: true}
    ✓ should match /../.c with !*.js
    ✓ should match /../.c with !*.js and {dot: true}
    ✓ should match /../.c with !*.js and {nonegate: true}
    ✓ should match /../.c/ with !*.js
    ✓ should match /../.c/ with !*.js and {dot: true}
    ✓ should match /../.c/ with !*.js and {nonegate: true}
    ✓ should match /a/../c with !*.js
    ✓ should match /a/../c with !*.js and {dot: true}
    ✓ should match /a/../c with !*.js and {nonegate: true}
    ✓ should match a/../c with !*.js
    ✓ should match a/../c with !*.js and {dot: true}
    ✓ should match a/../c with !*.js and {nonegate: true}
    ✓ should match ../.b/.c with !*.js
    ✓ should match ../.b/.c with !*.js and {dot: true}
    ✓ should match ../.b/.c with !*.js and {nonegate: true}
    ✓ should match ../b/.c with !*.js
    ✓ should match ../b/.c with !*.js and {dot: true}
    ✓ should match ../b/.c with !*.js and {nonegate: true}
    ✓ should match ./.b/.c with !*.js
    ✓ should match ./.b/.c with !*.js and {dot: true}
    ✓ should match ./.b/.c with !*.js and {nonegate: true}
    ✓ should match ./b/.c with !*.js
    ✓ should match ./b/.c with !*.js and {dot: true}
    ✓ should match ./b/.c with !*.js and {nonegate: true}
    ✓ should match .b with !*.js
    ✓ should match .b with !*.js and {dot: true}
    ✓ should match .b with !*.js and {nonegate: true}
    ✓ should match .b.c with !*.js
    ✓ should match .b.c with !*.js and {dot: true}
    ✓ should match .b.c with !*.js and {nonegate: true}
    ✓ should match .b.c/ with !*.js
    ✓ should match .b.c/ with !*.js and {dot: true}
    ✓ should match .b.c/ with !*.js and {nonegate: true}
    ✓ should match .b/ with !*.js
    ✓ should match .b/ with !*.js and {dot: true}
    ✓ should match .b/ with !*.js and {nonegate: true}
    ✓ should match .b/.c with !*.js
    ✓ should match .b/.c with !*.js and {dot: true}
    ✓ should match .b/.c with !*.js and {nonegate: true}
    ✓ should match .b/c with !*.js
    ✓ should match .b/c with !*.js and {dot: true}
    ✓ should match .b/c with !*.js and {nonegate: true}
    ✓ should match b/.c with !*.js
    ✓ should match b/.c with !*.js and {dot: true}
    ✓ should match b/.c with !*.js and {nonegate: true}
    ✓ should match b/.c/ with !*.js
    ✓ should match b/.c/ with !*.js and {dot: true}
    ✓ should match b/.c/ with !*.js and {nonegate: true}
    ✓ should match a/+b/c with !*.js
    ✓ should match a/+b/c with !*.js and {dot: true}
    ✓ should match a/+b/c with !*.js and {nonegate: true}
    ✓ should match +a/+b/c with !*.js
    ✓ should match +a/+b/c with !*.js and {dot: true}
    ✓ should match +a/+b/c with !*.js and {nonegate: true}
    ✓ should match a (foo) with !*.js
    ✓ should match a (foo) with !*.js and {dot: true}
    ✓ should match a (foo) with !*.js and {nonegate: true}
    ✓ should match a (foo)/(bar) with !*.js
    ✓ should match a (foo)/(bar) with !*.js and {dot: true}
    ✓ should match a (foo)/(bar) with !*.js and {nonegate: true}
    ✓ should match a/b/c (1) with !*.js
    ✓ should match a/b/c (1) with !*.js and {dot: true}
    ✓ should match a/b/c (1) with !*.js and {nonegate: true}
    ✓ should match a/b (2)/c (1) with !*.js
    ✓ should match a/b (2)/c (1) with !*.js and {dot: true}
    ✓ should match a/b (2)/c (1) with !*.js and {nonegate: true}
    ✓ should match a/b/c [def] with !*.js
    ✓ should match a/b/c [def] with !*.js and {dot: true}
    ✓ should match a/b/c [def] with !*.js and {nonegate: true}
    ✓ should match a with !*/**/*
    ✓ should match a with !*/**/* and {dot: true}
    ✓ should match a with !*/**/* and {nonegate: true}
    ✓ should match a.md with !*/**/*
    ✓ should match a.md with !*/**/* and {dot: true}
    ✓ should match a.md with !*/**/* and {nonegate: true}
    ✓ should match a.js with !*/**/*
    ✓ should match a.js with !*/**/* and {dot: true}
    ✓ should match a.js with !*/**/* and {nonegate: true}
    ✓ should match a/ with !*/**/*
    ✓ should match a/ with !*/**/* and {dot: true}
    ✓ should match a/ with !*/**/* and {nonegate: true}
    ✓ should match a/b with !*/**/*
    ✓ should match a/b with !*/**/* and {dot: true}
    ✓ should match a/b with !*/**/* and {nonegate: true}
    ✓ should match a/b/.c.md with !*/**/*
    ✓ should match a/b/.c.md with !*/**/* and {dot: true}
    ✓ should match a/b/.c.md with !*/**/* and {nonegate: true}
    ✓ should match a/b/c with !*/**/*
    ✓ should match a/b/c with !*/**/* and {dot: true}
    ✓ should match a/b/c with !*/**/* and {nonegate: true}
    ✓ should match a/b/c.md with !*/**/*
    ✓ should match a/b/c.md with !*/**/* and {dot: true}
    ✓ should match a/b/c.md with !*/**/* and {nonegate: true}
    ✓ should match a/b/c/ with !*/**/*
    ✓ should match a/b/c/ with !*/**/* and {dot: true}
    ✓ should match a/b/c/ with !*/**/* and {nonegate: true}
    ✓ should match a/b/c/d with !*/**/*
    ✓ should match a/b/c/d with !*/**/* and {dot: true}
    ✓ should match a/b/c/d with !*/**/* and {nonegate: true}
    ✓ should match a/b/c/d/ with !*/**/*
    ✓ should match a/b/c/d/ with !*/**/* and {dot: true}
    ✓ should match a/b/c/d/ with !*/**/* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with !*/**/*
    ✓ should match a/b/c/d/e/f/z.js with !*/**/* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with !*/**/* and {nonegate: true}
    ✓ should match a/b/c/z.js with !*/**/*
    ✓ should match a/b/c/z.js with !*/**/* and {dot: true}
    ✓ should match a/b/c/z.js with !*/**/* and {nonegate: true}
    ✓ should match a/bb with !*/**/*
    ✓ should match a/bb with !*/**/* and {dot: true}
    ✓ should match a/bb with !*/**/* and {nonegate: true}
    ✓ should match a/cb with !*/**/*
    ✓ should match a/cb with !*/**/* and {dot: true}
    ✓ should match a/cb with !*/**/* and {nonegate: true}
    ✓ should match abbbz with !*/**/*
    ✓ should match abbbz with !*/**/* and {dot: true}
    ✓ should match abbbz with !*/**/* and {nonegate: true}
    ✓ should match abc with !*/**/*
    ✓ should match abc with !*/**/* and {dot: true}
    ✓ should match abc with !*/**/* and {nonegate: true}
    ✓ should match abd with !*/**/*
    ✓ should match abd with !*/**/* and {dot: true}
    ✓ should match abd with !*/**/* and {nonegate: true}
    ✓ should match z.js with !*/**/*
    ✓ should match z.js with !*/**/* and {dot: true}
    ✓ should match z.js with !*/**/* and {nonegate: true}
    ✓ should match za.js with !*/**/*
    ✓ should match za.js with !*/**/* and {dot: true}
    ✓ should match za.js with !*/**/* and {nonegate: true}
    ✓ should match !a.js with !*/**/*
    ✓ should match !a.js with !*/**/* and {dot: true}
    ✓ should match !a.js with !*/**/* and {nonegate: true}
    ✓ should match !a/b with !*/**/*
    ✓ should match !a/b with !*/**/* and {dot: true}
    ✓ should match !a/b with !*/**/* and {nonegate: true}
    ✓ should match !a/b/ with !*/**/*
    ✓ should match !a/b/ with !*/**/* and {dot: true}
    ✓ should match !a/b/ with !*/**/* and {nonegate: true}
    ✓ should match !a/b/c with !*/**/*
    ✓ should match !a/b/c with !*/**/* and {dot: true}
    ✓ should match !a/b/c with !*/**/* and {nonegate: true}
    ✓ should match !a/b/c/ with !*/**/*
    ✓ should match !a/b/c/ with !*/**/* and {dot: true}
    ✓ should match !a/b/c/ with !*/**/* and {nonegate: true}
    ✓ should match !a/!b with !*/**/*
    ✓ should match !a/!b with !*/**/* and {dot: true}
    ✓ should match !a/!b with !*/**/* and {nonegate: true}
    ✓ should match !a/!b/c with !*/**/*
    ✓ should match !a/!b/c with !*/**/* and {dot: true}
    ✓ should match !a/!b/c with !*/**/* and {nonegate: true}
    ✓ should match !a/!b/c/d with !*/**/*
    ✓ should match !a/!b/c/d with !*/**/* and {dot: true}
    ✓ should match !a/!b/c/d with !*/**/* and {nonegate: true}
    ✓ should match !a/b/.c.md with !*/**/*
    ✓ should match !a/b/.c.md with !*/**/* and {dot: true}
    ✓ should match !a/b/.c.md with !*/**/* and {nonegate: true}
    ✓ should match /a/ with !*/**/*
    ✓ should match /a/ with !*/**/* and {dot: true}
    ✓ should match /a/ with !*/**/* and {nonegate: true}
    ✓ should match /a/b with !*/**/*
    ✓ should match /a/b with !*/**/* and {dot: true}
    ✓ should match /a/b with !*/**/* and {nonegate: true}
    ✓ should match /a/cb with !*/**/*
    ✓ should match /a/cb with !*/**/* and {dot: true}
    ✓ should match /a/cb with !*/**/* and {nonegate: true}
    ✓ should match /a/bb with !*/**/*
    ✓ should match /a/bb with !*/**/* and {dot: true}
    ✓ should match /a/bb with !*/**/* and {nonegate: true}
    ✓ should match /a/b/c with !*/**/*
    ✓ should match /a/b/c with !*/**/* and {dot: true}
    ✓ should match /a/b/c with !*/**/* and {nonegate: true}
    ✓ should match /a/b/c/ with !*/**/*
    ✓ should match /a/b/c/ with !*/**/* and {dot: true}
    ✓ should match /a/b/c/ with !*/**/* and {nonegate: true}
    ✓ should match /a/b/c/d with !*/**/*
    ✓ should match /a/b/c/d with !*/**/* and {dot: true}
    ✓ should match /a/b/c/d with !*/**/* and {nonegate: true}
    ✓ should match /a/b/c/d/ with !*/**/*
    ✓ should match /a/b/c/d/ with !*/**/* and {dot: true}
    ✓ should match /a/b/c/d/ with !*/**/* and {nonegate: true}
    ✓ should match . with !*/**/*
    ✓ should match . with !*/**/* and {dot: true}
    ✓ should match . with !*/**/* and {nonegate: true}
    ✓ should match ./ with !*/**/*
    ✓ should match ./ with !*/**/* and {dot: true}
    ✓ should match ./ with !*/**/* and {nonegate: true}
    ✓ should match .. with !*/**/*
    ✓ should match .. with !*/**/* and {dot: true}
    ✓ should match .. with !*/**/* and {nonegate: true}
    ✓ should match ../c with !*/**/*
    ✓ should match ../c with !*/**/* and {dot: true}
    ✓ should match ../c with !*/**/* and {nonegate: true}
    ✓ should match ../c with !*/**/*
    ✓ should match ../c with !*/**/* and {dot: true}
    ✓ should match ../c with !*/**/* and {nonegate: true}
    ✓ should match ./../c with !*/**/*
    ✓ should match ./../c with !*/**/* and {dot: true}
    ✓ should match ./../c with !*/**/* and {nonegate: true}
    ✓ should match ./a/../c with !*/**/*
    ✓ should match ./a/../c with !*/**/* and {dot: true}
    ✓ should match ./a/../c with !*/**/* and {nonegate: true}
    ✓ should match /.. with !*/**/*
    ✓ should match /.. with !*/**/* and {dot: true}
    ✓ should match /.. with !*/**/* and {nonegate: true}
    ✓ should match /../c with !*/**/*
    ✓ should match /../c with !*/**/* and {dot: true}
    ✓ should match /../c with !*/**/* and {nonegate: true}
    ✓ should match /../.c with !*/**/*
    ✓ should match /../.c with !*/**/* and {dot: true}
    ✓ should match /../.c with !*/**/* and {nonegate: true}
    ✓ should match /../.c/ with !*/**/*
    ✓ should match /../.c/ with !*/**/* and {dot: true}
    ✓ should match /../.c/ with !*/**/* and {nonegate: true}
    ✓ should match /a/../c with !*/**/*
    ✓ should match /a/../c with !*/**/* and {dot: true}
    ✓ should match /a/../c with !*/**/* and {nonegate: true}
    ✓ should match a/../c with !*/**/*
    ✓ should match a/../c with !*/**/* and {dot: true}
    ✓ should match a/../c with !*/**/* and {nonegate: true}
    ✓ should match ../.b/.c with !*/**/*
    ✓ should match ../.b/.c with !*/**/* and {dot: true}
    ✓ should match ../.b/.c with !*/**/* and {nonegate: true}
    ✓ should match ../b/.c with !*/**/*
    ✓ should match ../b/.c with !*/**/* and {dot: true}
    ✓ should match ../b/.c with !*/**/* and {nonegate: true}
    ✓ should match ./.b/.c with !*/**/*
    ✓ should match ./.b/.c with !*/**/* and {dot: true}
    ✓ should match ./.b/.c with !*/**/* and {nonegate: true}
    ✓ should match ./b/.c with !*/**/*
    ✓ should match ./b/.c with !*/**/* and {dot: true}
    ✓ should match ./b/.c with !*/**/* and {nonegate: true}
    ✓ should match .b with !*/**/*
    ✓ should match .b with !*/**/* and {dot: true}
    ✓ should match .b with !*/**/* and {nonegate: true}
    ✓ should match .b.c with !*/**/*
    ✓ should match .b.c with !*/**/* and {dot: true}
    ✓ should match .b.c with !*/**/* and {nonegate: true}
    ✓ should match .b.c/ with !*/**/*
    ✓ should match .b.c/ with !*/**/* and {dot: true}
    ✓ should match .b.c/ with !*/**/* and {nonegate: true}
    ✓ should match .b/ with !*/**/*
    ✓ should match .b/ with !*/**/* and {dot: true}
    ✓ should match .b/ with !*/**/* and {nonegate: true}
    ✓ should match .b/.c with !*/**/*
    ✓ should match .b/.c with !*/**/* and {dot: true}
    ✓ should match .b/.c with !*/**/* and {nonegate: true}
    ✓ should match .b/c with !*/**/*
    ✓ should match .b/c with !*/**/* and {dot: true}
    ✓ should match .b/c with !*/**/* and {nonegate: true}
    ✓ should match b/.c with !*/**/*
    ✓ should match b/.c with !*/**/* and {dot: true}
    ✓ should match b/.c with !*/**/* and {nonegate: true}
    ✓ should match b/.c/ with !*/**/*
    ✓ should match b/.c/ with !*/**/* and {dot: true}
    ✓ should match b/.c/ with !*/**/* and {nonegate: true}
    ✓ should match a/+b/c with !*/**/*
    ✓ should match a/+b/c with !*/**/* and {dot: true}
    ✓ should match a/+b/c with !*/**/* and {nonegate: true}
    ✓ should match +a/+b/c with !*/**/*
    ✓ should match +a/+b/c with !*/**/* and {dot: true}
    ✓ should match +a/+b/c with !*/**/* and {nonegate: true}
    ✓ should match a (foo) with !*/**/*
    ✓ should match a (foo) with !*/**/* and {dot: true}
    ✓ should match a (foo) with !*/**/* and {nonegate: true}
    ✓ should match a (foo)/(bar) with !*/**/*
    ✓ should match a (foo)/(bar) with !*/**/* and {dot: true}
    ✓ should match a (foo)/(bar) with !*/**/* and {nonegate: true}
    ✓ should match a/b/c (1) with !*/**/*
    ✓ should match a/b/c (1) with !*/**/* and {dot: true}
    ✓ should match a/b/c (1) with !*/**/* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with !*/**/*
    ✓ should match a/b (2)/c (1) with !*/**/* and {dot: true}
    ✓ should match a/b (2)/c (1) with !*/**/* and {nonegate: true}
    ✓ should match a/b/c [def] with !*/**/*
    ✓ should match a/b/c [def] with !*/**/* and {dot: true}
    ✓ should match a/b/c [def] with !*/**/* and {nonegate: true}
    ✓ should match a with !*/**/*/
    ✓ should match a with !*/**/*/ and {dot: true}
    ✓ should match a with !*/**/*/ and {nonegate: true}
    ✓ should match a.md with !*/**/*/
    ✓ should match a.md with !*/**/*/ and {dot: true}
    ✓ should match a.md with !*/**/*/ and {nonegate: true}
    ✓ should match a.js with !*/**/*/
    ✓ should match a.js with !*/**/*/ and {dot: true}
    ✓ should match a.js with !*/**/*/ and {nonegate: true}
    ✓ should match a/ with !*/**/*/
    ✓ should match a/ with !*/**/*/ and {dot: true}
    ✓ should match a/ with !*/**/*/ and {nonegate: true}
    ✓ should match a/b with !*/**/*/
    ✓ should match a/b with !*/**/*/ and {dot: true}
    ✓ should match a/b with !*/**/*/ and {nonegate: true}
    ✓ should match a/b/.c.md with !*/**/*/
    ✓ should match a/b/.c.md with !*/**/*/ and {dot: true}
    ✓ should match a/b/.c.md with !*/**/*/ and {nonegate: true}
    ✓ should match a/b/c with !*/**/*/
    ✓ should match a/b/c with !*/**/*/ and {dot: true}
    ✓ should match a/b/c with !*/**/*/ and {nonegate: true}
    ✓ should match a/b/c.md with !*/**/*/
    ✓ should match a/b/c.md with !*/**/*/ and {dot: true}
    ✓ should match a/b/c.md with !*/**/*/ and {nonegate: true}
    ✓ should match a/b/c/ with !*/**/*/
    ✓ should match a/b/c/ with !*/**/*/ and {dot: true}
    ✓ should match a/b/c/ with !*/**/*/ and {nonegate: true}
    ✓ should match a/b/c/d with !*/**/*/
    ✓ should match a/b/c/d with !*/**/*/ and {dot: true}
    ✓ should match a/b/c/d with !*/**/*/ and {nonegate: true}
    ✓ should match a/b/c/d/ with !*/**/*/
    ✓ should match a/b/c/d/ with !*/**/*/ and {dot: true}
    ✓ should match a/b/c/d/ with !*/**/*/ and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with !*/**/*/
    ✓ should match a/b/c/d/e/f/z.js with !*/**/*/ and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with !*/**/*/ and {nonegate: true}
    ✓ should match a/b/c/z.js with !*/**/*/
    ✓ should match a/b/c/z.js with !*/**/*/ and {dot: true}
    ✓ should match a/b/c/z.js with !*/**/*/ and {nonegate: true}
    ✓ should match a/bb with !*/**/*/
    ✓ should match a/bb with !*/**/*/ and {dot: true}
    ✓ should match a/bb with !*/**/*/ and {nonegate: true}
    ✓ should match a/cb with !*/**/*/
    ✓ should match a/cb with !*/**/*/ and {dot: true}
    ✓ should match a/cb with !*/**/*/ and {nonegate: true}
    ✓ should match abbbz with !*/**/*/
    ✓ should match abbbz with !*/**/*/ and {dot: true}
    ✓ should match abbbz with !*/**/*/ and {nonegate: true}
    ✓ should match abc with !*/**/*/
    ✓ should match abc with !*/**/*/ and {dot: true}
    ✓ should match abc with !*/**/*/ and {nonegate: true}
    ✓ should match abd with !*/**/*/
    ✓ should match abd with !*/**/*/ and {dot: true}
    ✓ should match abd with !*/**/*/ and {nonegate: true}
    ✓ should match z.js with !*/**/*/
    ✓ should match z.js with !*/**/*/ and {dot: true}
    ✓ should match z.js with !*/**/*/ and {nonegate: true}
    ✓ should match za.js with !*/**/*/
    ✓ should match za.js with !*/**/*/ and {dot: true}
    ✓ should match za.js with !*/**/*/ and {nonegate: true}
    ✓ should match !a.js with !*/**/*/
    ✓ should match !a.js with !*/**/*/ and {dot: true}
    ✓ should match !a.js with !*/**/*/ and {nonegate: true}
    ✓ should match !a/b with !*/**/*/
    ✓ should match !a/b with !*/**/*/ and {dot: true}
    ✓ should match !a/b with !*/**/*/ and {nonegate: true}
    ✓ should match !a/b/ with !*/**/*/
    ✓ should match !a/b/ with !*/**/*/ and {dot: true}
    ✓ should match !a/b/ with !*/**/*/ and {nonegate: true}
    ✓ should match !a/b/c with !*/**/*/
    ✓ should match !a/b/c with !*/**/*/ and {dot: true}
    ✓ should match !a/b/c with !*/**/*/ and {nonegate: true}
    ✓ should match !a/b/c/ with !*/**/*/
    ✓ should match !a/b/c/ with !*/**/*/ and {dot: true}
    ✓ should match !a/b/c/ with !*/**/*/ and {nonegate: true}
    ✓ should match !a/!b with !*/**/*/
    ✓ should match !a/!b with !*/**/*/ and {dot: true}
    ✓ should match !a/!b with !*/**/*/ and {nonegate: true}
    ✓ should match !a/!b/c with !*/**/*/
    ✓ should match !a/!b/c with !*/**/*/ and {dot: true}
    ✓ should match !a/!b/c with !*/**/*/ and {nonegate: true}
    ✓ should match !a/!b/c/d with !*/**/*/
    ✓ should match !a/!b/c/d with !*/**/*/ and {dot: true}
    ✓ should match !a/!b/c/d with !*/**/*/ and {nonegate: true}
    ✓ should match !a/b/.c.md with !*/**/*/
    ✓ should match !a/b/.c.md with !*/**/*/ and {dot: true}
    ✓ should match !a/b/.c.md with !*/**/*/ and {nonegate: true}
    ✓ should match /a/ with !*/**/*/
    ✓ should match /a/ with !*/**/*/ and {dot: true}
    ✓ should match /a/ with !*/**/*/ and {nonegate: true}
    ✓ should match /a/b with !*/**/*/
    ✓ should match /a/b with !*/**/*/ and {dot: true}
    ✓ should match /a/b with !*/**/*/ and {nonegate: true}
    ✓ should match /a/cb with !*/**/*/
    ✓ should match /a/cb with !*/**/*/ and {dot: true}
    ✓ should match /a/cb with !*/**/*/ and {nonegate: true}
    ✓ should match /a/bb with !*/**/*/
    ✓ should match /a/bb with !*/**/*/ and {dot: true}
    ✓ should match /a/bb with !*/**/*/ and {nonegate: true}
    ✓ should match /a/b/c with !*/**/*/
    ✓ should match /a/b/c with !*/**/*/ and {dot: true}
    ✓ should match /a/b/c with !*/**/*/ and {nonegate: true}
    ✓ should match /a/b/c/ with !*/**/*/
    ✓ should match /a/b/c/ with !*/**/*/ and {dot: true}
    ✓ should match /a/b/c/ with !*/**/*/ and {nonegate: true}
    ✓ should match /a/b/c/d with !*/**/*/
    ✓ should match /a/b/c/d with !*/**/*/ and {dot: true}
    ✓ should match /a/b/c/d with !*/**/*/ and {nonegate: true}
    ✓ should match /a/b/c/d/ with !*/**/*/
    ✓ should match /a/b/c/d/ with !*/**/*/ and {dot: true}
    ✓ should match /a/b/c/d/ with !*/**/*/ and {nonegate: true}
    ✓ should match . with !*/**/*/
    ✓ should match . with !*/**/*/ and {dot: true}
    ✓ should match . with !*/**/*/ and {nonegate: true}
    ✓ should match ./ with !*/**/*/
    ✓ should match ./ with !*/**/*/ and {dot: true}
    ✓ should match ./ with !*/**/*/ and {nonegate: true}
    ✓ should match .. with !*/**/*/
    ✓ should match .. with !*/**/*/ and {dot: true}
    ✓ should match .. with !*/**/*/ and {nonegate: true}
    ✓ should match ../c with !*/**/*/
    ✓ should match ../c with !*/**/*/ and {dot: true}
    ✓ should match ../c with !*/**/*/ and {nonegate: true}
    ✓ should match ../c with !*/**/*/
    ✓ should match ../c with !*/**/*/ and {dot: true}
    ✓ should match ../c with !*/**/*/ and {nonegate: true}
    ✓ should match ./../c with !*/**/*/
    ✓ should match ./../c with !*/**/*/ and {dot: true}
    ✓ should match ./../c with !*/**/*/ and {nonegate: true}
    ✓ should match ./a/../c with !*/**/*/
    ✓ should match ./a/../c with !*/**/*/ and {dot: true}
    ✓ should match ./a/../c with !*/**/*/ and {nonegate: true}
    ✓ should match /.. with !*/**/*/
    ✓ should match /.. with !*/**/*/ and {dot: true}
    ✓ should match /.. with !*/**/*/ and {nonegate: true}
    ✓ should match /../c with !*/**/*/
    ✓ should match /../c with !*/**/*/ and {dot: true}
    ✓ should match /../c with !*/**/*/ and {nonegate: true}
    ✓ should match /../.c with !*/**/*/
    ✓ should match /../.c with !*/**/*/ and {dot: true}
    ✓ should match /../.c with !*/**/*/ and {nonegate: true}
    ✓ should match /../.c/ with !*/**/*/
    ✓ should match /../.c/ with !*/**/*/ and {dot: true}
    ✓ should match /../.c/ with !*/**/*/ and {nonegate: true}
    ✓ should match /a/../c with !*/**/*/
    ✓ should match /a/../c with !*/**/*/ and {dot: true}
    ✓ should match /a/../c with !*/**/*/ and {nonegate: true}
    ✓ should match a/../c with !*/**/*/
    ✓ should match a/../c with !*/**/*/ and {dot: true}
    ✓ should match a/../c with !*/**/*/ and {nonegate: true}
    ✓ should match ../.b/.c with !*/**/*/
    ✓ should match ../.b/.c with !*/**/*/ and {dot: true}
    ✓ should match ../.b/.c with !*/**/*/ and {nonegate: true}
    ✓ should match ../b/.c with !*/**/*/
    ✓ should match ../b/.c with !*/**/*/ and {dot: true}
    ✓ should match ../b/.c with !*/**/*/ and {nonegate: true}
    ✓ should match ./.b/.c with !*/**/*/
    ✓ should match ./.b/.c with !*/**/*/ and {dot: true}
    ✓ should match ./.b/.c with !*/**/*/ and {nonegate: true}
    ✓ should match ./b/.c with !*/**/*/
    ✓ should match ./b/.c with !*/**/*/ and {dot: true}
    ✓ should match ./b/.c with !*/**/*/ and {nonegate: true}
    ✓ should match .b with !*/**/*/
    ✓ should match .b with !*/**/*/ and {dot: true}
    ✓ should match .b with !*/**/*/ and {nonegate: true}
    ✓ should match .b.c with !*/**/*/
    ✓ should match .b.c with !*/**/*/ and {dot: true}
    ✓ should match .b.c with !*/**/*/ and {nonegate: true}
    ✓ should match .b.c/ with !*/**/*/
    ✓ should match .b.c/ with !*/**/*/ and {dot: true}
    ✓ should match .b.c/ with !*/**/*/ and {nonegate: true}
    ✓ should match .b/ with !*/**/*/
    ✓ should match .b/ with !*/**/*/ and {dot: true}
    ✓ should match .b/ with !*/**/*/ and {nonegate: true}
    ✓ should match .b/.c with !*/**/*/
    ✓ should match .b/.c with !*/**/*/ and {dot: true}
    ✓ should match .b/.c with !*/**/*/ and {nonegate: true}
    ✓ should match .b/c with !*/**/*/
    ✓ should match .b/c with !*/**/*/ and {dot: true}
    ✓ should match .b/c with !*/**/*/ and {nonegate: true}
    ✓ should match b/.c with !*/**/*/
    ✓ should match b/.c with !*/**/*/ and {dot: true}
    ✓ should match b/.c with !*/**/*/ and {nonegate: true}
    ✓ should match b/.c/ with !*/**/*/
    ✓ should match b/.c/ with !*/**/*/ and {dot: true}
    ✓ should match b/.c/ with !*/**/*/ and {nonegate: true}
    ✓ should match a/+b/c with !*/**/*/
    ✓ should match a/+b/c with !*/**/*/ and {dot: true}
    ✓ should match a/+b/c with !*/**/*/ and {nonegate: true}
    ✓ should match +a/+b/c with !*/**/*/
    ✓ should match +a/+b/c with !*/**/*/ and {dot: true}
    ✓ should match +a/+b/c with !*/**/*/ and {nonegate: true}
    ✓ should match a (foo) with !*/**/*/
    ✓ should match a (foo) with !*/**/*/ and {dot: true}
    ✓ should match a (foo) with !*/**/*/ and {nonegate: true}
    ✓ should match a (foo)/(bar) with !*/**/*/
    ✓ should match a (foo)/(bar) with !*/**/*/ and {dot: true}
    ✓ should match a (foo)/(bar) with !*/**/*/ and {nonegate: true}
    ✓ should match a/b/c (1) with !*/**/*/
    ✓ should match a/b/c (1) with !*/**/*/ and {dot: true}
    ✓ should match a/b/c (1) with !*/**/*/ and {nonegate: true}
    ✓ should match a/b (2)/c (1) with !*/**/*/
    ✓ should match a/b (2)/c (1) with !*/**/*/ and {dot: true}
    ✓ should match a/b (2)/c (1) with !*/**/*/ and {nonegate: true}
    ✓ should match a/b/c [def] with !*/**/*/
    ✓ should match a/b/c [def] with !*/**/*/ and {dot: true}
    ✓ should match a/b/c [def] with !*/**/*/ and {nonegate: true}
    ✓ should match a with !*/*/*
    ✓ should match a with !*/*/* and {dot: true}
    ✓ should match a with !*/*/* and {nonegate: true}
    ✓ should match a.md with !*/*/*
    ✓ should match a.md with !*/*/* and {dot: true}
    ✓ should match a.md with !*/*/* and {nonegate: true}
    ✓ should match a.js with !*/*/*
    ✓ should match a.js with !*/*/* and {dot: true}
    ✓ should match a.js with !*/*/* and {nonegate: true}
    ✓ should match a/ with !*/*/*
    ✓ should match a/ with !*/*/* and {dot: true}
    ✓ should match a/ with !*/*/* and {nonegate: true}
    ✓ should match a/b with !*/*/*
    ✓ should match a/b with !*/*/* and {dot: true}
    ✓ should match a/b with !*/*/* and {nonegate: true}
    ✓ should match a/b/.c.md with !*/*/*
    ✓ should match a/b/.c.md with !*/*/* and {dot: true}
    ✓ should match a/b/.c.md with !*/*/* and {nonegate: true}
    ✓ should match a/b/c with !*/*/*
    ✓ should match a/b/c with !*/*/* and {dot: true}
    ✓ should match a/b/c with !*/*/* and {nonegate: true}
    ✓ should match a/b/c.md with !*/*/*
    ✓ should match a/b/c.md with !*/*/* and {dot: true}
    ✓ should match a/b/c.md with !*/*/* and {nonegate: true}
    ✓ should match a/b/c/ with !*/*/*
    ✓ should match a/b/c/ with !*/*/* and {dot: true}
    ✓ should match a/b/c/ with !*/*/* and {nonegate: true}
    ✓ should match a/b/c/d with !*/*/*
    ✓ should match a/b/c/d with !*/*/* and {dot: true}
    ✓ should match a/b/c/d with !*/*/* and {nonegate: true}
    ✓ should match a/b/c/d/ with !*/*/*
    ✓ should match a/b/c/d/ with !*/*/* and {dot: true}
    ✓ should match a/b/c/d/ with !*/*/* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with !*/*/*
    ✓ should match a/b/c/d/e/f/z.js with !*/*/* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with !*/*/* and {nonegate: true}
    ✓ should match a/b/c/z.js with !*/*/*
    ✓ should match a/b/c/z.js with !*/*/* and {dot: true}
    ✓ should match a/b/c/z.js with !*/*/* and {nonegate: true}
    ✓ should match a/bb with !*/*/*
    ✓ should match a/bb with !*/*/* and {dot: true}
    ✓ should match a/bb with !*/*/* and {nonegate: true}
    ✓ should match a/cb with !*/*/*
    ✓ should match a/cb with !*/*/* and {dot: true}
    ✓ should match a/cb with !*/*/* and {nonegate: true}
    ✓ should match abbbz with !*/*/*
    ✓ should match abbbz with !*/*/* and {dot: true}
    ✓ should match abbbz with !*/*/* and {nonegate: true}
    ✓ should match abc with !*/*/*
    ✓ should match abc with !*/*/* and {dot: true}
    ✓ should match abc with !*/*/* and {nonegate: true}
    ✓ should match abd with !*/*/*
    ✓ should match abd with !*/*/* and {dot: true}
    ✓ should match abd with !*/*/* and {nonegate: true}
    ✓ should match z.js with !*/*/*
    ✓ should match z.js with !*/*/* and {dot: true}
    ✓ should match z.js with !*/*/* and {nonegate: true}
    ✓ should match za.js with !*/*/*
    ✓ should match za.js with !*/*/* and {dot: true}
    ✓ should match za.js with !*/*/* and {nonegate: true}
    ✓ should match !a.js with !*/*/*
    ✓ should match !a.js with !*/*/* and {dot: true}
    ✓ should match !a.js with !*/*/* and {nonegate: true}
    ✓ should match !a/b with !*/*/*
    ✓ should match !a/b with !*/*/* and {dot: true}
    ✓ should match !a/b with !*/*/* and {nonegate: true}
    ✓ should match !a/b/ with !*/*/*
    ✓ should match !a/b/ with !*/*/* and {dot: true}
    ✓ should match !a/b/ with !*/*/* and {nonegate: true}
    ✓ should match !a/b/c with !*/*/*
    ✓ should match !a/b/c with !*/*/* and {dot: true}
    ✓ should match !a/b/c with !*/*/* and {nonegate: true}
    ✓ should match !a/b/c/ with !*/*/*
    ✓ should match !a/b/c/ with !*/*/* and {dot: true}
    ✓ should match !a/b/c/ with !*/*/* and {nonegate: true}
    ✓ should match !a/!b with !*/*/*
    ✓ should match !a/!b with !*/*/* and {dot: true}
    ✓ should match !a/!b with !*/*/* and {nonegate: true}
    ✓ should match !a/!b/c with !*/*/*
    ✓ should match !a/!b/c with !*/*/* and {dot: true}
    ✓ should match !a/!b/c with !*/*/* and {nonegate: true}
    ✓ should match !a/!b/c/d with !*/*/*
    ✓ should match !a/!b/c/d with !*/*/* and {dot: true}
    ✓ should match !a/!b/c/d with !*/*/* and {nonegate: true}
    ✓ should match !a/b/.c.md with !*/*/*
    ✓ should match !a/b/.c.md with !*/*/* and {dot: true}
    ✓ should match !a/b/.c.md with !*/*/* and {nonegate: true}
    ✓ should match /a/ with !*/*/*
    ✓ should match /a/ with !*/*/* and {dot: true}
    ✓ should match /a/ with !*/*/* and {nonegate: true}
    ✓ should match /a/b with !*/*/*
    ✓ should match /a/b with !*/*/* and {dot: true}
    ✓ should match /a/b with !*/*/* and {nonegate: true}
    ✓ should match /a/cb with !*/*/*
    ✓ should match /a/cb with !*/*/* and {dot: true}
    ✓ should match /a/cb with !*/*/* and {nonegate: true}
    ✓ should match /a/bb with !*/*/*
    ✓ should match /a/bb with !*/*/* and {dot: true}
    ✓ should match /a/bb with !*/*/* and {nonegate: true}
    ✓ should match /a/b/c with !*/*/*
    ✓ should match /a/b/c with !*/*/* and {dot: true}
    ✓ should match /a/b/c with !*/*/* and {nonegate: true}
    ✓ should match /a/b/c/ with !*/*/*
    ✓ should match /a/b/c/ with !*/*/* and {dot: true}
    ✓ should match /a/b/c/ with !*/*/* and {nonegate: true}
    ✓ should match /a/b/c/d with !*/*/*
    ✓ should match /a/b/c/d with !*/*/* and {dot: true}
    ✓ should match /a/b/c/d with !*/*/* and {nonegate: true}
    ✓ should match /a/b/c/d/ with !*/*/*
    ✓ should match /a/b/c/d/ with !*/*/* and {dot: true}
    ✓ should match /a/b/c/d/ with !*/*/* and {nonegate: true}
    ✓ should match . with !*/*/*
    ✓ should match . with !*/*/* and {dot: true}
    ✓ should match . with !*/*/* and {nonegate: true}
    ✓ should match ./ with !*/*/*
    ✓ should match ./ with !*/*/* and {dot: true}
    ✓ should match ./ with !*/*/* and {nonegate: true}
    ✓ should match .. with !*/*/*
    ✓ should match .. with !*/*/* and {dot: true}
    ✓ should match .. with !*/*/* and {nonegate: true}
    ✓ should match ../c with !*/*/*
    ✓ should match ../c with !*/*/* and {dot: true}
    ✓ should match ../c with !*/*/* and {nonegate: true}
    ✓ should match ../c with !*/*/*
    ✓ should match ../c with !*/*/* and {dot: true}
    ✓ should match ../c with !*/*/* and {nonegate: true}
    ✓ should match ./../c with !*/*/*
    ✓ should match ./../c with !*/*/* and {dot: true}
    ✓ should match ./../c with !*/*/* and {nonegate: true}
    ✓ should match ./a/../c with !*/*/*
    ✓ should match ./a/../c with !*/*/* and {dot: true}
    ✓ should match ./a/../c with !*/*/* and {nonegate: true}
    ✓ should match /.. with !*/*/*
    ✓ should match /.. with !*/*/* and {dot: true}
    ✓ should match /.. with !*/*/* and {nonegate: true}
    ✓ should match /../c with !*/*/*
    ✓ should match /../c with !*/*/* and {dot: true}
    ✓ should match /../c with !*/*/* and {nonegate: true}
    ✓ should match /../.c with !*/*/*
    ✓ should match /../.c with !*/*/* and {dot: true}
    ✓ should match /../.c with !*/*/* and {nonegate: true}
    ✓ should match /../.c/ with !*/*/*
    ✓ should match /../.c/ with !*/*/* and {dot: true}
    ✓ should match /../.c/ with !*/*/* and {nonegate: true}
    ✓ should match /a/../c with !*/*/*
    ✓ should match /a/../c with !*/*/* and {dot: true}
    ✓ should match /a/../c with !*/*/* and {nonegate: true}
    ✓ should match a/../c with !*/*/*
    ✓ should match a/../c with !*/*/* and {dot: true}
    ✓ should match a/../c with !*/*/* and {nonegate: true}
    ✓ should match ../.b/.c with !*/*/*
    ✓ should match ../.b/.c with !*/*/* and {dot: true}
    ✓ should match ../.b/.c with !*/*/* and {nonegate: true}
    ✓ should match ../b/.c with !*/*/*
    ✓ should match ../b/.c with !*/*/* and {dot: true}
    ✓ should match ../b/.c with !*/*/* and {nonegate: true}
    ✓ should match ./.b/.c with !*/*/*
    ✓ should match ./.b/.c with !*/*/* and {dot: true}
    ✓ should match ./.b/.c with !*/*/* and {nonegate: true}
    ✓ should match ./b/.c with !*/*/*
    ✓ should match ./b/.c with !*/*/* and {dot: true}
    ✓ should match ./b/.c with !*/*/* and {nonegate: true}
    ✓ should match .b with !*/*/*
    ✓ should match .b with !*/*/* and {dot: true}
    ✓ should match .b with !*/*/* and {nonegate: true}
    ✓ should match .b.c with !*/*/*
    ✓ should match .b.c with !*/*/* and {dot: true}
    ✓ should match .b.c with !*/*/* and {nonegate: true}
    ✓ should match .b.c/ with !*/*/*
    ✓ should match .b.c/ with !*/*/* and {dot: true}
    ✓ should match .b.c/ with !*/*/* and {nonegate: true}
    ✓ should match .b/ with !*/*/*
    ✓ should match .b/ with !*/*/* and {dot: true}
    ✓ should match .b/ with !*/*/* and {nonegate: true}
    ✓ should match .b/.c with !*/*/*
    ✓ should match .b/.c with !*/*/* and {dot: true}
    ✓ should match .b/.c with !*/*/* and {nonegate: true}
    ✓ should match .b/c with !*/*/*
    ✓ should match .b/c with !*/*/* and {dot: true}
    ✓ should match .b/c with !*/*/* and {nonegate: true}
    ✓ should match b/.c with !*/*/*
    ✓ should match b/.c with !*/*/* and {dot: true}
    ✓ should match b/.c with !*/*/* and {nonegate: true}
    ✓ should match b/.c/ with !*/*/*
    ✓ should match b/.c/ with !*/*/* and {dot: true}
    ✓ should match b/.c/ with !*/*/* and {nonegate: true}
    ✓ should match a/+b/c with !*/*/*
    ✓ should match a/+b/c with !*/*/* and {dot: true}
    ✓ should match a/+b/c with !*/*/* and {nonegate: true}
    ✓ should match +a/+b/c with !*/*/*
    ✓ should match +a/+b/c with !*/*/* and {dot: true}
    ✓ should match +a/+b/c with !*/*/* and {nonegate: true}
    ✓ should match a (foo) with !*/*/*
    ✓ should match a (foo) with !*/*/* and {dot: true}
    ✓ should match a (foo) with !*/*/* and {nonegate: true}
    ✓ should match a (foo)/(bar) with !*/*/*
    ✓ should match a (foo)/(bar) with !*/*/* and {dot: true}
    ✓ should match a (foo)/(bar) with !*/*/* and {nonegate: true}
    ✓ should match a/b/c (1) with !*/*/*
    ✓ should match a/b/c (1) with !*/*/* and {dot: true}
    ✓ should match a/b/c (1) with !*/*/* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with !*/*/*
    ✓ should match a/b (2)/c (1) with !*/*/* and {dot: true}
    ✓ should match a/b (2)/c (1) with !*/*/* and {nonegate: true}
    ✓ should match a/b/c [def] with !*/*/*
    ✓ should match a/b/c [def] with !*/*/* and {dot: true}
    ✓ should match a/b/c [def] with !*/*/* and {nonegate: true}
    ✓ should match a with !/**
    ✓ should match a with !/** and {dot: true}
    ✓ should match a with !/** and {nonegate: true}
    ✓ should match a.md with !/**
    ✓ should match a.md with !/** and {dot: true}
    ✓ should match a.md with !/** and {nonegate: true}
    ✓ should match a.js with !/**
    ✓ should match a.js with !/** and {dot: true}
    ✓ should match a.js with !/** and {nonegate: true}
    ✓ should match a/ with !/**
    ✓ should match a/ with !/** and {dot: true}
    ✓ should match a/ with !/** and {nonegate: true}
    ✓ should match a/b with !/**
    ✓ should match a/b with !/** and {dot: true}
    ✓ should match a/b with !/** and {nonegate: true}
    ✓ should match a/b/.c.md with !/**
    ✓ should match a/b/.c.md with !/** and {dot: true}
    ✓ should match a/b/.c.md with !/** and {nonegate: true}
    ✓ should match a/b/c with !/**
    ✓ should match a/b/c with !/** and {dot: true}
    ✓ should match a/b/c with !/** and {nonegate: true}
    ✓ should match a/b/c.md with !/**
    ✓ should match a/b/c.md with !/** and {dot: true}
    ✓ should match a/b/c.md with !/** and {nonegate: true}
    ✓ should match a/b/c/ with !/**
    ✓ should match a/b/c/ with !/** and {dot: true}
    ✓ should match a/b/c/ with !/** and {nonegate: true}
    ✓ should match a/b/c/d with !/**
    ✓ should match a/b/c/d with !/** and {dot: true}
    ✓ should match a/b/c/d with !/** and {nonegate: true}
    ✓ should match a/b/c/d/ with !/**
    ✓ should match a/b/c/d/ with !/** and {dot: true}
    ✓ should match a/b/c/d/ with !/** and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with !/**
    ✓ should match a/b/c/d/e/f/z.js with !/** and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with !/** and {nonegate: true}
    ✓ should match a/b/c/z.js with !/**
    ✓ should match a/b/c/z.js with !/** and {dot: true}
    ✓ should match a/b/c/z.js with !/** and {nonegate: true}
    ✓ should match a/bb with !/**
    ✓ should match a/bb with !/** and {dot: true}
    ✓ should match a/bb with !/** and {nonegate: true}
    ✓ should match a/cb with !/**
    ✓ should match a/cb with !/** and {dot: true}
    ✓ should match a/cb with !/** and {nonegate: true}
    ✓ should match abbbz with !/**
    ✓ should match abbbz with !/** and {dot: true}
    ✓ should match abbbz with !/** and {nonegate: true}
    ✓ should match abc with !/**
    ✓ should match abc with !/** and {dot: true}
    ✓ should match abc with !/** and {nonegate: true}
    ✓ should match abd with !/**
    ✓ should match abd with !/** and {dot: true}
    ✓ should match abd with !/** and {nonegate: true}
    ✓ should match z.js with !/**
    ✓ should match z.js with !/** and {dot: true}
    ✓ should match z.js with !/** and {nonegate: true}
    ✓ should match za.js with !/**
    ✓ should match za.js with !/** and {dot: true}
    ✓ should match za.js with !/** and {nonegate: true}
    ✓ should match !a.js with !/**
    ✓ should match !a.js with !/** and {dot: true}
    ✓ should match !a.js with !/** and {nonegate: true}
    ✓ should match !a/b with !/**
    ✓ should match !a/b with !/** and {dot: true}
    ✓ should match !a/b with !/** and {nonegate: true}
    ✓ should match !a/b/ with !/**
    ✓ should match !a/b/ with !/** and {dot: true}
    ✓ should match !a/b/ with !/** and {nonegate: true}
    ✓ should match !a/b/c with !/**
    ✓ should match !a/b/c with !/** and {dot: true}
    ✓ should match !a/b/c with !/** and {nonegate: true}
    ✓ should match !a/b/c/ with !/**
    ✓ should match !a/b/c/ with !/** and {dot: true}
    ✓ should match !a/b/c/ with !/** and {nonegate: true}
    ✓ should match !a/!b with !/**
    ✓ should match !a/!b with !/** and {dot: true}
    ✓ should match !a/!b with !/** and {nonegate: true}
    ✓ should match !a/!b/c with !/**
    ✓ should match !a/!b/c with !/** and {dot: true}
    ✓ should match !a/!b/c with !/** and {nonegate: true}
    ✓ should match !a/!b/c/d with !/**
    ✓ should match !a/!b/c/d with !/** and {dot: true}
    ✓ should match !a/!b/c/d with !/** and {nonegate: true}
    ✓ should match !a/b/.c.md with !/**
    ✓ should match !a/b/.c.md with !/** and {dot: true}
    ✓ should match !a/b/.c.md with !/** and {nonegate: true}
    ✓ should match /a/ with !/**
    ✓ should match /a/ with !/** and {dot: true}
    ✓ should match /a/ with !/** and {nonegate: true}
    ✓ should match /a/b with !/**
    ✓ should match /a/b with !/** and {dot: true}
    ✓ should match /a/b with !/** and {nonegate: true}
    ✓ should match /a/cb with !/**
    ✓ should match /a/cb with !/** and {dot: true}
    ✓ should match /a/cb with !/** and {nonegate: true}
    ✓ should match /a/bb with !/**
    ✓ should match /a/bb with !/** and {dot: true}
    ✓ should match /a/bb with !/** and {nonegate: true}
    ✓ should match /a/b/c with !/**
    ✓ should match /a/b/c with !/** and {dot: true}
    ✓ should match /a/b/c with !/** and {nonegate: true}
    ✓ should match /a/b/c/ with !/**
    ✓ should match /a/b/c/ with !/** and {dot: true}
    ✓ should match /a/b/c/ with !/** and {nonegate: true}
    ✓ should match /a/b/c/d with !/**
    ✓ should match /a/b/c/d with !/** and {dot: true}
    ✓ should match /a/b/c/d with !/** and {nonegate: true}
    ✓ should match /a/b/c/d/ with !/**
    ✓ should match /a/b/c/d/ with !/** and {dot: true}
    ✓ should match /a/b/c/d/ with !/** and {nonegate: true}
    ✓ should match . with !/**
    ✓ should match . with !/** and {dot: true}
    ✓ should match . with !/** and {nonegate: true}
    ✓ should match ./ with !/**
    ✓ should match ./ with !/** and {dot: true}
    ✓ should match ./ with !/** and {nonegate: true}
    ✓ should match .. with !/**
    ✓ should match .. with !/** and {dot: true}
    ✓ should match .. with !/** and {nonegate: true}
    ✓ should match ../c with !/**
    ✓ should match ../c with !/** and {dot: true}
    ✓ should match ../c with !/** and {nonegate: true}
    ✓ should match ../c with !/**
    ✓ should match ../c with !/** and {dot: true}
    ✓ should match ../c with !/** and {nonegate: true}
    ✓ should match ./../c with !/**
    ✓ should match ./../c with !/** and {dot: true}
    ✓ should match ./../c with !/** and {nonegate: true}
    ✓ should match ./a/../c with !/**
    ✓ should match ./a/../c with !/** and {dot: true}
    ✓ should match ./a/../c with !/** and {nonegate: true}
    ✓ should match /.. with !/**
    ✓ should match /.. with !/** and {dot: true}
    ✓ should match /.. with !/** and {nonegate: true}
    ✓ should match /../c with !/**
    ✓ should match /../c with !/** and {dot: true}
    ✓ should match /../c with !/** and {nonegate: true}
    ✓ should match /../.c with !/**
    ✓ should match /../.c with !/** and {dot: true}
    ✓ should match /../.c with !/** and {nonegate: true}
    ✓ should match /../.c/ with !/**
    ✓ should match /../.c/ with !/** and {dot: true}
    ✓ should match /../.c/ with !/** and {nonegate: true}
    ✓ should match /a/../c with !/**
    ✓ should match /a/../c with !/** and {dot: true}
    ✓ should match /a/../c with !/** and {nonegate: true}
    ✓ should match a/../c with !/**
    ✓ should match a/../c with !/** and {dot: true}
    ✓ should match a/../c with !/** and {nonegate: true}
    ✓ should match ../.b/.c with !/**
    ✓ should match ../.b/.c with !/** and {dot: true}
    ✓ should match ../.b/.c with !/** and {nonegate: true}
    ✓ should match ../b/.c with !/**
    ✓ should match ../b/.c with !/** and {dot: true}
    ✓ should match ../b/.c with !/** and {nonegate: true}
    ✓ should match ./.b/.c with !/**
    ✓ should match ./.b/.c with !/** and {dot: true}
    ✓ should match ./.b/.c with !/** and {nonegate: true}
    ✓ should match ./b/.c with !/**
    ✓ should match ./b/.c with !/** and {dot: true}
    ✓ should match ./b/.c with !/** and {nonegate: true}
    ✓ should match .b with !/**
    ✓ should match .b with !/** and {dot: true}
    ✓ should match .b with !/** and {nonegate: true}
    ✓ should match .b.c with !/**
    ✓ should match .b.c with !/** and {dot: true}
    ✓ should match .b.c with !/** and {nonegate: true}
    ✓ should match .b.c/ with !/**
    ✓ should match .b.c/ with !/** and {dot: true}
    ✓ should match .b.c/ with !/** and {nonegate: true}
    ✓ should match .b/ with !/**
    ✓ should match .b/ with !/** and {dot: true}
    ✓ should match .b/ with !/** and {nonegate: true}
    ✓ should match .b/.c with !/**
    ✓ should match .b/.c with !/** and {dot: true}
    ✓ should match .b/.c with !/** and {nonegate: true}
    ✓ should match .b/c with !/**
    ✓ should match .b/c with !/** and {dot: true}
    ✓ should match .b/c with !/** and {nonegate: true}
    ✓ should match b/.c with !/**
    ✓ should match b/.c with !/** and {dot: true}
    ✓ should match b/.c with !/** and {nonegate: true}
    ✓ should match b/.c/ with !/**
    ✓ should match b/.c/ with !/** and {dot: true}
    ✓ should match b/.c/ with !/** and {nonegate: true}
    ✓ should match a/+b/c with !/**
    ✓ should match a/+b/c with !/** and {dot: true}
    ✓ should match a/+b/c with !/** and {nonegate: true}
    ✓ should match +a/+b/c with !/**
    ✓ should match +a/+b/c with !/** and {dot: true}
    ✓ should match +a/+b/c with !/** and {nonegate: true}
    ✓ should match a (foo) with !/**
    ✓ should match a (foo) with !/** and {dot: true}
    ✓ should match a (foo) with !/** and {nonegate: true}
    ✓ should match a (foo)/(bar) with !/**
    ✓ should match a (foo)/(bar) with !/** and {dot: true}
    ✓ should match a (foo)/(bar) with !/** and {nonegate: true}
    ✓ should match a/b/c (1) with !/**
    ✓ should match a/b/c (1) with !/** and {dot: true}
    ✓ should match a/b/c (1) with !/** and {nonegate: true}
    ✓ should match a/b (2)/c (1) with !/**
    ✓ should match a/b (2)/c (1) with !/** and {dot: true}
    ✓ should match a/b (2)/c (1) with !/** and {nonegate: true}
    ✓ should match a/b/c [def] with !/**
    ✓ should match a/b/c [def] with !/** and {dot: true}
    ✓ should match a/b/c [def] with !/** and {nonegate: true}
    ✓ should match a with !/**/
    ✓ should match a with !/**/ and {dot: true}
    ✓ should match a with !/**/ and {nonegate: true}
    ✓ should match a.md with !/**/
    ✓ should match a.md with !/**/ and {dot: true}
    ✓ should match a.md with !/**/ and {nonegate: true}
    ✓ should match a.js with !/**/
    ✓ should match a.js with !/**/ and {dot: true}
    ✓ should match a.js with !/**/ and {nonegate: true}
    ✓ should match a/ with !/**/
    ✓ should match a/ with !/**/ and {dot: true}
    ✓ should match a/ with !/**/ and {nonegate: true}
    ✓ should match a/b with !/**/
    ✓ should match a/b with !/**/ and {dot: true}
    ✓ should match a/b with !/**/ and {nonegate: true}
    ✓ should match a/b/.c.md with !/**/
    ✓ should match a/b/.c.md with !/**/ and {dot: true}
    ✓ should match a/b/.c.md with !/**/ and {nonegate: true}
    ✓ should match a/b/c with !/**/
    ✓ should match a/b/c with !/**/ and {dot: true}
    ✓ should match a/b/c with !/**/ and {nonegate: true}
    ✓ should match a/b/c.md with !/**/
    ✓ should match a/b/c.md with !/**/ and {dot: true}
    ✓ should match a/b/c.md with !/**/ and {nonegate: true}
    ✓ should match a/b/c/ with !/**/
    ✓ should match a/b/c/ with !/**/ and {dot: true}
    ✓ should match a/b/c/ with !/**/ and {nonegate: true}
    ✓ should match a/b/c/d with !/**/
    ✓ should match a/b/c/d with !/**/ and {dot: true}
    ✓ should match a/b/c/d with !/**/ and {nonegate: true}
    ✓ should match a/b/c/d/ with !/**/
    ✓ should match a/b/c/d/ with !/**/ and {dot: true}
    ✓ should match a/b/c/d/ with !/**/ and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with !/**/
    ✓ should match a/b/c/d/e/f/z.js with !/**/ and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with !/**/ and {nonegate: true}
    ✓ should match a/b/c/z.js with !/**/
    ✓ should match a/b/c/z.js with !/**/ and {dot: true}
    ✓ should match a/b/c/z.js with !/**/ and {nonegate: true}
    ✓ should match a/bb with !/**/
    ✓ should match a/bb with !/**/ and {dot: true}
    ✓ should match a/bb with !/**/ and {nonegate: true}
    ✓ should match a/cb with !/**/
    ✓ should match a/cb with !/**/ and {dot: true}
    ✓ should match a/cb with !/**/ and {nonegate: true}
    ✓ should match abbbz with !/**/
    ✓ should match abbbz with !/**/ and {dot: true}
    ✓ should match abbbz with !/**/ and {nonegate: true}
    ✓ should match abc with !/**/
    ✓ should match abc with !/**/ and {dot: true}
    ✓ should match abc with !/**/ and {nonegate: true}
    ✓ should match abd with !/**/
    ✓ should match abd with !/**/ and {dot: true}
    ✓ should match abd with !/**/ and {nonegate: true}
    ✓ should match z.js with !/**/
    ✓ should match z.js with !/**/ and {dot: true}
    ✓ should match z.js with !/**/ and {nonegate: true}
    ✓ should match za.js with !/**/
    ✓ should match za.js with !/**/ and {dot: true}
    ✓ should match za.js with !/**/ and {nonegate: true}
    ✓ should match !a.js with !/**/
    ✓ should match !a.js with !/**/ and {dot: true}
    ✓ should match !a.js with !/**/ and {nonegate: true}
    ✓ should match !a/b with !/**/
    ✓ should match !a/b with !/**/ and {dot: true}
    ✓ should match !a/b with !/**/ and {nonegate: true}
    ✓ should match !a/b/ with !/**/
    ✓ should match !a/b/ with !/**/ and {dot: true}
    ✓ should match !a/b/ with !/**/ and {nonegate: true}
    ✓ should match !a/b/c with !/**/
    ✓ should match !a/b/c with !/**/ and {dot: true}
    ✓ should match !a/b/c with !/**/ and {nonegate: true}
    ✓ should match !a/b/c/ with !/**/
    ✓ should match !a/b/c/ with !/**/ and {dot: true}
    ✓ should match !a/b/c/ with !/**/ and {nonegate: true}
    ✓ should match !a/!b with !/**/
    ✓ should match !a/!b with !/**/ and {dot: true}
    ✓ should match !a/!b with !/**/ and {nonegate: true}
    ✓ should match !a/!b/c with !/**/
    ✓ should match !a/!b/c with !/**/ and {dot: true}
    ✓ should match !a/!b/c with !/**/ and {nonegate: true}
    ✓ should match !a/!b/c/d with !/**/
    ✓ should match !a/!b/c/d with !/**/ and {dot: true}
    ✓ should match !a/!b/c/d with !/**/ and {nonegate: true}
    ✓ should match !a/b/.c.md with !/**/
    ✓ should match !a/b/.c.md with !/**/ and {dot: true}
    ✓ should match !a/b/.c.md with !/**/ and {nonegate: true}
    ✓ should match /a/ with !/**/
    ✓ should match /a/ with !/**/ and {dot: true}
    ✓ should match /a/ with !/**/ and {nonegate: true}
    ✓ should match /a/b with !/**/
    ✓ should match /a/b with !/**/ and {dot: true}
    ✓ should match /a/b with !/**/ and {nonegate: true}
    ✓ should match /a/cb with !/**/
    ✓ should match /a/cb with !/**/ and {dot: true}
    ✓ should match /a/cb with !/**/ and {nonegate: true}
    ✓ should match /a/bb with !/**/
    ✓ should match /a/bb with !/**/ and {dot: true}
    ✓ should match /a/bb with !/**/ and {nonegate: true}
    ✓ should match /a/b/c with !/**/
    ✓ should match /a/b/c with !/**/ and {dot: true}
    ✓ should match /a/b/c with !/**/ and {nonegate: true}
    ✓ should match /a/b/c/ with !/**/
    ✓ should match /a/b/c/ with !/**/ and {dot: true}
    ✓ should match /a/b/c/ with !/**/ and {nonegate: true}
    ✓ should match /a/b/c/d with !/**/
    ✓ should match /a/b/c/d with !/**/ and {dot: true}
    ✓ should match /a/b/c/d with !/**/ and {nonegate: true}
    ✓ should match /a/b/c/d/ with !/**/
    ✓ should match /a/b/c/d/ with !/**/ and {dot: true}
    ✓ should match /a/b/c/d/ with !/**/ and {nonegate: true}
    ✓ should match . with !/**/
    ✓ should match . with !/**/ and {dot: true}
    ✓ should match . with !/**/ and {nonegate: true}
    ✓ should match ./ with !/**/
    ✓ should match ./ with !/**/ and {dot: true}
    ✓ should match ./ with !/**/ and {nonegate: true}
    ✓ should match .. with !/**/
    ✓ should match .. with !/**/ and {dot: true}
    ✓ should match .. with !/**/ and {nonegate: true}
    ✓ should match ../c with !/**/
    ✓ should match ../c with !/**/ and {dot: true}
    ✓ should match ../c with !/**/ and {nonegate: true}
    ✓ should match ../c with !/**/
    ✓ should match ../c with !/**/ and {dot: true}
    ✓ should match ../c with !/**/ and {nonegate: true}
    ✓ should match ./../c with !/**/
    ✓ should match ./../c with !/**/ and {dot: true}
    ✓ should match ./../c with !/**/ and {nonegate: true}
    ✓ should match ./a/../c with !/**/
    ✓ should match ./a/../c with !/**/ and {dot: true}
    ✓ should match ./a/../c with !/**/ and {nonegate: true}
    ✓ should match /.. with !/**/
    ✓ should match /.. with !/**/ and {dot: true}
    ✓ should match /.. with !/**/ and {nonegate: true}
    ✓ should match /../c with !/**/
    ✓ should match /../c with !/**/ and {dot: true}
    ✓ should match /../c with !/**/ and {nonegate: true}
    ✓ should match /../.c with !/**/
    ✓ should match /../.c with !/**/ and {dot: true}
    ✓ should match /../.c with !/**/ and {nonegate: true}
    ✓ should match /../.c/ with !/**/
    ✓ should match /../.c/ with !/**/ and {dot: true}
    ✓ should match /../.c/ with !/**/ and {nonegate: true}
    ✓ should match /a/../c with !/**/
    ✓ should match /a/../c with !/**/ and {dot: true}
    ✓ should match /a/../c with !/**/ and {nonegate: true}
    ✓ should match a/../c with !/**/
    ✓ should match a/../c with !/**/ and {dot: true}
    ✓ should match a/../c with !/**/ and {nonegate: true}
    ✓ should match ../.b/.c with !/**/
    ✓ should match ../.b/.c with !/**/ and {dot: true}
    ✓ should match ../.b/.c with !/**/ and {nonegate: true}
    ✓ should match ../b/.c with !/**/
    ✓ should match ../b/.c with !/**/ and {dot: true}
    ✓ should match ../b/.c with !/**/ and {nonegate: true}
    ✓ should match ./.b/.c with !/**/
    ✓ should match ./.b/.c with !/**/ and {dot: true}
    ✓ should match ./.b/.c with !/**/ and {nonegate: true}
    ✓ should match ./b/.c with !/**/
    ✓ should match ./b/.c with !/**/ and {dot: true}
    ✓ should match ./b/.c with !/**/ and {nonegate: true}
    ✓ should match .b with !/**/
    ✓ should match .b with !/**/ and {dot: true}
    ✓ should match .b with !/**/ and {nonegate: true}
    ✓ should match .b.c with !/**/
    ✓ should match .b.c with !/**/ and {dot: true}
    ✓ should match .b.c with !/**/ and {nonegate: true}
    ✓ should match .b.c/ with !/**/
    ✓ should match .b.c/ with !/**/ and {dot: true}
    ✓ should match .b.c/ with !/**/ and {nonegate: true}
    ✓ should match .b/ with !/**/
    ✓ should match .b/ with !/**/ and {dot: true}
    ✓ should match .b/ with !/**/ and {nonegate: true}
    ✓ should match .b/.c with !/**/
    ✓ should match .b/.c with !/**/ and {dot: true}
    ✓ should match .b/.c with !/**/ and {nonegate: true}
    ✓ should match .b/c with !/**/
    ✓ should match .b/c with !/**/ and {dot: true}
    ✓ should match .b/c with !/**/ and {nonegate: true}
    ✓ should match b/.c with !/**/
    ✓ should match b/.c with !/**/ and {dot: true}
    ✓ should match b/.c with !/**/ and {nonegate: true}
    ✓ should match b/.c/ with !/**/
    ✓ should match b/.c/ with !/**/ and {dot: true}
    ✓ should match b/.c/ with !/**/ and {nonegate: true}
    ✓ should match a/+b/c with !/**/
    ✓ should match a/+b/c with !/**/ and {dot: true}
    ✓ should match a/+b/c with !/**/ and {nonegate: true}
    ✓ should match +a/+b/c with !/**/
    ✓ should match +a/+b/c with !/**/ and {dot: true}
    ✓ should match +a/+b/c with !/**/ and {nonegate: true}
    ✓ should match a (foo) with !/**/
    ✓ should match a (foo) with !/**/ and {dot: true}
    ✓ should match a (foo) with !/**/ and {nonegate: true}
    ✓ should match a (foo)/(bar) with !/**/
    ✓ should match a (foo)/(bar) with !/**/ and {dot: true}
    ✓ should match a (foo)/(bar) with !/**/ and {nonegate: true}
    ✓ should match a/b/c (1) with !/**/
    ✓ should match a/b/c (1) with !/**/ and {dot: true}
    ✓ should match a/b/c (1) with !/**/ and {nonegate: true}
    ✓ should match a/b (2)/c (1) with !/**/
    ✓ should match a/b (2)/c (1) with !/**/ and {dot: true}
    ✓ should match a/b (2)/c (1) with !/**/ and {nonegate: true}
    ✓ should match a/b/c [def] with !/**/
    ✓ should match a/b/c [def] with !/**/ and {dot: true}
    ✓ should match a/b/c [def] with !/**/ and {nonegate: true}
    ✓ should match a with !/*/
    ✓ should match a with !/*/ and {dot: true}
    ✓ should match a with !/*/ and {nonegate: true}
    ✓ should match a.md with !/*/
    ✓ should match a.md with !/*/ and {dot: true}
    ✓ should match a.md with !/*/ and {nonegate: true}
    ✓ should match a.js with !/*/
    ✓ should match a.js with !/*/ and {dot: true}
    ✓ should match a.js with !/*/ and {nonegate: true}
    ✓ should match a/ with !/*/
    ✓ should match a/ with !/*/ and {dot: true}
    ✓ should match a/ with !/*/ and {nonegate: true}
    ✓ should match a/b with !/*/
    ✓ should match a/b with !/*/ and {dot: true}
    ✓ should match a/b with !/*/ and {nonegate: true}
    ✓ should match a/b/.c.md with !/*/
    ✓ should match a/b/.c.md with !/*/ and {dot: true}
    ✓ should match a/b/.c.md with !/*/ and {nonegate: true}
    ✓ should match a/b/c with !/*/
    ✓ should match a/b/c with !/*/ and {dot: true}
    ✓ should match a/b/c with !/*/ and {nonegate: true}
    ✓ should match a/b/c.md with !/*/
    ✓ should match a/b/c.md with !/*/ and {dot: true}
    ✓ should match a/b/c.md with !/*/ and {nonegate: true}
    ✓ should match a/b/c/ with !/*/
    ✓ should match a/b/c/ with !/*/ and {dot: true}
    ✓ should match a/b/c/ with !/*/ and {nonegate: true}
    ✓ should match a/b/c/d with !/*/
    ✓ should match a/b/c/d with !/*/ and {dot: true}
    ✓ should match a/b/c/d with !/*/ and {nonegate: true}
    ✓ should match a/b/c/d/ with !/*/
    ✓ should match a/b/c/d/ with !/*/ and {dot: true}
    ✓ should match a/b/c/d/ with !/*/ and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with !/*/
    ✓ should match a/b/c/d/e/f/z.js with !/*/ and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with !/*/ and {nonegate: true}
    ✓ should match a/b/c/z.js with !/*/
    ✓ should match a/b/c/z.js with !/*/ and {dot: true}
    ✓ should match a/b/c/z.js with !/*/ and {nonegate: true}
    ✓ should match a/bb with !/*/
    ✓ should match a/bb with !/*/ and {dot: true}
    ✓ should match a/bb with !/*/ and {nonegate: true}
    ✓ should match a/cb with !/*/
    ✓ should match a/cb with !/*/ and {dot: true}
    ✓ should match a/cb with !/*/ and {nonegate: true}
    ✓ should match abbbz with !/*/
    ✓ should match abbbz with !/*/ and {dot: true}
    ✓ should match abbbz with !/*/ and {nonegate: true}
    ✓ should match abc with !/*/
    ✓ should match abc with !/*/ and {dot: true}
    ✓ should match abc with !/*/ and {nonegate: true}
    ✓ should match abd with !/*/
    ✓ should match abd with !/*/ and {dot: true}
    ✓ should match abd with !/*/ and {nonegate: true}
    ✓ should match z.js with !/*/
    ✓ should match z.js with !/*/ and {dot: true}
    ✓ should match z.js with !/*/ and {nonegate: true}
    ✓ should match za.js with !/*/
    ✓ should match za.js with !/*/ and {dot: true}
    ✓ should match za.js with !/*/ and {nonegate: true}
    ✓ should match !a.js with !/*/
    ✓ should match !a.js with !/*/ and {dot: true}
    ✓ should match !a.js with !/*/ and {nonegate: true}
    ✓ should match !a/b with !/*/
    ✓ should match !a/b with !/*/ and {dot: true}
    ✓ should match !a/b with !/*/ and {nonegate: true}
    ✓ should match !a/b/ with !/*/
    ✓ should match !a/b/ with !/*/ and {dot: true}
    ✓ should match !a/b/ with !/*/ and {nonegate: true}
    ✓ should match !a/b/c with !/*/
    ✓ should match !a/b/c with !/*/ and {dot: true}
    ✓ should match !a/b/c with !/*/ and {nonegate: true}
    ✓ should match !a/b/c/ with !/*/
    ✓ should match !a/b/c/ with !/*/ and {dot: true}
    ✓ should match !a/b/c/ with !/*/ and {nonegate: true}
    ✓ should match !a/!b with !/*/
    ✓ should match !a/!b with !/*/ and {dot: true}
    ✓ should match !a/!b with !/*/ and {nonegate: true}
    ✓ should match !a/!b/c with !/*/
    ✓ should match !a/!b/c with !/*/ and {dot: true}
    ✓ should match !a/!b/c with !/*/ and {nonegate: true}
    ✓ should match !a/!b/c/d with !/*/
    ✓ should match !a/!b/c/d with !/*/ and {dot: true}
    ✓ should match !a/!b/c/d with !/*/ and {nonegate: true}
    ✓ should match !a/b/.c.md with !/*/
    ✓ should match !a/b/.c.md with !/*/ and {dot: true}
    ✓ should match !a/b/.c.md with !/*/ and {nonegate: true}
    ✓ should match /a/ with !/*/
    ✓ should match /a/ with !/*/ and {dot: true}
    ✓ should match /a/ with !/*/ and {nonegate: true}
    ✓ should match /a/b with !/*/
    ✓ should match /a/b with !/*/ and {dot: true}
    ✓ should match /a/b with !/*/ and {nonegate: true}
    ✓ should match /a/cb with !/*/
    ✓ should match /a/cb with !/*/ and {dot: true}
    ✓ should match /a/cb with !/*/ and {nonegate: true}
    ✓ should match /a/bb with !/*/
    ✓ should match /a/bb with !/*/ and {dot: true}
    ✓ should match /a/bb with !/*/ and {nonegate: true}
    ✓ should match /a/b/c with !/*/
    ✓ should match /a/b/c with !/*/ and {dot: true}
    ✓ should match /a/b/c with !/*/ and {nonegate: true}
    ✓ should match /a/b/c/ with !/*/
    ✓ should match /a/b/c/ with !/*/ and {dot: true}
    ✓ should match /a/b/c/ with !/*/ and {nonegate: true}
    ✓ should match /a/b/c/d with !/*/
    ✓ should match /a/b/c/d with !/*/ and {dot: true}
    ✓ should match /a/b/c/d with !/*/ and {nonegate: true}
    ✓ should match /a/b/c/d/ with !/*/
    ✓ should match /a/b/c/d/ with !/*/ and {dot: true}
    ✓ should match /a/b/c/d/ with !/*/ and {nonegate: true}
    ✓ should match . with !/*/
    ✓ should match . with !/*/ and {dot: true}
    ✓ should match . with !/*/ and {nonegate: true}
    ✓ should match ./ with !/*/
    ✓ should match ./ with !/*/ and {dot: true}
    ✓ should match ./ with !/*/ and {nonegate: true}
    ✓ should match .. with !/*/
    ✓ should match .. with !/*/ and {dot: true}
    ✓ should match .. with !/*/ and {nonegate: true}
    ✓ should match ../c with !/*/
    ✓ should match ../c with !/*/ and {dot: true}
    ✓ should match ../c with !/*/ and {nonegate: true}
    ✓ should match ../c with !/*/
    ✓ should match ../c with !/*/ and {dot: true}
    ✓ should match ../c with !/*/ and {nonegate: true}
    ✓ should match ./../c with !/*/
    ✓ should match ./../c with !/*/ and {dot: true}
    ✓ should match ./../c with !/*/ and {nonegate: true}
    ✓ should match ./a/../c with !/*/
    ✓ should match ./a/../c with !/*/ and {dot: true}
    ✓ should match ./a/../c with !/*/ and {nonegate: true}
    ✓ should match /.. with !/*/
    ✓ should match /.. with !/*/ and {dot: true}
    ✓ should match /.. with !/*/ and {nonegate: true}
    ✓ should match /../c with !/*/
    ✓ should match /../c with !/*/ and {dot: true}
    ✓ should match /../c with !/*/ and {nonegate: true}
    ✓ should match /../.c with !/*/
    ✓ should match /../.c with !/*/ and {dot: true}
    ✓ should match /../.c with !/*/ and {nonegate: true}
    ✓ should match /../.c/ with !/*/
    ✓ should match /../.c/ with !/*/ and {dot: true}
    ✓ should match /../.c/ with !/*/ and {nonegate: true}
    ✓ should match /a/../c with !/*/
    ✓ should match /a/../c with !/*/ and {dot: true}
    ✓ should match /a/../c with !/*/ and {nonegate: true}
    ✓ should match a/../c with !/*/
    ✓ should match a/../c with !/*/ and {dot: true}
    ✓ should match a/../c with !/*/ and {nonegate: true}
    ✓ should match ../.b/.c with !/*/
    ✓ should match ../.b/.c with !/*/ and {dot: true}
    ✓ should match ../.b/.c with !/*/ and {nonegate: true}
    ✓ should match ../b/.c with !/*/
    ✓ should match ../b/.c with !/*/ and {dot: true}
    ✓ should match ../b/.c with !/*/ and {nonegate: true}
    ✓ should match ./.b/.c with !/*/
    ✓ should match ./.b/.c with !/*/ and {dot: true}
    ✓ should match ./.b/.c with !/*/ and {nonegate: true}
    ✓ should match ./b/.c with !/*/
    ✓ should match ./b/.c with !/*/ and {dot: true}
    ✓ should match ./b/.c with !/*/ and {nonegate: true}
    ✓ should match .b with !/*/
    ✓ should match .b with !/*/ and {dot: true}
    ✓ should match .b with !/*/ and {nonegate: true}
    ✓ should match .b.c with !/*/
    ✓ should match .b.c with !/*/ and {dot: true}
    ✓ should match .b.c with !/*/ and {nonegate: true}
    ✓ should match .b.c/ with !/*/
    ✓ should match .b.c/ with !/*/ and {dot: true}
    ✓ should match .b.c/ with !/*/ and {nonegate: true}
    ✓ should match .b/ with !/*/
    ✓ should match .b/ with !/*/ and {dot: true}
    ✓ should match .b/ with !/*/ and {nonegate: true}
    ✓ should match .b/.c with !/*/
    ✓ should match .b/.c with !/*/ and {dot: true}
    ✓ should match .b/.c with !/*/ and {nonegate: true}
    ✓ should match .b/c with !/*/
    ✓ should match .b/c with !/*/ and {dot: true}
    ✓ should match .b/c with !/*/ and {nonegate: true}
    ✓ should match b/.c with !/*/
    ✓ should match b/.c with !/*/ and {dot: true}
    ✓ should match b/.c with !/*/ and {nonegate: true}
    ✓ should match b/.c/ with !/*/
    ✓ should match b/.c/ with !/*/ and {dot: true}
    ✓ should match b/.c/ with !/*/ and {nonegate: true}
    ✓ should match a/+b/c with !/*/
    ✓ should match a/+b/c with !/*/ and {dot: true}
    ✓ should match a/+b/c with !/*/ and {nonegate: true}
    ✓ should match +a/+b/c with !/*/
    ✓ should match +a/+b/c with !/*/ and {dot: true}
    ✓ should match +a/+b/c with !/*/ and {nonegate: true}
    ✓ should match a (foo) with !/*/
    ✓ should match a (foo) with !/*/ and {dot: true}
    ✓ should match a (foo) with !/*/ and {nonegate: true}
    ✓ should match a (foo)/(bar) with !/*/
    ✓ should match a (foo)/(bar) with !/*/ and {dot: true}
    ✓ should match a (foo)/(bar) with !/*/ and {nonegate: true}
    ✓ should match a/b/c (1) with !/*/
    ✓ should match a/b/c (1) with !/*/ and {dot: true}
    ✓ should match a/b/c (1) with !/*/ and {nonegate: true}
    ✓ should match a/b (2)/c (1) with !/*/
    ✓ should match a/b (2)/c (1) with !/*/ and {dot: true}
    ✓ should match a/b (2)/c (1) with !/*/ and {nonegate: true}
    ✓ should match a/b/c [def] with !/*/
    ✓ should match a/b/c [def] with !/*/ and {dot: true}
    ✓ should match a/b/c [def] with !/*/ and {nonegate: true}
    ✓ should match a with !/*/**/*/
    ✓ should match a with !/*/**/*/ and {dot: true}
    ✓ should match a with !/*/**/*/ and {nonegate: true}
    ✓ should match a.md with !/*/**/*/
    ✓ should match a.md with !/*/**/*/ and {dot: true}
    ✓ should match a.md with !/*/**/*/ and {nonegate: true}
    ✓ should match a.js with !/*/**/*/
    ✓ should match a.js with !/*/**/*/ and {dot: true}
    ✓ should match a.js with !/*/**/*/ and {nonegate: true}
    ✓ should match a/ with !/*/**/*/
    ✓ should match a/ with !/*/**/*/ and {dot: true}
    ✓ should match a/ with !/*/**/*/ and {nonegate: true}
    ✓ should match a/b with !/*/**/*/
    ✓ should match a/b with !/*/**/*/ and {dot: true}
    ✓ should match a/b with !/*/**/*/ and {nonegate: true}
    ✓ should match a/b/.c.md with !/*/**/*/
    ✓ should match a/b/.c.md with !/*/**/*/ and {dot: true}
    ✓ should match a/b/.c.md with !/*/**/*/ and {nonegate: true}
    ✓ should match a/b/c with !/*/**/*/
    ✓ should match a/b/c with !/*/**/*/ and {dot: true}
    ✓ should match a/b/c with !/*/**/*/ and {nonegate: true}
    ✓ should match a/b/c.md with !/*/**/*/
    ✓ should match a/b/c.md with !/*/**/*/ and {dot: true}
    ✓ should match a/b/c.md with !/*/**/*/ and {nonegate: true}
    ✓ should match a/b/c/ with !/*/**/*/
    ✓ should match a/b/c/ with !/*/**/*/ and {dot: true}
    ✓ should match a/b/c/ with !/*/**/*/ and {nonegate: true}
    ✓ should match a/b/c/d with !/*/**/*/
    ✓ should match a/b/c/d with !/*/**/*/ and {dot: true}
    ✓ should match a/b/c/d with !/*/**/*/ and {nonegate: true}
    ✓ should match a/b/c/d/ with !/*/**/*/
    ✓ should match a/b/c/d/ with !/*/**/*/ and {dot: true}
    ✓ should match a/b/c/d/ with !/*/**/*/ and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with !/*/**/*/
    ✓ should match a/b/c/d/e/f/z.js with !/*/**/*/ and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with !/*/**/*/ and {nonegate: true}
    ✓ should match a/b/c/z.js with !/*/**/*/
    ✓ should match a/b/c/z.js with !/*/**/*/ and {dot: true}
    ✓ should match a/b/c/z.js with !/*/**/*/ and {nonegate: true}
    ✓ should match a/bb with !/*/**/*/
    ✓ should match a/bb with !/*/**/*/ and {dot: true}
    ✓ should match a/bb with !/*/**/*/ and {nonegate: true}
    ✓ should match a/cb with !/*/**/*/
    ✓ should match a/cb with !/*/**/*/ and {dot: true}
    ✓ should match a/cb with !/*/**/*/ and {nonegate: true}
    ✓ should match abbbz with !/*/**/*/
    ✓ should match abbbz with !/*/**/*/ and {dot: true}
    ✓ should match abbbz with !/*/**/*/ and {nonegate: true}
    ✓ should match abc with !/*/**/*/
    ✓ should match abc with !/*/**/*/ and {dot: true}
    ✓ should match abc with !/*/**/*/ and {nonegate: true}
    ✓ should match abd with !/*/**/*/
    ✓ should match abd with !/*/**/*/ and {dot: true}
    ✓ should match abd with !/*/**/*/ and {nonegate: true}
    ✓ should match z.js with !/*/**/*/
    ✓ should match z.js with !/*/**/*/ and {dot: true}
    ✓ should match z.js with !/*/**/*/ and {nonegate: true}
    ✓ should match za.js with !/*/**/*/
    ✓ should match za.js with !/*/**/*/ and {dot: true}
    ✓ should match za.js with !/*/**/*/ and {nonegate: true}
    ✓ should match !a.js with !/*/**/*/
    ✓ should match !a.js with !/*/**/*/ and {dot: true}
    ✓ should match !a.js with !/*/**/*/ and {nonegate: true}
    ✓ should match !a/b with !/*/**/*/
    ✓ should match !a/b with !/*/**/*/ and {dot: true}
    ✓ should match !a/b with !/*/**/*/ and {nonegate: true}
    ✓ should match !a/b/ with !/*/**/*/
    ✓ should match !a/b/ with !/*/**/*/ and {dot: true}
    ✓ should match !a/b/ with !/*/**/*/ and {nonegate: true}
    ✓ should match !a/b/c with !/*/**/*/
    ✓ should match !a/b/c with !/*/**/*/ and {dot: true}
    ✓ should match !a/b/c with !/*/**/*/ and {nonegate: true}
    ✓ should match !a/b/c/ with !/*/**/*/
    ✓ should match !a/b/c/ with !/*/**/*/ and {dot: true}
    ✓ should match !a/b/c/ with !/*/**/*/ and {nonegate: true}
    ✓ should match !a/!b with !/*/**/*/
    ✓ should match !a/!b with !/*/**/*/ and {dot: true}
    ✓ should match !a/!b with !/*/**/*/ and {nonegate: true}
    ✓ should match !a/!b/c with !/*/**/*/
    ✓ should match !a/!b/c with !/*/**/*/ and {dot: true}
    ✓ should match !a/!b/c with !/*/**/*/ and {nonegate: true}
    ✓ should match !a/!b/c/d with !/*/**/*/
    ✓ should match !a/!b/c/d with !/*/**/*/ and {dot: true}
    ✓ should match !a/!b/c/d with !/*/**/*/ and {nonegate: true}
    ✓ should match !a/b/.c.md with !/*/**/*/
    ✓ should match !a/b/.c.md with !/*/**/*/ and {dot: true}
    ✓ should match !a/b/.c.md with !/*/**/*/ and {nonegate: true}
    ✓ should match /a/ with !/*/**/*/
    ✓ should match /a/ with !/*/**/*/ and {dot: true}
    ✓ should match /a/ with !/*/**/*/ and {nonegate: true}
    ✓ should match /a/b with !/*/**/*/
    ✓ should match /a/b with !/*/**/*/ and {dot: true}
    ✓ should match /a/b with !/*/**/*/ and {nonegate: true}
    ✓ should match /a/cb with !/*/**/*/
    ✓ should match /a/cb with !/*/**/*/ and {dot: true}
    ✓ should match /a/cb with !/*/**/*/ and {nonegate: true}
    ✓ should match /a/bb with !/*/**/*/
    ✓ should match /a/bb with !/*/**/*/ and {dot: true}
    ✓ should match /a/bb with !/*/**/*/ and {nonegate: true}
    ✓ should match /a/b/c with !/*/**/*/
    ✓ should match /a/b/c with !/*/**/*/ and {dot: true}
    ✓ should match /a/b/c with !/*/**/*/ and {nonegate: true}
    ✓ should match /a/b/c/ with !/*/**/*/
    ✓ should match /a/b/c/ with !/*/**/*/ and {dot: true}
    ✓ should match /a/b/c/ with !/*/**/*/ and {nonegate: true}
    ✓ should match /a/b/c/d with !/*/**/*/
    ✓ should match /a/b/c/d with !/*/**/*/ and {dot: true}
    ✓ should match /a/b/c/d with !/*/**/*/ and {nonegate: true}
    ✓ should match /a/b/c/d/ with !/*/**/*/
    ✓ should match /a/b/c/d/ with !/*/**/*/ and {dot: true}
    ✓ should match /a/b/c/d/ with !/*/**/*/ and {nonegate: true}
    ✓ should match . with !/*/**/*/
    ✓ should match . with !/*/**/*/ and {dot: true}
    ✓ should match . with !/*/**/*/ and {nonegate: true}
    ✓ should match ./ with !/*/**/*/
    ✓ should match ./ with !/*/**/*/ and {dot: true}
    ✓ should match ./ with !/*/**/*/ and {nonegate: true}
    ✓ should match .. with !/*/**/*/
    ✓ should match .. with !/*/**/*/ and {dot: true}
    ✓ should match .. with !/*/**/*/ and {nonegate: true}
    ✓ should match ../c with !/*/**/*/
    ✓ should match ../c with !/*/**/*/ and {dot: true}
    ✓ should match ../c with !/*/**/*/ and {nonegate: true}
    ✓ should match ../c with !/*/**/*/
    ✓ should match ../c with !/*/**/*/ and {dot: true}
    ✓ should match ../c with !/*/**/*/ and {nonegate: true}
    ✓ should match ./../c with !/*/**/*/
    ✓ should match ./../c with !/*/**/*/ and {dot: true}
    ✓ should match ./../c with !/*/**/*/ and {nonegate: true}
    ✓ should match ./a/../c with !/*/**/*/
    ✓ should match ./a/../c with !/*/**/*/ and {dot: true}
    ✓ should match ./a/../c with !/*/**/*/ and {nonegate: true}
    ✓ should match /.. with !/*/**/*/
    ✓ should match /.. with !/*/**/*/ and {dot: true}
    ✓ should match /.. with !/*/**/*/ and {nonegate: true}
    ✓ should match /../c with !/*/**/*/
    ✓ should match /../c with !/*/**/*/ and {dot: true}
    ✓ should match /../c with !/*/**/*/ and {nonegate: true}
    ✓ should match /../.c with !/*/**/*/
    ✓ should match /../.c with !/*/**/*/ and {dot: true}
    ✓ should match /../.c with !/*/**/*/ and {nonegate: true}
    ✓ should match /../.c/ with !/*/**/*/
    ✓ should match /../.c/ with !/*/**/*/ and {dot: true}
    ✓ should match /../.c/ with !/*/**/*/ and {nonegate: true}
    ✓ should match /a/../c with !/*/**/*/
    ✓ should match /a/../c with !/*/**/*/ and {dot: true}
    ✓ should match /a/../c with !/*/**/*/ and {nonegate: true}
    ✓ should match a/../c with !/*/**/*/
    ✓ should match a/../c with !/*/**/*/ and {dot: true}
    ✓ should match a/../c with !/*/**/*/ and {nonegate: true}
    ✓ should match ../.b/.c with !/*/**/*/
    ✓ should match ../.b/.c with !/*/**/*/ and {dot: true}
    ✓ should match ../.b/.c with !/*/**/*/ and {nonegate: true}
    ✓ should match ../b/.c with !/*/**/*/
    ✓ should match ../b/.c with !/*/**/*/ and {dot: true}
    ✓ should match ../b/.c with !/*/**/*/ and {nonegate: true}
    ✓ should match ./.b/.c with !/*/**/*/
    ✓ should match ./.b/.c with !/*/**/*/ and {dot: true}
    ✓ should match ./.b/.c with !/*/**/*/ and {nonegate: true}
    ✓ should match ./b/.c with !/*/**/*/
    ✓ should match ./b/.c with !/*/**/*/ and {dot: true}
    ✓ should match ./b/.c with !/*/**/*/ and {nonegate: true}
    ✓ should match .b with !/*/**/*/
    ✓ should match .b with !/*/**/*/ and {dot: true}
    ✓ should match .b with !/*/**/*/ and {nonegate: true}
    ✓ should match .b.c with !/*/**/*/
    ✓ should match .b.c with !/*/**/*/ and {dot: true}
    ✓ should match .b.c with !/*/**/*/ and {nonegate: true}
    ✓ should match .b.c/ with !/*/**/*/
    ✓ should match .b.c/ with !/*/**/*/ and {dot: true}
    ✓ should match .b.c/ with !/*/**/*/ and {nonegate: true}
    ✓ should match .b/ with !/*/**/*/
    ✓ should match .b/ with !/*/**/*/ and {dot: true}
    ✓ should match .b/ with !/*/**/*/ and {nonegate: true}
    ✓ should match .b/.c with !/*/**/*/
    ✓ should match .b/.c with !/*/**/*/ and {dot: true}
    ✓ should match .b/.c with !/*/**/*/ and {nonegate: true}
    ✓ should match .b/c with !/*/**/*/
    ✓ should match .b/c with !/*/**/*/ and {dot: true}
    ✓ should match .b/c with !/*/**/*/ and {nonegate: true}
    ✓ should match b/.c with !/*/**/*/
    ✓ should match b/.c with !/*/**/*/ and {dot: true}
    ✓ should match b/.c with !/*/**/*/ and {nonegate: true}
    ✓ should match b/.c/ with !/*/**/*/
    ✓ should match b/.c/ with !/*/**/*/ and {dot: true}
    ✓ should match b/.c/ with !/*/**/*/ and {nonegate: true}
    ✓ should match a/+b/c with !/*/**/*/
    ✓ should match a/+b/c with !/*/**/*/ and {dot: true}
    ✓ should match a/+b/c with !/*/**/*/ and {nonegate: true}
    ✓ should match +a/+b/c with !/*/**/*/
    ✓ should match +a/+b/c with !/*/**/*/ and {dot: true}
    ✓ should match +a/+b/c with !/*/**/*/ and {nonegate: true}
    ✓ should match a (foo) with !/*/**/*/
    ✓ should match a (foo) with !/*/**/*/ and {dot: true}
    ✓ should match a (foo) with !/*/**/*/ and {nonegate: true}
    ✓ should match a (foo)/(bar) with !/*/**/*/
    ✓ should match a (foo)/(bar) with !/*/**/*/ and {dot: true}
    ✓ should match a (foo)/(bar) with !/*/**/*/ and {nonegate: true}
    ✓ should match a/b/c (1) with !/*/**/*/
    ✓ should match a/b/c (1) with !/*/**/*/ and {dot: true}
    ✓ should match a/b/c (1) with !/*/**/*/ and {nonegate: true}
    ✓ should match a/b (2)/c (1) with !/*/**/*/
    ✓ should match a/b (2)/c (1) with !/*/**/*/ and {dot: true}
    ✓ should match a/b (2)/c (1) with !/*/**/*/ and {nonegate: true}
    ✓ should match a/b/c [def] with !/*/**/*/
    ✓ should match a/b/c [def] with !/*/**/*/ and {dot: true}
    ✓ should match a/b/c [def] with !/*/**/*/ and {nonegate: true}
    ✓ should match a with !/*/*/
    ✓ should match a with !/*/*/ and {dot: true}
    ✓ should match a with !/*/*/ and {nonegate: true}
    ✓ should match a.md with !/*/*/
    ✓ should match a.md with !/*/*/ and {dot: true}
    ✓ should match a.md with !/*/*/ and {nonegate: true}
    ✓ should match a.js with !/*/*/
    ✓ should match a.js with !/*/*/ and {dot: true}
    ✓ should match a.js with !/*/*/ and {nonegate: true}
    ✓ should match a/ with !/*/*/
    ✓ should match a/ with !/*/*/ and {dot: true}
    ✓ should match a/ with !/*/*/ and {nonegate: true}
    ✓ should match a/b with !/*/*/
    ✓ should match a/b with !/*/*/ and {dot: true}
    ✓ should match a/b with !/*/*/ and {nonegate: true}
    ✓ should match a/b/.c.md with !/*/*/
    ✓ should match a/b/.c.md with !/*/*/ and {dot: true}
    ✓ should match a/b/.c.md with !/*/*/ and {nonegate: true}
    ✓ should match a/b/c with !/*/*/
    ✓ should match a/b/c with !/*/*/ and {dot: true}
    ✓ should match a/b/c with !/*/*/ and {nonegate: true}
    ✓ should match a/b/c.md with !/*/*/
    ✓ should match a/b/c.md with !/*/*/ and {dot: true}
    ✓ should match a/b/c.md with !/*/*/ and {nonegate: true}
    ✓ should match a/b/c/ with !/*/*/
    ✓ should match a/b/c/ with !/*/*/ and {dot: true}
    ✓ should match a/b/c/ with !/*/*/ and {nonegate: true}
    ✓ should match a/b/c/d with !/*/*/
    ✓ should match a/b/c/d with !/*/*/ and {dot: true}
    ✓ should match a/b/c/d with !/*/*/ and {nonegate: true}
    ✓ should match a/b/c/d/ with !/*/*/
    ✓ should match a/b/c/d/ with !/*/*/ and {dot: true}
    ✓ should match a/b/c/d/ with !/*/*/ and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with !/*/*/
    ✓ should match a/b/c/d/e/f/z.js with !/*/*/ and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with !/*/*/ and {nonegate: true}
    ✓ should match a/b/c/z.js with !/*/*/
    ✓ should match a/b/c/z.js with !/*/*/ and {dot: true}
    ✓ should match a/b/c/z.js with !/*/*/ and {nonegate: true}
    ✓ should match a/bb with !/*/*/
    ✓ should match a/bb with !/*/*/ and {dot: true}
    ✓ should match a/bb with !/*/*/ and {nonegate: true}
    ✓ should match a/cb with !/*/*/
    ✓ should match a/cb with !/*/*/ and {dot: true}
    ✓ should match a/cb with !/*/*/ and {nonegate: true}
    ✓ should match abbbz with !/*/*/
    ✓ should match abbbz with !/*/*/ and {dot: true}
    ✓ should match abbbz with !/*/*/ and {nonegate: true}
    ✓ should match abc with !/*/*/
    ✓ should match abc with !/*/*/ and {dot: true}
    ✓ should match abc with !/*/*/ and {nonegate: true}
    ✓ should match abd with !/*/*/
    ✓ should match abd with !/*/*/ and {dot: true}
    ✓ should match abd with !/*/*/ and {nonegate: true}
    ✓ should match z.js with !/*/*/
    ✓ should match z.js with !/*/*/ and {dot: true}
    ✓ should match z.js with !/*/*/ and {nonegate: true}
    ✓ should match za.js with !/*/*/
    ✓ should match za.js with !/*/*/ and {dot: true}
    ✓ should match za.js with !/*/*/ and {nonegate: true}
    ✓ should match !a.js with !/*/*/
    ✓ should match !a.js with !/*/*/ and {dot: true}
    ✓ should match !a.js with !/*/*/ and {nonegate: true}
    ✓ should match !a/b with !/*/*/
    ✓ should match !a/b with !/*/*/ and {dot: true}
    ✓ should match !a/b with !/*/*/ and {nonegate: true}
    ✓ should match !a/b/ with !/*/*/
    ✓ should match !a/b/ with !/*/*/ and {dot: true}
    ✓ should match !a/b/ with !/*/*/ and {nonegate: true}
    ✓ should match !a/b/c with !/*/*/
    ✓ should match !a/b/c with !/*/*/ and {dot: true}
    ✓ should match !a/b/c with !/*/*/ and {nonegate: true}
    ✓ should match !a/b/c/ with !/*/*/
    ✓ should match !a/b/c/ with !/*/*/ and {dot: true}
    ✓ should match !a/b/c/ with !/*/*/ and {nonegate: true}
    ✓ should match !a/!b with !/*/*/
    ✓ should match !a/!b with !/*/*/ and {dot: true}
    ✓ should match !a/!b with !/*/*/ and {nonegate: true}
    ✓ should match !a/!b/c with !/*/*/
    ✓ should match !a/!b/c with !/*/*/ and {dot: true}
    ✓ should match !a/!b/c with !/*/*/ and {nonegate: true}
    ✓ should match !a/!b/c/d with !/*/*/
    ✓ should match !a/!b/c/d with !/*/*/ and {dot: true}
    ✓ should match !a/!b/c/d with !/*/*/ and {nonegate: true}
    ✓ should match !a/b/.c.md with !/*/*/
    ✓ should match !a/b/.c.md with !/*/*/ and {dot: true}
    ✓ should match !a/b/.c.md with !/*/*/ and {nonegate: true}
    ✓ should match /a/ with !/*/*/
    ✓ should match /a/ with !/*/*/ and {dot: true}
    ✓ should match /a/ with !/*/*/ and {nonegate: true}
    ✓ should match /a/b with !/*/*/
    ✓ should match /a/b with !/*/*/ and {dot: true}
    ✓ should match /a/b with !/*/*/ and {nonegate: true}
    ✓ should match /a/cb with !/*/*/
    ✓ should match /a/cb with !/*/*/ and {dot: true}
    ✓ should match /a/cb with !/*/*/ and {nonegate: true}
    ✓ should match /a/bb with !/*/*/
    ✓ should match /a/bb with !/*/*/ and {dot: true}
    ✓ should match /a/bb with !/*/*/ and {nonegate: true}
    ✓ should match /a/b/c with !/*/*/
    ✓ should match /a/b/c with !/*/*/ and {dot: true}
    ✓ should match /a/b/c with !/*/*/ and {nonegate: true}
    ✓ should match /a/b/c/ with !/*/*/
    ✓ should match /a/b/c/ with !/*/*/ and {dot: true}
    ✓ should match /a/b/c/ with !/*/*/ and {nonegate: true}
    ✓ should match /a/b/c/d with !/*/*/
    ✓ should match /a/b/c/d with !/*/*/ and {dot: true}
    ✓ should match /a/b/c/d with !/*/*/ and {nonegate: true}
    ✓ should match /a/b/c/d/ with !/*/*/
    ✓ should match /a/b/c/d/ with !/*/*/ and {dot: true}
    ✓ should match /a/b/c/d/ with !/*/*/ and {nonegate: true}
    ✓ should match . with !/*/*/
    ✓ should match . with !/*/*/ and {dot: true}
    ✓ should match . with !/*/*/ and {nonegate: true}
    ✓ should match ./ with !/*/*/
    ✓ should match ./ with !/*/*/ and {dot: true}
    ✓ should match ./ with !/*/*/ and {nonegate: true}
    ✓ should match .. with !/*/*/
    ✓ should match .. with !/*/*/ and {dot: true}
    ✓ should match .. with !/*/*/ and {nonegate: true}
    ✓ should match ../c with !/*/*/
    ✓ should match ../c with !/*/*/ and {dot: true}
    ✓ should match ../c with !/*/*/ and {nonegate: true}
    ✓ should match ../c with !/*/*/
    ✓ should match ../c with !/*/*/ and {dot: true}
    ✓ should match ../c with !/*/*/ and {nonegate: true}
    ✓ should match ./../c with !/*/*/
    ✓ should match ./../c with !/*/*/ and {dot: true}
    ✓ should match ./../c with !/*/*/ and {nonegate: true}
    ✓ should match ./a/../c with !/*/*/
    ✓ should match ./a/../c with !/*/*/ and {dot: true}
    ✓ should match ./a/../c with !/*/*/ and {nonegate: true}
    ✓ should match /.. with !/*/*/
    ✓ should match /.. with !/*/*/ and {dot: true}
    ✓ should match /.. with !/*/*/ and {nonegate: true}
    ✓ should match /../c with !/*/*/
    ✓ should match /../c with !/*/*/ and {dot: true}
    ✓ should match /../c with !/*/*/ and {nonegate: true}
    ✓ should match /../.c with !/*/*/
    ✓ should match /../.c with !/*/*/ and {dot: true}
    ✓ should match /../.c with !/*/*/ and {nonegate: true}
    ✓ should match /../.c/ with !/*/*/
    ✓ should match /../.c/ with !/*/*/ and {dot: true}
    ✓ should match /../.c/ with !/*/*/ and {nonegate: true}
    ✓ should match /a/../c with !/*/*/
    ✓ should match /a/../c with !/*/*/ and {dot: true}
    ✓ should match /a/../c with !/*/*/ and {nonegate: true}
    ✓ should match a/../c with !/*/*/
    ✓ should match a/../c with !/*/*/ and {dot: true}
    ✓ should match a/../c with !/*/*/ and {nonegate: true}
    ✓ should match ../.b/.c with !/*/*/
    ✓ should match ../.b/.c with !/*/*/ and {dot: true}
    ✓ should match ../.b/.c with !/*/*/ and {nonegate: true}
    ✓ should match ../b/.c with !/*/*/
    ✓ should match ../b/.c with !/*/*/ and {dot: true}
    ✓ should match ../b/.c with !/*/*/ and {nonegate: true}
    ✓ should match ./.b/.c with !/*/*/
    ✓ should match ./.b/.c with !/*/*/ and {dot: true}
    ✓ should match ./.b/.c with !/*/*/ and {nonegate: true}
    ✓ should match ./b/.c with !/*/*/
    ✓ should match ./b/.c with !/*/*/ and {dot: true}
    ✓ should match ./b/.c with !/*/*/ and {nonegate: true}
    ✓ should match .b with !/*/*/
    ✓ should match .b with !/*/*/ and {dot: true}
    ✓ should match .b with !/*/*/ and {nonegate: true}
    ✓ should match .b.c with !/*/*/
    ✓ should match .b.c with !/*/*/ and {dot: true}
    ✓ should match .b.c with !/*/*/ and {nonegate: true}
    ✓ should match .b.c/ with !/*/*/
    ✓ should match .b.c/ with !/*/*/ and {dot: true}
    ✓ should match .b.c/ with !/*/*/ and {nonegate: true}
    ✓ should match .b/ with !/*/*/
    ✓ should match .b/ with !/*/*/ and {dot: true}
    ✓ should match .b/ with !/*/*/ and {nonegate: true}
    ✓ should match .b/.c with !/*/*/
    ✓ should match .b/.c with !/*/*/ and {dot: true}
    ✓ should match .b/.c with !/*/*/ and {nonegate: true}
    ✓ should match .b/c with !/*/*/
    ✓ should match .b/c with !/*/*/ and {dot: true}
    ✓ should match .b/c with !/*/*/ and {nonegate: true}
    ✓ should match b/.c with !/*/*/
    ✓ should match b/.c with !/*/*/ and {dot: true}
    ✓ should match b/.c with !/*/*/ and {nonegate: true}
    ✓ should match b/.c/ with !/*/*/
    ✓ should match b/.c/ with !/*/*/ and {dot: true}
    ✓ should match b/.c/ with !/*/*/ and {nonegate: true}
    ✓ should match a/+b/c with !/*/*/
    ✓ should match a/+b/c with !/*/*/ and {dot: true}
    ✓ should match a/+b/c with !/*/*/ and {nonegate: true}
    ✓ should match +a/+b/c with !/*/*/
    ✓ should match +a/+b/c with !/*/*/ and {dot: true}
    ✓ should match +a/+b/c with !/*/*/ and {nonegate: true}
    ✓ should match a (foo) with !/*/*/
    ✓ should match a (foo) with !/*/*/ and {dot: true}
    ✓ should match a (foo) with !/*/*/ and {nonegate: true}
    ✓ should match a (foo)/(bar) with !/*/*/
    ✓ should match a (foo)/(bar) with !/*/*/ and {dot: true}
    ✓ should match a (foo)/(bar) with !/*/*/ and {nonegate: true}
    ✓ should match a/b/c (1) with !/*/*/
    ✓ should match a/b/c (1) with !/*/*/ and {dot: true}
    ✓ should match a/b/c (1) with !/*/*/ and {nonegate: true}
    ✓ should match a/b (2)/c (1) with !/*/*/
    ✓ should match a/b (2)/c (1) with !/*/*/ and {dot: true}
    ✓ should match a/b (2)/c (1) with !/*/*/ and {nonegate: true}
    ✓ should match a/b/c [def] with !/*/*/
    ✓ should match a/b/c [def] with !/*/*/ and {dot: true}
    ✓ should match a/b/c [def] with !/*/*/ and {nonegate: true}
    ✓ should match a with !a/!b*
    ✓ should match a with !a/!b* and {dot: true}
    ✓ should match a with !a/!b* and {nonegate: true}
    ✓ should match a.md with !a/!b*
    ✓ should match a.md with !a/!b* and {dot: true}
    ✓ should match a.md with !a/!b* and {nonegate: true}
    ✓ should match a.js with !a/!b*
    ✓ should match a.js with !a/!b* and {dot: true}
    ✓ should match a.js with !a/!b* and {nonegate: true}
    ✓ should match a/ with !a/!b*
    ✓ should match a/ with !a/!b* and {dot: true}
    ✓ should match a/ with !a/!b* and {nonegate: true}
    ✓ should match a/b with !a/!b*
    ✓ should match a/b with !a/!b* and {dot: true}
    ✓ should match a/b with !a/!b* and {nonegate: true}
    ✓ should match a/b/.c.md with !a/!b*
    ✓ should match a/b/.c.md with !a/!b* and {dot: true}
    ✓ should match a/b/.c.md with !a/!b* and {nonegate: true}
    ✓ should match a/b/c with !a/!b*
    ✓ should match a/b/c with !a/!b* and {dot: true}
    ✓ should match a/b/c with !a/!b* and {nonegate: true}
    ✓ should match a/b/c.md with !a/!b*
    ✓ should match a/b/c.md with !a/!b* and {dot: true}
    ✓ should match a/b/c.md with !a/!b* and {nonegate: true}
    ✓ should match a/b/c/ with !a/!b*
    ✓ should match a/b/c/ with !a/!b* and {dot: true}
    ✓ should match a/b/c/ with !a/!b* and {nonegate: true}
    ✓ should match a/b/c/d with !a/!b*
    ✓ should match a/b/c/d with !a/!b* and {dot: true}
    ✓ should match a/b/c/d with !a/!b* and {nonegate: true}
    ✓ should match a/b/c/d/ with !a/!b*
    ✓ should match a/b/c/d/ with !a/!b* and {dot: true}
    ✓ should match a/b/c/d/ with !a/!b* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with !a/!b*
    ✓ should match a/b/c/d/e/f/z.js with !a/!b* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with !a/!b* and {nonegate: true}
    ✓ should match a/b/c/z.js with !a/!b*
    ✓ should match a/b/c/z.js with !a/!b* and {dot: true}
    ✓ should match a/b/c/z.js with !a/!b* and {nonegate: true}
    ✓ should match a/bb with !a/!b*
    ✓ should match a/bb with !a/!b* and {dot: true}
    ✓ should match a/bb with !a/!b* and {nonegate: true}
    ✓ should match a/cb with !a/!b*
    ✓ should match a/cb with !a/!b* and {dot: true}
    ✓ should match a/cb with !a/!b* and {nonegate: true}
    ✓ should match abbbz with !a/!b*
    ✓ should match abbbz with !a/!b* and {dot: true}
    ✓ should match abbbz with !a/!b* and {nonegate: true}
    ✓ should match abc with !a/!b*
    ✓ should match abc with !a/!b* and {dot: true}
    ✓ should match abc with !a/!b* and {nonegate: true}
    ✓ should match abd with !a/!b*
    ✓ should match abd with !a/!b* and {dot: true}
    ✓ should match abd with !a/!b* and {nonegate: true}
    ✓ should match z.js with !a/!b*
    ✓ should match z.js with !a/!b* and {dot: true}
    ✓ should match z.js with !a/!b* and {nonegate: true}
    ✓ should match za.js with !a/!b*
    ✓ should match za.js with !a/!b* and {dot: true}
    ✓ should match za.js with !a/!b* and {nonegate: true}
    ✓ should match !a.js with !a/!b*
    ✓ should match !a.js with !a/!b* and {dot: true}
    ✓ should match !a.js with !a/!b* and {nonegate: true}
    ✓ should match !a/b with !a/!b*
    ✓ should match !a/b with !a/!b* and {dot: true}
    ✓ should match !a/b with !a/!b* and {nonegate: true}
    ✓ should match !a/b/ with !a/!b*
    ✓ should match !a/b/ with !a/!b* and {dot: true}
    ✓ should match !a/b/ with !a/!b* and {nonegate: true}
    ✓ should match !a/b/c with !a/!b*
    ✓ should match !a/b/c with !a/!b* and {dot: true}
    ✓ should match !a/b/c with !a/!b* and {nonegate: true}
    ✓ should match !a/b/c/ with !a/!b*
    ✓ should match !a/b/c/ with !a/!b* and {dot: true}
    ✓ should match !a/b/c/ with !a/!b* and {nonegate: true}
    ✓ should match !a/!b with !a/!b*
    ✓ should match !a/!b with !a/!b* and {dot: true}
    ✓ should match !a/!b with !a/!b* and {nonegate: true}
    ✓ should match !a/!b/c with !a/!b*
    ✓ should match !a/!b/c with !a/!b* and {dot: true}
    ✓ should match !a/!b/c with !a/!b* and {nonegate: true}
    ✓ should match !a/!b/c/d with !a/!b*
    ✓ should match !a/!b/c/d with !a/!b* and {dot: true}
    ✓ should match !a/!b/c/d with !a/!b* and {nonegate: true}
    ✓ should match !a/b/.c.md with !a/!b*
    ✓ should match !a/b/.c.md with !a/!b* and {dot: true}
    ✓ should match !a/b/.c.md with !a/!b* and {nonegate: true}
    ✓ should match /a/ with !a/!b*
    ✓ should match /a/ with !a/!b* and {dot: true}
    ✓ should match /a/ with !a/!b* and {nonegate: true}
    ✓ should match /a/b with !a/!b*
    ✓ should match /a/b with !a/!b* and {dot: true}
    ✓ should match /a/b with !a/!b* and {nonegate: true}
    ✓ should match /a/cb with !a/!b*
    ✓ should match /a/cb with !a/!b* and {dot: true}
    ✓ should match /a/cb with !a/!b* and {nonegate: true}
    ✓ should match /a/bb with !a/!b*
    ✓ should match /a/bb with !a/!b* and {dot: true}
    ✓ should match /a/bb with !a/!b* and {nonegate: true}
    ✓ should match /a/b/c with !a/!b*
    ✓ should match /a/b/c with !a/!b* and {dot: true}
    ✓ should match /a/b/c with !a/!b* and {nonegate: true}
    ✓ should match /a/b/c/ with !a/!b*
    ✓ should match /a/b/c/ with !a/!b* and {dot: true}
    ✓ should match /a/b/c/ with !a/!b* and {nonegate: true}
    ✓ should match /a/b/c/d with !a/!b*
    ✓ should match /a/b/c/d with !a/!b* and {dot: true}
    ✓ should match /a/b/c/d with !a/!b* and {nonegate: true}
    ✓ should match /a/b/c/d/ with !a/!b*
    ✓ should match /a/b/c/d/ with !a/!b* and {dot: true}
    ✓ should match /a/b/c/d/ with !a/!b* and {nonegate: true}
    ✓ should match . with !a/!b*
    ✓ should match . with !a/!b* and {dot: true}
    ✓ should match . with !a/!b* and {nonegate: true}
    ✓ should match ./ with !a/!b*
    ✓ should match ./ with !a/!b* and {dot: true}
    ✓ should match ./ with !a/!b* and {nonegate: true}
    ✓ should match .. with !a/!b*
    ✓ should match .. with !a/!b* and {dot: true}
    ✓ should match .. with !a/!b* and {nonegate: true}
    ✓ should match ../c with !a/!b*
    ✓ should match ../c with !a/!b* and {dot: true}
    ✓ should match ../c with !a/!b* and {nonegate: true}
    ✓ should match ../c with !a/!b*
    ✓ should match ../c with !a/!b* and {dot: true}
    ✓ should match ../c with !a/!b* and {nonegate: true}
    ✓ should match ./../c with !a/!b*
    ✓ should match ./../c with !a/!b* and {dot: true}
    ✓ should match ./../c with !a/!b* and {nonegate: true}
    ✓ should match ./a/../c with !a/!b*
    ✓ should match ./a/../c with !a/!b* and {dot: true}
    ✓ should match ./a/../c with !a/!b* and {nonegate: true}
    ✓ should match /.. with !a/!b*
    ✓ should match /.. with !a/!b* and {dot: true}
    ✓ should match /.. with !a/!b* and {nonegate: true}
    ✓ should match /../c with !a/!b*
    ✓ should match /../c with !a/!b* and {dot: true}
    ✓ should match /../c with !a/!b* and {nonegate: true}
    ✓ should match /../.c with !a/!b*
    ✓ should match /../.c with !a/!b* and {dot: true}
    ✓ should match /../.c with !a/!b* and {nonegate: true}
    ✓ should match /../.c/ with !a/!b*
    ✓ should match /../.c/ with !a/!b* and {dot: true}
    ✓ should match /../.c/ with !a/!b* and {nonegate: true}
    ✓ should match /a/../c with !a/!b*
    ✓ should match /a/../c with !a/!b* and {dot: true}
    ✓ should match /a/../c with !a/!b* and {nonegate: true}
    ✓ should match a/../c with !a/!b*
    ✓ should match a/../c with !a/!b* and {dot: true}
    ✓ should match a/../c with !a/!b* and {nonegate: true}
    ✓ should match ../.b/.c with !a/!b*
    ✓ should match ../.b/.c with !a/!b* and {dot: true}
    ✓ should match ../.b/.c with !a/!b* and {nonegate: true}
    ✓ should match ../b/.c with !a/!b*
    ✓ should match ../b/.c with !a/!b* and {dot: true}
    ✓ should match ../b/.c with !a/!b* and {nonegate: true}
    ✓ should match ./.b/.c with !a/!b*
    ✓ should match ./.b/.c with !a/!b* and {dot: true}
    ✓ should match ./.b/.c with !a/!b* and {nonegate: true}
    ✓ should match ./b/.c with !a/!b*
    ✓ should match ./b/.c with !a/!b* and {dot: true}
    ✓ should match ./b/.c with !a/!b* and {nonegate: true}
    ✓ should match .b with !a/!b*
    ✓ should match .b with !a/!b* and {dot: true}
    ✓ should match .b with !a/!b* and {nonegate: true}
    ✓ should match .b.c with !a/!b*
    ✓ should match .b.c with !a/!b* and {dot: true}
    ✓ should match .b.c with !a/!b* and {nonegate: true}
    ✓ should match .b.c/ with !a/!b*
    ✓ should match .b.c/ with !a/!b* and {dot: true}
    ✓ should match .b.c/ with !a/!b* and {nonegate: true}
    ✓ should match .b/ with !a/!b*
    ✓ should match .b/ with !a/!b* and {dot: true}
    ✓ should match .b/ with !a/!b* and {nonegate: true}
    ✓ should match .b/.c with !a/!b*
    ✓ should match .b/.c with !a/!b* and {dot: true}
    ✓ should match .b/.c with !a/!b* and {nonegate: true}
    ✓ should match .b/c with !a/!b*
    ✓ should match .b/c with !a/!b* and {dot: true}
    ✓ should match .b/c with !a/!b* and {nonegate: true}
    ✓ should match b/.c with !a/!b*
    ✓ should match b/.c with !a/!b* and {dot: true}
    ✓ should match b/.c with !a/!b* and {nonegate: true}
    ✓ should match b/.c/ with !a/!b*
    ✓ should match b/.c/ with !a/!b* and {dot: true}
    ✓ should match b/.c/ with !a/!b* and {nonegate: true}
    ✓ should match a/+b/c with !a/!b*
    ✓ should match a/+b/c with !a/!b* and {dot: true}
    ✓ should match a/+b/c with !a/!b* and {nonegate: true}
    ✓ should match +a/+b/c with !a/!b*
    ✓ should match +a/+b/c with !a/!b* and {dot: true}
    ✓ should match +a/+b/c with !a/!b* and {nonegate: true}
    ✓ should match a (foo) with !a/!b*
    ✓ should match a (foo) with !a/!b* and {dot: true}
    ✓ should match a (foo) with !a/!b* and {nonegate: true}
    ✓ should match a (foo)/(bar) with !a/!b*
    ✓ should match a (foo)/(bar) with !a/!b* and {dot: true}
    ✓ should match a (foo)/(bar) with !a/!b* and {nonegate: true}
    ✓ should match a/b/c (1) with !a/!b*
    ✓ should match a/b/c (1) with !a/!b* and {dot: true}
    ✓ should match a/b/c (1) with !a/!b* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with !a/!b*
    ✓ should match a/b (2)/c (1) with !a/!b* and {dot: true}
    ✓ should match a/b (2)/c (1) with !a/!b* and {nonegate: true}
    ✓ should match a/b/c [def] with !a/!b*
    ✓ should match a/b/c [def] with !a/!b* and {dot: true}
    ✓ should match a/b/c [def] with !a/!b* and {nonegate: true}
    ✓ should match a with !a/!b/*
    ✓ should match a with !a/!b/* and {dot: true}
    ✓ should match a with !a/!b/* and {nonegate: true}
    ✓ should match a.md with !a/!b/*
    ✓ should match a.md with !a/!b/* and {dot: true}
    ✓ should match a.md with !a/!b/* and {nonegate: true}
    ✓ should match a.js with !a/!b/*
    ✓ should match a.js with !a/!b/* and {dot: true}
    ✓ should match a.js with !a/!b/* and {nonegate: true}
    ✓ should match a/ with !a/!b/*
    ✓ should match a/ with !a/!b/* and {dot: true}
    ✓ should match a/ with !a/!b/* and {nonegate: true}
    ✓ should match a/b with !a/!b/*
    ✓ should match a/b with !a/!b/* and {dot: true}
    ✓ should match a/b with !a/!b/* and {nonegate: true}
    ✓ should match a/b/.c.md with !a/!b/*
    ✓ should match a/b/.c.md with !a/!b/* and {dot: true}
    ✓ should match a/b/.c.md with !a/!b/* and {nonegate: true}
    ✓ should match a/b/c with !a/!b/*
    ✓ should match a/b/c with !a/!b/* and {dot: true}
    ✓ should match a/b/c with !a/!b/* and {nonegate: true}
    ✓ should match a/b/c.md with !a/!b/*
    ✓ should match a/b/c.md with !a/!b/* and {dot: true}
    ✓ should match a/b/c.md with !a/!b/* and {nonegate: true}
    ✓ should match a/b/c/ with !a/!b/*
    ✓ should match a/b/c/ with !a/!b/* and {dot: true}
    ✓ should match a/b/c/ with !a/!b/* and {nonegate: true}
    ✓ should match a/b/c/d with !a/!b/*
    ✓ should match a/b/c/d with !a/!b/* and {dot: true}
    ✓ should match a/b/c/d with !a/!b/* and {nonegate: true}
    ✓ should match a/b/c/d/ with !a/!b/*
    ✓ should match a/b/c/d/ with !a/!b/* and {dot: true}
    ✓ should match a/b/c/d/ with !a/!b/* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with !a/!b/*
    ✓ should match a/b/c/d/e/f/z.js with !a/!b/* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with !a/!b/* and {nonegate: true}
    ✓ should match a/b/c/z.js with !a/!b/*
    ✓ should match a/b/c/z.js with !a/!b/* and {dot: true}
    ✓ should match a/b/c/z.js with !a/!b/* and {nonegate: true}
    ✓ should match a/bb with !a/!b/*
    ✓ should match a/bb with !a/!b/* and {dot: true}
    ✓ should match a/bb with !a/!b/* and {nonegate: true}
    ✓ should match a/cb with !a/!b/*
    ✓ should match a/cb with !a/!b/* and {dot: true}
    ✓ should match a/cb with !a/!b/* and {nonegate: true}
    ✓ should match abbbz with !a/!b/*
    ✓ should match abbbz with !a/!b/* and {dot: true}
    ✓ should match abbbz with !a/!b/* and {nonegate: true}
    ✓ should match abc with !a/!b/*
    ✓ should match abc with !a/!b/* and {dot: true}
    ✓ should match abc with !a/!b/* and {nonegate: true}
    ✓ should match abd with !a/!b/*
    ✓ should match abd with !a/!b/* and {dot: true}
    ✓ should match abd with !a/!b/* and {nonegate: true}
    ✓ should match z.js with !a/!b/*
    ✓ should match z.js with !a/!b/* and {dot: true}
    ✓ should match z.js with !a/!b/* and {nonegate: true}
    ✓ should match za.js with !a/!b/*
    ✓ should match za.js with !a/!b/* and {dot: true}
    ✓ should match za.js with !a/!b/* and {nonegate: true}
    ✓ should match !a.js with !a/!b/*
    ✓ should match !a.js with !a/!b/* and {dot: true}
    ✓ should match !a.js with !a/!b/* and {nonegate: true}
    ✓ should match !a/b with !a/!b/*
    ✓ should match !a/b with !a/!b/* and {dot: true}
    ✓ should match !a/b with !a/!b/* and {nonegate: true}
    ✓ should match !a/b/ with !a/!b/*
    ✓ should match !a/b/ with !a/!b/* and {dot: true}
    ✓ should match !a/b/ with !a/!b/* and {nonegate: true}
    ✓ should match !a/b/c with !a/!b/*
    ✓ should match !a/b/c with !a/!b/* and {dot: true}
    ✓ should match !a/b/c with !a/!b/* and {nonegate: true}
    ✓ should match !a/b/c/ with !a/!b/*
    ✓ should match !a/b/c/ with !a/!b/* and {dot: true}
    ✓ should match !a/b/c/ with !a/!b/* and {nonegate: true}
    ✓ should match !a/!b with !a/!b/*
    ✓ should match !a/!b with !a/!b/* and {dot: true}
    ✓ should match !a/!b with !a/!b/* and {nonegate: true}
    ✓ should match !a/!b/c with !a/!b/*
    ✓ should match !a/!b/c with !a/!b/* and {dot: true}
    ✓ should match !a/!b/c with !a/!b/* and {nonegate: true}
    ✓ should match !a/!b/c/d with !a/!b/*
    ✓ should match !a/!b/c/d with !a/!b/* and {dot: true}
    ✓ should match !a/!b/c/d with !a/!b/* and {nonegate: true}
    ✓ should match !a/b/.c.md with !a/!b/*
    ✓ should match !a/b/.c.md with !a/!b/* and {dot: true}
    ✓ should match !a/b/.c.md with !a/!b/* and {nonegate: true}
    ✓ should match /a/ with !a/!b/*
    ✓ should match /a/ with !a/!b/* and {dot: true}
    ✓ should match /a/ with !a/!b/* and {nonegate: true}
    ✓ should match /a/b with !a/!b/*
    ✓ should match /a/b with !a/!b/* and {dot: true}
    ✓ should match /a/b with !a/!b/* and {nonegate: true}
    ✓ should match /a/cb with !a/!b/*
    ✓ should match /a/cb with !a/!b/* and {dot: true}
    ✓ should match /a/cb with !a/!b/* and {nonegate: true}
    ✓ should match /a/bb with !a/!b/*
    ✓ should match /a/bb with !a/!b/* and {dot: true}
    ✓ should match /a/bb with !a/!b/* and {nonegate: true}
    ✓ should match /a/b/c with !a/!b/*
    ✓ should match /a/b/c with !a/!b/* and {dot: true}
    ✓ should match /a/b/c with !a/!b/* and {nonegate: true}
    ✓ should match /a/b/c/ with !a/!b/*
    ✓ should match /a/b/c/ with !a/!b/* and {dot: true}
    ✓ should match /a/b/c/ with !a/!b/* and {nonegate: true}
    ✓ should match /a/b/c/d with !a/!b/*
    ✓ should match /a/b/c/d with !a/!b/* and {dot: true}
    ✓ should match /a/b/c/d with !a/!b/* and {nonegate: true}
    ✓ should match /a/b/c/d/ with !a/!b/*
    ✓ should match /a/b/c/d/ with !a/!b/* and {dot: true}
    ✓ should match /a/b/c/d/ with !a/!b/* and {nonegate: true}
    ✓ should match . with !a/!b/*
    ✓ should match . with !a/!b/* and {dot: true}
    ✓ should match . with !a/!b/* and {nonegate: true}
    ✓ should match ./ with !a/!b/*
    ✓ should match ./ with !a/!b/* and {dot: true}
    ✓ should match ./ with !a/!b/* and {nonegate: true}
    ✓ should match .. with !a/!b/*
    ✓ should match .. with !a/!b/* and {dot: true}
    ✓ should match .. with !a/!b/* and {nonegate: true}
    ✓ should match ../c with !a/!b/*
    ✓ should match ../c with !a/!b/* and {dot: true}
    ✓ should match ../c with !a/!b/* and {nonegate: true}
    ✓ should match ../c with !a/!b/*
    ✓ should match ../c with !a/!b/* and {dot: true}
    ✓ should match ../c with !a/!b/* and {nonegate: true}
    ✓ should match ./../c with !a/!b/*
    ✓ should match ./../c with !a/!b/* and {dot: true}
    ✓ should match ./../c with !a/!b/* and {nonegate: true}
    ✓ should match ./a/../c with !a/!b/*
    ✓ should match ./a/../c with !a/!b/* and {dot: true}
    ✓ should match ./a/../c with !a/!b/* and {nonegate: true}
    ✓ should match /.. with !a/!b/*
    ✓ should match /.. with !a/!b/* and {dot: true}
    ✓ should match /.. with !a/!b/* and {nonegate: true}
    ✓ should match /../c with !a/!b/*
    ✓ should match /../c with !a/!b/* and {dot: true}
    ✓ should match /../c with !a/!b/* and {nonegate: true}
    ✓ should match /../.c with !a/!b/*
    ✓ should match /../.c with !a/!b/* and {dot: true}
    ✓ should match /../.c with !a/!b/* and {nonegate: true}
    ✓ should match /../.c/ with !a/!b/*
    ✓ should match /../.c/ with !a/!b/* and {dot: true}
    ✓ should match /../.c/ with !a/!b/* and {nonegate: true}
    ✓ should match /a/../c with !a/!b/*
    ✓ should match /a/../c with !a/!b/* and {dot: true}
    ✓ should match /a/../c with !a/!b/* and {nonegate: true}
    ✓ should match a/../c with !a/!b/*
    ✓ should match a/../c with !a/!b/* and {dot: true}
    ✓ should match a/../c with !a/!b/* and {nonegate: true}
    ✓ should match ../.b/.c with !a/!b/*
    ✓ should match ../.b/.c with !a/!b/* and {dot: true}
    ✓ should match ../.b/.c with !a/!b/* and {nonegate: true}
    ✓ should match ../b/.c with !a/!b/*
    ✓ should match ../b/.c with !a/!b/* and {dot: true}
    ✓ should match ../b/.c with !a/!b/* and {nonegate: true}
    ✓ should match ./.b/.c with !a/!b/*
    ✓ should match ./.b/.c with !a/!b/* and {dot: true}
    ✓ should match ./.b/.c with !a/!b/* and {nonegate: true}
    ✓ should match ./b/.c with !a/!b/*
    ✓ should match ./b/.c with !a/!b/* and {dot: true}
    ✓ should match ./b/.c with !a/!b/* and {nonegate: true}
    ✓ should match .b with !a/!b/*
    ✓ should match .b with !a/!b/* and {dot: true}
    ✓ should match .b with !a/!b/* and {nonegate: true}
    ✓ should match .b.c with !a/!b/*
    ✓ should match .b.c with !a/!b/* and {dot: true}
    ✓ should match .b.c with !a/!b/* and {nonegate: true}
    ✓ should match .b.c/ with !a/!b/*
    ✓ should match .b.c/ with !a/!b/* and {dot: true}
    ✓ should match .b.c/ with !a/!b/* and {nonegate: true}
    ✓ should match .b/ with !a/!b/*
    ✓ should match .b/ with !a/!b/* and {dot: true}
    ✓ should match .b/ with !a/!b/* and {nonegate: true}
    ✓ should match .b/.c with !a/!b/*
    ✓ should match .b/.c with !a/!b/* and {dot: true}
    ✓ should match .b/.c with !a/!b/* and {nonegate: true}
    ✓ should match .b/c with !a/!b/*
    ✓ should match .b/c with !a/!b/* and {dot: true}
    ✓ should match .b/c with !a/!b/* and {nonegate: true}
    ✓ should match b/.c with !a/!b/*
    ✓ should match b/.c with !a/!b/* and {dot: true}
    ✓ should match b/.c with !a/!b/* and {nonegate: true}
    ✓ should match b/.c/ with !a/!b/*
    ✓ should match b/.c/ with !a/!b/* and {dot: true}
    ✓ should match b/.c/ with !a/!b/* and {nonegate: true}
    ✓ should match a/+b/c with !a/!b/*
    ✓ should match a/+b/c with !a/!b/* and {dot: true}
    ✓ should match a/+b/c with !a/!b/* and {nonegate: true}
    ✓ should match +a/+b/c with !a/!b/*
    ✓ should match +a/+b/c with !a/!b/* and {dot: true}
    ✓ should match +a/+b/c with !a/!b/* and {nonegate: true}
    ✓ should match a (foo) with !a/!b/*
    ✓ should match a (foo) with !a/!b/* and {dot: true}
    ✓ should match a (foo) with !a/!b/* and {nonegate: true}
    ✓ should match a (foo)/(bar) with !a/!b/*
    ✓ should match a (foo)/(bar) with !a/!b/* and {dot: true}
    ✓ should match a (foo)/(bar) with !a/!b/* and {nonegate: true}
    ✓ should match a/b/c (1) with !a/!b/*
    ✓ should match a/b/c (1) with !a/!b/* and {dot: true}
    ✓ should match a/b/c (1) with !a/!b/* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with !a/!b/*
    ✓ should match a/b (2)/c (1) with !a/!b/* and {dot: true}
    ✓ should match a/b (2)/c (1) with !a/!b/* and {nonegate: true}
    ✓ should match a/b/c [def] with !a/!b/*
    ✓ should match a/b/c [def] with !a/!b/* and {dot: true}
    ✓ should match a/b/c [def] with !a/!b/* and {nonegate: true}
    ✓ should match a with !a/*?b
    ✓ should match a with !a/*?b and {dot: true}
    ✓ should match a with !a/*?b and {nonegate: true}
    ✓ should match a.md with !a/*?b
    ✓ should match a.md with !a/*?b and {dot: true}
    ✓ should match a.md with !a/*?b and {nonegate: true}
    ✓ should match a.js with !a/*?b
    ✓ should match a.js with !a/*?b and {dot: true}
    ✓ should match a.js with !a/*?b and {nonegate: true}
    ✓ should match a/ with !a/*?b
    ✓ should match a/ with !a/*?b and {dot: true}
    ✓ should match a/ with !a/*?b and {nonegate: true}
    ✓ should match a/b with !a/*?b
    ✓ should match a/b with !a/*?b and {dot: true}
    ✓ should match a/b with !a/*?b and {nonegate: true}
    ✓ should match a/b/.c.md with !a/*?b
    ✓ should match a/b/.c.md with !a/*?b and {dot: true}
    ✓ should match a/b/.c.md with !a/*?b and {nonegate: true}
    ✓ should match a/b/c with !a/*?b
    ✓ should match a/b/c with !a/*?b and {dot: true}
    ✓ should match a/b/c with !a/*?b and {nonegate: true}
    ✓ should match a/b/c.md with !a/*?b
    ✓ should match a/b/c.md with !a/*?b and {dot: true}
    ✓ should match a/b/c.md with !a/*?b and {nonegate: true}
    ✓ should match a/b/c/ with !a/*?b
    ✓ should match a/b/c/ with !a/*?b and {dot: true}
    ✓ should match a/b/c/ with !a/*?b and {nonegate: true}
    ✓ should match a/b/c/d with !a/*?b
    ✓ should match a/b/c/d with !a/*?b and {dot: true}
    ✓ should match a/b/c/d with !a/*?b and {nonegate: true}
    ✓ should match a/b/c/d/ with !a/*?b
    ✓ should match a/b/c/d/ with !a/*?b and {dot: true}
    ✓ should match a/b/c/d/ with !a/*?b and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with !a/*?b
    ✓ should match a/b/c/d/e/f/z.js with !a/*?b and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with !a/*?b and {nonegate: true}
    ✓ should match a/b/c/z.js with !a/*?b
    ✓ should match a/b/c/z.js with !a/*?b and {dot: true}
    ✓ should match a/b/c/z.js with !a/*?b and {nonegate: true}
    ✓ should match a/bb with !a/*?b
    ✓ should match a/bb with !a/*?b and {dot: true}
    ✓ should match a/bb with !a/*?b and {nonegate: true}
    ✓ should match a/cb with !a/*?b
    ✓ should match a/cb with !a/*?b and {dot: true}
    ✓ should match a/cb with !a/*?b and {nonegate: true}
    ✓ should match abbbz with !a/*?b
    ✓ should match abbbz with !a/*?b and {dot: true}
    ✓ should match abbbz with !a/*?b and {nonegate: true}
    ✓ should match abc with !a/*?b
    ✓ should match abc with !a/*?b and {dot: true}
    ✓ should match abc with !a/*?b and {nonegate: true}
    ✓ should match abd with !a/*?b
    ✓ should match abd with !a/*?b and {dot: true}
    ✓ should match abd with !a/*?b and {nonegate: true}
    ✓ should match z.js with !a/*?b
    ✓ should match z.js with !a/*?b and {dot: true}
    ✓ should match z.js with !a/*?b and {nonegate: true}
    ✓ should match za.js with !a/*?b
    ✓ should match za.js with !a/*?b and {dot: true}
    ✓ should match za.js with !a/*?b and {nonegate: true}
    ✓ should match !a.js with !a/*?b
    ✓ should match !a.js with !a/*?b and {dot: true}
    ✓ should match !a.js with !a/*?b and {nonegate: true}
    ✓ should match !a/b with !a/*?b
    ✓ should match !a/b with !a/*?b and {dot: true}
    ✓ should match !a/b with !a/*?b and {nonegate: true}
    ✓ should match !a/b/ with !a/*?b
    ✓ should match !a/b/ with !a/*?b and {dot: true}
    ✓ should match !a/b/ with !a/*?b and {nonegate: true}
    ✓ should match !a/b/c with !a/*?b
    ✓ should match !a/b/c with !a/*?b and {dot: true}
    ✓ should match !a/b/c with !a/*?b and {nonegate: true}
    ✓ should match !a/b/c/ with !a/*?b
    ✓ should match !a/b/c/ with !a/*?b and {dot: true}
    ✓ should match !a/b/c/ with !a/*?b and {nonegate: true}
    ✓ should match !a/!b with !a/*?b
    ✓ should match !a/!b with !a/*?b and {dot: true}
    ✓ should match !a/!b with !a/*?b and {nonegate: true}
    ✓ should match !a/!b/c with !a/*?b
    ✓ should match !a/!b/c with !a/*?b and {dot: true}
    ✓ should match !a/!b/c with !a/*?b and {nonegate: true}
    ✓ should match !a/!b/c/d with !a/*?b
    ✓ should match !a/!b/c/d with !a/*?b and {dot: true}
    ✓ should match !a/!b/c/d with !a/*?b and {nonegate: true}
    ✓ should match !a/b/.c.md with !a/*?b
    ✓ should match !a/b/.c.md with !a/*?b and {dot: true}
    ✓ should match !a/b/.c.md with !a/*?b and {nonegate: true}
    ✓ should match /a/ with !a/*?b
    ✓ should match /a/ with !a/*?b and {dot: true}
    ✓ should match /a/ with !a/*?b and {nonegate: true}
    ✓ should match /a/b with !a/*?b
    ✓ should match /a/b with !a/*?b and {dot: true}
    ✓ should match /a/b with !a/*?b and {nonegate: true}
    ✓ should match /a/cb with !a/*?b
    ✓ should match /a/cb with !a/*?b and {dot: true}
    ✓ should match /a/cb with !a/*?b and {nonegate: true}
    ✓ should match /a/bb with !a/*?b
    ✓ should match /a/bb with !a/*?b and {dot: true}
    ✓ should match /a/bb with !a/*?b and {nonegate: true}
    ✓ should match /a/b/c with !a/*?b
    ✓ should match /a/b/c with !a/*?b and {dot: true}
    ✓ should match /a/b/c with !a/*?b and {nonegate: true}
    ✓ should match /a/b/c/ with !a/*?b
    ✓ should match /a/b/c/ with !a/*?b and {dot: true}
    ✓ should match /a/b/c/ with !a/*?b and {nonegate: true}
    ✓ should match /a/b/c/d with !a/*?b
    ✓ should match /a/b/c/d with !a/*?b and {dot: true}
    ✓ should match /a/b/c/d with !a/*?b and {nonegate: true}
    ✓ should match /a/b/c/d/ with !a/*?b
    ✓ should match /a/b/c/d/ with !a/*?b and {dot: true}
    ✓ should match /a/b/c/d/ with !a/*?b and {nonegate: true}
    ✓ should match . with !a/*?b
    ✓ should match . with !a/*?b and {dot: true}
    ✓ should match . with !a/*?b and {nonegate: true}
    ✓ should match ./ with !a/*?b
    ✓ should match ./ with !a/*?b and {dot: true}
    ✓ should match ./ with !a/*?b and {nonegate: true}
    ✓ should match .. with !a/*?b
    ✓ should match .. with !a/*?b and {dot: true}
    ✓ should match .. with !a/*?b and {nonegate: true}
    ✓ should match ../c with !a/*?b
    ✓ should match ../c with !a/*?b and {dot: true}
    ✓ should match ../c with !a/*?b and {nonegate: true}
    ✓ should match ../c with !a/*?b
    ✓ should match ../c with !a/*?b and {dot: true}
    ✓ should match ../c with !a/*?b and {nonegate: true}
    ✓ should match ./../c with !a/*?b
    ✓ should match ./../c with !a/*?b and {dot: true}
    ✓ should match ./../c with !a/*?b and {nonegate: true}
    ✓ should match ./a/../c with !a/*?b
    ✓ should match ./a/../c with !a/*?b and {dot: true}
    ✓ should match ./a/../c with !a/*?b and {nonegate: true}
    ✓ should match /.. with !a/*?b
    ✓ should match /.. with !a/*?b and {dot: true}
    ✓ should match /.. with !a/*?b and {nonegate: true}
    ✓ should match /../c with !a/*?b
    ✓ should match /../c with !a/*?b and {dot: true}
    ✓ should match /../c with !a/*?b and {nonegate: true}
    ✓ should match /../.c with !a/*?b
    ✓ should match /../.c with !a/*?b and {dot: true}
    ✓ should match /../.c with !a/*?b and {nonegate: true}
    ✓ should match /../.c/ with !a/*?b
    ✓ should match /../.c/ with !a/*?b and {dot: true}
    ✓ should match /../.c/ with !a/*?b and {nonegate: true}
    ✓ should match /a/../c with !a/*?b
    ✓ should match /a/../c with !a/*?b and {dot: true}
    ✓ should match /a/../c with !a/*?b and {nonegate: true}
    ✓ should match a/../c with !a/*?b
    ✓ should match a/../c with !a/*?b and {dot: true}
    ✓ should match a/../c with !a/*?b and {nonegate: true}
    ✓ should match ../.b/.c with !a/*?b
    ✓ should match ../.b/.c with !a/*?b and {dot: true}
    ✓ should match ../.b/.c with !a/*?b and {nonegate: true}
    ✓ should match ../b/.c with !a/*?b
    ✓ should match ../b/.c with !a/*?b and {dot: true}
    ✓ should match ../b/.c with !a/*?b and {nonegate: true}
    ✓ should match ./.b/.c with !a/*?b
    ✓ should match ./.b/.c with !a/*?b and {dot: true}
    ✓ should match ./.b/.c with !a/*?b and {nonegate: true}
    ✓ should match ./b/.c with !a/*?b
    ✓ should match ./b/.c with !a/*?b and {dot: true}
    ✓ should match ./b/.c with !a/*?b and {nonegate: true}
    ✓ should match .b with !a/*?b
    ✓ should match .b with !a/*?b and {dot: true}
    ✓ should match .b with !a/*?b and {nonegate: true}
    ✓ should match .b.c with !a/*?b
    ✓ should match .b.c with !a/*?b and {dot: true}
    ✓ should match .b.c with !a/*?b and {nonegate: true}
    ✓ should match .b.c/ with !a/*?b
    ✓ should match .b.c/ with !a/*?b and {dot: true}
    ✓ should match .b.c/ with !a/*?b and {nonegate: true}
    ✓ should match .b/ with !a/*?b
    ✓ should match .b/ with !a/*?b and {dot: true}
    ✓ should match .b/ with !a/*?b and {nonegate: true}
    ✓ should match .b/.c with !a/*?b
    ✓ should match .b/.c with !a/*?b and {dot: true}
    ✓ should match .b/.c with !a/*?b and {nonegate: true}
    ✓ should match .b/c with !a/*?b
    ✓ should match .b/c with !a/*?b and {dot: true}
    ✓ should match .b/c with !a/*?b and {nonegate: true}
    ✓ should match b/.c with !a/*?b
    ✓ should match b/.c with !a/*?b and {dot: true}
    ✓ should match b/.c with !a/*?b and {nonegate: true}
    ✓ should match b/.c/ with !a/*?b
    ✓ should match b/.c/ with !a/*?b and {dot: true}
    ✓ should match b/.c/ with !a/*?b and {nonegate: true}
    ✓ should match a/+b/c with !a/*?b
    ✓ should match a/+b/c with !a/*?b and {dot: true}
    ✓ should match a/+b/c with !a/*?b and {nonegate: true}
    ✓ should match +a/+b/c with !a/*?b
    ✓ should match +a/+b/c with !a/*?b and {dot: true}
    ✓ should match +a/+b/c with !a/*?b and {nonegate: true}
    ✓ should match a (foo) with !a/*?b
    ✓ should match a (foo) with !a/*?b and {dot: true}
    ✓ should match a (foo) with !a/*?b and {nonegate: true}
    ✓ should match a (foo)/(bar) with !a/*?b
    ✓ should match a (foo)/(bar) with !a/*?b and {dot: true}
    ✓ should match a (foo)/(bar) with !a/*?b and {nonegate: true}
    ✓ should match a/b/c (1) with !a/*?b
    ✓ should match a/b/c (1) with !a/*?b and {dot: true}
    ✓ should match a/b/c (1) with !a/*?b and {nonegate: true}
    ✓ should match a/b (2)/c (1) with !a/*?b
    ✓ should match a/b (2)/c (1) with !a/*?b and {dot: true}
    ✓ should match a/b (2)/c (1) with !a/*?b and {nonegate: true}
    ✓ should match a/b/c [def] with !a/*?b
    ✓ should match a/b/c [def] with !a/*?b and {dot: true}
    ✓ should match a/b/c [def] with !a/*?b and {nonegate: true}
    ✓ should match a with !a/?
    ✓ should match a with !a/? and {dot: true}
    ✓ should match a with !a/? and {nonegate: true}
    ✓ should match a.md with !a/?
    ✓ should match a.md with !a/? and {dot: true}
    ✓ should match a.md with !a/? and {nonegate: true}
    ✓ should match a.js with !a/?
    ✓ should match a.js with !a/? and {dot: true}
    ✓ should match a.js with !a/? and {nonegate: true}
    ✓ should match a/ with !a/?
    ✓ should match a/ with !a/? and {dot: true}
    ✓ should match a/ with !a/? and {nonegate: true}
    ✓ should match a/b with !a/?
    ✓ should match a/b with !a/? and {dot: true}
    ✓ should match a/b with !a/? and {nonegate: true}
    ✓ should match a/b/.c.md with !a/?
    ✓ should match a/b/.c.md with !a/? and {dot: true}
    ✓ should match a/b/.c.md with !a/? and {nonegate: true}
    ✓ should match a/b/c with !a/?
    ✓ should match a/b/c with !a/? and {dot: true}
    ✓ should match a/b/c with !a/? and {nonegate: true}
    ✓ should match a/b/c.md with !a/?
    ✓ should match a/b/c.md with !a/? and {dot: true}
    ✓ should match a/b/c.md with !a/? and {nonegate: true}
    ✓ should match a/b/c/ with !a/?
    ✓ should match a/b/c/ with !a/? and {dot: true}
    ✓ should match a/b/c/ with !a/? and {nonegate: true}
    ✓ should match a/b/c/d with !a/?
    ✓ should match a/b/c/d with !a/? and {dot: true}
    ✓ should match a/b/c/d with !a/? and {nonegate: true}
    ✓ should match a/b/c/d/ with !a/?
    ✓ should match a/b/c/d/ with !a/? and {dot: true}
    ✓ should match a/b/c/d/ with !a/? and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with !a/?
    ✓ should match a/b/c/d/e/f/z.js with !a/? and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with !a/? and {nonegate: true}
    ✓ should match a/b/c/z.js with !a/?
    ✓ should match a/b/c/z.js with !a/? and {dot: true}
    ✓ should match a/b/c/z.js with !a/? and {nonegate: true}
    ✓ should match a/bb with !a/?
    ✓ should match a/bb with !a/? and {dot: true}
    ✓ should match a/bb with !a/? and {nonegate: true}
    ✓ should match a/cb with !a/?
    ✓ should match a/cb with !a/? and {dot: true}
    ✓ should match a/cb with !a/? and {nonegate: true}
    ✓ should match abbbz with !a/?
    ✓ should match abbbz with !a/? and {dot: true}
    ✓ should match abbbz with !a/? and {nonegate: true}
    ✓ should match abc with !a/?
    ✓ should match abc with !a/? and {dot: true}
    ✓ should match abc with !a/? and {nonegate: true}
    ✓ should match abd with !a/?
    ✓ should match abd with !a/? and {dot: true}
    ✓ should match abd with !a/? and {nonegate: true}
    ✓ should match z.js with !a/?
    ✓ should match z.js with !a/? and {dot: true}
    ✓ should match z.js with !a/? and {nonegate: true}
    ✓ should match za.js with !a/?
    ✓ should match za.js with !a/? and {dot: true}
    ✓ should match za.js with !a/? and {nonegate: true}
    ✓ should match !a.js with !a/?
    ✓ should match !a.js with !a/? and {dot: true}
    ✓ should match !a.js with !a/? and {nonegate: true}
    ✓ should match !a/b with !a/?
    ✓ should match !a/b with !a/? and {dot: true}
    ✓ should match !a/b with !a/? and {nonegate: true}
    ✓ should match !a/b/ with !a/?
    ✓ should match !a/b/ with !a/? and {dot: true}
    ✓ should match !a/b/ with !a/? and {nonegate: true}
    ✓ should match !a/b/c with !a/?
    ✓ should match !a/b/c with !a/? and {dot: true}
    ✓ should match !a/b/c with !a/? and {nonegate: true}
    ✓ should match !a/b/c/ with !a/?
    ✓ should match !a/b/c/ with !a/? and {dot: true}
    ✓ should match !a/b/c/ with !a/? and {nonegate: true}
    ✓ should match !a/!b with !a/?
    ✓ should match !a/!b with !a/? and {dot: true}
    ✓ should match !a/!b with !a/? and {nonegate: true}
    ✓ should match !a/!b/c with !a/?
    ✓ should match !a/!b/c with !a/? and {dot: true}
    ✓ should match !a/!b/c with !a/? and {nonegate: true}
    ✓ should match !a/!b/c/d with !a/?
    ✓ should match !a/!b/c/d with !a/? and {dot: true}
    ✓ should match !a/!b/c/d with !a/? and {nonegate: true}
    ✓ should match !a/b/.c.md with !a/?
    ✓ should match !a/b/.c.md with !a/? and {dot: true}
    ✓ should match !a/b/.c.md with !a/? and {nonegate: true}
    ✓ should match /a/ with !a/?
    ✓ should match /a/ with !a/? and {dot: true}
    ✓ should match /a/ with !a/? and {nonegate: true}
    ✓ should match /a/b with !a/?
    ✓ should match /a/b with !a/? and {dot: true}
    ✓ should match /a/b with !a/? and {nonegate: true}
    ✓ should match /a/cb with !a/?
    ✓ should match /a/cb with !a/? and {dot: true}
    ✓ should match /a/cb with !a/? and {nonegate: true}
    ✓ should match /a/bb with !a/?
    ✓ should match /a/bb with !a/? and {dot: true}
    ✓ should match /a/bb with !a/? and {nonegate: true}
    ✓ should match /a/b/c with !a/?
    ✓ should match /a/b/c with !a/? and {dot: true}
    ✓ should match /a/b/c with !a/? and {nonegate: true}
    ✓ should match /a/b/c/ with !a/?
    ✓ should match /a/b/c/ with !a/? and {dot: true}
    ✓ should match /a/b/c/ with !a/? and {nonegate: true}
    ✓ should match /a/b/c/d with !a/?
    ✓ should match /a/b/c/d with !a/? and {dot: true}
    ✓ should match /a/b/c/d with !a/? and {nonegate: true}
    ✓ should match /a/b/c/d/ with !a/?
    ✓ should match /a/b/c/d/ with !a/? and {dot: true}
    ✓ should match /a/b/c/d/ with !a/? and {nonegate: true}
    ✓ should match . with !a/?
    ✓ should match . with !a/? and {dot: true}
    ✓ should match . with !a/? and {nonegate: true}
    ✓ should match ./ with !a/?
    ✓ should match ./ with !a/? and {dot: true}
    ✓ should match ./ with !a/? and {nonegate: true}
    ✓ should match .. with !a/?
    ✓ should match .. with !a/? and {dot: true}
    ✓ should match .. with !a/? and {nonegate: true}
    ✓ should match ../c with !a/?
    ✓ should match ../c with !a/? and {dot: true}
    ✓ should match ../c with !a/? and {nonegate: true}
    ✓ should match ../c with !a/?
    ✓ should match ../c with !a/? and {dot: true}
    ✓ should match ../c with !a/? and {nonegate: true}
    ✓ should match ./../c with !a/?
    ✓ should match ./../c with !a/? and {dot: true}
    ✓ should match ./../c with !a/? and {nonegate: true}
    ✓ should match ./a/../c with !a/?
    ✓ should match ./a/../c with !a/? and {dot: true}
    ✓ should match ./a/../c with !a/? and {nonegate: true}
    ✓ should match /.. with !a/?
    ✓ should match /.. with !a/? and {dot: true}
    ✓ should match /.. with !a/? and {nonegate: true}
    ✓ should match /../c with !a/?
    ✓ should match /../c with !a/? and {dot: true}
    ✓ should match /../c with !a/? and {nonegate: true}
    ✓ should match /../.c with !a/?
    ✓ should match /../.c with !a/? and {dot: true}
    ✓ should match /../.c with !a/? and {nonegate: true}
    ✓ should match /../.c/ with !a/?
    ✓ should match /../.c/ with !a/? and {dot: true}
    ✓ should match /../.c/ with !a/? and {nonegate: true}
    ✓ should match /a/../c with !a/?
    ✓ should match /a/../c with !a/? and {dot: true}
    ✓ should match /a/../c with !a/? and {nonegate: true}
    ✓ should match a/../c with !a/?
    ✓ should match a/../c with !a/? and {dot: true}
    ✓ should match a/../c with !a/? and {nonegate: true}
    ✓ should match ../.b/.c with !a/?
    ✓ should match ../.b/.c with !a/? and {dot: true}
    ✓ should match ../.b/.c with !a/? and {nonegate: true}
    ✓ should match ../b/.c with !a/?
    ✓ should match ../b/.c with !a/? and {dot: true}
    ✓ should match ../b/.c with !a/? and {nonegate: true}
    ✓ should match ./.b/.c with !a/?
    ✓ should match ./.b/.c with !a/? and {dot: true}
    ✓ should match ./.b/.c with !a/? and {nonegate: true}
    ✓ should match ./b/.c with !a/?
    ✓ should match ./b/.c with !a/? and {dot: true}
    ✓ should match ./b/.c with !a/? and {nonegate: true}
    ✓ should match .b with !a/?
    ✓ should match .b with !a/? and {dot: true}
    ✓ should match .b with !a/? and {nonegate: true}
    ✓ should match .b.c with !a/?
    ✓ should match .b.c with !a/? and {dot: true}
    ✓ should match .b.c with !a/? and {nonegate: true}
    ✓ should match .b.c/ with !a/?
    ✓ should match .b.c/ with !a/? and {dot: true}
    ✓ should match .b.c/ with !a/? and {nonegate: true}
    ✓ should match .b/ with !a/?
    ✓ should match .b/ with !a/? and {dot: true}
    ✓ should match .b/ with !a/? and {nonegate: true}
    ✓ should match .b/.c with !a/?
    ✓ should match .b/.c with !a/? and {dot: true}
    ✓ should match .b/.c with !a/? and {nonegate: true}
    ✓ should match .b/c with !a/?
    ✓ should match .b/c with !a/? and {dot: true}
    ✓ should match .b/c with !a/? and {nonegate: true}
    ✓ should match b/.c with !a/?
    ✓ should match b/.c with !a/? and {dot: true}
    ✓ should match b/.c with !a/? and {nonegate: true}
    ✓ should match b/.c/ with !a/?
    ✓ should match b/.c/ with !a/? and {dot: true}
    ✓ should match b/.c/ with !a/? and {nonegate: true}
    ✓ should match a/+b/c with !a/?
    ✓ should match a/+b/c with !a/? and {dot: true}
    ✓ should match a/+b/c with !a/? and {nonegate: true}
    ✓ should match +a/+b/c with !a/?
    ✓ should match +a/+b/c with !a/? and {dot: true}
    ✓ should match +a/+b/c with !a/? and {nonegate: true}
    ✓ should match a (foo) with !a/?
    ✓ should match a (foo) with !a/? and {dot: true}
    ✓ should match a (foo) with !a/? and {nonegate: true}
    ✓ should match a (foo)/(bar) with !a/?
    ✓ should match a (foo)/(bar) with !a/? and {dot: true}
    ✓ should match a (foo)/(bar) with !a/? and {nonegate: true}
    ✓ should match a/b/c (1) with !a/?
    ✓ should match a/b/c (1) with !a/? and {dot: true}
    ✓ should match a/b/c (1) with !a/? and {nonegate: true}
    ✓ should match a/b (2)/c (1) with !a/?
    ✓ should match a/b (2)/c (1) with !a/? and {dot: true}
    ✓ should match a/b (2)/c (1) with !a/? and {nonegate: true}
    ✓ should match a/b/c [def] with !a/?
    ✓ should match a/b/c [def] with !a/? and {dot: true}
    ✓ should match a/b/c [def] with !a/? and {nonegate: true}
    ✓ should match a with !a/?*b
    ✓ should match a with !a/?*b and {dot: true}
    ✓ should match a with !a/?*b and {nonegate: true}
    ✓ should match a.md with !a/?*b
    ✓ should match a.md with !a/?*b and {dot: true}
    ✓ should match a.md with !a/?*b and {nonegate: true}
    ✓ should match a.js with !a/?*b
    ✓ should match a.js with !a/?*b and {dot: true}
    ✓ should match a.js with !a/?*b and {nonegate: true}
    ✓ should match a/ with !a/?*b
    ✓ should match a/ with !a/?*b and {dot: true}
    ✓ should match a/ with !a/?*b and {nonegate: true}
    ✓ should match a/b with !a/?*b
    ✓ should match a/b with !a/?*b and {dot: true}
    ✓ should match a/b with !a/?*b and {nonegate: true}
    ✓ should match a/b/.c.md with !a/?*b
    ✓ should match a/b/.c.md with !a/?*b and {dot: true}
    ✓ should match a/b/.c.md with !a/?*b and {nonegate: true}
    ✓ should match a/b/c with !a/?*b
    ✓ should match a/b/c with !a/?*b and {dot: true}
    ✓ should match a/b/c with !a/?*b and {nonegate: true}
    ✓ should match a/b/c.md with !a/?*b
    ✓ should match a/b/c.md with !a/?*b and {dot: true}
    ✓ should match a/b/c.md with !a/?*b and {nonegate: true}
    ✓ should match a/b/c/ with !a/?*b
    ✓ should match a/b/c/ with !a/?*b and {dot: true}
    ✓ should match a/b/c/ with !a/?*b and {nonegate: true}
    ✓ should match a/b/c/d with !a/?*b
    ✓ should match a/b/c/d with !a/?*b and {dot: true}
    ✓ should match a/b/c/d with !a/?*b and {nonegate: true}
    ✓ should match a/b/c/d/ with !a/?*b
    ✓ should match a/b/c/d/ with !a/?*b and {dot: true}
    ✓ should match a/b/c/d/ with !a/?*b and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with !a/?*b
    ✓ should match a/b/c/d/e/f/z.js with !a/?*b and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with !a/?*b and {nonegate: true}
    ✓ should match a/b/c/z.js with !a/?*b
    ✓ should match a/b/c/z.js with !a/?*b and {dot: true}
    ✓ should match a/b/c/z.js with !a/?*b and {nonegate: true}
    ✓ should match a/bb with !a/?*b
    ✓ should match a/bb with !a/?*b and {dot: true}
    ✓ should match a/bb with !a/?*b and {nonegate: true}
    ✓ should match a/cb with !a/?*b
    ✓ should match a/cb with !a/?*b and {dot: true}
    ✓ should match a/cb with !a/?*b and {nonegate: true}
    ✓ should match abbbz with !a/?*b
    ✓ should match abbbz with !a/?*b and {dot: true}
    ✓ should match abbbz with !a/?*b and {nonegate: true}
    ✓ should match abc with !a/?*b
    ✓ should match abc with !a/?*b and {dot: true}
    ✓ should match abc with !a/?*b and {nonegate: true}
    ✓ should match abd with !a/?*b
    ✓ should match abd with !a/?*b and {dot: true}
    ✓ should match abd with !a/?*b and {nonegate: true}
    ✓ should match z.js with !a/?*b
    ✓ should match z.js with !a/?*b and {dot: true}
    ✓ should match z.js with !a/?*b and {nonegate: true}
    ✓ should match za.js with !a/?*b
    ✓ should match za.js with !a/?*b and {dot: true}
    ✓ should match za.js with !a/?*b and {nonegate: true}
    ✓ should match !a.js with !a/?*b
    ✓ should match !a.js with !a/?*b and {dot: true}
    ✓ should match !a.js with !a/?*b and {nonegate: true}
    ✓ should match !a/b with !a/?*b
    ✓ should match !a/b with !a/?*b and {dot: true}
    ✓ should match !a/b with !a/?*b and {nonegate: true}
    ✓ should match !a/b/ with !a/?*b
    ✓ should match !a/b/ with !a/?*b and {dot: true}
    ✓ should match !a/b/ with !a/?*b and {nonegate: true}
    ✓ should match !a/b/c with !a/?*b
    ✓ should match !a/b/c with !a/?*b and {dot: true}
    ✓ should match !a/b/c with !a/?*b and {nonegate: true}
    ✓ should match !a/b/c/ with !a/?*b
    ✓ should match !a/b/c/ with !a/?*b and {dot: true}
    ✓ should match !a/b/c/ with !a/?*b and {nonegate: true}
    ✓ should match !a/!b with !a/?*b
    ✓ should match !a/!b with !a/?*b and {dot: true}
    ✓ should match !a/!b with !a/?*b and {nonegate: true}
    ✓ should match !a/!b/c with !a/?*b
    ✓ should match !a/!b/c with !a/?*b and {dot: true}
    ✓ should match !a/!b/c with !a/?*b and {nonegate: true}
    ✓ should match !a/!b/c/d with !a/?*b
    ✓ should match !a/!b/c/d with !a/?*b and {dot: true}
    ✓ should match !a/!b/c/d with !a/?*b and {nonegate: true}
    ✓ should match !a/b/.c.md with !a/?*b
    ✓ should match !a/b/.c.md with !a/?*b and {dot: true}
    ✓ should match !a/b/.c.md with !a/?*b and {nonegate: true}
    ✓ should match /a/ with !a/?*b
    ✓ should match /a/ with !a/?*b and {dot: true}
    ✓ should match /a/ with !a/?*b and {nonegate: true}
    ✓ should match /a/b with !a/?*b
    ✓ should match /a/b with !a/?*b and {dot: true}
    ✓ should match /a/b with !a/?*b and {nonegate: true}
    ✓ should match /a/cb with !a/?*b
    ✓ should match /a/cb with !a/?*b and {dot: true}
    ✓ should match /a/cb with !a/?*b and {nonegate: true}
    ✓ should match /a/bb with !a/?*b
    ✓ should match /a/bb with !a/?*b and {dot: true}
    ✓ should match /a/bb with !a/?*b and {nonegate: true}
    ✓ should match /a/b/c with !a/?*b
    ✓ should match /a/b/c with !a/?*b and {dot: true}
    ✓ should match /a/b/c with !a/?*b and {nonegate: true}
    ✓ should match /a/b/c/ with !a/?*b
    ✓ should match /a/b/c/ with !a/?*b and {dot: true}
    ✓ should match /a/b/c/ with !a/?*b and {nonegate: true}
    ✓ should match /a/b/c/d with !a/?*b
    ✓ should match /a/b/c/d with !a/?*b and {dot: true}
    ✓ should match /a/b/c/d with !a/?*b and {nonegate: true}
    ✓ should match /a/b/c/d/ with !a/?*b
    ✓ should match /a/b/c/d/ with !a/?*b and {dot: true}
    ✓ should match /a/b/c/d/ with !a/?*b and {nonegate: true}
    ✓ should match . with !a/?*b
    ✓ should match . with !a/?*b and {dot: true}
    ✓ should match . with !a/?*b and {nonegate: true}
    ✓ should match ./ with !a/?*b
    ✓ should match ./ with !a/?*b and {dot: true}
    ✓ should match ./ with !a/?*b and {nonegate: true}
    ✓ should match .. with !a/?*b
    ✓ should match .. with !a/?*b and {dot: true}
    ✓ should match .. with !a/?*b and {nonegate: true}
    ✓ should match ../c with !a/?*b
    ✓ should match ../c with !a/?*b and {dot: true}
    ✓ should match ../c with !a/?*b and {nonegate: true}
    ✓ should match ../c with !a/?*b
    ✓ should match ../c with !a/?*b and {dot: true}
    ✓ should match ../c with !a/?*b and {nonegate: true}
    ✓ should match ./../c with !a/?*b
    ✓ should match ./../c with !a/?*b and {dot: true}
    ✓ should match ./../c with !a/?*b and {nonegate: true}
    ✓ should match ./a/../c with !a/?*b
    ✓ should match ./a/../c with !a/?*b and {dot: true}
    ✓ should match ./a/../c with !a/?*b and {nonegate: true}
    ✓ should match /.. with !a/?*b
    ✓ should match /.. with !a/?*b and {dot: true}
    ✓ should match /.. with !a/?*b and {nonegate: true}
    ✓ should match /../c with !a/?*b
    ✓ should match /../c with !a/?*b and {dot: true}
    ✓ should match /../c with !a/?*b and {nonegate: true}
    ✓ should match /../.c with !a/?*b
    ✓ should match /../.c with !a/?*b and {dot: true}
    ✓ should match /../.c with !a/?*b and {nonegate: true}
    ✓ should match /../.c/ with !a/?*b
    ✓ should match /../.c/ with !a/?*b and {dot: true}
    ✓ should match /../.c/ with !a/?*b and {nonegate: true}
    ✓ should match /a/../c with !a/?*b
    ✓ should match /a/../c with !a/?*b and {dot: true}
    ✓ should match /a/../c with !a/?*b and {nonegate: true}
    ✓ should match a/../c with !a/?*b
    ✓ should match a/../c with !a/?*b and {dot: true}
    ✓ should match a/../c with !a/?*b and {nonegate: true}
    ✓ should match ../.b/.c with !a/?*b
    ✓ should match ../.b/.c with !a/?*b and {dot: true}
    ✓ should match ../.b/.c with !a/?*b and {nonegate: true}
    ✓ should match ../b/.c with !a/?*b
    ✓ should match ../b/.c with !a/?*b and {dot: true}
    ✓ should match ../b/.c with !a/?*b and {nonegate: true}
    ✓ should match ./.b/.c with !a/?*b
    ✓ should match ./.b/.c with !a/?*b and {dot: true}
    ✓ should match ./.b/.c with !a/?*b and {nonegate: true}
    ✓ should match ./b/.c with !a/?*b
    ✓ should match ./b/.c with !a/?*b and {dot: true}
    ✓ should match ./b/.c with !a/?*b and {nonegate: true}
    ✓ should match .b with !a/?*b
    ✓ should match .b with !a/?*b and {dot: true}
    ✓ should match .b with !a/?*b and {nonegate: true}
    ✓ should match .b.c with !a/?*b
    ✓ should match .b.c with !a/?*b and {dot: true}
    ✓ should match .b.c with !a/?*b and {nonegate: true}
    ✓ should match .b.c/ with !a/?*b
    ✓ should match .b.c/ with !a/?*b and {dot: true}
    ✓ should match .b.c/ with !a/?*b and {nonegate: true}
    ✓ should match .b/ with !a/?*b
    ✓ should match .b/ with !a/?*b and {dot: true}
    ✓ should match .b/ with !a/?*b and {nonegate: true}
    ✓ should match .b/.c with !a/?*b
    ✓ should match .b/.c with !a/?*b and {dot: true}
    ✓ should match .b/.c with !a/?*b and {nonegate: true}
    ✓ should match .b/c with !a/?*b
    ✓ should match .b/c with !a/?*b and {dot: true}
    ✓ should match .b/c with !a/?*b and {nonegate: true}
    ✓ should match b/.c with !a/?*b
    ✓ should match b/.c with !a/?*b and {dot: true}
    ✓ should match b/.c with !a/?*b and {nonegate: true}
    ✓ should match b/.c/ with !a/?*b
    ✓ should match b/.c/ with !a/?*b and {dot: true}
    ✓ should match b/.c/ with !a/?*b and {nonegate: true}
    ✓ should match a/+b/c with !a/?*b
    ✓ should match a/+b/c with !a/?*b and {dot: true}
    ✓ should match a/+b/c with !a/?*b and {nonegate: true}
    ✓ should match +a/+b/c with !a/?*b
    ✓ should match +a/+b/c with !a/?*b and {dot: true}
    ✓ should match +a/+b/c with !a/?*b and {nonegate: true}
    ✓ should match a (foo) with !a/?*b
    ✓ should match a (foo) with !a/?*b and {dot: true}
    ✓ should match a (foo) with !a/?*b and {nonegate: true}
    ✓ should match a (foo)/(bar) with !a/?*b
    ✓ should match a (foo)/(bar) with !a/?*b and {dot: true}
    ✓ should match a (foo)/(bar) with !a/?*b and {nonegate: true}
    ✓ should match a/b/c (1) with !a/?*b
    ✓ should match a/b/c (1) with !a/?*b and {dot: true}
    ✓ should match a/b/c (1) with !a/?*b and {nonegate: true}
    ✓ should match a/b (2)/c (1) with !a/?*b
    ✓ should match a/b (2)/c (1) with !a/?*b and {dot: true}
    ✓ should match a/b (2)/c (1) with !a/?*b and {nonegate: true}
    ✓ should match a/b/c [def] with !a/?*b
    ✓ should match a/b/c [def] with !a/?*b and {dot: true}
    ✓ should match a/b/c [def] with !a/?*b and {nonegate: true}
    ✓ should match a with !a/??b
    ✓ should match a with !a/??b and {dot: true}
    ✓ should match a with !a/??b and {nonegate: true}
    ✓ should match a.md with !a/??b
    ✓ should match a.md with !a/??b and {dot: true}
    ✓ should match a.md with !a/??b and {nonegate: true}
    ✓ should match a.js with !a/??b
    ✓ should match a.js with !a/??b and {dot: true}
    ✓ should match a.js with !a/??b and {nonegate: true}
    ✓ should match a/ with !a/??b
    ✓ should match a/ with !a/??b and {dot: true}
    ✓ should match a/ with !a/??b and {nonegate: true}
    ✓ should match a/b with !a/??b
    ✓ should match a/b with !a/??b and {dot: true}
    ✓ should match a/b with !a/??b and {nonegate: true}
    ✓ should match a/b/.c.md with !a/??b
    ✓ should match a/b/.c.md with !a/??b and {dot: true}
    ✓ should match a/b/.c.md with !a/??b and {nonegate: true}
    ✓ should match a/b/c with !a/??b
    ✓ should match a/b/c with !a/??b and {dot: true}
    ✓ should match a/b/c with !a/??b and {nonegate: true}
    ✓ should match a/b/c.md with !a/??b
    ✓ should match a/b/c.md with !a/??b and {dot: true}
    ✓ should match a/b/c.md with !a/??b and {nonegate: true}
    ✓ should match a/b/c/ with !a/??b
    ✓ should match a/b/c/ with !a/??b and {dot: true}
    ✓ should match a/b/c/ with !a/??b and {nonegate: true}
    ✓ should match a/b/c/d with !a/??b
    ✓ should match a/b/c/d with !a/??b and {dot: true}
    ✓ should match a/b/c/d with !a/??b and {nonegate: true}
    ✓ should match a/b/c/d/ with !a/??b
    ✓ should match a/b/c/d/ with !a/??b and {dot: true}
    ✓ should match a/b/c/d/ with !a/??b and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with !a/??b
    ✓ should match a/b/c/d/e/f/z.js with !a/??b and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with !a/??b and {nonegate: true}
    ✓ should match a/b/c/z.js with !a/??b
    ✓ should match a/b/c/z.js with !a/??b and {dot: true}
    ✓ should match a/b/c/z.js with !a/??b and {nonegate: true}
    ✓ should match a/bb with !a/??b
    ✓ should match a/bb with !a/??b and {dot: true}
    ✓ should match a/bb with !a/??b and {nonegate: true}
    ✓ should match a/cb with !a/??b
    ✓ should match a/cb with !a/??b and {dot: true}
    ✓ should match a/cb with !a/??b and {nonegate: true}
    ✓ should match abbbz with !a/??b
    ✓ should match abbbz with !a/??b and {dot: true}
    ✓ should match abbbz with !a/??b and {nonegate: true}
    ✓ should match abc with !a/??b
    ✓ should match abc with !a/??b and {dot: true}
    ✓ should match abc with !a/??b and {nonegate: true}
    ✓ should match abd with !a/??b
    ✓ should match abd with !a/??b and {dot: true}
    ✓ should match abd with !a/??b and {nonegate: true}
    ✓ should match z.js with !a/??b
    ✓ should match z.js with !a/??b and {dot: true}
    ✓ should match z.js with !a/??b and {nonegate: true}
    ✓ should match za.js with !a/??b
    ✓ should match za.js with !a/??b and {dot: true}
    ✓ should match za.js with !a/??b and {nonegate: true}
    ✓ should match !a.js with !a/??b
    ✓ should match !a.js with !a/??b and {dot: true}
    ✓ should match !a.js with !a/??b and {nonegate: true}
    ✓ should match !a/b with !a/??b
    ✓ should match !a/b with !a/??b and {dot: true}
    ✓ should match !a/b with !a/??b and {nonegate: true}
    ✓ should match !a/b/ with !a/??b
    ✓ should match !a/b/ with !a/??b and {dot: true}
    ✓ should match !a/b/ with !a/??b and {nonegate: true}
    ✓ should match !a/b/c with !a/??b
    ✓ should match !a/b/c with !a/??b and {dot: true}
    ✓ should match !a/b/c with !a/??b and {nonegate: true}
    ✓ should match !a/b/c/ with !a/??b
    ✓ should match !a/b/c/ with !a/??b and {dot: true}
    ✓ should match !a/b/c/ with !a/??b and {nonegate: true}
    ✓ should match !a/!b with !a/??b
    ✓ should match !a/!b with !a/??b and {dot: true}
    ✓ should match !a/!b with !a/??b and {nonegate: true}
    ✓ should match !a/!b/c with !a/??b
    ✓ should match !a/!b/c with !a/??b and {dot: true}
    ✓ should match !a/!b/c with !a/??b and {nonegate: true}
    ✓ should match !a/!b/c/d with !a/??b
    ✓ should match !a/!b/c/d with !a/??b and {dot: true}
    ✓ should match !a/!b/c/d with !a/??b and {nonegate: true}
    ✓ should match !a/b/.c.md with !a/??b
    ✓ should match !a/b/.c.md with !a/??b and {dot: true}
    ✓ should match !a/b/.c.md with !a/??b and {nonegate: true}
    ✓ should match /a/ with !a/??b
    ✓ should match /a/ with !a/??b and {dot: true}
    ✓ should match /a/ with !a/??b and {nonegate: true}
    ✓ should match /a/b with !a/??b
    ✓ should match /a/b with !a/??b and {dot: true}
    ✓ should match /a/b with !a/??b and {nonegate: true}
    ✓ should match /a/cb with !a/??b
    ✓ should match /a/cb with !a/??b and {dot: true}
    ✓ should match /a/cb with !a/??b and {nonegate: true}
    ✓ should match /a/bb with !a/??b
    ✓ should match /a/bb with !a/??b and {dot: true}
    ✓ should match /a/bb with !a/??b and {nonegate: true}
    ✓ should match /a/b/c with !a/??b
    ✓ should match /a/b/c with !a/??b and {dot: true}
    ✓ should match /a/b/c with !a/??b and {nonegate: true}
    ✓ should match /a/b/c/ with !a/??b
    ✓ should match /a/b/c/ with !a/??b and {dot: true}
    ✓ should match /a/b/c/ with !a/??b and {nonegate: true}
    ✓ should match /a/b/c/d with !a/??b
    ✓ should match /a/b/c/d with !a/??b and {dot: true}
    ✓ should match /a/b/c/d with !a/??b and {nonegate: true}
    ✓ should match /a/b/c/d/ with !a/??b
    ✓ should match /a/b/c/d/ with !a/??b and {dot: true}
    ✓ should match /a/b/c/d/ with !a/??b and {nonegate: true}
    ✓ should match . with !a/??b
    ✓ should match . with !a/??b and {dot: true}
    ✓ should match . with !a/??b and {nonegate: true}
    ✓ should match ./ with !a/??b
    ✓ should match ./ with !a/??b and {dot: true}
    ✓ should match ./ with !a/??b and {nonegate: true}
    ✓ should match .. with !a/??b
    ✓ should match .. with !a/??b and {dot: true}
    ✓ should match .. with !a/??b and {nonegate: true}
    ✓ should match ../c with !a/??b
    ✓ should match ../c with !a/??b and {dot: true}
    ✓ should match ../c with !a/??b and {nonegate: true}
    ✓ should match ../c with !a/??b
    ✓ should match ../c with !a/??b and {dot: true}
    ✓ should match ../c with !a/??b and {nonegate: true}
    ✓ should match ./../c with !a/??b
    ✓ should match ./../c with !a/??b and {dot: true}
    ✓ should match ./../c with !a/??b and {nonegate: true}
    ✓ should match ./a/../c with !a/??b
    ✓ should match ./a/../c with !a/??b and {dot: true}
    ✓ should match ./a/../c with !a/??b and {nonegate: true}
    ✓ should match /.. with !a/??b
    ✓ should match /.. with !a/??b and {dot: true}
    ✓ should match /.. with !a/??b and {nonegate: true}
    ✓ should match /../c with !a/??b
    ✓ should match /../c with !a/??b and {dot: true}
    ✓ should match /../c with !a/??b and {nonegate: true}
    ✓ should match /../.c with !a/??b
    ✓ should match /../.c with !a/??b and {dot: true}
    ✓ should match /../.c with !a/??b and {nonegate: true}
    ✓ should match /../.c/ with !a/??b
    ✓ should match /../.c/ with !a/??b and {dot: true}
    ✓ should match /../.c/ with !a/??b and {nonegate: true}
    ✓ should match /a/../c with !a/??b
    ✓ should match /a/../c with !a/??b and {dot: true}
    ✓ should match /a/../c with !a/??b and {nonegate: true}
    ✓ should match a/../c with !a/??b
    ✓ should match a/../c with !a/??b and {dot: true}
    ✓ should match a/../c with !a/??b and {nonegate: true}
    ✓ should match ../.b/.c with !a/??b
    ✓ should match ../.b/.c with !a/??b and {dot: true}
    ✓ should match ../.b/.c with !a/??b and {nonegate: true}
    ✓ should match ../b/.c with !a/??b
    ✓ should match ../b/.c with !a/??b and {dot: true}
    ✓ should match ../b/.c with !a/??b and {nonegate: true}
    ✓ should match ./.b/.c with !a/??b
    ✓ should match ./.b/.c with !a/??b and {dot: true}
    ✓ should match ./.b/.c with !a/??b and {nonegate: true}
    ✓ should match ./b/.c with !a/??b
    ✓ should match ./b/.c with !a/??b and {dot: true}
    ✓ should match ./b/.c with !a/??b and {nonegate: true}
    ✓ should match .b with !a/??b
    ✓ should match .b with !a/??b and {dot: true}
    ✓ should match .b with !a/??b and {nonegate: true}
    ✓ should match .b.c with !a/??b
    ✓ should match .b.c with !a/??b and {dot: true}
    ✓ should match .b.c with !a/??b and {nonegate: true}
    ✓ should match .b.c/ with !a/??b
    ✓ should match .b.c/ with !a/??b and {dot: true}
    ✓ should match .b.c/ with !a/??b and {nonegate: true}
    ✓ should match .b/ with !a/??b
    ✓ should match .b/ with !a/??b and {dot: true}
    ✓ should match .b/ with !a/??b and {nonegate: true}
    ✓ should match .b/.c with !a/??b
    ✓ should match .b/.c with !a/??b and {dot: true}
    ✓ should match .b/.c with !a/??b and {nonegate: true}
    ✓ should match .b/c with !a/??b
    ✓ should match .b/c with !a/??b and {dot: true}
    ✓ should match .b/c with !a/??b and {nonegate: true}
    ✓ should match b/.c with !a/??b
    ✓ should match b/.c with !a/??b and {dot: true}
    ✓ should match b/.c with !a/??b and {nonegate: true}
    ✓ should match b/.c/ with !a/??b
    ✓ should match b/.c/ with !a/??b and {dot: true}
    ✓ should match b/.c/ with !a/??b and {nonegate: true}
    ✓ should match a/+b/c with !a/??b
    ✓ should match a/+b/c with !a/??b and {dot: true}
    ✓ should match a/+b/c with !a/??b and {nonegate: true}
    ✓ should match +a/+b/c with !a/??b
    ✓ should match +a/+b/c with !a/??b and {dot: true}
    ✓ should match +a/+b/c with !a/??b and {nonegate: true}
    ✓ should match a (foo) with !a/??b
    ✓ should match a (foo) with !a/??b and {dot: true}
    ✓ should match a (foo) with !a/??b and {nonegate: true}
    ✓ should match a (foo)/(bar) with !a/??b
    ✓ should match a (foo)/(bar) with !a/??b and {dot: true}
    ✓ should match a (foo)/(bar) with !a/??b and {nonegate: true}
    ✓ should match a/b/c (1) with !a/??b
    ✓ should match a/b/c (1) with !a/??b and {dot: true}
    ✓ should match a/b/c (1) with !a/??b and {nonegate: true}
    ✓ should match a/b (2)/c (1) with !a/??b
    ✓ should match a/b (2)/c (1) with !a/??b and {dot: true}
    ✓ should match a/b (2)/c (1) with !a/??b and {nonegate: true}
    ✓ should match a/b/c [def] with !a/??b
    ✓ should match a/b/c [def] with !a/??b and {dot: true}
    ✓ should match a/b/c [def] with !a/??b and {nonegate: true}
    ✓ should match a with !a/?b
    ✓ should match a with !a/?b and {dot: true}
    ✓ should match a with !a/?b and {nonegate: true}
    ✓ should match a.md with !a/?b
    ✓ should match a.md with !a/?b and {dot: true}
    ✓ should match a.md with !a/?b and {nonegate: true}
    ✓ should match a.js with !a/?b
    ✓ should match a.js with !a/?b and {dot: true}
    ✓ should match a.js with !a/?b and {nonegate: true}
    ✓ should match a/ with !a/?b
    ✓ should match a/ with !a/?b and {dot: true}
    ✓ should match a/ with !a/?b and {nonegate: true}
    ✓ should match a/b with !a/?b
    ✓ should match a/b with !a/?b and {dot: true}
    ✓ should match a/b with !a/?b and {nonegate: true}
    ✓ should match a/b/.c.md with !a/?b
    ✓ should match a/b/.c.md with !a/?b and {dot: true}
    ✓ should match a/b/.c.md with !a/?b and {nonegate: true}
    ✓ should match a/b/c with !a/?b
    ✓ should match a/b/c with !a/?b and {dot: true}
    ✓ should match a/b/c with !a/?b and {nonegate: true}
    ✓ should match a/b/c.md with !a/?b
    ✓ should match a/b/c.md with !a/?b and {dot: true}
    ✓ should match a/b/c.md with !a/?b and {nonegate: true}
    ✓ should match a/b/c/ with !a/?b
    ✓ should match a/b/c/ with !a/?b and {dot: true}
    ✓ should match a/b/c/ with !a/?b and {nonegate: true}
    ✓ should match a/b/c/d with !a/?b
    ✓ should match a/b/c/d with !a/?b and {dot: true}
    ✓ should match a/b/c/d with !a/?b and {nonegate: true}
    ✓ should match a/b/c/d/ with !a/?b
    ✓ should match a/b/c/d/ with !a/?b and {dot: true}
    ✓ should match a/b/c/d/ with !a/?b and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with !a/?b
    ✓ should match a/b/c/d/e/f/z.js with !a/?b and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with !a/?b and {nonegate: true}
    ✓ should match a/b/c/z.js with !a/?b
    ✓ should match a/b/c/z.js with !a/?b and {dot: true}
    ✓ should match a/b/c/z.js with !a/?b and {nonegate: true}
    ✓ should match a/bb with !a/?b
    ✓ should match a/bb with !a/?b and {dot: true}
    ✓ should match a/bb with !a/?b and {nonegate: true}
    ✓ should match a/cb with !a/?b
    ✓ should match a/cb with !a/?b and {dot: true}
    ✓ should match a/cb with !a/?b and {nonegate: true}
    ✓ should match abbbz with !a/?b
    ✓ should match abbbz with !a/?b and {dot: true}
    ✓ should match abbbz with !a/?b and {nonegate: true}
    ✓ should match abc with !a/?b
    ✓ should match abc with !a/?b and {dot: true}
    ✓ should match abc with !a/?b and {nonegate: true}
    ✓ should match abd with !a/?b
    ✓ should match abd with !a/?b and {dot: true}
    ✓ should match abd with !a/?b and {nonegate: true}
    ✓ should match z.js with !a/?b
    ✓ should match z.js with !a/?b and {dot: true}
    ✓ should match z.js with !a/?b and {nonegate: true}
    ✓ should match za.js with !a/?b
    ✓ should match za.js with !a/?b and {dot: true}
    ✓ should match za.js with !a/?b and {nonegate: true}
    ✓ should match !a.js with !a/?b
    ✓ should match !a.js with !a/?b and {dot: true}
    ✓ should match !a.js with !a/?b and {nonegate: true}
    ✓ should match !a/b with !a/?b
    ✓ should match !a/b with !a/?b and {dot: true}
    ✓ should match !a/b with !a/?b and {nonegate: true}
    ✓ should match !a/b/ with !a/?b
    ✓ should match !a/b/ with !a/?b and {dot: true}
    ✓ should match !a/b/ with !a/?b and {nonegate: true}
    ✓ should match !a/b/c with !a/?b
    ✓ should match !a/b/c with !a/?b and {dot: true}
    ✓ should match !a/b/c with !a/?b and {nonegate: true}
    ✓ should match !a/b/c/ with !a/?b
    ✓ should match !a/b/c/ with !a/?b and {dot: true}
    ✓ should match !a/b/c/ with !a/?b and {nonegate: true}
    ✓ should match !a/!b with !a/?b
    ✓ should match !a/!b with !a/?b and {dot: true}
    ✓ should match !a/!b with !a/?b and {nonegate: true}
    ✓ should match !a/!b/c with !a/?b
    ✓ should match !a/!b/c with !a/?b and {dot: true}
    ✓ should match !a/!b/c with !a/?b and {nonegate: true}
    ✓ should match !a/!b/c/d with !a/?b
    ✓ should match !a/!b/c/d with !a/?b and {dot: true}
    ✓ should match !a/!b/c/d with !a/?b and {nonegate: true}
    ✓ should match !a/b/.c.md with !a/?b
    ✓ should match !a/b/.c.md with !a/?b and {dot: true}
    ✓ should match !a/b/.c.md with !a/?b and {nonegate: true}
    ✓ should match /a/ with !a/?b
    ✓ should match /a/ with !a/?b and {dot: true}
    ✓ should match /a/ with !a/?b and {nonegate: true}
    ✓ should match /a/b with !a/?b
    ✓ should match /a/b with !a/?b and {dot: true}
    ✓ should match /a/b with !a/?b and {nonegate: true}
    ✓ should match /a/cb with !a/?b
    ✓ should match /a/cb with !a/?b and {dot: true}
    ✓ should match /a/cb with !a/?b and {nonegate: true}
    ✓ should match /a/bb with !a/?b
    ✓ should match /a/bb with !a/?b and {dot: true}
    ✓ should match /a/bb with !a/?b and {nonegate: true}
    ✓ should match /a/b/c with !a/?b
    ✓ should match /a/b/c with !a/?b and {dot: true}
    ✓ should match /a/b/c with !a/?b and {nonegate: true}
    ✓ should match /a/b/c/ with !a/?b
    ✓ should match /a/b/c/ with !a/?b and {dot: true}
    ✓ should match /a/b/c/ with !a/?b and {nonegate: true}
    ✓ should match /a/b/c/d with !a/?b
    ✓ should match /a/b/c/d with !a/?b and {dot: true}
    ✓ should match /a/b/c/d with !a/?b and {nonegate: true}
    ✓ should match /a/b/c/d/ with !a/?b
    ✓ should match /a/b/c/d/ with !a/?b and {dot: true}
    ✓ should match /a/b/c/d/ with !a/?b and {nonegate: true}
    ✓ should match . with !a/?b
    ✓ should match . with !a/?b and {dot: true}
    ✓ should match . with !a/?b and {nonegate: true}
    ✓ should match ./ with !a/?b
    ✓ should match ./ with !a/?b and {dot: true}
    ✓ should match ./ with !a/?b and {nonegate: true}
    ✓ should match .. with !a/?b
    ✓ should match .. with !a/?b and {dot: true}
    ✓ should match .. with !a/?b and {nonegate: true}
    ✓ should match ../c with !a/?b
    ✓ should match ../c with !a/?b and {dot: true}
    ✓ should match ../c with !a/?b and {nonegate: true}
    ✓ should match ../c with !a/?b
    ✓ should match ../c with !a/?b and {dot: true}
    ✓ should match ../c with !a/?b and {nonegate: true}
    ✓ should match ./../c with !a/?b
    ✓ should match ./../c with !a/?b and {dot: true}
    ✓ should match ./../c with !a/?b and {nonegate: true}
    ✓ should match ./a/../c with !a/?b
    ✓ should match ./a/../c with !a/?b and {dot: true}
    ✓ should match ./a/../c with !a/?b and {nonegate: true}
    ✓ should match /.. with !a/?b
    ✓ should match /.. with !a/?b and {dot: true}
    ✓ should match /.. with !a/?b and {nonegate: true}
    ✓ should match /../c with !a/?b
    ✓ should match /../c with !a/?b and {dot: true}
    ✓ should match /../c with !a/?b and {nonegate: true}
    ✓ should match /../.c with !a/?b
    ✓ should match /../.c with !a/?b and {dot: true}
    ✓ should match /../.c with !a/?b and {nonegate: true}
    ✓ should match /../.c/ with !a/?b
    ✓ should match /../.c/ with !a/?b and {dot: true}
    ✓ should match /../.c/ with !a/?b and {nonegate: true}
    ✓ should match /a/../c with !a/?b
    ✓ should match /a/../c with !a/?b and {dot: true}
    ✓ should match /a/../c with !a/?b and {nonegate: true}
    ✓ should match a/../c with !a/?b
    ✓ should match a/../c with !a/?b and {dot: true}
    ✓ should match a/../c with !a/?b and {nonegate: true}
    ✓ should match ../.b/.c with !a/?b
    ✓ should match ../.b/.c with !a/?b and {dot: true}
    ✓ should match ../.b/.c with !a/?b and {nonegate: true}
    ✓ should match ../b/.c with !a/?b
    ✓ should match ../b/.c with !a/?b and {dot: true}
    ✓ should match ../b/.c with !a/?b and {nonegate: true}
    ✓ should match ./.b/.c with !a/?b
    ✓ should match ./.b/.c with !a/?b and {dot: true}
    ✓ should match ./.b/.c with !a/?b and {nonegate: true}
    ✓ should match ./b/.c with !a/?b
    ✓ should match ./b/.c with !a/?b and {dot: true}
    ✓ should match ./b/.c with !a/?b and {nonegate: true}
    ✓ should match .b with !a/?b
    ✓ should match .b with !a/?b and {dot: true}
    ✓ should match .b with !a/?b and {nonegate: true}
    ✓ should match .b.c with !a/?b
    ✓ should match .b.c with !a/?b and {dot: true}
    ✓ should match .b.c with !a/?b and {nonegate: true}
    ✓ should match .b.c/ with !a/?b
    ✓ should match .b.c/ with !a/?b and {dot: true}
    ✓ should match .b.c/ with !a/?b and {nonegate: true}
    ✓ should match .b/ with !a/?b
    ✓ should match .b/ with !a/?b and {dot: true}
    ✓ should match .b/ with !a/?b and {nonegate: true}
    ✓ should match .b/.c with !a/?b
    ✓ should match .b/.c with !a/?b and {dot: true}
    ✓ should match .b/.c with !a/?b and {nonegate: true}
    ✓ should match .b/c with !a/?b
    ✓ should match .b/c with !a/?b and {dot: true}
    ✓ should match .b/c with !a/?b and {nonegate: true}
    ✓ should match b/.c with !a/?b
    ✓ should match b/.c with !a/?b and {dot: true}
    ✓ should match b/.c with !a/?b and {nonegate: true}
    ✓ should match b/.c/ with !a/?b
    ✓ should match b/.c/ with !a/?b and {dot: true}
    ✓ should match b/.c/ with !a/?b and {nonegate: true}
    ✓ should match a/+b/c with !a/?b
    ✓ should match a/+b/c with !a/?b and {dot: true}
    ✓ should match a/+b/c with !a/?b and {nonegate: true}
    ✓ should match +a/+b/c with !a/?b
    ✓ should match +a/+b/c with !a/?b and {dot: true}
    ✓ should match +a/+b/c with !a/?b and {nonegate: true}
    ✓ should match a (foo) with !a/?b
    ✓ should match a (foo) with !a/?b and {dot: true}
    ✓ should match a (foo) with !a/?b and {nonegate: true}
    ✓ should match a (foo)/(bar) with !a/?b
    ✓ should match a (foo)/(bar) with !a/?b and {dot: true}
    ✓ should match a (foo)/(bar) with !a/?b and {nonegate: true}
    ✓ should match a/b/c (1) with !a/?b
    ✓ should match a/b/c (1) with !a/?b and {dot: true}
    ✓ should match a/b/c (1) with !a/?b and {nonegate: true}
    ✓ should match a/b (2)/c (1) with !a/?b
    ✓ should match a/b (2)/c (1) with !a/?b and {dot: true}
    ✓ should match a/b (2)/c (1) with !a/?b and {nonegate: true}
    ✓ should match a/b/c [def] with !a/?b
    ✓ should match a/b/c [def] with !a/?b and {dot: true}
    ✓ should match a/b/c [def] with !a/?b and {nonegate: true}
    ✓ should match a with !a/b/!*
    ✓ should match a with !a/b/!* and {dot: true}
    ✓ should match a with !a/b/!* and {nonegate: true}
    ✓ should match a.md with !a/b/!*
    ✓ should match a.md with !a/b/!* and {dot: true}
    ✓ should match a.md with !a/b/!* and {nonegate: true}
    ✓ should match a.js with !a/b/!*
    ✓ should match a.js with !a/b/!* and {dot: true}
    ✓ should match a.js with !a/b/!* and {nonegate: true}
    ✓ should match a/ with !a/b/!*
    ✓ should match a/ with !a/b/!* and {dot: true}
    ✓ should match a/ with !a/b/!* and {nonegate: true}
    ✓ should match a/b with !a/b/!*
    ✓ should match a/b with !a/b/!* and {dot: true}
    ✓ should match a/b with !a/b/!* and {nonegate: true}
    ✓ should match a/b/.c.md with !a/b/!*
    ✓ should match a/b/.c.md with !a/b/!* and {dot: true}
    ✓ should match a/b/.c.md with !a/b/!* and {nonegate: true}
    ✓ should match a/b/c with !a/b/!*
    ✓ should match a/b/c with !a/b/!* and {dot: true}
    ✓ should match a/b/c with !a/b/!* and {nonegate: true}
    ✓ should match a/b/c.md with !a/b/!*
    ✓ should match a/b/c.md with !a/b/!* and {dot: true}
    ✓ should match a/b/c.md with !a/b/!* and {nonegate: true}
    ✓ should match a/b/c/ with !a/b/!*
    ✓ should match a/b/c/ with !a/b/!* and {dot: true}
    ✓ should match a/b/c/ with !a/b/!* and {nonegate: true}
    ✓ should match a/b/c/d with !a/b/!*
    ✓ should match a/b/c/d with !a/b/!* and {dot: true}
    ✓ should match a/b/c/d with !a/b/!* and {nonegate: true}
    ✓ should match a/b/c/d/ with !a/b/!*
    ✓ should match a/b/c/d/ with !a/b/!* and {dot: true}
    ✓ should match a/b/c/d/ with !a/b/!* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with !a/b/!*
    ✓ should match a/b/c/d/e/f/z.js with !a/b/!* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with !a/b/!* and {nonegate: true}
    ✓ should match a/b/c/z.js with !a/b/!*
    ✓ should match a/b/c/z.js with !a/b/!* and {dot: true}
    ✓ should match a/b/c/z.js with !a/b/!* and {nonegate: true}
    ✓ should match a/bb with !a/b/!*
    ✓ should match a/bb with !a/b/!* and {dot: true}
    ✓ should match a/bb with !a/b/!* and {nonegate: true}
    ✓ should match a/cb with !a/b/!*
    ✓ should match a/cb with !a/b/!* and {dot: true}
    ✓ should match a/cb with !a/b/!* and {nonegate: true}
    ✓ should match abbbz with !a/b/!*
    ✓ should match abbbz with !a/b/!* and {dot: true}
    ✓ should match abbbz with !a/b/!* and {nonegate: true}
    ✓ should match abc with !a/b/!*
    ✓ should match abc with !a/b/!* and {dot: true}
    ✓ should match abc with !a/b/!* and {nonegate: true}
    ✓ should match abd with !a/b/!*
    ✓ should match abd with !a/b/!* and {dot: true}
    ✓ should match abd with !a/b/!* and {nonegate: true}
    ✓ should match z.js with !a/b/!*
    ✓ should match z.js with !a/b/!* and {dot: true}
    ✓ should match z.js with !a/b/!* and {nonegate: true}
    ✓ should match za.js with !a/b/!*
    ✓ should match za.js with !a/b/!* and {dot: true}
    ✓ should match za.js with !a/b/!* and {nonegate: true}
    ✓ should match !a.js with !a/b/!*
    ✓ should match !a.js with !a/b/!* and {dot: true}
    ✓ should match !a.js with !a/b/!* and {nonegate: true}
    ✓ should match !a/b with !a/b/!*
    ✓ should match !a/b with !a/b/!* and {dot: true}
    ✓ should match !a/b with !a/b/!* and {nonegate: true}
    ✓ should match !a/b/ with !a/b/!*
    ✓ should match !a/b/ with !a/b/!* and {dot: true}
    ✓ should match !a/b/ with !a/b/!* and {nonegate: true}
    ✓ should match !a/b/c with !a/b/!*
    ✓ should match !a/b/c with !a/b/!* and {dot: true}
    ✓ should match !a/b/c with !a/b/!* and {nonegate: true}
    ✓ should match !a/b/c/ with !a/b/!*
    ✓ should match !a/b/c/ with !a/b/!* and {dot: true}
    ✓ should match !a/b/c/ with !a/b/!* and {nonegate: true}
    ✓ should match !a/!b with !a/b/!*
    ✓ should match !a/!b with !a/b/!* and {dot: true}
    ✓ should match !a/!b with !a/b/!* and {nonegate: true}
    ✓ should match !a/!b/c with !a/b/!*
    ✓ should match !a/!b/c with !a/b/!* and {dot: true}
    ✓ should match !a/!b/c with !a/b/!* and {nonegate: true}
    ✓ should match !a/!b/c/d with !a/b/!*
    ✓ should match !a/!b/c/d with !a/b/!* and {dot: true}
    ✓ should match !a/!b/c/d with !a/b/!* and {nonegate: true}
    ✓ should match !a/b/.c.md with !a/b/!*
    ✓ should match !a/b/.c.md with !a/b/!* and {dot: true}
    ✓ should match !a/b/.c.md with !a/b/!* and {nonegate: true}
    ✓ should match /a/ with !a/b/!*
    ✓ should match /a/ with !a/b/!* and {dot: true}
    ✓ should match /a/ with !a/b/!* and {nonegate: true}
    ✓ should match /a/b with !a/b/!*
    ✓ should match /a/b with !a/b/!* and {dot: true}
    ✓ should match /a/b with !a/b/!* and {nonegate: true}
    ✓ should match /a/cb with !a/b/!*
    ✓ should match /a/cb with !a/b/!* and {dot: true}
    ✓ should match /a/cb with !a/b/!* and {nonegate: true}
    ✓ should match /a/bb with !a/b/!*
    ✓ should match /a/bb with !a/b/!* and {dot: true}
    ✓ should match /a/bb with !a/b/!* and {nonegate: true}
    ✓ should match /a/b/c with !a/b/!*
    ✓ should match /a/b/c with !a/b/!* and {dot: true}
    ✓ should match /a/b/c with !a/b/!* and {nonegate: true}
    ✓ should match /a/b/c/ with !a/b/!*
    ✓ should match /a/b/c/ with !a/b/!* and {dot: true}
    ✓ should match /a/b/c/ with !a/b/!* and {nonegate: true}
    ✓ should match /a/b/c/d with !a/b/!*
    ✓ should match /a/b/c/d with !a/b/!* and {dot: true}
    ✓ should match /a/b/c/d with !a/b/!* and {nonegate: true}
    ✓ should match /a/b/c/d/ with !a/b/!*
    ✓ should match /a/b/c/d/ with !a/b/!* and {dot: true}
    ✓ should match /a/b/c/d/ with !a/b/!* and {nonegate: true}
    ✓ should match . with !a/b/!*
    ✓ should match . with !a/b/!* and {dot: true}
    ✓ should match . with !a/b/!* and {nonegate: true}
    ✓ should match ./ with !a/b/!*
    ✓ should match ./ with !a/b/!* and {dot: true}
    ✓ should match ./ with !a/b/!* and {nonegate: true}
    ✓ should match .. with !a/b/!*
    ✓ should match .. with !a/b/!* and {dot: true}
    ✓ should match .. with !a/b/!* and {nonegate: true}
    ✓ should match ../c with !a/b/!*
    ✓ should match ../c with !a/b/!* and {dot: true}
    ✓ should match ../c with !a/b/!* and {nonegate: true}
    ✓ should match ../c with !a/b/!*
    ✓ should match ../c with !a/b/!* and {dot: true}
    ✓ should match ../c with !a/b/!* and {nonegate: true}
    ✓ should match ./../c with !a/b/!*
    ✓ should match ./../c with !a/b/!* and {dot: true}
    ✓ should match ./../c with !a/b/!* and {nonegate: true}
    ✓ should match ./a/../c with !a/b/!*
    ✓ should match ./a/../c with !a/b/!* and {dot: true}
    ✓ should match ./a/../c with !a/b/!* and {nonegate: true}
    ✓ should match /.. with !a/b/!*
    ✓ should match /.. with !a/b/!* and {dot: true}
    ✓ should match /.. with !a/b/!* and {nonegate: true}
    ✓ should match /../c with !a/b/!*
    ✓ should match /../c with !a/b/!* and {dot: true}
    ✓ should match /../c with !a/b/!* and {nonegate: true}
    ✓ should match /../.c with !a/b/!*
    ✓ should match /../.c with !a/b/!* and {dot: true}
    ✓ should match /../.c with !a/b/!* and {nonegate: true}
    ✓ should match /../.c/ with !a/b/!*
    ✓ should match /../.c/ with !a/b/!* and {dot: true}
    ✓ should match /../.c/ with !a/b/!* and {nonegate: true}
    ✓ should match /a/../c with !a/b/!*
    ✓ should match /a/../c with !a/b/!* and {dot: true}
    ✓ should match /a/../c with !a/b/!* and {nonegate: true}
    ✓ should match a/../c with !a/b/!*
    ✓ should match a/../c with !a/b/!* and {dot: true}
    ✓ should match a/../c with !a/b/!* and {nonegate: true}
    ✓ should match ../.b/.c with !a/b/!*
    ✓ should match ../.b/.c with !a/b/!* and {dot: true}
    ✓ should match ../.b/.c with !a/b/!* and {nonegate: true}
    ✓ should match ../b/.c with !a/b/!*
    ✓ should match ../b/.c with !a/b/!* and {dot: true}
    ✓ should match ../b/.c with !a/b/!* and {nonegate: true}
    ✓ should match ./.b/.c with !a/b/!*
    ✓ should match ./.b/.c with !a/b/!* and {dot: true}
    ✓ should match ./.b/.c with !a/b/!* and {nonegate: true}
    ✓ should match ./b/.c with !a/b/!*
    ✓ should match ./b/.c with !a/b/!* and {dot: true}
    ✓ should match ./b/.c with !a/b/!* and {nonegate: true}
    ✓ should match .b with !a/b/!*
    ✓ should match .b with !a/b/!* and {dot: true}
    ✓ should match .b with !a/b/!* and {nonegate: true}
    ✓ should match .b.c with !a/b/!*
    ✓ should match .b.c with !a/b/!* and {dot: true}
    ✓ should match .b.c with !a/b/!* and {nonegate: true}
    ✓ should match .b.c/ with !a/b/!*
    ✓ should match .b.c/ with !a/b/!* and {dot: true}
    ✓ should match .b.c/ with !a/b/!* and {nonegate: true}
    ✓ should match .b/ with !a/b/!*
    ✓ should match .b/ with !a/b/!* and {dot: true}
    ✓ should match .b/ with !a/b/!* and {nonegate: true}
    ✓ should match .b/.c with !a/b/!*
    ✓ should match .b/.c with !a/b/!* and {dot: true}
    ✓ should match .b/.c with !a/b/!* and {nonegate: true}
    ✓ should match .b/c with !a/b/!*
    ✓ should match .b/c with !a/b/!* and {dot: true}
    ✓ should match .b/c with !a/b/!* and {nonegate: true}
    ✓ should match b/.c with !a/b/!*
    ✓ should match b/.c with !a/b/!* and {dot: true}
    ✓ should match b/.c with !a/b/!* and {nonegate: true}
    ✓ should match b/.c/ with !a/b/!*
    ✓ should match b/.c/ with !a/b/!* and {dot: true}
    ✓ should match b/.c/ with !a/b/!* and {nonegate: true}
    ✓ should match a/+b/c with !a/b/!*
    ✓ should match a/+b/c with !a/b/!* and {dot: true}
    ✓ should match a/+b/c with !a/b/!* and {nonegate: true}
    ✓ should match +a/+b/c with !a/b/!*
    ✓ should match +a/+b/c with !a/b/!* and {dot: true}
    ✓ should match +a/+b/c with !a/b/!* and {nonegate: true}
    ✓ should match a (foo) with !a/b/!*
    ✓ should match a (foo) with !a/b/!* and {dot: true}
    ✓ should match a (foo) with !a/b/!* and {nonegate: true}
    ✓ should match a (foo)/(bar) with !a/b/!*
    ✓ should match a (foo)/(bar) with !a/b/!* and {dot: true}
    ✓ should match a (foo)/(bar) with !a/b/!* and {nonegate: true}
    ✓ should match a/b/c (1) with !a/b/!*
    ✓ should match a/b/c (1) with !a/b/!* and {dot: true}
    ✓ should match a/b/c (1) with !a/b/!* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with !a/b/!*
    ✓ should match a/b (2)/c (1) with !a/b/!* and {dot: true}
    ✓ should match a/b (2)/c (1) with !a/b/!* and {nonegate: true}
    ✓ should match a/b/c [def] with !a/b/!*
    ✓ should match a/b/c [def] with !a/b/!* and {dot: true}
    ✓ should match a/b/c [def] with !a/b/!* and {nonegate: true}
    ✓ should match a with !a/b/*
    ✓ should match a with !a/b/* and {dot: true}
    ✓ should match a with !a/b/* and {nonegate: true}
    ✓ should match a.md with !a/b/*
    ✓ should match a.md with !a/b/* and {dot: true}
    ✓ should match a.md with !a/b/* and {nonegate: true}
    ✓ should match a.js with !a/b/*
    ✓ should match a.js with !a/b/* and {dot: true}
    ✓ should match a.js with !a/b/* and {nonegate: true}
    ✓ should match a/ with !a/b/*
    ✓ should match a/ with !a/b/* and {dot: true}
    ✓ should match a/ with !a/b/* and {nonegate: true}
    ✓ should match a/b with !a/b/*
    ✓ should match a/b with !a/b/* and {dot: true}
    ✓ should match a/b with !a/b/* and {nonegate: true}
    ✓ should match a/b/.c.md with !a/b/*
    ✓ should match a/b/.c.md with !a/b/* and {dot: true}
    ✓ should match a/b/.c.md with !a/b/* and {nonegate: true}
    ✓ should match a/b/c with !a/b/*
    ✓ should match a/b/c with !a/b/* and {dot: true}
    ✓ should match a/b/c with !a/b/* and {nonegate: true}
    ✓ should match a/b/c.md with !a/b/*
    ✓ should match a/b/c.md with !a/b/* and {dot: true}
    ✓ should match a/b/c.md with !a/b/* and {nonegate: true}
    ✓ should match a/b/c/ with !a/b/*
    ✓ should match a/b/c/ with !a/b/* and {dot: true}
    ✓ should match a/b/c/ with !a/b/* and {nonegate: true}
    ✓ should match a/b/c/d with !a/b/*
    ✓ should match a/b/c/d with !a/b/* and {dot: true}
    ✓ should match a/b/c/d with !a/b/* and {nonegate: true}
    ✓ should match a/b/c/d/ with !a/b/*
    ✓ should match a/b/c/d/ with !a/b/* and {dot: true}
    ✓ should match a/b/c/d/ with !a/b/* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with !a/b/*
    ✓ should match a/b/c/d/e/f/z.js with !a/b/* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with !a/b/* and {nonegate: true}
    ✓ should match a/b/c/z.js with !a/b/*
    ✓ should match a/b/c/z.js with !a/b/* and {dot: true}
    ✓ should match a/b/c/z.js with !a/b/* and {nonegate: true}
    ✓ should match a/bb with !a/b/*
    ✓ should match a/bb with !a/b/* and {dot: true}
    ✓ should match a/bb with !a/b/* and {nonegate: true}
    ✓ should match a/cb with !a/b/*
    ✓ should match a/cb with !a/b/* and {dot: true}
    ✓ should match a/cb with !a/b/* and {nonegate: true}
    ✓ should match abbbz with !a/b/*
    ✓ should match abbbz with !a/b/* and {dot: true}
    ✓ should match abbbz with !a/b/* and {nonegate: true}
    ✓ should match abc with !a/b/*
    ✓ should match abc with !a/b/* and {dot: true}
    ✓ should match abc with !a/b/* and {nonegate: true}
    ✓ should match abd with !a/b/*
    ✓ should match abd with !a/b/* and {dot: true}
    ✓ should match abd with !a/b/* and {nonegate: true}
    ✓ should match z.js with !a/b/*
    ✓ should match z.js with !a/b/* and {dot: true}
    ✓ should match z.js with !a/b/* and {nonegate: true}
    ✓ should match za.js with !a/b/*
    ✓ should match za.js with !a/b/* and {dot: true}
    ✓ should match za.js with !a/b/* and {nonegate: true}
    ✓ should match !a.js with !a/b/*
    ✓ should match !a.js with !a/b/* and {dot: true}
    ✓ should match !a.js with !a/b/* and {nonegate: true}
    ✓ should match !a/b with !a/b/*
    ✓ should match !a/b with !a/b/* and {dot: true}
    ✓ should match !a/b with !a/b/* and {nonegate: true}
    ✓ should match !a/b/ with !a/b/*
    ✓ should match !a/b/ with !a/b/* and {dot: true}
    ✓ should match !a/b/ with !a/b/* and {nonegate: true}
    ✓ should match !a/b/c with !a/b/*
    ✓ should match !a/b/c with !a/b/* and {dot: true}
    ✓ should match !a/b/c with !a/b/* and {nonegate: true}
    ✓ should match !a/b/c/ with !a/b/*
    ✓ should match !a/b/c/ with !a/b/* and {dot: true}
    ✓ should match !a/b/c/ with !a/b/* and {nonegate: true}
    ✓ should match !a/!b with !a/b/*
    ✓ should match !a/!b with !a/b/* and {dot: true}
    ✓ should match !a/!b with !a/b/* and {nonegate: true}
    ✓ should match !a/!b/c with !a/b/*
    ✓ should match !a/!b/c with !a/b/* and {dot: true}
    ✓ should match !a/!b/c with !a/b/* and {nonegate: true}
    ✓ should match !a/!b/c/d with !a/b/*
    ✓ should match !a/!b/c/d with !a/b/* and {dot: true}
    ✓ should match !a/!b/c/d with !a/b/* and {nonegate: true}
    ✓ should match !a/b/.c.md with !a/b/*
    ✓ should match !a/b/.c.md with !a/b/* and {dot: true}
    ✓ should match !a/b/.c.md with !a/b/* and {nonegate: true}
    ✓ should match /a/ with !a/b/*
    ✓ should match /a/ with !a/b/* and {dot: true}
    ✓ should match /a/ with !a/b/* and {nonegate: true}
    ✓ should match /a/b with !a/b/*
    ✓ should match /a/b with !a/b/* and {dot: true}
    ✓ should match /a/b with !a/b/* and {nonegate: true}
    ✓ should match /a/cb with !a/b/*
    ✓ should match /a/cb with !a/b/* and {dot: true}
    ✓ should match /a/cb with !a/b/* and {nonegate: true}
    ✓ should match /a/bb with !a/b/*
    ✓ should match /a/bb with !a/b/* and {dot: true}
    ✓ should match /a/bb with !a/b/* and {nonegate: true}
    ✓ should match /a/b/c with !a/b/*
    ✓ should match /a/b/c with !a/b/* and {dot: true}
    ✓ should match /a/b/c with !a/b/* and {nonegate: true}
    ✓ should match /a/b/c/ with !a/b/*
    ✓ should match /a/b/c/ with !a/b/* and {dot: true}
    ✓ should match /a/b/c/ with !a/b/* and {nonegate: true}
    ✓ should match /a/b/c/d with !a/b/*
    ✓ should match /a/b/c/d with !a/b/* and {dot: true}
    ✓ should match /a/b/c/d with !a/b/* and {nonegate: true}
    ✓ should match /a/b/c/d/ with !a/b/*
    ✓ should match /a/b/c/d/ with !a/b/* and {dot: true}
    ✓ should match /a/b/c/d/ with !a/b/* and {nonegate: true}
    ✓ should match . with !a/b/*
    ✓ should match . with !a/b/* and {dot: true}
    ✓ should match . with !a/b/* and {nonegate: true}
    ✓ should match ./ with !a/b/*
    ✓ should match ./ with !a/b/* and {dot: true}
    ✓ should match ./ with !a/b/* and {nonegate: true}
    ✓ should match .. with !a/b/*
    ✓ should match .. with !a/b/* and {dot: true}
    ✓ should match .. with !a/b/* and {nonegate: true}
    ✓ should match ../c with !a/b/*
    ✓ should match ../c with !a/b/* and {dot: true}
    ✓ should match ../c with !a/b/* and {nonegate: true}
    ✓ should match ../c with !a/b/*
    ✓ should match ../c with !a/b/* and {dot: true}
    ✓ should match ../c with !a/b/* and {nonegate: true}
    ✓ should match ./../c with !a/b/*
    ✓ should match ./../c with !a/b/* and {dot: true}
    ✓ should match ./../c with !a/b/* and {nonegate: true}
    ✓ should match ./a/../c with !a/b/*
    ✓ should match ./a/../c with !a/b/* and {dot: true}
    ✓ should match ./a/../c with !a/b/* and {nonegate: true}
    ✓ should match /.. with !a/b/*
    ✓ should match /.. with !a/b/* and {dot: true}
    ✓ should match /.. with !a/b/* and {nonegate: true}
    ✓ should match /../c with !a/b/*
    ✓ should match /../c with !a/b/* and {dot: true}
    ✓ should match /../c with !a/b/* and {nonegate: true}
    ✓ should match /../.c with !a/b/*
    ✓ should match /../.c with !a/b/* and {dot: true}
    ✓ should match /../.c with !a/b/* and {nonegate: true}
    ✓ should match /../.c/ with !a/b/*
    ✓ should match /../.c/ with !a/b/* and {dot: true}
    ✓ should match /../.c/ with !a/b/* and {nonegate: true}
    ✓ should match /a/../c with !a/b/*
    ✓ should match /a/../c with !a/b/* and {dot: true}
    ✓ should match /a/../c with !a/b/* and {nonegate: true}
    ✓ should match a/../c with !a/b/*
    ✓ should match a/../c with !a/b/* and {dot: true}
    ✓ should match a/../c with !a/b/* and {nonegate: true}
    ✓ should match ../.b/.c with !a/b/*
    ✓ should match ../.b/.c with !a/b/* and {dot: true}
    ✓ should match ../.b/.c with !a/b/* and {nonegate: true}
    ✓ should match ../b/.c with !a/b/*
    ✓ should match ../b/.c with !a/b/* and {dot: true}
    ✓ should match ../b/.c with !a/b/* and {nonegate: true}
    ✓ should match ./.b/.c with !a/b/*
    ✓ should match ./.b/.c with !a/b/* and {dot: true}
    ✓ should match ./.b/.c with !a/b/* and {nonegate: true}
    ✓ should match ./b/.c with !a/b/*
    ✓ should match ./b/.c with !a/b/* and {dot: true}
    ✓ should match ./b/.c with !a/b/* and {nonegate: true}
    ✓ should match .b with !a/b/*
    ✓ should match .b with !a/b/* and {dot: true}
    ✓ should match .b with !a/b/* and {nonegate: true}
    ✓ should match .b.c with !a/b/*
    ✓ should match .b.c with !a/b/* and {dot: true}
    ✓ should match .b.c with !a/b/* and {nonegate: true}
    ✓ should match .b.c/ with !a/b/*
    ✓ should match .b.c/ with !a/b/* and {dot: true}
    ✓ should match .b.c/ with !a/b/* and {nonegate: true}
    ✓ should match .b/ with !a/b/*
    ✓ should match .b/ with !a/b/* and {dot: true}
    ✓ should match .b/ with !a/b/* and {nonegate: true}
    ✓ should match .b/.c with !a/b/*
    ✓ should match .b/.c with !a/b/* and {dot: true}
    ✓ should match .b/.c with !a/b/* and {nonegate: true}
    ✓ should match .b/c with !a/b/*
    ✓ should match .b/c with !a/b/* and {dot: true}
    ✓ should match .b/c with !a/b/* and {nonegate: true}
    ✓ should match b/.c with !a/b/*
    ✓ should match b/.c with !a/b/* and {dot: true}
    ✓ should match b/.c with !a/b/* and {nonegate: true}
    ✓ should match b/.c/ with !a/b/*
    ✓ should match b/.c/ with !a/b/* and {dot: true}
    ✓ should match b/.c/ with !a/b/* and {nonegate: true}
    ✓ should match a/+b/c with !a/b/*
    ✓ should match a/+b/c with !a/b/* and {dot: true}
    ✓ should match a/+b/c with !a/b/* and {nonegate: true}
    ✓ should match +a/+b/c with !a/b/*
    ✓ should match +a/+b/c with !a/b/* and {dot: true}
    ✓ should match +a/+b/c with !a/b/* and {nonegate: true}
    ✓ should match a (foo) with !a/b/*
    ✓ should match a (foo) with !a/b/* and {dot: true}
    ✓ should match a (foo) with !a/b/* and {nonegate: true}
    ✓ should match a (foo)/(bar) with !a/b/*
    ✓ should match a (foo)/(bar) with !a/b/* and {dot: true}
    ✓ should match a (foo)/(bar) with !a/b/* and {nonegate: true}
    ✓ should match a/b/c (1) with !a/b/*
    ✓ should match a/b/c (1) with !a/b/* and {dot: true}
    ✓ should match a/b/c (1) with !a/b/* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with !a/b/*
    ✓ should match a/b (2)/c (1) with !a/b/* and {dot: true}
    ✓ should match a/b (2)/c (1) with !a/b/* and {nonegate: true}
    ✓ should match a/b/c [def] with !a/b/*
    ✓ should match a/b/c [def] with !a/b/* and {dot: true}
    ✓ should match a/b/c [def] with !a/b/* and {nonegate: true}
    ✓ should match a with !a/b/c*
    ✓ should match a with !a/b/c* and {dot: true}
    ✓ should match a with !a/b/c* and {nonegate: true}
    ✓ should match a.md with !a/b/c*
    ✓ should match a.md with !a/b/c* and {dot: true}
    ✓ should match a.md with !a/b/c* and {nonegate: true}
    ✓ should match a.js with !a/b/c*
    ✓ should match a.js with !a/b/c* and {dot: true}
    ✓ should match a.js with !a/b/c* and {nonegate: true}
    ✓ should match a/ with !a/b/c*
    ✓ should match a/ with !a/b/c* and {dot: true}
    ✓ should match a/ with !a/b/c* and {nonegate: true}
    ✓ should match a/b with !a/b/c*
    ✓ should match a/b with !a/b/c* and {dot: true}
    ✓ should match a/b with !a/b/c* and {nonegate: true}
    ✓ should match a/b/.c.md with !a/b/c*
    ✓ should match a/b/.c.md with !a/b/c* and {dot: true}
    ✓ should match a/b/.c.md with !a/b/c* and {nonegate: true}
    ✓ should match a/b/c with !a/b/c*
    ✓ should match a/b/c with !a/b/c* and {dot: true}
    ✓ should match a/b/c with !a/b/c* and {nonegate: true}
    ✓ should match a/b/c.md with !a/b/c*
    ✓ should match a/b/c.md with !a/b/c* and {dot: true}
    ✓ should match a/b/c.md with !a/b/c* and {nonegate: true}
    ✓ should match a/b/c/ with !a/b/c*
    ✓ should match a/b/c/ with !a/b/c* and {dot: true}
    ✓ should match a/b/c/ with !a/b/c* and {nonegate: true}
    ✓ should match a/b/c/d with !a/b/c*
    ✓ should match a/b/c/d with !a/b/c* and {dot: true}
    ✓ should match a/b/c/d with !a/b/c* and {nonegate: true}
    ✓ should match a/b/c/d/ with !a/b/c*
    ✓ should match a/b/c/d/ with !a/b/c* and {dot: true}
    ✓ should match a/b/c/d/ with !a/b/c* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with !a/b/c*
    ✓ should match a/b/c/d/e/f/z.js with !a/b/c* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with !a/b/c* and {nonegate: true}
    ✓ should match a/b/c/z.js with !a/b/c*
    ✓ should match a/b/c/z.js with !a/b/c* and {dot: true}
    ✓ should match a/b/c/z.js with !a/b/c* and {nonegate: true}
    ✓ should match a/bb with !a/b/c*
    ✓ should match a/bb with !a/b/c* and {dot: true}
    ✓ should match a/bb with !a/b/c* and {nonegate: true}
    ✓ should match a/cb with !a/b/c*
    ✓ should match a/cb with !a/b/c* and {dot: true}
    ✓ should match a/cb with !a/b/c* and {nonegate: true}
    ✓ should match abbbz with !a/b/c*
    ✓ should match abbbz with !a/b/c* and {dot: true}
    ✓ should match abbbz with !a/b/c* and {nonegate: true}
    ✓ should match abc with !a/b/c*
    ✓ should match abc with !a/b/c* and {dot: true}
    ✓ should match abc with !a/b/c* and {nonegate: true}
    ✓ should match abd with !a/b/c*
    ✓ should match abd with !a/b/c* and {dot: true}
    ✓ should match abd with !a/b/c* and {nonegate: true}
    ✓ should match z.js with !a/b/c*
    ✓ should match z.js with !a/b/c* and {dot: true}
    ✓ should match z.js with !a/b/c* and {nonegate: true}
    ✓ should match za.js with !a/b/c*
    ✓ should match za.js with !a/b/c* and {dot: true}
    ✓ should match za.js with !a/b/c* and {nonegate: true}
    ✓ should match !a.js with !a/b/c*
    ✓ should match !a.js with !a/b/c* and {dot: true}
    ✓ should match !a.js with !a/b/c* and {nonegate: true}
    ✓ should match !a/b with !a/b/c*
    ✓ should match !a/b with !a/b/c* and {dot: true}
    ✓ should match !a/b with !a/b/c* and {nonegate: true}
    ✓ should match !a/b/ with !a/b/c*
    ✓ should match !a/b/ with !a/b/c* and {dot: true}
    ✓ should match !a/b/ with !a/b/c* and {nonegate: true}
    ✓ should match !a/b/c with !a/b/c*
    ✓ should match !a/b/c with !a/b/c* and {dot: true}
    ✓ should match !a/b/c with !a/b/c* and {nonegate: true}
    ✓ should match !a/b/c/ with !a/b/c*
    ✓ should match !a/b/c/ with !a/b/c* and {dot: true}
    ✓ should match !a/b/c/ with !a/b/c* and {nonegate: true}
    ✓ should match !a/!b with !a/b/c*
    ✓ should match !a/!b with !a/b/c* and {dot: true}
    ✓ should match !a/!b with !a/b/c* and {nonegate: true}
    ✓ should match !a/!b/c with !a/b/c*
    ✓ should match !a/!b/c with !a/b/c* and {dot: true}
    ✓ should match !a/!b/c with !a/b/c* and {nonegate: true}
    ✓ should match !a/!b/c/d with !a/b/c*
    ✓ should match !a/!b/c/d with !a/b/c* and {dot: true}
    ✓ should match !a/!b/c/d with !a/b/c* and {nonegate: true}
    ✓ should match !a/b/.c.md with !a/b/c*
    ✓ should match !a/b/.c.md with !a/b/c* and {dot: true}
    ✓ should match !a/b/.c.md with !a/b/c* and {nonegate: true}
    ✓ should match /a/ with !a/b/c*
    ✓ should match /a/ with !a/b/c* and {dot: true}
    ✓ should match /a/ with !a/b/c* and {nonegate: true}
    ✓ should match /a/b with !a/b/c*
    ✓ should match /a/b with !a/b/c* and {dot: true}
    ✓ should match /a/b with !a/b/c* and {nonegate: true}
    ✓ should match /a/cb with !a/b/c*
    ✓ should match /a/cb with !a/b/c* and {dot: true}
    ✓ should match /a/cb with !a/b/c* and {nonegate: true}
    ✓ should match /a/bb with !a/b/c*
    ✓ should match /a/bb with !a/b/c* and {dot: true}
    ✓ should match /a/bb with !a/b/c* and {nonegate: true}
    ✓ should match /a/b/c with !a/b/c*
    ✓ should match /a/b/c with !a/b/c* and {dot: true}
    ✓ should match /a/b/c with !a/b/c* and {nonegate: true}
    ✓ should match /a/b/c/ with !a/b/c*
    ✓ should match /a/b/c/ with !a/b/c* and {dot: true}
    ✓ should match /a/b/c/ with !a/b/c* and {nonegate: true}
    ✓ should match /a/b/c/d with !a/b/c*
    ✓ should match /a/b/c/d with !a/b/c* and {dot: true}
    ✓ should match /a/b/c/d with !a/b/c* and {nonegate: true}
    ✓ should match /a/b/c/d/ with !a/b/c*
    ✓ should match /a/b/c/d/ with !a/b/c* and {dot: true}
    ✓ should match /a/b/c/d/ with !a/b/c* and {nonegate: true}
    ✓ should match . with !a/b/c*
    ✓ should match . with !a/b/c* and {dot: true}
    ✓ should match . with !a/b/c* and {nonegate: true}
    ✓ should match ./ with !a/b/c*
    ✓ should match ./ with !a/b/c* and {dot: true}
    ✓ should match ./ with !a/b/c* and {nonegate: true}
    ✓ should match .. with !a/b/c*
    ✓ should match .. with !a/b/c* and {dot: true}
    ✓ should match .. with !a/b/c* and {nonegate: true}
    ✓ should match ../c with !a/b/c*
    ✓ should match ../c with !a/b/c* and {dot: true}
    ✓ should match ../c with !a/b/c* and {nonegate: true}
    ✓ should match ../c with !a/b/c*
    ✓ should match ../c with !a/b/c* and {dot: true}
    ✓ should match ../c with !a/b/c* and {nonegate: true}
    ✓ should match ./../c with !a/b/c*
    ✓ should match ./../c with !a/b/c* and {dot: true}
    ✓ should match ./../c with !a/b/c* and {nonegate: true}
    ✓ should match ./a/../c with !a/b/c*
    ✓ should match ./a/../c with !a/b/c* and {dot: true}
    ✓ should match ./a/../c with !a/b/c* and {nonegate: true}
    ✓ should match /.. with !a/b/c*
    ✓ should match /.. with !a/b/c* and {dot: true}
    ✓ should match /.. with !a/b/c* and {nonegate: true}
    ✓ should match /../c with !a/b/c*
    ✓ should match /../c with !a/b/c* and {dot: true}
    ✓ should match /../c with !a/b/c* and {nonegate: true}
    ✓ should match /../.c with !a/b/c*
    ✓ should match /../.c with !a/b/c* and {dot: true}
    ✓ should match /../.c with !a/b/c* and {nonegate: true}
    ✓ should match /../.c/ with !a/b/c*
    ✓ should match /../.c/ with !a/b/c* and {dot: true}
    ✓ should match /../.c/ with !a/b/c* and {nonegate: true}
    ✓ should match /a/../c with !a/b/c*
    ✓ should match /a/../c with !a/b/c* and {dot: true}
    ✓ should match /a/../c with !a/b/c* and {nonegate: true}
    ✓ should match a/../c with !a/b/c*
    ✓ should match a/../c with !a/b/c* and {dot: true}
    ✓ should match a/../c with !a/b/c* and {nonegate: true}
    ✓ should match ../.b/.c with !a/b/c*
    ✓ should match ../.b/.c with !a/b/c* and {dot: true}
    ✓ should match ../.b/.c with !a/b/c* and {nonegate: true}
    ✓ should match ../b/.c with !a/b/c*
    ✓ should match ../b/.c with !a/b/c* and {dot: true}
    ✓ should match ../b/.c with !a/b/c* and {nonegate: true}
    ✓ should match ./.b/.c with !a/b/c*
    ✓ should match ./.b/.c with !a/b/c* and {dot: true}
    ✓ should match ./.b/.c with !a/b/c* and {nonegate: true}
    ✓ should match ./b/.c with !a/b/c*
    ✓ should match ./b/.c with !a/b/c* and {dot: true}
    ✓ should match ./b/.c with !a/b/c* and {nonegate: true}
    ✓ should match .b with !a/b/c*
    ✓ should match .b with !a/b/c* and {dot: true}
    ✓ should match .b with !a/b/c* and {nonegate: true}
    ✓ should match .b.c with !a/b/c*
    ✓ should match .b.c with !a/b/c* and {dot: true}
    ✓ should match .b.c with !a/b/c* and {nonegate: true}
    ✓ should match .b.c/ with !a/b/c*
    ✓ should match .b.c/ with !a/b/c* and {dot: true}
    ✓ should match .b.c/ with !a/b/c* and {nonegate: true}
    ✓ should match .b/ with !a/b/c*
    ✓ should match .b/ with !a/b/c* and {dot: true}
    ✓ should match .b/ with !a/b/c* and {nonegate: true}
    ✓ should match .b/.c with !a/b/c*
    ✓ should match .b/.c with !a/b/c* and {dot: true}
    ✓ should match .b/.c with !a/b/c* and {nonegate: true}
    ✓ should match .b/c with !a/b/c*
    ✓ should match .b/c with !a/b/c* and {dot: true}
    ✓ should match .b/c with !a/b/c* and {nonegate: true}
    ✓ should match b/.c with !a/b/c*
    ✓ should match b/.c with !a/b/c* and {dot: true}
    ✓ should match b/.c with !a/b/c* and {nonegate: true}
    ✓ should match b/.c/ with !a/b/c*
    ✓ should match b/.c/ with !a/b/c* and {dot: true}
    ✓ should match b/.c/ with !a/b/c* and {nonegate: true}
    ✓ should match a/+b/c with !a/b/c*
    ✓ should match a/+b/c with !a/b/c* and {dot: true}
    ✓ should match a/+b/c with !a/b/c* and {nonegate: true}
    ✓ should match +a/+b/c with !a/b/c*
    ✓ should match +a/+b/c with !a/b/c* and {dot: true}
    ✓ should match +a/+b/c with !a/b/c* and {nonegate: true}
    ✓ should match a (foo) with !a/b/c*
    ✓ should match a (foo) with !a/b/c* and {dot: true}
    ✓ should match a (foo) with !a/b/c* and {nonegate: true}
    ✓ should match a (foo)/(bar) with !a/b/c*
    ✓ should match a (foo)/(bar) with !a/b/c* and {dot: true}
    ✓ should match a (foo)/(bar) with !a/b/c* and {nonegate: true}
    ✓ should match a/b/c (1) with !a/b/c*
    ✓ should match a/b/c (1) with !a/b/c* and {dot: true}
    ✓ should match a/b/c (1) with !a/b/c* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with !a/b/c*
    ✓ should match a/b (2)/c (1) with !a/b/c* and {dot: true}
    ✓ should match a/b (2)/c (1) with !a/b/c* and {nonegate: true}
    ✓ should match a/b/c [def] with !a/b/c*
    ✓ should match a/b/c [def] with !a/b/c* and {dot: true}
    ✓ should match a/b/c [def] with !a/b/c* and {nonegate: true}
    ✓ should match a with *
    ✓ should match a with * and {dot: true}
    ✓ should match a with * and {nonegate: true}
    ✓ should match a.md with *
    ✓ should match a.md with * and {dot: true}
    ✓ should match a.md with * and {nonegate: true}
    ✓ should match a.js with *
    ✓ should match a.js with * and {dot: true}
    ✓ should match a.js with * and {nonegate: true}
    ✓ should match a/ with *
    ✓ should match a/ with * and {dot: true}
    ✓ should match a/ with * and {nonegate: true}
    ✓ should match a/b with *
    ✓ should match a/b with * and {dot: true}
    ✓ should match a/b with * and {nonegate: true}
    ✓ should match a/b/.c.md with *
    ✓ should match a/b/.c.md with * and {dot: true}
    ✓ should match a/b/.c.md with * and {nonegate: true}
    ✓ should match a/b/c with *
    ✓ should match a/b/c with * and {dot: true}
    ✓ should match a/b/c with * and {nonegate: true}
    ✓ should match a/b/c.md with *
    ✓ should match a/b/c.md with * and {dot: true}
    ✓ should match a/b/c.md with * and {nonegate: true}
    ✓ should match a/b/c/ with *
    ✓ should match a/b/c/ with * and {dot: true}
    ✓ should match a/b/c/ with * and {nonegate: true}
    ✓ should match a/b/c/d with *
    ✓ should match a/b/c/d with * and {dot: true}
    ✓ should match a/b/c/d with * and {nonegate: true}
    ✓ should match a/b/c/d/ with *
    ✓ should match a/b/c/d/ with * and {dot: true}
    ✓ should match a/b/c/d/ with * and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with *
    ✓ should match a/b/c/d/e/f/z.js with * and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with * and {nonegate: true}
    ✓ should match a/b/c/z.js with *
    ✓ should match a/b/c/z.js with * and {dot: true}
    ✓ should match a/b/c/z.js with * and {nonegate: true}
    ✓ should match a/bb with *
    ✓ should match a/bb with * and {dot: true}
    ✓ should match a/bb with * and {nonegate: true}
    ✓ should match a/cb with *
    ✓ should match a/cb with * and {dot: true}
    ✓ should match a/cb with * and {nonegate: true}
    ✓ should match abbbz with *
    ✓ should match abbbz with * and {dot: true}
    ✓ should match abbbz with * and {nonegate: true}
    ✓ should match abc with *
    ✓ should match abc with * and {dot: true}
    ✓ should match abc with * and {nonegate: true}
    ✓ should match abd with *
    ✓ should match abd with * and {dot: true}
    ✓ should match abd with * and {nonegate: true}
    ✓ should match z.js with *
    ✓ should match z.js with * and {dot: true}
    ✓ should match z.js with * and {nonegate: true}
    ✓ should match za.js with *
    ✓ should match za.js with * and {dot: true}
    ✓ should match za.js with * and {nonegate: true}
    ✓ should match !a.js with *
    ✓ should match !a.js with * and {dot: true}
    ✓ should match !a.js with * and {nonegate: true}
    ✓ should match !a/b with *
    ✓ should match !a/b with * and {dot: true}
    ✓ should match !a/b with * and {nonegate: true}
    ✓ should match !a/b/ with *
    ✓ should match !a/b/ with * and {dot: true}
    ✓ should match !a/b/ with * and {nonegate: true}
    ✓ should match !a/b/c with *
    ✓ should match !a/b/c with * and {dot: true}
    ✓ should match !a/b/c with * and {nonegate: true}
    ✓ should match !a/b/c/ with *
    ✓ should match !a/b/c/ with * and {dot: true}
    ✓ should match !a/b/c/ with * and {nonegate: true}
    ✓ should match !a/!b with *
    ✓ should match !a/!b with * and {dot: true}
    ✓ should match !a/!b with * and {nonegate: true}
    ✓ should match !a/!b/c with *
    ✓ should match !a/!b/c with * and {dot: true}
    ✓ should match !a/!b/c with * and {nonegate: true}
    ✓ should match !a/!b/c/d with *
    ✓ should match !a/!b/c/d with * and {dot: true}
    ✓ should match !a/!b/c/d with * and {nonegate: true}
    ✓ should match !a/b/.c.md with *
    ✓ should match !a/b/.c.md with * and {dot: true}
    ✓ should match !a/b/.c.md with * and {nonegate: true}
    ✓ should match /a/ with *
    ✓ should match /a/ with * and {dot: true}
    ✓ should match /a/ with * and {nonegate: true}
    ✓ should match /a/b with *
    ✓ should match /a/b with * and {dot: true}
    ✓ should match /a/b with * and {nonegate: true}
    ✓ should match /a/cb with *
    ✓ should match /a/cb with * and {dot: true}
    ✓ should match /a/cb with * and {nonegate: true}
    ✓ should match /a/bb with *
    ✓ should match /a/bb with * and {dot: true}
    ✓ should match /a/bb with * and {nonegate: true}
    ✓ should match /a/b/c with *
    ✓ should match /a/b/c with * and {dot: true}
    ✓ should match /a/b/c with * and {nonegate: true}
    ✓ should match /a/b/c/ with *
    ✓ should match /a/b/c/ with * and {dot: true}
    ✓ should match /a/b/c/ with * and {nonegate: true}
    ✓ should match /a/b/c/d with *
    ✓ should match /a/b/c/d with * and {dot: true}
    ✓ should match /a/b/c/d with * and {nonegate: true}
    ✓ should match /a/b/c/d/ with *
    ✓ should match /a/b/c/d/ with * and {dot: true}
    ✓ should match /a/b/c/d/ with * and {nonegate: true}
    ✓ should match . with *
    ✓ should match . with * and {dot: true}
    ✓ should match . with * and {nonegate: true}
    ✓ should match ./ with *
    ✓ should match ./ with * and {dot: true}
    ✓ should match ./ with * and {nonegate: true}
    ✓ should match .. with *
    ✓ should match .. with * and {dot: true}
    ✓ should match .. with * and {nonegate: true}
    ✓ should match ../c with *
    ✓ should match ../c with * and {dot: true}
    ✓ should match ../c with * and {nonegate: true}
    ✓ should match ../c with *
    ✓ should match ../c with * and {dot: true}
    ✓ should match ../c with * and {nonegate: true}
    ✓ should match ./../c with *
    ✓ should match ./../c with * and {dot: true}
    ✓ should match ./../c with * and {nonegate: true}
    ✓ should match ./a/../c with *
    ✓ should match ./a/../c with * and {dot: true}
    ✓ should match ./a/../c with * and {nonegate: true}
    ✓ should match /.. with *
    ✓ should match /.. with * and {dot: true}
    ✓ should match /.. with * and {nonegate: true}
    ✓ should match /../c with *
    ✓ should match /../c with * and {dot: true}
    ✓ should match /../c with * and {nonegate: true}
    ✓ should match /../.c with *
    ✓ should match /../.c with * and {dot: true}
    ✓ should match /../.c with * and {nonegate: true}
    ✓ should match /../.c/ with *
    ✓ should match /../.c/ with * and {dot: true}
    ✓ should match /../.c/ with * and {nonegate: true}
    ✓ should match /a/../c with *
    ✓ should match /a/../c with * and {dot: true}
    ✓ should match /a/../c with * and {nonegate: true}
    ✓ should match a/../c with *
    ✓ should match a/../c with * and {dot: true}
    ✓ should match a/../c with * and {nonegate: true}
    ✓ should match ../.b/.c with *
    ✓ should match ../.b/.c with * and {dot: true}
    ✓ should match ../.b/.c with * and {nonegate: true}
    ✓ should match ../b/.c with *
    ✓ should match ../b/.c with * and {dot: true}
    ✓ should match ../b/.c with * and {nonegate: true}
    ✓ should match ./.b/.c with *
    ✓ should match ./.b/.c with * and {dot: true}
    ✓ should match ./.b/.c with * and {nonegate: true}
    ✓ should match ./b/.c with *
    ✓ should match ./b/.c with * and {dot: true}
    ✓ should match ./b/.c with * and {nonegate: true}
    ✓ should match .b with *
    ✓ should match .b with * and {dot: true}
    ✓ should match .b with * and {nonegate: true}
    ✓ should match .b.c with *
    ✓ should match .b.c with * and {dot: true}
    ✓ should match .b.c with * and {nonegate: true}
    ✓ should match .b.c/ with *
    ✓ should match .b.c/ with * and {dot: true}
    ✓ should match .b.c/ with * and {nonegate: true}
    ✓ should match .b/ with *
    ✓ should match .b/ with * and {dot: true}
    ✓ should match .b/ with * and {nonegate: true}
    ✓ should match .b/.c with *
    ✓ should match .b/.c with * and {dot: true}
    ✓ should match .b/.c with * and {nonegate: true}
    ✓ should match .b/c with *
    ✓ should match .b/c with * and {dot: true}
    ✓ should match .b/c with * and {nonegate: true}
    ✓ should match b/.c with *
    ✓ should match b/.c with * and {dot: true}
    ✓ should match b/.c with * and {nonegate: true}
    ✓ should match b/.c/ with *
    ✓ should match b/.c/ with * and {dot: true}
    ✓ should match b/.c/ with * and {nonegate: true}
    ✓ should match a/+b/c with *
    ✓ should match a/+b/c with * and {dot: true}
    ✓ should match a/+b/c with * and {nonegate: true}
    ✓ should match +a/+b/c with *
    ✓ should match +a/+b/c with * and {dot: true}
    ✓ should match +a/+b/c with * and {nonegate: true}
    ✓ should match a (foo) with *
    ✓ should match a (foo) with * and {dot: true}
    ✓ should match a (foo) with * and {nonegate: true}
    ✓ should match a (foo)/(bar) with *
    ✓ should match a (foo)/(bar) with * and {dot: true}
    ✓ should match a (foo)/(bar) with * and {nonegate: true}
    ✓ should match a/b/c (1) with *
    ✓ should match a/b/c (1) with * and {dot: true}
    ✓ should match a/b/c (1) with * and {nonegate: true}
    ✓ should match a/b (2)/c (1) with *
    ✓ should match a/b (2)/c (1) with * and {dot: true}
    ✓ should match a/b (2)/c (1) with * and {nonegate: true}
    ✓ should match a/b/c [def] with *
    ✓ should match a/b/c [def] with * and {dot: true}
    ✓ should match a/b/c [def] with * and {nonegate: true}
    ✓ should match a with **
    ✓ should match a with ** and {dot: true}
    ✓ should match a with ** and {nonegate: true}
    ✓ should match a.md with **
    ✓ should match a.md with ** and {dot: true}
    ✓ should match a.md with ** and {nonegate: true}
    ✓ should match a.js with **
    ✓ should match a.js with ** and {dot: true}
    ✓ should match a.js with ** and {nonegate: true}
    ✓ should match a/ with **
    ✓ should match a/ with ** and {dot: true}
    ✓ should match a/ with ** and {nonegate: true}
    ✓ should match a/b with **
    ✓ should match a/b with ** and {dot: true}
    ✓ should match a/b with ** and {nonegate: true}
    ✓ should match a/b/.c.md with **
    ✓ should match a/b/.c.md with ** and {dot: true}
    ✓ should match a/b/.c.md with ** and {nonegate: true}
    ✓ should match a/b/c with **
    ✓ should match a/b/c with ** and {dot: true}
    ✓ should match a/b/c with ** and {nonegate: true}
    ✓ should match a/b/c.md with **
    ✓ should match a/b/c.md with ** and {dot: true}
    ✓ should match a/b/c.md with ** and {nonegate: true}
    ✓ should match a/b/c/ with **
    ✓ should match a/b/c/ with ** and {dot: true}
    ✓ should match a/b/c/ with ** and {nonegate: true}
    ✓ should match a/b/c/d with **
    ✓ should match a/b/c/d with ** and {dot: true}
    ✓ should match a/b/c/d with ** and {nonegate: true}
    ✓ should match a/b/c/d/ with **
    ✓ should match a/b/c/d/ with ** and {dot: true}
    ✓ should match a/b/c/d/ with ** and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with **
    ✓ should match a/b/c/d/e/f/z.js with ** and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with ** and {nonegate: true}
    ✓ should match a/b/c/z.js with **
    ✓ should match a/b/c/z.js with ** and {dot: true}
    ✓ should match a/b/c/z.js with ** and {nonegate: true}
    ✓ should match a/bb with **
    ✓ should match a/bb with ** and {dot: true}
    ✓ should match a/bb with ** and {nonegate: true}
    ✓ should match a/cb with **
    ✓ should match a/cb with ** and {dot: true}
    ✓ should match a/cb with ** and {nonegate: true}
    ✓ should match abbbz with **
    ✓ should match abbbz with ** and {dot: true}
    ✓ should match abbbz with ** and {nonegate: true}
    ✓ should match abc with **
    ✓ should match abc with ** and {dot: true}
    ✓ should match abc with ** and {nonegate: true}
    ✓ should match abd with **
    ✓ should match abd with ** and {dot: true}
    ✓ should match abd with ** and {nonegate: true}
    ✓ should match z.js with **
    ✓ should match z.js with ** and {dot: true}
    ✓ should match z.js with ** and {nonegate: true}
    ✓ should match za.js with **
    ✓ should match za.js with ** and {dot: true}
    ✓ should match za.js with ** and {nonegate: true}
    ✓ should match !a.js with **
    ✓ should match !a.js with ** and {dot: true}
    ✓ should match !a.js with ** and {nonegate: true}
    ✓ should match !a/b with **
    ✓ should match !a/b with ** and {dot: true}
    ✓ should match !a/b with ** and {nonegate: true}
    ✓ should match !a/b/ with **
    ✓ should match !a/b/ with ** and {dot: true}
    ✓ should match !a/b/ with ** and {nonegate: true}
    ✓ should match !a/b/c with **
    ✓ should match !a/b/c with ** and {dot: true}
    ✓ should match !a/b/c with ** and {nonegate: true}
    ✓ should match !a/b/c/ with **
    ✓ should match !a/b/c/ with ** and {dot: true}
    ✓ should match !a/b/c/ with ** and {nonegate: true}
    ✓ should match !a/!b with **
    ✓ should match !a/!b with ** and {dot: true}
    ✓ should match !a/!b with ** and {nonegate: true}
    ✓ should match !a/!b/c with **
    ✓ should match !a/!b/c with ** and {dot: true}
    ✓ should match !a/!b/c with ** and {nonegate: true}
    ✓ should match !a/!b/c/d with **
    ✓ should match !a/!b/c/d with ** and {dot: true}
    ✓ should match !a/!b/c/d with ** and {nonegate: true}
    ✓ should match !a/b/.c.md with **
    ✓ should match !a/b/.c.md with ** and {dot: true}
    ✓ should match !a/b/.c.md with ** and {nonegate: true}
    ✓ should match /a/ with **
    ✓ should match /a/ with ** and {dot: true}
    ✓ should match /a/ with ** and {nonegate: true}
    ✓ should match /a/b with **
    ✓ should match /a/b with ** and {dot: true}
    ✓ should match /a/b with ** and {nonegate: true}
    ✓ should match /a/cb with **
    ✓ should match /a/cb with ** and {dot: true}
    ✓ should match /a/cb with ** and {nonegate: true}
    ✓ should match /a/bb with **
    ✓ should match /a/bb with ** and {dot: true}
    ✓ should match /a/bb with ** and {nonegate: true}
    ✓ should match /a/b/c with **
    ✓ should match /a/b/c with ** and {dot: true}
    ✓ should match /a/b/c with ** and {nonegate: true}
    ✓ should match /a/b/c/ with **
    ✓ should match /a/b/c/ with ** and {dot: true}
    ✓ should match /a/b/c/ with ** and {nonegate: true}
    ✓ should match /a/b/c/d with **
    ✓ should match /a/b/c/d with ** and {dot: true}
    ✓ should match /a/b/c/d with ** and {nonegate: true}
    ✓ should match /a/b/c/d/ with **
    ✓ should match /a/b/c/d/ with ** and {dot: true}
    ✓ should match /a/b/c/d/ with ** and {nonegate: true}
    ✓ should match . with **
    ✓ should match . with ** and {dot: true}
    ✓ should match . with ** and {nonegate: true}
    ✓ should match ./ with **
    ✓ should match ./ with ** and {dot: true}
    ✓ should match ./ with ** and {nonegate: true}
    ✓ should match .. with **
    ✓ should match .. with ** and {dot: true}
    ✓ should match .. with ** and {nonegate: true}
    ✓ should match ../c with **
    ✓ should match ../c with ** and {dot: true}
    ✓ should match ../c with ** and {nonegate: true}
    ✓ should match ../c with **
    ✓ should match ../c with ** and {dot: true}
    ✓ should match ../c with ** and {nonegate: true}
    ✓ should match ./../c with **
    ✓ should match ./../c with ** and {dot: true}
    ✓ should match ./../c with ** and {nonegate: true}
    ✓ should match ./a/../c with **
    ✓ should match ./a/../c with ** and {dot: true}
    ✓ should match ./a/../c with ** and {nonegate: true}
    ✓ should match /.. with **
    ✓ should match /.. with ** and {dot: true}
    ✓ should match /.. with ** and {nonegate: true}
    ✓ should match /../c with **
    ✓ should match /../c with ** and {dot: true}
    ✓ should match /../c with ** and {nonegate: true}
    ✓ should match /../.c with **
    ✓ should match /../.c with ** and {dot: true}
    ✓ should match /../.c with ** and {nonegate: true}
    ✓ should match /../.c/ with **
    ✓ should match /../.c/ with ** and {dot: true}
    ✓ should match /../.c/ with ** and {nonegate: true}
    ✓ should match /a/../c with **
    ✓ should match /a/../c with ** and {dot: true}
    ✓ should match /a/../c with ** and {nonegate: true}
    ✓ should match a/../c with **
    ✓ should match a/../c with ** and {dot: true}
    ✓ should match a/../c with ** and {nonegate: true}
    ✓ should match ../.b/.c with **
    ✓ should match ../.b/.c with ** and {dot: true}
    ✓ should match ../.b/.c with ** and {nonegate: true}
    ✓ should match ../b/.c with **
    ✓ should match ../b/.c with ** and {dot: true}
    ✓ should match ../b/.c with ** and {nonegate: true}
    ✓ should match ./.b/.c with **
    ✓ should match ./.b/.c with ** and {dot: true}
    ✓ should match ./.b/.c with ** and {nonegate: true}
    ✓ should match ./b/.c with **
    ✓ should match ./b/.c with ** and {dot: true}
    ✓ should match ./b/.c with ** and {nonegate: true}
    ✓ should match .b with **
    ✓ should match .b with ** and {dot: true}
    ✓ should match .b with ** and {nonegate: true}
    ✓ should match .b.c with **
    ✓ should match .b.c with ** and {dot: true}
    ✓ should match .b.c with ** and {nonegate: true}
    ✓ should match .b.c/ with **
    ✓ should match .b.c/ with ** and {dot: true}
    ✓ should match .b.c/ with ** and {nonegate: true}
    ✓ should match .b/ with **
    ✓ should match .b/ with ** and {dot: true}
    ✓ should match .b/ with ** and {nonegate: true}
    ✓ should match .b/.c with **
    ✓ should match .b/.c with ** and {dot: true}
    ✓ should match .b/.c with ** and {nonegate: true}
    ✓ should match .b/c with **
    ✓ should match .b/c with ** and {dot: true}
    ✓ should match .b/c with ** and {nonegate: true}
    ✓ should match b/.c with **
    ✓ should match b/.c with ** and {dot: true}
    ✓ should match b/.c with ** and {nonegate: true}
    ✓ should match b/.c/ with **
    ✓ should match b/.c/ with ** and {dot: true}
    ✓ should match b/.c/ with ** and {nonegate: true}
    ✓ should match a/+b/c with **
    ✓ should match a/+b/c with ** and {dot: true}
    ✓ should match a/+b/c with ** and {nonegate: true}
    ✓ should match +a/+b/c with **
    ✓ should match +a/+b/c with ** and {dot: true}
    ✓ should match +a/+b/c with ** and {nonegate: true}
    ✓ should match a (foo) with **
    ✓ should match a (foo) with ** and {dot: true}
    ✓ should match a (foo) with ** and {nonegate: true}
    ✓ should match a (foo)/(bar) with **
    ✓ should match a (foo)/(bar) with ** and {dot: true}
    ✓ should match a (foo)/(bar) with ** and {nonegate: true}
    ✓ should match a/b/c (1) with **
    ✓ should match a/b/c (1) with ** and {dot: true}
    ✓ should match a/b/c (1) with ** and {nonegate: true}
    ✓ should match a/b (2)/c (1) with **
    ✓ should match a/b (2)/c (1) with ** and {dot: true}
    ✓ should match a/b (2)/c (1) with ** and {nonegate: true}
    ✓ should match a/b/c [def] with **
    ✓ should match a/b/c [def] with ** and {dot: true}
    ✓ should match a/b/c [def] with ** and {nonegate: true}
    ✓ should match a with ***
    ✓ should match a with *** and {dot: true}
    ✓ should match a with *** and {nonegate: true}
    ✓ should match a.md with ***
    ✓ should match a.md with *** and {dot: true}
    ✓ should match a.md with *** and {nonegate: true}
    ✓ should match a.js with ***
    ✓ should match a.js with *** and {dot: true}
    ✓ should match a.js with *** and {nonegate: true}
    ✓ should match a/ with ***
    ✓ should match a/ with *** and {dot: true}
    ✓ should match a/ with *** and {nonegate: true}
    ✓ should match a/b with ***
    ✓ should match a/b with *** and {dot: true}
    ✓ should match a/b with *** and {nonegate: true}
    ✓ should match a/b/.c.md with ***
    ✓ should match a/b/.c.md with *** and {dot: true}
    ✓ should match a/b/.c.md with *** and {nonegate: true}
    ✓ should match a/b/c with ***
    ✓ should match a/b/c with *** and {dot: true}
    ✓ should match a/b/c with *** and {nonegate: true}
    ✓ should match a/b/c.md with ***
    ✓ should match a/b/c.md with *** and {dot: true}
    ✓ should match a/b/c.md with *** and {nonegate: true}
    ✓ should match a/b/c/ with ***
    ✓ should match a/b/c/ with *** and {dot: true}
    ✓ should match a/b/c/ with *** and {nonegate: true}
    ✓ should match a/b/c/d with ***
    ✓ should match a/b/c/d with *** and {dot: true}
    ✓ should match a/b/c/d with *** and {nonegate: true}
    ✓ should match a/b/c/d/ with ***
    ✓ should match a/b/c/d/ with *** and {dot: true}
    ✓ should match a/b/c/d/ with *** and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with ***
    ✓ should match a/b/c/d/e/f/z.js with *** and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with *** and {nonegate: true}
    ✓ should match a/b/c/z.js with ***
    ✓ should match a/b/c/z.js with *** and {dot: true}
    ✓ should match a/b/c/z.js with *** and {nonegate: true}
    ✓ should match a/bb with ***
    ✓ should match a/bb with *** and {dot: true}
    ✓ should match a/bb with *** and {nonegate: true}
    ✓ should match a/cb with ***
    ✓ should match a/cb with *** and {dot: true}
    ✓ should match a/cb with *** and {nonegate: true}
    ✓ should match abbbz with ***
    ✓ should match abbbz with *** and {dot: true}
    ✓ should match abbbz with *** and {nonegate: true}
    ✓ should match abc with ***
    ✓ should match abc with *** and {dot: true}
    ✓ should match abc with *** and {nonegate: true}
    ✓ should match abd with ***
    ✓ should match abd with *** and {dot: true}
    ✓ should match abd with *** and {nonegate: true}
    ✓ should match z.js with ***
    ✓ should match z.js with *** and {dot: true}
    ✓ should match z.js with *** and {nonegate: true}
    ✓ should match za.js with ***
    ✓ should match za.js with *** and {dot: true}
    ✓ should match za.js with *** and {nonegate: true}
    ✓ should match !a.js with ***
    ✓ should match !a.js with *** and {dot: true}
    ✓ should match !a.js with *** and {nonegate: true}
    ✓ should match !a/b with ***
    ✓ should match !a/b with *** and {dot: true}
    ✓ should match !a/b with *** and {nonegate: true}
    ✓ should match !a/b/ with ***
    ✓ should match !a/b/ with *** and {dot: true}
    ✓ should match !a/b/ with *** and {nonegate: true}
    ✓ should match !a/b/c with ***
    ✓ should match !a/b/c with *** and {dot: true}
    ✓ should match !a/b/c with *** and {nonegate: true}
    ✓ should match !a/b/c/ with ***
    ✓ should match !a/b/c/ with *** and {dot: true}
    ✓ should match !a/b/c/ with *** and {nonegate: true}
    ✓ should match !a/!b with ***
    ✓ should match !a/!b with *** and {dot: true}
    ✓ should match !a/!b with *** and {nonegate: true}
    ✓ should match !a/!b/c with ***
    ✓ should match !a/!b/c with *** and {dot: true}
    ✓ should match !a/!b/c with *** and {nonegate: true}
    ✓ should match !a/!b/c/d with ***
    ✓ should match !a/!b/c/d with *** and {dot: true}
    ✓ should match !a/!b/c/d with *** and {nonegate: true}
    ✓ should match !a/b/.c.md with ***
    ✓ should match !a/b/.c.md with *** and {dot: true}
    ✓ should match !a/b/.c.md with *** and {nonegate: true}
    ✓ should match /a/ with ***
    ✓ should match /a/ with *** and {dot: true}
    ✓ should match /a/ with *** and {nonegate: true}
    ✓ should match /a/b with ***
    ✓ should match /a/b with *** and {dot: true}
    ✓ should match /a/b with *** and {nonegate: true}
    ✓ should match /a/cb with ***
    ✓ should match /a/cb with *** and {dot: true}
    ✓ should match /a/cb with *** and {nonegate: true}
    ✓ should match /a/bb with ***
    ✓ should match /a/bb with *** and {dot: true}
    ✓ should match /a/bb with *** and {nonegate: true}
    ✓ should match /a/b/c with ***
    ✓ should match /a/b/c with *** and {dot: true}
    ✓ should match /a/b/c with *** and {nonegate: true}
    ✓ should match /a/b/c/ with ***
    ✓ should match /a/b/c/ with *** and {dot: true}
    ✓ should match /a/b/c/ with *** and {nonegate: true}
    ✓ should match /a/b/c/d with ***
    ✓ should match /a/b/c/d with *** and {dot: true}
    ✓ should match /a/b/c/d with *** and {nonegate: true}
    ✓ should match /a/b/c/d/ with ***
    ✓ should match /a/b/c/d/ with *** and {dot: true}
    ✓ should match /a/b/c/d/ with *** and {nonegate: true}
    ✓ should match . with ***
    ✓ should match . with *** and {dot: true}
    ✓ should match . with *** and {nonegate: true}
    ✓ should match ./ with ***
    ✓ should match ./ with *** and {dot: true}
    ✓ should match ./ with *** and {nonegate: true}
    ✓ should match .. with ***
    ✓ should match .. with *** and {dot: true}
    ✓ should match .. with *** and {nonegate: true}
    ✓ should match ../c with ***
    ✓ should match ../c with *** and {dot: true}
    ✓ should match ../c with *** and {nonegate: true}
    ✓ should match ../c with ***
    ✓ should match ../c with *** and {dot: true}
    ✓ should match ../c with *** and {nonegate: true}
    ✓ should match ./../c with ***
    ✓ should match ./../c with *** and {dot: true}
    ✓ should match ./../c with *** and {nonegate: true}
    ✓ should match ./a/../c with ***
    ✓ should match ./a/../c with *** and {dot: true}
    ✓ should match ./a/../c with *** and {nonegate: true}
    ✓ should match /.. with ***
    ✓ should match /.. with *** and {dot: true}
    ✓ should match /.. with *** and {nonegate: true}
    ✓ should match /../c with ***
    ✓ should match /../c with *** and {dot: true}
    ✓ should match /../c with *** and {nonegate: true}
    ✓ should match /../.c with ***
    ✓ should match /../.c with *** and {dot: true}
    ✓ should match /../.c with *** and {nonegate: true}
    ✓ should match /../.c/ with ***
    ✓ should match /../.c/ with *** and {dot: true}
    ✓ should match /../.c/ with *** and {nonegate: true}
    ✓ should match /a/../c with ***
    ✓ should match /a/../c with *** and {dot: true}
    ✓ should match /a/../c with *** and {nonegate: true}
    ✓ should match a/../c with ***
    ✓ should match a/../c with *** and {dot: true}
    ✓ should match a/../c with *** and {nonegate: true}
    ✓ should match ../.b/.c with ***
    ✓ should match ../.b/.c with *** and {dot: true}
    ✓ should match ../.b/.c with *** and {nonegate: true}
    ✓ should match ../b/.c with ***
    ✓ should match ../b/.c with *** and {dot: true}
    ✓ should match ../b/.c with *** and {nonegate: true}
    ✓ should match ./.b/.c with ***
    ✓ should match ./.b/.c with *** and {dot: true}
    ✓ should match ./.b/.c with *** and {nonegate: true}
    ✓ should match ./b/.c with ***
    ✓ should match ./b/.c with *** and {dot: true}
    ✓ should match ./b/.c with *** and {nonegate: true}
    ✓ should match .b with ***
    ✓ should match .b with *** and {dot: true}
    ✓ should match .b with *** and {nonegate: true}
    ✓ should match .b.c with ***
    ✓ should match .b.c with *** and {dot: true}
    ✓ should match .b.c with *** and {nonegate: true}
    ✓ should match .b.c/ with ***
    ✓ should match .b.c/ with *** and {dot: true}
    ✓ should match .b.c/ with *** and {nonegate: true}
    ✓ should match .b/ with ***
    ✓ should match .b/ with *** and {dot: true}
    ✓ should match .b/ with *** and {nonegate: true}
    ✓ should match .b/.c with ***
    ✓ should match .b/.c with *** and {dot: true}
    ✓ should match .b/.c with *** and {nonegate: true}
    ✓ should match .b/c with ***
    ✓ should match .b/c with *** and {dot: true}
    ✓ should match .b/c with *** and {nonegate: true}
    ✓ should match b/.c with ***
    ✓ should match b/.c with *** and {dot: true}
    ✓ should match b/.c with *** and {nonegate: true}
    ✓ should match b/.c/ with ***
    ✓ should match b/.c/ with *** and {dot: true}
    ✓ should match b/.c/ with *** and {nonegate: true}
    ✓ should match a/+b/c with ***
    ✓ should match a/+b/c with *** and {dot: true}
    ✓ should match a/+b/c with *** and {nonegate: true}
    ✓ should match +a/+b/c with ***
    ✓ should match +a/+b/c with *** and {dot: true}
    ✓ should match +a/+b/c with *** and {nonegate: true}
    ✓ should match a (foo) with ***
    ✓ should match a (foo) with *** and {dot: true}
    ✓ should match a (foo) with *** and {nonegate: true}
    ✓ should match a (foo)/(bar) with ***
    ✓ should match a (foo)/(bar) with *** and {dot: true}
    ✓ should match a (foo)/(bar) with *** and {nonegate: true}
    ✓ should match a/b/c (1) with ***
    ✓ should match a/b/c (1) with *** and {dot: true}
    ✓ should match a/b/c (1) with *** and {nonegate: true}
    ✓ should match a/b (2)/c (1) with ***
    ✓ should match a/b (2)/c (1) with *** and {dot: true}
    ✓ should match a/b (2)/c (1) with *** and {nonegate: true}
    ✓ should match a/b/c [def] with ***
    ✓ should match a/b/c [def] with *** and {dot: true}
    ✓ should match a/b/c [def] with *** and {nonegate: true}
    ✓ should match a with **********
    ✓ should match a with ********** and {dot: true}
    ✓ should match a with ********** and {nonegate: true}
    ✓ should match a.md with **********
    ✓ should match a.md with ********** and {dot: true}
    ✓ should match a.md with ********** and {nonegate: true}
    ✓ should match a.js with **********
    ✓ should match a.js with ********** and {dot: true}
    ✓ should match a.js with ********** and {nonegate: true}
    ✓ should match a/ with **********
    ✓ should match a/ with ********** and {dot: true}
    ✓ should match a/ with ********** and {nonegate: true}
    ✓ should match a/b with **********
    ✓ should match a/b with ********** and {dot: true}
    ✓ should match a/b with ********** and {nonegate: true}
    ✓ should match a/b/.c.md with **********
    ✓ should match a/b/.c.md with ********** and {dot: true}
    ✓ should match a/b/.c.md with ********** and {nonegate: true}
    ✓ should match a/b/c with **********
    ✓ should match a/b/c with ********** and {dot: true}
    ✓ should match a/b/c with ********** and {nonegate: true}
    ✓ should match a/b/c.md with **********
    ✓ should match a/b/c.md with ********** and {dot: true}
    ✓ should match a/b/c.md with ********** and {nonegate: true}
    ✓ should match a/b/c/ with **********
    ✓ should match a/b/c/ with ********** and {dot: true}
    ✓ should match a/b/c/ with ********** and {nonegate: true}
    ✓ should match a/b/c/d with **********
    ✓ should match a/b/c/d with ********** and {dot: true}
    ✓ should match a/b/c/d with ********** and {nonegate: true}
    ✓ should match a/b/c/d/ with **********
    ✓ should match a/b/c/d/ with ********** and {dot: true}
    ✓ should match a/b/c/d/ with ********** and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with **********
    ✓ should match a/b/c/d/e/f/z.js with ********** and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with ********** and {nonegate: true}
    ✓ should match a/b/c/z.js with **********
    ✓ should match a/b/c/z.js with ********** and {dot: true}
    ✓ should match a/b/c/z.js with ********** and {nonegate: true}
    ✓ should match a/bb with **********
    ✓ should match a/bb with ********** and {dot: true}
    ✓ should match a/bb with ********** and {nonegate: true}
    ✓ should match a/cb with **********
    ✓ should match a/cb with ********** and {dot: true}
    ✓ should match a/cb with ********** and {nonegate: true}
    ✓ should match abbbz with **********
    ✓ should match abbbz with ********** and {dot: true}
    ✓ should match abbbz with ********** and {nonegate: true}
    ✓ should match abc with **********
    ✓ should match abc with ********** and {dot: true}
    ✓ should match abc with ********** and {nonegate: true}
    ✓ should match abd with **********
    ✓ should match abd with ********** and {dot: true}
    ✓ should match abd with ********** and {nonegate: true}
    ✓ should match z.js with **********
    ✓ should match z.js with ********** and {dot: true}
    ✓ should match z.js with ********** and {nonegate: true}
    ✓ should match za.js with **********
    ✓ should match za.js with ********** and {dot: true}
    ✓ should match za.js with ********** and {nonegate: true}
    ✓ should match !a.js with **********
    ✓ should match !a.js with ********** and {dot: true}
    ✓ should match !a.js with ********** and {nonegate: true}
    ✓ should match !a/b with **********
    ✓ should match !a/b with ********** and {dot: true}
    ✓ should match !a/b with ********** and {nonegate: true}
    ✓ should match !a/b/ with **********
    ✓ should match !a/b/ with ********** and {dot: true}
    ✓ should match !a/b/ with ********** and {nonegate: true}
    ✓ should match !a/b/c with **********
    ✓ should match !a/b/c with ********** and {dot: true}
    ✓ should match !a/b/c with ********** and {nonegate: true}
    ✓ should match !a/b/c/ with **********
    ✓ should match !a/b/c/ with ********** and {dot: true}
    ✓ should match !a/b/c/ with ********** and {nonegate: true}
    ✓ should match !a/!b with **********
    ✓ should match !a/!b with ********** and {dot: true}
    ✓ should match !a/!b with ********** and {nonegate: true}
    ✓ should match !a/!b/c with **********
    ✓ should match !a/!b/c with ********** and {dot: true}
    ✓ should match !a/!b/c with ********** and {nonegate: true}
    ✓ should match !a/!b/c/d with **********
    ✓ should match !a/!b/c/d with ********** and {dot: true}
    ✓ should match !a/!b/c/d with ********** and {nonegate: true}
    ✓ should match !a/b/.c.md with **********
    ✓ should match !a/b/.c.md with ********** and {dot: true}
    ✓ should match !a/b/.c.md with ********** and {nonegate: true}
    ✓ should match /a/ with **********
    ✓ should match /a/ with ********** and {dot: true}
    ✓ should match /a/ with ********** and {nonegate: true}
    ✓ should match /a/b with **********
    ✓ should match /a/b with ********** and {dot: true}
    ✓ should match /a/b with ********** and {nonegate: true}
    ✓ should match /a/cb with **********
    ✓ should match /a/cb with ********** and {dot: true}
    ✓ should match /a/cb with ********** and {nonegate: true}
    ✓ should match /a/bb with **********
    ✓ should match /a/bb with ********** and {dot: true}
    ✓ should match /a/bb with ********** and {nonegate: true}
    ✓ should match /a/b/c with **********
    ✓ should match /a/b/c with ********** and {dot: true}
    ✓ should match /a/b/c with ********** and {nonegate: true}
    ✓ should match /a/b/c/ with **********
    ✓ should match /a/b/c/ with ********** and {dot: true}
    ✓ should match /a/b/c/ with ********** and {nonegate: true}
    ✓ should match /a/b/c/d with **********
    ✓ should match /a/b/c/d with ********** and {dot: true}
    ✓ should match /a/b/c/d with ********** and {nonegate: true}
    ✓ should match /a/b/c/d/ with **********
    ✓ should match /a/b/c/d/ with ********** and {dot: true}
    ✓ should match /a/b/c/d/ with ********** and {nonegate: true}
    ✓ should match . with **********
    ✓ should match . with ********** and {dot: true}
    ✓ should match . with ********** and {nonegate: true}
    ✓ should match ./ with **********
    ✓ should match ./ with ********** and {dot: true}
    ✓ should match ./ with ********** and {nonegate: true}
    ✓ should match .. with **********
    ✓ should match .. with ********** and {dot: true}
    ✓ should match .. with ********** and {nonegate: true}
    ✓ should match ../c with **********
    ✓ should match ../c with ********** and {dot: true}
    ✓ should match ../c with ********** and {nonegate: true}
    ✓ should match ../c with **********
    ✓ should match ../c with ********** and {dot: true}
    ✓ should match ../c with ********** and {nonegate: true}
    ✓ should match ./../c with **********
    ✓ should match ./../c with ********** and {dot: true}
    ✓ should match ./../c with ********** and {nonegate: true}
    ✓ should match ./a/../c with **********
    ✓ should match ./a/../c with ********** and {dot: true}
    ✓ should match ./a/../c with ********** and {nonegate: true}
    ✓ should match /.. with **********
    ✓ should match /.. with ********** and {dot: true}
    ✓ should match /.. with ********** and {nonegate: true}
    ✓ should match /../c with **********
    ✓ should match /../c with ********** and {dot: true}
    ✓ should match /../c with ********** and {nonegate: true}
    ✓ should match /../.c with **********
    ✓ should match /../.c with ********** and {dot: true}
    ✓ should match /../.c with ********** and {nonegate: true}
    ✓ should match /../.c/ with **********
    ✓ should match /../.c/ with ********** and {dot: true}
    ✓ should match /../.c/ with ********** and {nonegate: true}
    ✓ should match /a/../c with **********
    ✓ should match /a/../c with ********** and {dot: true}
    ✓ should match /a/../c with ********** and {nonegate: true}
    ✓ should match a/../c with **********
    ✓ should match a/../c with ********** and {dot: true}
    ✓ should match a/../c with ********** and {nonegate: true}
    ✓ should match ../.b/.c with **********
    ✓ should match ../.b/.c with ********** and {dot: true}
    ✓ should match ../.b/.c with ********** and {nonegate: true}
    ✓ should match ../b/.c with **********
    ✓ should match ../b/.c with ********** and {dot: true}
    ✓ should match ../b/.c with ********** and {nonegate: true}
    ✓ should match ./.b/.c with **********
    ✓ should match ./.b/.c with ********** and {dot: true}
    ✓ should match ./.b/.c with ********** and {nonegate: true}
    ✓ should match ./b/.c with **********
    ✓ should match ./b/.c with ********** and {dot: true}
    ✓ should match ./b/.c with ********** and {nonegate: true}
    ✓ should match .b with **********
    ✓ should match .b with ********** and {dot: true}
    ✓ should match .b with ********** and {nonegate: true}
    ✓ should match .b.c with **********
    ✓ should match .b.c with ********** and {dot: true}
    ✓ should match .b.c with ********** and {nonegate: true}
    ✓ should match .b.c/ with **********
    ✓ should match .b.c/ with ********** and {dot: true}
    ✓ should match .b.c/ with ********** and {nonegate: true}
    ✓ should match .b/ with **********
    ✓ should match .b/ with ********** and {dot: true}
    ✓ should match .b/ with ********** and {nonegate: true}
    ✓ should match .b/.c with **********
    ✓ should match .b/.c with ********** and {dot: true}
    ✓ should match .b/.c with ********** and {nonegate: true}
    ✓ should match .b/c with **********
    ✓ should match .b/c with ********** and {dot: true}
    ✓ should match .b/c with ********** and {nonegate: true}
    ✓ should match b/.c with **********
    ✓ should match b/.c with ********** and {dot: true}
    ✓ should match b/.c with ********** and {nonegate: true}
    ✓ should match b/.c/ with **********
    ✓ should match b/.c/ with ********** and {dot: true}
    ✓ should match b/.c/ with ********** and {nonegate: true}
    ✓ should match a/+b/c with **********
    ✓ should match a/+b/c with ********** and {dot: true}
    ✓ should match a/+b/c with ********** and {nonegate: true}
    ✓ should match +a/+b/c with **********
    ✓ should match +a/+b/c with ********** and {dot: true}
    ✓ should match +a/+b/c with ********** and {nonegate: true}
    ✓ should match a (foo) with **********
    ✓ should match a (foo) with ********** and {dot: true}
    ✓ should match a (foo) with ********** and {nonegate: true}
    ✓ should match a (foo)/(bar) with **********
    ✓ should match a (foo)/(bar) with ********** and {dot: true}
    ✓ should match a (foo)/(bar) with ********** and {nonegate: true}
    ✓ should match a/b/c (1) with **********
    ✓ should match a/b/c (1) with ********** and {dot: true}
    ✓ should match a/b/c (1) with ********** and {nonegate: true}
    ✓ should match a/b (2)/c (1) with **********
    ✓ should match a/b (2)/c (1) with ********** and {dot: true}
    ✓ should match a/b (2)/c (1) with ********** and {nonegate: true}
    ✓ should match a/b/c [def] with **********
    ✓ should match a/b/c [def] with ********** and {dot: true}
    ✓ should match a/b/c [def] with ********** and {nonegate: true}
    ✓ should match a with **/
    ✓ should match a with **/ and {dot: true}
    ✓ should match a with **/ and {nonegate: true}
    ✓ should match a.md with **/
    ✓ should match a.md with **/ and {dot: true}
    ✓ should match a.md with **/ and {nonegate: true}
    ✓ should match a.js with **/
    ✓ should match a.js with **/ and {dot: true}
    ✓ should match a.js with **/ and {nonegate: true}
    ✓ should match a/ with **/
    ✓ should match a/ with **/ and {dot: true}
    ✓ should match a/ with **/ and {nonegate: true}
    ✓ should match a/b with **/
    ✓ should match a/b with **/ and {dot: true}
    ✓ should match a/b with **/ and {nonegate: true}
    ✓ should match a/b/.c.md with **/
    ✓ should match a/b/.c.md with **/ and {dot: true}
    ✓ should match a/b/.c.md with **/ and {nonegate: true}
    ✓ should match a/b/c with **/
    ✓ should match a/b/c with **/ and {dot: true}
    ✓ should match a/b/c with **/ and {nonegate: true}
    ✓ should match a/b/c.md with **/
    ✓ should match a/b/c.md with **/ and {dot: true}
    ✓ should match a/b/c.md with **/ and {nonegate: true}
    ✓ should match a/b/c/ with **/
    ✓ should match a/b/c/ with **/ and {dot: true}
    ✓ should match a/b/c/ with **/ and {nonegate: true}
    ✓ should match a/b/c/d with **/
    ✓ should match a/b/c/d with **/ and {dot: true}
    ✓ should match a/b/c/d with **/ and {nonegate: true}
    ✓ should match a/b/c/d/ with **/
    ✓ should match a/b/c/d/ with **/ and {dot: true}
    ✓ should match a/b/c/d/ with **/ and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with **/
    ✓ should match a/b/c/d/e/f/z.js with **/ and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with **/ and {nonegate: true}
    ✓ should match a/b/c/z.js with **/
    ✓ should match a/b/c/z.js with **/ and {dot: true}
    ✓ should match a/b/c/z.js with **/ and {nonegate: true}
    ✓ should match a/bb with **/
    ✓ should match a/bb with **/ and {dot: true}
    ✓ should match a/bb with **/ and {nonegate: true}
    ✓ should match a/cb with **/
    ✓ should match a/cb with **/ and {dot: true}
    ✓ should match a/cb with **/ and {nonegate: true}
    ✓ should match abbbz with **/
    ✓ should match abbbz with **/ and {dot: true}
    ✓ should match abbbz with **/ and {nonegate: true}
    ✓ should match abc with **/
    ✓ should match abc with **/ and {dot: true}
    ✓ should match abc with **/ and {nonegate: true}
    ✓ should match abd with **/
    ✓ should match abd with **/ and {dot: true}
    ✓ should match abd with **/ and {nonegate: true}
    ✓ should match z.js with **/
    ✓ should match z.js with **/ and {dot: true}
    ✓ should match z.js with **/ and {nonegate: true}
    ✓ should match za.js with **/
    ✓ should match za.js with **/ and {dot: true}
    ✓ should match za.js with **/ and {nonegate: true}
    ✓ should match !a.js with **/
    ✓ should match !a.js with **/ and {dot: true}
    ✓ should match !a.js with **/ and {nonegate: true}
    ✓ should match !a/b with **/
    ✓ should match !a/b with **/ and {dot: true}
    ✓ should match !a/b with **/ and {nonegate: true}
    ✓ should match !a/b/ with **/
    ✓ should match !a/b/ with **/ and {dot: true}
    ✓ should match !a/b/ with **/ and {nonegate: true}
    ✓ should match !a/b/c with **/
    ✓ should match !a/b/c with **/ and {dot: true}
    ✓ should match !a/b/c with **/ and {nonegate: true}
    ✓ should match !a/b/c/ with **/
    ✓ should match !a/b/c/ with **/ and {dot: true}
    ✓ should match !a/b/c/ with **/ and {nonegate: true}
    ✓ should match !a/!b with **/
    ✓ should match !a/!b with **/ and {dot: true}
    ✓ should match !a/!b with **/ and {nonegate: true}
    ✓ should match !a/!b/c with **/
    ✓ should match !a/!b/c with **/ and {dot: true}
    ✓ should match !a/!b/c with **/ and {nonegate: true}
    ✓ should match !a/!b/c/d with **/
    ✓ should match !a/!b/c/d with **/ and {dot: true}
    ✓ should match !a/!b/c/d with **/ and {nonegate: true}
    ✓ should match !a/b/.c.md with **/
    ✓ should match !a/b/.c.md with **/ and {dot: true}
    ✓ should match !a/b/.c.md with **/ and {nonegate: true}
    ✓ should match /a/ with **/
    ✓ should match /a/ with **/ and {dot: true}
    ✓ should match /a/ with **/ and {nonegate: true}
    ✓ should match /a/b with **/
    ✓ should match /a/b with **/ and {dot: true}
    ✓ should match /a/b with **/ and {nonegate: true}
    ✓ should match /a/cb with **/
    ✓ should match /a/cb with **/ and {dot: true}
    ✓ should match /a/cb with **/ and {nonegate: true}
    ✓ should match /a/bb with **/
    ✓ should match /a/bb with **/ and {dot: true}
    ✓ should match /a/bb with **/ and {nonegate: true}
    ✓ should match /a/b/c with **/
    ✓ should match /a/b/c with **/ and {dot: true}
    ✓ should match /a/b/c with **/ and {nonegate: true}
    ✓ should match /a/b/c/ with **/
    ✓ should match /a/b/c/ with **/ and {dot: true}
    ✓ should match /a/b/c/ with **/ and {nonegate: true}
    ✓ should match /a/b/c/d with **/
    ✓ should match /a/b/c/d with **/ and {dot: true}
    ✓ should match /a/b/c/d with **/ and {nonegate: true}
    ✓ should match /a/b/c/d/ with **/
    ✓ should match /a/b/c/d/ with **/ and {dot: true}
    ✓ should match /a/b/c/d/ with **/ and {nonegate: true}
    ✓ should match . with **/
    ✓ should match . with **/ and {dot: true}
    ✓ should match . with **/ and {nonegate: true}
    ✓ should match ./ with **/
    ✓ should match ./ with **/ and {dot: true}
    ✓ should match ./ with **/ and {nonegate: true}
    ✓ should match .. with **/
    ✓ should match .. with **/ and {dot: true}
    ✓ should match .. with **/ and {nonegate: true}
    ✓ should match ../c with **/
    ✓ should match ../c with **/ and {dot: true}
    ✓ should match ../c with **/ and {nonegate: true}
    ✓ should match ../c with **/
    ✓ should match ../c with **/ and {dot: true}
    ✓ should match ../c with **/ and {nonegate: true}
    ✓ should match ./../c with **/
    ✓ should match ./../c with **/ and {dot: true}
    ✓ should match ./../c with **/ and {nonegate: true}
    ✓ should match ./a/../c with **/
    ✓ should match ./a/../c with **/ and {dot: true}
    ✓ should match ./a/../c with **/ and {nonegate: true}
    ✓ should match /.. with **/
    ✓ should match /.. with **/ and {dot: true}
    ✓ should match /.. with **/ and {nonegate: true}
    ✓ should match /../c with **/
    ✓ should match /../c with **/ and {dot: true}
    ✓ should match /../c with **/ and {nonegate: true}
    ✓ should match /../.c with **/
    ✓ should match /../.c with **/ and {dot: true}
    ✓ should match /../.c with **/ and {nonegate: true}
    ✓ should match /../.c/ with **/
    ✓ should match /../.c/ with **/ and {dot: true}
    ✓ should match /../.c/ with **/ and {nonegate: true}
    ✓ should match /a/../c with **/
    ✓ should match /a/../c with **/ and {dot: true}
    ✓ should match /a/../c with **/ and {nonegate: true}
    ✓ should match a/../c with **/
    ✓ should match a/../c with **/ and {dot: true}
    ✓ should match a/../c with **/ and {nonegate: true}
    ✓ should match ../.b/.c with **/
    ✓ should match ../.b/.c with **/ and {dot: true}
    ✓ should match ../.b/.c with **/ and {nonegate: true}
    ✓ should match ../b/.c with **/
    ✓ should match ../b/.c with **/ and {dot: true}
    ✓ should match ../b/.c with **/ and {nonegate: true}
    ✓ should match ./.b/.c with **/
    ✓ should match ./.b/.c with **/ and {dot: true}
    ✓ should match ./.b/.c with **/ and {nonegate: true}
    ✓ should match ./b/.c with **/
    ✓ should match ./b/.c with **/ and {dot: true}
    ✓ should match ./b/.c with **/ and {nonegate: true}
    ✓ should match .b with **/
    ✓ should match .b with **/ and {dot: true}
    ✓ should match .b with **/ and {nonegate: true}
    ✓ should match .b.c with **/
    ✓ should match .b.c with **/ and {dot: true}
    ✓ should match .b.c with **/ and {nonegate: true}
    ✓ should match .b.c/ with **/
    ✓ should match .b.c/ with **/ and {dot: true}
    ✓ should match .b.c/ with **/ and {nonegate: true}
    ✓ should match .b/ with **/
    ✓ should match .b/ with **/ and {dot: true}
    ✓ should match .b/ with **/ and {nonegate: true}
    ✓ should match .b/.c with **/
    ✓ should match .b/.c with **/ and {dot: true}
    ✓ should match .b/.c with **/ and {nonegate: true}
    ✓ should match .b/c with **/
    ✓ should match .b/c with **/ and {dot: true}
    ✓ should match .b/c with **/ and {nonegate: true}
    ✓ should match b/.c with **/
    ✓ should match b/.c with **/ and {dot: true}
    ✓ should match b/.c with **/ and {nonegate: true}
    ✓ should match b/.c/ with **/
    ✓ should match b/.c/ with **/ and {dot: true}
    ✓ should match b/.c/ with **/ and {nonegate: true}
    ✓ should match a/+b/c with **/
    ✓ should match a/+b/c with **/ and {dot: true}
    ✓ should match a/+b/c with **/ and {nonegate: true}
    ✓ should match +a/+b/c with **/
    ✓ should match +a/+b/c with **/ and {dot: true}
    ✓ should match +a/+b/c with **/ and {nonegate: true}
    ✓ should match a (foo) with **/
    ✓ should match a (foo) with **/ and {dot: true}
    ✓ should match a (foo) with **/ and {nonegate: true}
    ✓ should match a (foo)/(bar) with **/
    ✓ should match a (foo)/(bar) with **/ and {dot: true}
    ✓ should match a (foo)/(bar) with **/ and {nonegate: true}
    ✓ should match a/b/c (1) with **/
    ✓ should match a/b/c (1) with **/ and {dot: true}
    ✓ should match a/b/c (1) with **/ and {nonegate: true}
    ✓ should match a/b (2)/c (1) with **/
    ✓ should match a/b (2)/c (1) with **/ and {dot: true}
    ✓ should match a/b (2)/c (1) with **/ and {nonegate: true}
    ✓ should match a/b/c [def] with **/
    ✓ should match a/b/c [def] with **/ and {dot: true}
    ✓ should match a/b/c [def] with **/ and {nonegate: true}
    ✓ should match a with **/*
    ✓ should match a with **/* and {dot: true}
    ✓ should match a with **/* and {nonegate: true}
    ✓ should match a.md with **/*
    ✓ should match a.md with **/* and {dot: true}
    ✓ should match a.md with **/* and {nonegate: true}
    ✓ should match a.js with **/*
    ✓ should match a.js with **/* and {dot: true}
    ✓ should match a.js with **/* and {nonegate: true}
    ✓ should match a/ with **/*
    ✓ should match a/ with **/* and {dot: true}
    ✓ should match a/ with **/* and {nonegate: true}
    ✓ should match a/b with **/*
    ✓ should match a/b with **/* and {dot: true}
    ✓ should match a/b with **/* and {nonegate: true}
    ✓ should match a/b/.c.md with **/*
    ✓ should match a/b/.c.md with **/* and {dot: true}
    ✓ should match a/b/.c.md with **/* and {nonegate: true}
    ✓ should match a/b/c with **/*
    ✓ should match a/b/c with **/* and {dot: true}
    ✓ should match a/b/c with **/* and {nonegate: true}
    ✓ should match a/b/c.md with **/*
    ✓ should match a/b/c.md with **/* and {dot: true}
    ✓ should match a/b/c.md with **/* and {nonegate: true}
    ✓ should match a/b/c/ with **/*
    ✓ should match a/b/c/ with **/* and {dot: true}
    ✓ should match a/b/c/ with **/* and {nonegate: true}
    ✓ should match a/b/c/d with **/*
    ✓ should match a/b/c/d with **/* and {dot: true}
    ✓ should match a/b/c/d with **/* and {nonegate: true}
    ✓ should match a/b/c/d/ with **/*
    ✓ should match a/b/c/d/ with **/* and {dot: true}
    ✓ should match a/b/c/d/ with **/* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with **/*
    ✓ should match a/b/c/d/e/f/z.js with **/* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with **/* and {nonegate: true}
    ✓ should match a/b/c/z.js with **/*
    ✓ should match a/b/c/z.js with **/* and {dot: true}
    ✓ should match a/b/c/z.js with **/* and {nonegate: true}
    ✓ should match a/bb with **/*
    ✓ should match a/bb with **/* and {dot: true}
    ✓ should match a/bb with **/* and {nonegate: true}
    ✓ should match a/cb with **/*
    ✓ should match a/cb with **/* and {dot: true}
    ✓ should match a/cb with **/* and {nonegate: true}
    ✓ should match abbbz with **/*
    ✓ should match abbbz with **/* and {dot: true}
    ✓ should match abbbz with **/* and {nonegate: true}
    ✓ should match abc with **/*
    ✓ should match abc with **/* and {dot: true}
    ✓ should match abc with **/* and {nonegate: true}
    ✓ should match abd with **/*
    ✓ should match abd with **/* and {dot: true}
    ✓ should match abd with **/* and {nonegate: true}
    ✓ should match z.js with **/*
    ✓ should match z.js with **/* and {dot: true}
    ✓ should match z.js with **/* and {nonegate: true}
    ✓ should match za.js with **/*
    ✓ should match za.js with **/* and {dot: true}
    ✓ should match za.js with **/* and {nonegate: true}
    ✓ should match !a.js with **/*
    ✓ should match !a.js with **/* and {dot: true}
    ✓ should match !a.js with **/* and {nonegate: true}
    ✓ should match !a/b with **/*
    ✓ should match !a/b with **/* and {dot: true}
    ✓ should match !a/b with **/* and {nonegate: true}
    ✓ should match !a/b/ with **/*
    ✓ should match !a/b/ with **/* and {dot: true}
    ✓ should match !a/b/ with **/* and {nonegate: true}
    ✓ should match !a/b/c with **/*
    ✓ should match !a/b/c with **/* and {dot: true}
    ✓ should match !a/b/c with **/* and {nonegate: true}
    ✓ should match !a/b/c/ with **/*
    ✓ should match !a/b/c/ with **/* and {dot: true}
    ✓ should match !a/b/c/ with **/* and {nonegate: true}
    ✓ should match !a/!b with **/*
    ✓ should match !a/!b with **/* and {dot: true}
    ✓ should match !a/!b with **/* and {nonegate: true}
    ✓ should match !a/!b/c with **/*
    ✓ should match !a/!b/c with **/* and {dot: true}
    ✓ should match !a/!b/c with **/* and {nonegate: true}
    ✓ should match !a/!b/c/d with **/*
    ✓ should match !a/!b/c/d with **/* and {dot: true}
    ✓ should match !a/!b/c/d with **/* and {nonegate: true}
    ✓ should match !a/b/.c.md with **/*
    ✓ should match !a/b/.c.md with **/* and {dot: true}
    ✓ should match !a/b/.c.md with **/* and {nonegate: true}
    ✓ should match /a/ with **/*
    ✓ should match /a/ with **/* and {dot: true}
    ✓ should match /a/ with **/* and {nonegate: true}
    ✓ should match /a/b with **/*
    ✓ should match /a/b with **/* and {dot: true}
    ✓ should match /a/b with **/* and {nonegate: true}
    ✓ should match /a/cb with **/*
    ✓ should match /a/cb with **/* and {dot: true}
    ✓ should match /a/cb with **/* and {nonegate: true}
    ✓ should match /a/bb with **/*
    ✓ should match /a/bb with **/* and {dot: true}
    ✓ should match /a/bb with **/* and {nonegate: true}
    ✓ should match /a/b/c with **/*
    ✓ should match /a/b/c with **/* and {dot: true}
    ✓ should match /a/b/c with **/* and {nonegate: true}
    ✓ should match /a/b/c/ with **/*
    ✓ should match /a/b/c/ with **/* and {dot: true}
    ✓ should match /a/b/c/ with **/* and {nonegate: true}
    ✓ should match /a/b/c/d with **/*
    ✓ should match /a/b/c/d with **/* and {dot: true}
    ✓ should match /a/b/c/d with **/* and {nonegate: true}
    ✓ should match /a/b/c/d/ with **/*
    ✓ should match /a/b/c/d/ with **/* and {dot: true}
    ✓ should match /a/b/c/d/ with **/* and {nonegate: true}
    ✓ should match . with **/*
    ✓ should match . with **/* and {dot: true}
    ✓ should match . with **/* and {nonegate: true}
    ✓ should match ./ with **/*
    ✓ should match ./ with **/* and {dot: true}
    ✓ should match ./ with **/* and {nonegate: true}
    ✓ should match .. with **/*
    ✓ should match .. with **/* and {dot: true}
    ✓ should match .. with **/* and {nonegate: true}
    ✓ should match ../c with **/*
    ✓ should match ../c with **/* and {dot: true}
    ✓ should match ../c with **/* and {nonegate: true}
    ✓ should match ../c with **/*
    ✓ should match ../c with **/* and {dot: true}
    ✓ should match ../c with **/* and {nonegate: true}
    ✓ should match ./../c with **/*
    ✓ should match ./../c with **/* and {dot: true}
    ✓ should match ./../c with **/* and {nonegate: true}
    ✓ should match ./a/../c with **/*
    ✓ should match ./a/../c with **/* and {dot: true}
    ✓ should match ./a/../c with **/* and {nonegate: true}
    ✓ should match /.. with **/*
    ✓ should match /.. with **/* and {dot: true}
    ✓ should match /.. with **/* and {nonegate: true}
    ✓ should match /../c with **/*
    ✓ should match /../c with **/* and {dot: true}
    ✓ should match /../c with **/* and {nonegate: true}
    ✓ should match /../.c with **/*
    ✓ should match /../.c with **/* and {dot: true}
    ✓ should match /../.c with **/* and {nonegate: true}
    ✓ should match /../.c/ with **/*
    ✓ should match /../.c/ with **/* and {dot: true}
    ✓ should match /../.c/ with **/* and {nonegate: true}
    ✓ should match /a/../c with **/*
    ✓ should match /a/../c with **/* and {dot: true}
    ✓ should match /a/../c with **/* and {nonegate: true}
    ✓ should match a/../c with **/*
    ✓ should match a/../c with **/* and {dot: true}
    ✓ should match a/../c with **/* and {nonegate: true}
    ✓ should match ../.b/.c with **/*
    ✓ should match ../.b/.c with **/* and {dot: true}
    ✓ should match ../.b/.c with **/* and {nonegate: true}
    ✓ should match ../b/.c with **/*
    ✓ should match ../b/.c with **/* and {dot: true}
    ✓ should match ../b/.c with **/* and {nonegate: true}
    ✓ should match ./.b/.c with **/*
    ✓ should match ./.b/.c with **/* and {dot: true}
    ✓ should match ./.b/.c with **/* and {nonegate: true}
    ✓ should match ./b/.c with **/*
    ✓ should match ./b/.c with **/* and {dot: true}
    ✓ should match ./b/.c with **/* and {nonegate: true}
    ✓ should match .b with **/*
    ✓ should match .b with **/* and {dot: true}
    ✓ should match .b with **/* and {nonegate: true}
    ✓ should match .b.c with **/*
    ✓ should match .b.c with **/* and {dot: true}
    ✓ should match .b.c with **/* and {nonegate: true}
    ✓ should match .b.c/ with **/*
    ✓ should match .b.c/ with **/* and {dot: true}
    ✓ should match .b.c/ with **/* and {nonegate: true}
    ✓ should match .b/ with **/*
    ✓ should match .b/ with **/* and {dot: true}
    ✓ should match .b/ with **/* and {nonegate: true}
    ✓ should match .b/.c with **/*
    ✓ should match .b/.c with **/* and {dot: true}
    ✓ should match .b/.c with **/* and {nonegate: true}
    ✓ should match .b/c with **/*
    ✓ should match .b/c with **/* and {dot: true}
    ✓ should match .b/c with **/* and {nonegate: true}
    ✓ should match b/.c with **/*
    ✓ should match b/.c with **/* and {dot: true}
    ✓ should match b/.c with **/* and {nonegate: true}
    ✓ should match b/.c/ with **/*
    ✓ should match b/.c/ with **/* and {dot: true}
    ✓ should match b/.c/ with **/* and {nonegate: true}
    ✓ should match a/+b/c with **/*
    ✓ should match a/+b/c with **/* and {dot: true}
    ✓ should match a/+b/c with **/* and {nonegate: true}
    ✓ should match +a/+b/c with **/*
    ✓ should match +a/+b/c with **/* and {dot: true}
    ✓ should match +a/+b/c with **/* and {nonegate: true}
    ✓ should match a (foo) with **/*
    ✓ should match a (foo) with **/* and {dot: true}
    ✓ should match a (foo) with **/* and {nonegate: true}
    ✓ should match a (foo)/(bar) with **/*
    ✓ should match a (foo)/(bar) with **/* and {dot: true}
    ✓ should match a (foo)/(bar) with **/* and {nonegate: true}
    ✓ should match a/b/c (1) with **/*
    ✓ should match a/b/c (1) with **/* and {dot: true}
    ✓ should match a/b/c (1) with **/* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with **/*
    ✓ should match a/b (2)/c (1) with **/* and {dot: true}
    ✓ should match a/b (2)/c (1) with **/* and {nonegate: true}
    ✓ should match a/b/c [def] with **/*
    ✓ should match a/b/c [def] with **/* and {dot: true}
    ✓ should match a/b/c [def] with **/* and {nonegate: true}
    ✓ should match a with **/**
    ✓ should match a with **/** and {dot: true}
    ✓ should match a with **/** and {nonegate: true}
    ✓ should match a.md with **/**
    ✓ should match a.md with **/** and {dot: true}
    ✓ should match a.md with **/** and {nonegate: true}
    ✓ should match a.js with **/**
    ✓ should match a.js with **/** and {dot: true}
    ✓ should match a.js with **/** and {nonegate: true}
    ✓ should match a/ with **/**
    ✓ should match a/ with **/** and {dot: true}
    ✓ should match a/ with **/** and {nonegate: true}
    ✓ should match a/b with **/**
    ✓ should match a/b with **/** and {dot: true}
    ✓ should match a/b with **/** and {nonegate: true}
    ✓ should match a/b/.c.md with **/**
    ✓ should match a/b/.c.md with **/** and {dot: true}
    ✓ should match a/b/.c.md with **/** and {nonegate: true}
    ✓ should match a/b/c with **/**
    ✓ should match a/b/c with **/** and {dot: true}
    ✓ should match a/b/c with **/** and {nonegate: true}
    ✓ should match a/b/c.md with **/**
    ✓ should match a/b/c.md with **/** and {dot: true}
    ✓ should match a/b/c.md with **/** and {nonegate: true}
    ✓ should match a/b/c/ with **/**
    ✓ should match a/b/c/ with **/** and {dot: true}
    ✓ should match a/b/c/ with **/** and {nonegate: true}
    ✓ should match a/b/c/d with **/**
    ✓ should match a/b/c/d with **/** and {dot: true}
    ✓ should match a/b/c/d with **/** and {nonegate: true}
    ✓ should match a/b/c/d/ with **/**
    ✓ should match a/b/c/d/ with **/** and {dot: true}
    ✓ should match a/b/c/d/ with **/** and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with **/**
    ✓ should match a/b/c/d/e/f/z.js with **/** and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with **/** and {nonegate: true}
    ✓ should match a/b/c/z.js with **/**
    ✓ should match a/b/c/z.js with **/** and {dot: true}
    ✓ should match a/b/c/z.js with **/** and {nonegate: true}
    ✓ should match a/bb with **/**
    ✓ should match a/bb with **/** and {dot: true}
    ✓ should match a/bb with **/** and {nonegate: true}
    ✓ should match a/cb with **/**
    ✓ should match a/cb with **/** and {dot: true}
    ✓ should match a/cb with **/** and {nonegate: true}
    ✓ should match abbbz with **/**
    ✓ should match abbbz with **/** and {dot: true}
    ✓ should match abbbz with **/** and {nonegate: true}
    ✓ should match abc with **/**
    ✓ should match abc with **/** and {dot: true}
    ✓ should match abc with **/** and {nonegate: true}
    ✓ should match abd with **/**
    ✓ should match abd with **/** and {dot: true}
    ✓ should match abd with **/** and {nonegate: true}
    ✓ should match z.js with **/**
    ✓ should match z.js with **/** and {dot: true}
    ✓ should match z.js with **/** and {nonegate: true}
    ✓ should match za.js with **/**
    ✓ should match za.js with **/** and {dot: true}
    ✓ should match za.js with **/** and {nonegate: true}
    ✓ should match !a.js with **/**
    ✓ should match !a.js with **/** and {dot: true}
    ✓ should match !a.js with **/** and {nonegate: true}
    ✓ should match !a/b with **/**
    ✓ should match !a/b with **/** and {dot: true}
    ✓ should match !a/b with **/** and {nonegate: true}
    ✓ should match !a/b/ with **/**
    ✓ should match !a/b/ with **/** and {dot: true}
    ✓ should match !a/b/ with **/** and {nonegate: true}
    ✓ should match !a/b/c with **/**
    ✓ should match !a/b/c with **/** and {dot: true}
    ✓ should match !a/b/c with **/** and {nonegate: true}
    ✓ should match !a/b/c/ with **/**
    ✓ should match !a/b/c/ with **/** and {dot: true}
    ✓ should match !a/b/c/ with **/** and {nonegate: true}
    ✓ should match !a/!b with **/**
    ✓ should match !a/!b with **/** and {dot: true}
    ✓ should match !a/!b with **/** and {nonegate: true}
    ✓ should match !a/!b/c with **/**
    ✓ should match !a/!b/c with **/** and {dot: true}
    ✓ should match !a/!b/c with **/** and {nonegate: true}
    ✓ should match !a/!b/c/d with **/**
    ✓ should match !a/!b/c/d with **/** and {dot: true}
    ✓ should match !a/!b/c/d with **/** and {nonegate: true}
    ✓ should match !a/b/.c.md with **/**
    ✓ should match !a/b/.c.md with **/** and {dot: true}
    ✓ should match !a/b/.c.md with **/** and {nonegate: true}
    ✓ should match /a/ with **/**
    ✓ should match /a/ with **/** and {dot: true}
    ✓ should match /a/ with **/** and {nonegate: true}
    ✓ should match /a/b with **/**
    ✓ should match /a/b with **/** and {dot: true}
    ✓ should match /a/b with **/** and {nonegate: true}
    ✓ should match /a/cb with **/**
    ✓ should match /a/cb with **/** and {dot: true}
    ✓ should match /a/cb with **/** and {nonegate: true}
    ✓ should match /a/bb with **/**
    ✓ should match /a/bb with **/** and {dot: true}
    ✓ should match /a/bb with **/** and {nonegate: true}
    ✓ should match /a/b/c with **/**
    ✓ should match /a/b/c with **/** and {dot: true}
    ✓ should match /a/b/c with **/** and {nonegate: true}
    ✓ should match /a/b/c/ with **/**
    ✓ should match /a/b/c/ with **/** and {dot: true}
    ✓ should match /a/b/c/ with **/** and {nonegate: true}
    ✓ should match /a/b/c/d with **/**
    ✓ should match /a/b/c/d with **/** and {dot: true}
    ✓ should match /a/b/c/d with **/** and {nonegate: true}
    ✓ should match /a/b/c/d/ with **/**
    ✓ should match /a/b/c/d/ with **/** and {dot: true}
    ✓ should match /a/b/c/d/ with **/** and {nonegate: true}
    ✓ should match . with **/**
    ✓ should match . with **/** and {dot: true}
    ✓ should match . with **/** and {nonegate: true}
    ✓ should match ./ with **/**
    ✓ should match ./ with **/** and {dot: true}
    ✓ should match ./ with **/** and {nonegate: true}
    ✓ should match .. with **/**
    ✓ should match .. with **/** and {dot: true}
    ✓ should match .. with **/** and {nonegate: true}
    ✓ should match ../c with **/**
    ✓ should match ../c with **/** and {dot: true}
    ✓ should match ../c with **/** and {nonegate: true}
    ✓ should match ../c with **/**
    ✓ should match ../c with **/** and {dot: true}
    ✓ should match ../c with **/** and {nonegate: true}
    ✓ should match ./../c with **/**
    ✓ should match ./../c with **/** and {dot: true}
    ✓ should match ./../c with **/** and {nonegate: true}
    ✓ should match ./a/../c with **/**
    ✓ should match ./a/../c with **/** and {dot: true}
    ✓ should match ./a/../c with **/** and {nonegate: true}
    ✓ should match /.. with **/**
    ✓ should match /.. with **/** and {dot: true}
    ✓ should match /.. with **/** and {nonegate: true}
    ✓ should match /../c with **/**
    ✓ should match /../c with **/** and {dot: true}
    ✓ should match /../c with **/** and {nonegate: true}
    ✓ should match /../.c with **/**
    ✓ should match /../.c with **/** and {dot: true}
    ✓ should match /../.c with **/** and {nonegate: true}
    ✓ should match /../.c/ with **/**
    ✓ should match /../.c/ with **/** and {dot: true}
    ✓ should match /../.c/ with **/** and {nonegate: true}
    ✓ should match /a/../c with **/**
    ✓ should match /a/../c with **/** and {dot: true}
    ✓ should match /a/../c with **/** and {nonegate: true}
    ✓ should match a/../c with **/**
    ✓ should match a/../c with **/** and {dot: true}
    ✓ should match a/../c with **/** and {nonegate: true}
    ✓ should match ../.b/.c with **/**
    ✓ should match ../.b/.c with **/** and {dot: true}
    ✓ should match ../.b/.c with **/** and {nonegate: true}
    ✓ should match ../b/.c with **/**
    ✓ should match ../b/.c with **/** and {dot: true}
    ✓ should match ../b/.c with **/** and {nonegate: true}
    ✓ should match ./.b/.c with **/**
    ✓ should match ./.b/.c with **/** and {dot: true}
    ✓ should match ./.b/.c with **/** and {nonegate: true}
    ✓ should match ./b/.c with **/**
    ✓ should match ./b/.c with **/** and {dot: true}
    ✓ should match ./b/.c with **/** and {nonegate: true}
    ✓ should match .b with **/**
    ✓ should match .b with **/** and {dot: true}
    ✓ should match .b with **/** and {nonegate: true}
    ✓ should match .b.c with **/**
    ✓ should match .b.c with **/** and {dot: true}
    ✓ should match .b.c with **/** and {nonegate: true}
    ✓ should match .b.c/ with **/**
    ✓ should match .b.c/ with **/** and {dot: true}
    ✓ should match .b.c/ with **/** and {nonegate: true}
    ✓ should match .b/ with **/**
    ✓ should match .b/ with **/** and {dot: true}
    ✓ should match .b/ with **/** and {nonegate: true}
    ✓ should match .b/.c with **/**
    ✓ should match .b/.c with **/** and {dot: true}
    ✓ should match .b/.c with **/** and {nonegate: true}
    ✓ should match .b/c with **/**
    ✓ should match .b/c with **/** and {dot: true}
    ✓ should match .b/c with **/** and {nonegate: true}
    ✓ should match b/.c with **/**
    ✓ should match b/.c with **/** and {dot: true}
    ✓ should match b/.c with **/** and {nonegate: true}
    ✓ should match b/.c/ with **/**
    ✓ should match b/.c/ with **/** and {dot: true}
    ✓ should match b/.c/ with **/** and {nonegate: true}
    ✓ should match a/+b/c with **/**
    ✓ should match a/+b/c with **/** and {dot: true}
    ✓ should match a/+b/c with **/** and {nonegate: true}
    ✓ should match +a/+b/c with **/**
    ✓ should match +a/+b/c with **/** and {dot: true}
    ✓ should match +a/+b/c with **/** and {nonegate: true}
    ✓ should match a (foo) with **/**
    ✓ should match a (foo) with **/** and {dot: true}
    ✓ should match a (foo) with **/** and {nonegate: true}
    ✓ should match a (foo)/(bar) with **/**
    ✓ should match a (foo)/(bar) with **/** and {dot: true}
    ✓ should match a (foo)/(bar) with **/** and {nonegate: true}
    ✓ should match a/b/c (1) with **/**
    ✓ should match a/b/c (1) with **/** and {dot: true}
    ✓ should match a/b/c (1) with **/** and {nonegate: true}
    ✓ should match a/b (2)/c (1) with **/**
    ✓ should match a/b (2)/c (1) with **/** and {dot: true}
    ✓ should match a/b (2)/c (1) with **/** and {nonegate: true}
    ✓ should match a/b/c [def] with **/**
    ✓ should match a/b/c [def] with **/** and {dot: true}
    ✓ should match a/b/c [def] with **/** and {nonegate: true}
    ✓ should match a with **/**/**
    ✓ should match a with **/**/** and {dot: true}
    ✓ should match a with **/**/** and {nonegate: true}
    ✓ should match a.md with **/**/**
    ✓ should match a.md with **/**/** and {dot: true}
    ✓ should match a.md with **/**/** and {nonegate: true}
    ✓ should match a.js with **/**/**
    ✓ should match a.js with **/**/** and {dot: true}
    ✓ should match a.js with **/**/** and {nonegate: true}
    ✓ should match a/ with **/**/**
    ✓ should match a/ with **/**/** and {dot: true}
    ✓ should match a/ with **/**/** and {nonegate: true}
    ✓ should match a/b with **/**/**
    ✓ should match a/b with **/**/** and {dot: true}
    ✓ should match a/b with **/**/** and {nonegate: true}
    ✓ should match a/b/.c.md with **/**/**
    ✓ should match a/b/.c.md with **/**/** and {dot: true}
    ✓ should match a/b/.c.md with **/**/** and {nonegate: true}
    ✓ should match a/b/c with **/**/**
    ✓ should match a/b/c with **/**/** and {dot: true}
    ✓ should match a/b/c with **/**/** and {nonegate: true}
    ✓ should match a/b/c.md with **/**/**
    ✓ should match a/b/c.md with **/**/** and {dot: true}
    ✓ should match a/b/c.md with **/**/** and {nonegate: true}
    ✓ should match a/b/c/ with **/**/**
    ✓ should match a/b/c/ with **/**/** and {dot: true}
    ✓ should match a/b/c/ with **/**/** and {nonegate: true}
    ✓ should match a/b/c/d with **/**/**
    ✓ should match a/b/c/d with **/**/** and {dot: true}
    ✓ should match a/b/c/d with **/**/** and {nonegate: true}
    ✓ should match a/b/c/d/ with **/**/**
    ✓ should match a/b/c/d/ with **/**/** and {dot: true}
    ✓ should match a/b/c/d/ with **/**/** and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with **/**/**
    ✓ should match a/b/c/d/e/f/z.js with **/**/** and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with **/**/** and {nonegate: true}
    ✓ should match a/b/c/z.js with **/**/**
    ✓ should match a/b/c/z.js with **/**/** and {dot: true}
    ✓ should match a/b/c/z.js with **/**/** and {nonegate: true}
    ✓ should match a/bb with **/**/**
    ✓ should match a/bb with **/**/** and {dot: true}
    ✓ should match a/bb with **/**/** and {nonegate: true}
    ✓ should match a/cb with **/**/**
    ✓ should match a/cb with **/**/** and {dot: true}
    ✓ should match a/cb with **/**/** and {nonegate: true}
    ✓ should match abbbz with **/**/**
    ✓ should match abbbz with **/**/** and {dot: true}
    ✓ should match abbbz with **/**/** and {nonegate: true}
    ✓ should match abc with **/**/**
    ✓ should match abc with **/**/** and {dot: true}
    ✓ should match abc with **/**/** and {nonegate: true}
    ✓ should match abd with **/**/**
    ✓ should match abd with **/**/** and {dot: true}
    ✓ should match abd with **/**/** and {nonegate: true}
    ✓ should match z.js with **/**/**
    ✓ should match z.js with **/**/** and {dot: true}
    ✓ should match z.js with **/**/** and {nonegate: true}
    ✓ should match za.js with **/**/**
    ✓ should match za.js with **/**/** and {dot: true}
    ✓ should match za.js with **/**/** and {nonegate: true}
    ✓ should match !a.js with **/**/**
    ✓ should match !a.js with **/**/** and {dot: true}
    ✓ should match !a.js with **/**/** and {nonegate: true}
    ✓ should match !a/b with **/**/**
    ✓ should match !a/b with **/**/** and {dot: true}
    ✓ should match !a/b with **/**/** and {nonegate: true}
    ✓ should match !a/b/ with **/**/**
    ✓ should match !a/b/ with **/**/** and {dot: true}
    ✓ should match !a/b/ with **/**/** and {nonegate: true}
    ✓ should match !a/b/c with **/**/**
    ✓ should match !a/b/c with **/**/** and {dot: true}
    ✓ should match !a/b/c with **/**/** and {nonegate: true}
    ✓ should match !a/b/c/ with **/**/**
    ✓ should match !a/b/c/ with **/**/** and {dot: true}
    ✓ should match !a/b/c/ with **/**/** and {nonegate: true}
    ✓ should match !a/!b with **/**/**
    ✓ should match !a/!b with **/**/** and {dot: true}
    ✓ should match !a/!b with **/**/** and {nonegate: true}
    ✓ should match !a/!b/c with **/**/**
    ✓ should match !a/!b/c with **/**/** and {dot: true}
    ✓ should match !a/!b/c with **/**/** and {nonegate: true}
    ✓ should match !a/!b/c/d with **/**/**
    ✓ should match !a/!b/c/d with **/**/** and {dot: true}
    ✓ should match !a/!b/c/d with **/**/** and {nonegate: true}
    ✓ should match !a/b/.c.md with **/**/**
    ✓ should match !a/b/.c.md with **/**/** and {dot: true}
    ✓ should match !a/b/.c.md with **/**/** and {nonegate: true}
    ✓ should match /a/ with **/**/**
    ✓ should match /a/ with **/**/** and {dot: true}
    ✓ should match /a/ with **/**/** and {nonegate: true}
    ✓ should match /a/b with **/**/**
    ✓ should match /a/b with **/**/** and {dot: true}
    ✓ should match /a/b with **/**/** and {nonegate: true}
    ✓ should match /a/cb with **/**/**
    ✓ should match /a/cb with **/**/** and {dot: true}
    ✓ should match /a/cb with **/**/** and {nonegate: true}
    ✓ should match /a/bb with **/**/**
    ✓ should match /a/bb with **/**/** and {dot: true}
    ✓ should match /a/bb with **/**/** and {nonegate: true}
    ✓ should match /a/b/c with **/**/**
    ✓ should match /a/b/c with **/**/** and {dot: true}
    ✓ should match /a/b/c with **/**/** and {nonegate: true}
    ✓ should match /a/b/c/ with **/**/**
    ✓ should match /a/b/c/ with **/**/** and {dot: true}
    ✓ should match /a/b/c/ with **/**/** and {nonegate: true}
    ✓ should match /a/b/c/d with **/**/**
    ✓ should match /a/b/c/d with **/**/** and {dot: true}
    ✓ should match /a/b/c/d with **/**/** and {nonegate: true}
    ✓ should match /a/b/c/d/ with **/**/**
    ✓ should match /a/b/c/d/ with **/**/** and {dot: true}
    ✓ should match /a/b/c/d/ with **/**/** and {nonegate: true}
    ✓ should match . with **/**/**
    ✓ should match . with **/**/** and {dot: true}
    ✓ should match . with **/**/** and {nonegate: true}
    ✓ should match ./ with **/**/**
    ✓ should match ./ with **/**/** and {dot: true}
    ✓ should match ./ with **/**/** and {nonegate: true}
    ✓ should match .. with **/**/**
    ✓ should match .. with **/**/** and {dot: true}
    ✓ should match .. with **/**/** and {nonegate: true}
    ✓ should match ../c with **/**/**
    ✓ should match ../c with **/**/** and {dot: true}
    ✓ should match ../c with **/**/** and {nonegate: true}
    ✓ should match ../c with **/**/**
    ✓ should match ../c with **/**/** and {dot: true}
    ✓ should match ../c with **/**/** and {nonegate: true}
    ✓ should match ./../c with **/**/**
    ✓ should match ./../c with **/**/** and {dot: true}
    ✓ should match ./../c with **/**/** and {nonegate: true}
    ✓ should match ./a/../c with **/**/**
    ✓ should match ./a/../c with **/**/** and {dot: true}
    ✓ should match ./a/../c with **/**/** and {nonegate: true}
    ✓ should match /.. with **/**/**
    ✓ should match /.. with **/**/** and {dot: true}
    ✓ should match /.. with **/**/** and {nonegate: true}
    ✓ should match /../c with **/**/**
    ✓ should match /../c with **/**/** and {dot: true}
    ✓ should match /../c with **/**/** and {nonegate: true}
    ✓ should match /../.c with **/**/**
    ✓ should match /../.c with **/**/** and {dot: true}
    ✓ should match /../.c with **/**/** and {nonegate: true}
    ✓ should match /../.c/ with **/**/**
    ✓ should match /../.c/ with **/**/** and {dot: true}
    ✓ should match /../.c/ with **/**/** and {nonegate: true}
    ✓ should match /a/../c with **/**/**
    ✓ should match /a/../c with **/**/** and {dot: true}
    ✓ should match /a/../c with **/**/** and {nonegate: true}
    ✓ should match a/../c with **/**/**
    ✓ should match a/../c with **/**/** and {dot: true}
    ✓ should match a/../c with **/**/** and {nonegate: true}
    ✓ should match ../.b/.c with **/**/**
    ✓ should match ../.b/.c with **/**/** and {dot: true}
    ✓ should match ../.b/.c with **/**/** and {nonegate: true}
    ✓ should match ../b/.c with **/**/**
    ✓ should match ../b/.c with **/**/** and {dot: true}
    ✓ should match ../b/.c with **/**/** and {nonegate: true}
    ✓ should match ./.b/.c with **/**/**
    ✓ should match ./.b/.c with **/**/** and {dot: true}
    ✓ should match ./.b/.c with **/**/** and {nonegate: true}
    ✓ should match ./b/.c with **/**/**
    ✓ should match ./b/.c with **/**/** and {dot: true}
    ✓ should match ./b/.c with **/**/** and {nonegate: true}
    ✓ should match .b with **/**/**
    ✓ should match .b with **/**/** and {dot: true}
    ✓ should match .b with **/**/** and {nonegate: true}
    ✓ should match .b.c with **/**/**
    ✓ should match .b.c with **/**/** and {dot: true}
    ✓ should match .b.c with **/**/** and {nonegate: true}
    ✓ should match .b.c/ with **/**/**
    ✓ should match .b.c/ with **/**/** and {dot: true}
    ✓ should match .b.c/ with **/**/** and {nonegate: true}
    ✓ should match .b/ with **/**/**
    ✓ should match .b/ with **/**/** and {dot: true}
    ✓ should match .b/ with **/**/** and {nonegate: true}
    ✓ should match .b/.c with **/**/**
    ✓ should match .b/.c with **/**/** and {dot: true}
    ✓ should match .b/.c with **/**/** and {nonegate: true}
    ✓ should match .b/c with **/**/**
    ✓ should match .b/c with **/**/** and {dot: true}
    ✓ should match .b/c with **/**/** and {nonegate: true}
    ✓ should match b/.c with **/**/**
    ✓ should match b/.c with **/**/** and {dot: true}
    ✓ should match b/.c with **/**/** and {nonegate: true}
    ✓ should match b/.c/ with **/**/**
    ✓ should match b/.c/ with **/**/** and {dot: true}
    ✓ should match b/.c/ with **/**/** and {nonegate: true}
    ✓ should match a/+b/c with **/**/**
    ✓ should match a/+b/c with **/**/** and {dot: true}
    ✓ should match a/+b/c with **/**/** and {nonegate: true}
    ✓ should match +a/+b/c with **/**/**
    ✓ should match +a/+b/c with **/**/** and {dot: true}
    ✓ should match +a/+b/c with **/**/** and {nonegate: true}
    ✓ should match a (foo) with **/**/**
    ✓ should match a (foo) with **/**/** and {dot: true}
    ✓ should match a (foo) with **/**/** and {nonegate: true}
    ✓ should match a (foo)/(bar) with **/**/**
    ✓ should match a (foo)/(bar) with **/**/** and {dot: true}
    ✓ should match a (foo)/(bar) with **/**/** and {nonegate: true}
    ✓ should match a/b/c (1) with **/**/**
    ✓ should match a/b/c (1) with **/**/** and {dot: true}
    ✓ should match a/b/c (1) with **/**/** and {nonegate: true}
    ✓ should match a/b (2)/c (1) with **/**/**
    ✓ should match a/b (2)/c (1) with **/**/** and {dot: true}
    ✓ should match a/b (2)/c (1) with **/**/** and {nonegate: true}
    ✓ should match a/b/c [def] with **/**/**
    ✓ should match a/b/c [def] with **/**/** and {dot: true}
    ✓ should match a/b/c [def] with **/**/** and {nonegate: true}
    ✓ should match a with **/*.md
    ✓ should match a with **/*.md and {dot: true}
    ✓ should match a with **/*.md and {nonegate: true}
    ✓ should match a.md with **/*.md
    ✓ should match a.md with **/*.md and {dot: true}
    ✓ should match a.md with **/*.md and {nonegate: true}
    ✓ should match a.js with **/*.md
    ✓ should match a.js with **/*.md and {dot: true}
    ✓ should match a.js with **/*.md and {nonegate: true}
    ✓ should match a/ with **/*.md
    ✓ should match a/ with **/*.md and {dot: true}
    ✓ should match a/ with **/*.md and {nonegate: true}
    ✓ should match a/b with **/*.md
    ✓ should match a/b with **/*.md and {dot: true}
    ✓ should match a/b with **/*.md and {nonegate: true}
    ✓ should match a/b/.c.md with **/*.md
    ✓ should match a/b/.c.md with **/*.md and {dot: true}
    ✓ should match a/b/.c.md with **/*.md and {nonegate: true}
    ✓ should match a/b/c with **/*.md
    ✓ should match a/b/c with **/*.md and {dot: true}
    ✓ should match a/b/c with **/*.md and {nonegate: true}
    ✓ should match a/b/c.md with **/*.md
    ✓ should match a/b/c.md with **/*.md and {dot: true}
    ✓ should match a/b/c.md with **/*.md and {nonegate: true}
    ✓ should match a/b/c/ with **/*.md
    ✓ should match a/b/c/ with **/*.md and {dot: true}
    ✓ should match a/b/c/ with **/*.md and {nonegate: true}
    ✓ should match a/b/c/d with **/*.md
    ✓ should match a/b/c/d with **/*.md and {dot: true}
    ✓ should match a/b/c/d with **/*.md and {nonegate: true}
    ✓ should match a/b/c/d/ with **/*.md
    ✓ should match a/b/c/d/ with **/*.md and {dot: true}
    ✓ should match a/b/c/d/ with **/*.md and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with **/*.md
    ✓ should match a/b/c/d/e/f/z.js with **/*.md and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with **/*.md and {nonegate: true}
    ✓ should match a/b/c/z.js with **/*.md
    ✓ should match a/b/c/z.js with **/*.md and {dot: true}
    ✓ should match a/b/c/z.js with **/*.md and {nonegate: true}
    ✓ should match a/bb with **/*.md
    ✓ should match a/bb with **/*.md and {dot: true}
    ✓ should match a/bb with **/*.md and {nonegate: true}
    ✓ should match a/cb with **/*.md
    ✓ should match a/cb with **/*.md and {dot: true}
    ✓ should match a/cb with **/*.md and {nonegate: true}
    ✓ should match abbbz with **/*.md
    ✓ should match abbbz with **/*.md and {dot: true}
    ✓ should match abbbz with **/*.md and {nonegate: true}
    ✓ should match abc with **/*.md
    ✓ should match abc with **/*.md and {dot: true}
    ✓ should match abc with **/*.md and {nonegate: true}
    ✓ should match abd with **/*.md
    ✓ should match abd with **/*.md and {dot: true}
    ✓ should match abd with **/*.md and {nonegate: true}
    ✓ should match z.js with **/*.md
    ✓ should match z.js with **/*.md and {dot: true}
    ✓ should match z.js with **/*.md and {nonegate: true}
    ✓ should match za.js with **/*.md
    ✓ should match za.js with **/*.md and {dot: true}
    ✓ should match za.js with **/*.md and {nonegate: true}
    ✓ should match !a.js with **/*.md
    ✓ should match !a.js with **/*.md and {dot: true}
    ✓ should match !a.js with **/*.md and {nonegate: true}
    ✓ should match !a/b with **/*.md
    ✓ should match !a/b with **/*.md and {dot: true}
    ✓ should match !a/b with **/*.md and {nonegate: true}
    ✓ should match !a/b/ with **/*.md
    ✓ should match !a/b/ with **/*.md and {dot: true}
    ✓ should match !a/b/ with **/*.md and {nonegate: true}
    ✓ should match !a/b/c with **/*.md
    ✓ should match !a/b/c with **/*.md and {dot: true}
    ✓ should match !a/b/c with **/*.md and {nonegate: true}
    ✓ should match !a/b/c/ with **/*.md
    ✓ should match !a/b/c/ with **/*.md and {dot: true}
    ✓ should match !a/b/c/ with **/*.md and {nonegate: true}
    ✓ should match !a/!b with **/*.md
    ✓ should match !a/!b with **/*.md and {dot: true}
    ✓ should match !a/!b with **/*.md and {nonegate: true}
    ✓ should match !a/!b/c with **/*.md
    ✓ should match !a/!b/c with **/*.md and {dot: true}
    ✓ should match !a/!b/c with **/*.md and {nonegate: true}
    ✓ should match !a/!b/c/d with **/*.md
    ✓ should match !a/!b/c/d with **/*.md and {dot: true}
    ✓ should match !a/!b/c/d with **/*.md and {nonegate: true}
    ✓ should match !a/b/.c.md with **/*.md
    ✓ should match !a/b/.c.md with **/*.md and {dot: true}
    ✓ should match !a/b/.c.md with **/*.md and {nonegate: true}
    ✓ should match /a/ with **/*.md
    ✓ should match /a/ with **/*.md and {dot: true}
    ✓ should match /a/ with **/*.md and {nonegate: true}
    ✓ should match /a/b with **/*.md
    ✓ should match /a/b with **/*.md and {dot: true}
    ✓ should match /a/b with **/*.md and {nonegate: true}
    ✓ should match /a/cb with **/*.md
    ✓ should match /a/cb with **/*.md and {dot: true}
    ✓ should match /a/cb with **/*.md and {nonegate: true}
    ✓ should match /a/bb with **/*.md
    ✓ should match /a/bb with **/*.md and {dot: true}
    ✓ should match /a/bb with **/*.md and {nonegate: true}
    ✓ should match /a/b/c with **/*.md
    ✓ should match /a/b/c with **/*.md and {dot: true}
    ✓ should match /a/b/c with **/*.md and {nonegate: true}
    ✓ should match /a/b/c/ with **/*.md
    ✓ should match /a/b/c/ with **/*.md and {dot: true}
    ✓ should match /a/b/c/ with **/*.md and {nonegate: true}
    ✓ should match /a/b/c/d with **/*.md
    ✓ should match /a/b/c/d with **/*.md and {dot: true}
    ✓ should match /a/b/c/d with **/*.md and {nonegate: true}
    ✓ should match /a/b/c/d/ with **/*.md
    ✓ should match /a/b/c/d/ with **/*.md and {dot: true}
    ✓ should match /a/b/c/d/ with **/*.md and {nonegate: true}
    ✓ should match . with **/*.md
    ✓ should match . with **/*.md and {dot: true}
    ✓ should match . with **/*.md and {nonegate: true}
    ✓ should match ./ with **/*.md
    ✓ should match ./ with **/*.md and {dot: true}
    ✓ should match ./ with **/*.md and {nonegate: true}
    ✓ should match .. with **/*.md
    ✓ should match .. with **/*.md and {dot: true}
    ✓ should match .. with **/*.md and {nonegate: true}
    ✓ should match ../c with **/*.md
    ✓ should match ../c with **/*.md and {dot: true}
    ✓ should match ../c with **/*.md and {nonegate: true}
    ✓ should match ../c with **/*.md
    ✓ should match ../c with **/*.md and {dot: true}
    ✓ should match ../c with **/*.md and {nonegate: true}
    ✓ should match ./../c with **/*.md
    ✓ should match ./../c with **/*.md and {dot: true}
    ✓ should match ./../c with **/*.md and {nonegate: true}
    ✓ should match ./a/../c with **/*.md
    ✓ should match ./a/../c with **/*.md and {dot: true}
    ✓ should match ./a/../c with **/*.md and {nonegate: true}
    ✓ should match /.. with **/*.md
    ✓ should match /.. with **/*.md and {dot: true}
    ✓ should match /.. with **/*.md and {nonegate: true}
    ✓ should match /../c with **/*.md
    ✓ should match /../c with **/*.md and {dot: true}
    ✓ should match /../c with **/*.md and {nonegate: true}
    ✓ should match /../.c with **/*.md
    ✓ should match /../.c with **/*.md and {dot: true}
    ✓ should match /../.c with **/*.md and {nonegate: true}
    ✓ should match /../.c/ with **/*.md
    ✓ should match /../.c/ with **/*.md and {dot: true}
    ✓ should match /../.c/ with **/*.md and {nonegate: true}
    ✓ should match /a/../c with **/*.md
    ✓ should match /a/../c with **/*.md and {dot: true}
    ✓ should match /a/../c with **/*.md and {nonegate: true}
    ✓ should match a/../c with **/*.md
    ✓ should match a/../c with **/*.md and {dot: true}
    ✓ should match a/../c with **/*.md and {nonegate: true}
    ✓ should match ../.b/.c with **/*.md
    ✓ should match ../.b/.c with **/*.md and {dot: true}
    ✓ should match ../.b/.c with **/*.md and {nonegate: true}
    ✓ should match ../b/.c with **/*.md
    ✓ should match ../b/.c with **/*.md and {dot: true}
    ✓ should match ../b/.c with **/*.md and {nonegate: true}
    ✓ should match ./.b/.c with **/*.md
    ✓ should match ./.b/.c with **/*.md and {dot: true}
    ✓ should match ./.b/.c with **/*.md and {nonegate: true}
    ✓ should match ./b/.c with **/*.md
    ✓ should match ./b/.c with **/*.md and {dot: true}
    ✓ should match ./b/.c with **/*.md and {nonegate: true}
    ✓ should match .b with **/*.md
    ✓ should match .b with **/*.md and {dot: true}
    ✓ should match .b with **/*.md and {nonegate: true}
    ✓ should match .b.c with **/*.md
    ✓ should match .b.c with **/*.md and {dot: true}
    ✓ should match .b.c with **/*.md and {nonegate: true}
    ✓ should match .b.c/ with **/*.md
    ✓ should match .b.c/ with **/*.md and {dot: true}
    ✓ should match .b.c/ with **/*.md and {nonegate: true}
    ✓ should match .b/ with **/*.md
    ✓ should match .b/ with **/*.md and {dot: true}
    ✓ should match .b/ with **/*.md and {nonegate: true}
    ✓ should match .b/.c with **/*.md
    ✓ should match .b/.c with **/*.md and {dot: true}
    ✓ should match .b/.c with **/*.md and {nonegate: true}
    ✓ should match .b/c with **/*.md
    ✓ should match .b/c with **/*.md and {dot: true}
    ✓ should match .b/c with **/*.md and {nonegate: true}
    ✓ should match b/.c with **/*.md
    ✓ should match b/.c with **/*.md and {dot: true}
    ✓ should match b/.c with **/*.md and {nonegate: true}
    ✓ should match b/.c/ with **/*.md
    ✓ should match b/.c/ with **/*.md and {dot: true}
    ✓ should match b/.c/ with **/*.md and {nonegate: true}
    ✓ should match a/+b/c with **/*.md
    ✓ should match a/+b/c with **/*.md and {dot: true}
    ✓ should match a/+b/c with **/*.md and {nonegate: true}
    ✓ should match +a/+b/c with **/*.md
    ✓ should match +a/+b/c with **/*.md and {dot: true}
    ✓ should match +a/+b/c with **/*.md and {nonegate: true}
    ✓ should match a (foo) with **/*.md
    ✓ should match a (foo) with **/*.md and {dot: true}
    ✓ should match a (foo) with **/*.md and {nonegate: true}
    ✓ should match a (foo)/(bar) with **/*.md
    ✓ should match a (foo)/(bar) with **/*.md and {dot: true}
    ✓ should match a (foo)/(bar) with **/*.md and {nonegate: true}
    ✓ should match a/b/c (1) with **/*.md
    ✓ should match a/b/c (1) with **/*.md and {dot: true}
    ✓ should match a/b/c (1) with **/*.md and {nonegate: true}
    ✓ should match a/b (2)/c (1) with **/*.md
    ✓ should match a/b (2)/c (1) with **/*.md and {dot: true}
    ✓ should match a/b (2)/c (1) with **/*.md and {nonegate: true}
    ✓ should match a/b/c [def] with **/*.md
    ✓ should match a/b/c [def] with **/*.md and {dot: true}
    ✓ should match a/b/c [def] with **/*.md and {nonegate: true}
    ✓ should match a with **/*?.md
    ✓ should match a with **/*?.md and {dot: true}
    ✓ should match a with **/*?.md and {nonegate: true}
    ✓ should match a.md with **/*?.md
    ✓ should match a.md with **/*?.md and {dot: true}
    ✓ should match a.md with **/*?.md and {nonegate: true}
    ✓ should match a.js with **/*?.md
    ✓ should match a.js with **/*?.md and {dot: true}
    ✓ should match a.js with **/*?.md and {nonegate: true}
    ✓ should match a/ with **/*?.md
    ✓ should match a/ with **/*?.md and {dot: true}
    ✓ should match a/ with **/*?.md and {nonegate: true}
    ✓ should match a/b with **/*?.md
    ✓ should match a/b with **/*?.md and {dot: true}
    ✓ should match a/b with **/*?.md and {nonegate: true}
    ✓ should match a/b/.c.md with **/*?.md
    ✓ should match a/b/.c.md with **/*?.md and {dot: true}
    ✓ should match a/b/.c.md with **/*?.md and {nonegate: true}
    ✓ should match a/b/c with **/*?.md
    ✓ should match a/b/c with **/*?.md and {dot: true}
    ✓ should match a/b/c with **/*?.md and {nonegate: true}
    ✓ should match a/b/c.md with **/*?.md
    ✓ should match a/b/c.md with **/*?.md and {dot: true}
    ✓ should match a/b/c.md with **/*?.md and {nonegate: true}
    ✓ should match a/b/c/ with **/*?.md
    ✓ should match a/b/c/ with **/*?.md and {dot: true}
    ✓ should match a/b/c/ with **/*?.md and {nonegate: true}
    ✓ should match a/b/c/d with **/*?.md
    ✓ should match a/b/c/d with **/*?.md and {dot: true}
    ✓ should match a/b/c/d with **/*?.md and {nonegate: true}
    ✓ should match a/b/c/d/ with **/*?.md
    ✓ should match a/b/c/d/ with **/*?.md and {dot: true}
    ✓ should match a/b/c/d/ with **/*?.md and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with **/*?.md
    ✓ should match a/b/c/d/e/f/z.js with **/*?.md and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with **/*?.md and {nonegate: true}
    ✓ should match a/b/c/z.js with **/*?.md
    ✓ should match a/b/c/z.js with **/*?.md and {dot: true}
    ✓ should match a/b/c/z.js with **/*?.md and {nonegate: true}
    ✓ should match a/bb with **/*?.md
    ✓ should match a/bb with **/*?.md and {dot: true}
    ✓ should match a/bb with **/*?.md and {nonegate: true}
    ✓ should match a/cb with **/*?.md
    ✓ should match a/cb with **/*?.md and {dot: true}
    ✓ should match a/cb with **/*?.md and {nonegate: true}
    ✓ should match abbbz with **/*?.md
    ✓ should match abbbz with **/*?.md and {dot: true}
    ✓ should match abbbz with **/*?.md and {nonegate: true}
    ✓ should match abc with **/*?.md
    ✓ should match abc with **/*?.md and {dot: true}
    ✓ should match abc with **/*?.md and {nonegate: true}
    ✓ should match abd with **/*?.md
    ✓ should match abd with **/*?.md and {dot: true}
    ✓ should match abd with **/*?.md and {nonegate: true}
    ✓ should match z.js with **/*?.md
    ✓ should match z.js with **/*?.md and {dot: true}
    ✓ should match z.js with **/*?.md and {nonegate: true}
    ✓ should match za.js with **/*?.md
    ✓ should match za.js with **/*?.md and {dot: true}
    ✓ should match za.js with **/*?.md and {nonegate: true}
    ✓ should match !a.js with **/*?.md
    ✓ should match !a.js with **/*?.md and {dot: true}
    ✓ should match !a.js with **/*?.md and {nonegate: true}
    ✓ should match !a/b with **/*?.md
    ✓ should match !a/b with **/*?.md and {dot: true}
    ✓ should match !a/b with **/*?.md and {nonegate: true}
    ✓ should match !a/b/ with **/*?.md
    ✓ should match !a/b/ with **/*?.md and {dot: true}
    ✓ should match !a/b/ with **/*?.md and {nonegate: true}
    ✓ should match !a/b/c with **/*?.md
    ✓ should match !a/b/c with **/*?.md and {dot: true}
    ✓ should match !a/b/c with **/*?.md and {nonegate: true}
    ✓ should match !a/b/c/ with **/*?.md
    ✓ should match !a/b/c/ with **/*?.md and {dot: true}
    ✓ should match !a/b/c/ with **/*?.md and {nonegate: true}
    ✓ should match !a/!b with **/*?.md
    ✓ should match !a/!b with **/*?.md and {dot: true}
    ✓ should match !a/!b with **/*?.md and {nonegate: true}
    ✓ should match !a/!b/c with **/*?.md
    ✓ should match !a/!b/c with **/*?.md and {dot: true}
    ✓ should match !a/!b/c with **/*?.md and {nonegate: true}
    ✓ should match !a/!b/c/d with **/*?.md
    ✓ should match !a/!b/c/d with **/*?.md and {dot: true}
    ✓ should match !a/!b/c/d with **/*?.md and {nonegate: true}
    ✓ should match !a/b/.c.md with **/*?.md
    ✓ should match !a/b/.c.md with **/*?.md and {dot: true}
    ✓ should match !a/b/.c.md with **/*?.md and {nonegate: true}
    ✓ should match /a/ with **/*?.md
    ✓ should match /a/ with **/*?.md and {dot: true}
    ✓ should match /a/ with **/*?.md and {nonegate: true}
    ✓ should match /a/b with **/*?.md
    ✓ should match /a/b with **/*?.md and {dot: true}
    ✓ should match /a/b with **/*?.md and {nonegate: true}
    ✓ should match /a/cb with **/*?.md
    ✓ should match /a/cb with **/*?.md and {dot: true}
    ✓ should match /a/cb with **/*?.md and {nonegate: true}
    ✓ should match /a/bb with **/*?.md
    ✓ should match /a/bb with **/*?.md and {dot: true}
    ✓ should match /a/bb with **/*?.md and {nonegate: true}
    ✓ should match /a/b/c with **/*?.md
    ✓ should match /a/b/c with **/*?.md and {dot: true}
    ✓ should match /a/b/c with **/*?.md and {nonegate: true}
    ✓ should match /a/b/c/ with **/*?.md
    ✓ should match /a/b/c/ with **/*?.md and {dot: true}
    ✓ should match /a/b/c/ with **/*?.md and {nonegate: true}
    ✓ should match /a/b/c/d with **/*?.md
    ✓ should match /a/b/c/d with **/*?.md and {dot: true}
    ✓ should match /a/b/c/d with **/*?.md and {nonegate: true}
    ✓ should match /a/b/c/d/ with **/*?.md
    ✓ should match /a/b/c/d/ with **/*?.md and {dot: true}
    ✓ should match /a/b/c/d/ with **/*?.md and {nonegate: true}
    ✓ should match . with **/*?.md
    ✓ should match . with **/*?.md and {dot: true}
    ✓ should match . with **/*?.md and {nonegate: true}
    ✓ should match ./ with **/*?.md
    ✓ should match ./ with **/*?.md and {dot: true}
    ✓ should match ./ with **/*?.md and {nonegate: true}
    ✓ should match .. with **/*?.md
    ✓ should match .. with **/*?.md and {dot: true}
    ✓ should match .. with **/*?.md and {nonegate: true}
    ✓ should match ../c with **/*?.md
    ✓ should match ../c with **/*?.md and {dot: true}
    ✓ should match ../c with **/*?.md and {nonegate: true}
    ✓ should match ../c with **/*?.md
    ✓ should match ../c with **/*?.md and {dot: true}
    ✓ should match ../c with **/*?.md and {nonegate: true}
    ✓ should match ./../c with **/*?.md
    ✓ should match ./../c with **/*?.md and {dot: true}
    ✓ should match ./../c with **/*?.md and {nonegate: true}
    ✓ should match ./a/../c with **/*?.md
    ✓ should match ./a/../c with **/*?.md and {dot: true}
    ✓ should match ./a/../c with **/*?.md and {nonegate: true}
    ✓ should match /.. with **/*?.md
    ✓ should match /.. with **/*?.md and {dot: true}
    ✓ should match /.. with **/*?.md and {nonegate: true}
    ✓ should match /../c with **/*?.md
    ✓ should match /../c with **/*?.md and {dot: true}
    ✓ should match /../c with **/*?.md and {nonegate: true}
    ✓ should match /../.c with **/*?.md
    ✓ should match /../.c with **/*?.md and {dot: true}
    ✓ should match /../.c with **/*?.md and {nonegate: true}
    ✓ should match /../.c/ with **/*?.md
    ✓ should match /../.c/ with **/*?.md and {dot: true}
    ✓ should match /../.c/ with **/*?.md and {nonegate: true}
    ✓ should match /a/../c with **/*?.md
    ✓ should match /a/../c with **/*?.md and {dot: true}
    ✓ should match /a/../c with **/*?.md and {nonegate: true}
    ✓ should match a/../c with **/*?.md
    ✓ should match a/../c with **/*?.md and {dot: true}
    ✓ should match a/../c with **/*?.md and {nonegate: true}
    ✓ should match ../.b/.c with **/*?.md
    ✓ should match ../.b/.c with **/*?.md and {dot: true}
    ✓ should match ../.b/.c with **/*?.md and {nonegate: true}
    ✓ should match ../b/.c with **/*?.md
    ✓ should match ../b/.c with **/*?.md and {dot: true}
    ✓ should match ../b/.c with **/*?.md and {nonegate: true}
    ✓ should match ./.b/.c with **/*?.md
    ✓ should match ./.b/.c with **/*?.md and {dot: true}
    ✓ should match ./.b/.c with **/*?.md and {nonegate: true}
    ✓ should match ./b/.c with **/*?.md
    ✓ should match ./b/.c with **/*?.md and {dot: true}
    ✓ should match ./b/.c with **/*?.md and {nonegate: true}
    ✓ should match .b with **/*?.md
    ✓ should match .b with **/*?.md and {dot: true}
    ✓ should match .b with **/*?.md and {nonegate: true}
    ✓ should match .b.c with **/*?.md
    ✓ should match .b.c with **/*?.md and {dot: true}
    ✓ should match .b.c with **/*?.md and {nonegate: true}
    ✓ should match .b.c/ with **/*?.md
    ✓ should match .b.c/ with **/*?.md and {dot: true}
    ✓ should match .b.c/ with **/*?.md and {nonegate: true}
    ✓ should match .b/ with **/*?.md
    ✓ should match .b/ with **/*?.md and {dot: true}
    ✓ should match .b/ with **/*?.md and {nonegate: true}
    ✓ should match .b/.c with **/*?.md
    ✓ should match .b/.c with **/*?.md and {dot: true}
    ✓ should match .b/.c with **/*?.md and {nonegate: true}
    ✓ should match .b/c with **/*?.md
    ✓ should match .b/c with **/*?.md and {dot: true}
    ✓ should match .b/c with **/*?.md and {nonegate: true}
    ✓ should match b/.c with **/*?.md
    ✓ should match b/.c with **/*?.md and {dot: true}
    ✓ should match b/.c with **/*?.md and {nonegate: true}
    ✓ should match b/.c/ with **/*?.md
    ✓ should match b/.c/ with **/*?.md and {dot: true}
    ✓ should match b/.c/ with **/*?.md and {nonegate: true}
    ✓ should match a/+b/c with **/*?.md
    ✓ should match a/+b/c with **/*?.md and {dot: true}
    ✓ should match a/+b/c with **/*?.md and {nonegate: true}
    ✓ should match +a/+b/c with **/*?.md
    ✓ should match +a/+b/c with **/*?.md and {dot: true}
    ✓ should match +a/+b/c with **/*?.md and {nonegate: true}
    ✓ should match a (foo) with **/*?.md
    ✓ should match a (foo) with **/*?.md and {dot: true}
    ✓ should match a (foo) with **/*?.md and {nonegate: true}
    ✓ should match a (foo)/(bar) with **/*?.md
    ✓ should match a (foo)/(bar) with **/*?.md and {dot: true}
    ✓ should match a (foo)/(bar) with **/*?.md and {nonegate: true}
    ✓ should match a/b/c (1) with **/*?.md
    ✓ should match a/b/c (1) with **/*?.md and {dot: true}
    ✓ should match a/b/c (1) with **/*?.md and {nonegate: true}
    ✓ should match a/b (2)/c (1) with **/*?.md
    ✓ should match a/b (2)/c (1) with **/*?.md and {dot: true}
    ✓ should match a/b (2)/c (1) with **/*?.md and {nonegate: true}
    ✓ should match a/b/c [def] with **/*?.md
    ✓ should match a/b/c [def] with **/*?.md and {dot: true}
    ✓ should match a/b/c [def] with **/*?.md and {nonegate: true}
    ✓ should match a with **/.?.md
    ✓ should match a with **/.?.md and {dot: true}
    ✓ should match a with **/.?.md and {nonegate: true}
    ✓ should match a.md with **/.?.md
    ✓ should match a.md with **/.?.md and {dot: true}
    ✓ should match a.md with **/.?.md and {nonegate: true}
    ✓ should match a.js with **/.?.md
    ✓ should match a.js with **/.?.md and {dot: true}
    ✓ should match a.js with **/.?.md and {nonegate: true}
    ✓ should match a/ with **/.?.md
    ✓ should match a/ with **/.?.md and {dot: true}
    ✓ should match a/ with **/.?.md and {nonegate: true}
    ✓ should match a/b with **/.?.md
    ✓ should match a/b with **/.?.md and {dot: true}
    ✓ should match a/b with **/.?.md and {nonegate: true}
    ✓ should match a/b/.c.md with **/.?.md
    ✓ should match a/b/.c.md with **/.?.md and {dot: true}
    ✓ should match a/b/.c.md with **/.?.md and {nonegate: true}
    ✓ should match a/b/c with **/.?.md
    ✓ should match a/b/c with **/.?.md and {dot: true}
    ✓ should match a/b/c with **/.?.md and {nonegate: true}
    ✓ should match a/b/c.md with **/.?.md
    ✓ should match a/b/c.md with **/.?.md and {dot: true}
    ✓ should match a/b/c.md with **/.?.md and {nonegate: true}
    ✓ should match a/b/c/ with **/.?.md
    ✓ should match a/b/c/ with **/.?.md and {dot: true}
    ✓ should match a/b/c/ with **/.?.md and {nonegate: true}
    ✓ should match a/b/c/d with **/.?.md
    ✓ should match a/b/c/d with **/.?.md and {dot: true}
    ✓ should match a/b/c/d with **/.?.md and {nonegate: true}
    ✓ should match a/b/c/d/ with **/.?.md
    ✓ should match a/b/c/d/ with **/.?.md and {dot: true}
    ✓ should match a/b/c/d/ with **/.?.md and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with **/.?.md
    ✓ should match a/b/c/d/e/f/z.js with **/.?.md and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with **/.?.md and {nonegate: true}
    ✓ should match a/b/c/z.js with **/.?.md
    ✓ should match a/b/c/z.js with **/.?.md and {dot: true}
    ✓ should match a/b/c/z.js with **/.?.md and {nonegate: true}
    ✓ should match a/bb with **/.?.md
    ✓ should match a/bb with **/.?.md and {dot: true}
    ✓ should match a/bb with **/.?.md and {nonegate: true}
    ✓ should match a/cb with **/.?.md
    ✓ should match a/cb with **/.?.md and {dot: true}
    ✓ should match a/cb with **/.?.md and {nonegate: true}
    ✓ should match abbbz with **/.?.md
    ✓ should match abbbz with **/.?.md and {dot: true}
    ✓ should match abbbz with **/.?.md and {nonegate: true}
    ✓ should match abc with **/.?.md
    ✓ should match abc with **/.?.md and {dot: true}
    ✓ should match abc with **/.?.md and {nonegate: true}
    ✓ should match abd with **/.?.md
    ✓ should match abd with **/.?.md and {dot: true}
    ✓ should match abd with **/.?.md and {nonegate: true}
    ✓ should match z.js with **/.?.md
    ✓ should match z.js with **/.?.md and {dot: true}
    ✓ should match z.js with **/.?.md and {nonegate: true}
    ✓ should match za.js with **/.?.md
    ✓ should match za.js with **/.?.md and {dot: true}
    ✓ should match za.js with **/.?.md and {nonegate: true}
    ✓ should match !a.js with **/.?.md
    ✓ should match !a.js with **/.?.md and {dot: true}
    ✓ should match !a.js with **/.?.md and {nonegate: true}
    ✓ should match !a/b with **/.?.md
    ✓ should match !a/b with **/.?.md and {dot: true}
    ✓ should match !a/b with **/.?.md and {nonegate: true}
    ✓ should match !a/b/ with **/.?.md
    ✓ should match !a/b/ with **/.?.md and {dot: true}
    ✓ should match !a/b/ with **/.?.md and {nonegate: true}
    ✓ should match !a/b/c with **/.?.md
    ✓ should match !a/b/c with **/.?.md and {dot: true}
    ✓ should match !a/b/c with **/.?.md and {nonegate: true}
    ✓ should match !a/b/c/ with **/.?.md
    ✓ should match !a/b/c/ with **/.?.md and {dot: true}
    ✓ should match !a/b/c/ with **/.?.md and {nonegate: true}
    ✓ should match !a/!b with **/.?.md
    ✓ should match !a/!b with **/.?.md and {dot: true}
    ✓ should match !a/!b with **/.?.md and {nonegate: true}
    ✓ should match !a/!b/c with **/.?.md
    ✓ should match !a/!b/c with **/.?.md and {dot: true}
    ✓ should match !a/!b/c with **/.?.md and {nonegate: true}
    ✓ should match !a/!b/c/d with **/.?.md
    ✓ should match !a/!b/c/d with **/.?.md and {dot: true}
    ✓ should match !a/!b/c/d with **/.?.md and {nonegate: true}
    ✓ should match !a/b/.c.md with **/.?.md
    ✓ should match !a/b/.c.md with **/.?.md and {dot: true}
    ✓ should match !a/b/.c.md with **/.?.md and {nonegate: true}
    ✓ should match /a/ with **/.?.md
    ✓ should match /a/ with **/.?.md and {dot: true}
    ✓ should match /a/ with **/.?.md and {nonegate: true}
    ✓ should match /a/b with **/.?.md
    ✓ should match /a/b with **/.?.md and {dot: true}
    ✓ should match /a/b with **/.?.md and {nonegate: true}
    ✓ should match /a/cb with **/.?.md
    ✓ should match /a/cb with **/.?.md and {dot: true}
    ✓ should match /a/cb with **/.?.md and {nonegate: true}
    ✓ should match /a/bb with **/.?.md
    ✓ should match /a/bb with **/.?.md and {dot: true}
    ✓ should match /a/bb with **/.?.md and {nonegate: true}
    ✓ should match /a/b/c with **/.?.md
    ✓ should match /a/b/c with **/.?.md and {dot: true}
    ✓ should match /a/b/c with **/.?.md and {nonegate: true}
    ✓ should match /a/b/c/ with **/.?.md
    ✓ should match /a/b/c/ with **/.?.md and {dot: true}
    ✓ should match /a/b/c/ with **/.?.md and {nonegate: true}
    ✓ should match /a/b/c/d with **/.?.md
    ✓ should match /a/b/c/d with **/.?.md and {dot: true}
    ✓ should match /a/b/c/d with **/.?.md and {nonegate: true}
    ✓ should match /a/b/c/d/ with **/.?.md
    ✓ should match /a/b/c/d/ with **/.?.md and {dot: true}
    ✓ should match /a/b/c/d/ with **/.?.md and {nonegate: true}
    ✓ should match . with **/.?.md
    ✓ should match . with **/.?.md and {dot: true}
    ✓ should match . with **/.?.md and {nonegate: true}
    ✓ should match ./ with **/.?.md
    ✓ should match ./ with **/.?.md and {dot: true}
    ✓ should match ./ with **/.?.md and {nonegate: true}
    ✓ should match .. with **/.?.md
    ✓ should match .. with **/.?.md and {dot: true}
    ✓ should match .. with **/.?.md and {nonegate: true}
    ✓ should match ../c with **/.?.md
    ✓ should match ../c with **/.?.md and {dot: true}
    ✓ should match ../c with **/.?.md and {nonegate: true}
    ✓ should match ../c with **/.?.md
    ✓ should match ../c with **/.?.md and {dot: true}
    ✓ should match ../c with **/.?.md and {nonegate: true}
    ✓ should match ./../c with **/.?.md
    ✓ should match ./../c with **/.?.md and {dot: true}
    ✓ should match ./../c with **/.?.md and {nonegate: true}
    ✓ should match ./a/../c with **/.?.md
    ✓ should match ./a/../c with **/.?.md and {dot: true}
    ✓ should match ./a/../c with **/.?.md and {nonegate: true}
    ✓ should match /.. with **/.?.md
    ✓ should match /.. with **/.?.md and {dot: true}
    ✓ should match /.. with **/.?.md and {nonegate: true}
    ✓ should match /../c with **/.?.md
    ✓ should match /../c with **/.?.md and {dot: true}
    ✓ should match /../c with **/.?.md and {nonegate: true}
    ✓ should match /../.c with **/.?.md
    ✓ should match /../.c with **/.?.md and {dot: true}
    ✓ should match /../.c with **/.?.md and {nonegate: true}
    ✓ should match /../.c/ with **/.?.md
    ✓ should match /../.c/ with **/.?.md and {dot: true}
    ✓ should match /../.c/ with **/.?.md and {nonegate: true}
    ✓ should match /a/../c with **/.?.md
    ✓ should match /a/../c with **/.?.md and {dot: true}
    ✓ should match /a/../c with **/.?.md and {nonegate: true}
    ✓ should match a/../c with **/.?.md
    ✓ should match a/../c with **/.?.md and {dot: true}
    ✓ should match a/../c with **/.?.md and {nonegate: true}
    ✓ should match ../.b/.c with **/.?.md
    ✓ should match ../.b/.c with **/.?.md and {dot: true}
    ✓ should match ../.b/.c with **/.?.md and {nonegate: true}
    ✓ should match ../b/.c with **/.?.md
    ✓ should match ../b/.c with **/.?.md and {dot: true}
    ✓ should match ../b/.c with **/.?.md and {nonegate: true}
    ✓ should match ./.b/.c with **/.?.md
    ✓ should match ./.b/.c with **/.?.md and {dot: true}
    ✓ should match ./.b/.c with **/.?.md and {nonegate: true}
    ✓ should match ./b/.c with **/.?.md
    ✓ should match ./b/.c with **/.?.md and {dot: true}
    ✓ should match ./b/.c with **/.?.md and {nonegate: true}
    ✓ should match .b with **/.?.md
    ✓ should match .b with **/.?.md and {dot: true}
    ✓ should match .b with **/.?.md and {nonegate: true}
    ✓ should match .b.c with **/.?.md
    ✓ should match .b.c with **/.?.md and {dot: true}
    ✓ should match .b.c with **/.?.md and {nonegate: true}
    ✓ should match .b.c/ with **/.?.md
    ✓ should match .b.c/ with **/.?.md and {dot: true}
    ✓ should match .b.c/ with **/.?.md and {nonegate: true}
    ✓ should match .b/ with **/.?.md
    ✓ should match .b/ with **/.?.md and {dot: true}
    ✓ should match .b/ with **/.?.md and {nonegate: true}
    ✓ should match .b/.c with **/.?.md
    ✓ should match .b/.c with **/.?.md and {dot: true}
    ✓ should match .b/.c with **/.?.md and {nonegate: true}
    ✓ should match .b/c with **/.?.md
    ✓ should match .b/c with **/.?.md and {dot: true}
    ✓ should match .b/c with **/.?.md and {nonegate: true}
    ✓ should match b/.c with **/.?.md
    ✓ should match b/.c with **/.?.md and {dot: true}
    ✓ should match b/.c with **/.?.md and {nonegate: true}
    ✓ should match b/.c/ with **/.?.md
    ✓ should match b/.c/ with **/.?.md and {dot: true}
    ✓ should match b/.c/ with **/.?.md and {nonegate: true}
    ✓ should match a/+b/c with **/.?.md
    ✓ should match a/+b/c with **/.?.md and {dot: true}
    ✓ should match a/+b/c with **/.?.md and {nonegate: true}
    ✓ should match +a/+b/c with **/.?.md
    ✓ should match +a/+b/c with **/.?.md and {dot: true}
    ✓ should match +a/+b/c with **/.?.md and {nonegate: true}
    ✓ should match a (foo) with **/.?.md
    ✓ should match a (foo) with **/.?.md and {dot: true}
    ✓ should match a (foo) with **/.?.md and {nonegate: true}
    ✓ should match a (foo)/(bar) with **/.?.md
    ✓ should match a (foo)/(bar) with **/.?.md and {dot: true}
    ✓ should match a (foo)/(bar) with **/.?.md and {nonegate: true}
    ✓ should match a/b/c (1) with **/.?.md
    ✓ should match a/b/c (1) with **/.?.md and {dot: true}
    ✓ should match a/b/c (1) with **/.?.md and {nonegate: true}
    ✓ should match a/b (2)/c (1) with **/.?.md
    ✓ should match a/b (2)/c (1) with **/.?.md and {dot: true}
    ✓ should match a/b (2)/c (1) with **/.?.md and {nonegate: true}
    ✓ should match a/b/c [def] with **/.?.md
    ✓ should match a/b/c [def] with **/.?.md and {dot: true}
    ✓ should match a/b/c [def] with **/.?.md and {nonegate: true}
    ✓ should match a with **/?.md
    ✓ should match a with **/?.md and {dot: true}
    ✓ should match a with **/?.md and {nonegate: true}
    ✓ should match a.md with **/?.md
    ✓ should match a.md with **/?.md and {dot: true}
    ✓ should match a.md with **/?.md and {nonegate: true}
    ✓ should match a.js with **/?.md
    ✓ should match a.js with **/?.md and {dot: true}
    ✓ should match a.js with **/?.md and {nonegate: true}
    ✓ should match a/ with **/?.md
    ✓ should match a/ with **/?.md and {dot: true}
    ✓ should match a/ with **/?.md and {nonegate: true}
    ✓ should match a/b with **/?.md
    ✓ should match a/b with **/?.md and {dot: true}
    ✓ should match a/b with **/?.md and {nonegate: true}
    ✓ should match a/b/.c.md with **/?.md
    ✓ should match a/b/.c.md with **/?.md and {dot: true}
    ✓ should match a/b/.c.md with **/?.md and {nonegate: true}
    ✓ should match a/b/c with **/?.md
    ✓ should match a/b/c with **/?.md and {dot: true}
    ✓ should match a/b/c with **/?.md and {nonegate: true}
    ✓ should match a/b/c.md with **/?.md
    ✓ should match a/b/c.md with **/?.md and {dot: true}
    ✓ should match a/b/c.md with **/?.md and {nonegate: true}
    ✓ should match a/b/c/ with **/?.md
    ✓ should match a/b/c/ with **/?.md and {dot: true}
    ✓ should match a/b/c/ with **/?.md and {nonegate: true}
    ✓ should match a/b/c/d with **/?.md
    ✓ should match a/b/c/d with **/?.md and {dot: true}
    ✓ should match a/b/c/d with **/?.md and {nonegate: true}
    ✓ should match a/b/c/d/ with **/?.md
    ✓ should match a/b/c/d/ with **/?.md and {dot: true}
    ✓ should match a/b/c/d/ with **/?.md and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with **/?.md
    ✓ should match a/b/c/d/e/f/z.js with **/?.md and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with **/?.md and {nonegate: true}
    ✓ should match a/b/c/z.js with **/?.md
    ✓ should match a/b/c/z.js with **/?.md and {dot: true}
    ✓ should match a/b/c/z.js with **/?.md and {nonegate: true}
    ✓ should match a/bb with **/?.md
    ✓ should match a/bb with **/?.md and {dot: true}
    ✓ should match a/bb with **/?.md and {nonegate: true}
    ✓ should match a/cb with **/?.md
    ✓ should match a/cb with **/?.md and {dot: true}
    ✓ should match a/cb with **/?.md and {nonegate: true}
    ✓ should match abbbz with **/?.md
    ✓ should match abbbz with **/?.md and {dot: true}
    ✓ should match abbbz with **/?.md and {nonegate: true}
    ✓ should match abc with **/?.md
    ✓ should match abc with **/?.md and {dot: true}
    ✓ should match abc with **/?.md and {nonegate: true}
    ✓ should match abd with **/?.md
    ✓ should match abd with **/?.md and {dot: true}
    ✓ should match abd with **/?.md and {nonegate: true}
    ✓ should match z.js with **/?.md
    ✓ should match z.js with **/?.md and {dot: true}
    ✓ should match z.js with **/?.md and {nonegate: true}
    ✓ should match za.js with **/?.md
    ✓ should match za.js with **/?.md and {dot: true}
    ✓ should match za.js with **/?.md and {nonegate: true}
    ✓ should match !a.js with **/?.md
    ✓ should match !a.js with **/?.md and {dot: true}
    ✓ should match !a.js with **/?.md and {nonegate: true}
    ✓ should match !a/b with **/?.md
    ✓ should match !a/b with **/?.md and {dot: true}
    ✓ should match !a/b with **/?.md and {nonegate: true}
    ✓ should match !a/b/ with **/?.md
    ✓ should match !a/b/ with **/?.md and {dot: true}
    ✓ should match !a/b/ with **/?.md and {nonegate: true}
    ✓ should match !a/b/c with **/?.md
    ✓ should match !a/b/c with **/?.md and {dot: true}
    ✓ should match !a/b/c with **/?.md and {nonegate: true}
    ✓ should match !a/b/c/ with **/?.md
    ✓ should match !a/b/c/ with **/?.md and {dot: true}
    ✓ should match !a/b/c/ with **/?.md and {nonegate: true}
    ✓ should match !a/!b with **/?.md
    ✓ should match !a/!b with **/?.md and {dot: true}
    ✓ should match !a/!b with **/?.md and {nonegate: true}
    ✓ should match !a/!b/c with **/?.md
    ✓ should match !a/!b/c with **/?.md and {dot: true}
    ✓ should match !a/!b/c with **/?.md and {nonegate: true}
    ✓ should match !a/!b/c/d with **/?.md
    ✓ should match !a/!b/c/d with **/?.md and {dot: true}
    ✓ should match !a/!b/c/d with **/?.md and {nonegate: true}
    ✓ should match !a/b/.c.md with **/?.md
    ✓ should match !a/b/.c.md with **/?.md and {dot: true}
    ✓ should match !a/b/.c.md with **/?.md and {nonegate: true}
    ✓ should match /a/ with **/?.md
    ✓ should match /a/ with **/?.md and {dot: true}
    ✓ should match /a/ with **/?.md and {nonegate: true}
    ✓ should match /a/b with **/?.md
    ✓ should match /a/b with **/?.md and {dot: true}
    ✓ should match /a/b with **/?.md and {nonegate: true}
    ✓ should match /a/cb with **/?.md
    ✓ should match /a/cb with **/?.md and {dot: true}
    ✓ should match /a/cb with **/?.md and {nonegate: true}
    ✓ should match /a/bb with **/?.md
    ✓ should match /a/bb with **/?.md and {dot: true}
    ✓ should match /a/bb with **/?.md and {nonegate: true}
    ✓ should match /a/b/c with **/?.md
    ✓ should match /a/b/c with **/?.md and {dot: true}
    ✓ should match /a/b/c with **/?.md and {nonegate: true}
    ✓ should match /a/b/c/ with **/?.md
    ✓ should match /a/b/c/ with **/?.md and {dot: true}
    ✓ should match /a/b/c/ with **/?.md and {nonegate: true}
    ✓ should match /a/b/c/d with **/?.md
    ✓ should match /a/b/c/d with **/?.md and {dot: true}
    ✓ should match /a/b/c/d with **/?.md and {nonegate: true}
    ✓ should match /a/b/c/d/ with **/?.md
    ✓ should match /a/b/c/d/ with **/?.md and {dot: true}
    ✓ should match /a/b/c/d/ with **/?.md and {nonegate: true}
    ✓ should match . with **/?.md
    ✓ should match . with **/?.md and {dot: true}
    ✓ should match . with **/?.md and {nonegate: true}
    ✓ should match ./ with **/?.md
    ✓ should match ./ with **/?.md and {dot: true}
    ✓ should match ./ with **/?.md and {nonegate: true}
    ✓ should match .. with **/?.md
    ✓ should match .. with **/?.md and {dot: true}
    ✓ should match .. with **/?.md and {nonegate: true}
    ✓ should match ../c with **/?.md
    ✓ should match ../c with **/?.md and {dot: true}
    ✓ should match ../c with **/?.md and {nonegate: true}
    ✓ should match ../c with **/?.md
    ✓ should match ../c with **/?.md and {dot: true}
    ✓ should match ../c with **/?.md and {nonegate: true}
    ✓ should match ./../c with **/?.md
    ✓ should match ./../c with **/?.md and {dot: true}
    ✓ should match ./../c with **/?.md and {nonegate: true}
    ✓ should match ./a/../c with **/?.md
    ✓ should match ./a/../c with **/?.md and {dot: true}
    ✓ should match ./a/../c with **/?.md and {nonegate: true}
    ✓ should match /.. with **/?.md
    ✓ should match /.. with **/?.md and {dot: true}
    ✓ should match /.. with **/?.md and {nonegate: true}
    ✓ should match /../c with **/?.md
    ✓ should match /../c with **/?.md and {dot: true}
    ✓ should match /../c with **/?.md and {nonegate: true}
    ✓ should match /../.c with **/?.md
    ✓ should match /../.c with **/?.md and {dot: true}
    ✓ should match /../.c with **/?.md and {nonegate: true}
    ✓ should match /../.c/ with **/?.md
    ✓ should match /../.c/ with **/?.md and {dot: true}
    ✓ should match /../.c/ with **/?.md and {nonegate: true}
    ✓ should match /a/../c with **/?.md
    ✓ should match /a/../c with **/?.md and {dot: true}
    ✓ should match /a/../c with **/?.md and {nonegate: true}
    ✓ should match a/../c with **/?.md
    ✓ should match a/../c with **/?.md and {dot: true}
    ✓ should match a/../c with **/?.md and {nonegate: true}
    ✓ should match ../.b/.c with **/?.md
    ✓ should match ../.b/.c with **/?.md and {dot: true}
    ✓ should match ../.b/.c with **/?.md and {nonegate: true}
    ✓ should match ../b/.c with **/?.md
    ✓ should match ../b/.c with **/?.md and {dot: true}
    ✓ should match ../b/.c with **/?.md and {nonegate: true}
    ✓ should match ./.b/.c with **/?.md
    ✓ should match ./.b/.c with **/?.md and {dot: true}
    ✓ should match ./.b/.c with **/?.md and {nonegate: true}
    ✓ should match ./b/.c with **/?.md
    ✓ should match ./b/.c with **/?.md and {dot: true}
    ✓ should match ./b/.c with **/?.md and {nonegate: true}
    ✓ should match .b with **/?.md
    ✓ should match .b with **/?.md and {dot: true}
    ✓ should match .b with **/?.md and {nonegate: true}
    ✓ should match .b.c with **/?.md
    ✓ should match .b.c with **/?.md and {dot: true}
    ✓ should match .b.c with **/?.md and {nonegate: true}
    ✓ should match .b.c/ with **/?.md
    ✓ should match .b.c/ with **/?.md and {dot: true}
    ✓ should match .b.c/ with **/?.md and {nonegate: true}
    ✓ should match .b/ with **/?.md
    ✓ should match .b/ with **/?.md and {dot: true}
    ✓ should match .b/ with **/?.md and {nonegate: true}
    ✓ should match .b/.c with **/?.md
    ✓ should match .b/.c with **/?.md and {dot: true}
    ✓ should match .b/.c with **/?.md and {nonegate: true}
    ✓ should match .b/c with **/?.md
    ✓ should match .b/c with **/?.md and {dot: true}
    ✓ should match .b/c with **/?.md and {nonegate: true}
    ✓ should match b/.c with **/?.md
    ✓ should match b/.c with **/?.md and {dot: true}
    ✓ should match b/.c with **/?.md and {nonegate: true}
    ✓ should match b/.c/ with **/?.md
    ✓ should match b/.c/ with **/?.md and {dot: true}
    ✓ should match b/.c/ with **/?.md and {nonegate: true}
    ✓ should match a/+b/c with **/?.md
    ✓ should match a/+b/c with **/?.md and {dot: true}
    ✓ should match a/+b/c with **/?.md and {nonegate: true}
    ✓ should match +a/+b/c with **/?.md
    ✓ should match +a/+b/c with **/?.md and {dot: true}
    ✓ should match +a/+b/c with **/?.md and {nonegate: true}
    ✓ should match a (foo) with **/?.md
    ✓ should match a (foo) with **/?.md and {dot: true}
    ✓ should match a (foo) with **/?.md and {nonegate: true}
    ✓ should match a (foo)/(bar) with **/?.md
    ✓ should match a (foo)/(bar) with **/?.md and {dot: true}
    ✓ should match a (foo)/(bar) with **/?.md and {nonegate: true}
    ✓ should match a/b/c (1) with **/?.md
    ✓ should match a/b/c (1) with **/?.md and {dot: true}
    ✓ should match a/b/c (1) with **/?.md and {nonegate: true}
    ✓ should match a/b (2)/c (1) with **/?.md
    ✓ should match a/b (2)/c (1) with **/?.md and {dot: true}
    ✓ should match a/b (2)/c (1) with **/?.md and {nonegate: true}
    ✓ should match a/b/c [def] with **/?.md
    ✓ should match a/b/c [def] with **/?.md and {dot: true}
    ✓ should match a/b/c [def] with **/?.md and {nonegate: true}
    ✓ should match a with **/z*.js
    ✓ should match a with **/z*.js and {dot: true}
    ✓ should match a with **/z*.js and {nonegate: true}
    ✓ should match a.md with **/z*.js
    ✓ should match a.md with **/z*.js and {dot: true}
    ✓ should match a.md with **/z*.js and {nonegate: true}
    ✓ should match a.js with **/z*.js
    ✓ should match a.js with **/z*.js and {dot: true}
    ✓ should match a.js with **/z*.js and {nonegate: true}
    ✓ should match a/ with **/z*.js
    ✓ should match a/ with **/z*.js and {dot: true}
    ✓ should match a/ with **/z*.js and {nonegate: true}
    ✓ should match a/b with **/z*.js
    ✓ should match a/b with **/z*.js and {dot: true}
    ✓ should match a/b with **/z*.js and {nonegate: true}
    ✓ should match a/b/.c.md with **/z*.js
    ✓ should match a/b/.c.md with **/z*.js and {dot: true}
    ✓ should match a/b/.c.md with **/z*.js and {nonegate: true}
    ✓ should match a/b/c with **/z*.js
    ✓ should match a/b/c with **/z*.js and {dot: true}
    ✓ should match a/b/c with **/z*.js and {nonegate: true}
    ✓ should match a/b/c.md with **/z*.js
    ✓ should match a/b/c.md with **/z*.js and {dot: true}
    ✓ should match a/b/c.md with **/z*.js and {nonegate: true}
    ✓ should match a/b/c/ with **/z*.js
    ✓ should match a/b/c/ with **/z*.js and {dot: true}
    ✓ should match a/b/c/ with **/z*.js and {nonegate: true}
    ✓ should match a/b/c/d with **/z*.js
    ✓ should match a/b/c/d with **/z*.js and {dot: true}
    ✓ should match a/b/c/d with **/z*.js and {nonegate: true}
    ✓ should match a/b/c/d/ with **/z*.js
    ✓ should match a/b/c/d/ with **/z*.js and {dot: true}
    ✓ should match a/b/c/d/ with **/z*.js and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with **/z*.js
    ✓ should match a/b/c/d/e/f/z.js with **/z*.js and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with **/z*.js and {nonegate: true}
    ✓ should match a/b/c/z.js with **/z*.js
    ✓ should match a/b/c/z.js with **/z*.js and {dot: true}
    ✓ should match a/b/c/z.js with **/z*.js and {nonegate: true}
    ✓ should match a/bb with **/z*.js
    ✓ should match a/bb with **/z*.js and {dot: true}
    ✓ should match a/bb with **/z*.js and {nonegate: true}
    ✓ should match a/cb with **/z*.js
    ✓ should match a/cb with **/z*.js and {dot: true}
    ✓ should match a/cb with **/z*.js and {nonegate: true}
    ✓ should match abbbz with **/z*.js
    ✓ should match abbbz with **/z*.js and {dot: true}
    ✓ should match abbbz with **/z*.js and {nonegate: true}
    ✓ should match abc with **/z*.js
    ✓ should match abc with **/z*.js and {dot: true}
    ✓ should match abc with **/z*.js and {nonegate: true}
    ✓ should match abd with **/z*.js
    ✓ should match abd with **/z*.js and {dot: true}
    ✓ should match abd with **/z*.js and {nonegate: true}
    ✓ should match z.js with **/z*.js
    ✓ should match z.js with **/z*.js and {dot: true}
    ✓ should match z.js with **/z*.js and {nonegate: true}
    ✓ should match za.js with **/z*.js
    ✓ should match za.js with **/z*.js and {dot: true}
    ✓ should match za.js with **/z*.js and {nonegate: true}
    ✓ should match !a.js with **/z*.js
    ✓ should match !a.js with **/z*.js and {dot: true}
    ✓ should match !a.js with **/z*.js and {nonegate: true}
    ✓ should match !a/b with **/z*.js
    ✓ should match !a/b with **/z*.js and {dot: true}
    ✓ should match !a/b with **/z*.js and {nonegate: true}
    ✓ should match !a/b/ with **/z*.js
    ✓ should match !a/b/ with **/z*.js and {dot: true}
    ✓ should match !a/b/ with **/z*.js and {nonegate: true}
    ✓ should match !a/b/c with **/z*.js
    ✓ should match !a/b/c with **/z*.js and {dot: true}
    ✓ should match !a/b/c with **/z*.js and {nonegate: true}
    ✓ should match !a/b/c/ with **/z*.js
    ✓ should match !a/b/c/ with **/z*.js and {dot: true}
    ✓ should match !a/b/c/ with **/z*.js and {nonegate: true}
    ✓ should match !a/!b with **/z*.js
    ✓ should match !a/!b with **/z*.js and {dot: true}
    ✓ should match !a/!b with **/z*.js and {nonegate: true}
    ✓ should match !a/!b/c with **/z*.js
    ✓ should match !a/!b/c with **/z*.js and {dot: true}
    ✓ should match !a/!b/c with **/z*.js and {nonegate: true}
    ✓ should match !a/!b/c/d with **/z*.js
    ✓ should match !a/!b/c/d with **/z*.js and {dot: true}
    ✓ should match !a/!b/c/d with **/z*.js and {nonegate: true}
    ✓ should match !a/b/.c.md with **/z*.js
    ✓ should match !a/b/.c.md with **/z*.js and {dot: true}
    ✓ should match !a/b/.c.md with **/z*.js and {nonegate: true}
    ✓ should match /a/ with **/z*.js
    ✓ should match /a/ with **/z*.js and {dot: true}
    ✓ should match /a/ with **/z*.js and {nonegate: true}
    ✓ should match /a/b with **/z*.js
    ✓ should match /a/b with **/z*.js and {dot: true}
    ✓ should match /a/b with **/z*.js and {nonegate: true}
    ✓ should match /a/cb with **/z*.js
    ✓ should match /a/cb with **/z*.js and {dot: true}
    ✓ should match /a/cb with **/z*.js and {nonegate: true}
    ✓ should match /a/bb with **/z*.js
    ✓ should match /a/bb with **/z*.js and {dot: true}
    ✓ should match /a/bb with **/z*.js and {nonegate: true}
    ✓ should match /a/b/c with **/z*.js
    ✓ should match /a/b/c with **/z*.js and {dot: true}
    ✓ should match /a/b/c with **/z*.js and {nonegate: true}
    ✓ should match /a/b/c/ with **/z*.js
    ✓ should match /a/b/c/ with **/z*.js and {dot: true}
    ✓ should match /a/b/c/ with **/z*.js and {nonegate: true}
    ✓ should match /a/b/c/d with **/z*.js
    ✓ should match /a/b/c/d with **/z*.js and {dot: true}
    ✓ should match /a/b/c/d with **/z*.js and {nonegate: true}
    ✓ should match /a/b/c/d/ with **/z*.js
    ✓ should match /a/b/c/d/ with **/z*.js and {dot: true}
    ✓ should match /a/b/c/d/ with **/z*.js and {nonegate: true}
    ✓ should match . with **/z*.js
    ✓ should match . with **/z*.js and {dot: true}
    ✓ should match . with **/z*.js and {nonegate: true}
    ✓ should match ./ with **/z*.js
    ✓ should match ./ with **/z*.js and {dot: true}
    ✓ should match ./ with **/z*.js and {nonegate: true}
    ✓ should match .. with **/z*.js
    ✓ should match .. with **/z*.js and {dot: true}
    ✓ should match .. with **/z*.js and {nonegate: true}
    ✓ should match ../c with **/z*.js
    ✓ should match ../c with **/z*.js and {dot: true}
    ✓ should match ../c with **/z*.js and {nonegate: true}
    ✓ should match ../c with **/z*.js
    ✓ should match ../c with **/z*.js and {dot: true}
    ✓ should match ../c with **/z*.js and {nonegate: true}
    ✓ should match ./../c with **/z*.js
    ✓ should match ./../c with **/z*.js and {dot: true}
    ✓ should match ./../c with **/z*.js and {nonegate: true}
    ✓ should match ./a/../c with **/z*.js
    ✓ should match ./a/../c with **/z*.js and {dot: true}
    ✓ should match ./a/../c with **/z*.js and {nonegate: true}
    ✓ should match /.. with **/z*.js
    ✓ should match /.. with **/z*.js and {dot: true}
    ✓ should match /.. with **/z*.js and {nonegate: true}
    ✓ should match /../c with **/z*.js
    ✓ should match /../c with **/z*.js and {dot: true}
    ✓ should match /../c with **/z*.js and {nonegate: true}
    ✓ should match /../.c with **/z*.js
    ✓ should match /../.c with **/z*.js and {dot: true}
    ✓ should match /../.c with **/z*.js and {nonegate: true}
    ✓ should match /../.c/ with **/z*.js
    ✓ should match /../.c/ with **/z*.js and {dot: true}
    ✓ should match /../.c/ with **/z*.js and {nonegate: true}
    ✓ should match /a/../c with **/z*.js
    ✓ should match /a/../c with **/z*.js and {dot: true}
    ✓ should match /a/../c with **/z*.js and {nonegate: true}
    ✓ should match a/../c with **/z*.js
    ✓ should match a/../c with **/z*.js and {dot: true}
    ✓ should match a/../c with **/z*.js and {nonegate: true}
    ✓ should match ../.b/.c with **/z*.js
    ✓ should match ../.b/.c with **/z*.js and {dot: true}
    ✓ should match ../.b/.c with **/z*.js and {nonegate: true}
    ✓ should match ../b/.c with **/z*.js
    ✓ should match ../b/.c with **/z*.js and {dot: true}
    ✓ should match ../b/.c with **/z*.js and {nonegate: true}
    ✓ should match ./.b/.c with **/z*.js
    ✓ should match ./.b/.c with **/z*.js and {dot: true}
    ✓ should match ./.b/.c with **/z*.js and {nonegate: true}
    ✓ should match ./b/.c with **/z*.js
    ✓ should match ./b/.c with **/z*.js and {dot: true}
    ✓ should match ./b/.c with **/z*.js and {nonegate: true}
    ✓ should match .b with **/z*.js
    ✓ should match .b with **/z*.js and {dot: true}
    ✓ should match .b with **/z*.js and {nonegate: true}
    ✓ should match .b.c with **/z*.js
    ✓ should match .b.c with **/z*.js and {dot: true}
    ✓ should match .b.c with **/z*.js and {nonegate: true}
    ✓ should match .b.c/ with **/z*.js
    ✓ should match .b.c/ with **/z*.js and {dot: true}
    ✓ should match .b.c/ with **/z*.js and {nonegate: true}
    ✓ should match .b/ with **/z*.js
    ✓ should match .b/ with **/z*.js and {dot: true}
    ✓ should match .b/ with **/z*.js and {nonegate: true}
    ✓ should match .b/.c with **/z*.js
    ✓ should match .b/.c with **/z*.js and {dot: true}
    ✓ should match .b/.c with **/z*.js and {nonegate: true}
    ✓ should match .b/c with **/z*.js
    ✓ should match .b/c with **/z*.js and {dot: true}
    ✓ should match .b/c with **/z*.js and {nonegate: true}
    ✓ should match b/.c with **/z*.js
    ✓ should match b/.c with **/z*.js and {dot: true}
    ✓ should match b/.c with **/z*.js and {nonegate: true}
    ✓ should match b/.c/ with **/z*.js
    ✓ should match b/.c/ with **/z*.js and {dot: true}
    ✓ should match b/.c/ with **/z*.js and {nonegate: true}
    ✓ should match a/+b/c with **/z*.js
    ✓ should match a/+b/c with **/z*.js and {dot: true}
    ✓ should match a/+b/c with **/z*.js and {nonegate: true}
    ✓ should match +a/+b/c with **/z*.js
    ✓ should match +a/+b/c with **/z*.js and {dot: true}
    ✓ should match +a/+b/c with **/z*.js and {nonegate: true}
    ✓ should match a (foo) with **/z*.js
    ✓ should match a (foo) with **/z*.js and {dot: true}
    ✓ should match a (foo) with **/z*.js and {nonegate: true}
    ✓ should match a (foo)/(bar) with **/z*.js
    ✓ should match a (foo)/(bar) with **/z*.js and {dot: true}
    ✓ should match a (foo)/(bar) with **/z*.js and {nonegate: true}
    ✓ should match a/b/c (1) with **/z*.js
    ✓ should match a/b/c (1) with **/z*.js and {dot: true}
    ✓ should match a/b/c (1) with **/z*.js and {nonegate: true}
    ✓ should match a/b (2)/c (1) with **/z*.js
    ✓ should match a/b (2)/c (1) with **/z*.js and {dot: true}
    ✓ should match a/b (2)/c (1) with **/z*.js and {nonegate: true}
    ✓ should match a/b/c [def] with **/z*.js
    ✓ should match a/b/c [def] with **/z*.js and {dot: true}
    ✓ should match a/b/c [def] with **/z*.js and {nonegate: true}
    ✓ should match a with *.js
    ✓ should match a with *.js and {dot: true}
    ✓ should match a with *.js and {nonegate: true}
    ✓ should match a.md with *.js
    ✓ should match a.md with *.js and {dot: true}
    ✓ should match a.md with *.js and {nonegate: true}
    ✓ should match a.js with *.js
    ✓ should match a.js with *.js and {dot: true}
    ✓ should match a.js with *.js and {nonegate: true}
    ✓ should match a/ with *.js
    ✓ should match a/ with *.js and {dot: true}
    ✓ should match a/ with *.js and {nonegate: true}
    ✓ should match a/b with *.js
    ✓ should match a/b with *.js and {dot: true}
    ✓ should match a/b with *.js and {nonegate: true}
    ✓ should match a/b/.c.md with *.js
    ✓ should match a/b/.c.md with *.js and {dot: true}
    ✓ should match a/b/.c.md with *.js and {nonegate: true}
    ✓ should match a/b/c with *.js
    ✓ should match a/b/c with *.js and {dot: true}
    ✓ should match a/b/c with *.js and {nonegate: true}
    ✓ should match a/b/c.md with *.js
    ✓ should match a/b/c.md with *.js and {dot: true}
    ✓ should match a/b/c.md with *.js and {nonegate: true}
    ✓ should match a/b/c/ with *.js
    ✓ should match a/b/c/ with *.js and {dot: true}
    ✓ should match a/b/c/ with *.js and {nonegate: true}
    ✓ should match a/b/c/d with *.js
    ✓ should match a/b/c/d with *.js and {dot: true}
    ✓ should match a/b/c/d with *.js and {nonegate: true}
    ✓ should match a/b/c/d/ with *.js
    ✓ should match a/b/c/d/ with *.js and {dot: true}
    ✓ should match a/b/c/d/ with *.js and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with *.js
    ✓ should match a/b/c/d/e/f/z.js with *.js and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with *.js and {nonegate: true}
    ✓ should match a/b/c/z.js with *.js
    ✓ should match a/b/c/z.js with *.js and {dot: true}
    ✓ should match a/b/c/z.js with *.js and {nonegate: true}
    ✓ should match a/bb with *.js
    ✓ should match a/bb with *.js and {dot: true}
    ✓ should match a/bb with *.js and {nonegate: true}
    ✓ should match a/cb with *.js
    ✓ should match a/cb with *.js and {dot: true}
    ✓ should match a/cb with *.js and {nonegate: true}
    ✓ should match abbbz with *.js
    ✓ should match abbbz with *.js and {dot: true}
    ✓ should match abbbz with *.js and {nonegate: true}
    ✓ should match abc with *.js
    ✓ should match abc with *.js and {dot: true}
    ✓ should match abc with *.js and {nonegate: true}
    ✓ should match abd with *.js
    ✓ should match abd with *.js and {dot: true}
    ✓ should match abd with *.js and {nonegate: true}
    ✓ should match z.js with *.js
    ✓ should match z.js with *.js and {dot: true}
    ✓ should match z.js with *.js and {nonegate: true}
    ✓ should match za.js with *.js
    ✓ should match za.js with *.js and {dot: true}
    ✓ should match za.js with *.js and {nonegate: true}
    ✓ should match !a.js with *.js
    ✓ should match !a.js with *.js and {dot: true}
    ✓ should match !a.js with *.js and {nonegate: true}
    ✓ should match !a/b with *.js
    ✓ should match !a/b with *.js and {dot: true}
    ✓ should match !a/b with *.js and {nonegate: true}
    ✓ should match !a/b/ with *.js
    ✓ should match !a/b/ with *.js and {dot: true}
    ✓ should match !a/b/ with *.js and {nonegate: true}
    ✓ should match !a/b/c with *.js
    ✓ should match !a/b/c with *.js and {dot: true}
    ✓ should match !a/b/c with *.js and {nonegate: true}
    ✓ should match !a/b/c/ with *.js
    ✓ should match !a/b/c/ with *.js and {dot: true}
    ✓ should match !a/b/c/ with *.js and {nonegate: true}
    ✓ should match !a/!b with *.js
    ✓ should match !a/!b with *.js and {dot: true}
    ✓ should match !a/!b with *.js and {nonegate: true}
    ✓ should match !a/!b/c with *.js
    ✓ should match !a/!b/c with *.js and {dot: true}
    ✓ should match !a/!b/c with *.js and {nonegate: true}
    ✓ should match !a/!b/c/d with *.js
    ✓ should match !a/!b/c/d with *.js and {dot: true}
    ✓ should match !a/!b/c/d with *.js and {nonegate: true}
    ✓ should match !a/b/.c.md with *.js
    ✓ should match !a/b/.c.md with *.js and {dot: true}
    ✓ should match !a/b/.c.md with *.js and {nonegate: true}
    ✓ should match /a/ with *.js
    ✓ should match /a/ with *.js and {dot: true}
    ✓ should match /a/ with *.js and {nonegate: true}
    ✓ should match /a/b with *.js
    ✓ should match /a/b with *.js and {dot: true}
    ✓ should match /a/b with *.js and {nonegate: true}
    ✓ should match /a/cb with *.js
    ✓ should match /a/cb with *.js and {dot: true}
    ✓ should match /a/cb with *.js and {nonegate: true}
    ✓ should match /a/bb with *.js
    ✓ should match /a/bb with *.js and {dot: true}
    ✓ should match /a/bb with *.js and {nonegate: true}
    ✓ should match /a/b/c with *.js
    ✓ should match /a/b/c with *.js and {dot: true}
    ✓ should match /a/b/c with *.js and {nonegate: true}
    ✓ should match /a/b/c/ with *.js
    ✓ should match /a/b/c/ with *.js and {dot: true}
    ✓ should match /a/b/c/ with *.js and {nonegate: true}
    ✓ should match /a/b/c/d with *.js
    ✓ should match /a/b/c/d with *.js and {dot: true}
    ✓ should match /a/b/c/d with *.js and {nonegate: true}
    ✓ should match /a/b/c/d/ with *.js
    ✓ should match /a/b/c/d/ with *.js and {dot: true}
    ✓ should match /a/b/c/d/ with *.js and {nonegate: true}
    ✓ should match . with *.js
    ✓ should match . with *.js and {dot: true}
    ✓ should match . with *.js and {nonegate: true}
    ✓ should match ./ with *.js
    ✓ should match ./ with *.js and {dot: true}
    ✓ should match ./ with *.js and {nonegate: true}
    ✓ should match .. with *.js
    ✓ should match .. with *.js and {dot: true}
    ✓ should match .. with *.js and {nonegate: true}
    ✓ should match ../c with *.js
    ✓ should match ../c with *.js and {dot: true}
    ✓ should match ../c with *.js and {nonegate: true}
    ✓ should match ../c with *.js
    ✓ should match ../c with *.js and {dot: true}
    ✓ should match ../c with *.js and {nonegate: true}
    ✓ should match ./../c with *.js
    ✓ should match ./../c with *.js and {dot: true}
    ✓ should match ./../c with *.js and {nonegate: true}
    ✓ should match ./a/../c with *.js
    ✓ should match ./a/../c with *.js and {dot: true}
    ✓ should match ./a/../c with *.js and {nonegate: true}
    ✓ should match /.. with *.js
    ✓ should match /.. with *.js and {dot: true}
    ✓ should match /.. with *.js and {nonegate: true}
    ✓ should match /../c with *.js
    ✓ should match /../c with *.js and {dot: true}
    ✓ should match /../c with *.js and {nonegate: true}
    ✓ should match /../.c with *.js
    ✓ should match /../.c with *.js and {dot: true}
    ✓ should match /../.c with *.js and {nonegate: true}
    ✓ should match /../.c/ with *.js
    ✓ should match /../.c/ with *.js and {dot: true}
    ✓ should match /../.c/ with *.js and {nonegate: true}
    ✓ should match /a/../c with *.js
    ✓ should match /a/../c with *.js and {dot: true}
    ✓ should match /a/../c with *.js and {nonegate: true}
    ✓ should match a/../c with *.js
    ✓ should match a/../c with *.js and {dot: true}
    ✓ should match a/../c with *.js and {nonegate: true}
    ✓ should match ../.b/.c with *.js
    ✓ should match ../.b/.c with *.js and {dot: true}
    ✓ should match ../.b/.c with *.js and {nonegate: true}
    ✓ should match ../b/.c with *.js
    ✓ should match ../b/.c with *.js and {dot: true}
    ✓ should match ../b/.c with *.js and {nonegate: true}
    ✓ should match ./.b/.c with *.js
    ✓ should match ./.b/.c with *.js and {dot: true}
    ✓ should match ./.b/.c with *.js and {nonegate: true}
    ✓ should match ./b/.c with *.js
    ✓ should match ./b/.c with *.js and {dot: true}
    ✓ should match ./b/.c with *.js and {nonegate: true}
    ✓ should match .b with *.js
    ✓ should match .b with *.js and {dot: true}
    ✓ should match .b with *.js and {nonegate: true}
    ✓ should match .b.c with *.js
    ✓ should match .b.c with *.js and {dot: true}
    ✓ should match .b.c with *.js and {nonegate: true}
    ✓ should match .b.c/ with *.js
    ✓ should match .b.c/ with *.js and {dot: true}
    ✓ should match .b.c/ with *.js and {nonegate: true}
    ✓ should match .b/ with *.js
    ✓ should match .b/ with *.js and {dot: true}
    ✓ should match .b/ with *.js and {nonegate: true}
    ✓ should match .b/.c with *.js
    ✓ should match .b/.c with *.js and {dot: true}
    ✓ should match .b/.c with *.js and {nonegate: true}
    ✓ should match .b/c with *.js
    ✓ should match .b/c with *.js and {dot: true}
    ✓ should match .b/c with *.js and {nonegate: true}
    ✓ should match b/.c with *.js
    ✓ should match b/.c with *.js and {dot: true}
    ✓ should match b/.c with *.js and {nonegate: true}
    ✓ should match b/.c/ with *.js
    ✓ should match b/.c/ with *.js and {dot: true}
    ✓ should match b/.c/ with *.js and {nonegate: true}
    ✓ should match a/+b/c with *.js
    ✓ should match a/+b/c with *.js and {dot: true}
    ✓ should match a/+b/c with *.js and {nonegate: true}
    ✓ should match +a/+b/c with *.js
    ✓ should match +a/+b/c with *.js and {dot: true}
    ✓ should match +a/+b/c with *.js and {nonegate: true}
    ✓ should match a (foo) with *.js
    ✓ should match a (foo) with *.js and {dot: true}
    ✓ should match a (foo) with *.js and {nonegate: true}
    ✓ should match a (foo)/(bar) with *.js
    ✓ should match a (foo)/(bar) with *.js and {dot: true}
    ✓ should match a (foo)/(bar) with *.js and {nonegate: true}
    ✓ should match a/b/c (1) with *.js
    ✓ should match a/b/c (1) with *.js and {dot: true}
    ✓ should match a/b/c (1) with *.js and {nonegate: true}
    ✓ should match a/b (2)/c (1) with *.js
    ✓ should match a/b (2)/c (1) with *.js and {dot: true}
    ✓ should match a/b (2)/c (1) with *.js and {nonegate: true}
    ✓ should match a/b/c [def] with *.js
    ✓ should match a/b/c [def] with *.js and {dot: true}
    ✓ should match a/b/c [def] with *.js and {nonegate: true}
    ✓ should match a with */
    ✓ should match a with */ and {dot: true}
    ✓ should match a with */ and {nonegate: true}
    ✓ should match a.md with */
    ✓ should match a.md with */ and {dot: true}
    ✓ should match a.md with */ and {nonegate: true}
    ✓ should match a.js with */
    ✓ should match a.js with */ and {dot: true}
    ✓ should match a.js with */ and {nonegate: true}
    ✓ should match a/ with */
    ✓ should match a/ with */ and {dot: true}
    ✓ should match a/ with */ and {nonegate: true}
    ✓ should match a/b with */
    ✓ should match a/b with */ and {dot: true}
    ✓ should match a/b with */ and {nonegate: true}
    ✓ should match a/b/.c.md with */
    ✓ should match a/b/.c.md with */ and {dot: true}
    ✓ should match a/b/.c.md with */ and {nonegate: true}
    ✓ should match a/b/c with */
    ✓ should match a/b/c with */ and {dot: true}
    ✓ should match a/b/c with */ and {nonegate: true}
    ✓ should match a/b/c.md with */
    ✓ should match a/b/c.md with */ and {dot: true}
    ✓ should match a/b/c.md with */ and {nonegate: true}
    ✓ should match a/b/c/ with */
    ✓ should match a/b/c/ with */ and {dot: true}
    ✓ should match a/b/c/ with */ and {nonegate: true}
    ✓ should match a/b/c/d with */
    ✓ should match a/b/c/d with */ and {dot: true}
    ✓ should match a/b/c/d with */ and {nonegate: true}
    ✓ should match a/b/c/d/ with */
    ✓ should match a/b/c/d/ with */ and {dot: true}
    ✓ should match a/b/c/d/ with */ and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with */
    ✓ should match a/b/c/d/e/f/z.js with */ and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with */ and {nonegate: true}
    ✓ should match a/b/c/z.js with */
    ✓ should match a/b/c/z.js with */ and {dot: true}
    ✓ should match a/b/c/z.js with */ and {nonegate: true}
    ✓ should match a/bb with */
    ✓ should match a/bb with */ and {dot: true}
    ✓ should match a/bb with */ and {nonegate: true}
    ✓ should match a/cb with */
    ✓ should match a/cb with */ and {dot: true}
    ✓ should match a/cb with */ and {nonegate: true}
    ✓ should match abbbz with */
    ✓ should match abbbz with */ and {dot: true}
    ✓ should match abbbz with */ and {nonegate: true}
    ✓ should match abc with */
    ✓ should match abc with */ and {dot: true}
    ✓ should match abc with */ and {nonegate: true}
    ✓ should match abd with */
    ✓ should match abd with */ and {dot: true}
    ✓ should match abd with */ and {nonegate: true}
    ✓ should match z.js with */
    ✓ should match z.js with */ and {dot: true}
    ✓ should match z.js with */ and {nonegate: true}
    ✓ should match za.js with */
    ✓ should match za.js with */ and {dot: true}
    ✓ should match za.js with */ and {nonegate: true}
    ✓ should match !a.js with */
    ✓ should match !a.js with */ and {dot: true}
    ✓ should match !a.js with */ and {nonegate: true}
    ✓ should match !a/b with */
    ✓ should match !a/b with */ and {dot: true}
    ✓ should match !a/b with */ and {nonegate: true}
    ✓ should match !a/b/ with */
    ✓ should match !a/b/ with */ and {dot: true}
    ✓ should match !a/b/ with */ and {nonegate: true}
    ✓ should match !a/b/c with */
    ✓ should match !a/b/c with */ and {dot: true}
    ✓ should match !a/b/c with */ and {nonegate: true}
    ✓ should match !a/b/c/ with */
    ✓ should match !a/b/c/ with */ and {dot: true}
    ✓ should match !a/b/c/ with */ and {nonegate: true}
    ✓ should match !a/!b with */
    ✓ should match !a/!b with */ and {dot: true}
    ✓ should match !a/!b with */ and {nonegate: true}
    ✓ should match !a/!b/c with */
    ✓ should match !a/!b/c with */ and {dot: true}
    ✓ should match !a/!b/c with */ and {nonegate: true}
    ✓ should match !a/!b/c/d with */
    ✓ should match !a/!b/c/d with */ and {dot: true}
    ✓ should match !a/!b/c/d with */ and {nonegate: true}
    ✓ should match !a/b/.c.md with */
    ✓ should match !a/b/.c.md with */ and {dot: true}
    ✓ should match !a/b/.c.md with */ and {nonegate: true}
    ✓ should match /a/ with */
    ✓ should match /a/ with */ and {dot: true}
    ✓ should match /a/ with */ and {nonegate: true}
    ✓ should match /a/b with */
    ✓ should match /a/b with */ and {dot: true}
    ✓ should match /a/b with */ and {nonegate: true}
    ✓ should match /a/cb with */
    ✓ should match /a/cb with */ and {dot: true}
    ✓ should match /a/cb with */ and {nonegate: true}
    ✓ should match /a/bb with */
    ✓ should match /a/bb with */ and {dot: true}
    ✓ should match /a/bb with */ and {nonegate: true}
    ✓ should match /a/b/c with */
    ✓ should match /a/b/c with */ and {dot: true}
    ✓ should match /a/b/c with */ and {nonegate: true}
    ✓ should match /a/b/c/ with */
    ✓ should match /a/b/c/ with */ and {dot: true}
    ✓ should match /a/b/c/ with */ and {nonegate: true}
    ✓ should match /a/b/c/d with */
    ✓ should match /a/b/c/d with */ and {dot: true}
    ✓ should match /a/b/c/d with */ and {nonegate: true}
    ✓ should match /a/b/c/d/ with */
    ✓ should match /a/b/c/d/ with */ and {dot: true}
    ✓ should match /a/b/c/d/ with */ and {nonegate: true}
    ✓ should match . with */
    ✓ should match . with */ and {dot: true}
    ✓ should match . with */ and {nonegate: true}
    ✓ should match ./ with */
    ✓ should match ./ with */ and {dot: true}
    ✓ should match ./ with */ and {nonegate: true}
    ✓ should match .. with */
    ✓ should match .. with */ and {dot: true}
    ✓ should match .. with */ and {nonegate: true}
    ✓ should match ../c with */
    ✓ should match ../c with */ and {dot: true}
    ✓ should match ../c with */ and {nonegate: true}
    ✓ should match ../c with */
    ✓ should match ../c with */ and {dot: true}
    ✓ should match ../c with */ and {nonegate: true}
    ✓ should match ./../c with */
    ✓ should match ./../c with */ and {dot: true}
    ✓ should match ./../c with */ and {nonegate: true}
    ✓ should match ./a/../c with */
    ✓ should match ./a/../c with */ and {dot: true}
    ✓ should match ./a/../c with */ and {nonegate: true}
    ✓ should match /.. with */
    ✓ should match /.. with */ and {dot: true}
    ✓ should match /.. with */ and {nonegate: true}
    ✓ should match /../c with */
    ✓ should match /../c with */ and {dot: true}
    ✓ should match /../c with */ and {nonegate: true}
    ✓ should match /../.c with */
    ✓ should match /../.c with */ and {dot: true}
    ✓ should match /../.c with */ and {nonegate: true}
    ✓ should match /../.c/ with */
    ✓ should match /../.c/ with */ and {dot: true}
    ✓ should match /../.c/ with */ and {nonegate: true}
    ✓ should match /a/../c with */
    ✓ should match /a/../c with */ and {dot: true}
    ✓ should match /a/../c with */ and {nonegate: true}
    ✓ should match a/../c with */
    ✓ should match a/../c with */ and {dot: true}
    ✓ should match a/../c with */ and {nonegate: true}
    ✓ should match ../.b/.c with */
    ✓ should match ../.b/.c with */ and {dot: true}
    ✓ should match ../.b/.c with */ and {nonegate: true}
    ✓ should match ../b/.c with */
    ✓ should match ../b/.c with */ and {dot: true}
    ✓ should match ../b/.c with */ and {nonegate: true}
    ✓ should match ./.b/.c with */
    ✓ should match ./.b/.c with */ and {dot: true}
    ✓ should match ./.b/.c with */ and {nonegate: true}
    ✓ should match ./b/.c with */
    ✓ should match ./b/.c with */ and {dot: true}
    ✓ should match ./b/.c with */ and {nonegate: true}
    ✓ should match .b with */
    ✓ should match .b with */ and {dot: true}
    ✓ should match .b with */ and {nonegate: true}
    ✓ should match .b.c with */
    ✓ should match .b.c with */ and {dot: true}
    ✓ should match .b.c with */ and {nonegate: true}
    ✓ should match .b.c/ with */
    ✓ should match .b.c/ with */ and {dot: true}
    ✓ should match .b.c/ with */ and {nonegate: true}
    ✓ should match .b/ with */
    ✓ should match .b/ with */ and {dot: true}
    ✓ should match .b/ with */ and {nonegate: true}
    ✓ should match .b/.c with */
    ✓ should match .b/.c with */ and {dot: true}
    ✓ should match .b/.c with */ and {nonegate: true}
    ✓ should match .b/c with */
    ✓ should match .b/c with */ and {dot: true}
    ✓ should match .b/c with */ and {nonegate: true}
    ✓ should match b/.c with */
    ✓ should match b/.c with */ and {dot: true}
    ✓ should match b/.c with */ and {nonegate: true}
    ✓ should match b/.c/ with */
    ✓ should match b/.c/ with */ and {dot: true}
    ✓ should match b/.c/ with */ and {nonegate: true}
    ✓ should match a/+b/c with */
    ✓ should match a/+b/c with */ and {dot: true}
    ✓ should match a/+b/c with */ and {nonegate: true}
    ✓ should match +a/+b/c with */
    ✓ should match +a/+b/c with */ and {dot: true}
    ✓ should match +a/+b/c with */ and {nonegate: true}
    ✓ should match a (foo) with */
    ✓ should match a (foo) with */ and {dot: true}
    ✓ should match a (foo) with */ and {nonegate: true}
    ✓ should match a (foo)/(bar) with */
    ✓ should match a (foo)/(bar) with */ and {dot: true}
    ✓ should match a (foo)/(bar) with */ and {nonegate: true}
    ✓ should match a/b/c (1) with */
    ✓ should match a/b/c (1) with */ and {dot: true}
    ✓ should match a/b/c (1) with */ and {nonegate: true}
    ✓ should match a/b (2)/c (1) with */
    ✓ should match a/b (2)/c (1) with */ and {dot: true}
    ✓ should match a/b (2)/c (1) with */ and {nonegate: true}
    ✓ should match a/b/c [def] with */
    ✓ should match a/b/c [def] with */ and {dot: true}
    ✓ should match a/b/c [def] with */ and {nonegate: true}
    ✓ should match a with */*
    ✓ should match a with */* and {dot: true}
    ✓ should match a with */* and {nonegate: true}
    ✓ should match a.md with */*
    ✓ should match a.md with */* and {dot: true}
    ✓ should match a.md with */* and {nonegate: true}
    ✓ should match a.js with */*
    ✓ should match a.js with */* and {dot: true}
    ✓ should match a.js with */* and {nonegate: true}
    ✓ should match a/ with */*
    ✓ should match a/ with */* and {dot: true}
    ✓ should match a/ with */* and {nonegate: true}
    ✓ should match a/b with */*
    ✓ should match a/b with */* and {dot: true}
    ✓ should match a/b with */* and {nonegate: true}
    ✓ should match a/b/.c.md with */*
    ✓ should match a/b/.c.md with */* and {dot: true}
    ✓ should match a/b/.c.md with */* and {nonegate: true}
    ✓ should match a/b/c with */*
    ✓ should match a/b/c with */* and {dot: true}
    ✓ should match a/b/c with */* and {nonegate: true}
    ✓ should match a/b/c.md with */*
    ✓ should match a/b/c.md with */* and {dot: true}
    ✓ should match a/b/c.md with */* and {nonegate: true}
    ✓ should match a/b/c/ with */*
    ✓ should match a/b/c/ with */* and {dot: true}
    ✓ should match a/b/c/ with */* and {nonegate: true}
    ✓ should match a/b/c/d with */*
    ✓ should match a/b/c/d with */* and {dot: true}
    ✓ should match a/b/c/d with */* and {nonegate: true}
    ✓ should match a/b/c/d/ with */*
    ✓ should match a/b/c/d/ with */* and {dot: true}
    ✓ should match a/b/c/d/ with */* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with */*
    ✓ should match a/b/c/d/e/f/z.js with */* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with */* and {nonegate: true}
    ✓ should match a/b/c/z.js with */*
    ✓ should match a/b/c/z.js with */* and {dot: true}
    ✓ should match a/b/c/z.js with */* and {nonegate: true}
    ✓ should match a/bb with */*
    ✓ should match a/bb with */* and {dot: true}
    ✓ should match a/bb with */* and {nonegate: true}
    ✓ should match a/cb with */*
    ✓ should match a/cb with */* and {dot: true}
    ✓ should match a/cb with */* and {nonegate: true}
    ✓ should match abbbz with */*
    ✓ should match abbbz with */* and {dot: true}
    ✓ should match abbbz with */* and {nonegate: true}
    ✓ should match abc with */*
    ✓ should match abc with */* and {dot: true}
    ✓ should match abc with */* and {nonegate: true}
    ✓ should match abd with */*
    ✓ should match abd with */* and {dot: true}
    ✓ should match abd with */* and {nonegate: true}
    ✓ should match z.js with */*
    ✓ should match z.js with */* and {dot: true}
    ✓ should match z.js with */* and {nonegate: true}
    ✓ should match za.js with */*
    ✓ should match za.js with */* and {dot: true}
    ✓ should match za.js with */* and {nonegate: true}
    ✓ should match !a.js with */*
    ✓ should match !a.js with */* and {dot: true}
    ✓ should match !a.js with */* and {nonegate: true}
    ✓ should match !a/b with */*
    ✓ should match !a/b with */* and {dot: true}
    ✓ should match !a/b with */* and {nonegate: true}
    ✓ should match !a/b/ with */*
    ✓ should match !a/b/ with */* and {dot: true}
    ✓ should match !a/b/ with */* and {nonegate: true}
    ✓ should match !a/b/c with */*
    ✓ should match !a/b/c with */* and {dot: true}
    ✓ should match !a/b/c with */* and {nonegate: true}
    ✓ should match !a/b/c/ with */*
    ✓ should match !a/b/c/ with */* and {dot: true}
    ✓ should match !a/b/c/ with */* and {nonegate: true}
    ✓ should match !a/!b with */*
    ✓ should match !a/!b with */* and {dot: true}
    ✓ should match !a/!b with */* and {nonegate: true}
    ✓ should match !a/!b/c with */*
    ✓ should match !a/!b/c with */* and {dot: true}
    ✓ should match !a/!b/c with */* and {nonegate: true}
    ✓ should match !a/!b/c/d with */*
    ✓ should match !a/!b/c/d with */* and {dot: true}
    ✓ should match !a/!b/c/d with */* and {nonegate: true}
    ✓ should match !a/b/.c.md with */*
    ✓ should match !a/b/.c.md with */* and {dot: true}
    ✓ should match !a/b/.c.md with */* and {nonegate: true}
    ✓ should match /a/ with */*
    ✓ should match /a/ with */* and {dot: true}
    ✓ should match /a/ with */* and {nonegate: true}
    ✓ should match /a/b with */*
    ✓ should match /a/b with */* and {dot: true}
    ✓ should match /a/b with */* and {nonegate: true}
    ✓ should match /a/cb with */*
    ✓ should match /a/cb with */* and {dot: true}
    ✓ should match /a/cb with */* and {nonegate: true}
    ✓ should match /a/bb with */*
    ✓ should match /a/bb with */* and {dot: true}
    ✓ should match /a/bb with */* and {nonegate: true}
    ✓ should match /a/b/c with */*
    ✓ should match /a/b/c with */* and {dot: true}
    ✓ should match /a/b/c with */* and {nonegate: true}
    ✓ should match /a/b/c/ with */*
    ✓ should match /a/b/c/ with */* and {dot: true}
    ✓ should match /a/b/c/ with */* and {nonegate: true}
    ✓ should match /a/b/c/d with */*
    ✓ should match /a/b/c/d with */* and {dot: true}
    ✓ should match /a/b/c/d with */* and {nonegate: true}
    ✓ should match /a/b/c/d/ with */*
    ✓ should match /a/b/c/d/ with */* and {dot: true}
    ✓ should match /a/b/c/d/ with */* and {nonegate: true}
    ✓ should match . with */*
    ✓ should match . with */* and {dot: true}
    ✓ should match . with */* and {nonegate: true}
    ✓ should match ./ with */*
    ✓ should match ./ with */* and {dot: true}
    ✓ should match ./ with */* and {nonegate: true}
    ✓ should match .. with */*
    ✓ should match .. with */* and {dot: true}
    ✓ should match .. with */* and {nonegate: true}
    ✓ should match ../c with */*
    ✓ should match ../c with */* and {dot: true}
    ✓ should match ../c with */* and {nonegate: true}
    ✓ should match ../c with */*
    ✓ should match ../c with */* and {dot: true}
    ✓ should match ../c with */* and {nonegate: true}
    ✓ should match ./../c with */*
    ✓ should match ./../c with */* and {dot: true}
    ✓ should match ./../c with */* and {nonegate: true}
    ✓ should match ./a/../c with */*
    ✓ should match ./a/../c with */* and {dot: true}
    ✓ should match ./a/../c with */* and {nonegate: true}
    ✓ should match /.. with */*
    ✓ should match /.. with */* and {dot: true}
    ✓ should match /.. with */* and {nonegate: true}
    ✓ should match /../c with */*
    ✓ should match /../c with */* and {dot: true}
    ✓ should match /../c with */* and {nonegate: true}
    ✓ should match /../.c with */*
    ✓ should match /../.c with */* and {dot: true}
    ✓ should match /../.c with */* and {nonegate: true}
    ✓ should match /../.c/ with */*
    ✓ should match /../.c/ with */* and {dot: true}
    ✓ should match /../.c/ with */* and {nonegate: true}
    ✓ should match /a/../c with */*
    ✓ should match /a/../c with */* and {dot: true}
    ✓ should match /a/../c with */* and {nonegate: true}
    ✓ should match a/../c with */*
    ✓ should match a/../c with */* and {dot: true}
    ✓ should match a/../c with */* and {nonegate: true}
    ✓ should match ../.b/.c with */*
    ✓ should match ../.b/.c with */* and {dot: true}
    ✓ should match ../.b/.c with */* and {nonegate: true}
    ✓ should match ../b/.c with */*
    ✓ should match ../b/.c with */* and {dot: true}
    ✓ should match ../b/.c with */* and {nonegate: true}
    ✓ should match ./.b/.c with */*
    ✓ should match ./.b/.c with */* and {dot: true}
    ✓ should match ./.b/.c with */* and {nonegate: true}
    ✓ should match ./b/.c with */*
    ✓ should match ./b/.c with */* and {dot: true}
    ✓ should match ./b/.c with */* and {nonegate: true}
    ✓ should match .b with */*
    ✓ should match .b with */* and {dot: true}
    ✓ should match .b with */* and {nonegate: true}
    ✓ should match .b.c with */*
    ✓ should match .b.c with */* and {dot: true}
    ✓ should match .b.c with */* and {nonegate: true}
    ✓ should match .b.c/ with */*
    ✓ should match .b.c/ with */* and {dot: true}
    ✓ should match .b.c/ with */* and {nonegate: true}
    ✓ should match .b/ with */*
    ✓ should match .b/ with */* and {dot: true}
    ✓ should match .b/ with */* and {nonegate: true}
    ✓ should match .b/.c with */*
    ✓ should match .b/.c with */* and {dot: true}
    ✓ should match .b/.c with */* and {nonegate: true}
    ✓ should match .b/c with */*
    ✓ should match .b/c with */* and {dot: true}
    ✓ should match .b/c with */* and {nonegate: true}
    ✓ should match b/.c with */*
    ✓ should match b/.c with */* and {dot: true}
    ✓ should match b/.c with */* and {nonegate: true}
    ✓ should match b/.c/ with */*
    ✓ should match b/.c/ with */* and {dot: true}
    ✓ should match b/.c/ with */* and {nonegate: true}
    ✓ should match a/+b/c with */*
    ✓ should match a/+b/c with */* and {dot: true}
    ✓ should match a/+b/c with */* and {nonegate: true}
    ✓ should match +a/+b/c with */*
    ✓ should match +a/+b/c with */* and {dot: true}
    ✓ should match +a/+b/c with */* and {nonegate: true}
    ✓ should match a (foo) with */*
    ✓ should match a (foo) with */* and {dot: true}
    ✓ should match a (foo) with */* and {nonegate: true}
    ✓ should match a (foo)/(bar) with */*
    ✓ should match a (foo)/(bar) with */* and {dot: true}
    ✓ should match a (foo)/(bar) with */* and {nonegate: true}
    ✓ should match a/b/c (1) with */*
    ✓ should match a/b/c (1) with */* and {dot: true}
    ✓ should match a/b/c (1) with */* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with */*
    ✓ should match a/b (2)/c (1) with */* and {dot: true}
    ✓ should match a/b (2)/c (1) with */* and {nonegate: true}
    ✓ should match a/b/c [def] with */*
    ✓ should match a/b/c [def] with */* and {dot: true}
    ✓ should match a/b/c [def] with */* and {nonegate: true}
    ✓ should match a with */*/*
    ✓ should match a with */*/* and {dot: true}
    ✓ should match a with */*/* and {nonegate: true}
    ✓ should match a.md with */*/*
    ✓ should match a.md with */*/* and {dot: true}
    ✓ should match a.md with */*/* and {nonegate: true}
    ✓ should match a.js with */*/*
    ✓ should match a.js with */*/* and {dot: true}
    ✓ should match a.js with */*/* and {nonegate: true}
    ✓ should match a/ with */*/*
    ✓ should match a/ with */*/* and {dot: true}
    ✓ should match a/ with */*/* and {nonegate: true}
    ✓ should match a/b with */*/*
    ✓ should match a/b with */*/* and {dot: true}
    ✓ should match a/b with */*/* and {nonegate: true}
    ✓ should match a/b/.c.md with */*/*
    ✓ should match a/b/.c.md with */*/* and {dot: true}
    ✓ should match a/b/.c.md with */*/* and {nonegate: true}
    ✓ should match a/b/c with */*/*
    ✓ should match a/b/c with */*/* and {dot: true}
    ✓ should match a/b/c with */*/* and {nonegate: true}
    ✓ should match a/b/c.md with */*/*
    ✓ should match a/b/c.md with */*/* and {dot: true}
    ✓ should match a/b/c.md with */*/* and {nonegate: true}
    ✓ should match a/b/c/ with */*/*
    ✓ should match a/b/c/ with */*/* and {dot: true}
    ✓ should match a/b/c/ with */*/* and {nonegate: true}
    ✓ should match a/b/c/d with */*/*
    ✓ should match a/b/c/d with */*/* and {dot: true}
    ✓ should match a/b/c/d with */*/* and {nonegate: true}
    ✓ should match a/b/c/d/ with */*/*
    ✓ should match a/b/c/d/ with */*/* and {dot: true}
    ✓ should match a/b/c/d/ with */*/* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with */*/*
    ✓ should match a/b/c/d/e/f/z.js with */*/* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with */*/* and {nonegate: true}
    ✓ should match a/b/c/z.js with */*/*
    ✓ should match a/b/c/z.js with */*/* and {dot: true}
    ✓ should match a/b/c/z.js with */*/* and {nonegate: true}
    ✓ should match a/bb with */*/*
    ✓ should match a/bb with */*/* and {dot: true}
    ✓ should match a/bb with */*/* and {nonegate: true}
    ✓ should match a/cb with */*/*
    ✓ should match a/cb with */*/* and {dot: true}
    ✓ should match a/cb with */*/* and {nonegate: true}
    ✓ should match abbbz with */*/*
    ✓ should match abbbz with */*/* and {dot: true}
    ✓ should match abbbz with */*/* and {nonegate: true}
    ✓ should match abc with */*/*
    ✓ should match abc with */*/* and {dot: true}
    ✓ should match abc with */*/* and {nonegate: true}
    ✓ should match abd with */*/*
    ✓ should match abd with */*/* and {dot: true}
    ✓ should match abd with */*/* and {nonegate: true}
    ✓ should match z.js with */*/*
    ✓ should match z.js with */*/* and {dot: true}
    ✓ should match z.js with */*/* and {nonegate: true}
    ✓ should match za.js with */*/*
    ✓ should match za.js with */*/* and {dot: true}
    ✓ should match za.js with */*/* and {nonegate: true}
    ✓ should match !a.js with */*/*
    ✓ should match !a.js with */*/* and {dot: true}
    ✓ should match !a.js with */*/* and {nonegate: true}
    ✓ should match !a/b with */*/*
    ✓ should match !a/b with */*/* and {dot: true}
    ✓ should match !a/b with */*/* and {nonegate: true}
    ✓ should match !a/b/ with */*/*
    ✓ should match !a/b/ with */*/* and {dot: true}
    ✓ should match !a/b/ with */*/* and {nonegate: true}
    ✓ should match !a/b/c with */*/*
    ✓ should match !a/b/c with */*/* and {dot: true}
    ✓ should match !a/b/c with */*/* and {nonegate: true}
    ✓ should match !a/b/c/ with */*/*
    ✓ should match !a/b/c/ with */*/* and {dot: true}
    ✓ should match !a/b/c/ with */*/* and {nonegate: true}
    ✓ should match !a/!b with */*/*
    ✓ should match !a/!b with */*/* and {dot: true}
    ✓ should match !a/!b with */*/* and {nonegate: true}
    ✓ should match !a/!b/c with */*/*
    ✓ should match !a/!b/c with */*/* and {dot: true}
    ✓ should match !a/!b/c with */*/* and {nonegate: true}
    ✓ should match !a/!b/c/d with */*/*
    ✓ should match !a/!b/c/d with */*/* and {dot: true}
    ✓ should match !a/!b/c/d with */*/* and {nonegate: true}
    ✓ should match !a/b/.c.md with */*/*
    ✓ should match !a/b/.c.md with */*/* and {dot: true}
    ✓ should match !a/b/.c.md with */*/* and {nonegate: true}
    ✓ should match /a/ with */*/*
    ✓ should match /a/ with */*/* and {dot: true}
    ✓ should match /a/ with */*/* and {nonegate: true}
    ✓ should match /a/b with */*/*
    ✓ should match /a/b with */*/* and {dot: true}
    ✓ should match /a/b with */*/* and {nonegate: true}
    ✓ should match /a/cb with */*/*
    ✓ should match /a/cb with */*/* and {dot: true}
    ✓ should match /a/cb with */*/* and {nonegate: true}
    ✓ should match /a/bb with */*/*
    ✓ should match /a/bb with */*/* and {dot: true}
    ✓ should match /a/bb with */*/* and {nonegate: true}
    ✓ should match /a/b/c with */*/*
    ✓ should match /a/b/c with */*/* and {dot: true}
    ✓ should match /a/b/c with */*/* and {nonegate: true}
    ✓ should match /a/b/c/ with */*/*
    ✓ should match /a/b/c/ with */*/* and {dot: true}
    ✓ should match /a/b/c/ with */*/* and {nonegate: true}
    ✓ should match /a/b/c/d with */*/*
    ✓ should match /a/b/c/d with */*/* and {dot: true}
    ✓ should match /a/b/c/d with */*/* and {nonegate: true}
    ✓ should match /a/b/c/d/ with */*/*
    ✓ should match /a/b/c/d/ with */*/* and {dot: true}
    ✓ should match /a/b/c/d/ with */*/* and {nonegate: true}
    ✓ should match . with */*/*
    ✓ should match . with */*/* and {dot: true}
    ✓ should match . with */*/* and {nonegate: true}
    ✓ should match ./ with */*/*
    ✓ should match ./ with */*/* and {dot: true}
    ✓ should match ./ with */*/* and {nonegate: true}
    ✓ should match .. with */*/*
    ✓ should match .. with */*/* and {dot: true}
    ✓ should match .. with */*/* and {nonegate: true}
    ✓ should match ../c with */*/*
    ✓ should match ../c with */*/* and {dot: true}
    ✓ should match ../c with */*/* and {nonegate: true}
    ✓ should match ../c with */*/*
    ✓ should match ../c with */*/* and {dot: true}
    ✓ should match ../c with */*/* and {nonegate: true}
    ✓ should match ./../c with */*/*
    ✓ should match ./../c with */*/* and {dot: true}
    ✓ should match ./../c with */*/* and {nonegate: true}
    ✓ should match ./a/../c with */*/*
    ✓ should match ./a/../c with */*/* and {dot: true}
    ✓ should match ./a/../c with */*/* and {nonegate: true}
    ✓ should match /.. with */*/*
    ✓ should match /.. with */*/* and {dot: true}
    ✓ should match /.. with */*/* and {nonegate: true}
    ✓ should match /../c with */*/*
    ✓ should match /../c with */*/* and {dot: true}
    ✓ should match /../c with */*/* and {nonegate: true}
    ✓ should match /../.c with */*/*
    ✓ should match /../.c with */*/* and {dot: true}
    ✓ should match /../.c with */*/* and {nonegate: true}
    ✓ should match /../.c/ with */*/*
    ✓ should match /../.c/ with */*/* and {dot: true}
    ✓ should match /../.c/ with */*/* and {nonegate: true}
    ✓ should match /a/../c with */*/*
    ✓ should match /a/../c with */*/* and {dot: true}
    ✓ should match /a/../c with */*/* and {nonegate: true}
    ✓ should match a/../c with */*/*
    ✓ should match a/../c with */*/* and {dot: true}
    ✓ should match a/../c with */*/* and {nonegate: true}
    ✓ should match ../.b/.c with */*/*
    ✓ should match ../.b/.c with */*/* and {dot: true}
    ✓ should match ../.b/.c with */*/* and {nonegate: true}
    ✓ should match ../b/.c with */*/*
    ✓ should match ../b/.c with */*/* and {dot: true}
    ✓ should match ../b/.c with */*/* and {nonegate: true}
    ✓ should match ./.b/.c with */*/*
    ✓ should match ./.b/.c with */*/* and {dot: true}
    ✓ should match ./.b/.c with */*/* and {nonegate: true}
    ✓ should match ./b/.c with */*/*
    ✓ should match ./b/.c with */*/* and {dot: true}
    ✓ should match ./b/.c with */*/* and {nonegate: true}
    ✓ should match .b with */*/*
    ✓ should match .b with */*/* and {dot: true}
    ✓ should match .b with */*/* and {nonegate: true}
    ✓ should match .b.c with */*/*
    ✓ should match .b.c with */*/* and {dot: true}
    ✓ should match .b.c with */*/* and {nonegate: true}
    ✓ should match .b.c/ with */*/*
    ✓ should match .b.c/ with */*/* and {dot: true}
    ✓ should match .b.c/ with */*/* and {nonegate: true}
    ✓ should match .b/ with */*/*
    ✓ should match .b/ with */*/* and {dot: true}
    ✓ should match .b/ with */*/* and {nonegate: true}
    ✓ should match .b/.c with */*/*
    ✓ should match .b/.c with */*/* and {dot: true}
    ✓ should match .b/.c with */*/* and {nonegate: true}
    ✓ should match .b/c with */*/*
    ✓ should match .b/c with */*/* and {dot: true}
    ✓ should match .b/c with */*/* and {nonegate: true}
    ✓ should match b/.c with */*/*
    ✓ should match b/.c with */*/* and {dot: true}
    ✓ should match b/.c with */*/* and {nonegate: true}
    ✓ should match b/.c/ with */*/*
    ✓ should match b/.c/ with */*/* and {dot: true}
    ✓ should match b/.c/ with */*/* and {nonegate: true}
    ✓ should match a/+b/c with */*/*
    ✓ should match a/+b/c with */*/* and {dot: true}
    ✓ should match a/+b/c with */*/* and {nonegate: true}
    ✓ should match +a/+b/c with */*/*
    ✓ should match +a/+b/c with */*/* and {dot: true}
    ✓ should match +a/+b/c with */*/* and {nonegate: true}
    ✓ should match a (foo) with */*/*
    ✓ should match a (foo) with */*/* and {dot: true}
    ✓ should match a (foo) with */*/* and {nonegate: true}
    ✓ should match a (foo)/(bar) with */*/*
    ✓ should match a (foo)/(bar) with */*/* and {dot: true}
    ✓ should match a (foo)/(bar) with */*/* and {nonegate: true}
    ✓ should match a/b/c (1) with */*/*
    ✓ should match a/b/c (1) with */*/* and {dot: true}
    ✓ should match a/b/c (1) with */*/* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with */*/*
    ✓ should match a/b (2)/c (1) with */*/* and {dot: true}
    ✓ should match a/b (2)/c (1) with */*/* and {nonegate: true}
    ✓ should match a/b/c [def] with */*/*
    ✓ should match a/b/c [def] with */*/* and {dot: true}
    ✓ should match a/b/c [def] with */*/* and {nonegate: true}
    ✓ should match a with */*/*/*
    ✓ should match a with */*/*/* and {dot: true}
    ✓ should match a with */*/*/* and {nonegate: true}
    ✓ should match a.md with */*/*/*
    ✓ should match a.md with */*/*/* and {dot: true}
    ✓ should match a.md with */*/*/* and {nonegate: true}
    ✓ should match a.js with */*/*/*
    ✓ should match a.js with */*/*/* and {dot: true}
    ✓ should match a.js with */*/*/* and {nonegate: true}
    ✓ should match a/ with */*/*/*
    ✓ should match a/ with */*/*/* and {dot: true}
    ✓ should match a/ with */*/*/* and {nonegate: true}
    ✓ should match a/b with */*/*/*
    ✓ should match a/b with */*/*/* and {dot: true}
    ✓ should match a/b with */*/*/* and {nonegate: true}
    ✓ should match a/b/.c.md with */*/*/*
    ✓ should match a/b/.c.md with */*/*/* and {dot: true}
    ✓ should match a/b/.c.md with */*/*/* and {nonegate: true}
    ✓ should match a/b/c with */*/*/*
    ✓ should match a/b/c with */*/*/* and {dot: true}
    ✓ should match a/b/c with */*/*/* and {nonegate: true}
    ✓ should match a/b/c.md with */*/*/*
    ✓ should match a/b/c.md with */*/*/* and {dot: true}
    ✓ should match a/b/c.md with */*/*/* and {nonegate: true}
    ✓ should match a/b/c/ with */*/*/*
    ✓ should match a/b/c/ with */*/*/* and {dot: true}
    ✓ should match a/b/c/ with */*/*/* and {nonegate: true}
    ✓ should match a/b/c/d with */*/*/*
    ✓ should match a/b/c/d with */*/*/* and {dot: true}
    ✓ should match a/b/c/d with */*/*/* and {nonegate: true}
    ✓ should match a/b/c/d/ with */*/*/*
    ✓ should match a/b/c/d/ with */*/*/* and {dot: true}
    ✓ should match a/b/c/d/ with */*/*/* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with */*/*/*
    ✓ should match a/b/c/d/e/f/z.js with */*/*/* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with */*/*/* and {nonegate: true}
    ✓ should match a/b/c/z.js with */*/*/*
    ✓ should match a/b/c/z.js with */*/*/* and {dot: true}
    ✓ should match a/b/c/z.js with */*/*/* and {nonegate: true}
    ✓ should match a/bb with */*/*/*
    ✓ should match a/bb with */*/*/* and {dot: true}
    ✓ should match a/bb with */*/*/* and {nonegate: true}
    ✓ should match a/cb with */*/*/*
    ✓ should match a/cb with */*/*/* and {dot: true}
    ✓ should match a/cb with */*/*/* and {nonegate: true}
    ✓ should match abbbz with */*/*/*
    ✓ should match abbbz with */*/*/* and {dot: true}
    ✓ should match abbbz with */*/*/* and {nonegate: true}
    ✓ should match abc with */*/*/*
    ✓ should match abc with */*/*/* and {dot: true}
    ✓ should match abc with */*/*/* and {nonegate: true}
    ✓ should match abd with */*/*/*
    ✓ should match abd with */*/*/* and {dot: true}
    ✓ should match abd with */*/*/* and {nonegate: true}
    ✓ should match z.js with */*/*/*
    ✓ should match z.js with */*/*/* and {dot: true}
    ✓ should match z.js with */*/*/* and {nonegate: true}
    ✓ should match za.js with */*/*/*
    ✓ should match za.js with */*/*/* and {dot: true}
    ✓ should match za.js with */*/*/* and {nonegate: true}
    ✓ should match !a.js with */*/*/*
    ✓ should match !a.js with */*/*/* and {dot: true}
    ✓ should match !a.js with */*/*/* and {nonegate: true}
    ✓ should match !a/b with */*/*/*
    ✓ should match !a/b with */*/*/* and {dot: true}
    ✓ should match !a/b with */*/*/* and {nonegate: true}
    ✓ should match !a/b/ with */*/*/*
    ✓ should match !a/b/ with */*/*/* and {dot: true}
    ✓ should match !a/b/ with */*/*/* and {nonegate: true}
    ✓ should match !a/b/c with */*/*/*
    ✓ should match !a/b/c with */*/*/* and {dot: true}
    ✓ should match !a/b/c with */*/*/* and {nonegate: true}
    ✓ should match !a/b/c/ with */*/*/*
    ✓ should match !a/b/c/ with */*/*/* and {dot: true}
    ✓ should match !a/b/c/ with */*/*/* and {nonegate: true}
    ✓ should match !a/!b with */*/*/*
    ✓ should match !a/!b with */*/*/* and {dot: true}
    ✓ should match !a/!b with */*/*/* and {nonegate: true}
    ✓ should match !a/!b/c with */*/*/*
    ✓ should match !a/!b/c with */*/*/* and {dot: true}
    ✓ should match !a/!b/c with */*/*/* and {nonegate: true}
    ✓ should match !a/!b/c/d with */*/*/*
    ✓ should match !a/!b/c/d with */*/*/* and {dot: true}
    ✓ should match !a/!b/c/d with */*/*/* and {nonegate: true}
    ✓ should match !a/b/.c.md with */*/*/*
    ✓ should match !a/b/.c.md with */*/*/* and {dot: true}
    ✓ should match !a/b/.c.md with */*/*/* and {nonegate: true}
    ✓ should match /a/ with */*/*/*
    ✓ should match /a/ with */*/*/* and {dot: true}
    ✓ should match /a/ with */*/*/* and {nonegate: true}
    ✓ should match /a/b with */*/*/*
    ✓ should match /a/b with */*/*/* and {dot: true}
    ✓ should match /a/b with */*/*/* and {nonegate: true}
    ✓ should match /a/cb with */*/*/*
    ✓ should match /a/cb with */*/*/* and {dot: true}
    ✓ should match /a/cb with */*/*/* and {nonegate: true}
    ✓ should match /a/bb with */*/*/*
    ✓ should match /a/bb with */*/*/* and {dot: true}
    ✓ should match /a/bb with */*/*/* and {nonegate: true}
    ✓ should match /a/b/c with */*/*/*
    ✓ should match /a/b/c with */*/*/* and {dot: true}
    ✓ should match /a/b/c with */*/*/* and {nonegate: true}
    ✓ should match /a/b/c/ with */*/*/*
    ✓ should match /a/b/c/ with */*/*/* and {dot: true}
    ✓ should match /a/b/c/ with */*/*/* and {nonegate: true}
    ✓ should match /a/b/c/d with */*/*/*
    ✓ should match /a/b/c/d with */*/*/* and {dot: true}
    ✓ should match /a/b/c/d with */*/*/* and {nonegate: true}
    ✓ should match /a/b/c/d/ with */*/*/*
    ✓ should match /a/b/c/d/ with */*/*/* and {dot: true}
    ✓ should match /a/b/c/d/ with */*/*/* and {nonegate: true}
    ✓ should match . with */*/*/*
    ✓ should match . with */*/*/* and {dot: true}
    ✓ should match . with */*/*/* and {nonegate: true}
    ✓ should match ./ with */*/*/*
    ✓ should match ./ with */*/*/* and {dot: true}
    ✓ should match ./ with */*/*/* and {nonegate: true}
    ✓ should match .. with */*/*/*
    ✓ should match .. with */*/*/* and {dot: true}
    ✓ should match .. with */*/*/* and {nonegate: true}
    ✓ should match ../c with */*/*/*
    ✓ should match ../c with */*/*/* and {dot: true}
    ✓ should match ../c with */*/*/* and {nonegate: true}
    ✓ should match ../c with */*/*/*
    ✓ should match ../c with */*/*/* and {dot: true}
    ✓ should match ../c with */*/*/* and {nonegate: true}
    ✓ should match ./../c with */*/*/*
    ✓ should match ./../c with */*/*/* and {dot: true}
    ✓ should match ./../c with */*/*/* and {nonegate: true}
    ✓ should match ./a/../c with */*/*/*
    ✓ should match ./a/../c with */*/*/* and {dot: true}
    ✓ should match ./a/../c with */*/*/* and {nonegate: true}
    ✓ should match /.. with */*/*/*
    ✓ should match /.. with */*/*/* and {dot: true}
    ✓ should match /.. with */*/*/* and {nonegate: true}
    ✓ should match /../c with */*/*/*
    ✓ should match /../c with */*/*/* and {dot: true}
    ✓ should match /../c with */*/*/* and {nonegate: true}
    ✓ should match /../.c with */*/*/*
    ✓ should match /../.c with */*/*/* and {dot: true}
    ✓ should match /../.c with */*/*/* and {nonegate: true}
    ✓ should match /../.c/ with */*/*/*
    ✓ should match /../.c/ with */*/*/* and {dot: true}
    ✓ should match /../.c/ with */*/*/* and {nonegate: true}
    ✓ should match /a/../c with */*/*/*
    ✓ should match /a/../c with */*/*/* and {dot: true}
    ✓ should match /a/../c with */*/*/* and {nonegate: true}
    ✓ should match a/../c with */*/*/*
    ✓ should match a/../c with */*/*/* and {dot: true}
    ✓ should match a/../c with */*/*/* and {nonegate: true}
    ✓ should match ../.b/.c with */*/*/*
    ✓ should match ../.b/.c with */*/*/* and {dot: true}
    ✓ should match ../.b/.c with */*/*/* and {nonegate: true}
    ✓ should match ../b/.c with */*/*/*
    ✓ should match ../b/.c with */*/*/* and {dot: true}
    ✓ should match ../b/.c with */*/*/* and {nonegate: true}
    ✓ should match ./.b/.c with */*/*/*
    ✓ should match ./.b/.c with */*/*/* and {dot: true}
    ✓ should match ./.b/.c with */*/*/* and {nonegate: true}
    ✓ should match ./b/.c with */*/*/*
    ✓ should match ./b/.c with */*/*/* and {dot: true}
    ✓ should match ./b/.c with */*/*/* and {nonegate: true}
    ✓ should match .b with */*/*/*
    ✓ should match .b with */*/*/* and {dot: true}
    ✓ should match .b with */*/*/* and {nonegate: true}
    ✓ should match .b.c with */*/*/*
    ✓ should match .b.c with */*/*/* and {dot: true}
    ✓ should match .b.c with */*/*/* and {nonegate: true}
    ✓ should match .b.c/ with */*/*/*
    ✓ should match .b.c/ with */*/*/* and {dot: true}
    ✓ should match .b.c/ with */*/*/* and {nonegate: true}
    ✓ should match .b/ with */*/*/*
    ✓ should match .b/ with */*/*/* and {dot: true}
    ✓ should match .b/ with */*/*/* and {nonegate: true}
    ✓ should match .b/.c with */*/*/*
    ✓ should match .b/.c with */*/*/* and {dot: true}
    ✓ should match .b/.c with */*/*/* and {nonegate: true}
    ✓ should match .b/c with */*/*/*
    ✓ should match .b/c with */*/*/* and {dot: true}
    ✓ should match .b/c with */*/*/* and {nonegate: true}
    ✓ should match b/.c with */*/*/*
    ✓ should match b/.c with */*/*/* and {dot: true}
    ✓ should match b/.c with */*/*/* and {nonegate: true}
    ✓ should match b/.c/ with */*/*/*
    ✓ should match b/.c/ with */*/*/* and {dot: true}
    ✓ should match b/.c/ with */*/*/* and {nonegate: true}
    ✓ should match a/+b/c with */*/*/*
    ✓ should match a/+b/c with */*/*/* and {dot: true}
    ✓ should match a/+b/c with */*/*/* and {nonegate: true}
    ✓ should match +a/+b/c with */*/*/*
    ✓ should match +a/+b/c with */*/*/* and {dot: true}
    ✓ should match +a/+b/c with */*/*/* and {nonegate: true}
    ✓ should match a (foo) with */*/*/*
    ✓ should match a (foo) with */*/*/* and {dot: true}
    ✓ should match a (foo) with */*/*/* and {nonegate: true}
    ✓ should match a (foo)/(bar) with */*/*/*
    ✓ should match a (foo)/(bar) with */*/*/* and {dot: true}
    ✓ should match a (foo)/(bar) with */*/*/* and {nonegate: true}
    ✓ should match a/b/c (1) with */*/*/*
    ✓ should match a/b/c (1) with */*/*/* and {dot: true}
    ✓ should match a/b/c (1) with */*/*/* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with */*/*/*
    ✓ should match a/b (2)/c (1) with */*/*/* and {dot: true}
    ✓ should match a/b (2)/c (1) with */*/*/* and {nonegate: true}
    ✓ should match a/b/c [def] with */*/*/*
    ✓ should match a/b/c [def] with */*/*/* and {dot: true}
    ✓ should match a/b/c [def] with */*/*/* and {nonegate: true}
    ✓ should match a with /*
    ✓ should match a with /* and {dot: true}
    ✓ should match a with /* and {nonegate: true}
    ✓ should match a.md with /*
    ✓ should match a.md with /* and {dot: true}
    ✓ should match a.md with /* and {nonegate: true}
    ✓ should match a.js with /*
    ✓ should match a.js with /* and {dot: true}
    ✓ should match a.js with /* and {nonegate: true}
    ✓ should match a/ with /*
    ✓ should match a/ with /* and {dot: true}
    ✓ should match a/ with /* and {nonegate: true}
    ✓ should match a/b with /*
    ✓ should match a/b with /* and {dot: true}
    ✓ should match a/b with /* and {nonegate: true}
    ✓ should match a/b/.c.md with /*
    ✓ should match a/b/.c.md with /* and {dot: true}
    ✓ should match a/b/.c.md with /* and {nonegate: true}
    ✓ should match a/b/c with /*
    ✓ should match a/b/c with /* and {dot: true}
    ✓ should match a/b/c with /* and {nonegate: true}
    ✓ should match a/b/c.md with /*
    ✓ should match a/b/c.md with /* and {dot: true}
    ✓ should match a/b/c.md with /* and {nonegate: true}
    ✓ should match a/b/c/ with /*
    ✓ should match a/b/c/ with /* and {dot: true}
    ✓ should match a/b/c/ with /* and {nonegate: true}
    ✓ should match a/b/c/d with /*
    ✓ should match a/b/c/d with /* and {dot: true}
    ✓ should match a/b/c/d with /* and {nonegate: true}
    ✓ should match a/b/c/d/ with /*
    ✓ should match a/b/c/d/ with /* and {dot: true}
    ✓ should match a/b/c/d/ with /* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with /*
    ✓ should match a/b/c/d/e/f/z.js with /* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with /* and {nonegate: true}
    ✓ should match a/b/c/z.js with /*
    ✓ should match a/b/c/z.js with /* and {dot: true}
    ✓ should match a/b/c/z.js with /* and {nonegate: true}
    ✓ should match a/bb with /*
    ✓ should match a/bb with /* and {dot: true}
    ✓ should match a/bb with /* and {nonegate: true}
    ✓ should match a/cb with /*
    ✓ should match a/cb with /* and {dot: true}
    ✓ should match a/cb with /* and {nonegate: true}
    ✓ should match abbbz with /*
    ✓ should match abbbz with /* and {dot: true}
    ✓ should match abbbz with /* and {nonegate: true}
    ✓ should match abc with /*
    ✓ should match abc with /* and {dot: true}
    ✓ should match abc with /* and {nonegate: true}
    ✓ should match abd with /*
    ✓ should match abd with /* and {dot: true}
    ✓ should match abd with /* and {nonegate: true}
    ✓ should match z.js with /*
    ✓ should match z.js with /* and {dot: true}
    ✓ should match z.js with /* and {nonegate: true}
    ✓ should match za.js with /*
    ✓ should match za.js with /* and {dot: true}
    ✓ should match za.js with /* and {nonegate: true}
    ✓ should match !a.js with /*
    ✓ should match !a.js with /* and {dot: true}
    ✓ should match !a.js with /* and {nonegate: true}
    ✓ should match !a/b with /*
    ✓ should match !a/b with /* and {dot: true}
    ✓ should match !a/b with /* and {nonegate: true}
    ✓ should match !a/b/ with /*
    ✓ should match !a/b/ with /* and {dot: true}
    ✓ should match !a/b/ with /* and {nonegate: true}
    ✓ should match !a/b/c with /*
    ✓ should match !a/b/c with /* and {dot: true}
    ✓ should match !a/b/c with /* and {nonegate: true}
    ✓ should match !a/b/c/ with /*
    ✓ should match !a/b/c/ with /* and {dot: true}
    ✓ should match !a/b/c/ with /* and {nonegate: true}
    ✓ should match !a/!b with /*
    ✓ should match !a/!b with /* and {dot: true}
    ✓ should match !a/!b with /* and {nonegate: true}
    ✓ should match !a/!b/c with /*
    ✓ should match !a/!b/c with /* and {dot: true}
    ✓ should match !a/!b/c with /* and {nonegate: true}
    ✓ should match !a/!b/c/d with /*
    ✓ should match !a/!b/c/d with /* and {dot: true}
    ✓ should match !a/!b/c/d with /* and {nonegate: true}
    ✓ should match !a/b/.c.md with /*
    ✓ should match !a/b/.c.md with /* and {dot: true}
    ✓ should match !a/b/.c.md with /* and {nonegate: true}
    ✓ should match /a/ with /*
    ✓ should match /a/ with /* and {dot: true}
    ✓ should match /a/ with /* and {nonegate: true}
    ✓ should match /a/b with /*
    ✓ should match /a/b with /* and {dot: true}
    ✓ should match /a/b with /* and {nonegate: true}
    ✓ should match /a/cb with /*
    ✓ should match /a/cb with /* and {dot: true}
    ✓ should match /a/cb with /* and {nonegate: true}
    ✓ should match /a/bb with /*
    ✓ should match /a/bb with /* and {dot: true}
    ✓ should match /a/bb with /* and {nonegate: true}
    ✓ should match /a/b/c with /*
    ✓ should match /a/b/c with /* and {dot: true}
    ✓ should match /a/b/c with /* and {nonegate: true}
    ✓ should match /a/b/c/ with /*
    ✓ should match /a/b/c/ with /* and {dot: true}
    ✓ should match /a/b/c/ with /* and {nonegate: true}
    ✓ should match /a/b/c/d with /*
    ✓ should match /a/b/c/d with /* and {dot: true}
    ✓ should match /a/b/c/d with /* and {nonegate: true}
    ✓ should match /a/b/c/d/ with /*
    ✓ should match /a/b/c/d/ with /* and {dot: true}
    ✓ should match /a/b/c/d/ with /* and {nonegate: true}
    ✓ should match . with /*
    ✓ should match . with /* and {dot: true}
    ✓ should match . with /* and {nonegate: true}
    ✓ should match ./ with /*
    ✓ should match ./ with /* and {dot: true}
    ✓ should match ./ with /* and {nonegate: true}
    ✓ should match .. with /*
    ✓ should match .. with /* and {dot: true}
    ✓ should match .. with /* and {nonegate: true}
    ✓ should match ../c with /*
    ✓ should match ../c with /* and {dot: true}
    ✓ should match ../c with /* and {nonegate: true}
    ✓ should match ../c with /*
    ✓ should match ../c with /* and {dot: true}
    ✓ should match ../c with /* and {nonegate: true}
    ✓ should match ./../c with /*
    ✓ should match ./../c with /* and {dot: true}
    ✓ should match ./../c with /* and {nonegate: true}
    ✓ should match ./a/../c with /*
    ✓ should match ./a/../c with /* and {dot: true}
    ✓ should match ./a/../c with /* and {nonegate: true}
    ✓ should match /.. with /*
    ✓ should match /.. with /* and {dot: true}
    ✓ should match /.. with /* and {nonegate: true}
    ✓ should match /../c with /*
    ✓ should match /../c with /* and {dot: true}
    ✓ should match /../c with /* and {nonegate: true}
    ✓ should match /../.c with /*
    ✓ should match /../.c with /* and {dot: true}
    ✓ should match /../.c with /* and {nonegate: true}
    ✓ should match /../.c/ with /*
    ✓ should match /../.c/ with /* and {dot: true}
    ✓ should match /../.c/ with /* and {nonegate: true}
    ✓ should match /a/../c with /*
    ✓ should match /a/../c with /* and {dot: true}
    ✓ should match /a/../c with /* and {nonegate: true}
    ✓ should match a/../c with /*
    ✓ should match a/../c with /* and {dot: true}
    ✓ should match a/../c with /* and {nonegate: true}
    ✓ should match ../.b/.c with /*
    ✓ should match ../.b/.c with /* and {dot: true}
    ✓ should match ../.b/.c with /* and {nonegate: true}
    ✓ should match ../b/.c with /*
    ✓ should match ../b/.c with /* and {dot: true}
    ✓ should match ../b/.c with /* and {nonegate: true}
    ✓ should match ./.b/.c with /*
    ✓ should match ./.b/.c with /* and {dot: true}
    ✓ should match ./.b/.c with /* and {nonegate: true}
    ✓ should match ./b/.c with /*
    ✓ should match ./b/.c with /* and {dot: true}
    ✓ should match ./b/.c with /* and {nonegate: true}
    ✓ should match .b with /*
    ✓ should match .b with /* and {dot: true}
    ✓ should match .b with /* and {nonegate: true}
    ✓ should match .b.c with /*
    ✓ should match .b.c with /* and {dot: true}
    ✓ should match .b.c with /* and {nonegate: true}
    ✓ should match .b.c/ with /*
    ✓ should match .b.c/ with /* and {dot: true}
    ✓ should match .b.c/ with /* and {nonegate: true}
    ✓ should match .b/ with /*
    ✓ should match .b/ with /* and {dot: true}
    ✓ should match .b/ with /* and {nonegate: true}
    ✓ should match .b/.c with /*
    ✓ should match .b/.c with /* and {dot: true}
    ✓ should match .b/.c with /* and {nonegate: true}
    ✓ should match .b/c with /*
    ✓ should match .b/c with /* and {dot: true}
    ✓ should match .b/c with /* and {nonegate: true}
    ✓ should match b/.c with /*
    ✓ should match b/.c with /* and {dot: true}
    ✓ should match b/.c with /* and {nonegate: true}
    ✓ should match b/.c/ with /*
    ✓ should match b/.c/ with /* and {dot: true}
    ✓ should match b/.c/ with /* and {nonegate: true}
    ✓ should match a/+b/c with /*
    ✓ should match a/+b/c with /* and {dot: true}
    ✓ should match a/+b/c with /* and {nonegate: true}
    ✓ should match +a/+b/c with /*
    ✓ should match +a/+b/c with /* and {dot: true}
    ✓ should match +a/+b/c with /* and {nonegate: true}
    ✓ should match a (foo) with /*
    ✓ should match a (foo) with /* and {dot: true}
    ✓ should match a (foo) with /* and {nonegate: true}
    ✓ should match a (foo)/(bar) with /*
    ✓ should match a (foo)/(bar) with /* and {dot: true}
    ✓ should match a (foo)/(bar) with /* and {nonegate: true}
    ✓ should match a/b/c (1) with /*
    ✓ should match a/b/c (1) with /* and {dot: true}
    ✓ should match a/b/c (1) with /* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with /*
    ✓ should match a/b (2)/c (1) with /* and {dot: true}
    ✓ should match a/b (2)/c (1) with /* and {nonegate: true}
    ✓ should match a/b/c [def] with /*
    ✓ should match a/b/c [def] with /* and {dot: true}
    ✓ should match a/b/c [def] with /* and {nonegate: true}
    ✓ should match a with /**
    ✓ should match a with /** and {dot: true}
    ✓ should match a with /** and {nonegate: true}
    ✓ should match a.md with /**
    ✓ should match a.md with /** and {dot: true}
    ✓ should match a.md with /** and {nonegate: true}
    ✓ should match a.js with /**
    ✓ should match a.js with /** and {dot: true}
    ✓ should match a.js with /** and {nonegate: true}
    ✓ should match a/ with /**
    ✓ should match a/ with /** and {dot: true}
    ✓ should match a/ with /** and {nonegate: true}
    ✓ should match a/b with /**
    ✓ should match a/b with /** and {dot: true}
    ✓ should match a/b with /** and {nonegate: true}
    ✓ should match a/b/.c.md with /**
    ✓ should match a/b/.c.md with /** and {dot: true}
    ✓ should match a/b/.c.md with /** and {nonegate: true}
    ✓ should match a/b/c with /**
    ✓ should match a/b/c with /** and {dot: true}
    ✓ should match a/b/c with /** and {nonegate: true}
    ✓ should match a/b/c.md with /**
    ✓ should match a/b/c.md with /** and {dot: true}
    ✓ should match a/b/c.md with /** and {nonegate: true}
    ✓ should match a/b/c/ with /**
    ✓ should match a/b/c/ with /** and {dot: true}
    ✓ should match a/b/c/ with /** and {nonegate: true}
    ✓ should match a/b/c/d with /**
    ✓ should match a/b/c/d with /** and {dot: true}
    ✓ should match a/b/c/d with /** and {nonegate: true}
    ✓ should match a/b/c/d/ with /**
    ✓ should match a/b/c/d/ with /** and {dot: true}
    ✓ should match a/b/c/d/ with /** and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with /**
    ✓ should match a/b/c/d/e/f/z.js with /** and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with /** and {nonegate: true}
    ✓ should match a/b/c/z.js with /**
    ✓ should match a/b/c/z.js with /** and {dot: true}
    ✓ should match a/b/c/z.js with /** and {nonegate: true}
    ✓ should match a/bb with /**
    ✓ should match a/bb with /** and {dot: true}
    ✓ should match a/bb with /** and {nonegate: true}
    ✓ should match a/cb with /**
    ✓ should match a/cb with /** and {dot: true}
    ✓ should match a/cb with /** and {nonegate: true}
    ✓ should match abbbz with /**
    ✓ should match abbbz with /** and {dot: true}
    ✓ should match abbbz with /** and {nonegate: true}
    ✓ should match abc with /**
    ✓ should match abc with /** and {dot: true}
    ✓ should match abc with /** and {nonegate: true}
    ✓ should match abd with /**
    ✓ should match abd with /** and {dot: true}
    ✓ should match abd with /** and {nonegate: true}
    ✓ should match z.js with /**
    ✓ should match z.js with /** and {dot: true}
    ✓ should match z.js with /** and {nonegate: true}
    ✓ should match za.js with /**
    ✓ should match za.js with /** and {dot: true}
    ✓ should match za.js with /** and {nonegate: true}
    ✓ should match !a.js with /**
    ✓ should match !a.js with /** and {dot: true}
    ✓ should match !a.js with /** and {nonegate: true}
    ✓ should match !a/b with /**
    ✓ should match !a/b with /** and {dot: true}
    ✓ should match !a/b with /** and {nonegate: true}
    ✓ should match !a/b/ with /**
    ✓ should match !a/b/ with /** and {dot: true}
    ✓ should match !a/b/ with /** and {nonegate: true}
    ✓ should match !a/b/c with /**
    ✓ should match !a/b/c with /** and {dot: true}
    ✓ should match !a/b/c with /** and {nonegate: true}
    ✓ should match !a/b/c/ with /**
    ✓ should match !a/b/c/ with /** and {dot: true}
    ✓ should match !a/b/c/ with /** and {nonegate: true}
    ✓ should match !a/!b with /**
    ✓ should match !a/!b with /** and {dot: true}
    ✓ should match !a/!b with /** and {nonegate: true}
    ✓ should match !a/!b/c with /**
    ✓ should match !a/!b/c with /** and {dot: true}
    ✓ should match !a/!b/c with /** and {nonegate: true}
    ✓ should match !a/!b/c/d with /**
    ✓ should match !a/!b/c/d with /** and {dot: true}
    ✓ should match !a/!b/c/d with /** and {nonegate: true}
    ✓ should match !a/b/.c.md with /**
    ✓ should match !a/b/.c.md with /** and {dot: true}
    ✓ should match !a/b/.c.md with /** and {nonegate: true}
    ✓ should match /a/ with /**
    ✓ should match /a/ with /** and {dot: true}
    ✓ should match /a/ with /** and {nonegate: true}
    ✓ should match /a/b with /**
    ✓ should match /a/b with /** and {dot: true}
    ✓ should match /a/b with /** and {nonegate: true}
    ✓ should match /a/cb with /**
    ✓ should match /a/cb with /** and {dot: true}
    ✓ should match /a/cb with /** and {nonegate: true}
    ✓ should match /a/bb with /**
    ✓ should match /a/bb with /** and {dot: true}
    ✓ should match /a/bb with /** and {nonegate: true}
    ✓ should match /a/b/c with /**
    ✓ should match /a/b/c with /** and {dot: true}
    ✓ should match /a/b/c with /** and {nonegate: true}
    ✓ should match /a/b/c/ with /**
    ✓ should match /a/b/c/ with /** and {dot: true}
    ✓ should match /a/b/c/ with /** and {nonegate: true}
    ✓ should match /a/b/c/d with /**
    ✓ should match /a/b/c/d with /** and {dot: true}
    ✓ should match /a/b/c/d with /** and {nonegate: true}
    ✓ should match /a/b/c/d/ with /**
    ✓ should match /a/b/c/d/ with /** and {dot: true}
    ✓ should match /a/b/c/d/ with /** and {nonegate: true}
    ✓ should match . with /**
    ✓ should match . with /** and {dot: true}
    ✓ should match . with /** and {nonegate: true}
    ✓ should match ./ with /**
    ✓ should match ./ with /** and {dot: true}
    ✓ should match ./ with /** and {nonegate: true}
    ✓ should match .. with /**
    ✓ should match .. with /** and {dot: true}
    ✓ should match .. with /** and {nonegate: true}
    ✓ should match ../c with /**
    ✓ should match ../c with /** and {dot: true}
    ✓ should match ../c with /** and {nonegate: true}
    ✓ should match ../c with /**
    ✓ should match ../c with /** and {dot: true}
    ✓ should match ../c with /** and {nonegate: true}
    ✓ should match ./../c with /**
    ✓ should match ./../c with /** and {dot: true}
    ✓ should match ./../c with /** and {nonegate: true}
    ✓ should match ./a/../c with /**
    ✓ should match ./a/../c with /** and {dot: true}
    ✓ should match ./a/../c with /** and {nonegate: true}
    ✓ should match /.. with /**
    ✓ should match /.. with /** and {dot: true}
    ✓ should match /.. with /** and {nonegate: true}
    ✓ should match /../c with /**
    ✓ should match /../c with /** and {dot: true}
    ✓ should match /../c with /** and {nonegate: true}
    ✓ should match /../.c with /**
    ✓ should match /../.c with /** and {dot: true}
    ✓ should match /../.c with /** and {nonegate: true}
    ✓ should match /../.c/ with /**
    ✓ should match /../.c/ with /** and {dot: true}
    ✓ should match /../.c/ with /** and {nonegate: true}
    ✓ should match /a/../c with /**
    ✓ should match /a/../c with /** and {dot: true}
    ✓ should match /a/../c with /** and {nonegate: true}
    ✓ should match a/../c with /**
    ✓ should match a/../c with /** and {dot: true}
    ✓ should match a/../c with /** and {nonegate: true}
    ✓ should match ../.b/.c with /**
    ✓ should match ../.b/.c with /** and {dot: true}
    ✓ should match ../.b/.c with /** and {nonegate: true}
    ✓ should match ../b/.c with /**
    ✓ should match ../b/.c with /** and {dot: true}
    ✓ should match ../b/.c with /** and {nonegate: true}
    ✓ should match ./.b/.c with /**
    ✓ should match ./.b/.c with /** and {dot: true}
    ✓ should match ./.b/.c with /** and {nonegate: true}
    ✓ should match ./b/.c with /**
    ✓ should match ./b/.c with /** and {dot: true}
    ✓ should match ./b/.c with /** and {nonegate: true}
    ✓ should match .b with /**
    ✓ should match .b with /** and {dot: true}
    ✓ should match .b with /** and {nonegate: true}
    ✓ should match .b.c with /**
    ✓ should match .b.c with /** and {dot: true}
    ✓ should match .b.c with /** and {nonegate: true}
    ✓ should match .b.c/ with /**
    ✓ should match .b.c/ with /** and {dot: true}
    ✓ should match .b.c/ with /** and {nonegate: true}
    ✓ should match .b/ with /**
    ✓ should match .b/ with /** and {dot: true}
    ✓ should match .b/ with /** and {nonegate: true}
    ✓ should match .b/.c with /**
    ✓ should match .b/.c with /** and {dot: true}
    ✓ should match .b/.c with /** and {nonegate: true}
    ✓ should match .b/c with /**
    ✓ should match .b/c with /** and {dot: true}
    ✓ should match .b/c with /** and {nonegate: true}
    ✓ should match b/.c with /**
    ✓ should match b/.c with /** and {dot: true}
    ✓ should match b/.c with /** and {nonegate: true}
    ✓ should match b/.c/ with /**
    ✓ should match b/.c/ with /** and {dot: true}
    ✓ should match b/.c/ with /** and {nonegate: true}
    ✓ should match a/+b/c with /**
    ✓ should match a/+b/c with /** and {dot: true}
    ✓ should match a/+b/c with /** and {nonegate: true}
    ✓ should match +a/+b/c with /**
    ✓ should match +a/+b/c with /** and {dot: true}
    ✓ should match +a/+b/c with /** and {nonegate: true}
    ✓ should match a (foo) with /**
    ✓ should match a (foo) with /** and {dot: true}
    ✓ should match a (foo) with /** and {nonegate: true}
    ✓ should match a (foo)/(bar) with /**
    ✓ should match a (foo)/(bar) with /** and {dot: true}
    ✓ should match a (foo)/(bar) with /** and {nonegate: true}
    ✓ should match a/b/c (1) with /**
    ✓ should match a/b/c (1) with /** and {dot: true}
    ✓ should match a/b/c (1) with /** and {nonegate: true}
    ✓ should match a/b (2)/c (1) with /**
    ✓ should match a/b (2)/c (1) with /** and {dot: true}
    ✓ should match a/b (2)/c (1) with /** and {nonegate: true}
    ✓ should match a/b/c [def] with /**
    ✓ should match a/b/c [def] with /** and {dot: true}
    ✓ should match a/b/c [def] with /** and {nonegate: true}
    ✓ should match a with /**/
    ✓ should match a with /**/ and {dot: true}
    ✓ should match a with /**/ and {nonegate: true}
    ✓ should match a.md with /**/
    ✓ should match a.md with /**/ and {dot: true}
    ✓ should match a.md with /**/ and {nonegate: true}
    ✓ should match a.js with /**/
    ✓ should match a.js with /**/ and {dot: true}
    ✓ should match a.js with /**/ and {nonegate: true}
    ✓ should match a/ with /**/
    ✓ should match a/ with /**/ and {dot: true}
    ✓ should match a/ with /**/ and {nonegate: true}
    ✓ should match a/b with /**/
    ✓ should match a/b with /**/ and {dot: true}
    ✓ should match a/b with /**/ and {nonegate: true}
    ✓ should match a/b/.c.md with /**/
    ✓ should match a/b/.c.md with /**/ and {dot: true}
    ✓ should match a/b/.c.md with /**/ and {nonegate: true}
    ✓ should match a/b/c with /**/
    ✓ should match a/b/c with /**/ and {dot: true}
    ✓ should match a/b/c with /**/ and {nonegate: true}
    ✓ should match a/b/c.md with /**/
    ✓ should match a/b/c.md with /**/ and {dot: true}
    ✓ should match a/b/c.md with /**/ and {nonegate: true}
    ✓ should match a/b/c/ with /**/
    ✓ should match a/b/c/ with /**/ and {dot: true}
    ✓ should match a/b/c/ with /**/ and {nonegate: true}
    ✓ should match a/b/c/d with /**/
    ✓ should match a/b/c/d with /**/ and {dot: true}
    ✓ should match a/b/c/d with /**/ and {nonegate: true}
    ✓ should match a/b/c/d/ with /**/
    ✓ should match a/b/c/d/ with /**/ and {dot: true}
    ✓ should match a/b/c/d/ with /**/ and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with /**/
    ✓ should match a/b/c/d/e/f/z.js with /**/ and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with /**/ and {nonegate: true}
    ✓ should match a/b/c/z.js with /**/
    ✓ should match a/b/c/z.js with /**/ and {dot: true}
    ✓ should match a/b/c/z.js with /**/ and {nonegate: true}
    ✓ should match a/bb with /**/
    ✓ should match a/bb with /**/ and {dot: true}
    ✓ should match a/bb with /**/ and {nonegate: true}
    ✓ should match a/cb with /**/
    ✓ should match a/cb with /**/ and {dot: true}
    ✓ should match a/cb with /**/ and {nonegate: true}
    ✓ should match abbbz with /**/
    ✓ should match abbbz with /**/ and {dot: true}
    ✓ should match abbbz with /**/ and {nonegate: true}
    ✓ should match abc with /**/
    ✓ should match abc with /**/ and {dot: true}
    ✓ should match abc with /**/ and {nonegate: true}
    ✓ should match abd with /**/
    ✓ should match abd with /**/ and {dot: true}
    ✓ should match abd with /**/ and {nonegate: true}
    ✓ should match z.js with /**/
    ✓ should match z.js with /**/ and {dot: true}
    ✓ should match z.js with /**/ and {nonegate: true}
    ✓ should match za.js with /**/
    ✓ should match za.js with /**/ and {dot: true}
    ✓ should match za.js with /**/ and {nonegate: true}
    ✓ should match !a.js with /**/
    ✓ should match !a.js with /**/ and {dot: true}
    ✓ should match !a.js with /**/ and {nonegate: true}
    ✓ should match !a/b with /**/
    ✓ should match !a/b with /**/ and {dot: true}
    ✓ should match !a/b with /**/ and {nonegate: true}
    ✓ should match !a/b/ with /**/
    ✓ should match !a/b/ with /**/ and {dot: true}
    ✓ should match !a/b/ with /**/ and {nonegate: true}
    ✓ should match !a/b/c with /**/
    ✓ should match !a/b/c with /**/ and {dot: true}
    ✓ should match !a/b/c with /**/ and {nonegate: true}
    ✓ should match !a/b/c/ with /**/
    ✓ should match !a/b/c/ with /**/ and {dot: true}
    ✓ should match !a/b/c/ with /**/ and {nonegate: true}
    ✓ should match !a/!b with /**/
    ✓ should match !a/!b with /**/ and {dot: true}
    ✓ should match !a/!b with /**/ and {nonegate: true}
    ✓ should match !a/!b/c with /**/
    ✓ should match !a/!b/c with /**/ and {dot: true}
    ✓ should match !a/!b/c with /**/ and {nonegate: true}
    ✓ should match !a/!b/c/d with /**/
    ✓ should match !a/!b/c/d with /**/ and {dot: true}
    ✓ should match !a/!b/c/d with /**/ and {nonegate: true}
    ✓ should match !a/b/.c.md with /**/
    ✓ should match !a/b/.c.md with /**/ and {dot: true}
    ✓ should match !a/b/.c.md with /**/ and {nonegate: true}
    ✓ should match /a/ with /**/
    ✓ should match /a/ with /**/ and {dot: true}
    ✓ should match /a/ with /**/ and {nonegate: true}
    ✓ should match /a/b with /**/
    ✓ should match /a/b with /**/ and {dot: true}
    ✓ should match /a/b with /**/ and {nonegate: true}
    ✓ should match /a/cb with /**/
    ✓ should match /a/cb with /**/ and {dot: true}
    ✓ should match /a/cb with /**/ and {nonegate: true}
    ✓ should match /a/bb with /**/
    ✓ should match /a/bb with /**/ and {dot: true}
    ✓ should match /a/bb with /**/ and {nonegate: true}
    ✓ should match /a/b/c with /**/
    ✓ should match /a/b/c with /**/ and {dot: true}
    ✓ should match /a/b/c with /**/ and {nonegate: true}
    ✓ should match /a/b/c/ with /**/
    ✓ should match /a/b/c/ with /**/ and {dot: true}
    ✓ should match /a/b/c/ with /**/ and {nonegate: true}
    ✓ should match /a/b/c/d with /**/
    ✓ should match /a/b/c/d with /**/ and {dot: true}
    ✓ should match /a/b/c/d with /**/ and {nonegate: true}
    ✓ should match /a/b/c/d/ with /**/
    ✓ should match /a/b/c/d/ with /**/ and {dot: true}
    ✓ should match /a/b/c/d/ with /**/ and {nonegate: true}
    ✓ should match . with /**/
    ✓ should match . with /**/ and {dot: true}
    ✓ should match . with /**/ and {nonegate: true}
    ✓ should match ./ with /**/
    ✓ should match ./ with /**/ and {dot: true}
    ✓ should match ./ with /**/ and {nonegate: true}
    ✓ should match .. with /**/
    ✓ should match .. with /**/ and {dot: true}
    ✓ should match .. with /**/ and {nonegate: true}
    ✓ should match ../c with /**/
    ✓ should match ../c with /**/ and {dot: true}
    ✓ should match ../c with /**/ and {nonegate: true}
    ✓ should match ../c with /**/
    ✓ should match ../c with /**/ and {dot: true}
    ✓ should match ../c with /**/ and {nonegate: true}
    ✓ should match ./../c with /**/
    ✓ should match ./../c with /**/ and {dot: true}
    ✓ should match ./../c with /**/ and {nonegate: true}
    ✓ should match ./a/../c with /**/
    ✓ should match ./a/../c with /**/ and {dot: true}
    ✓ should match ./a/../c with /**/ and {nonegate: true}
    ✓ should match /.. with /**/
    ✓ should match /.. with /**/ and {dot: true}
    ✓ should match /.. with /**/ and {nonegate: true}
    ✓ should match /../c with /**/
    ✓ should match /../c with /**/ and {dot: true}
    ✓ should match /../c with /**/ and {nonegate: true}
    ✓ should match /../.c with /**/
    ✓ should match /../.c with /**/ and {dot: true}
    ✓ should match /../.c with /**/ and {nonegate: true}
    ✓ should match /../.c/ with /**/
    ✓ should match /../.c/ with /**/ and {dot: true}
    ✓ should match /../.c/ with /**/ and {nonegate: true}
    ✓ should match /a/../c with /**/
    ✓ should match /a/../c with /**/ and {dot: true}
    ✓ should match /a/../c with /**/ and {nonegate: true}
    ✓ should match a/../c with /**/
    ✓ should match a/../c with /**/ and {dot: true}
    ✓ should match a/../c with /**/ and {nonegate: true}
    ✓ should match ../.b/.c with /**/
    ✓ should match ../.b/.c with /**/ and {dot: true}
    ✓ should match ../.b/.c with /**/ and {nonegate: true}
    ✓ should match ../b/.c with /**/
    ✓ should match ../b/.c with /**/ and {dot: true}
    ✓ should match ../b/.c with /**/ and {nonegate: true}
    ✓ should match ./.b/.c with /**/
    ✓ should match ./.b/.c with /**/ and {dot: true}
    ✓ should match ./.b/.c with /**/ and {nonegate: true}
    ✓ should match ./b/.c with /**/
    ✓ should match ./b/.c with /**/ and {dot: true}
    ✓ should match ./b/.c with /**/ and {nonegate: true}
    ✓ should match .b with /**/
    ✓ should match .b with /**/ and {dot: true}
    ✓ should match .b with /**/ and {nonegate: true}
    ✓ should match .b.c with /**/
    ✓ should match .b.c with /**/ and {dot: true}
    ✓ should match .b.c with /**/ and {nonegate: true}
    ✓ should match .b.c/ with /**/
    ✓ should match .b.c/ with /**/ and {dot: true}
    ✓ should match .b.c/ with /**/ and {nonegate: true}
    ✓ should match .b/ with /**/
    ✓ should match .b/ with /**/ and {dot: true}
    ✓ should match .b/ with /**/ and {nonegate: true}
    ✓ should match .b/.c with /**/
    ✓ should match .b/.c with /**/ and {dot: true}
    ✓ should match .b/.c with /**/ and {nonegate: true}
    ✓ should match .b/c with /**/
    ✓ should match .b/c with /**/ and {dot: true}
    ✓ should match .b/c with /**/ and {nonegate: true}
    ✓ should match b/.c with /**/
    ✓ should match b/.c with /**/ and {dot: true}
    ✓ should match b/.c with /**/ and {nonegate: true}
    ✓ should match b/.c/ with /**/
    ✓ should match b/.c/ with /**/ and {dot: true}
    ✓ should match b/.c/ with /**/ and {nonegate: true}
    ✓ should match a/+b/c with /**/
    ✓ should match a/+b/c with /**/ and {dot: true}
    ✓ should match a/+b/c with /**/ and {nonegate: true}
    ✓ should match +a/+b/c with /**/
    ✓ should match +a/+b/c with /**/ and {dot: true}
    ✓ should match +a/+b/c with /**/ and {nonegate: true}
    ✓ should match a (foo) with /**/
    ✓ should match a (foo) with /**/ and {dot: true}
    ✓ should match a (foo) with /**/ and {nonegate: true}
    ✓ should match a (foo)/(bar) with /**/
    ✓ should match a (foo)/(bar) with /**/ and {dot: true}
    ✓ should match a (foo)/(bar) with /**/ and {nonegate: true}
    ✓ should match a/b/c (1) with /**/
    ✓ should match a/b/c (1) with /**/ and {dot: true}
    ✓ should match a/b/c (1) with /**/ and {nonegate: true}
    ✓ should match a/b (2)/c (1) with /**/
    ✓ should match a/b (2)/c (1) with /**/ and {dot: true}
    ✓ should match a/b (2)/c (1) with /**/ and {nonegate: true}
    ✓ should match a/b/c [def] with /**/
    ✓ should match a/b/c [def] with /**/ and {dot: true}
    ✓ should match a/b/c [def] with /**/ and {nonegate: true}
    ✓ should match a with /**/*
    ✓ should match a with /**/* and {dot: true}
    ✓ should match a with /**/* and {nonegate: true}
    ✓ should match a.md with /**/*
    ✓ should match a.md with /**/* and {dot: true}
    ✓ should match a.md with /**/* and {nonegate: true}
    ✓ should match a.js with /**/*
    ✓ should match a.js with /**/* and {dot: true}
    ✓ should match a.js with /**/* and {nonegate: true}
    ✓ should match a/ with /**/*
    ✓ should match a/ with /**/* and {dot: true}
    ✓ should match a/ with /**/* and {nonegate: true}
    ✓ should match a/b with /**/*
    ✓ should match a/b with /**/* and {dot: true}
    ✓ should match a/b with /**/* and {nonegate: true}
    ✓ should match a/b/.c.md with /**/*
    ✓ should match a/b/.c.md with /**/* and {dot: true}
    ✓ should match a/b/.c.md with /**/* and {nonegate: true}
    ✓ should match a/b/c with /**/*
    ✓ should match a/b/c with /**/* and {dot: true}
    ✓ should match a/b/c with /**/* and {nonegate: true}
    ✓ should match a/b/c.md with /**/*
    ✓ should match a/b/c.md with /**/* and {dot: true}
    ✓ should match a/b/c.md with /**/* and {nonegate: true}
    ✓ should match a/b/c/ with /**/*
    ✓ should match a/b/c/ with /**/* and {dot: true}
    ✓ should match a/b/c/ with /**/* and {nonegate: true}
    ✓ should match a/b/c/d with /**/*
    ✓ should match a/b/c/d with /**/* and {dot: true}
    ✓ should match a/b/c/d with /**/* and {nonegate: true}
    ✓ should match a/b/c/d/ with /**/*
    ✓ should match a/b/c/d/ with /**/* and {dot: true}
    ✓ should match a/b/c/d/ with /**/* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with /**/*
    ✓ should match a/b/c/d/e/f/z.js with /**/* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with /**/* and {nonegate: true}
    ✓ should match a/b/c/z.js with /**/*
    ✓ should match a/b/c/z.js with /**/* and {dot: true}
    ✓ should match a/b/c/z.js with /**/* and {nonegate: true}
    ✓ should match a/bb with /**/*
    ✓ should match a/bb with /**/* and {dot: true}
    ✓ should match a/bb with /**/* and {nonegate: true}
    ✓ should match a/cb with /**/*
    ✓ should match a/cb with /**/* and {dot: true}
    ✓ should match a/cb with /**/* and {nonegate: true}
    ✓ should match abbbz with /**/*
    ✓ should match abbbz with /**/* and {dot: true}
    ✓ should match abbbz with /**/* and {nonegate: true}
    ✓ should match abc with /**/*
    ✓ should match abc with /**/* and {dot: true}
    ✓ should match abc with /**/* and {nonegate: true}
    ✓ should match abd with /**/*
    ✓ should match abd with /**/* and {dot: true}
    ✓ should match abd with /**/* and {nonegate: true}
    ✓ should match z.js with /**/*
    ✓ should match z.js with /**/* and {dot: true}
    ✓ should match z.js with /**/* and {nonegate: true}
    ✓ should match za.js with /**/*
    ✓ should match za.js with /**/* and {dot: true}
    ✓ should match za.js with /**/* and {nonegate: true}
    ✓ should match !a.js with /**/*
    ✓ should match !a.js with /**/* and {dot: true}
    ✓ should match !a.js with /**/* and {nonegate: true}
    ✓ should match !a/b with /**/*
    ✓ should match !a/b with /**/* and {dot: true}
    ✓ should match !a/b with /**/* and {nonegate: true}
    ✓ should match !a/b/ with /**/*
    ✓ should match !a/b/ with /**/* and {dot: true}
    ✓ should match !a/b/ with /**/* and {nonegate: true}
    ✓ should match !a/b/c with /**/*
    ✓ should match !a/b/c with /**/* and {dot: true}
    ✓ should match !a/b/c with /**/* and {nonegate: true}
    ✓ should match !a/b/c/ with /**/*
    ✓ should match !a/b/c/ with /**/* and {dot: true}
    ✓ should match !a/b/c/ with /**/* and {nonegate: true}
    ✓ should match !a/!b with /**/*
    ✓ should match !a/!b with /**/* and {dot: true}
    ✓ should match !a/!b with /**/* and {nonegate: true}
    ✓ should match !a/!b/c with /**/*
    ✓ should match !a/!b/c with /**/* and {dot: true}
    ✓ should match !a/!b/c with /**/* and {nonegate: true}
    ✓ should match !a/!b/c/d with /**/*
    ✓ should match !a/!b/c/d with /**/* and {dot: true}
    ✓ should match !a/!b/c/d with /**/* and {nonegate: true}
    ✓ should match !a/b/.c.md with /**/*
    ✓ should match !a/b/.c.md with /**/* and {dot: true}
    ✓ should match !a/b/.c.md with /**/* and {nonegate: true}
    ✓ should match /a/ with /**/*
    ✓ should match /a/ with /**/* and {dot: true}
    ✓ should match /a/ with /**/* and {nonegate: true}
    ✓ should match /a/b with /**/*
    ✓ should match /a/b with /**/* and {dot: true}
    ✓ should match /a/b with /**/* and {nonegate: true}
    ✓ should match /a/cb with /**/*
    ✓ should match /a/cb with /**/* and {dot: true}
    ✓ should match /a/cb with /**/* and {nonegate: true}
    ✓ should match /a/bb with /**/*
    ✓ should match /a/bb with /**/* and {dot: true}
    ✓ should match /a/bb with /**/* and {nonegate: true}
    ✓ should match /a/b/c with /**/*
    ✓ should match /a/b/c with /**/* and {dot: true}
    ✓ should match /a/b/c with /**/* and {nonegate: true}
    ✓ should match /a/b/c/ with /**/*
    ✓ should match /a/b/c/ with /**/* and {dot: true}
    ✓ should match /a/b/c/ with /**/* and {nonegate: true}
    ✓ should match /a/b/c/d with /**/*
    ✓ should match /a/b/c/d with /**/* and {dot: true}
    ✓ should match /a/b/c/d with /**/* and {nonegate: true}
    ✓ should match /a/b/c/d/ with /**/*
    ✓ should match /a/b/c/d/ with /**/* and {dot: true}
    ✓ should match /a/b/c/d/ with /**/* and {nonegate: true}
    ✓ should match . with /**/*
    ✓ should match . with /**/* and {dot: true}
    ✓ should match . with /**/* and {nonegate: true}
    ✓ should match ./ with /**/*
    ✓ should match ./ with /**/* and {dot: true}
    ✓ should match ./ with /**/* and {nonegate: true}
    ✓ should match .. with /**/*
    ✓ should match .. with /**/* and {dot: true}
    ✓ should match .. with /**/* and {nonegate: true}
    ✓ should match ../c with /**/*
    ✓ should match ../c with /**/* and {dot: true}
    ✓ should match ../c with /**/* and {nonegate: true}
    ✓ should match ../c with /**/*
    ✓ should match ../c with /**/* and {dot: true}
    ✓ should match ../c with /**/* and {nonegate: true}
    ✓ should match ./../c with /**/*
    ✓ should match ./../c with /**/* and {dot: true}
    ✓ should match ./../c with /**/* and {nonegate: true}
    ✓ should match ./a/../c with /**/*
    ✓ should match ./a/../c with /**/* and {dot: true}
    ✓ should match ./a/../c with /**/* and {nonegate: true}
    ✓ should match /.. with /**/*
    ✓ should match /.. with /**/* and {dot: true}
    ✓ should match /.. with /**/* and {nonegate: true}
    ✓ should match /../c with /**/*
    ✓ should match /../c with /**/* and {dot: true}
    ✓ should match /../c with /**/* and {nonegate: true}
    ✓ should match /../.c with /**/*
    ✓ should match /../.c with /**/* and {dot: true}
    ✓ should match /../.c with /**/* and {nonegate: true}
    ✓ should match /../.c/ with /**/*
    ✓ should match /../.c/ with /**/* and {dot: true}
    ✓ should match /../.c/ with /**/* and {nonegate: true}
    ✓ should match /a/../c with /**/*
    ✓ should match /a/../c with /**/* and {dot: true}
    ✓ should match /a/../c with /**/* and {nonegate: true}
    ✓ should match a/../c with /**/*
    ✓ should match a/../c with /**/* and {dot: true}
    ✓ should match a/../c with /**/* and {nonegate: true}
    ✓ should match ../.b/.c with /**/*
    ✓ should match ../.b/.c with /**/* and {dot: true}
    ✓ should match ../.b/.c with /**/* and {nonegate: true}
    ✓ should match ../b/.c with /**/*
    ✓ should match ../b/.c with /**/* and {dot: true}
    ✓ should match ../b/.c with /**/* and {nonegate: true}
    ✓ should match ./.b/.c with /**/*
    ✓ should match ./.b/.c with /**/* and {dot: true}
    ✓ should match ./.b/.c with /**/* and {nonegate: true}
    ✓ should match ./b/.c with /**/*
    ✓ should match ./b/.c with /**/* and {dot: true}
    ✓ should match ./b/.c with /**/* and {nonegate: true}
    ✓ should match .b with /**/*
    ✓ should match .b with /**/* and {dot: true}
    ✓ should match .b with /**/* and {nonegate: true}
    ✓ should match .b.c with /**/*
    ✓ should match .b.c with /**/* and {dot: true}
    ✓ should match .b.c with /**/* and {nonegate: true}
    ✓ should match .b.c/ with /**/*
    ✓ should match .b.c/ with /**/* and {dot: true}
    ✓ should match .b.c/ with /**/* and {nonegate: true}
    ✓ should match .b/ with /**/*
    ✓ should match .b/ with /**/* and {dot: true}
    ✓ should match .b/ with /**/* and {nonegate: true}
    ✓ should match .b/.c with /**/*
    ✓ should match .b/.c with /**/* and {dot: true}
    ✓ should match .b/.c with /**/* and {nonegate: true}
    ✓ should match .b/c with /**/*
    ✓ should match .b/c with /**/* and {dot: true}
    ✓ should match .b/c with /**/* and {nonegate: true}
    ✓ should match b/.c with /**/*
    ✓ should match b/.c with /**/* and {dot: true}
    ✓ should match b/.c with /**/* and {nonegate: true}
    ✓ should match b/.c/ with /**/*
    ✓ should match b/.c/ with /**/* and {dot: true}
    ✓ should match b/.c/ with /**/* and {nonegate: true}
    ✓ should match a/+b/c with /**/*
    ✓ should match a/+b/c with /**/* and {dot: true}
    ✓ should match a/+b/c with /**/* and {nonegate: true}
    ✓ should match +a/+b/c with /**/*
    ✓ should match +a/+b/c with /**/* and {dot: true}
    ✓ should match +a/+b/c with /**/* and {nonegate: true}
    ✓ should match a (foo) with /**/*
    ✓ should match a (foo) with /**/* and {dot: true}
    ✓ should match a (foo) with /**/* and {nonegate: true}
    ✓ should match a (foo)/(bar) with /**/*
    ✓ should match a (foo)/(bar) with /**/* and {dot: true}
    ✓ should match a (foo)/(bar) with /**/* and {nonegate: true}
    ✓ should match a/b/c (1) with /**/*
    ✓ should match a/b/c (1) with /**/* and {dot: true}
    ✓ should match a/b/c (1) with /**/* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with /**/*
    ✓ should match a/b (2)/c (1) with /**/* and {dot: true}
    ✓ should match a/b (2)/c (1) with /**/* and {nonegate: true}
    ✓ should match a/b/c [def] with /**/*
    ✓ should match a/b/c [def] with /**/* and {dot: true}
    ✓ should match a/b/c [def] with /**/* and {nonegate: true}
    ✓ should match a with /*/
    ✓ should match a with /*/ and {dot: true}
    ✓ should match a with /*/ and {nonegate: true}
    ✓ should match a.md with /*/
    ✓ should match a.md with /*/ and {dot: true}
    ✓ should match a.md with /*/ and {nonegate: true}
    ✓ should match a.js with /*/
    ✓ should match a.js with /*/ and {dot: true}
    ✓ should match a.js with /*/ and {nonegate: true}
    ✓ should match a/ with /*/
    ✓ should match a/ with /*/ and {dot: true}
    ✓ should match a/ with /*/ and {nonegate: true}
    ✓ should match a/b with /*/
    ✓ should match a/b with /*/ and {dot: true}
    ✓ should match a/b with /*/ and {nonegate: true}
    ✓ should match a/b/.c.md with /*/
    ✓ should match a/b/.c.md with /*/ and {dot: true}
    ✓ should match a/b/.c.md with /*/ and {nonegate: true}
    ✓ should match a/b/c with /*/
    ✓ should match a/b/c with /*/ and {dot: true}
    ✓ should match a/b/c with /*/ and {nonegate: true}
    ✓ should match a/b/c.md with /*/
    ✓ should match a/b/c.md with /*/ and {dot: true}
    ✓ should match a/b/c.md with /*/ and {nonegate: true}
    ✓ should match a/b/c/ with /*/
    ✓ should match a/b/c/ with /*/ and {dot: true}
    ✓ should match a/b/c/ with /*/ and {nonegate: true}
    ✓ should match a/b/c/d with /*/
    ✓ should match a/b/c/d with /*/ and {dot: true}
    ✓ should match a/b/c/d with /*/ and {nonegate: true}
    ✓ should match a/b/c/d/ with /*/
    ✓ should match a/b/c/d/ with /*/ and {dot: true}
    ✓ should match a/b/c/d/ with /*/ and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with /*/
    ✓ should match a/b/c/d/e/f/z.js with /*/ and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with /*/ and {nonegate: true}
    ✓ should match a/b/c/z.js with /*/
    ✓ should match a/b/c/z.js with /*/ and {dot: true}
    ✓ should match a/b/c/z.js with /*/ and {nonegate: true}
    ✓ should match a/bb with /*/
    ✓ should match a/bb with /*/ and {dot: true}
    ✓ should match a/bb with /*/ and {nonegate: true}
    ✓ should match a/cb with /*/
    ✓ should match a/cb with /*/ and {dot: true}
    ✓ should match a/cb with /*/ and {nonegate: true}
    ✓ should match abbbz with /*/
    ✓ should match abbbz with /*/ and {dot: true}
    ✓ should match abbbz with /*/ and {nonegate: true}
    ✓ should match abc with /*/
    ✓ should match abc with /*/ and {dot: true}
    ✓ should match abc with /*/ and {nonegate: true}
    ✓ should match abd with /*/
    ✓ should match abd with /*/ and {dot: true}
    ✓ should match abd with /*/ and {nonegate: true}
    ✓ should match z.js with /*/
    ✓ should match z.js with /*/ and {dot: true}
    ✓ should match z.js with /*/ and {nonegate: true}
    ✓ should match za.js with /*/
    ✓ should match za.js with /*/ and {dot: true}
    ✓ should match za.js with /*/ and {nonegate: true}
    ✓ should match !a.js with /*/
    ✓ should match !a.js with /*/ and {dot: true}
    ✓ should match !a.js with /*/ and {nonegate: true}
    ✓ should match !a/b with /*/
    ✓ should match !a/b with /*/ and {dot: true}
    ✓ should match !a/b with /*/ and {nonegate: true}
    ✓ should match !a/b/ with /*/
    ✓ should match !a/b/ with /*/ and {dot: true}
    ✓ should match !a/b/ with /*/ and {nonegate: true}
    ✓ should match !a/b/c with /*/
    ✓ should match !a/b/c with /*/ and {dot: true}
    ✓ should match !a/b/c with /*/ and {nonegate: true}
    ✓ should match !a/b/c/ with /*/
    ✓ should match !a/b/c/ with /*/ and {dot: true}
    ✓ should match !a/b/c/ with /*/ and {nonegate: true}
    ✓ should match !a/!b with /*/
    ✓ should match !a/!b with /*/ and {dot: true}
    ✓ should match !a/!b with /*/ and {nonegate: true}
    ✓ should match !a/!b/c with /*/
    ✓ should match !a/!b/c with /*/ and {dot: true}
    ✓ should match !a/!b/c with /*/ and {nonegate: true}
    ✓ should match !a/!b/c/d with /*/
    ✓ should match !a/!b/c/d with /*/ and {dot: true}
    ✓ should match !a/!b/c/d with /*/ and {nonegate: true}
    ✓ should match !a/b/.c.md with /*/
    ✓ should match !a/b/.c.md with /*/ and {dot: true}
    ✓ should match !a/b/.c.md with /*/ and {nonegate: true}
    ✓ should match /a/ with /*/
    ✓ should match /a/ with /*/ and {dot: true}
    ✓ should match /a/ with /*/ and {nonegate: true}
    ✓ should match /a/b with /*/
    ✓ should match /a/b with /*/ and {dot: true}
    ✓ should match /a/b with /*/ and {nonegate: true}
    ✓ should match /a/cb with /*/
    ✓ should match /a/cb with /*/ and {dot: true}
    ✓ should match /a/cb with /*/ and {nonegate: true}
    ✓ should match /a/bb with /*/
    ✓ should match /a/bb with /*/ and {dot: true}
    ✓ should match /a/bb with /*/ and {nonegate: true}
    ✓ should match /a/b/c with /*/
    ✓ should match /a/b/c with /*/ and {dot: true}
    ✓ should match /a/b/c with /*/ and {nonegate: true}
    ✓ should match /a/b/c/ with /*/
    ✓ should match /a/b/c/ with /*/ and {dot: true}
    ✓ should match /a/b/c/ with /*/ and {nonegate: true}
    ✓ should match /a/b/c/d with /*/
    ✓ should match /a/b/c/d with /*/ and {dot: true}
    ✓ should match /a/b/c/d with /*/ and {nonegate: true}
    ✓ should match /a/b/c/d/ with /*/
    ✓ should match /a/b/c/d/ with /*/ and {dot: true}
    ✓ should match /a/b/c/d/ with /*/ and {nonegate: true}
    ✓ should match . with /*/
    ✓ should match . with /*/ and {dot: true}
    ✓ should match . with /*/ and {nonegate: true}
    ✓ should match ./ with /*/
    ✓ should match ./ with /*/ and {dot: true}
    ✓ should match ./ with /*/ and {nonegate: true}
    ✓ should match .. with /*/
    ✓ should match .. with /*/ and {dot: true}
    ✓ should match .. with /*/ and {nonegate: true}
    ✓ should match ../c with /*/
    ✓ should match ../c with /*/ and {dot: true}
    ✓ should match ../c with /*/ and {nonegate: true}
    ✓ should match ../c with /*/
    ✓ should match ../c with /*/ and {dot: true}
    ✓ should match ../c with /*/ and {nonegate: true}
    ✓ should match ./../c with /*/
    ✓ should match ./../c with /*/ and {dot: true}
    ✓ should match ./../c with /*/ and {nonegate: true}
    ✓ should match ./a/../c with /*/
    ✓ should match ./a/../c with /*/ and {dot: true}
    ✓ should match ./a/../c with /*/ and {nonegate: true}
    ✓ should match /.. with /*/
    ✓ should match /.. with /*/ and {dot: true}
    ✓ should match /.. with /*/ and {nonegate: true}
    ✓ should match /../c with /*/
    ✓ should match /../c with /*/ and {dot: true}
    ✓ should match /../c with /*/ and {nonegate: true}
    ✓ should match /../.c with /*/
    ✓ should match /../.c with /*/ and {dot: true}
    ✓ should match /../.c with /*/ and {nonegate: true}
    ✓ should match /../.c/ with /*/
    ✓ should match /../.c/ with /*/ and {dot: true}
    ✓ should match /../.c/ with /*/ and {nonegate: true}
    ✓ should match /a/../c with /*/
    ✓ should match /a/../c with /*/ and {dot: true}
    ✓ should match /a/../c with /*/ and {nonegate: true}
    ✓ should match a/../c with /*/
    ✓ should match a/../c with /*/ and {dot: true}
    ✓ should match a/../c with /*/ and {nonegate: true}
    ✓ should match ../.b/.c with /*/
    ✓ should match ../.b/.c with /*/ and {dot: true}
    ✓ should match ../.b/.c with /*/ and {nonegate: true}
    ✓ should match ../b/.c with /*/
    ✓ should match ../b/.c with /*/ and {dot: true}
    ✓ should match ../b/.c with /*/ and {nonegate: true}
    ✓ should match ./.b/.c with /*/
    ✓ should match ./.b/.c with /*/ and {dot: true}
    ✓ should match ./.b/.c with /*/ and {nonegate: true}
    ✓ should match ./b/.c with /*/
    ✓ should match ./b/.c with /*/ and {dot: true}
    ✓ should match ./b/.c with /*/ and {nonegate: true}
    ✓ should match .b with /*/
    ✓ should match .b with /*/ and {dot: true}
    ✓ should match .b with /*/ and {nonegate: true}
    ✓ should match .b.c with /*/
    ✓ should match .b.c with /*/ and {dot: true}
    ✓ should match .b.c with /*/ and {nonegate: true}
    ✓ should match .b.c/ with /*/
    ✓ should match .b.c/ with /*/ and {dot: true}
    ✓ should match .b.c/ with /*/ and {nonegate: true}
    ✓ should match .b/ with /*/
    ✓ should match .b/ with /*/ and {dot: true}
    ✓ should match .b/ with /*/ and {nonegate: true}
    ✓ should match .b/.c with /*/
    ✓ should match .b/.c with /*/ and {dot: true}
    ✓ should match .b/.c with /*/ and {nonegate: true}
    ✓ should match .b/c with /*/
    ✓ should match .b/c with /*/ and {dot: true}
    ✓ should match .b/c with /*/ and {nonegate: true}
    ✓ should match b/.c with /*/
    ✓ should match b/.c with /*/ and {dot: true}
    ✓ should match b/.c with /*/ and {nonegate: true}
    ✓ should match b/.c/ with /*/
    ✓ should match b/.c/ with /*/ and {dot: true}
    ✓ should match b/.c/ with /*/ and {nonegate: true}
    ✓ should match a/+b/c with /*/
    ✓ should match a/+b/c with /*/ and {dot: true}
    ✓ should match a/+b/c with /*/ and {nonegate: true}
    ✓ should match +a/+b/c with /*/
    ✓ should match +a/+b/c with /*/ and {dot: true}
    ✓ should match +a/+b/c with /*/ and {nonegate: true}
    ✓ should match a (foo) with /*/
    ✓ should match a (foo) with /*/ and {dot: true}
    ✓ should match a (foo) with /*/ and {nonegate: true}
    ✓ should match a (foo)/(bar) with /*/
    ✓ should match a (foo)/(bar) with /*/ and {dot: true}
    ✓ should match a (foo)/(bar) with /*/ and {nonegate: true}
    ✓ should match a/b/c (1) with /*/
    ✓ should match a/b/c (1) with /*/ and {dot: true}
    ✓ should match a/b/c (1) with /*/ and {nonegate: true}
    ✓ should match a/b (2)/c (1) with /*/
    ✓ should match a/b (2)/c (1) with /*/ and {dot: true}
    ✓ should match a/b (2)/c (1) with /*/ and {nonegate: true}
    ✓ should match a/b/c [def] with /*/
    ✓ should match a/b/c [def] with /*/ and {dot: true}
    ✓ should match a/b/c [def] with /*/ and {nonegate: true}
    ✓ should match a with /*/*
    ✓ should match a with /*/* and {dot: true}
    ✓ should match a with /*/* and {nonegate: true}
    ✓ should match a.md with /*/*
    ✓ should match a.md with /*/* and {dot: true}
    ✓ should match a.md with /*/* and {nonegate: true}
    ✓ should match a.js with /*/*
    ✓ should match a.js with /*/* and {dot: true}
    ✓ should match a.js with /*/* and {nonegate: true}
    ✓ should match a/ with /*/*
    ✓ should match a/ with /*/* and {dot: true}
    ✓ should match a/ with /*/* and {nonegate: true}
    ✓ should match a/b with /*/*
    ✓ should match a/b with /*/* and {dot: true}
    ✓ should match a/b with /*/* and {nonegate: true}
    ✓ should match a/b/.c.md with /*/*
    ✓ should match a/b/.c.md with /*/* and {dot: true}
    ✓ should match a/b/.c.md with /*/* and {nonegate: true}
    ✓ should match a/b/c with /*/*
    ✓ should match a/b/c with /*/* and {dot: true}
    ✓ should match a/b/c with /*/* and {nonegate: true}
    ✓ should match a/b/c.md with /*/*
    ✓ should match a/b/c.md with /*/* and {dot: true}
    ✓ should match a/b/c.md with /*/* and {nonegate: true}
    ✓ should match a/b/c/ with /*/*
    ✓ should match a/b/c/ with /*/* and {dot: true}
    ✓ should match a/b/c/ with /*/* and {nonegate: true}
    ✓ should match a/b/c/d with /*/*
    ✓ should match a/b/c/d with /*/* and {dot: true}
    ✓ should match a/b/c/d with /*/* and {nonegate: true}
    ✓ should match a/b/c/d/ with /*/*
    ✓ should match a/b/c/d/ with /*/* and {dot: true}
    ✓ should match a/b/c/d/ with /*/* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with /*/*
    ✓ should match a/b/c/d/e/f/z.js with /*/* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with /*/* and {nonegate: true}
    ✓ should match a/b/c/z.js with /*/*
    ✓ should match a/b/c/z.js with /*/* and {dot: true}
    ✓ should match a/b/c/z.js with /*/* and {nonegate: true}
    ✓ should match a/bb with /*/*
    ✓ should match a/bb with /*/* and {dot: true}
    ✓ should match a/bb with /*/* and {nonegate: true}
    ✓ should match a/cb with /*/*
    ✓ should match a/cb with /*/* and {dot: true}
    ✓ should match a/cb with /*/* and {nonegate: true}
    ✓ should match abbbz with /*/*
    ✓ should match abbbz with /*/* and {dot: true}
    ✓ should match abbbz with /*/* and {nonegate: true}
    ✓ should match abc with /*/*
    ✓ should match abc with /*/* and {dot: true}
    ✓ should match abc with /*/* and {nonegate: true}
    ✓ should match abd with /*/*
    ✓ should match abd with /*/* and {dot: true}
    ✓ should match abd with /*/* and {nonegate: true}
    ✓ should match z.js with /*/*
    ✓ should match z.js with /*/* and {dot: true}
    ✓ should match z.js with /*/* and {nonegate: true}
    ✓ should match za.js with /*/*
    ✓ should match za.js with /*/* and {dot: true}
    ✓ should match za.js with /*/* and {nonegate: true}
    ✓ should match !a.js with /*/*
    ✓ should match !a.js with /*/* and {dot: true}
    ✓ should match !a.js with /*/* and {nonegate: true}
    ✓ should match !a/b with /*/*
    ✓ should match !a/b with /*/* and {dot: true}
    ✓ should match !a/b with /*/* and {nonegate: true}
    ✓ should match !a/b/ with /*/*
    ✓ should match !a/b/ with /*/* and {dot: true}
    ✓ should match !a/b/ with /*/* and {nonegate: true}
    ✓ should match !a/b/c with /*/*
    ✓ should match !a/b/c with /*/* and {dot: true}
    ✓ should match !a/b/c with /*/* and {nonegate: true}
    ✓ should match !a/b/c/ with /*/*
    ✓ should match !a/b/c/ with /*/* and {dot: true}
    ✓ should match !a/b/c/ with /*/* and {nonegate: true}
    ✓ should match !a/!b with /*/*
    ✓ should match !a/!b with /*/* and {dot: true}
    ✓ should match !a/!b with /*/* and {nonegate: true}
    ✓ should match !a/!b/c with /*/*
    ✓ should match !a/!b/c with /*/* and {dot: true}
    ✓ should match !a/!b/c with /*/* and {nonegate: true}
    ✓ should match !a/!b/c/d with /*/*
    ✓ should match !a/!b/c/d with /*/* and {dot: true}
    ✓ should match !a/!b/c/d with /*/* and {nonegate: true}
    ✓ should match !a/b/.c.md with /*/*
    ✓ should match !a/b/.c.md with /*/* and {dot: true}
    ✓ should match !a/b/.c.md with /*/* and {nonegate: true}
    ✓ should match /a/ with /*/*
    ✓ should match /a/ with /*/* and {dot: true}
    ✓ should match /a/ with /*/* and {nonegate: true}
    ✓ should match /a/b with /*/*
    ✓ should match /a/b with /*/* and {dot: true}
    ✓ should match /a/b with /*/* and {nonegate: true}
    ✓ should match /a/cb with /*/*
    ✓ should match /a/cb with /*/* and {dot: true}
    ✓ should match /a/cb with /*/* and {nonegate: true}
    ✓ should match /a/bb with /*/*
    ✓ should match /a/bb with /*/* and {dot: true}
    ✓ should match /a/bb with /*/* and {nonegate: true}
    ✓ should match /a/b/c with /*/*
    ✓ should match /a/b/c with /*/* and {dot: true}
    ✓ should match /a/b/c with /*/* and {nonegate: true}
    ✓ should match /a/b/c/ with /*/*
    ✓ should match /a/b/c/ with /*/* and {dot: true}
    ✓ should match /a/b/c/ with /*/* and {nonegate: true}
    ✓ should match /a/b/c/d with /*/*
    ✓ should match /a/b/c/d with /*/* and {dot: true}
    ✓ should match /a/b/c/d with /*/* and {nonegate: true}
    ✓ should match /a/b/c/d/ with /*/*
    ✓ should match /a/b/c/d/ with /*/* and {dot: true}
    ✓ should match /a/b/c/d/ with /*/* and {nonegate: true}
    ✓ should match . with /*/*
    ✓ should match . with /*/* and {dot: true}
    ✓ should match . with /*/* and {nonegate: true}
    ✓ should match ./ with /*/*
    ✓ should match ./ with /*/* and {dot: true}
    ✓ should match ./ with /*/* and {nonegate: true}
    ✓ should match .. with /*/*
    ✓ should match .. with /*/* and {dot: true}
    ✓ should match .. with /*/* and {nonegate: true}
    ✓ should match ../c with /*/*
    ✓ should match ../c with /*/* and {dot: true}
    ✓ should match ../c with /*/* and {nonegate: true}
    ✓ should match ../c with /*/*
    ✓ should match ../c with /*/* and {dot: true}
    ✓ should match ../c with /*/* and {nonegate: true}
    ✓ should match ./../c with /*/*
    ✓ should match ./../c with /*/* and {dot: true}
    ✓ should match ./../c with /*/* and {nonegate: true}
    ✓ should match ./a/../c with /*/*
    ✓ should match ./a/../c with /*/* and {dot: true}
    ✓ should match ./a/../c with /*/* and {nonegate: true}
    ✓ should match /.. with /*/*
    ✓ should match /.. with /*/* and {dot: true}
    ✓ should match /.. with /*/* and {nonegate: true}
    ✓ should match /../c with /*/*
    ✓ should match /../c with /*/* and {dot: true}
    ✓ should match /../c with /*/* and {nonegate: true}
    ✓ should match /../.c with /*/*
    ✓ should match /../.c with /*/* and {dot: true}
    ✓ should match /../.c with /*/* and {nonegate: true}
    ✓ should match /../.c/ with /*/*
    ✓ should match /../.c/ with /*/* and {dot: true}
    ✓ should match /../.c/ with /*/* and {nonegate: true}
    ✓ should match /a/../c with /*/*
    ✓ should match /a/../c with /*/* and {dot: true}
    ✓ should match /a/../c with /*/* and {nonegate: true}
    ✓ should match a/../c with /*/*
    ✓ should match a/../c with /*/* and {dot: true}
    ✓ should match a/../c with /*/* and {nonegate: true}
    ✓ should match ../.b/.c with /*/*
    ✓ should match ../.b/.c with /*/* and {dot: true}
    ✓ should match ../.b/.c with /*/* and {nonegate: true}
    ✓ should match ../b/.c with /*/*
    ✓ should match ../b/.c with /*/* and {dot: true}
    ✓ should match ../b/.c with /*/* and {nonegate: true}
    ✓ should match ./.b/.c with /*/*
    ✓ should match ./.b/.c with /*/* and {dot: true}
    ✓ should match ./.b/.c with /*/* and {nonegate: true}
    ✓ should match ./b/.c with /*/*
    ✓ should match ./b/.c with /*/* and {dot: true}
    ✓ should match ./b/.c with /*/* and {nonegate: true}
    ✓ should match .b with /*/*
    ✓ should match .b with /*/* and {dot: true}
    ✓ should match .b with /*/* and {nonegate: true}
    ✓ should match .b.c with /*/*
    ✓ should match .b.c with /*/* and {dot: true}
    ✓ should match .b.c with /*/* and {nonegate: true}
    ✓ should match .b.c/ with /*/*
    ✓ should match .b.c/ with /*/* and {dot: true}
    ✓ should match .b.c/ with /*/* and {nonegate: true}
    ✓ should match .b/ with /*/*
    ✓ should match .b/ with /*/* and {dot: true}
    ✓ should match .b/ with /*/* and {nonegate: true}
    ✓ should match .b/.c with /*/*
    ✓ should match .b/.c with /*/* and {dot: true}
    ✓ should match .b/.c with /*/* and {nonegate: true}
    ✓ should match .b/c with /*/*
    ✓ should match .b/c with /*/* and {dot: true}
    ✓ should match .b/c with /*/* and {nonegate: true}
    ✓ should match b/.c with /*/*
    ✓ should match b/.c with /*/* and {dot: true}
    ✓ should match b/.c with /*/* and {nonegate: true}
    ✓ should match b/.c/ with /*/*
    ✓ should match b/.c/ with /*/* and {dot: true}
    ✓ should match b/.c/ with /*/* and {nonegate: true}
    ✓ should match a/+b/c with /*/*
    ✓ should match a/+b/c with /*/* and {dot: true}
    ✓ should match a/+b/c with /*/* and {nonegate: true}
    ✓ should match +a/+b/c with /*/*
    ✓ should match +a/+b/c with /*/* and {dot: true}
    ✓ should match +a/+b/c with /*/* and {nonegate: true}
    ✓ should match a (foo) with /*/*
    ✓ should match a (foo) with /*/* and {dot: true}
    ✓ should match a (foo) with /*/* and {nonegate: true}
    ✓ should match a (foo)/(bar) with /*/*
    ✓ should match a (foo)/(bar) with /*/* and {dot: true}
    ✓ should match a (foo)/(bar) with /*/* and {nonegate: true}
    ✓ should match a/b/c (1) with /*/*
    ✓ should match a/b/c (1) with /*/* and {dot: true}
    ✓ should match a/b/c (1) with /*/* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with /*/*
    ✓ should match a/b (2)/c (1) with /*/* and {dot: true}
    ✓ should match a/b (2)/c (1) with /*/* and {nonegate: true}
    ✓ should match a/b/c [def] with /*/*
    ✓ should match a/b/c [def] with /*/* and {dot: true}
    ✓ should match a/b/c [def] with /*/* and {nonegate: true}
    ✓ should match a with /*/**/
    ✓ should match a with /*/**/ and {dot: true}
    ✓ should match a with /*/**/ and {nonegate: true}
    ✓ should match a.md with /*/**/
    ✓ should match a.md with /*/**/ and {dot: true}
    ✓ should match a.md with /*/**/ and {nonegate: true}
    ✓ should match a.js with /*/**/
    ✓ should match a.js with /*/**/ and {dot: true}
    ✓ should match a.js with /*/**/ and {nonegate: true}
    ✓ should match a/ with /*/**/
    ✓ should match a/ with /*/**/ and {dot: true}
    ✓ should match a/ with /*/**/ and {nonegate: true}
    ✓ should match a/b with /*/**/
    ✓ should match a/b with /*/**/ and {dot: true}
    ✓ should match a/b with /*/**/ and {nonegate: true}
    ✓ should match a/b/.c.md with /*/**/
    ✓ should match a/b/.c.md with /*/**/ and {dot: true}
    ✓ should match a/b/.c.md with /*/**/ and {nonegate: true}
    ✓ should match a/b/c with /*/**/
    ✓ should match a/b/c with /*/**/ and {dot: true}
    ✓ should match a/b/c with /*/**/ and {nonegate: true}
    ✓ should match a/b/c.md with /*/**/
    ✓ should match a/b/c.md with /*/**/ and {dot: true}
    ✓ should match a/b/c.md with /*/**/ and {nonegate: true}
    ✓ should match a/b/c/ with /*/**/
    ✓ should match a/b/c/ with /*/**/ and {dot: true}
    ✓ should match a/b/c/ with /*/**/ and {nonegate: true}
    ✓ should match a/b/c/d with /*/**/
    ✓ should match a/b/c/d with /*/**/ and {dot: true}
    ✓ should match a/b/c/d with /*/**/ and {nonegate: true}
    ✓ should match a/b/c/d/ with /*/**/
    ✓ should match a/b/c/d/ with /*/**/ and {dot: true}
    ✓ should match a/b/c/d/ with /*/**/ and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with /*/**/
    ✓ should match a/b/c/d/e/f/z.js with /*/**/ and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with /*/**/ and {nonegate: true}
    ✓ should match a/b/c/z.js with /*/**/
    ✓ should match a/b/c/z.js with /*/**/ and {dot: true}
    ✓ should match a/b/c/z.js with /*/**/ and {nonegate: true}
    ✓ should match a/bb with /*/**/
    ✓ should match a/bb with /*/**/ and {dot: true}
    ✓ should match a/bb with /*/**/ and {nonegate: true}
    ✓ should match a/cb with /*/**/
    ✓ should match a/cb with /*/**/ and {dot: true}
    ✓ should match a/cb with /*/**/ and {nonegate: true}
    ✓ should match abbbz with /*/**/
    ✓ should match abbbz with /*/**/ and {dot: true}
    ✓ should match abbbz with /*/**/ and {nonegate: true}
    ✓ should match abc with /*/**/
    ✓ should match abc with /*/**/ and {dot: true}
    ✓ should match abc with /*/**/ and {nonegate: true}
    ✓ should match abd with /*/**/
    ✓ should match abd with /*/**/ and {dot: true}
    ✓ should match abd with /*/**/ and {nonegate: true}
    ✓ should match z.js with /*/**/
    ✓ should match z.js with /*/**/ and {dot: true}
    ✓ should match z.js with /*/**/ and {nonegate: true}
    ✓ should match za.js with /*/**/
    ✓ should match za.js with /*/**/ and {dot: true}
    ✓ should match za.js with /*/**/ and {nonegate: true}
    ✓ should match !a.js with /*/**/
    ✓ should match !a.js with /*/**/ and {dot: true}
    ✓ should match !a.js with /*/**/ and {nonegate: true}
    ✓ should match !a/b with /*/**/
    ✓ should match !a/b with /*/**/ and {dot: true}
    ✓ should match !a/b with /*/**/ and {nonegate: true}
    ✓ should match !a/b/ with /*/**/
    ✓ should match !a/b/ with /*/**/ and {dot: true}
    ✓ should match !a/b/ with /*/**/ and {nonegate: true}
    ✓ should match !a/b/c with /*/**/
    ✓ should match !a/b/c with /*/**/ and {dot: true}
    ✓ should match !a/b/c with /*/**/ and {nonegate: true}
    ✓ should match !a/b/c/ with /*/**/
    ✓ should match !a/b/c/ with /*/**/ and {dot: true}
    ✓ should match !a/b/c/ with /*/**/ and {nonegate: true}
    ✓ should match !a/!b with /*/**/
    ✓ should match !a/!b with /*/**/ and {dot: true}
    ✓ should match !a/!b with /*/**/ and {nonegate: true}
    ✓ should match !a/!b/c with /*/**/
    ✓ should match !a/!b/c with /*/**/ and {dot: true}
    ✓ should match !a/!b/c with /*/**/ and {nonegate: true}
    ✓ should match !a/!b/c/d with /*/**/
    ✓ should match !a/!b/c/d with /*/**/ and {dot: true}
    ✓ should match !a/!b/c/d with /*/**/ and {nonegate: true}
    ✓ should match !a/b/.c.md with /*/**/
    ✓ should match !a/b/.c.md with /*/**/ and {dot: true}
    ✓ should match !a/b/.c.md with /*/**/ and {nonegate: true}
    ✓ should match /a/ with /*/**/
    ✓ should match /a/ with /*/**/ and {dot: true}
    ✓ should match /a/ with /*/**/ and {nonegate: true}
    ✓ should match /a/b with /*/**/
    ✓ should match /a/b with /*/**/ and {dot: true}
    ✓ should match /a/b with /*/**/ and {nonegate: true}
    ✓ should match /a/cb with /*/**/
    ✓ should match /a/cb with /*/**/ and {dot: true}
    ✓ should match /a/cb with /*/**/ and {nonegate: true}
    ✓ should match /a/bb with /*/**/
    ✓ should match /a/bb with /*/**/ and {dot: true}
    ✓ should match /a/bb with /*/**/ and {nonegate: true}
    ✓ should match /a/b/c with /*/**/
    ✓ should match /a/b/c with /*/**/ and {dot: true}
    ✓ should match /a/b/c with /*/**/ and {nonegate: true}
    ✓ should match /a/b/c/ with /*/**/
    ✓ should match /a/b/c/ with /*/**/ and {dot: true}
    ✓ should match /a/b/c/ with /*/**/ and {nonegate: true}
    ✓ should match /a/b/c/d with /*/**/
    ✓ should match /a/b/c/d with /*/**/ and {dot: true}
    ✓ should match /a/b/c/d with /*/**/ and {nonegate: true}
    ✓ should match /a/b/c/d/ with /*/**/
    ✓ should match /a/b/c/d/ with /*/**/ and {dot: true}
    ✓ should match /a/b/c/d/ with /*/**/ and {nonegate: true}
    ✓ should match . with /*/**/
    ✓ should match . with /*/**/ and {dot: true}
    ✓ should match . with /*/**/ and {nonegate: true}
    ✓ should match ./ with /*/**/
    ✓ should match ./ with /*/**/ and {dot: true}
    ✓ should match ./ with /*/**/ and {nonegate: true}
    ✓ should match .. with /*/**/
    ✓ should match .. with /*/**/ and {dot: true}
    ✓ should match .. with /*/**/ and {nonegate: true}
    ✓ should match ../c with /*/**/
    ✓ should match ../c with /*/**/ and {dot: true}
    ✓ should match ../c with /*/**/ and {nonegate: true}
    ✓ should match ../c with /*/**/
    ✓ should match ../c with /*/**/ and {dot: true}
    ✓ should match ../c with /*/**/ and {nonegate: true}
    ✓ should match ./../c with /*/**/
    ✓ should match ./../c with /*/**/ and {dot: true}
    ✓ should match ./../c with /*/**/ and {nonegate: true}
    ✓ should match ./a/../c with /*/**/
    ✓ should match ./a/../c with /*/**/ and {dot: true}
    ✓ should match ./a/../c with /*/**/ and {nonegate: true}
    ✓ should match /.. with /*/**/
    ✓ should match /.. with /*/**/ and {dot: true}
    ✓ should match /.. with /*/**/ and {nonegate: true}
    ✓ should match /../c with /*/**/
    ✓ should match /../c with /*/**/ and {dot: true}
    ✓ should match /../c with /*/**/ and {nonegate: true}
    ✓ should match /../.c with /*/**/
    ✓ should match /../.c with /*/**/ and {dot: true}
    ✓ should match /../.c with /*/**/ and {nonegate: true}
    ✓ should match /../.c/ with /*/**/
    ✓ should match /../.c/ with /*/**/ and {dot: true}
    ✓ should match /../.c/ with /*/**/ and {nonegate: true}
    ✓ should match /a/../c with /*/**/
    ✓ should match /a/../c with /*/**/ and {dot: true}
    ✓ should match /a/../c with /*/**/ and {nonegate: true}
    ✓ should match a/../c with /*/**/
    ✓ should match a/../c with /*/**/ and {dot: true}
    ✓ should match a/../c with /*/**/ and {nonegate: true}
    ✓ should match ../.b/.c with /*/**/
    ✓ should match ../.b/.c with /*/**/ and {dot: true}
    ✓ should match ../.b/.c with /*/**/ and {nonegate: true}
    ✓ should match ../b/.c with /*/**/
    ✓ should match ../b/.c with /*/**/ and {dot: true}
    ✓ should match ../b/.c with /*/**/ and {nonegate: true}
    ✓ should match ./.b/.c with /*/**/
    ✓ should match ./.b/.c with /*/**/ and {dot: true}
    ✓ should match ./.b/.c with /*/**/ and {nonegate: true}
    ✓ should match ./b/.c with /*/**/
    ✓ should match ./b/.c with /*/**/ and {dot: true}
    ✓ should match ./b/.c with /*/**/ and {nonegate: true}
    ✓ should match .b with /*/**/
    ✓ should match .b with /*/**/ and {dot: true}
    ✓ should match .b with /*/**/ and {nonegate: true}
    ✓ should match .b.c with /*/**/
    ✓ should match .b.c with /*/**/ and {dot: true}
    ✓ should match .b.c with /*/**/ and {nonegate: true}
    ✓ should match .b.c/ with /*/**/
    ✓ should match .b.c/ with /*/**/ and {dot: true}
    ✓ should match .b.c/ with /*/**/ and {nonegate: true}
    ✓ should match .b/ with /*/**/
    ✓ should match .b/ with /*/**/ and {dot: true}
    ✓ should match .b/ with /*/**/ and {nonegate: true}
    ✓ should match .b/.c with /*/**/
    ✓ should match .b/.c with /*/**/ and {dot: true}
    ✓ should match .b/.c with /*/**/ and {nonegate: true}
    ✓ should match .b/c with /*/**/
    ✓ should match .b/c with /*/**/ and {dot: true}
    ✓ should match .b/c with /*/**/ and {nonegate: true}
    ✓ should match b/.c with /*/**/
    ✓ should match b/.c with /*/**/ and {dot: true}
    ✓ should match b/.c with /*/**/ and {nonegate: true}
    ✓ should match b/.c/ with /*/**/
    ✓ should match b/.c/ with /*/**/ and {dot: true}
    ✓ should match b/.c/ with /*/**/ and {nonegate: true}
    ✓ should match a/+b/c with /*/**/
    ✓ should match a/+b/c with /*/**/ and {dot: true}
    ✓ should match a/+b/c with /*/**/ and {nonegate: true}
    ✓ should match +a/+b/c with /*/**/
    ✓ should match +a/+b/c with /*/**/ and {dot: true}
    ✓ should match +a/+b/c with /*/**/ and {nonegate: true}
    ✓ should match a (foo) with /*/**/
    ✓ should match a (foo) with /*/**/ and {dot: true}
    ✓ should match a (foo) with /*/**/ and {nonegate: true}
    ✓ should match a (foo)/(bar) with /*/**/
    ✓ should match a (foo)/(bar) with /*/**/ and {dot: true}
    ✓ should match a (foo)/(bar) with /*/**/ and {nonegate: true}
    ✓ should match a/b/c (1) with /*/**/
    ✓ should match a/b/c (1) with /*/**/ and {dot: true}
    ✓ should match a/b/c (1) with /*/**/ and {nonegate: true}
    ✓ should match a/b (2)/c (1) with /*/**/
    ✓ should match a/b (2)/c (1) with /*/**/ and {dot: true}
    ✓ should match a/b (2)/c (1) with /*/**/ and {nonegate: true}
    ✓ should match a/b/c [def] with /*/**/
    ✓ should match a/b/c [def] with /*/**/ and {dot: true}
    ✓ should match a/b/c [def] with /*/**/ and {nonegate: true}
    ✓ should match a with /*/**/*
    ✓ should match a with /*/**/* and {dot: true}
    ✓ should match a with /*/**/* and {nonegate: true}
    ✓ should match a.md with /*/**/*
    ✓ should match a.md with /*/**/* and {dot: true}
    ✓ should match a.md with /*/**/* and {nonegate: true}
    ✓ should match a.js with /*/**/*
    ✓ should match a.js with /*/**/* and {dot: true}
    ✓ should match a.js with /*/**/* and {nonegate: true}
    ✓ should match a/ with /*/**/*
    ✓ should match a/ with /*/**/* and {dot: true}
    ✓ should match a/ with /*/**/* and {nonegate: true}
    ✓ should match a/b with /*/**/*
    ✓ should match a/b with /*/**/* and {dot: true}
    ✓ should match a/b with /*/**/* and {nonegate: true}
    ✓ should match a/b/.c.md with /*/**/*
    ✓ should match a/b/.c.md with /*/**/* and {dot: true}
    ✓ should match a/b/.c.md with /*/**/* and {nonegate: true}
    ✓ should match a/b/c with /*/**/*
    ✓ should match a/b/c with /*/**/* and {dot: true}
    ✓ should match a/b/c with /*/**/* and {nonegate: true}
    ✓ should match a/b/c.md with /*/**/*
    ✓ should match a/b/c.md with /*/**/* and {dot: true}
    ✓ should match a/b/c.md with /*/**/* and {nonegate: true}
    ✓ should match a/b/c/ with /*/**/*
    ✓ should match a/b/c/ with /*/**/* and {dot: true}
    ✓ should match a/b/c/ with /*/**/* and {nonegate: true}
    ✓ should match a/b/c/d with /*/**/*
    ✓ should match a/b/c/d with /*/**/* and {dot: true}
    ✓ should match a/b/c/d with /*/**/* and {nonegate: true}
    ✓ should match a/b/c/d/ with /*/**/*
    ✓ should match a/b/c/d/ with /*/**/* and {dot: true}
    ✓ should match a/b/c/d/ with /*/**/* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with /*/**/*
    ✓ should match a/b/c/d/e/f/z.js with /*/**/* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with /*/**/* and {nonegate: true}
    ✓ should match a/b/c/z.js with /*/**/*
    ✓ should match a/b/c/z.js with /*/**/* and {dot: true}
    ✓ should match a/b/c/z.js with /*/**/* and {nonegate: true}
    ✓ should match a/bb with /*/**/*
    ✓ should match a/bb with /*/**/* and {dot: true}
    ✓ should match a/bb with /*/**/* and {nonegate: true}
    ✓ should match a/cb with /*/**/*
    ✓ should match a/cb with /*/**/* and {dot: true}
    ✓ should match a/cb with /*/**/* and {nonegate: true}
    ✓ should match abbbz with /*/**/*
    ✓ should match abbbz with /*/**/* and {dot: true}
    ✓ should match abbbz with /*/**/* and {nonegate: true}
    ✓ should match abc with /*/**/*
    ✓ should match abc with /*/**/* and {dot: true}
    ✓ should match abc with /*/**/* and {nonegate: true}
    ✓ should match abd with /*/**/*
    ✓ should match abd with /*/**/* and {dot: true}
    ✓ should match abd with /*/**/* and {nonegate: true}
    ✓ should match z.js with /*/**/*
    ✓ should match z.js with /*/**/* and {dot: true}
    ✓ should match z.js with /*/**/* and {nonegate: true}
    ✓ should match za.js with /*/**/*
    ✓ should match za.js with /*/**/* and {dot: true}
    ✓ should match za.js with /*/**/* and {nonegate: true}
    ✓ should match !a.js with /*/**/*
    ✓ should match !a.js with /*/**/* and {dot: true}
    ✓ should match !a.js with /*/**/* and {nonegate: true}
    ✓ should match !a/b with /*/**/*
    ✓ should match !a/b with /*/**/* and {dot: true}
    ✓ should match !a/b with /*/**/* and {nonegate: true}
    ✓ should match !a/b/ with /*/**/*
    ✓ should match !a/b/ with /*/**/* and {dot: true}
    ✓ should match !a/b/ with /*/**/* and {nonegate: true}
    ✓ should match !a/b/c with /*/**/*
    ✓ should match !a/b/c with /*/**/* and {dot: true}
    ✓ should match !a/b/c with /*/**/* and {nonegate: true}
    ✓ should match !a/b/c/ with /*/**/*
    ✓ should match !a/b/c/ with /*/**/* and {dot: true}
    ✓ should match !a/b/c/ with /*/**/* and {nonegate: true}
    ✓ should match !a/!b with /*/**/*
    ✓ should match !a/!b with /*/**/* and {dot: true}
    ✓ should match !a/!b with /*/**/* and {nonegate: true}
    ✓ should match !a/!b/c with /*/**/*
    ✓ should match !a/!b/c with /*/**/* and {dot: true}
    ✓ should match !a/!b/c with /*/**/* and {nonegate: true}
    ✓ should match !a/!b/c/d with /*/**/*
    ✓ should match !a/!b/c/d with /*/**/* and {dot: true}
    ✓ should match !a/!b/c/d with /*/**/* and {nonegate: true}
    ✓ should match !a/b/.c.md with /*/**/*
    ✓ should match !a/b/.c.md with /*/**/* and {dot: true}
    ✓ should match !a/b/.c.md with /*/**/* and {nonegate: true}
    ✓ should match /a/ with /*/**/*
    ✓ should match /a/ with /*/**/* and {dot: true}
    ✓ should match /a/ with /*/**/* and {nonegate: true}
    ✓ should match /a/b with /*/**/*
    ✓ should match /a/b with /*/**/* and {dot: true}
    ✓ should match /a/b with /*/**/* and {nonegate: true}
    ✓ should match /a/cb with /*/**/*
    ✓ should match /a/cb with /*/**/* and {dot: true}
    ✓ should match /a/cb with /*/**/* and {nonegate: true}
    ✓ should match /a/bb with /*/**/*
    ✓ should match /a/bb with /*/**/* and {dot: true}
    ✓ should match /a/bb with /*/**/* and {nonegate: true}
    ✓ should match /a/b/c with /*/**/*
    ✓ should match /a/b/c with /*/**/* and {dot: true}
    ✓ should match /a/b/c with /*/**/* and {nonegate: true}
    ✓ should match /a/b/c/ with /*/**/*
    ✓ should match /a/b/c/ with /*/**/* and {dot: true}
    ✓ should match /a/b/c/ with /*/**/* and {nonegate: true}
    ✓ should match /a/b/c/d with /*/**/*
    ✓ should match /a/b/c/d with /*/**/* and {dot: true}
    ✓ should match /a/b/c/d with /*/**/* and {nonegate: true}
    ✓ should match /a/b/c/d/ with /*/**/*
    ✓ should match /a/b/c/d/ with /*/**/* and {dot: true}
    ✓ should match /a/b/c/d/ with /*/**/* and {nonegate: true}
    ✓ should match . with /*/**/*
    ✓ should match . with /*/**/* and {dot: true}
    ✓ should match . with /*/**/* and {nonegate: true}
    ✓ should match ./ with /*/**/*
    ✓ should match ./ with /*/**/* and {dot: true}
    ✓ should match ./ with /*/**/* and {nonegate: true}
    ✓ should match .. with /*/**/*
    ✓ should match .. with /*/**/* and {dot: true}
    ✓ should match .. with /*/**/* and {nonegate: true}
    ✓ should match ../c with /*/**/*
    ✓ should match ../c with /*/**/* and {dot: true}
    ✓ should match ../c with /*/**/* and {nonegate: true}
    ✓ should match ../c with /*/**/*
    ✓ should match ../c with /*/**/* and {dot: true}
    ✓ should match ../c with /*/**/* and {nonegate: true}
    ✓ should match ./../c with /*/**/*
    ✓ should match ./../c with /*/**/* and {dot: true}
    ✓ should match ./../c with /*/**/* and {nonegate: true}
    ✓ should match ./a/../c with /*/**/*
    ✓ should match ./a/../c with /*/**/* and {dot: true}
    ✓ should match ./a/../c with /*/**/* and {nonegate: true}
    ✓ should match /.. with /*/**/*
    ✓ should match /.. with /*/**/* and {dot: true}
    ✓ should match /.. with /*/**/* and {nonegate: true}
    ✓ should match /../c with /*/**/*
    ✓ should match /../c with /*/**/* and {dot: true}
    ✓ should match /../c with /*/**/* and {nonegate: true}
    ✓ should match /../.c with /*/**/*
    ✓ should match /../.c with /*/**/* and {dot: true}
    ✓ should match /../.c with /*/**/* and {nonegate: true}
    ✓ should match /../.c/ with /*/**/*
    ✓ should match /../.c/ with /*/**/* and {dot: true}
    ✓ should match /../.c/ with /*/**/* and {nonegate: true}
    ✓ should match /a/../c with /*/**/*
    ✓ should match /a/../c with /*/**/* and {dot: true}
    ✓ should match /a/../c with /*/**/* and {nonegate: true}
    ✓ should match a/../c with /*/**/*
    ✓ should match a/../c with /*/**/* and {dot: true}
    ✓ should match a/../c with /*/**/* and {nonegate: true}
    ✓ should match ../.b/.c with /*/**/*
    ✓ should match ../.b/.c with /*/**/* and {dot: true}
    ✓ should match ../.b/.c with /*/**/* and {nonegate: true}
    ✓ should match ../b/.c with /*/**/*
    ✓ should match ../b/.c with /*/**/* and {dot: true}
    ✓ should match ../b/.c with /*/**/* and {nonegate: true}
    ✓ should match ./.b/.c with /*/**/*
    ✓ should match ./.b/.c with /*/**/* and {dot: true}
    ✓ should match ./.b/.c with /*/**/* and {nonegate: true}
    ✓ should match ./b/.c with /*/**/*
    ✓ should match ./b/.c with /*/**/* and {dot: true}
    ✓ should match ./b/.c with /*/**/* and {nonegate: true}
    ✓ should match .b with /*/**/*
    ✓ should match .b with /*/**/* and {dot: true}
    ✓ should match .b with /*/**/* and {nonegate: true}
    ✓ should match .b.c with /*/**/*
    ✓ should match .b.c with /*/**/* and {dot: true}
    ✓ should match .b.c with /*/**/* and {nonegate: true}
    ✓ should match .b.c/ with /*/**/*
    ✓ should match .b.c/ with /*/**/* and {dot: true}
    ✓ should match .b.c/ with /*/**/* and {nonegate: true}
    ✓ should match .b/ with /*/**/*
    ✓ should match .b/ with /*/**/* and {dot: true}
    ✓ should match .b/ with /*/**/* and {nonegate: true}
    ✓ should match .b/.c with /*/**/*
    ✓ should match .b/.c with /*/**/* and {dot: true}
    ✓ should match .b/.c with /*/**/* and {nonegate: true}
    ✓ should match .b/c with /*/**/*
    ✓ should match .b/c with /*/**/* and {dot: true}
    ✓ should match .b/c with /*/**/* and {nonegate: true}
    ✓ should match b/.c with /*/**/*
    ✓ should match b/.c with /*/**/* and {dot: true}
    ✓ should match b/.c with /*/**/* and {nonegate: true}
    ✓ should match b/.c/ with /*/**/*
    ✓ should match b/.c/ with /*/**/* and {dot: true}
    ✓ should match b/.c/ with /*/**/* and {nonegate: true}
    ✓ should match a/+b/c with /*/**/*
    ✓ should match a/+b/c with /*/**/* and {dot: true}
    ✓ should match a/+b/c with /*/**/* and {nonegate: true}
    ✓ should match +a/+b/c with /*/**/*
    ✓ should match +a/+b/c with /*/**/* and {dot: true}
    ✓ should match +a/+b/c with /*/**/* and {nonegate: true}
    ✓ should match a (foo) with /*/**/*
    ✓ should match a (foo) with /*/**/* and {dot: true}
    ✓ should match a (foo) with /*/**/* and {nonegate: true}
    ✓ should match a (foo)/(bar) with /*/**/*
    ✓ should match a (foo)/(bar) with /*/**/* and {dot: true}
    ✓ should match a (foo)/(bar) with /*/**/* and {nonegate: true}
    ✓ should match a/b/c (1) with /*/**/*
    ✓ should match a/b/c (1) with /*/**/* and {dot: true}
    ✓ should match a/b/c (1) with /*/**/* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with /*/**/*
    ✓ should match a/b (2)/c (1) with /*/**/* and {dot: true}
    ✓ should match a/b (2)/c (1) with /*/**/* and {nonegate: true}
    ✓ should match a/b/c [def] with /*/**/*
    ✓ should match a/b/c [def] with /*/**/* and {dot: true}
    ✓ should match a/b/c [def] with /*/**/* and {nonegate: true}
    ✓ should match a with /*/*/
    ✓ should match a with /*/*/ and {dot: true}
    ✓ should match a with /*/*/ and {nonegate: true}
    ✓ should match a.md with /*/*/
    ✓ should match a.md with /*/*/ and {dot: true}
    ✓ should match a.md with /*/*/ and {nonegate: true}
    ✓ should match a.js with /*/*/
    ✓ should match a.js with /*/*/ and {dot: true}
    ✓ should match a.js with /*/*/ and {nonegate: true}
    ✓ should match a/ with /*/*/
    ✓ should match a/ with /*/*/ and {dot: true}
    ✓ should match a/ with /*/*/ and {nonegate: true}
    ✓ should match a/b with /*/*/
    ✓ should match a/b with /*/*/ and {dot: true}
    ✓ should match a/b with /*/*/ and {nonegate: true}
    ✓ should match a/b/.c.md with /*/*/
    ✓ should match a/b/.c.md with /*/*/ and {dot: true}
    ✓ should match a/b/.c.md with /*/*/ and {nonegate: true}
    ✓ should match a/b/c with /*/*/
    ✓ should match a/b/c with /*/*/ and {dot: true}
    ✓ should match a/b/c with /*/*/ and {nonegate: true}
    ✓ should match a/b/c.md with /*/*/
    ✓ should match a/b/c.md with /*/*/ and {dot: true}
    ✓ should match a/b/c.md with /*/*/ and {nonegate: true}
    ✓ should match a/b/c/ with /*/*/
    ✓ should match a/b/c/ with /*/*/ and {dot: true}
    ✓ should match a/b/c/ with /*/*/ and {nonegate: true}
    ✓ should match a/b/c/d with /*/*/
    ✓ should match a/b/c/d with /*/*/ and {dot: true}
    ✓ should match a/b/c/d with /*/*/ and {nonegate: true}
    ✓ should match a/b/c/d/ with /*/*/
    ✓ should match a/b/c/d/ with /*/*/ and {dot: true}
    ✓ should match a/b/c/d/ with /*/*/ and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with /*/*/
    ✓ should match a/b/c/d/e/f/z.js with /*/*/ and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with /*/*/ and {nonegate: true}
    ✓ should match a/b/c/z.js with /*/*/
    ✓ should match a/b/c/z.js with /*/*/ and {dot: true}
    ✓ should match a/b/c/z.js with /*/*/ and {nonegate: true}
    ✓ should match a/bb with /*/*/
    ✓ should match a/bb with /*/*/ and {dot: true}
    ✓ should match a/bb with /*/*/ and {nonegate: true}
    ✓ should match a/cb with /*/*/
    ✓ should match a/cb with /*/*/ and {dot: true}
    ✓ should match a/cb with /*/*/ and {nonegate: true}
    ✓ should match abbbz with /*/*/
    ✓ should match abbbz with /*/*/ and {dot: true}
    ✓ should match abbbz with /*/*/ and {nonegate: true}
    ✓ should match abc with /*/*/
    ✓ should match abc with /*/*/ and {dot: true}
    ✓ should match abc with /*/*/ and {nonegate: true}
    ✓ should match abd with /*/*/
    ✓ should match abd with /*/*/ and {dot: true}
    ✓ should match abd with /*/*/ and {nonegate: true}
    ✓ should match z.js with /*/*/
    ✓ should match z.js with /*/*/ and {dot: true}
    ✓ should match z.js with /*/*/ and {nonegate: true}
    ✓ should match za.js with /*/*/
    ✓ should match za.js with /*/*/ and {dot: true}
    ✓ should match za.js with /*/*/ and {nonegate: true}
    ✓ should match !a.js with /*/*/
    ✓ should match !a.js with /*/*/ and {dot: true}
    ✓ should match !a.js with /*/*/ and {nonegate: true}
    ✓ should match !a/b with /*/*/
    ✓ should match !a/b with /*/*/ and {dot: true}
    ✓ should match !a/b with /*/*/ and {nonegate: true}
    ✓ should match !a/b/ with /*/*/
    ✓ should match !a/b/ with /*/*/ and {dot: true}
    ✓ should match !a/b/ with /*/*/ and {nonegate: true}
    ✓ should match !a/b/c with /*/*/
    ✓ should match !a/b/c with /*/*/ and {dot: true}
    ✓ should match !a/b/c with /*/*/ and {nonegate: true}
    ✓ should match !a/b/c/ with /*/*/
    ✓ should match !a/b/c/ with /*/*/ and {dot: true}
    ✓ should match !a/b/c/ with /*/*/ and {nonegate: true}
    ✓ should match !a/!b with /*/*/
    ✓ should match !a/!b with /*/*/ and {dot: true}
    ✓ should match !a/!b with /*/*/ and {nonegate: true}
    ✓ should match !a/!b/c with /*/*/
    ✓ should match !a/!b/c with /*/*/ and {dot: true}
    ✓ should match !a/!b/c with /*/*/ and {nonegate: true}
    ✓ should match !a/!b/c/d with /*/*/
    ✓ should match !a/!b/c/d with /*/*/ and {dot: true}
    ✓ should match !a/!b/c/d with /*/*/ and {nonegate: true}
    ✓ should match !a/b/.c.md with /*/*/
    ✓ should match !a/b/.c.md with /*/*/ and {dot: true}
    ✓ should match !a/b/.c.md with /*/*/ and {nonegate: true}
    ✓ should match /a/ with /*/*/
    ✓ should match /a/ with /*/*/ and {dot: true}
    ✓ should match /a/ with /*/*/ and {nonegate: true}
    ✓ should match /a/b with /*/*/
    ✓ should match /a/b with /*/*/ and {dot: true}
    ✓ should match /a/b with /*/*/ and {nonegate: true}
    ✓ should match /a/cb with /*/*/
    ✓ should match /a/cb with /*/*/ and {dot: true}
    ✓ should match /a/cb with /*/*/ and {nonegate: true}
    ✓ should match /a/bb with /*/*/
    ✓ should match /a/bb with /*/*/ and {dot: true}
    ✓ should match /a/bb with /*/*/ and {nonegate: true}
    ✓ should match /a/b/c with /*/*/
    ✓ should match /a/b/c with /*/*/ and {dot: true}
    ✓ should match /a/b/c with /*/*/ and {nonegate: true}
    ✓ should match /a/b/c/ with /*/*/
    ✓ should match /a/b/c/ with /*/*/ and {dot: true}
    ✓ should match /a/b/c/ with /*/*/ and {nonegate: true}
    ✓ should match /a/b/c/d with /*/*/
    ✓ should match /a/b/c/d with /*/*/ and {dot: true}
    ✓ should match /a/b/c/d with /*/*/ and {nonegate: true}
    ✓ should match /a/b/c/d/ with /*/*/
    ✓ should match /a/b/c/d/ with /*/*/ and {dot: true}
    ✓ should match /a/b/c/d/ with /*/*/ and {nonegate: true}
    ✓ should match . with /*/*/
    ✓ should match . with /*/*/ and {dot: true}
    ✓ should match . with /*/*/ and {nonegate: true}
    ✓ should match ./ with /*/*/
    ✓ should match ./ with /*/*/ and {dot: true}
    ✓ should match ./ with /*/*/ and {nonegate: true}
    ✓ should match .. with /*/*/
    ✓ should match .. with /*/*/ and {dot: true}
    ✓ should match .. with /*/*/ and {nonegate: true}
    ✓ should match ../c with /*/*/
    ✓ should match ../c with /*/*/ and {dot: true}
    ✓ should match ../c with /*/*/ and {nonegate: true}
    ✓ should match ../c with /*/*/
    ✓ should match ../c with /*/*/ and {dot: true}
    ✓ should match ../c with /*/*/ and {nonegate: true}
    ✓ should match ./../c with /*/*/
    ✓ should match ./../c with /*/*/ and {dot: true}
    ✓ should match ./../c with /*/*/ and {nonegate: true}
    ✓ should match ./a/../c with /*/*/
    ✓ should match ./a/../c with /*/*/ and {dot: true}
    ✓ should match ./a/../c with /*/*/ and {nonegate: true}
    ✓ should match /.. with /*/*/
    ✓ should match /.. with /*/*/ and {dot: true}
    ✓ should match /.. with /*/*/ and {nonegate: true}
    ✓ should match /../c with /*/*/
    ✓ should match /../c with /*/*/ and {dot: true}
    ✓ should match /../c with /*/*/ and {nonegate: true}
    ✓ should match /../.c with /*/*/
    ✓ should match /../.c with /*/*/ and {dot: true}
    ✓ should match /../.c with /*/*/ and {nonegate: true}
    ✓ should match /../.c/ with /*/*/
    ✓ should match /../.c/ with /*/*/ and {dot: true}
    ✓ should match /../.c/ with /*/*/ and {nonegate: true}
    ✓ should match /a/../c with /*/*/
    ✓ should match /a/../c with /*/*/ and {dot: true}
    ✓ should match /a/../c with /*/*/ and {nonegate: true}
    ✓ should match a/../c with /*/*/
    ✓ should match a/../c with /*/*/ and {dot: true}
    ✓ should match a/../c with /*/*/ and {nonegate: true}
    ✓ should match ../.b/.c with /*/*/
    ✓ should match ../.b/.c with /*/*/ and {dot: true}
    ✓ should match ../.b/.c with /*/*/ and {nonegate: true}
    ✓ should match ../b/.c with /*/*/
    ✓ should match ../b/.c with /*/*/ and {dot: true}
    ✓ should match ../b/.c with /*/*/ and {nonegate: true}
    ✓ should match ./.b/.c with /*/*/
    ✓ should match ./.b/.c with /*/*/ and {dot: true}
    ✓ should match ./.b/.c with /*/*/ and {nonegate: true}
    ✓ should match ./b/.c with /*/*/
    ✓ should match ./b/.c with /*/*/ and {dot: true}
    ✓ should match ./b/.c with /*/*/ and {nonegate: true}
    ✓ should match .b with /*/*/
    ✓ should match .b with /*/*/ and {dot: true}
    ✓ should match .b with /*/*/ and {nonegate: true}
    ✓ should match .b.c with /*/*/
    ✓ should match .b.c with /*/*/ and {dot: true}
    ✓ should match .b.c with /*/*/ and {nonegate: true}
    ✓ should match .b.c/ with /*/*/
    ✓ should match .b.c/ with /*/*/ and {dot: true}
    ✓ should match .b.c/ with /*/*/ and {nonegate: true}
    ✓ should match .b/ with /*/*/
    ✓ should match .b/ with /*/*/ and {dot: true}
    ✓ should match .b/ with /*/*/ and {nonegate: true}
    ✓ should match .b/.c with /*/*/
    ✓ should match .b/.c with /*/*/ and {dot: true}
    ✓ should match .b/.c with /*/*/ and {nonegate: true}
    ✓ should match .b/c with /*/*/
    ✓ should match .b/c with /*/*/ and {dot: true}
    ✓ should match .b/c with /*/*/ and {nonegate: true}
    ✓ should match b/.c with /*/*/
    ✓ should match b/.c with /*/*/ and {dot: true}
    ✓ should match b/.c with /*/*/ and {nonegate: true}
    ✓ should match b/.c/ with /*/*/
    ✓ should match b/.c/ with /*/*/ and {dot: true}
    ✓ should match b/.c/ with /*/*/ and {nonegate: true}
    ✓ should match a/+b/c with /*/*/
    ✓ should match a/+b/c with /*/*/ and {dot: true}
    ✓ should match a/+b/c with /*/*/ and {nonegate: true}
    ✓ should match +a/+b/c with /*/*/
    ✓ should match +a/+b/c with /*/*/ and {dot: true}
    ✓ should match +a/+b/c with /*/*/ and {nonegate: true}
    ✓ should match a (foo) with /*/*/
    ✓ should match a (foo) with /*/*/ and {dot: true}
    ✓ should match a (foo) with /*/*/ and {nonegate: true}
    ✓ should match a (foo)/(bar) with /*/*/
    ✓ should match a (foo)/(bar) with /*/*/ and {dot: true}
    ✓ should match a (foo)/(bar) with /*/*/ and {nonegate: true}
    ✓ should match a/b/c (1) with /*/*/
    ✓ should match a/b/c (1) with /*/*/ and {dot: true}
    ✓ should match a/b/c (1) with /*/*/ and {nonegate: true}
    ✓ should match a/b (2)/c (1) with /*/*/
    ✓ should match a/b (2)/c (1) with /*/*/ and {dot: true}
    ✓ should match a/b (2)/c (1) with /*/*/ and {nonegate: true}
    ✓ should match a/b/c [def] with /*/*/
    ✓ should match a/b/c [def] with /*/*/ and {dot: true}
    ✓ should match a/b/c [def] with /*/*/ and {nonegate: true}
    ✓ should match a with /*/*/*
    ✓ should match a with /*/*/* and {dot: true}
    ✓ should match a with /*/*/* and {nonegate: true}
    ✓ should match a.md with /*/*/*
    ✓ should match a.md with /*/*/* and {dot: true}
    ✓ should match a.md with /*/*/* and {nonegate: true}
    ✓ should match a.js with /*/*/*
    ✓ should match a.js with /*/*/* and {dot: true}
    ✓ should match a.js with /*/*/* and {nonegate: true}
    ✓ should match a/ with /*/*/*
    ✓ should match a/ with /*/*/* and {dot: true}
    ✓ should match a/ with /*/*/* and {nonegate: true}
    ✓ should match a/b with /*/*/*
    ✓ should match a/b with /*/*/* and {dot: true}
    ✓ should match a/b with /*/*/* and {nonegate: true}
    ✓ should match a/b/.c.md with /*/*/*
    ✓ should match a/b/.c.md with /*/*/* and {dot: true}
    ✓ should match a/b/.c.md with /*/*/* and {nonegate: true}
    ✓ should match a/b/c with /*/*/*
    ✓ should match a/b/c with /*/*/* and {dot: true}
    ✓ should match a/b/c with /*/*/* and {nonegate: true}
    ✓ should match a/b/c.md with /*/*/*
    ✓ should match a/b/c.md with /*/*/* and {dot: true}
    ✓ should match a/b/c.md with /*/*/* and {nonegate: true}
    ✓ should match a/b/c/ with /*/*/*
    ✓ should match a/b/c/ with /*/*/* and {dot: true}
    ✓ should match a/b/c/ with /*/*/* and {nonegate: true}
    ✓ should match a/b/c/d with /*/*/*
    ✓ should match a/b/c/d with /*/*/* and {dot: true}
    ✓ should match a/b/c/d with /*/*/* and {nonegate: true}
    ✓ should match a/b/c/d/ with /*/*/*
    ✓ should match a/b/c/d/ with /*/*/* and {dot: true}
    ✓ should match a/b/c/d/ with /*/*/* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with /*/*/*
    ✓ should match a/b/c/d/e/f/z.js with /*/*/* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with /*/*/* and {nonegate: true}
    ✓ should match a/b/c/z.js with /*/*/*
    ✓ should match a/b/c/z.js with /*/*/* and {dot: true}
    ✓ should match a/b/c/z.js with /*/*/* and {nonegate: true}
    ✓ should match a/bb with /*/*/*
    ✓ should match a/bb with /*/*/* and {dot: true}
    ✓ should match a/bb with /*/*/* and {nonegate: true}
    ✓ should match a/cb with /*/*/*
    ✓ should match a/cb with /*/*/* and {dot: true}
    ✓ should match a/cb with /*/*/* and {nonegate: true}
    ✓ should match abbbz with /*/*/*
    ✓ should match abbbz with /*/*/* and {dot: true}
    ✓ should match abbbz with /*/*/* and {nonegate: true}
    ✓ should match abc with /*/*/*
    ✓ should match abc with /*/*/* and {dot: true}
    ✓ should match abc with /*/*/* and {nonegate: true}
    ✓ should match abd with /*/*/*
    ✓ should match abd with /*/*/* and {dot: true}
    ✓ should match abd with /*/*/* and {nonegate: true}
    ✓ should match z.js with /*/*/*
    ✓ should match z.js with /*/*/* and {dot: true}
    ✓ should match z.js with /*/*/* and {nonegate: true}
    ✓ should match za.js with /*/*/*
    ✓ should match za.js with /*/*/* and {dot: true}
    ✓ should match za.js with /*/*/* and {nonegate: true}
    ✓ should match !a.js with /*/*/*
    ✓ should match !a.js with /*/*/* and {dot: true}
    ✓ should match !a.js with /*/*/* and {nonegate: true}
    ✓ should match !a/b with /*/*/*
    ✓ should match !a/b with /*/*/* and {dot: true}
    ✓ should match !a/b with /*/*/* and {nonegate: true}
    ✓ should match !a/b/ with /*/*/*
    ✓ should match !a/b/ with /*/*/* and {dot: true}
    ✓ should match !a/b/ with /*/*/* and {nonegate: true}
    ✓ should match !a/b/c with /*/*/*
    ✓ should match !a/b/c with /*/*/* and {dot: true}
    ✓ should match !a/b/c with /*/*/* and {nonegate: true}
    ✓ should match !a/b/c/ with /*/*/*
    ✓ should match !a/b/c/ with /*/*/* and {dot: true}
    ✓ should match !a/b/c/ with /*/*/* and {nonegate: true}
    ✓ should match !a/!b with /*/*/*
    ✓ should match !a/!b with /*/*/* and {dot: true}
    ✓ should match !a/!b with /*/*/* and {nonegate: true}
    ✓ should match !a/!b/c with /*/*/*
    ✓ should match !a/!b/c with /*/*/* and {dot: true}
    ✓ should match !a/!b/c with /*/*/* and {nonegate: true}
    ✓ should match !a/!b/c/d with /*/*/*
    ✓ should match !a/!b/c/d with /*/*/* and {dot: true}
    ✓ should match !a/!b/c/d with /*/*/* and {nonegate: true}
    ✓ should match !a/b/.c.md with /*/*/*
    ✓ should match !a/b/.c.md with /*/*/* and {dot: true}
    ✓ should match !a/b/.c.md with /*/*/* and {nonegate: true}
    ✓ should match /a/ with /*/*/*
    ✓ should match /a/ with /*/*/* and {dot: true}
    ✓ should match /a/ with /*/*/* and {nonegate: true}
    ✓ should match /a/b with /*/*/*
    ✓ should match /a/b with /*/*/* and {dot: true}
    ✓ should match /a/b with /*/*/* and {nonegate: true}
    ✓ should match /a/cb with /*/*/*
    ✓ should match /a/cb with /*/*/* and {dot: true}
    ✓ should match /a/cb with /*/*/* and {nonegate: true}
    ✓ should match /a/bb with /*/*/*
    ✓ should match /a/bb with /*/*/* and {dot: true}
    ✓ should match /a/bb with /*/*/* and {nonegate: true}
    ✓ should match /a/b/c with /*/*/*
    ✓ should match /a/b/c with /*/*/* and {dot: true}
    ✓ should match /a/b/c with /*/*/* and {nonegate: true}
    ✓ should match /a/b/c/ with /*/*/*
    ✓ should match /a/b/c/ with /*/*/* and {dot: true}
    ✓ should match /a/b/c/ with /*/*/* and {nonegate: true}
    ✓ should match /a/b/c/d with /*/*/*
    ✓ should match /a/b/c/d with /*/*/* and {dot: true}
    ✓ should match /a/b/c/d with /*/*/* and {nonegate: true}
    ✓ should match /a/b/c/d/ with /*/*/*
    ✓ should match /a/b/c/d/ with /*/*/* and {dot: true}
    ✓ should match /a/b/c/d/ with /*/*/* and {nonegate: true}
    ✓ should match . with /*/*/*
    ✓ should match . with /*/*/* and {dot: true}
    ✓ should match . with /*/*/* and {nonegate: true}
    ✓ should match ./ with /*/*/*
    ✓ should match ./ with /*/*/* and {dot: true}
    ✓ should match ./ with /*/*/* and {nonegate: true}
    ✓ should match .. with /*/*/*
    ✓ should match .. with /*/*/* and {dot: true}
    ✓ should match .. with /*/*/* and {nonegate: true}
    ✓ should match ../c with /*/*/*
    ✓ should match ../c with /*/*/* and {dot: true}
    ✓ should match ../c with /*/*/* and {nonegate: true}
    ✓ should match ../c with /*/*/*
    ✓ should match ../c with /*/*/* and {dot: true}
    ✓ should match ../c with /*/*/* and {nonegate: true}
    ✓ should match ./../c with /*/*/*
    ✓ should match ./../c with /*/*/* and {dot: true}
    ✓ should match ./../c with /*/*/* and {nonegate: true}
    ✓ should match ./a/../c with /*/*/*
    ✓ should match ./a/../c with /*/*/* and {dot: true}
    ✓ should match ./a/../c with /*/*/* and {nonegate: true}
    ✓ should match /.. with /*/*/*
    ✓ should match /.. with /*/*/* and {dot: true}
    ✓ should match /.. with /*/*/* and {nonegate: true}
    ✓ should match /../c with /*/*/*
    ✓ should match /../c with /*/*/* and {dot: true}
    ✓ should match /../c with /*/*/* and {nonegate: true}
    ✓ should match /../.c with /*/*/*
    ✓ should match /../.c with /*/*/* and {dot: true}
    ✓ should match /../.c with /*/*/* and {nonegate: true}
    ✓ should match /../.c/ with /*/*/*
    ✓ should match /../.c/ with /*/*/* and {dot: true}
    ✓ should match /../.c/ with /*/*/* and {nonegate: true}
    ✓ should match /a/../c with /*/*/*
    ✓ should match /a/../c with /*/*/* and {dot: true}
    ✓ should match /a/../c with /*/*/* and {nonegate: true}
    ✓ should match a/../c with /*/*/*
    ✓ should match a/../c with /*/*/* and {dot: true}
    ✓ should match a/../c with /*/*/* and {nonegate: true}
    ✓ should match ../.b/.c with /*/*/*
    ✓ should match ../.b/.c with /*/*/* and {dot: true}
    ✓ should match ../.b/.c with /*/*/* and {nonegate: true}
    ✓ should match ../b/.c with /*/*/*
    ✓ should match ../b/.c with /*/*/* and {dot: true}
    ✓ should match ../b/.c with /*/*/* and {nonegate: true}
    ✓ should match ./.b/.c with /*/*/*
    ✓ should match ./.b/.c with /*/*/* and {dot: true}
    ✓ should match ./.b/.c with /*/*/* and {nonegate: true}
    ✓ should match ./b/.c with /*/*/*
    ✓ should match ./b/.c with /*/*/* and {dot: true}
    ✓ should match ./b/.c with /*/*/* and {nonegate: true}
    ✓ should match .b with /*/*/*
    ✓ should match .b with /*/*/* and {dot: true}
    ✓ should match .b with /*/*/* and {nonegate: true}
    ✓ should match .b.c with /*/*/*
    ✓ should match .b.c with /*/*/* and {dot: true}
    ✓ should match .b.c with /*/*/* and {nonegate: true}
    ✓ should match .b.c/ with /*/*/*
    ✓ should match .b.c/ with /*/*/* and {dot: true}
    ✓ should match .b.c/ with /*/*/* and {nonegate: true}
    ✓ should match .b/ with /*/*/*
    ✓ should match .b/ with /*/*/* and {dot: true}
    ✓ should match .b/ with /*/*/* and {nonegate: true}
    ✓ should match .b/.c with /*/*/*
    ✓ should match .b/.c with /*/*/* and {dot: true}
    ✓ should match .b/.c with /*/*/* and {nonegate: true}
    ✓ should match .b/c with /*/*/*
    ✓ should match .b/c with /*/*/* and {dot: true}
    ✓ should match .b/c with /*/*/* and {nonegate: true}
    ✓ should match b/.c with /*/*/*
    ✓ should match b/.c with /*/*/* and {dot: true}
    ✓ should match b/.c with /*/*/* and {nonegate: true}
    ✓ should match b/.c/ with /*/*/*
    ✓ should match b/.c/ with /*/*/* and {dot: true}
    ✓ should match b/.c/ with /*/*/* and {nonegate: true}
    ✓ should match a/+b/c with /*/*/*
    ✓ should match a/+b/c with /*/*/* and {dot: true}
    ✓ should match a/+b/c with /*/*/* and {nonegate: true}
    ✓ should match +a/+b/c with /*/*/*
    ✓ should match +a/+b/c with /*/*/* and {dot: true}
    ✓ should match +a/+b/c with /*/*/* and {nonegate: true}
    ✓ should match a (foo) with /*/*/*
    ✓ should match a (foo) with /*/*/* and {dot: true}
    ✓ should match a (foo) with /*/*/* and {nonegate: true}
    ✓ should match a (foo)/(bar) with /*/*/*
    ✓ should match a (foo)/(bar) with /*/*/* and {dot: true}
    ✓ should match a (foo)/(bar) with /*/*/* and {nonegate: true}
    ✓ should match a/b/c (1) with /*/*/*
    ✓ should match a/b/c (1) with /*/*/* and {dot: true}
    ✓ should match a/b/c (1) with /*/*/* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with /*/*/*
    ✓ should match a/b (2)/c (1) with /*/*/* and {dot: true}
    ✓ should match a/b (2)/c (1) with /*/*/* and {nonegate: true}
    ✓ should match a/b/c [def] with /*/*/*
    ✓ should match a/b/c [def] with /*/*/* and {dot: true}
    ✓ should match a/b/c [def] with /*/*/* and {nonegate: true}
    ✓ should match a with /*/*/*/*
    ✓ should match a with /*/*/*/* and {dot: true}
    ✓ should match a with /*/*/*/* and {nonegate: true}
    ✓ should match a.md with /*/*/*/*
    ✓ should match a.md with /*/*/*/* and {dot: true}
    ✓ should match a.md with /*/*/*/* and {nonegate: true}
    ✓ should match a.js with /*/*/*/*
    ✓ should match a.js with /*/*/*/* and {dot: true}
    ✓ should match a.js with /*/*/*/* and {nonegate: true}
    ✓ should match a/ with /*/*/*/*
    ✓ should match a/ with /*/*/*/* and {dot: true}
    ✓ should match a/ with /*/*/*/* and {nonegate: true}
    ✓ should match a/b with /*/*/*/*
    ✓ should match a/b with /*/*/*/* and {dot: true}
    ✓ should match a/b with /*/*/*/* and {nonegate: true}
    ✓ should match a/b/.c.md with /*/*/*/*
    ✓ should match a/b/.c.md with /*/*/*/* and {dot: true}
    ✓ should match a/b/.c.md with /*/*/*/* and {nonegate: true}
    ✓ should match a/b/c with /*/*/*/*
    ✓ should match a/b/c with /*/*/*/* and {dot: true}
    ✓ should match a/b/c with /*/*/*/* and {nonegate: true}
    ✓ should match a/b/c.md with /*/*/*/*
    ✓ should match a/b/c.md with /*/*/*/* and {dot: true}
    ✓ should match a/b/c.md with /*/*/*/* and {nonegate: true}
    ✓ should match a/b/c/ with /*/*/*/*
    ✓ should match a/b/c/ with /*/*/*/* and {dot: true}
    ✓ should match a/b/c/ with /*/*/*/* and {nonegate: true}
    ✓ should match a/b/c/d with /*/*/*/*
    ✓ should match a/b/c/d with /*/*/*/* and {dot: true}
    ✓ should match a/b/c/d with /*/*/*/* and {nonegate: true}
    ✓ should match a/b/c/d/ with /*/*/*/*
    ✓ should match a/b/c/d/ with /*/*/*/* and {dot: true}
    ✓ should match a/b/c/d/ with /*/*/*/* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with /*/*/*/*
    ✓ should match a/b/c/d/e/f/z.js with /*/*/*/* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with /*/*/*/* and {nonegate: true}
    ✓ should match a/b/c/z.js with /*/*/*/*
    ✓ should match a/b/c/z.js with /*/*/*/* and {dot: true}
    ✓ should match a/b/c/z.js with /*/*/*/* and {nonegate: true}
    ✓ should match a/bb with /*/*/*/*
    ✓ should match a/bb with /*/*/*/* and {dot: true}
    ✓ should match a/bb with /*/*/*/* and {nonegate: true}
    ✓ should match a/cb with /*/*/*/*
    ✓ should match a/cb with /*/*/*/* and {dot: true}
    ✓ should match a/cb with /*/*/*/* and {nonegate: true}
    ✓ should match abbbz with /*/*/*/*
    ✓ should match abbbz with /*/*/*/* and {dot: true}
    ✓ should match abbbz with /*/*/*/* and {nonegate: true}
    ✓ should match abc with /*/*/*/*
    ✓ should match abc with /*/*/*/* and {dot: true}
    ✓ should match abc with /*/*/*/* and {nonegate: true}
    ✓ should match abd with /*/*/*/*
    ✓ should match abd with /*/*/*/* and {dot: true}
    ✓ should match abd with /*/*/*/* and {nonegate: true}
    ✓ should match z.js with /*/*/*/*
    ✓ should match z.js with /*/*/*/* and {dot: true}
    ✓ should match z.js with /*/*/*/* and {nonegate: true}
    ✓ should match za.js with /*/*/*/*
    ✓ should match za.js with /*/*/*/* and {dot: true}
    ✓ should match za.js with /*/*/*/* and {nonegate: true}
    ✓ should match !a.js with /*/*/*/*
    ✓ should match !a.js with /*/*/*/* and {dot: true}
    ✓ should match !a.js with /*/*/*/* and {nonegate: true}
    ✓ should match !a/b with /*/*/*/*
    ✓ should match !a/b with /*/*/*/* and {dot: true}
    ✓ should match !a/b with /*/*/*/* and {nonegate: true}
    ✓ should match !a/b/ with /*/*/*/*
    ✓ should match !a/b/ with /*/*/*/* and {dot: true}
    ✓ should match !a/b/ with /*/*/*/* and {nonegate: true}
    ✓ should match !a/b/c with /*/*/*/*
    ✓ should match !a/b/c with /*/*/*/* and {dot: true}
    ✓ should match !a/b/c with /*/*/*/* and {nonegate: true}
    ✓ should match !a/b/c/ with /*/*/*/*
    ✓ should match !a/b/c/ with /*/*/*/* and {dot: true}
    ✓ should match !a/b/c/ with /*/*/*/* and {nonegate: true}
    ✓ should match !a/!b with /*/*/*/*
    ✓ should match !a/!b with /*/*/*/* and {dot: true}
    ✓ should match !a/!b with /*/*/*/* and {nonegate: true}
    ✓ should match !a/!b/c with /*/*/*/*
    ✓ should match !a/!b/c with /*/*/*/* and {dot: true}
    ✓ should match !a/!b/c with /*/*/*/* and {nonegate: true}
    ✓ should match !a/!b/c/d with /*/*/*/*
    ✓ should match !a/!b/c/d with /*/*/*/* and {dot: true}
    ✓ should match !a/!b/c/d with /*/*/*/* and {nonegate: true}
    ✓ should match !a/b/.c.md with /*/*/*/*
    ✓ should match !a/b/.c.md with /*/*/*/* and {dot: true}
    ✓ should match !a/b/.c.md with /*/*/*/* and {nonegate: true}
    ✓ should match /a/ with /*/*/*/*
    ✓ should match /a/ with /*/*/*/* and {dot: true}
    ✓ should match /a/ with /*/*/*/* and {nonegate: true}
    ✓ should match /a/b with /*/*/*/*
    ✓ should match /a/b with /*/*/*/* and {dot: true}
    ✓ should match /a/b with /*/*/*/* and {nonegate: true}
    ✓ should match /a/cb with /*/*/*/*
    ✓ should match /a/cb with /*/*/*/* and {dot: true}
    ✓ should match /a/cb with /*/*/*/* and {nonegate: true}
    ✓ should match /a/bb with /*/*/*/*
    ✓ should match /a/bb with /*/*/*/* and {dot: true}
    ✓ should match /a/bb with /*/*/*/* and {nonegate: true}
    ✓ should match /a/b/c with /*/*/*/*
    ✓ should match /a/b/c with /*/*/*/* and {dot: true}
    ✓ should match /a/b/c with /*/*/*/* and {nonegate: true}
    ✓ should match /a/b/c/ with /*/*/*/*
    ✓ should match /a/b/c/ with /*/*/*/* and {dot: true}
    ✓ should match /a/b/c/ with /*/*/*/* and {nonegate: true}
    ✓ should match /a/b/c/d with /*/*/*/*
    ✓ should match /a/b/c/d with /*/*/*/* and {dot: true}
    ✓ should match /a/b/c/d with /*/*/*/* and {nonegate: true}
    ✓ should match /a/b/c/d/ with /*/*/*/*
    ✓ should match /a/b/c/d/ with /*/*/*/* and {dot: true}
    ✓ should match /a/b/c/d/ with /*/*/*/* and {nonegate: true}
    ✓ should match . with /*/*/*/*
    ✓ should match . with /*/*/*/* and {dot: true}
    ✓ should match . with /*/*/*/* and {nonegate: true}
    ✓ should match ./ with /*/*/*/*
    ✓ should match ./ with /*/*/*/* and {dot: true}
    ✓ should match ./ with /*/*/*/* and {nonegate: true}
    ✓ should match .. with /*/*/*/*
    ✓ should match .. with /*/*/*/* and {dot: true}
    ✓ should match .. with /*/*/*/* and {nonegate: true}
    ✓ should match ../c with /*/*/*/*
    ✓ should match ../c with /*/*/*/* and {dot: true}
    ✓ should match ../c with /*/*/*/* and {nonegate: true}
    ✓ should match ../c with /*/*/*/*
    ✓ should match ../c with /*/*/*/* and {dot: true}
    ✓ should match ../c with /*/*/*/* and {nonegate: true}
    ✓ should match ./../c with /*/*/*/*
    ✓ should match ./../c with /*/*/*/* and {dot: true}
    ✓ should match ./../c with /*/*/*/* and {nonegate: true}
    ✓ should match ./a/../c with /*/*/*/*
    ✓ should match ./a/../c with /*/*/*/* and {dot: true}
    ✓ should match ./a/../c with /*/*/*/* and {nonegate: true}
    ✓ should match /.. with /*/*/*/*
    ✓ should match /.. with /*/*/*/* and {dot: true}
    ✓ should match /.. with /*/*/*/* and {nonegate: true}
    ✓ should match /../c with /*/*/*/*
    ✓ should match /../c with /*/*/*/* and {dot: true}
    ✓ should match /../c with /*/*/*/* and {nonegate: true}
    ✓ should match /../.c with /*/*/*/*
    ✓ should match /../.c with /*/*/*/* and {dot: true}
    ✓ should match /../.c with /*/*/*/* and {nonegate: true}
    ✓ should match /../.c/ with /*/*/*/*
    ✓ should match /../.c/ with /*/*/*/* and {dot: true}
    ✓ should match /../.c/ with /*/*/*/* and {nonegate: true}
    ✓ should match /a/../c with /*/*/*/*
    ✓ should match /a/../c with /*/*/*/* and {dot: true}
    ✓ should match /a/../c with /*/*/*/* and {nonegate: true}
    ✓ should match a/../c with /*/*/*/*
    ✓ should match a/../c with /*/*/*/* and {dot: true}
    ✓ should match a/../c with /*/*/*/* and {nonegate: true}
    ✓ should match ../.b/.c with /*/*/*/*
    ✓ should match ../.b/.c with /*/*/*/* and {dot: true}
    ✓ should match ../.b/.c with /*/*/*/* and {nonegate: true}
    ✓ should match ../b/.c with /*/*/*/*
    ✓ should match ../b/.c with /*/*/*/* and {dot: true}
    ✓ should match ../b/.c with /*/*/*/* and {nonegate: true}
    ✓ should match ./.b/.c with /*/*/*/*
    ✓ should match ./.b/.c with /*/*/*/* and {dot: true}
    ✓ should match ./.b/.c with /*/*/*/* and {nonegate: true}
    ✓ should match ./b/.c with /*/*/*/*
    ✓ should match ./b/.c with /*/*/*/* and {dot: true}
    ✓ should match ./b/.c with /*/*/*/* and {nonegate: true}
    ✓ should match .b with /*/*/*/*
    ✓ should match .b with /*/*/*/* and {dot: true}
    ✓ should match .b with /*/*/*/* and {nonegate: true}
    ✓ should match .b.c with /*/*/*/*
    ✓ should match .b.c with /*/*/*/* and {dot: true}
    ✓ should match .b.c with /*/*/*/* and {nonegate: true}
    ✓ should match .b.c/ with /*/*/*/*
    ✓ should match .b.c/ with /*/*/*/* and {dot: true}
    ✓ should match .b.c/ with /*/*/*/* and {nonegate: true}
    ✓ should match .b/ with /*/*/*/*
    ✓ should match .b/ with /*/*/*/* and {dot: true}
    ✓ should match .b/ with /*/*/*/* and {nonegate: true}
    ✓ should match .b/.c with /*/*/*/*
    ✓ should match .b/.c with /*/*/*/* and {dot: true}
    ✓ should match .b/.c with /*/*/*/* and {nonegate: true}
    ✓ should match .b/c with /*/*/*/*
    ✓ should match .b/c with /*/*/*/* and {dot: true}
    ✓ should match .b/c with /*/*/*/* and {nonegate: true}
    ✓ should match b/.c with /*/*/*/*
    ✓ should match b/.c with /*/*/*/* and {dot: true}
    ✓ should match b/.c with /*/*/*/* and {nonegate: true}
    ✓ should match b/.c/ with /*/*/*/*
    ✓ should match b/.c/ with /*/*/*/* and {dot: true}
    ✓ should match b/.c/ with /*/*/*/* and {nonegate: true}
    ✓ should match a/+b/c with /*/*/*/*
    ✓ should match a/+b/c with /*/*/*/* and {dot: true}
    ✓ should match a/+b/c with /*/*/*/* and {nonegate: true}
    ✓ should match +a/+b/c with /*/*/*/*
    ✓ should match +a/+b/c with /*/*/*/* and {dot: true}
    ✓ should match +a/+b/c with /*/*/*/* and {nonegate: true}
    ✓ should match a (foo) with /*/*/*/*
    ✓ should match a (foo) with /*/*/*/* and {dot: true}
    ✓ should match a (foo) with /*/*/*/* and {nonegate: true}
    ✓ should match a (foo)/(bar) with /*/*/*/*
    ✓ should match a (foo)/(bar) with /*/*/*/* and {dot: true}
    ✓ should match a (foo)/(bar) with /*/*/*/* and {nonegate: true}
    ✓ should match a/b/c (1) with /*/*/*/*
    ✓ should match a/b/c (1) with /*/*/*/* and {dot: true}
    ✓ should match a/b/c (1) with /*/*/*/* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with /*/*/*/*
    ✓ should match a/b (2)/c (1) with /*/*/*/* and {dot: true}
    ✓ should match a/b (2)/c (1) with /*/*/*/* and {nonegate: true}
    ✓ should match a/b/c [def] with /*/*/*/*
    ✓ should match a/b/c [def] with /*/*/*/* and {dot: true}
    ✓ should match a/b/c [def] with /*/*/*/* and {nonegate: true}
    ✓ should match a with /*/*/*/*/
    ✓ should match a with /*/*/*/*/ and {dot: true}
    ✓ should match a with /*/*/*/*/ and {nonegate: true}
    ✓ should match a.md with /*/*/*/*/
    ✓ should match a.md with /*/*/*/*/ and {dot: true}
    ✓ should match a.md with /*/*/*/*/ and {nonegate: true}
    ✓ should match a.js with /*/*/*/*/
    ✓ should match a.js with /*/*/*/*/ and {dot: true}
    ✓ should match a.js with /*/*/*/*/ and {nonegate: true}
    ✓ should match a/ with /*/*/*/*/
    ✓ should match a/ with /*/*/*/*/ and {dot: true}
    ✓ should match a/ with /*/*/*/*/ and {nonegate: true}
    ✓ should match a/b with /*/*/*/*/
    ✓ should match a/b with /*/*/*/*/ and {dot: true}
    ✓ should match a/b with /*/*/*/*/ and {nonegate: true}
    ✓ should match a/b/.c.md with /*/*/*/*/
    ✓ should match a/b/.c.md with /*/*/*/*/ and {dot: true}
    ✓ should match a/b/.c.md with /*/*/*/*/ and {nonegate: true}
    ✓ should match a/b/c with /*/*/*/*/
    ✓ should match a/b/c with /*/*/*/*/ and {dot: true}
    ✓ should match a/b/c with /*/*/*/*/ and {nonegate: true}
    ✓ should match a/b/c.md with /*/*/*/*/
    ✓ should match a/b/c.md with /*/*/*/*/ and {dot: true}
    ✓ should match a/b/c.md with /*/*/*/*/ and {nonegate: true}
    ✓ should match a/b/c/ with /*/*/*/*/
    ✓ should match a/b/c/ with /*/*/*/*/ and {dot: true}
    ✓ should match a/b/c/ with /*/*/*/*/ and {nonegate: true}
    ✓ should match a/b/c/d with /*/*/*/*/
    ✓ should match a/b/c/d with /*/*/*/*/ and {dot: true}
    ✓ should match a/b/c/d with /*/*/*/*/ and {nonegate: true}
    ✓ should match a/b/c/d/ with /*/*/*/*/
    ✓ should match a/b/c/d/ with /*/*/*/*/ and {dot: true}
    ✓ should match a/b/c/d/ with /*/*/*/*/ and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with /*/*/*/*/
    ✓ should match a/b/c/d/e/f/z.js with /*/*/*/*/ and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with /*/*/*/*/ and {nonegate: true}
    ✓ should match a/b/c/z.js with /*/*/*/*/
    ✓ should match a/b/c/z.js with /*/*/*/*/ and {dot: true}
    ✓ should match a/b/c/z.js with /*/*/*/*/ and {nonegate: true}
    ✓ should match a/bb with /*/*/*/*/
    ✓ should match a/bb with /*/*/*/*/ and {dot: true}
    ✓ should match a/bb with /*/*/*/*/ and {nonegate: true}
    ✓ should match a/cb with /*/*/*/*/
    ✓ should match a/cb with /*/*/*/*/ and {dot: true}
    ✓ should match a/cb with /*/*/*/*/ and {nonegate: true}
    ✓ should match abbbz with /*/*/*/*/
    ✓ should match abbbz with /*/*/*/*/ and {dot: true}
    ✓ should match abbbz with /*/*/*/*/ and {nonegate: true}
    ✓ should match abc with /*/*/*/*/
    ✓ should match abc with /*/*/*/*/ and {dot: true}
    ✓ should match abc with /*/*/*/*/ and {nonegate: true}
    ✓ should match abd with /*/*/*/*/
    ✓ should match abd with /*/*/*/*/ and {dot: true}
    ✓ should match abd with /*/*/*/*/ and {nonegate: true}
    ✓ should match z.js with /*/*/*/*/
    ✓ should match z.js with /*/*/*/*/ and {dot: true}
    ✓ should match z.js with /*/*/*/*/ and {nonegate: true}
    ✓ should match za.js with /*/*/*/*/
    ✓ should match za.js with /*/*/*/*/ and {dot: true}
    ✓ should match za.js with /*/*/*/*/ and {nonegate: true}
    ✓ should match !a.js with /*/*/*/*/
    ✓ should match !a.js with /*/*/*/*/ and {dot: true}
    ✓ should match !a.js with /*/*/*/*/ and {nonegate: true}
    ✓ should match !a/b with /*/*/*/*/
    ✓ should match !a/b with /*/*/*/*/ and {dot: true}
    ✓ should match !a/b with /*/*/*/*/ and {nonegate: true}
    ✓ should match !a/b/ with /*/*/*/*/
    ✓ should match !a/b/ with /*/*/*/*/ and {dot: true}
    ✓ should match !a/b/ with /*/*/*/*/ and {nonegate: true}
    ✓ should match !a/b/c with /*/*/*/*/
    ✓ should match !a/b/c with /*/*/*/*/ and {dot: true}
    ✓ should match !a/b/c with /*/*/*/*/ and {nonegate: true}
    ✓ should match !a/b/c/ with /*/*/*/*/
    ✓ should match !a/b/c/ with /*/*/*/*/ and {dot: true}
    ✓ should match !a/b/c/ with /*/*/*/*/ and {nonegate: true}
    ✓ should match !a/!b with /*/*/*/*/
    ✓ should match !a/!b with /*/*/*/*/ and {dot: true}
    ✓ should match !a/!b with /*/*/*/*/ and {nonegate: true}
    ✓ should match !a/!b/c with /*/*/*/*/
    ✓ should match !a/!b/c with /*/*/*/*/ and {dot: true}
    ✓ should match !a/!b/c with /*/*/*/*/ and {nonegate: true}
    ✓ should match !a/!b/c/d with /*/*/*/*/
    ✓ should match !a/!b/c/d with /*/*/*/*/ and {dot: true}
    ✓ should match !a/!b/c/d with /*/*/*/*/ and {nonegate: true}
    ✓ should match !a/b/.c.md with /*/*/*/*/
    ✓ should match !a/b/.c.md with /*/*/*/*/ and {dot: true}
    ✓ should match !a/b/.c.md with /*/*/*/*/ and {nonegate: true}
    ✓ should match /a/ with /*/*/*/*/
    ✓ should match /a/ with /*/*/*/*/ and {dot: true}
    ✓ should match /a/ with /*/*/*/*/ and {nonegate: true}
    ✓ should match /a/b with /*/*/*/*/
    ✓ should match /a/b with /*/*/*/*/ and {dot: true}
    ✓ should match /a/b with /*/*/*/*/ and {nonegate: true}
    ✓ should match /a/cb with /*/*/*/*/
    ✓ should match /a/cb with /*/*/*/*/ and {dot: true}
    ✓ should match /a/cb with /*/*/*/*/ and {nonegate: true}
    ✓ should match /a/bb with /*/*/*/*/
    ✓ should match /a/bb with /*/*/*/*/ and {dot: true}
    ✓ should match /a/bb with /*/*/*/*/ and {nonegate: true}
    ✓ should match /a/b/c with /*/*/*/*/
    ✓ should match /a/b/c with /*/*/*/*/ and {dot: true}
    ✓ should match /a/b/c with /*/*/*/*/ and {nonegate: true}
    ✓ should match /a/b/c/ with /*/*/*/*/
    ✓ should match /a/b/c/ with /*/*/*/*/ and {dot: true}
    ✓ should match /a/b/c/ with /*/*/*/*/ and {nonegate: true}
    ✓ should match /a/b/c/d with /*/*/*/*/
    ✓ should match /a/b/c/d with /*/*/*/*/ and {dot: true}
    ✓ should match /a/b/c/d with /*/*/*/*/ and {nonegate: true}
    ✓ should match /a/b/c/d/ with /*/*/*/*/
    ✓ should match /a/b/c/d/ with /*/*/*/*/ and {dot: true}
    ✓ should match /a/b/c/d/ with /*/*/*/*/ and {nonegate: true}
    ✓ should match . with /*/*/*/*/
    ✓ should match . with /*/*/*/*/ and {dot: true}
    ✓ should match . with /*/*/*/*/ and {nonegate: true}
    ✓ should match ./ with /*/*/*/*/
    ✓ should match ./ with /*/*/*/*/ and {dot: true}
    ✓ should match ./ with /*/*/*/*/ and {nonegate: true}
    ✓ should match .. with /*/*/*/*/
    ✓ should match .. with /*/*/*/*/ and {dot: true}
    ✓ should match .. with /*/*/*/*/ and {nonegate: true}
    ✓ should match ../c with /*/*/*/*/
    ✓ should match ../c with /*/*/*/*/ and {dot: true}
    ✓ should match ../c with /*/*/*/*/ and {nonegate: true}
    ✓ should match ../c with /*/*/*/*/
    ✓ should match ../c with /*/*/*/*/ and {dot: true}
    ✓ should match ../c with /*/*/*/*/ and {nonegate: true}
    ✓ should match ./../c with /*/*/*/*/
    ✓ should match ./../c with /*/*/*/*/ and {dot: true}
    ✓ should match ./../c with /*/*/*/*/ and {nonegate: true}
    ✓ should match ./a/../c with /*/*/*/*/
    ✓ should match ./a/../c with /*/*/*/*/ and {dot: true}
    ✓ should match ./a/../c with /*/*/*/*/ and {nonegate: true}
    ✓ should match /.. with /*/*/*/*/
    ✓ should match /.. with /*/*/*/*/ and {dot: true}
    ✓ should match /.. with /*/*/*/*/ and {nonegate: true}
    ✓ should match /../c with /*/*/*/*/
    ✓ should match /../c with /*/*/*/*/ and {dot: true}
    ✓ should match /../c with /*/*/*/*/ and {nonegate: true}
    ✓ should match /../.c with /*/*/*/*/
    ✓ should match /../.c with /*/*/*/*/ and {dot: true}
    ✓ should match /../.c with /*/*/*/*/ and {nonegate: true}
    ✓ should match /../.c/ with /*/*/*/*/
    ✓ should match /../.c/ with /*/*/*/*/ and {dot: true}
    ✓ should match /../.c/ with /*/*/*/*/ and {nonegate: true}
    ✓ should match /a/../c with /*/*/*/*/
    ✓ should match /a/../c with /*/*/*/*/ and {dot: true}
    ✓ should match /a/../c with /*/*/*/*/ and {nonegate: true}
    ✓ should match a/../c with /*/*/*/*/
    ✓ should match a/../c with /*/*/*/*/ and {dot: true}
    ✓ should match a/../c with /*/*/*/*/ and {nonegate: true}
    ✓ should match ../.b/.c with /*/*/*/*/
    ✓ should match ../.b/.c with /*/*/*/*/ and {dot: true}
    ✓ should match ../.b/.c with /*/*/*/*/ and {nonegate: true}
    ✓ should match ../b/.c with /*/*/*/*/
    ✓ should match ../b/.c with /*/*/*/*/ and {dot: true}
    ✓ should match ../b/.c with /*/*/*/*/ and {nonegate: true}
    ✓ should match ./.b/.c with /*/*/*/*/
    ✓ should match ./.b/.c with /*/*/*/*/ and {dot: true}
    ✓ should match ./.b/.c with /*/*/*/*/ and {nonegate: true}
    ✓ should match ./b/.c with /*/*/*/*/
    ✓ should match ./b/.c with /*/*/*/*/ and {dot: true}
    ✓ should match ./b/.c with /*/*/*/*/ and {nonegate: true}
    ✓ should match .b with /*/*/*/*/
    ✓ should match .b with /*/*/*/*/ and {dot: true}
    ✓ should match .b with /*/*/*/*/ and {nonegate: true}
    ✓ should match .b.c with /*/*/*/*/
    ✓ should match .b.c with /*/*/*/*/ and {dot: true}
    ✓ should match .b.c with /*/*/*/*/ and {nonegate: true}
    ✓ should match .b.c/ with /*/*/*/*/
    ✓ should match .b.c/ with /*/*/*/*/ and {dot: true}
    ✓ should match .b.c/ with /*/*/*/*/ and {nonegate: true}
    ✓ should match .b/ with /*/*/*/*/
    ✓ should match .b/ with /*/*/*/*/ and {dot: true}
    ✓ should match .b/ with /*/*/*/*/ and {nonegate: true}
    ✓ should match .b/.c with /*/*/*/*/
    ✓ should match .b/.c with /*/*/*/*/ and {dot: true}
    ✓ should match .b/.c with /*/*/*/*/ and {nonegate: true}
    ✓ should match .b/c with /*/*/*/*/
    ✓ should match .b/c with /*/*/*/*/ and {dot: true}
    ✓ should match .b/c with /*/*/*/*/ and {nonegate: true}
    ✓ should match b/.c with /*/*/*/*/
    ✓ should match b/.c with /*/*/*/*/ and {dot: true}
    ✓ should match b/.c with /*/*/*/*/ and {nonegate: true}
    ✓ should match b/.c/ with /*/*/*/*/
    ✓ should match b/.c/ with /*/*/*/*/ and {dot: true}
    ✓ should match b/.c/ with /*/*/*/*/ and {nonegate: true}
    ✓ should match a/+b/c with /*/*/*/*/
    ✓ should match a/+b/c with /*/*/*/*/ and {dot: true}
    ✓ should match a/+b/c with /*/*/*/*/ and {nonegate: true}
    ✓ should match +a/+b/c with /*/*/*/*/
    ✓ should match +a/+b/c with /*/*/*/*/ and {dot: true}
    ✓ should match +a/+b/c with /*/*/*/*/ and {nonegate: true}
    ✓ should match a (foo) with /*/*/*/*/
    ✓ should match a (foo) with /*/*/*/*/ and {dot: true}
    ✓ should match a (foo) with /*/*/*/*/ and {nonegate: true}
    ✓ should match a (foo)/(bar) with /*/*/*/*/
    ✓ should match a (foo)/(bar) with /*/*/*/*/ and {dot: true}
    ✓ should match a (foo)/(bar) with /*/*/*/*/ and {nonegate: true}
    ✓ should match a/b/c (1) with /*/*/*/*/
    ✓ should match a/b/c (1) with /*/*/*/*/ and {dot: true}
    ✓ should match a/b/c (1) with /*/*/*/*/ and {nonegate: true}
    ✓ should match a/b (2)/c (1) with /*/*/*/*/
    ✓ should match a/b (2)/c (1) with /*/*/*/*/ and {dot: true}
    ✓ should match a/b (2)/c (1) with /*/*/*/*/ and {nonegate: true}
    ✓ should match a/b/c [def] with /*/*/*/*/
    ✓ should match a/b/c [def] with /*/*/*/*/ and {dot: true}
    ✓ should match a/b/c [def] with /*/*/*/*/ and {nonegate: true}
    ✓ should match a with ?
    ✓ should match a with ? and {dot: true}
    ✓ should match a with ? and {nonegate: true}
    ✓ should match a.md with ?
    ✓ should match a.md with ? and {dot: true}
    ✓ should match a.md with ? and {nonegate: true}
    ✓ should match a.js with ?
    ✓ should match a.js with ? and {dot: true}
    ✓ should match a.js with ? and {nonegate: true}
    ✓ should match a/ with ?
    ✓ should match a/ with ? and {dot: true}
    ✓ should match a/ with ? and {nonegate: true}
    ✓ should match a/b with ?
    ✓ should match a/b with ? and {dot: true}
    ✓ should match a/b with ? and {nonegate: true}
    ✓ should match a/b/.c.md with ?
    ✓ should match a/b/.c.md with ? and {dot: true}
    ✓ should match a/b/.c.md with ? and {nonegate: true}
    ✓ should match a/b/c with ?
    ✓ should match a/b/c with ? and {dot: true}
    ✓ should match a/b/c with ? and {nonegate: true}
    ✓ should match a/b/c.md with ?
    ✓ should match a/b/c.md with ? and {dot: true}
    ✓ should match a/b/c.md with ? and {nonegate: true}
    ✓ should match a/b/c/ with ?
    ✓ should match a/b/c/ with ? and {dot: true}
    ✓ should match a/b/c/ with ? and {nonegate: true}
    ✓ should match a/b/c/d with ?
    ✓ should match a/b/c/d with ? and {dot: true}
    ✓ should match a/b/c/d with ? and {nonegate: true}
    ✓ should match a/b/c/d/ with ?
    ✓ should match a/b/c/d/ with ? and {dot: true}
    ✓ should match a/b/c/d/ with ? and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with ?
    ✓ should match a/b/c/d/e/f/z.js with ? and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with ? and {nonegate: true}
    ✓ should match a/b/c/z.js with ?
    ✓ should match a/b/c/z.js with ? and {dot: true}
    ✓ should match a/b/c/z.js with ? and {nonegate: true}
    ✓ should match a/bb with ?
    ✓ should match a/bb with ? and {dot: true}
    ✓ should match a/bb with ? and {nonegate: true}
    ✓ should match a/cb with ?
    ✓ should match a/cb with ? and {dot: true}
    ✓ should match a/cb with ? and {nonegate: true}
    ✓ should match abbbz with ?
    ✓ should match abbbz with ? and {dot: true}
    ✓ should match abbbz with ? and {nonegate: true}
    ✓ should match abc with ?
    ✓ should match abc with ? and {dot: true}
    ✓ should match abc with ? and {nonegate: true}
    ✓ should match abd with ?
    ✓ should match abd with ? and {dot: true}
    ✓ should match abd with ? and {nonegate: true}
    ✓ should match z.js with ?
    ✓ should match z.js with ? and {dot: true}
    ✓ should match z.js with ? and {nonegate: true}
    ✓ should match za.js with ?
    ✓ should match za.js with ? and {dot: true}
    ✓ should match za.js with ? and {nonegate: true}
    ✓ should match !a.js with ?
    ✓ should match !a.js with ? and {dot: true}
    ✓ should match !a.js with ? and {nonegate: true}
    ✓ should match !a/b with ?
    ✓ should match !a/b with ? and {dot: true}
    ✓ should match !a/b with ? and {nonegate: true}
    ✓ should match !a/b/ with ?
    ✓ should match !a/b/ with ? and {dot: true}
    ✓ should match !a/b/ with ? and {nonegate: true}
    ✓ should match !a/b/c with ?
    ✓ should match !a/b/c with ? and {dot: true}
    ✓ should match !a/b/c with ? and {nonegate: true}
    ✓ should match !a/b/c/ with ?
    ✓ should match !a/b/c/ with ? and {dot: true}
    ✓ should match !a/b/c/ with ? and {nonegate: true}
    ✓ should match !a/!b with ?
    ✓ should match !a/!b with ? and {dot: true}
    ✓ should match !a/!b with ? and {nonegate: true}
    ✓ should match !a/!b/c with ?
    ✓ should match !a/!b/c with ? and {dot: true}
    ✓ should match !a/!b/c with ? and {nonegate: true}
    ✓ should match !a/!b/c/d with ?
    ✓ should match !a/!b/c/d with ? and {dot: true}
    ✓ should match !a/!b/c/d with ? and {nonegate: true}
    ✓ should match !a/b/.c.md with ?
    ✓ should match !a/b/.c.md with ? and {dot: true}
    ✓ should match !a/b/.c.md with ? and {nonegate: true}
    ✓ should match /a/ with ?
    ✓ should match /a/ with ? and {dot: true}
    ✓ should match /a/ with ? and {nonegate: true}
    ✓ should match /a/b with ?
    ✓ should match /a/b with ? and {dot: true}
    ✓ should match /a/b with ? and {nonegate: true}
    ✓ should match /a/cb with ?
    ✓ should match /a/cb with ? and {dot: true}
    ✓ should match /a/cb with ? and {nonegate: true}
    ✓ should match /a/bb with ?
    ✓ should match /a/bb with ? and {dot: true}
    ✓ should match /a/bb with ? and {nonegate: true}
    ✓ should match /a/b/c with ?
    ✓ should match /a/b/c with ? and {dot: true}
    ✓ should match /a/b/c with ? and {nonegate: true}
    ✓ should match /a/b/c/ with ?
    ✓ should match /a/b/c/ with ? and {dot: true}
    ✓ should match /a/b/c/ with ? and {nonegate: true}
    ✓ should match /a/b/c/d with ?
    ✓ should match /a/b/c/d with ? and {dot: true}
    ✓ should match /a/b/c/d with ? and {nonegate: true}
    ✓ should match /a/b/c/d/ with ?
    ✓ should match /a/b/c/d/ with ? and {dot: true}
    ✓ should match /a/b/c/d/ with ? and {nonegate: true}
    ✓ should match . with ?
    ✓ should match . with ? and {dot: true}
    ✓ should match . with ? and {nonegate: true}
    ✓ should match ./ with ?
    ✓ should match ./ with ? and {dot: true}
    ✓ should match ./ with ? and {nonegate: true}
    ✓ should match .. with ?
    ✓ should match .. with ? and {dot: true}
    ✓ should match .. with ? and {nonegate: true}
    ✓ should match ../c with ?
    ✓ should match ../c with ? and {dot: true}
    ✓ should match ../c with ? and {nonegate: true}
    ✓ should match ../c with ?
    ✓ should match ../c with ? and {dot: true}
    ✓ should match ../c with ? and {nonegate: true}
    ✓ should match ./../c with ?
    ✓ should match ./../c with ? and {dot: true}
    ✓ should match ./../c with ? and {nonegate: true}
    ✓ should match ./a/../c with ?
    ✓ should match ./a/../c with ? and {dot: true}
    ✓ should match ./a/../c with ? and {nonegate: true}
    ✓ should match /.. with ?
    ✓ should match /.. with ? and {dot: true}
    ✓ should match /.. with ? and {nonegate: true}
    ✓ should match /../c with ?
    ✓ should match /../c with ? and {dot: true}
    ✓ should match /../c with ? and {nonegate: true}
    ✓ should match /../.c with ?
    ✓ should match /../.c with ? and {dot: true}
    ✓ should match /../.c with ? and {nonegate: true}
    ✓ should match /../.c/ with ?
    ✓ should match /../.c/ with ? and {dot: true}
    ✓ should match /../.c/ with ? and {nonegate: true}
    ✓ should match /a/../c with ?
    ✓ should match /a/../c with ? and {dot: true}
    ✓ should match /a/../c with ? and {nonegate: true}
    ✓ should match a/../c with ?
    ✓ should match a/../c with ? and {dot: true}
    ✓ should match a/../c with ? and {nonegate: true}
    ✓ should match ../.b/.c with ?
    ✓ should match ../.b/.c with ? and {dot: true}
    ✓ should match ../.b/.c with ? and {nonegate: true}
    ✓ should match ../b/.c with ?
    ✓ should match ../b/.c with ? and {dot: true}
    ✓ should match ../b/.c with ? and {nonegate: true}
    ✓ should match ./.b/.c with ?
    ✓ should match ./.b/.c with ? and {dot: true}
    ✓ should match ./.b/.c with ? and {nonegate: true}
    ✓ should match ./b/.c with ?
    ✓ should match ./b/.c with ? and {dot: true}
    ✓ should match ./b/.c with ? and {nonegate: true}
    ✓ should match .b with ?
    ✓ should match .b with ? and {dot: true}
    ✓ should match .b with ? and {nonegate: true}
    ✓ should match .b.c with ?
    ✓ should match .b.c with ? and {dot: true}
    ✓ should match .b.c with ? and {nonegate: true}
    ✓ should match .b.c/ with ?
    ✓ should match .b.c/ with ? and {dot: true}
    ✓ should match .b.c/ with ? and {nonegate: true}
    ✓ should match .b/ with ?
    ✓ should match .b/ with ? and {dot: true}
    ✓ should match .b/ with ? and {nonegate: true}
    ✓ should match .b/.c with ?
    ✓ should match .b/.c with ? and {dot: true}
    ✓ should match .b/.c with ? and {nonegate: true}
    ✓ should match .b/c with ?
    ✓ should match .b/c with ? and {dot: true}
    ✓ should match .b/c with ? and {nonegate: true}
    ✓ should match b/.c with ?
    ✓ should match b/.c with ? and {dot: true}
    ✓ should match b/.c with ? and {nonegate: true}
    ✓ should match b/.c/ with ?
    ✓ should match b/.c/ with ? and {dot: true}
    ✓ should match b/.c/ with ? and {nonegate: true}
    ✓ should match a/+b/c with ?
    ✓ should match a/+b/c with ? and {dot: true}
    ✓ should match a/+b/c with ? and {nonegate: true}
    ✓ should match +a/+b/c with ?
    ✓ should match +a/+b/c with ? and {dot: true}
    ✓ should match +a/+b/c with ? and {nonegate: true}
    ✓ should match a (foo) with ?
    ✓ should match a (foo) with ? and {dot: true}
    ✓ should match a (foo) with ? and {nonegate: true}
    ✓ should match a (foo)/(bar) with ?
    ✓ should match a (foo)/(bar) with ? and {dot: true}
    ✓ should match a (foo)/(bar) with ? and {nonegate: true}
    ✓ should match a/b/c (1) with ?
    ✓ should match a/b/c (1) with ? and {dot: true}
    ✓ should match a/b/c (1) with ? and {nonegate: true}
    ✓ should match a/b (2)/c (1) with ?
    ✓ should match a/b (2)/c (1) with ? and {dot: true}
    ✓ should match a/b (2)/c (1) with ? and {nonegate: true}
    ✓ should match a/b/c [def] with ?
    ✓ should match a/b/c [def] with ? and {dot: true}
    ✓ should match a/b/c [def] with ? and {nonegate: true}
    ✓ should match a with ?*?******?
    ✓ should match a with ?*?******? and {dot: true}
    ✓ should match a with ?*?******? and {nonegate: true}
    ✓ should match a.md with ?*?******?
    ✓ should match a.md with ?*?******? and {dot: true}
    ✓ should match a.md with ?*?******? and {nonegate: true}
    ✓ should match a.js with ?*?******?
    ✓ should match a.js with ?*?******? and {dot: true}
    ✓ should match a.js with ?*?******? and {nonegate: true}
    ✓ should match a/ with ?*?******?
    ✓ should match a/ with ?*?******? and {dot: true}
    ✓ should match a/ with ?*?******? and {nonegate: true}
    ✓ should match a/b with ?*?******?
    ✓ should match a/b with ?*?******? and {dot: true}
    ✓ should match a/b with ?*?******? and {nonegate: true}
    ✓ should match a/b/.c.md with ?*?******?
    ✓ should match a/b/.c.md with ?*?******? and {dot: true}
    ✓ should match a/b/.c.md with ?*?******? and {nonegate: true}
    ✓ should match a/b/c with ?*?******?
    ✓ should match a/b/c with ?*?******? and {dot: true}
    ✓ should match a/b/c with ?*?******? and {nonegate: true}
    ✓ should match a/b/c.md with ?*?******?
    ✓ should match a/b/c.md with ?*?******? and {dot: true}
    ✓ should match a/b/c.md with ?*?******? and {nonegate: true}
    ✓ should match a/b/c/ with ?*?******?
    ✓ should match a/b/c/ with ?*?******? and {dot: true}
    ✓ should match a/b/c/ with ?*?******? and {nonegate: true}
    ✓ should match a/b/c/d with ?*?******?
    ✓ should match a/b/c/d with ?*?******? and {dot: true}
    ✓ should match a/b/c/d with ?*?******? and {nonegate: true}
    ✓ should match a/b/c/d/ with ?*?******?
    ✓ should match a/b/c/d/ with ?*?******? and {dot: true}
    ✓ should match a/b/c/d/ with ?*?******? and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with ?*?******?
    ✓ should match a/b/c/d/e/f/z.js with ?*?******? and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with ?*?******? and {nonegate: true}
    ✓ should match a/b/c/z.js with ?*?******?
    ✓ should match a/b/c/z.js with ?*?******? and {dot: true}
    ✓ should match a/b/c/z.js with ?*?******? and {nonegate: true}
    ✓ should match a/bb with ?*?******?
    ✓ should match a/bb with ?*?******? and {dot: true}
    ✓ should match a/bb with ?*?******? and {nonegate: true}
    ✓ should match a/cb with ?*?******?
    ✓ should match a/cb with ?*?******? and {dot: true}
    ✓ should match a/cb with ?*?******? and {nonegate: true}
    ✓ should match abbbz with ?*?******?
    ✓ should match abbbz with ?*?******? and {dot: true}
    ✓ should match abbbz with ?*?******? and {nonegate: true}
    ✓ should match abc with ?*?******?
    ✓ should match abc with ?*?******? and {dot: true}
    ✓ should match abc with ?*?******? and {nonegate: true}
    ✓ should match abd with ?*?******?
    ✓ should match abd with ?*?******? and {dot: true}
    ✓ should match abd with ?*?******? and {nonegate: true}
    ✓ should match z.js with ?*?******?
    ✓ should match z.js with ?*?******? and {dot: true}
    ✓ should match z.js with ?*?******? and {nonegate: true}
    ✓ should match za.js with ?*?******?
    ✓ should match za.js with ?*?******? and {dot: true}
    ✓ should match za.js with ?*?******? and {nonegate: true}
    ✓ should match !a.js with ?*?******?
    ✓ should match !a.js with ?*?******? and {dot: true}
    ✓ should match !a.js with ?*?******? and {nonegate: true}
    ✓ should match !a/b with ?*?******?
    ✓ should match !a/b with ?*?******? and {dot: true}
    ✓ should match !a/b with ?*?******? and {nonegate: true}
    ✓ should match !a/b/ with ?*?******?
    ✓ should match !a/b/ with ?*?******? and {dot: true}
    ✓ should match !a/b/ with ?*?******? and {nonegate: true}
    ✓ should match !a/b/c with ?*?******?
    ✓ should match !a/b/c with ?*?******? and {dot: true}
    ✓ should match !a/b/c with ?*?******? and {nonegate: true}
    ✓ should match !a/b/c/ with ?*?******?
    ✓ should match !a/b/c/ with ?*?******? and {dot: true}
    ✓ should match !a/b/c/ with ?*?******? and {nonegate: true}
    ✓ should match !a/!b with ?*?******?
    ✓ should match !a/!b with ?*?******? and {dot: true}
    ✓ should match !a/!b with ?*?******? and {nonegate: true}
    ✓ should match !a/!b/c with ?*?******?
    ✓ should match !a/!b/c with ?*?******? and {dot: true}
    ✓ should match !a/!b/c with ?*?******? and {nonegate: true}
    ✓ should match !a/!b/c/d with ?*?******?
    ✓ should match !a/!b/c/d with ?*?******? and {dot: true}
    ✓ should match !a/!b/c/d with ?*?******? and {nonegate: true}
    ✓ should match !a/b/.c.md with ?*?******?
    ✓ should match !a/b/.c.md with ?*?******? and {dot: true}
    ✓ should match !a/b/.c.md with ?*?******? and {nonegate: true}
    ✓ should match /a/ with ?*?******?
    ✓ should match /a/ with ?*?******? and {dot: true}
    ✓ should match /a/ with ?*?******? and {nonegate: true}
    ✓ should match /a/b with ?*?******?
    ✓ should match /a/b with ?*?******? and {dot: true}
    ✓ should match /a/b with ?*?******? and {nonegate: true}
    ✓ should match /a/cb with ?*?******?
    ✓ should match /a/cb with ?*?******? and {dot: true}
    ✓ should match /a/cb with ?*?******? and {nonegate: true}
    ✓ should match /a/bb with ?*?******?
    ✓ should match /a/bb with ?*?******? and {dot: true}
    ✓ should match /a/bb with ?*?******? and {nonegate: true}
    ✓ should match /a/b/c with ?*?******?
    ✓ should match /a/b/c with ?*?******? and {dot: true}
    ✓ should match /a/b/c with ?*?******? and {nonegate: true}
    ✓ should match /a/b/c/ with ?*?******?
    ✓ should match /a/b/c/ with ?*?******? and {dot: true}
    ✓ should match /a/b/c/ with ?*?******? and {nonegate: true}
    ✓ should match /a/b/c/d with ?*?******?
    ✓ should match /a/b/c/d with ?*?******? and {dot: true}
    ✓ should match /a/b/c/d with ?*?******? and {nonegate: true}
    ✓ should match /a/b/c/d/ with ?*?******?
    ✓ should match /a/b/c/d/ with ?*?******? and {dot: true}
    ✓ should match /a/b/c/d/ with ?*?******? and {nonegate: true}
    ✓ should match . with ?*?******?
    ✓ should match . with ?*?******? and {dot: true}
    ✓ should match . with ?*?******? and {nonegate: true}
    ✓ should match ./ with ?*?******?
    ✓ should match ./ with ?*?******? and {dot: true}
    ✓ should match ./ with ?*?******? and {nonegate: true}
    ✓ should match .. with ?*?******?
    ✓ should match .. with ?*?******? and {dot: true}
    ✓ should match .. with ?*?******? and {nonegate: true}
    ✓ should match ../c with ?*?******?
    ✓ should match ../c with ?*?******? and {dot: true}
    ✓ should match ../c with ?*?******? and {nonegate: true}
    ✓ should match ../c with ?*?******?
    ✓ should match ../c with ?*?******? and {dot: true}
    ✓ should match ../c with ?*?******? and {nonegate: true}
    ✓ should match ./../c with ?*?******?
    ✓ should match ./../c with ?*?******? and {dot: true}
    ✓ should match ./../c with ?*?******? and {nonegate: true}
    ✓ should match ./a/../c with ?*?******?
    ✓ should match ./a/../c with ?*?******? and {dot: true}
    ✓ should match ./a/../c with ?*?******? and {nonegate: true}
    ✓ should match /.. with ?*?******?
    ✓ should match /.. with ?*?******? and {dot: true}
    ✓ should match /.. with ?*?******? and {nonegate: true}
    ✓ should match /../c with ?*?******?
    ✓ should match /../c with ?*?******? and {dot: true}
    ✓ should match /../c with ?*?******? and {nonegate: true}
    ✓ should match /../.c with ?*?******?
    ✓ should match /../.c with ?*?******? and {dot: true}
    ✓ should match /../.c with ?*?******? and {nonegate: true}
    ✓ should match /../.c/ with ?*?******?
    ✓ should match /../.c/ with ?*?******? and {dot: true}
    ✓ should match /../.c/ with ?*?******? and {nonegate: true}
    ✓ should match /a/../c with ?*?******?
    ✓ should match /a/../c with ?*?******? and {dot: true}
    ✓ should match /a/../c with ?*?******? and {nonegate: true}
    ✓ should match a/../c with ?*?******?
    ✓ should match a/../c with ?*?******? and {dot: true}
    ✓ should match a/../c with ?*?******? and {nonegate: true}
    ✓ should match ../.b/.c with ?*?******?
    ✓ should match ../.b/.c with ?*?******? and {dot: true}
    ✓ should match ../.b/.c with ?*?******? and {nonegate: true}
    ✓ should match ../b/.c with ?*?******?
    ✓ should match ../b/.c with ?*?******? and {dot: true}
    ✓ should match ../b/.c with ?*?******? and {nonegate: true}
    ✓ should match ./.b/.c with ?*?******?
    ✓ should match ./.b/.c with ?*?******? and {dot: true}
    ✓ should match ./.b/.c with ?*?******? and {nonegate: true}
    ✓ should match ./b/.c with ?*?******?
    ✓ should match ./b/.c with ?*?******? and {dot: true}
    ✓ should match ./b/.c with ?*?******? and {nonegate: true}
    ✓ should match .b with ?*?******?
    ✓ should match .b with ?*?******? and {dot: true}
    ✓ should match .b with ?*?******? and {nonegate: true}
    ✓ should match .b.c with ?*?******?
    ✓ should match .b.c with ?*?******? and {dot: true}
    ✓ should match .b.c with ?*?******? and {nonegate: true}
    ✓ should match .b.c/ with ?*?******?
    ✓ should match .b.c/ with ?*?******? and {dot: true}
    ✓ should match .b.c/ with ?*?******? and {nonegate: true}
    ✓ should match .b/ with ?*?******?
    ✓ should match .b/ with ?*?******? and {dot: true}
    ✓ should match .b/ with ?*?******? and {nonegate: true}
    ✓ should match .b/.c with ?*?******?
    ✓ should match .b/.c with ?*?******? and {dot: true}
    ✓ should match .b/.c with ?*?******? and {nonegate: true}
    ✓ should match .b/c with ?*?******?
    ✓ should match .b/c with ?*?******? and {dot: true}
    ✓ should match .b/c with ?*?******? and {nonegate: true}
    ✓ should match b/.c with ?*?******?
    ✓ should match b/.c with ?*?******? and {dot: true}
    ✓ should match b/.c with ?*?******? and {nonegate: true}
    ✓ should match b/.c/ with ?*?******?
    ✓ should match b/.c/ with ?*?******? and {dot: true}
    ✓ should match b/.c/ with ?*?******? and {nonegate: true}
    ✓ should match a/+b/c with ?*?******?
    ✓ should match a/+b/c with ?*?******? and {dot: true}
    ✓ should match a/+b/c with ?*?******? and {nonegate: true}
    ✓ should match +a/+b/c with ?*?******?
    ✓ should match +a/+b/c with ?*?******? and {dot: true}
    ✓ should match +a/+b/c with ?*?******? and {nonegate: true}
    ✓ should match a (foo) with ?*?******?
    ✓ should match a (foo) with ?*?******? and {dot: true}
    ✓ should match a (foo) with ?*?******? and {nonegate: true}
    ✓ should match a (foo)/(bar) with ?*?******?
    ✓ should match a (foo)/(bar) with ?*?******? and {dot: true}
    ✓ should match a (foo)/(bar) with ?*?******? and {nonegate: true}
    ✓ should match a/b/c (1) with ?*?******?
    ✓ should match a/b/c (1) with ?*?******? and {dot: true}
    ✓ should match a/b/c (1) with ?*?******? and {nonegate: true}
    ✓ should match a/b (2)/c (1) with ?*?******?
    ✓ should match a/b (2)/c (1) with ?*?******? and {dot: true}
    ✓ should match a/b (2)/c (1) with ?*?******? and {nonegate: true}
    ✓ should match a/b/c [def] with ?*?******?
    ✓ should match a/b/c [def] with ?*?******? and {dot: true}
    ✓ should match a/b/c [def] with ?*?******? and {nonegate: true}
    ✓ should match a with ?*?***?
    ✓ should match a with ?*?***? and {dot: true}
    ✓ should match a with ?*?***? and {nonegate: true}
    ✓ should match a.md with ?*?***?
    ✓ should match a.md with ?*?***? and {dot: true}
    ✓ should match a.md with ?*?***? and {nonegate: true}
    ✓ should match a.js with ?*?***?
    ✓ should match a.js with ?*?***? and {dot: true}
    ✓ should match a.js with ?*?***? and {nonegate: true}
    ✓ should match a/ with ?*?***?
    ✓ should match a/ with ?*?***? and {dot: true}
    ✓ should match a/ with ?*?***? and {nonegate: true}
    ✓ should match a/b with ?*?***?
    ✓ should match a/b with ?*?***? and {dot: true}
    ✓ should match a/b with ?*?***? and {nonegate: true}
    ✓ should match a/b/.c.md with ?*?***?
    ✓ should match a/b/.c.md with ?*?***? and {dot: true}
    ✓ should match a/b/.c.md with ?*?***? and {nonegate: true}
    ✓ should match a/b/c with ?*?***?
    ✓ should match a/b/c with ?*?***? and {dot: true}
    ✓ should match a/b/c with ?*?***? and {nonegate: true}
    ✓ should match a/b/c.md with ?*?***?
    ✓ should match a/b/c.md with ?*?***? and {dot: true}
    ✓ should match a/b/c.md with ?*?***? and {nonegate: true}
    ✓ should match a/b/c/ with ?*?***?
    ✓ should match a/b/c/ with ?*?***? and {dot: true}
    ✓ should match a/b/c/ with ?*?***? and {nonegate: true}
    ✓ should match a/b/c/d with ?*?***?
    ✓ should match a/b/c/d with ?*?***? and {dot: true}
    ✓ should match a/b/c/d with ?*?***? and {nonegate: true}
    ✓ should match a/b/c/d/ with ?*?***?
    ✓ should match a/b/c/d/ with ?*?***? and {dot: true}
    ✓ should match a/b/c/d/ with ?*?***? and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with ?*?***?
    ✓ should match a/b/c/d/e/f/z.js with ?*?***? and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with ?*?***? and {nonegate: true}
    ✓ should match a/b/c/z.js with ?*?***?
    ✓ should match a/b/c/z.js with ?*?***? and {dot: true}
    ✓ should match a/b/c/z.js with ?*?***? and {nonegate: true}
    ✓ should match a/bb with ?*?***?
    ✓ should match a/bb with ?*?***? and {dot: true}
    ✓ should match a/bb with ?*?***? and {nonegate: true}
    ✓ should match a/cb with ?*?***?
    ✓ should match a/cb with ?*?***? and {dot: true}
    ✓ should match a/cb with ?*?***? and {nonegate: true}
    ✓ should match abbbz with ?*?***?
    ✓ should match abbbz with ?*?***? and {dot: true}
    ✓ should match abbbz with ?*?***? and {nonegate: true}
    ✓ should match abc with ?*?***?
    ✓ should match abc with ?*?***? and {dot: true}
    ✓ should match abc with ?*?***? and {nonegate: true}
    ✓ should match abd with ?*?***?
    ✓ should match abd with ?*?***? and {dot: true}
    ✓ should match abd with ?*?***? and {nonegate: true}
    ✓ should match z.js with ?*?***?
    ✓ should match z.js with ?*?***? and {dot: true}
    ✓ should match z.js with ?*?***? and {nonegate: true}
    ✓ should match za.js with ?*?***?
    ✓ should match za.js with ?*?***? and {dot: true}
    ✓ should match za.js with ?*?***? and {nonegate: true}
    ✓ should match !a.js with ?*?***?
    ✓ should match !a.js with ?*?***? and {dot: true}
    ✓ should match !a.js with ?*?***? and {nonegate: true}
    ✓ should match !a/b with ?*?***?
    ✓ should match !a/b with ?*?***? and {dot: true}
    ✓ should match !a/b with ?*?***? and {nonegate: true}
    ✓ should match !a/b/ with ?*?***?
    ✓ should match !a/b/ with ?*?***? and {dot: true}
    ✓ should match !a/b/ with ?*?***? and {nonegate: true}
    ✓ should match !a/b/c with ?*?***?
    ✓ should match !a/b/c with ?*?***? and {dot: true}
    ✓ should match !a/b/c with ?*?***? and {nonegate: true}
    ✓ should match !a/b/c/ with ?*?***?
    ✓ should match !a/b/c/ with ?*?***? and {dot: true}
    ✓ should match !a/b/c/ with ?*?***? and {nonegate: true}
    ✓ should match !a/!b with ?*?***?
    ✓ should match !a/!b with ?*?***? and {dot: true}
    ✓ should match !a/!b with ?*?***? and {nonegate: true}
    ✓ should match !a/!b/c with ?*?***?
    ✓ should match !a/!b/c with ?*?***? and {dot: true}
    ✓ should match !a/!b/c with ?*?***? and {nonegate: true}
    ✓ should match !a/!b/c/d with ?*?***?
    ✓ should match !a/!b/c/d with ?*?***? and {dot: true}
    ✓ should match !a/!b/c/d with ?*?***? and {nonegate: true}
    ✓ should match !a/b/.c.md with ?*?***?
    ✓ should match !a/b/.c.md with ?*?***? and {dot: true}
    ✓ should match !a/b/.c.md with ?*?***? and {nonegate: true}
    ✓ should match /a/ with ?*?***?
    ✓ should match /a/ with ?*?***? and {dot: true}
    ✓ should match /a/ with ?*?***? and {nonegate: true}
    ✓ should match /a/b with ?*?***?
    ✓ should match /a/b with ?*?***? and {dot: true}
    ✓ should match /a/b with ?*?***? and {nonegate: true}
    ✓ should match /a/cb with ?*?***?
    ✓ should match /a/cb with ?*?***? and {dot: true}
    ✓ should match /a/cb with ?*?***? and {nonegate: true}
    ✓ should match /a/bb with ?*?***?
    ✓ should match /a/bb with ?*?***? and {dot: true}
    ✓ should match /a/bb with ?*?***? and {nonegate: true}
    ✓ should match /a/b/c with ?*?***?
    ✓ should match /a/b/c with ?*?***? and {dot: true}
    ✓ should match /a/b/c with ?*?***? and {nonegate: true}
    ✓ should match /a/b/c/ with ?*?***?
    ✓ should match /a/b/c/ with ?*?***? and {dot: true}
    ✓ should match /a/b/c/ with ?*?***? and {nonegate: true}
    ✓ should match /a/b/c/d with ?*?***?
    ✓ should match /a/b/c/d with ?*?***? and {dot: true}
    ✓ should match /a/b/c/d with ?*?***? and {nonegate: true}
    ✓ should match /a/b/c/d/ with ?*?***?
    ✓ should match /a/b/c/d/ with ?*?***? and {dot: true}
    ✓ should match /a/b/c/d/ with ?*?***? and {nonegate: true}
    ✓ should match . with ?*?***?
    ✓ should match . with ?*?***? and {dot: true}
    ✓ should match . with ?*?***? and {nonegate: true}
    ✓ should match ./ with ?*?***?
    ✓ should match ./ with ?*?***? and {dot: true}
    ✓ should match ./ with ?*?***? and {nonegate: true}
    ✓ should match .. with ?*?***?
    ✓ should match .. with ?*?***? and {dot: true}
    ✓ should match .. with ?*?***? and {nonegate: true}
    ✓ should match ../c with ?*?***?
    ✓ should match ../c with ?*?***? and {dot: true}
    ✓ should match ../c with ?*?***? and {nonegate: true}
    ✓ should match ../c with ?*?***?
    ✓ should match ../c with ?*?***? and {dot: true}
    ✓ should match ../c with ?*?***? and {nonegate: true}
    ✓ should match ./../c with ?*?***?
    ✓ should match ./../c with ?*?***? and {dot: true}
    ✓ should match ./../c with ?*?***? and {nonegate: true}
    ✓ should match ./a/../c with ?*?***?
    ✓ should match ./a/../c with ?*?***? and {dot: true}
    ✓ should match ./a/../c with ?*?***? and {nonegate: true}
    ✓ should match /.. with ?*?***?
    ✓ should match /.. with ?*?***? and {dot: true}
    ✓ should match /.. with ?*?***? and {nonegate: true}
    ✓ should match /../c with ?*?***?
    ✓ should match /../c with ?*?***? and {dot: true}
    ✓ should match /../c with ?*?***? and {nonegate: true}
    ✓ should match /../.c with ?*?***?
    ✓ should match /../.c with ?*?***? and {dot: true}
    ✓ should match /../.c with ?*?***? and {nonegate: true}
    ✓ should match /../.c/ with ?*?***?
    ✓ should match /../.c/ with ?*?***? and {dot: true}
    ✓ should match /../.c/ with ?*?***? and {nonegate: true}
    ✓ should match /a/../c with ?*?***?
    ✓ should match /a/../c with ?*?***? and {dot: true}
    ✓ should match /a/../c with ?*?***? and {nonegate: true}
    ✓ should match a/../c with ?*?***?
    ✓ should match a/../c with ?*?***? and {dot: true}
    ✓ should match a/../c with ?*?***? and {nonegate: true}
    ✓ should match ../.b/.c with ?*?***?
    ✓ should match ../.b/.c with ?*?***? and {dot: true}
    ✓ should match ../.b/.c with ?*?***? and {nonegate: true}
    ✓ should match ../b/.c with ?*?***?
    ✓ should match ../b/.c with ?*?***? and {dot: true}
    ✓ should match ../b/.c with ?*?***? and {nonegate: true}
    ✓ should match ./.b/.c with ?*?***?
    ✓ should match ./.b/.c with ?*?***? and {dot: true}
    ✓ should match ./.b/.c with ?*?***? and {nonegate: true}
    ✓ should match ./b/.c with ?*?***?
    ✓ should match ./b/.c with ?*?***? and {dot: true}
    ✓ should match ./b/.c with ?*?***? and {nonegate: true}
    ✓ should match .b with ?*?***?
    ✓ should match .b with ?*?***? and {dot: true}
    ✓ should match .b with ?*?***? and {nonegate: true}
    ✓ should match .b.c with ?*?***?
    ✓ should match .b.c with ?*?***? and {dot: true}
    ✓ should match .b.c with ?*?***? and {nonegate: true}
    ✓ should match .b.c/ with ?*?***?
    ✓ should match .b.c/ with ?*?***? and {dot: true}
    ✓ should match .b.c/ with ?*?***? and {nonegate: true}
    ✓ should match .b/ with ?*?***?
    ✓ should match .b/ with ?*?***? and {dot: true}
    ✓ should match .b/ with ?*?***? and {nonegate: true}
    ✓ should match .b/.c with ?*?***?
    ✓ should match .b/.c with ?*?***? and {dot: true}
    ✓ should match .b/.c with ?*?***? and {nonegate: true}
    ✓ should match .b/c with ?*?***?
    ✓ should match .b/c with ?*?***? and {dot: true}
    ✓ should match .b/c with ?*?***? and {nonegate: true}
    ✓ should match b/.c with ?*?***?
    ✓ should match b/.c with ?*?***? and {dot: true}
    ✓ should match b/.c with ?*?***? and {nonegate: true}
    ✓ should match b/.c/ with ?*?***?
    ✓ should match b/.c/ with ?*?***? and {dot: true}
    ✓ should match b/.c/ with ?*?***? and {nonegate: true}
    ✓ should match a/+b/c with ?*?***?
    ✓ should match a/+b/c with ?*?***? and {dot: true}
    ✓ should match a/+b/c with ?*?***? and {nonegate: true}
    ✓ should match +a/+b/c with ?*?***?
    ✓ should match +a/+b/c with ?*?***? and {dot: true}
    ✓ should match +a/+b/c with ?*?***? and {nonegate: true}
    ✓ should match a (foo) with ?*?***?
    ✓ should match a (foo) with ?*?***? and {dot: true}
    ✓ should match a (foo) with ?*?***? and {nonegate: true}
    ✓ should match a (foo)/(bar) with ?*?***?
    ✓ should match a (foo)/(bar) with ?*?***? and {dot: true}
    ✓ should match a (foo)/(bar) with ?*?***? and {nonegate: true}
    ✓ should match a/b/c (1) with ?*?***?
    ✓ should match a/b/c (1) with ?*?***? and {dot: true}
    ✓ should match a/b/c (1) with ?*?***? and {nonegate: true}
    ✓ should match a/b (2)/c (1) with ?*?***?
    ✓ should match a/b (2)/c (1) with ?*?***? and {dot: true}
    ✓ should match a/b (2)/c (1) with ?*?***? and {nonegate: true}
    ✓ should match a/b/c [def] with ?*?***?
    ✓ should match a/b/c [def] with ?*?***? and {dot: true}
    ✓ should match a/b/c [def] with ?*?***? and {nonegate: true}
    ✓ should match a with ?*?***?***????
    ✓ should match a with ?*?***?***???? and {dot: true}
    ✓ should match a with ?*?***?***???? and {nonegate: true}
    ✓ should match a.md with ?*?***?***????
    ✓ should match a.md with ?*?***?***???? and {dot: true}
    ✓ should match a.md with ?*?***?***???? and {nonegate: true}
    ✓ should match a.js with ?*?***?***????
    ✓ should match a.js with ?*?***?***???? and {dot: true}
    ✓ should match a.js with ?*?***?***???? and {nonegate: true}
    ✓ should match a/ with ?*?***?***????
    ✓ should match a/ with ?*?***?***???? and {dot: true}
    ✓ should match a/ with ?*?***?***???? and {nonegate: true}
    ✓ should match a/b with ?*?***?***????
    ✓ should match a/b with ?*?***?***???? and {dot: true}
    ✓ should match a/b with ?*?***?***???? and {nonegate: true}
    ✓ should match a/b/.c.md with ?*?***?***????
    ✓ should match a/b/.c.md with ?*?***?***???? and {dot: true}
    ✓ should match a/b/.c.md with ?*?***?***???? and {nonegate: true}
    ✓ should match a/b/c with ?*?***?***????
    ✓ should match a/b/c with ?*?***?***???? and {dot: true}
    ✓ should match a/b/c with ?*?***?***???? and {nonegate: true}
    ✓ should match a/b/c.md with ?*?***?***????
    ✓ should match a/b/c.md with ?*?***?***???? and {dot: true}
    ✓ should match a/b/c.md with ?*?***?***???? and {nonegate: true}
    ✓ should match a/b/c/ with ?*?***?***????
    ✓ should match a/b/c/ with ?*?***?***???? and {dot: true}
    ✓ should match a/b/c/ with ?*?***?***???? and {nonegate: true}
    ✓ should match a/b/c/d with ?*?***?***????
    ✓ should match a/b/c/d with ?*?***?***???? and {dot: true}
    ✓ should match a/b/c/d with ?*?***?***???? and {nonegate: true}
    ✓ should match a/b/c/d/ with ?*?***?***????
    ✓ should match a/b/c/d/ with ?*?***?***???? and {dot: true}
    ✓ should match a/b/c/d/ with ?*?***?***???? and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with ?*?***?***????
    ✓ should match a/b/c/d/e/f/z.js with ?*?***?***???? and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with ?*?***?***???? and {nonegate: true}
    ✓ should match a/b/c/z.js with ?*?***?***????
    ✓ should match a/b/c/z.js with ?*?***?***???? and {dot: true}
    ✓ should match a/b/c/z.js with ?*?***?***???? and {nonegate: true}
    ✓ should match a/bb with ?*?***?***????
    ✓ should match a/bb with ?*?***?***???? and {dot: true}
    ✓ should match a/bb with ?*?***?***???? and {nonegate: true}
    ✓ should match a/cb with ?*?***?***????
    ✓ should match a/cb with ?*?***?***???? and {dot: true}
    ✓ should match a/cb with ?*?***?***???? and {nonegate: true}
    ✓ should match abbbz with ?*?***?***????
    ✓ should match abbbz with ?*?***?***???? and {dot: true}
    ✓ should match abbbz with ?*?***?***???? and {nonegate: true}
    ✓ should match abc with ?*?***?***????
    ✓ should match abc with ?*?***?***???? and {dot: true}
    ✓ should match abc with ?*?***?***???? and {nonegate: true}
    ✓ should match abd with ?*?***?***????
    ✓ should match abd with ?*?***?***???? and {dot: true}
    ✓ should match abd with ?*?***?***???? and {nonegate: true}
    ✓ should match z.js with ?*?***?***????
    ✓ should match z.js with ?*?***?***???? and {dot: true}
    ✓ should match z.js with ?*?***?***???? and {nonegate: true}
    ✓ should match za.js with ?*?***?***????
    ✓ should match za.js with ?*?***?***???? and {dot: true}
    ✓ should match za.js with ?*?***?***???? and {nonegate: true}
    ✓ should match !a.js with ?*?***?***????
    ✓ should match !a.js with ?*?***?***???? and {dot: true}
    ✓ should match !a.js with ?*?***?***???? and {nonegate: true}
    ✓ should match !a/b with ?*?***?***????
    ✓ should match !a/b with ?*?***?***???? and {dot: true}
    ✓ should match !a/b with ?*?***?***???? and {nonegate: true}
    ✓ should match !a/b/ with ?*?***?***????
    ✓ should match !a/b/ with ?*?***?***???? and {dot: true}
    ✓ should match !a/b/ with ?*?***?***???? and {nonegate: true}
    ✓ should match !a/b/c with ?*?***?***????
    ✓ should match !a/b/c with ?*?***?***???? and {dot: true}
    ✓ should match !a/b/c with ?*?***?***???? and {nonegate: true}
    ✓ should match !a/b/c/ with ?*?***?***????
    ✓ should match !a/b/c/ with ?*?***?***???? and {dot: true}
    ✓ should match !a/b/c/ with ?*?***?***???? and {nonegate: true}
    ✓ should match !a/!b with ?*?***?***????
    ✓ should match !a/!b with ?*?***?***???? and {dot: true}
    ✓ should match !a/!b with ?*?***?***???? and {nonegate: true}
    ✓ should match !a/!b/c with ?*?***?***????
    ✓ should match !a/!b/c with ?*?***?***???? and {dot: true}
    ✓ should match !a/!b/c with ?*?***?***???? and {nonegate: true}
    ✓ should match !a/!b/c/d with ?*?***?***????
    ✓ should match !a/!b/c/d with ?*?***?***???? and {dot: true}
    ✓ should match !a/!b/c/d with ?*?***?***???? and {nonegate: true}
    ✓ should match !a/b/.c.md with ?*?***?***????
    ✓ should match !a/b/.c.md with ?*?***?***???? and {dot: true}
    ✓ should match !a/b/.c.md with ?*?***?***???? and {nonegate: true}
    ✓ should match /a/ with ?*?***?***????
    ✓ should match /a/ with ?*?***?***???? and {dot: true}
    ✓ should match /a/ with ?*?***?***???? and {nonegate: true}
    ✓ should match /a/b with ?*?***?***????
    ✓ should match /a/b with ?*?***?***???? and {dot: true}
    ✓ should match /a/b with ?*?***?***???? and {nonegate: true}
    ✓ should match /a/cb with ?*?***?***????
    ✓ should match /a/cb with ?*?***?***???? and {dot: true}
    ✓ should match /a/cb with ?*?***?***???? and {nonegate: true}
    ✓ should match /a/bb with ?*?***?***????
    ✓ should match /a/bb with ?*?***?***???? and {dot: true}
    ✓ should match /a/bb with ?*?***?***???? and {nonegate: true}
    ✓ should match /a/b/c with ?*?***?***????
    ✓ should match /a/b/c with ?*?***?***???? and {dot: true}
    ✓ should match /a/b/c with ?*?***?***???? and {nonegate: true}
    ✓ should match /a/b/c/ with ?*?***?***????
    ✓ should match /a/b/c/ with ?*?***?***???? and {dot: true}
    ✓ should match /a/b/c/ with ?*?***?***???? and {nonegate: true}
    ✓ should match /a/b/c/d with ?*?***?***????
    ✓ should match /a/b/c/d with ?*?***?***???? and {dot: true}
    ✓ should match /a/b/c/d with ?*?***?***???? and {nonegate: true}
    ✓ should match /a/b/c/d/ with ?*?***?***????
    ✓ should match /a/b/c/d/ with ?*?***?***???? and {dot: true}
    ✓ should match /a/b/c/d/ with ?*?***?***???? and {nonegate: true}
    ✓ should match . with ?*?***?***????
    ✓ should match . with ?*?***?***???? and {dot: true}
    ✓ should match . with ?*?***?***???? and {nonegate: true}
    ✓ should match ./ with ?*?***?***????
    ✓ should match ./ with ?*?***?***???? and {dot: true}
    ✓ should match ./ with ?*?***?***???? and {nonegate: true}
    ✓ should match .. with ?*?***?***????
    ✓ should match .. with ?*?***?***???? and {dot: true}
    ✓ should match .. with ?*?***?***???? and {nonegate: true}
    ✓ should match ../c with ?*?***?***????
    ✓ should match ../c with ?*?***?***???? and {dot: true}
    ✓ should match ../c with ?*?***?***???? and {nonegate: true}
    ✓ should match ../c with ?*?***?***????
    ✓ should match ../c with ?*?***?***???? and {dot: true}
    ✓ should match ../c with ?*?***?***???? and {nonegate: true}
    ✓ should match ./../c with ?*?***?***????
    ✓ should match ./../c with ?*?***?***???? and {dot: true}
    ✓ should match ./../c with ?*?***?***???? and {nonegate: true}
    ✓ should match ./a/../c with ?*?***?***????
    ✓ should match ./a/../c with ?*?***?***???? and {dot: true}
    ✓ should match ./a/../c with ?*?***?***???? and {nonegate: true}
    ✓ should match /.. with ?*?***?***????
    ✓ should match /.. with ?*?***?***???? and {dot: true}
    ✓ should match /.. with ?*?***?***???? and {nonegate: true}
    ✓ should match /../c with ?*?***?***????
    ✓ should match /../c with ?*?***?***???? and {dot: true}
    ✓ should match /../c with ?*?***?***???? and {nonegate: true}
    ✓ should match /../.c with ?*?***?***????
    ✓ should match /../.c with ?*?***?***???? and {dot: true}
    ✓ should match /../.c with ?*?***?***???? and {nonegate: true}
    ✓ should match /../.c/ with ?*?***?***????
    ✓ should match /../.c/ with ?*?***?***???? and {dot: true}
    ✓ should match /../.c/ with ?*?***?***???? and {nonegate: true}
    ✓ should match /a/../c with ?*?***?***????
    ✓ should match /a/../c with ?*?***?***???? and {dot: true}
    ✓ should match /a/../c with ?*?***?***???? and {nonegate: true}
    ✓ should match a/../c with ?*?***?***????
    ✓ should match a/../c with ?*?***?***???? and {dot: true}
    ✓ should match a/../c with ?*?***?***???? and {nonegate: true}
    ✓ should match ../.b/.c with ?*?***?***????
    ✓ should match ../.b/.c with ?*?***?***???? and {dot: true}
    ✓ should match ../.b/.c with ?*?***?***???? and {nonegate: true}
    ✓ should match ../b/.c with ?*?***?***????
    ✓ should match ../b/.c with ?*?***?***???? and {dot: true}
    ✓ should match ../b/.c with ?*?***?***???? and {nonegate: true}
    ✓ should match ./.b/.c with ?*?***?***????
    ✓ should match ./.b/.c with ?*?***?***???? and {dot: true}
    ✓ should match ./.b/.c with ?*?***?***???? and {nonegate: true}
    ✓ should match ./b/.c with ?*?***?***????
    ✓ should match ./b/.c with ?*?***?***???? and {dot: true}
    ✓ should match ./b/.c with ?*?***?***???? and {nonegate: true}
    ✓ should match .b with ?*?***?***????
    ✓ should match .b with ?*?***?***???? and {dot: true}
    ✓ should match .b with ?*?***?***???? and {nonegate: true}
    ✓ should match .b.c with ?*?***?***????
    ✓ should match .b.c with ?*?***?***???? and {dot: true}
    ✓ should match .b.c with ?*?***?***???? and {nonegate: true}
    ✓ should match .b.c/ with ?*?***?***????
    ✓ should match .b.c/ with ?*?***?***???? and {dot: true}
    ✓ should match .b.c/ with ?*?***?***???? and {nonegate: true}
    ✓ should match .b/ with ?*?***?***????
    ✓ should match .b/ with ?*?***?***???? and {dot: true}
    ✓ should match .b/ with ?*?***?***???? and {nonegate: true}
    ✓ should match .b/.c with ?*?***?***????
    ✓ should match .b/.c with ?*?***?***???? and {dot: true}
    ✓ should match .b/.c with ?*?***?***???? and {nonegate: true}
    ✓ should match .b/c with ?*?***?***????
    ✓ should match .b/c with ?*?***?***???? and {dot: true}
    ✓ should match .b/c with ?*?***?***???? and {nonegate: true}
    ✓ should match b/.c with ?*?***?***????
    ✓ should match b/.c with ?*?***?***???? and {dot: true}
    ✓ should match b/.c with ?*?***?***???? and {nonegate: true}
    ✓ should match b/.c/ with ?*?***?***????
    ✓ should match b/.c/ with ?*?***?***???? and {dot: true}
    ✓ should match b/.c/ with ?*?***?***???? and {nonegate: true}
    ✓ should match a/+b/c with ?*?***?***????
    ✓ should match a/+b/c with ?*?***?***???? and {dot: true}
    ✓ should match a/+b/c with ?*?***?***???? and {nonegate: true}
    ✓ should match +a/+b/c with ?*?***?***????
    ✓ should match +a/+b/c with ?*?***?***???? and {dot: true}
    ✓ should match +a/+b/c with ?*?***?***???? and {nonegate: true}
    ✓ should match a (foo) with ?*?***?***????
    ✓ should match a (foo) with ?*?***?***???? and {dot: true}
    ✓ should match a (foo) with ?*?***?***???? and {nonegate: true}
    ✓ should match a (foo)/(bar) with ?*?***?***????
    ✓ should match a (foo)/(bar) with ?*?***?***???? and {dot: true}
    ✓ should match a (foo)/(bar) with ?*?***?***???? and {nonegate: true}
    ✓ should match a/b/c (1) with ?*?***?***????
    ✓ should match a/b/c (1) with ?*?***?***???? and {dot: true}
    ✓ should match a/b/c (1) with ?*?***?***???? and {nonegate: true}
    ✓ should match a/b (2)/c (1) with ?*?***?***????
    ✓ should match a/b (2)/c (1) with ?*?***?***???? and {dot: true}
    ✓ should match a/b (2)/c (1) with ?*?***?***???? and {nonegate: true}
    ✓ should match a/b/c [def] with ?*?***?***????
    ✓ should match a/b/c [def] with ?*?***?***???? and {dot: true}
    ✓ should match a/b/c [def] with ?*?***?***???? and {nonegate: true}
    ✓ should match a with ?*?*?
    ✓ should match a with ?*?*? and {dot: true}
    ✓ should match a with ?*?*? and {nonegate: true}
    ✓ should match a.md with ?*?*?
    ✓ should match a.md with ?*?*? and {dot: true}
    ✓ should match a.md with ?*?*? and {nonegate: true}
    ✓ should match a.js with ?*?*?
    ✓ should match a.js with ?*?*? and {dot: true}
    ✓ should match a.js with ?*?*? and {nonegate: true}
    ✓ should match a/ with ?*?*?
    ✓ should match a/ with ?*?*? and {dot: true}
    ✓ should match a/ with ?*?*? and {nonegate: true}
    ✓ should match a/b with ?*?*?
    ✓ should match a/b with ?*?*? and {dot: true}
    ✓ should match a/b with ?*?*? and {nonegate: true}
    ✓ should match a/b/.c.md with ?*?*?
    ✓ should match a/b/.c.md with ?*?*? and {dot: true}
    ✓ should match a/b/.c.md with ?*?*? and {nonegate: true}
    ✓ should match a/b/c with ?*?*?
    ✓ should match a/b/c with ?*?*? and {dot: true}
    ✓ should match a/b/c with ?*?*? and {nonegate: true}
    ✓ should match a/b/c.md with ?*?*?
    ✓ should match a/b/c.md with ?*?*? and {dot: true}
    ✓ should match a/b/c.md with ?*?*? and {nonegate: true}
    ✓ should match a/b/c/ with ?*?*?
    ✓ should match a/b/c/ with ?*?*? and {dot: true}
    ✓ should match a/b/c/ with ?*?*? and {nonegate: true}
    ✓ should match a/b/c/d with ?*?*?
    ✓ should match a/b/c/d with ?*?*? and {dot: true}
    ✓ should match a/b/c/d with ?*?*? and {nonegate: true}
    ✓ should match a/b/c/d/ with ?*?*?
    ✓ should match a/b/c/d/ with ?*?*? and {dot: true}
    ✓ should match a/b/c/d/ with ?*?*? and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with ?*?*?
    ✓ should match a/b/c/d/e/f/z.js with ?*?*? and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with ?*?*? and {nonegate: true}
    ✓ should match a/b/c/z.js with ?*?*?
    ✓ should match a/b/c/z.js with ?*?*? and {dot: true}
    ✓ should match a/b/c/z.js with ?*?*? and {nonegate: true}
    ✓ should match a/bb with ?*?*?
    ✓ should match a/bb with ?*?*? and {dot: true}
    ✓ should match a/bb with ?*?*? and {nonegate: true}
    ✓ should match a/cb with ?*?*?
    ✓ should match a/cb with ?*?*? and {dot: true}
    ✓ should match a/cb with ?*?*? and {nonegate: true}
    ✓ should match abbbz with ?*?*?
    ✓ should match abbbz with ?*?*? and {dot: true}
    ✓ should match abbbz with ?*?*? and {nonegate: true}
    ✓ should match abc with ?*?*?
    ✓ should match abc with ?*?*? and {dot: true}
    ✓ should match abc with ?*?*? and {nonegate: true}
    ✓ should match abd with ?*?*?
    ✓ should match abd with ?*?*? and {dot: true}
    ✓ should match abd with ?*?*? and {nonegate: true}
    ✓ should match z.js with ?*?*?
    ✓ should match z.js with ?*?*? and {dot: true}
    ✓ should match z.js with ?*?*? and {nonegate: true}
    ✓ should match za.js with ?*?*?
    ✓ should match za.js with ?*?*? and {dot: true}
    ✓ should match za.js with ?*?*? and {nonegate: true}
    ✓ should match !a.js with ?*?*?
    ✓ should match !a.js with ?*?*? and {dot: true}
    ✓ should match !a.js with ?*?*? and {nonegate: true}
    ✓ should match !a/b with ?*?*?
    ✓ should match !a/b with ?*?*? and {dot: true}
    ✓ should match !a/b with ?*?*? and {nonegate: true}
    ✓ should match !a/b/ with ?*?*?
    ✓ should match !a/b/ with ?*?*? and {dot: true}
    ✓ should match !a/b/ with ?*?*? and {nonegate: true}
    ✓ should match !a/b/c with ?*?*?
    ✓ should match !a/b/c with ?*?*? and {dot: true}
    ✓ should match !a/b/c with ?*?*? and {nonegate: true}
    ✓ should match !a/b/c/ with ?*?*?
    ✓ should match !a/b/c/ with ?*?*? and {dot: true}
    ✓ should match !a/b/c/ with ?*?*? and {nonegate: true}
    ✓ should match !a/!b with ?*?*?
    ✓ should match !a/!b with ?*?*? and {dot: true}
    ✓ should match !a/!b with ?*?*? and {nonegate: true}
    ✓ should match !a/!b/c with ?*?*?
    ✓ should match !a/!b/c with ?*?*? and {dot: true}
    ✓ should match !a/!b/c with ?*?*? and {nonegate: true}
    ✓ should match !a/!b/c/d with ?*?*?
    ✓ should match !a/!b/c/d with ?*?*? and {dot: true}
    ✓ should match !a/!b/c/d with ?*?*? and {nonegate: true}
    ✓ should match !a/b/.c.md with ?*?*?
    ✓ should match !a/b/.c.md with ?*?*? and {dot: true}
    ✓ should match !a/b/.c.md with ?*?*? and {nonegate: true}
    ✓ should match /a/ with ?*?*?
    ✓ should match /a/ with ?*?*? and {dot: true}
    ✓ should match /a/ with ?*?*? and {nonegate: true}
    ✓ should match /a/b with ?*?*?
    ✓ should match /a/b with ?*?*? and {dot: true}
    ✓ should match /a/b with ?*?*? and {nonegate: true}
    ✓ should match /a/cb with ?*?*?
    ✓ should match /a/cb with ?*?*? and {dot: true}
    ✓ should match /a/cb with ?*?*? and {nonegate: true}
    ✓ should match /a/bb with ?*?*?
    ✓ should match /a/bb with ?*?*? and {dot: true}
    ✓ should match /a/bb with ?*?*? and {nonegate: true}
    ✓ should match /a/b/c with ?*?*?
    ✓ should match /a/b/c with ?*?*? and {dot: true}
    ✓ should match /a/b/c with ?*?*? and {nonegate: true}
    ✓ should match /a/b/c/ with ?*?*?
    ✓ should match /a/b/c/ with ?*?*? and {dot: true}
    ✓ should match /a/b/c/ with ?*?*? and {nonegate: true}
    ✓ should match /a/b/c/d with ?*?*?
    ✓ should match /a/b/c/d with ?*?*? and {dot: true}
    ✓ should match /a/b/c/d with ?*?*? and {nonegate: true}
    ✓ should match /a/b/c/d/ with ?*?*?
    ✓ should match /a/b/c/d/ with ?*?*? and {dot: true}
    ✓ should match /a/b/c/d/ with ?*?*? and {nonegate: true}
    ✓ should match . with ?*?*?
    ✓ should match . with ?*?*? and {dot: true}
    ✓ should match . with ?*?*? and {nonegate: true}
    ✓ should match ./ with ?*?*?
    ✓ should match ./ with ?*?*? and {dot: true}
    ✓ should match ./ with ?*?*? and {nonegate: true}
    ✓ should match .. with ?*?*?
    ✓ should match .. with ?*?*? and {dot: true}
    ✓ should match .. with ?*?*? and {nonegate: true}
    ✓ should match ../c with ?*?*?
    ✓ should match ../c with ?*?*? and {dot: true}
    ✓ should match ../c with ?*?*? and {nonegate: true}
    ✓ should match ../c with ?*?*?
    ✓ should match ../c with ?*?*? and {dot: true}
    ✓ should match ../c with ?*?*? and {nonegate: true}
    ✓ should match ./../c with ?*?*?
    ✓ should match ./../c with ?*?*? and {dot: true}
    ✓ should match ./../c with ?*?*? and {nonegate: true}
    ✓ should match ./a/../c with ?*?*?
    ✓ should match ./a/../c with ?*?*? and {dot: true}
    ✓ should match ./a/../c with ?*?*? and {nonegate: true}
    ✓ should match /.. with ?*?*?
    ✓ should match /.. with ?*?*? and {dot: true}
    ✓ should match /.. with ?*?*? and {nonegate: true}
    ✓ should match /../c with ?*?*?
    ✓ should match /../c with ?*?*? and {dot: true}
    ✓ should match /../c with ?*?*? and {nonegate: true}
    ✓ should match /../.c with ?*?*?
    ✓ should match /../.c with ?*?*? and {dot: true}
    ✓ should match /../.c with ?*?*? and {nonegate: true}
    ✓ should match /../.c/ with ?*?*?
    ✓ should match /../.c/ with ?*?*? and {dot: true}
    ✓ should match /../.c/ with ?*?*? and {nonegate: true}
    ✓ should match /a/../c with ?*?*?
    ✓ should match /a/../c with ?*?*? and {dot: true}
    ✓ should match /a/../c with ?*?*? and {nonegate: true}
    ✓ should match a/../c with ?*?*?
    ✓ should match a/../c with ?*?*? and {dot: true}
    ✓ should match a/../c with ?*?*? and {nonegate: true}
    ✓ should match ../.b/.c with ?*?*?
    ✓ should match ../.b/.c with ?*?*? and {dot: true}
    ✓ should match ../.b/.c with ?*?*? and {nonegate: true}
    ✓ should match ../b/.c with ?*?*?
    ✓ should match ../b/.c with ?*?*? and {dot: true}
    ✓ should match ../b/.c with ?*?*? and {nonegate: true}
    ✓ should match ./.b/.c with ?*?*?
    ✓ should match ./.b/.c with ?*?*? and {dot: true}
    ✓ should match ./.b/.c with ?*?*? and {nonegate: true}
    ✓ should match ./b/.c with ?*?*?
    ✓ should match ./b/.c with ?*?*? and {dot: true}
    ✓ should match ./b/.c with ?*?*? and {nonegate: true}
    ✓ should match .b with ?*?*?
    ✓ should match .b with ?*?*? and {dot: true}
    ✓ should match .b with ?*?*? and {nonegate: true}
    ✓ should match .b.c with ?*?*?
    ✓ should match .b.c with ?*?*? and {dot: true}
    ✓ should match .b.c with ?*?*? and {nonegate: true}
    ✓ should match .b.c/ with ?*?*?
    ✓ should match .b.c/ with ?*?*? and {dot: true}
    ✓ should match .b.c/ with ?*?*? and {nonegate: true}
    ✓ should match .b/ with ?*?*?
    ✓ should match .b/ with ?*?*? and {dot: true}
    ✓ should match .b/ with ?*?*? and {nonegate: true}
    ✓ should match .b/.c with ?*?*?
    ✓ should match .b/.c with ?*?*? and {dot: true}
    ✓ should match .b/.c with ?*?*? and {nonegate: true}
    ✓ should match .b/c with ?*?*?
    ✓ should match .b/c with ?*?*? and {dot: true}
    ✓ should match .b/c with ?*?*? and {nonegate: true}
    ✓ should match b/.c with ?*?*?
    ✓ should match b/.c with ?*?*? and {dot: true}
    ✓ should match b/.c with ?*?*? and {nonegate: true}
    ✓ should match b/.c/ with ?*?*?
    ✓ should match b/.c/ with ?*?*? and {dot: true}
    ✓ should match b/.c/ with ?*?*? and {nonegate: true}
    ✓ should match a/+b/c with ?*?*?
    ✓ should match a/+b/c with ?*?*? and {dot: true}
    ✓ should match a/+b/c with ?*?*? and {nonegate: true}
    ✓ should match +a/+b/c with ?*?*?
    ✓ should match +a/+b/c with ?*?*? and {dot: true}
    ✓ should match +a/+b/c with ?*?*? and {nonegate: true}
    ✓ should match a (foo) with ?*?*?
    ✓ should match a (foo) with ?*?*? and {dot: true}
    ✓ should match a (foo) with ?*?*? and {nonegate: true}
    ✓ should match a (foo)/(bar) with ?*?*?
    ✓ should match a (foo)/(bar) with ?*?*? and {dot: true}
    ✓ should match a (foo)/(bar) with ?*?*? and {nonegate: true}
    ✓ should match a/b/c (1) with ?*?*?
    ✓ should match a/b/c (1) with ?*?*? and {dot: true}
    ✓ should match a/b/c (1) with ?*?*? and {nonegate: true}
    ✓ should match a/b (2)/c (1) with ?*?*?
    ✓ should match a/b (2)/c (1) with ?*?*? and {dot: true}
    ✓ should match a/b (2)/c (1) with ?*?*? and {nonegate: true}
    ✓ should match a/b/c [def] with ?*?*?
    ✓ should match a/b/c [def] with ?*?*? and {dot: true}
    ✓ should match a/b/c [def] with ?*?*? and {nonegate: true}
    ✓ should match a with ?/
    ✓ should match a with ?/ and {dot: true}
    ✓ should match a with ?/ and {nonegate: true}
    ✓ should match a.md with ?/
    ✓ should match a.md with ?/ and {dot: true}
    ✓ should match a.md with ?/ and {nonegate: true}
    ✓ should match a.js with ?/
    ✓ should match a.js with ?/ and {dot: true}
    ✓ should match a.js with ?/ and {nonegate: true}
    ✓ should match a/ with ?/
    ✓ should match a/ with ?/ and {dot: true}
    ✓ should match a/ with ?/ and {nonegate: true}
    ✓ should match a/b with ?/
    ✓ should match a/b with ?/ and {dot: true}
    ✓ should match a/b with ?/ and {nonegate: true}
    ✓ should match a/b/.c.md with ?/
    ✓ should match a/b/.c.md with ?/ and {dot: true}
    ✓ should match a/b/.c.md with ?/ and {nonegate: true}
    ✓ should match a/b/c with ?/
    ✓ should match a/b/c with ?/ and {dot: true}
    ✓ should match a/b/c with ?/ and {nonegate: true}
    ✓ should match a/b/c.md with ?/
    ✓ should match a/b/c.md with ?/ and {dot: true}
    ✓ should match a/b/c.md with ?/ and {nonegate: true}
    ✓ should match a/b/c/ with ?/
    ✓ should match a/b/c/ with ?/ and {dot: true}
    ✓ should match a/b/c/ with ?/ and {nonegate: true}
    ✓ should match a/b/c/d with ?/
    ✓ should match a/b/c/d with ?/ and {dot: true}
    ✓ should match a/b/c/d with ?/ and {nonegate: true}
    ✓ should match a/b/c/d/ with ?/
    ✓ should match a/b/c/d/ with ?/ and {dot: true}
    ✓ should match a/b/c/d/ with ?/ and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with ?/
    ✓ should match a/b/c/d/e/f/z.js with ?/ and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with ?/ and {nonegate: true}
    ✓ should match a/b/c/z.js with ?/
    ✓ should match a/b/c/z.js with ?/ and {dot: true}
    ✓ should match a/b/c/z.js with ?/ and {nonegate: true}
    ✓ should match a/bb with ?/
    ✓ should match a/bb with ?/ and {dot: true}
    ✓ should match a/bb with ?/ and {nonegate: true}
    ✓ should match a/cb with ?/
    ✓ should match a/cb with ?/ and {dot: true}
    ✓ should match a/cb with ?/ and {nonegate: true}
    ✓ should match abbbz with ?/
    ✓ should match abbbz with ?/ and {dot: true}
    ✓ should match abbbz with ?/ and {nonegate: true}
    ✓ should match abc with ?/
    ✓ should match abc with ?/ and {dot: true}
    ✓ should match abc with ?/ and {nonegate: true}
    ✓ should match abd with ?/
    ✓ should match abd with ?/ and {dot: true}
    ✓ should match abd with ?/ and {nonegate: true}
    ✓ should match z.js with ?/
    ✓ should match z.js with ?/ and {dot: true}
    ✓ should match z.js with ?/ and {nonegate: true}
    ✓ should match za.js with ?/
    ✓ should match za.js with ?/ and {dot: true}
    ✓ should match za.js with ?/ and {nonegate: true}
    ✓ should match !a.js with ?/
    ✓ should match !a.js with ?/ and {dot: true}
    ✓ should match !a.js with ?/ and {nonegate: true}
    ✓ should match !a/b with ?/
    ✓ should match !a/b with ?/ and {dot: true}
    ✓ should match !a/b with ?/ and {nonegate: true}
    ✓ should match !a/b/ with ?/
    ✓ should match !a/b/ with ?/ and {dot: true}
    ✓ should match !a/b/ with ?/ and {nonegate: true}
    ✓ should match !a/b/c with ?/
    ✓ should match !a/b/c with ?/ and {dot: true}
    ✓ should match !a/b/c with ?/ and {nonegate: true}
    ✓ should match !a/b/c/ with ?/
    ✓ should match !a/b/c/ with ?/ and {dot: true}
    ✓ should match !a/b/c/ with ?/ and {nonegate: true}
    ✓ should match !a/!b with ?/
    ✓ should match !a/!b with ?/ and {dot: true}
    ✓ should match !a/!b with ?/ and {nonegate: true}
    ✓ should match !a/!b/c with ?/
    ✓ should match !a/!b/c with ?/ and {dot: true}
    ✓ should match !a/!b/c with ?/ and {nonegate: true}
    ✓ should match !a/!b/c/d with ?/
    ✓ should match !a/!b/c/d with ?/ and {dot: true}
    ✓ should match !a/!b/c/d with ?/ and {nonegate: true}
    ✓ should match !a/b/.c.md with ?/
    ✓ should match !a/b/.c.md with ?/ and {dot: true}
    ✓ should match !a/b/.c.md with ?/ and {nonegate: true}
    ✓ should match /a/ with ?/
    ✓ should match /a/ with ?/ and {dot: true}
    ✓ should match /a/ with ?/ and {nonegate: true}
    ✓ should match /a/b with ?/
    ✓ should match /a/b with ?/ and {dot: true}
    ✓ should match /a/b with ?/ and {nonegate: true}
    ✓ should match /a/cb with ?/
    ✓ should match /a/cb with ?/ and {dot: true}
    ✓ should match /a/cb with ?/ and {nonegate: true}
    ✓ should match /a/bb with ?/
    ✓ should match /a/bb with ?/ and {dot: true}
    ✓ should match /a/bb with ?/ and {nonegate: true}
    ✓ should match /a/b/c with ?/
    ✓ should match /a/b/c with ?/ and {dot: true}
    ✓ should match /a/b/c with ?/ and {nonegate: true}
    ✓ should match /a/b/c/ with ?/
    ✓ should match /a/b/c/ with ?/ and {dot: true}
    ✓ should match /a/b/c/ with ?/ and {nonegate: true}
    ✓ should match /a/b/c/d with ?/
    ✓ should match /a/b/c/d with ?/ and {dot: true}
    ✓ should match /a/b/c/d with ?/ and {nonegate: true}
    ✓ should match /a/b/c/d/ with ?/
    ✓ should match /a/b/c/d/ with ?/ and {dot: true}
    ✓ should match /a/b/c/d/ with ?/ and {nonegate: true}
    ✓ should match . with ?/
    ✓ should match . with ?/ and {dot: true}
    ✓ should match . with ?/ and {nonegate: true}
    ✓ should match ./ with ?/
    ✓ should match ./ with ?/ and {dot: true}
    ✓ should match ./ with ?/ and {nonegate: true}
    ✓ should match .. with ?/
    ✓ should match .. with ?/ and {dot: true}
    ✓ should match .. with ?/ and {nonegate: true}
    ✓ should match ../c with ?/
    ✓ should match ../c with ?/ and {dot: true}
    ✓ should match ../c with ?/ and {nonegate: true}
    ✓ should match ../c with ?/
    ✓ should match ../c with ?/ and {dot: true}
    ✓ should match ../c with ?/ and {nonegate: true}
    ✓ should match ./../c with ?/
    ✓ should match ./../c with ?/ and {dot: true}
    ✓ should match ./../c with ?/ and {nonegate: true}
    ✓ should match ./a/../c with ?/
    ✓ should match ./a/../c with ?/ and {dot: true}
    ✓ should match ./a/../c with ?/ and {nonegate: true}
    ✓ should match /.. with ?/
    ✓ should match /.. with ?/ and {dot: true}
    ✓ should match /.. with ?/ and {nonegate: true}
    ✓ should match /../c with ?/
    ✓ should match /../c with ?/ and {dot: true}
    ✓ should match /../c with ?/ and {nonegate: true}
    ✓ should match /../.c with ?/
    ✓ should match /../.c with ?/ and {dot: true}
    ✓ should match /../.c with ?/ and {nonegate: true}
    ✓ should match /../.c/ with ?/
    ✓ should match /../.c/ with ?/ and {dot: true}
    ✓ should match /../.c/ with ?/ and {nonegate: true}
    ✓ should match /a/../c with ?/
    ✓ should match /a/../c with ?/ and {dot: true}
    ✓ should match /a/../c with ?/ and {nonegate: true}
    ✓ should match a/../c with ?/
    ✓ should match a/../c with ?/ and {dot: true}
    ✓ should match a/../c with ?/ and {nonegate: true}
    ✓ should match ../.b/.c with ?/
    ✓ should match ../.b/.c with ?/ and {dot: true}
    ✓ should match ../.b/.c with ?/ and {nonegate: true}
    ✓ should match ../b/.c with ?/
    ✓ should match ../b/.c with ?/ and {dot: true}
    ✓ should match ../b/.c with ?/ and {nonegate: true}
    ✓ should match ./.b/.c with ?/
    ✓ should match ./.b/.c with ?/ and {dot: true}
    ✓ should match ./.b/.c with ?/ and {nonegate: true}
    ✓ should match ./b/.c with ?/
    ✓ should match ./b/.c with ?/ and {dot: true}
    ✓ should match ./b/.c with ?/ and {nonegate: true}
    ✓ should match .b with ?/
    ✓ should match .b with ?/ and {dot: true}
    ✓ should match .b with ?/ and {nonegate: true}
    ✓ should match .b.c with ?/
    ✓ should match .b.c with ?/ and {dot: true}
    ✓ should match .b.c with ?/ and {nonegate: true}
    ✓ should match .b.c/ with ?/
    ✓ should match .b.c/ with ?/ and {dot: true}
    ✓ should match .b.c/ with ?/ and {nonegate: true}
    ✓ should match .b/ with ?/
    ✓ should match .b/ with ?/ and {dot: true}
    ✓ should match .b/ with ?/ and {nonegate: true}
    ✓ should match .b/.c with ?/
    ✓ should match .b/.c with ?/ and {dot: true}
    ✓ should match .b/.c with ?/ and {nonegate: true}
    ✓ should match .b/c with ?/
    ✓ should match .b/c with ?/ and {dot: true}
    ✓ should match .b/c with ?/ and {nonegate: true}
    ✓ should match b/.c with ?/
    ✓ should match b/.c with ?/ and {dot: true}
    ✓ should match b/.c with ?/ and {nonegate: true}
    ✓ should match b/.c/ with ?/
    ✓ should match b/.c/ with ?/ and {dot: true}
    ✓ should match b/.c/ with ?/ and {nonegate: true}
    ✓ should match a/+b/c with ?/
    ✓ should match a/+b/c with ?/ and {dot: true}
    ✓ should match a/+b/c with ?/ and {nonegate: true}
    ✓ should match +a/+b/c with ?/
    ✓ should match +a/+b/c with ?/ and {dot: true}
    ✓ should match +a/+b/c with ?/ and {nonegate: true}
    ✓ should match a (foo) with ?/
    ✓ should match a (foo) with ?/ and {dot: true}
    ✓ should match a (foo) with ?/ and {nonegate: true}
    ✓ should match a (foo)/(bar) with ?/
    ✓ should match a (foo)/(bar) with ?/ and {dot: true}
    ✓ should match a (foo)/(bar) with ?/ and {nonegate: true}
    ✓ should match a/b/c (1) with ?/
    ✓ should match a/b/c (1) with ?/ and {dot: true}
    ✓ should match a/b/c (1) with ?/ and {nonegate: true}
    ✓ should match a/b (2)/c (1) with ?/
    ✓ should match a/b (2)/c (1) with ?/ and {dot: true}
    ✓ should match a/b (2)/c (1) with ?/ and {nonegate: true}
    ✓ should match a/b/c [def] with ?/
    ✓ should match a/b/c [def] with ?/ and {dot: true}
    ✓ should match a/b/c [def] with ?/ and {nonegate: true}
    ✓ should match a with ?/.?
    ✓ should match a with ?/.? and {dot: true}
    ✓ should match a with ?/.? and {nonegate: true}
    ✓ should match a.md with ?/.?
    ✓ should match a.md with ?/.? and {dot: true}
    ✓ should match a.md with ?/.? and {nonegate: true}
    ✓ should match a.js with ?/.?
    ✓ should match a.js with ?/.? and {dot: true}
    ✓ should match a.js with ?/.? and {nonegate: true}
    ✓ should match a/ with ?/.?
    ✓ should match a/ with ?/.? and {dot: true}
    ✓ should match a/ with ?/.? and {nonegate: true}
    ✓ should match a/b with ?/.?
    ✓ should match a/b with ?/.? and {dot: true}
    ✓ should match a/b with ?/.? and {nonegate: true}
    ✓ should match a/b/.c.md with ?/.?
    ✓ should match a/b/.c.md with ?/.? and {dot: true}
    ✓ should match a/b/.c.md with ?/.? and {nonegate: true}
    ✓ should match a/b/c with ?/.?
    ✓ should match a/b/c with ?/.? and {dot: true}
    ✓ should match a/b/c with ?/.? and {nonegate: true}
    ✓ should match a/b/c.md with ?/.?
    ✓ should match a/b/c.md with ?/.? and {dot: true}
    ✓ should match a/b/c.md with ?/.? and {nonegate: true}
    ✓ should match a/b/c/ with ?/.?
    ✓ should match a/b/c/ with ?/.? and {dot: true}
    ✓ should match a/b/c/ with ?/.? and {nonegate: true}
    ✓ should match a/b/c/d with ?/.?
    ✓ should match a/b/c/d with ?/.? and {dot: true}
    ✓ should match a/b/c/d with ?/.? and {nonegate: true}
    ✓ should match a/b/c/d/ with ?/.?
    ✓ should match a/b/c/d/ with ?/.? and {dot: true}
    ✓ should match a/b/c/d/ with ?/.? and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with ?/.?
    ✓ should match a/b/c/d/e/f/z.js with ?/.? and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with ?/.? and {nonegate: true}
    ✓ should match a/b/c/z.js with ?/.?
    ✓ should match a/b/c/z.js with ?/.? and {dot: true}
    ✓ should match a/b/c/z.js with ?/.? and {nonegate: true}
    ✓ should match a/bb with ?/.?
    ✓ should match a/bb with ?/.? and {dot: true}
    ✓ should match a/bb with ?/.? and {nonegate: true}
    ✓ should match a/cb with ?/.?
    ✓ should match a/cb with ?/.? and {dot: true}
    ✓ should match a/cb with ?/.? and {nonegate: true}
    ✓ should match abbbz with ?/.?
    ✓ should match abbbz with ?/.? and {dot: true}
    ✓ should match abbbz with ?/.? and {nonegate: true}
    ✓ should match abc with ?/.?
    ✓ should match abc with ?/.? and {dot: true}
    ✓ should match abc with ?/.? and {nonegate: true}
    ✓ should match abd with ?/.?
    ✓ should match abd with ?/.? and {dot: true}
    ✓ should match abd with ?/.? and {nonegate: true}
    ✓ should match z.js with ?/.?
    ✓ should match z.js with ?/.? and {dot: true}
    ✓ should match z.js with ?/.? and {nonegate: true}
    ✓ should match za.js with ?/.?
    ✓ should match za.js with ?/.? and {dot: true}
    ✓ should match za.js with ?/.? and {nonegate: true}
    ✓ should match !a.js with ?/.?
    ✓ should match !a.js with ?/.? and {dot: true}
    ✓ should match !a.js with ?/.? and {nonegate: true}
    ✓ should match !a/b with ?/.?
    ✓ should match !a/b with ?/.? and {dot: true}
    ✓ should match !a/b with ?/.? and {nonegate: true}
    ✓ should match !a/b/ with ?/.?
    ✓ should match !a/b/ with ?/.? and {dot: true}
    ✓ should match !a/b/ with ?/.? and {nonegate: true}
    ✓ should match !a/b/c with ?/.?
    ✓ should match !a/b/c with ?/.? and {dot: true}
    ✓ should match !a/b/c with ?/.? and {nonegate: true}
    ✓ should match !a/b/c/ with ?/.?
    ✓ should match !a/b/c/ with ?/.? and {dot: true}
    ✓ should match !a/b/c/ with ?/.? and {nonegate: true}
    ✓ should match !a/!b with ?/.?
    ✓ should match !a/!b with ?/.? and {dot: true}
    ✓ should match !a/!b with ?/.? and {nonegate: true}
    ✓ should match !a/!b/c with ?/.?
    ✓ should match !a/!b/c with ?/.? and {dot: true}
    ✓ should match !a/!b/c with ?/.? and {nonegate: true}
    ✓ should match !a/!b/c/d with ?/.?
    ✓ should match !a/!b/c/d with ?/.? and {dot: true}
    ✓ should match !a/!b/c/d with ?/.? and {nonegate: true}
    ✓ should match !a/b/.c.md with ?/.?
    ✓ should match !a/b/.c.md with ?/.? and {dot: true}
    ✓ should match !a/b/.c.md with ?/.? and {nonegate: true}
    ✓ should match /a/ with ?/.?
    ✓ should match /a/ with ?/.? and {dot: true}
    ✓ should match /a/ with ?/.? and {nonegate: true}
    ✓ should match /a/b with ?/.?
    ✓ should match /a/b with ?/.? and {dot: true}
    ✓ should match /a/b with ?/.? and {nonegate: true}
    ✓ should match /a/cb with ?/.?
    ✓ should match /a/cb with ?/.? and {dot: true}
    ✓ should match /a/cb with ?/.? and {nonegate: true}
    ✓ should match /a/bb with ?/.?
    ✓ should match /a/bb with ?/.? and {dot: true}
    ✓ should match /a/bb with ?/.? and {nonegate: true}
    ✓ should match /a/b/c with ?/.?
    ✓ should match /a/b/c with ?/.? and {dot: true}
    ✓ should match /a/b/c with ?/.? and {nonegate: true}
    ✓ should match /a/b/c/ with ?/.?
    ✓ should match /a/b/c/ with ?/.? and {dot: true}
    ✓ should match /a/b/c/ with ?/.? and {nonegate: true}
    ✓ should match /a/b/c/d with ?/.?
    ✓ should match /a/b/c/d with ?/.? and {dot: true}
    ✓ should match /a/b/c/d with ?/.? and {nonegate: true}
    ✓ should match /a/b/c/d/ with ?/.?
    ✓ should match /a/b/c/d/ with ?/.? and {dot: true}
    ✓ should match /a/b/c/d/ with ?/.? and {nonegate: true}
    ✓ should match . with ?/.?
    ✓ should match . with ?/.? and {dot: true}
    ✓ should match . with ?/.? and {nonegate: true}
    ✓ should match ./ with ?/.?
    ✓ should match ./ with ?/.? and {dot: true}
    ✓ should match ./ with ?/.? and {nonegate: true}
    ✓ should match .. with ?/.?
    ✓ should match .. with ?/.? and {dot: true}
    ✓ should match .. with ?/.? and {nonegate: true}
    ✓ should match ../c with ?/.?
    ✓ should match ../c with ?/.? and {dot: true}
    ✓ should match ../c with ?/.? and {nonegate: true}
    ✓ should match ../c with ?/.?
    ✓ should match ../c with ?/.? and {dot: true}
    ✓ should match ../c with ?/.? and {nonegate: true}
    ✓ should match ./../c with ?/.?
    ✓ should match ./../c with ?/.? and {dot: true}
    ✓ should match ./../c with ?/.? and {nonegate: true}
    ✓ should match ./a/../c with ?/.?
    ✓ should match ./a/../c with ?/.? and {dot: true}
    ✓ should match ./a/../c with ?/.? and {nonegate: true}
    ✓ should match /.. with ?/.?
    ✓ should match /.. with ?/.? and {dot: true}
    ✓ should match /.. with ?/.? and {nonegate: true}
    ✓ should match /../c with ?/.?
    ✓ should match /../c with ?/.? and {dot: true}
    ✓ should match /../c with ?/.? and {nonegate: true}
    ✓ should match /../.c with ?/.?
    ✓ should match /../.c with ?/.? and {dot: true}
    ✓ should match /../.c with ?/.? and {nonegate: true}
    ✓ should match /../.c/ with ?/.?
    ✓ should match /../.c/ with ?/.? and {dot: true}
    ✓ should match /../.c/ with ?/.? and {nonegate: true}
    ✓ should match /a/../c with ?/.?
    ✓ should match /a/../c with ?/.? and {dot: true}
    ✓ should match /a/../c with ?/.? and {nonegate: true}
    ✓ should match a/../c with ?/.?
    ✓ should match a/../c with ?/.? and {dot: true}
    ✓ should match a/../c with ?/.? and {nonegate: true}
    ✓ should match ../.b/.c with ?/.?
    ✓ should match ../.b/.c with ?/.? and {dot: true}
    ✓ should match ../.b/.c with ?/.? and {nonegate: true}
    ✓ should match ../b/.c with ?/.?
    ✓ should match ../b/.c with ?/.? and {dot: true}
    ✓ should match ../b/.c with ?/.? and {nonegate: true}
    ✓ should match ./.b/.c with ?/.?
    ✓ should match ./.b/.c with ?/.? and {dot: true}
    ✓ should match ./.b/.c with ?/.? and {nonegate: true}
    ✓ should match ./b/.c with ?/.?
    ✓ should match ./b/.c with ?/.? and {dot: true}
    ✓ should match ./b/.c with ?/.? and {nonegate: true}
    ✓ should match .b with ?/.?
    ✓ should match .b with ?/.? and {dot: true}
    ✓ should match .b with ?/.? and {nonegate: true}
    ✓ should match .b.c with ?/.?
    ✓ should match .b.c with ?/.? and {dot: true}
    ✓ should match .b.c with ?/.? and {nonegate: true}
    ✓ should match .b.c/ with ?/.?
    ✓ should match .b.c/ with ?/.? and {dot: true}
    ✓ should match .b.c/ with ?/.? and {nonegate: true}
    ✓ should match .b/ with ?/.?
    ✓ should match .b/ with ?/.? and {dot: true}
    ✓ should match .b/ with ?/.? and {nonegate: true}
    ✓ should match .b/.c with ?/.?
    ✓ should match .b/.c with ?/.? and {dot: true}
    ✓ should match .b/.c with ?/.? and {nonegate: true}
    ✓ should match .b/c with ?/.?
    ✓ should match .b/c with ?/.? and {dot: true}
    ✓ should match .b/c with ?/.? and {nonegate: true}
    ✓ should match b/.c with ?/.?
    ✓ should match b/.c with ?/.? and {dot: true}
    ✓ should match b/.c with ?/.? and {nonegate: true}
    ✓ should match b/.c/ with ?/.?
    ✓ should match b/.c/ with ?/.? and {dot: true}
    ✓ should match b/.c/ with ?/.? and {nonegate: true}
    ✓ should match a/+b/c with ?/.?
    ✓ should match a/+b/c with ?/.? and {dot: true}
    ✓ should match a/+b/c with ?/.? and {nonegate: true}
    ✓ should match +a/+b/c with ?/.?
    ✓ should match +a/+b/c with ?/.? and {dot: true}
    ✓ should match +a/+b/c with ?/.? and {nonegate: true}
    ✓ should match a (foo) with ?/.?
    ✓ should match a (foo) with ?/.? and {dot: true}
    ✓ should match a (foo) with ?/.? and {nonegate: true}
    ✓ should match a (foo)/(bar) with ?/.?
    ✓ should match a (foo)/(bar) with ?/.? and {dot: true}
    ✓ should match a (foo)/(bar) with ?/.? and {nonegate: true}
    ✓ should match a/b/c (1) with ?/.?
    ✓ should match a/b/c (1) with ?/.? and {dot: true}
    ✓ should match a/b/c (1) with ?/.? and {nonegate: true}
    ✓ should match a/b (2)/c (1) with ?/.?
    ✓ should match a/b (2)/c (1) with ?/.? and {dot: true}
    ✓ should match a/b (2)/c (1) with ?/.? and {nonegate: true}
    ✓ should match a/b/c [def] with ?/.?
    ✓ should match a/b/c [def] with ?/.? and {dot: true}
    ✓ should match a/b/c [def] with ?/.? and {nonegate: true}
    ✓ should match a with ?/.?*
    ✓ should match a with ?/.?* and {dot: true}
    ✓ should match a with ?/.?* and {nonegate: true}
    ✓ should match a.md with ?/.?*
    ✓ should match a.md with ?/.?* and {dot: true}
    ✓ should match a.md with ?/.?* and {nonegate: true}
    ✓ should match a.js with ?/.?*
    ✓ should match a.js with ?/.?* and {dot: true}
    ✓ should match a.js with ?/.?* and {nonegate: true}
    ✓ should match a/ with ?/.?*
    ✓ should match a/ with ?/.?* and {dot: true}
    ✓ should match a/ with ?/.?* and {nonegate: true}
    ✓ should match a/b with ?/.?*
    ✓ should match a/b with ?/.?* and {dot: true}
    ✓ should match a/b with ?/.?* and {nonegate: true}
    ✓ should match a/b/.c.md with ?/.?*
    ✓ should match a/b/.c.md with ?/.?* and {dot: true}
    ✓ should match a/b/.c.md with ?/.?* and {nonegate: true}
    ✓ should match a/b/c with ?/.?*
    ✓ should match a/b/c with ?/.?* and {dot: true}
    ✓ should match a/b/c with ?/.?* and {nonegate: true}
    ✓ should match a/b/c.md with ?/.?*
    ✓ should match a/b/c.md with ?/.?* and {dot: true}
    ✓ should match a/b/c.md with ?/.?* and {nonegate: true}
    ✓ should match a/b/c/ with ?/.?*
    ✓ should match a/b/c/ with ?/.?* and {dot: true}
    ✓ should match a/b/c/ with ?/.?* and {nonegate: true}
    ✓ should match a/b/c/d with ?/.?*
    ✓ should match a/b/c/d with ?/.?* and {dot: true}
    ✓ should match a/b/c/d with ?/.?* and {nonegate: true}
    ✓ should match a/b/c/d/ with ?/.?*
    ✓ should match a/b/c/d/ with ?/.?* and {dot: true}
    ✓ should match a/b/c/d/ with ?/.?* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with ?/.?*
    ✓ should match a/b/c/d/e/f/z.js with ?/.?* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with ?/.?* and {nonegate: true}
    ✓ should match a/b/c/z.js with ?/.?*
    ✓ should match a/b/c/z.js with ?/.?* and {dot: true}
    ✓ should match a/b/c/z.js with ?/.?* and {nonegate: true}
    ✓ should match a/bb with ?/.?*
    ✓ should match a/bb with ?/.?* and {dot: true}
    ✓ should match a/bb with ?/.?* and {nonegate: true}
    ✓ should match a/cb with ?/.?*
    ✓ should match a/cb with ?/.?* and {dot: true}
    ✓ should match a/cb with ?/.?* and {nonegate: true}
    ✓ should match abbbz with ?/.?*
    ✓ should match abbbz with ?/.?* and {dot: true}
    ✓ should match abbbz with ?/.?* and {nonegate: true}
    ✓ should match abc with ?/.?*
    ✓ should match abc with ?/.?* and {dot: true}
    ✓ should match abc with ?/.?* and {nonegate: true}
    ✓ should match abd with ?/.?*
    ✓ should match abd with ?/.?* and {dot: true}
    ✓ should match abd with ?/.?* and {nonegate: true}
    ✓ should match z.js with ?/.?*
    ✓ should match z.js with ?/.?* and {dot: true}
    ✓ should match z.js with ?/.?* and {nonegate: true}
    ✓ should match za.js with ?/.?*
    ✓ should match za.js with ?/.?* and {dot: true}
    ✓ should match za.js with ?/.?* and {nonegate: true}
    ✓ should match !a.js with ?/.?*
    ✓ should match !a.js with ?/.?* and {dot: true}
    ✓ should match !a.js with ?/.?* and {nonegate: true}
    ✓ should match !a/b with ?/.?*
    ✓ should match !a/b with ?/.?* and {dot: true}
    ✓ should match !a/b with ?/.?* and {nonegate: true}
    ✓ should match !a/b/ with ?/.?*
    ✓ should match !a/b/ with ?/.?* and {dot: true}
    ✓ should match !a/b/ with ?/.?* and {nonegate: true}
    ✓ should match !a/b/c with ?/.?*
    ✓ should match !a/b/c with ?/.?* and {dot: true}
    ✓ should match !a/b/c with ?/.?* and {nonegate: true}
    ✓ should match !a/b/c/ with ?/.?*
    ✓ should match !a/b/c/ with ?/.?* and {dot: true}
    ✓ should match !a/b/c/ with ?/.?* and {nonegate: true}
    ✓ should match !a/!b with ?/.?*
    ✓ should match !a/!b with ?/.?* and {dot: true}
    ✓ should match !a/!b with ?/.?* and {nonegate: true}
    ✓ should match !a/!b/c with ?/.?*
    ✓ should match !a/!b/c with ?/.?* and {dot: true}
    ✓ should match !a/!b/c with ?/.?* and {nonegate: true}
    ✓ should match !a/!b/c/d with ?/.?*
    ✓ should match !a/!b/c/d with ?/.?* and {dot: true}
    ✓ should match !a/!b/c/d with ?/.?* and {nonegate: true}
    ✓ should match !a/b/.c.md with ?/.?*
    ✓ should match !a/b/.c.md with ?/.?* and {dot: true}
    ✓ should match !a/b/.c.md with ?/.?* and {nonegate: true}
    ✓ should match /a/ with ?/.?*
    ✓ should match /a/ with ?/.?* and {dot: true}
    ✓ should match /a/ with ?/.?* and {nonegate: true}
    ✓ should match /a/b with ?/.?*
    ✓ should match /a/b with ?/.?* and {dot: true}
    ✓ should match /a/b with ?/.?* and {nonegate: true}
    ✓ should match /a/cb with ?/.?*
    ✓ should match /a/cb with ?/.?* and {dot: true}
    ✓ should match /a/cb with ?/.?* and {nonegate: true}
    ✓ should match /a/bb with ?/.?*
    ✓ should match /a/bb with ?/.?* and {dot: true}
    ✓ should match /a/bb with ?/.?* and {nonegate: true}
    ✓ should match /a/b/c with ?/.?*
    ✓ should match /a/b/c with ?/.?* and {dot: true}
    ✓ should match /a/b/c with ?/.?* and {nonegate: true}
    ✓ should match /a/b/c/ with ?/.?*
    ✓ should match /a/b/c/ with ?/.?* and {dot: true}
    ✓ should match /a/b/c/ with ?/.?* and {nonegate: true}
    ✓ should match /a/b/c/d with ?/.?*
    ✓ should match /a/b/c/d with ?/.?* and {dot: true}
    ✓ should match /a/b/c/d with ?/.?* and {nonegate: true}
    ✓ should match /a/b/c/d/ with ?/.?*
    ✓ should match /a/b/c/d/ with ?/.?* and {dot: true}
    ✓ should match /a/b/c/d/ with ?/.?* and {nonegate: true}
    ✓ should match . with ?/.?*
    ✓ should match . with ?/.?* and {dot: true}
    ✓ should match . with ?/.?* and {nonegate: true}
    ✓ should match ./ with ?/.?*
    ✓ should match ./ with ?/.?* and {dot: true}
    ✓ should match ./ with ?/.?* and {nonegate: true}
    ✓ should match .. with ?/.?*
    ✓ should match .. with ?/.?* and {dot: true}
    ✓ should match .. with ?/.?* and {nonegate: true}
    ✓ should match ../c with ?/.?*
    ✓ should match ../c with ?/.?* and {dot: true}
    ✓ should match ../c with ?/.?* and {nonegate: true}
    ✓ should match ../c with ?/.?*
    ✓ should match ../c with ?/.?* and {dot: true}
    ✓ should match ../c with ?/.?* and {nonegate: true}
    ✓ should match ./../c with ?/.?*
    ✓ should match ./../c with ?/.?* and {dot: true}
    ✓ should match ./../c with ?/.?* and {nonegate: true}
    ✓ should match ./a/../c with ?/.?*
    ✓ should match ./a/../c with ?/.?* and {dot: true}
    ✓ should match ./a/../c with ?/.?* and {nonegate: true}
    ✓ should match /.. with ?/.?*
    ✓ should match /.. with ?/.?* and {dot: true}
    ✓ should match /.. with ?/.?* and {nonegate: true}
    ✓ should match /../c with ?/.?*
    ✓ should match /../c with ?/.?* and {dot: true}
    ✓ should match /../c with ?/.?* and {nonegate: true}
    ✓ should match /../.c with ?/.?*
    ✓ should match /../.c with ?/.?* and {dot: true}
    ✓ should match /../.c with ?/.?* and {nonegate: true}
    ✓ should match /../.c/ with ?/.?*
    ✓ should match /../.c/ with ?/.?* and {dot: true}
    ✓ should match /../.c/ with ?/.?* and {nonegate: true}
    ✓ should match /a/../c with ?/.?*
    ✓ should match /a/../c with ?/.?* and {dot: true}
    ✓ should match /a/../c with ?/.?* and {nonegate: true}
    ✓ should match a/../c with ?/.?*
    ✓ should match a/../c with ?/.?* and {dot: true}
    ✓ should match a/../c with ?/.?* and {nonegate: true}
    ✓ should match ../.b/.c with ?/.?*
    ✓ should match ../.b/.c with ?/.?* and {dot: true}
    ✓ should match ../.b/.c with ?/.?* and {nonegate: true}
    ✓ should match ../b/.c with ?/.?*
    ✓ should match ../b/.c with ?/.?* and {dot: true}
    ✓ should match ../b/.c with ?/.?* and {nonegate: true}
    ✓ should match ./.b/.c with ?/.?*
    ✓ should match ./.b/.c with ?/.?* and {dot: true}
    ✓ should match ./.b/.c with ?/.?* and {nonegate: true}
    ✓ should match ./b/.c with ?/.?*
    ✓ should match ./b/.c with ?/.?* and {dot: true}
    ✓ should match ./b/.c with ?/.?* and {nonegate: true}
    ✓ should match .b with ?/.?*
    ✓ should match .b with ?/.?* and {dot: true}
    ✓ should match .b with ?/.?* and {nonegate: true}
    ✓ should match .b.c with ?/.?*
    ✓ should match .b.c with ?/.?* and {dot: true}
    ✓ should match .b.c with ?/.?* and {nonegate: true}
    ✓ should match .b.c/ with ?/.?*
    ✓ should match .b.c/ with ?/.?* and {dot: true}
    ✓ should match .b.c/ with ?/.?* and {nonegate: true}
    ✓ should match .b/ with ?/.?*
    ✓ should match .b/ with ?/.?* and {dot: true}
    ✓ should match .b/ with ?/.?* and {nonegate: true}
    ✓ should match .b/.c with ?/.?*
    ✓ should match .b/.c with ?/.?* and {dot: true}
    ✓ should match .b/.c with ?/.?* and {nonegate: true}
    ✓ should match .b/c with ?/.?*
    ✓ should match .b/c with ?/.?* and {dot: true}
    ✓ should match .b/c with ?/.?* and {nonegate: true}
    ✓ should match b/.c with ?/.?*
    ✓ should match b/.c with ?/.?* and {dot: true}
    ✓ should match b/.c with ?/.?* and {nonegate: true}
    ✓ should match b/.c/ with ?/.?*
    ✓ should match b/.c/ with ?/.?* and {dot: true}
    ✓ should match b/.c/ with ?/.?* and {nonegate: true}
    ✓ should match a/+b/c with ?/.?*
    ✓ should match a/+b/c with ?/.?* and {dot: true}
    ✓ should match a/+b/c with ?/.?* and {nonegate: true}
    ✓ should match +a/+b/c with ?/.?*
    ✓ should match +a/+b/c with ?/.?* and {dot: true}
    ✓ should match +a/+b/c with ?/.?* and {nonegate: true}
    ✓ should match a (foo) with ?/.?*
    ✓ should match a (foo) with ?/.?* and {dot: true}
    ✓ should match a (foo) with ?/.?* and {nonegate: true}
    ✓ should match a (foo)/(bar) with ?/.?*
    ✓ should match a (foo)/(bar) with ?/.?* and {dot: true}
    ✓ should match a (foo)/(bar) with ?/.?* and {nonegate: true}
    ✓ should match a/b/c (1) with ?/.?*
    ✓ should match a/b/c (1) with ?/.?* and {dot: true}
    ✓ should match a/b/c (1) with ?/.?* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with ?/.?*
    ✓ should match a/b (2)/c (1) with ?/.?* and {dot: true}
    ✓ should match a/b (2)/c (1) with ?/.?* and {nonegate: true}
    ✓ should match a/b/c [def] with ?/.?*
    ✓ should match a/b/c [def] with ?/.?* and {dot: true}
    ✓ should match a/b/c [def] with ?/.?* and {nonegate: true}
    ✓ should match a with ?/?
    ✓ should match a with ?/? and {dot: true}
    ✓ should match a with ?/? and {nonegate: true}
    ✓ should match a.md with ?/?
    ✓ should match a.md with ?/? and {dot: true}
    ✓ should match a.md with ?/? and {nonegate: true}
    ✓ should match a.js with ?/?
    ✓ should match a.js with ?/? and {dot: true}
    ✓ should match a.js with ?/? and {nonegate: true}
    ✓ should match a/ with ?/?
    ✓ should match a/ with ?/? and {dot: true}
    ✓ should match a/ with ?/? and {nonegate: true}
    ✓ should match a/b with ?/?
    ✓ should match a/b with ?/? and {dot: true}
    ✓ should match a/b with ?/? and {nonegate: true}
    ✓ should match a/b/.c.md with ?/?
    ✓ should match a/b/.c.md with ?/? and {dot: true}
    ✓ should match a/b/.c.md with ?/? and {nonegate: true}
    ✓ should match a/b/c with ?/?
    ✓ should match a/b/c with ?/? and {dot: true}
    ✓ should match a/b/c with ?/? and {nonegate: true}
    ✓ should match a/b/c.md with ?/?
    ✓ should match a/b/c.md with ?/? and {dot: true}
    ✓ should match a/b/c.md with ?/? and {nonegate: true}
    ✓ should match a/b/c/ with ?/?
    ✓ should match a/b/c/ with ?/? and {dot: true}
    ✓ should match a/b/c/ with ?/? and {nonegate: true}
    ✓ should match a/b/c/d with ?/?
    ✓ should match a/b/c/d with ?/? and {dot: true}
    ✓ should match a/b/c/d with ?/? and {nonegate: true}
    ✓ should match a/b/c/d/ with ?/?
    ✓ should match a/b/c/d/ with ?/? and {dot: true}
    ✓ should match a/b/c/d/ with ?/? and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with ?/?
    ✓ should match a/b/c/d/e/f/z.js with ?/? and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with ?/? and {nonegate: true}
    ✓ should match a/b/c/z.js with ?/?
    ✓ should match a/b/c/z.js with ?/? and {dot: true}
    ✓ should match a/b/c/z.js with ?/? and {nonegate: true}
    ✓ should match a/bb with ?/?
    ✓ should match a/bb with ?/? and {dot: true}
    ✓ should match a/bb with ?/? and {nonegate: true}
    ✓ should match a/cb with ?/?
    ✓ should match a/cb with ?/? and {dot: true}
    ✓ should match a/cb with ?/? and {nonegate: true}
    ✓ should match abbbz with ?/?
    ✓ should match abbbz with ?/? and {dot: true}
    ✓ should match abbbz with ?/? and {nonegate: true}
    ✓ should match abc with ?/?
    ✓ should match abc with ?/? and {dot: true}
    ✓ should match abc with ?/? and {nonegate: true}
    ✓ should match abd with ?/?
    ✓ should match abd with ?/? and {dot: true}
    ✓ should match abd with ?/? and {nonegate: true}
    ✓ should match z.js with ?/?
    ✓ should match z.js with ?/? and {dot: true}
    ✓ should match z.js with ?/? and {nonegate: true}
    ✓ should match za.js with ?/?
    ✓ should match za.js with ?/? and {dot: true}
    ✓ should match za.js with ?/? and {nonegate: true}
    ✓ should match !a.js with ?/?
    ✓ should match !a.js with ?/? and {dot: true}
    ✓ should match !a.js with ?/? and {nonegate: true}
    ✓ should match !a/b with ?/?
    ✓ should match !a/b with ?/? and {dot: true}
    ✓ should match !a/b with ?/? and {nonegate: true}
    ✓ should match !a/b/ with ?/?
    ✓ should match !a/b/ with ?/? and {dot: true}
    ✓ should match !a/b/ with ?/? and {nonegate: true}
    ✓ should match !a/b/c with ?/?
    ✓ should match !a/b/c with ?/? and {dot: true}
    ✓ should match !a/b/c with ?/? and {nonegate: true}
    ✓ should match !a/b/c/ with ?/?
    ✓ should match !a/b/c/ with ?/? and {dot: true}
    ✓ should match !a/b/c/ with ?/? and {nonegate: true}
    ✓ should match !a/!b with ?/?
    ✓ should match !a/!b with ?/? and {dot: true}
    ✓ should match !a/!b with ?/? and {nonegate: true}
    ✓ should match !a/!b/c with ?/?
    ✓ should match !a/!b/c with ?/? and {dot: true}
    ✓ should match !a/!b/c with ?/? and {nonegate: true}
    ✓ should match !a/!b/c/d with ?/?
    ✓ should match !a/!b/c/d with ?/? and {dot: true}
    ✓ should match !a/!b/c/d with ?/? and {nonegate: true}
    ✓ should match !a/b/.c.md with ?/?
    ✓ should match !a/b/.c.md with ?/? and {dot: true}
    ✓ should match !a/b/.c.md with ?/? and {nonegate: true}
    ✓ should match /a/ with ?/?
    ✓ should match /a/ with ?/? and {dot: true}
    ✓ should match /a/ with ?/? and {nonegate: true}
    ✓ should match /a/b with ?/?
    ✓ should match /a/b with ?/? and {dot: true}
    ✓ should match /a/b with ?/? and {nonegate: true}
    ✓ should match /a/cb with ?/?
    ✓ should match /a/cb with ?/? and {dot: true}
    ✓ should match /a/cb with ?/? and {nonegate: true}
    ✓ should match /a/bb with ?/?
    ✓ should match /a/bb with ?/? and {dot: true}
    ✓ should match /a/bb with ?/? and {nonegate: true}
    ✓ should match /a/b/c with ?/?
    ✓ should match /a/b/c with ?/? and {dot: true}
    ✓ should match /a/b/c with ?/? and {nonegate: true}
    ✓ should match /a/b/c/ with ?/?
    ✓ should match /a/b/c/ with ?/? and {dot: true}
    ✓ should match /a/b/c/ with ?/? and {nonegate: true}
    ✓ should match /a/b/c/d with ?/?
    ✓ should match /a/b/c/d with ?/? and {dot: true}
    ✓ should match /a/b/c/d with ?/? and {nonegate: true}
    ✓ should match /a/b/c/d/ with ?/?
    ✓ should match /a/b/c/d/ with ?/? and {dot: true}
    ✓ should match /a/b/c/d/ with ?/? and {nonegate: true}
    ✓ should match . with ?/?
    ✓ should match . with ?/? and {dot: true}
    ✓ should match . with ?/? and {nonegate: true}
    ✓ should match ./ with ?/?
    ✓ should match ./ with ?/? and {dot: true}
    ✓ should match ./ with ?/? and {nonegate: true}
    ✓ should match .. with ?/?
    ✓ should match .. with ?/? and {dot: true}
    ✓ should match .. with ?/? and {nonegate: true}
    ✓ should match ../c with ?/?
    ✓ should match ../c with ?/? and {dot: true}
    ✓ should match ../c with ?/? and {nonegate: true}
    ✓ should match ../c with ?/?
    ✓ should match ../c with ?/? and {dot: true}
    ✓ should match ../c with ?/? and {nonegate: true}
    ✓ should match ./../c with ?/?
    ✓ should match ./../c with ?/? and {dot: true}
    ✓ should match ./../c with ?/? and {nonegate: true}
    ✓ should match ./a/../c with ?/?
    ✓ should match ./a/../c with ?/? and {dot: true}
    ✓ should match ./a/../c with ?/? and {nonegate: true}
    ✓ should match /.. with ?/?
    ✓ should match /.. with ?/? and {dot: true}
    ✓ should match /.. with ?/? and {nonegate: true}
    ✓ should match /../c with ?/?
    ✓ should match /../c with ?/? and {dot: true}
    ✓ should match /../c with ?/? and {nonegate: true}
    ✓ should match /../.c with ?/?
    ✓ should match /../.c with ?/? and {dot: true}
    ✓ should match /../.c with ?/? and {nonegate: true}
    ✓ should match /../.c/ with ?/?
    ✓ should match /../.c/ with ?/? and {dot: true}
    ✓ should match /../.c/ with ?/? and {nonegate: true}
    ✓ should match /a/../c with ?/?
    ✓ should match /a/../c with ?/? and {dot: true}
    ✓ should match /a/../c with ?/? and {nonegate: true}
    ✓ should match a/../c with ?/?
    ✓ should match a/../c with ?/? and {dot: true}
    ✓ should match a/../c with ?/? and {nonegate: true}
    ✓ should match ../.b/.c with ?/?
    ✓ should match ../.b/.c with ?/? and {dot: true}
    ✓ should match ../.b/.c with ?/? and {nonegate: true}
    ✓ should match ../b/.c with ?/?
    ✓ should match ../b/.c with ?/? and {dot: true}
    ✓ should match ../b/.c with ?/? and {nonegate: true}
    ✓ should match ./.b/.c with ?/?
    ✓ should match ./.b/.c with ?/? and {dot: true}
    ✓ should match ./.b/.c with ?/? and {nonegate: true}
    ✓ should match ./b/.c with ?/?
    ✓ should match ./b/.c with ?/? and {dot: true}
    ✓ should match ./b/.c with ?/? and {nonegate: true}
    ✓ should match .b with ?/?
    ✓ should match .b with ?/? and {dot: true}
    ✓ should match .b with ?/? and {nonegate: true}
    ✓ should match .b.c with ?/?
    ✓ should match .b.c with ?/? and {dot: true}
    ✓ should match .b.c with ?/? and {nonegate: true}
    ✓ should match .b.c/ with ?/?
    ✓ should match .b.c/ with ?/? and {dot: true}
    ✓ should match .b.c/ with ?/? and {nonegate: true}
    ✓ should match .b/ with ?/?
    ✓ should match .b/ with ?/? and {dot: true}
    ✓ should match .b/ with ?/? and {nonegate: true}
    ✓ should match .b/.c with ?/?
    ✓ should match .b/.c with ?/? and {dot: true}
    ✓ should match .b/.c with ?/? and {nonegate: true}
    ✓ should match .b/c with ?/?
    ✓ should match .b/c with ?/? and {dot: true}
    ✓ should match .b/c with ?/? and {nonegate: true}
    ✓ should match b/.c with ?/?
    ✓ should match b/.c with ?/? and {dot: true}
    ✓ should match b/.c with ?/? and {nonegate: true}
    ✓ should match b/.c/ with ?/?
    ✓ should match b/.c/ with ?/? and {dot: true}
    ✓ should match b/.c/ with ?/? and {nonegate: true}
    ✓ should match a/+b/c with ?/?
    ✓ should match a/+b/c with ?/? and {dot: true}
    ✓ should match a/+b/c with ?/? and {nonegate: true}
    ✓ should match +a/+b/c with ?/?
    ✓ should match +a/+b/c with ?/? and {dot: true}
    ✓ should match +a/+b/c with ?/? and {nonegate: true}
    ✓ should match a (foo) with ?/?
    ✓ should match a (foo) with ?/? and {dot: true}
    ✓ should match a (foo) with ?/? and {nonegate: true}
    ✓ should match a (foo)/(bar) with ?/?
    ✓ should match a (foo)/(bar) with ?/? and {dot: true}
    ✓ should match a (foo)/(bar) with ?/? and {nonegate: true}
    ✓ should match a/b/c (1) with ?/?
    ✓ should match a/b/c (1) with ?/? and {dot: true}
    ✓ should match a/b/c (1) with ?/? and {nonegate: true}
    ✓ should match a/b (2)/c (1) with ?/?
    ✓ should match a/b (2)/c (1) with ?/? and {dot: true}
    ✓ should match a/b (2)/c (1) with ?/? and {nonegate: true}
    ✓ should match a/b/c [def] with ?/?
    ✓ should match a/b/c [def] with ?/? and {dot: true}
    ✓ should match a/b/c [def] with ?/? and {nonegate: true}
    ✓ should match a with ?/?/?
    ✓ should match a with ?/?/? and {dot: true}
    ✓ should match a with ?/?/? and {nonegate: true}
    ✓ should match a.md with ?/?/?
    ✓ should match a.md with ?/?/? and {dot: true}
    ✓ should match a.md with ?/?/? and {nonegate: true}
    ✓ should match a.js with ?/?/?
    ✓ should match a.js with ?/?/? and {dot: true}
    ✓ should match a.js with ?/?/? and {nonegate: true}
    ✓ should match a/ with ?/?/?
    ✓ should match a/ with ?/?/? and {dot: true}
    ✓ should match a/ with ?/?/? and {nonegate: true}
    ✓ should match a/b with ?/?/?
    ✓ should match a/b with ?/?/? and {dot: true}
    ✓ should match a/b with ?/?/? and {nonegate: true}
    ✓ should match a/b/.c.md with ?/?/?
    ✓ should match a/b/.c.md with ?/?/? and {dot: true}
    ✓ should match a/b/.c.md with ?/?/? and {nonegate: true}
    ✓ should match a/b/c with ?/?/?
    ✓ should match a/b/c with ?/?/? and {dot: true}
    ✓ should match a/b/c with ?/?/? and {nonegate: true}
    ✓ should match a/b/c.md with ?/?/?
    ✓ should match a/b/c.md with ?/?/? and {dot: true}
    ✓ should match a/b/c.md with ?/?/? and {nonegate: true}
    ✓ should match a/b/c/ with ?/?/?
    ✓ should match a/b/c/ with ?/?/? and {dot: true}
    ✓ should match a/b/c/ with ?/?/? and {nonegate: true}
    ✓ should match a/b/c/d with ?/?/?
    ✓ should match a/b/c/d with ?/?/? and {dot: true}
    ✓ should match a/b/c/d with ?/?/? and {nonegate: true}
    ✓ should match a/b/c/d/ with ?/?/?
    ✓ should match a/b/c/d/ with ?/?/? and {dot: true}
    ✓ should match a/b/c/d/ with ?/?/? and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with ?/?/?
    ✓ should match a/b/c/d/e/f/z.js with ?/?/? and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with ?/?/? and {nonegate: true}
    ✓ should match a/b/c/z.js with ?/?/?
    ✓ should match a/b/c/z.js with ?/?/? and {dot: true}
    ✓ should match a/b/c/z.js with ?/?/? and {nonegate: true}
    ✓ should match a/bb with ?/?/?
    ✓ should match a/bb with ?/?/? and {dot: true}
    ✓ should match a/bb with ?/?/? and {nonegate: true}
    ✓ should match a/cb with ?/?/?
    ✓ should match a/cb with ?/?/? and {dot: true}
    ✓ should match a/cb with ?/?/? and {nonegate: true}
    ✓ should match abbbz with ?/?/?
    ✓ should match abbbz with ?/?/? and {dot: true}
    ✓ should match abbbz with ?/?/? and {nonegate: true}
    ✓ should match abc with ?/?/?
    ✓ should match abc with ?/?/? and {dot: true}
    ✓ should match abc with ?/?/? and {nonegate: true}
    ✓ should match abd with ?/?/?
    ✓ should match abd with ?/?/? and {dot: true}
    ✓ should match abd with ?/?/? and {nonegate: true}
    ✓ should match z.js with ?/?/?
    ✓ should match z.js with ?/?/? and {dot: true}
    ✓ should match z.js with ?/?/? and {nonegate: true}
    ✓ should match za.js with ?/?/?
    ✓ should match za.js with ?/?/? and {dot: true}
    ✓ should match za.js with ?/?/? and {nonegate: true}
    ✓ should match !a.js with ?/?/?
    ✓ should match !a.js with ?/?/? and {dot: true}
    ✓ should match !a.js with ?/?/? and {nonegate: true}
    ✓ should match !a/b with ?/?/?
    ✓ should match !a/b with ?/?/? and {dot: true}
    ✓ should match !a/b with ?/?/? and {nonegate: true}
    ✓ should match !a/b/ with ?/?/?
    ✓ should match !a/b/ with ?/?/? and {dot: true}
    ✓ should match !a/b/ with ?/?/? and {nonegate: true}
    ✓ should match !a/b/c with ?/?/?
    ✓ should match !a/b/c with ?/?/? and {dot: true}
    ✓ should match !a/b/c with ?/?/? and {nonegate: true}
    ✓ should match !a/b/c/ with ?/?/?
    ✓ should match !a/b/c/ with ?/?/? and {dot: true}
    ✓ should match !a/b/c/ with ?/?/? and {nonegate: true}
    ✓ should match !a/!b with ?/?/?
    ✓ should match !a/!b with ?/?/? and {dot: true}
    ✓ should match !a/!b with ?/?/? and {nonegate: true}
    ✓ should match !a/!b/c with ?/?/?
    ✓ should match !a/!b/c with ?/?/? and {dot: true}
    ✓ should match !a/!b/c with ?/?/? and {nonegate: true}
    ✓ should match !a/!b/c/d with ?/?/?
    ✓ should match !a/!b/c/d with ?/?/? and {dot: true}
    ✓ should match !a/!b/c/d with ?/?/? and {nonegate: true}
    ✓ should match !a/b/.c.md with ?/?/?
    ✓ should match !a/b/.c.md with ?/?/? and {dot: true}
    ✓ should match !a/b/.c.md with ?/?/? and {nonegate: true}
    ✓ should match /a/ with ?/?/?
    ✓ should match /a/ with ?/?/? and {dot: true}
    ✓ should match /a/ with ?/?/? and {nonegate: true}
    ✓ should match /a/b with ?/?/?
    ✓ should match /a/b with ?/?/? and {dot: true}
    ✓ should match /a/b with ?/?/? and {nonegate: true}
    ✓ should match /a/cb with ?/?/?
    ✓ should match /a/cb with ?/?/? and {dot: true}
    ✓ should match /a/cb with ?/?/? and {nonegate: true}
    ✓ should match /a/bb with ?/?/?
    ✓ should match /a/bb with ?/?/? and {dot: true}
    ✓ should match /a/bb with ?/?/? and {nonegate: true}
    ✓ should match /a/b/c with ?/?/?
    ✓ should match /a/b/c with ?/?/? and {dot: true}
    ✓ should match /a/b/c with ?/?/? and {nonegate: true}
    ✓ should match /a/b/c/ with ?/?/?
    ✓ should match /a/b/c/ with ?/?/? and {dot: true}
    ✓ should match /a/b/c/ with ?/?/? and {nonegate: true}
    ✓ should match /a/b/c/d with ?/?/?
    ✓ should match /a/b/c/d with ?/?/? and {dot: true}
    ✓ should match /a/b/c/d with ?/?/? and {nonegate: true}
    ✓ should match /a/b/c/d/ with ?/?/?
    ✓ should match /a/b/c/d/ with ?/?/? and {dot: true}
    ✓ should match /a/b/c/d/ with ?/?/? and {nonegate: true}
    ✓ should match . with ?/?/?
    ✓ should match . with ?/?/? and {dot: true}
    ✓ should match . with ?/?/? and {nonegate: true}
    ✓ should match ./ with ?/?/?
    ✓ should match ./ with ?/?/? and {dot: true}
    ✓ should match ./ with ?/?/? and {nonegate: true}
    ✓ should match .. with ?/?/?
    ✓ should match .. with ?/?/? and {dot: true}
    ✓ should match .. with ?/?/? and {nonegate: true}
    ✓ should match ../c with ?/?/?
    ✓ should match ../c with ?/?/? and {dot: true}
    ✓ should match ../c with ?/?/? and {nonegate: true}
    ✓ should match ../c with ?/?/?
    ✓ should match ../c with ?/?/? and {dot: true}
    ✓ should match ../c with ?/?/? and {nonegate: true}
    ✓ should match ./../c with ?/?/?
    ✓ should match ./../c with ?/?/? and {dot: true}
    ✓ should match ./../c with ?/?/? and {nonegate: true}
    ✓ should match ./a/../c with ?/?/?
    ✓ should match ./a/../c with ?/?/? and {dot: true}
    ✓ should match ./a/../c with ?/?/? and {nonegate: true}
    ✓ should match /.. with ?/?/?
    ✓ should match /.. with ?/?/? and {dot: true}
    ✓ should match /.. with ?/?/? and {nonegate: true}
    ✓ should match /../c with ?/?/?
    ✓ should match /../c with ?/?/? and {dot: true}
    ✓ should match /../c with ?/?/? and {nonegate: true}
    ✓ should match /../.c with ?/?/?
    ✓ should match /../.c with ?/?/? and {dot: true}
    ✓ should match /../.c with ?/?/? and {nonegate: true}
    ✓ should match /../.c/ with ?/?/?
    ✓ should match /../.c/ with ?/?/? and {dot: true}
    ✓ should match /../.c/ with ?/?/? and {nonegate: true}
    ✓ should match /a/../c with ?/?/?
    ✓ should match /a/../c with ?/?/? and {dot: true}
    ✓ should match /a/../c with ?/?/? and {nonegate: true}
    ✓ should match a/../c with ?/?/?
    ✓ should match a/../c with ?/?/? and {dot: true}
    ✓ should match a/../c with ?/?/? and {nonegate: true}
    ✓ should match ../.b/.c with ?/?/?
    ✓ should match ../.b/.c with ?/?/? and {dot: true}
    ✓ should match ../.b/.c with ?/?/? and {nonegate: true}
    ✓ should match ../b/.c with ?/?/?
    ✓ should match ../b/.c with ?/?/? and {dot: true}
    ✓ should match ../b/.c with ?/?/? and {nonegate: true}
    ✓ should match ./.b/.c with ?/?/?
    ✓ should match ./.b/.c with ?/?/? and {dot: true}
    ✓ should match ./.b/.c with ?/?/? and {nonegate: true}
    ✓ should match ./b/.c with ?/?/?
    ✓ should match ./b/.c with ?/?/? and {dot: true}
    ✓ should match ./b/.c with ?/?/? and {nonegate: true}
    ✓ should match .b with ?/?/?
    ✓ should match .b with ?/?/? and {dot: true}
    ✓ should match .b with ?/?/? and {nonegate: true}
    ✓ should match .b.c with ?/?/?
    ✓ should match .b.c with ?/?/? and {dot: true}
    ✓ should match .b.c with ?/?/? and {nonegate: true}
    ✓ should match .b.c/ with ?/?/?
    ✓ should match .b.c/ with ?/?/? and {dot: true}
    ✓ should match .b.c/ with ?/?/? and {nonegate: true}
    ✓ should match .b/ with ?/?/?
    ✓ should match .b/ with ?/?/? and {dot: true}
    ✓ should match .b/ with ?/?/? and {nonegate: true}
    ✓ should match .b/.c with ?/?/?
    ✓ should match .b/.c with ?/?/? and {dot: true}
    ✓ should match .b/.c with ?/?/? and {nonegate: true}
    ✓ should match .b/c with ?/?/?
    ✓ should match .b/c with ?/?/? and {dot: true}
    ✓ should match .b/c with ?/?/? and {nonegate: true}
    ✓ should match b/.c with ?/?/?
    ✓ should match b/.c with ?/?/? and {dot: true}
    ✓ should match b/.c with ?/?/? and {nonegate: true}
    ✓ should match b/.c/ with ?/?/?
    ✓ should match b/.c/ with ?/?/? and {dot: true}
    ✓ should match b/.c/ with ?/?/? and {nonegate: true}
    ✓ should match a/+b/c with ?/?/?
    ✓ should match a/+b/c with ?/?/? and {dot: true}
    ✓ should match a/+b/c with ?/?/? and {nonegate: true}
    ✓ should match +a/+b/c with ?/?/?
    ✓ should match +a/+b/c with ?/?/? and {dot: true}
    ✓ should match +a/+b/c with ?/?/? and {nonegate: true}
    ✓ should match a (foo) with ?/?/?
    ✓ should match a (foo) with ?/?/? and {dot: true}
    ✓ should match a (foo) with ?/?/? and {nonegate: true}
    ✓ should match a (foo)/(bar) with ?/?/?
    ✓ should match a (foo)/(bar) with ?/?/? and {dot: true}
    ✓ should match a (foo)/(bar) with ?/?/? and {nonegate: true}
    ✓ should match a/b/c (1) with ?/?/?
    ✓ should match a/b/c (1) with ?/?/? and {dot: true}
    ✓ should match a/b/c (1) with ?/?/? and {nonegate: true}
    ✓ should match a/b (2)/c (1) with ?/?/?
    ✓ should match a/b (2)/c (1) with ?/?/? and {dot: true}
    ✓ should match a/b (2)/c (1) with ?/?/? and {nonegate: true}
    ✓ should match a/b/c [def] with ?/?/?
    ✓ should match a/b/c [def] with ?/?/? and {dot: true}
    ✓ should match a/b/c [def] with ?/?/? and {nonegate: true}
    ✓ should match a with ??
    ✓ should match a with ?? and {dot: true}
    ✓ should match a with ?? and {nonegate: true}
    ✓ should match a.md with ??
    ✓ should match a.md with ?? and {dot: true}
    ✓ should match a.md with ?? and {nonegate: true}
    ✓ should match a.js with ??
    ✓ should match a.js with ?? and {dot: true}
    ✓ should match a.js with ?? and {nonegate: true}
    ✓ should match a/ with ??
    ✓ should match a/ with ?? and {dot: true}
    ✓ should match a/ with ?? and {nonegate: true}
    ✓ should match a/b with ??
    ✓ should match a/b with ?? and {dot: true}
    ✓ should match a/b with ?? and {nonegate: true}
    ✓ should match a/b/.c.md with ??
    ✓ should match a/b/.c.md with ?? and {dot: true}
    ✓ should match a/b/.c.md with ?? and {nonegate: true}
    ✓ should match a/b/c with ??
    ✓ should match a/b/c with ?? and {dot: true}
    ✓ should match a/b/c with ?? and {nonegate: true}
    ✓ should match a/b/c.md with ??
    ✓ should match a/b/c.md with ?? and {dot: true}
    ✓ should match a/b/c.md with ?? and {nonegate: true}
    ✓ should match a/b/c/ with ??
    ✓ should match a/b/c/ with ?? and {dot: true}
    ✓ should match a/b/c/ with ?? and {nonegate: true}
    ✓ should match a/b/c/d with ??
    ✓ should match a/b/c/d with ?? and {dot: true}
    ✓ should match a/b/c/d with ?? and {nonegate: true}
    ✓ should match a/b/c/d/ with ??
    ✓ should match a/b/c/d/ with ?? and {dot: true}
    ✓ should match a/b/c/d/ with ?? and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with ??
    ✓ should match a/b/c/d/e/f/z.js with ?? and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with ?? and {nonegate: true}
    ✓ should match a/b/c/z.js with ??
    ✓ should match a/b/c/z.js with ?? and {dot: true}
    ✓ should match a/b/c/z.js with ?? and {nonegate: true}
    ✓ should match a/bb with ??
    ✓ should match a/bb with ?? and {dot: true}
    ✓ should match a/bb with ?? and {nonegate: true}
    ✓ should match a/cb with ??
    ✓ should match a/cb with ?? and {dot: true}
    ✓ should match a/cb with ?? and {nonegate: true}
    ✓ should match abbbz with ??
    ✓ should match abbbz with ?? and {dot: true}
    ✓ should match abbbz with ?? and {nonegate: true}
    ✓ should match abc with ??
    ✓ should match abc with ?? and {dot: true}
    ✓ should match abc with ?? and {nonegate: true}
    ✓ should match abd with ??
    ✓ should match abd with ?? and {dot: true}
    ✓ should match abd with ?? and {nonegate: true}
    ✓ should match z.js with ??
    ✓ should match z.js with ?? and {dot: true}
    ✓ should match z.js with ?? and {nonegate: true}
    ✓ should match za.js with ??
    ✓ should match za.js with ?? and {dot: true}
    ✓ should match za.js with ?? and {nonegate: true}
    ✓ should match !a.js with ??
    ✓ should match !a.js with ?? and {dot: true}
    ✓ should match !a.js with ?? and {nonegate: true}
    ✓ should match !a/b with ??
    ✓ should match !a/b with ?? and {dot: true}
    ✓ should match !a/b with ?? and {nonegate: true}
    ✓ should match !a/b/ with ??
    ✓ should match !a/b/ with ?? and {dot: true}
    ✓ should match !a/b/ with ?? and {nonegate: true}
    ✓ should match !a/b/c with ??
    ✓ should match !a/b/c with ?? and {dot: true}
    ✓ should match !a/b/c with ?? and {nonegate: true}
    ✓ should match !a/b/c/ with ??
    ✓ should match !a/b/c/ with ?? and {dot: true}
    ✓ should match !a/b/c/ with ?? and {nonegate: true}
    ✓ should match !a/!b with ??
    ✓ should match !a/!b with ?? and {dot: true}
    ✓ should match !a/!b with ?? and {nonegate: true}
    ✓ should match !a/!b/c with ??
    ✓ should match !a/!b/c with ?? and {dot: true}
    ✓ should match !a/!b/c with ?? and {nonegate: true}
    ✓ should match !a/!b/c/d with ??
    ✓ should match !a/!b/c/d with ?? and {dot: true}
    ✓ should match !a/!b/c/d with ?? and {nonegate: true}
    ✓ should match !a/b/.c.md with ??
    ✓ should match !a/b/.c.md with ?? and {dot: true}
    ✓ should match !a/b/.c.md with ?? and {nonegate: true}
    ✓ should match /a/ with ??
    ✓ should match /a/ with ?? and {dot: true}
    ✓ should match /a/ with ?? and {nonegate: true}
    ✓ should match /a/b with ??
    ✓ should match /a/b with ?? and {dot: true}
    ✓ should match /a/b with ?? and {nonegate: true}
    ✓ should match /a/cb with ??
    ✓ should match /a/cb with ?? and {dot: true}
    ✓ should match /a/cb with ?? and {nonegate: true}
    ✓ should match /a/bb with ??
    ✓ should match /a/bb with ?? and {dot: true}
    ✓ should match /a/bb with ?? and {nonegate: true}
    ✓ should match /a/b/c with ??
    ✓ should match /a/b/c with ?? and {dot: true}
    ✓ should match /a/b/c with ?? and {nonegate: true}
    ✓ should match /a/b/c/ with ??
    ✓ should match /a/b/c/ with ?? and {dot: true}
    ✓ should match /a/b/c/ with ?? and {nonegate: true}
    ✓ should match /a/b/c/d with ??
    ✓ should match /a/b/c/d with ?? and {dot: true}
    ✓ should match /a/b/c/d with ?? and {nonegate: true}
    ✓ should match /a/b/c/d/ with ??
    ✓ should match /a/b/c/d/ with ?? and {dot: true}
    ✓ should match /a/b/c/d/ with ?? and {nonegate: true}
    ✓ should match . with ??
    ✓ should match . with ?? and {dot: true}
    ✓ should match . with ?? and {nonegate: true}
    ✓ should match ./ with ??
    ✓ should match ./ with ?? and {dot: true}
    ✓ should match ./ with ?? and {nonegate: true}
    ✓ should match .. with ??
    ✓ should match .. with ?? and {dot: true}
    ✓ should match .. with ?? and {nonegate: true}
    ✓ should match ../c with ??
    ✓ should match ../c with ?? and {dot: true}
    ✓ should match ../c with ?? and {nonegate: true}
    ✓ should match ../c with ??
    ✓ should match ../c with ?? and {dot: true}
    ✓ should match ../c with ?? and {nonegate: true}
    ✓ should match ./../c with ??
    ✓ should match ./../c with ?? and {dot: true}
    ✓ should match ./../c with ?? and {nonegate: true}
    ✓ should match ./a/../c with ??
    ✓ should match ./a/../c with ?? and {dot: true}
    ✓ should match ./a/../c with ?? and {nonegate: true}
    ✓ should match /.. with ??
    ✓ should match /.. with ?? and {dot: true}
    ✓ should match /.. with ?? and {nonegate: true}
    ✓ should match /../c with ??
    ✓ should match /../c with ?? and {dot: true}
    ✓ should match /../c with ?? and {nonegate: true}
    ✓ should match /../.c with ??
    ✓ should match /../.c with ?? and {dot: true}
    ✓ should match /../.c with ?? and {nonegate: true}
    ✓ should match /../.c/ with ??
    ✓ should match /../.c/ with ?? and {dot: true}
    ✓ should match /../.c/ with ?? and {nonegate: true}
    ✓ should match /a/../c with ??
    ✓ should match /a/../c with ?? and {dot: true}
    ✓ should match /a/../c with ?? and {nonegate: true}
    ✓ should match a/../c with ??
    ✓ should match a/../c with ?? and {dot: true}
    ✓ should match a/../c with ?? and {nonegate: true}
    ✓ should match ../.b/.c with ??
    ✓ should match ../.b/.c with ?? and {dot: true}
    ✓ should match ../.b/.c with ?? and {nonegate: true}
    ✓ should match ../b/.c with ??
    ✓ should match ../b/.c with ?? and {dot: true}
    ✓ should match ../b/.c with ?? and {nonegate: true}
    ✓ should match ./.b/.c with ??
    ✓ should match ./.b/.c with ?? and {dot: true}
    ✓ should match ./.b/.c with ?? and {nonegate: true}
    ✓ should match ./b/.c with ??
    ✓ should match ./b/.c with ?? and {dot: true}
    ✓ should match ./b/.c with ?? and {nonegate: true}
    ✓ should match .b with ??
    ✓ should match .b with ?? and {dot: true}
    ✓ should match .b with ?? and {nonegate: true}
    ✓ should match .b.c with ??
    ✓ should match .b.c with ?? and {dot: true}
    ✓ should match .b.c with ?? and {nonegate: true}
    ✓ should match .b.c/ with ??
    ✓ should match .b.c/ with ?? and {dot: true}
    ✓ should match .b.c/ with ?? and {nonegate: true}
    ✓ should match .b/ with ??
    ✓ should match .b/ with ?? and {dot: true}
    ✓ should match .b/ with ?? and {nonegate: true}
    ✓ should match .b/.c with ??
    ✓ should match .b/.c with ?? and {dot: true}
    ✓ should match .b/.c with ?? and {nonegate: true}
    ✓ should match .b/c with ??
    ✓ should match .b/c with ?? and {dot: true}
    ✓ should match .b/c with ?? and {nonegate: true}
    ✓ should match b/.c with ??
    ✓ should match b/.c with ?? and {dot: true}
    ✓ should match b/.c with ?? and {nonegate: true}
    ✓ should match b/.c/ with ??
    ✓ should match b/.c/ with ?? and {dot: true}
    ✓ should match b/.c/ with ?? and {nonegate: true}
    ✓ should match a/+b/c with ??
    ✓ should match a/+b/c with ?? and {dot: true}
    ✓ should match a/+b/c with ?? and {nonegate: true}
    ✓ should match +a/+b/c with ??
    ✓ should match +a/+b/c with ?? and {dot: true}
    ✓ should match +a/+b/c with ?? and {nonegate: true}
    ✓ should match a (foo) with ??
    ✓ should match a (foo) with ?? and {dot: true}
    ✓ should match a (foo) with ?? and {nonegate: true}
    ✓ should match a (foo)/(bar) with ??
    ✓ should match a (foo)/(bar) with ?? and {dot: true}
    ✓ should match a (foo)/(bar) with ?? and {nonegate: true}
    ✓ should match a/b/c (1) with ??
    ✓ should match a/b/c (1) with ?? and {dot: true}
    ✓ should match a/b/c (1) with ?? and {nonegate: true}
    ✓ should match a/b (2)/c (1) with ??
    ✓ should match a/b (2)/c (1) with ?? and {dot: true}
    ✓ should match a/b (2)/c (1) with ?? and {nonegate: true}
    ✓ should match a/b/c [def] with ??
    ✓ should match a/b/c [def] with ?? and {dot: true}
    ✓ should match a/b/c [def] with ?? and {nonegate: true}
    ✓ should match a with ??/??
    ✓ should match a with ??/?? and {dot: true}
    ✓ should match a with ??/?? and {nonegate: true}
    ✓ should match a.md with ??/??
    ✓ should match a.md with ??/?? and {dot: true}
    ✓ should match a.md with ??/?? and {nonegate: true}
    ✓ should match a.js with ??/??
    ✓ should match a.js with ??/?? and {dot: true}
    ✓ should match a.js with ??/?? and {nonegate: true}
    ✓ should match a/ with ??/??
    ✓ should match a/ with ??/?? and {dot: true}
    ✓ should match a/ with ??/?? and {nonegate: true}
    ✓ should match a/b with ??/??
    ✓ should match a/b with ??/?? and {dot: true}
    ✓ should match a/b with ??/?? and {nonegate: true}
    ✓ should match a/b/.c.md with ??/??
    ✓ should match a/b/.c.md with ??/?? and {dot: true}
    ✓ should match a/b/.c.md with ??/?? and {nonegate: true}
    ✓ should match a/b/c with ??/??
    ✓ should match a/b/c with ??/?? and {dot: true}
    ✓ should match a/b/c with ??/?? and {nonegate: true}
    ✓ should match a/b/c.md with ??/??
    ✓ should match a/b/c.md with ??/?? and {dot: true}
    ✓ should match a/b/c.md with ??/?? and {nonegate: true}
    ✓ should match a/b/c/ with ??/??
    ✓ should match a/b/c/ with ??/?? and {dot: true}
    ✓ should match a/b/c/ with ??/?? and {nonegate: true}
    ✓ should match a/b/c/d with ??/??
    ✓ should match a/b/c/d with ??/?? and {dot: true}
    ✓ should match a/b/c/d with ??/?? and {nonegate: true}
    ✓ should match a/b/c/d/ with ??/??
    ✓ should match a/b/c/d/ with ??/?? and {dot: true}
    ✓ should match a/b/c/d/ with ??/?? and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with ??/??
    ✓ should match a/b/c/d/e/f/z.js with ??/?? and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with ??/?? and {nonegate: true}
    ✓ should match a/b/c/z.js with ??/??
    ✓ should match a/b/c/z.js with ??/?? and {dot: true}
    ✓ should match a/b/c/z.js with ??/?? and {nonegate: true}
    ✓ should match a/bb with ??/??
    ✓ should match a/bb with ??/?? and {dot: true}
    ✓ should match a/bb with ??/?? and {nonegate: true}
    ✓ should match a/cb with ??/??
    ✓ should match a/cb with ??/?? and {dot: true}
    ✓ should match a/cb with ??/?? and {nonegate: true}
    ✓ should match abbbz with ??/??
    ✓ should match abbbz with ??/?? and {dot: true}
    ✓ should match abbbz with ??/?? and {nonegate: true}
    ✓ should match abc with ??/??
    ✓ should match abc with ??/?? and {dot: true}
    ✓ should match abc with ??/?? and {nonegate: true}
    ✓ should match abd with ??/??
    ✓ should match abd with ??/?? and {dot: true}
    ✓ should match abd with ??/?? and {nonegate: true}
    ✓ should match z.js with ??/??
    ✓ should match z.js with ??/?? and {dot: true}
    ✓ should match z.js with ??/?? and {nonegate: true}
    ✓ should match za.js with ??/??
    ✓ should match za.js with ??/?? and {dot: true}
    ✓ should match za.js with ??/?? and {nonegate: true}
    ✓ should match !a.js with ??/??
    ✓ should match !a.js with ??/?? and {dot: true}
    ✓ should match !a.js with ??/?? and {nonegate: true}
    ✓ should match !a/b with ??/??
    ✓ should match !a/b with ??/?? and {dot: true}
    ✓ should match !a/b with ??/?? and {nonegate: true}
    ✓ should match !a/b/ with ??/??
    ✓ should match !a/b/ with ??/?? and {dot: true}
    ✓ should match !a/b/ with ??/?? and {nonegate: true}
    ✓ should match !a/b/c with ??/??
    ✓ should match !a/b/c with ??/?? and {dot: true}
    ✓ should match !a/b/c with ??/?? and {nonegate: true}
    ✓ should match !a/b/c/ with ??/??
    ✓ should match !a/b/c/ with ??/?? and {dot: true}
    ✓ should match !a/b/c/ with ??/?? and {nonegate: true}
    ✓ should match !a/!b with ??/??
    ✓ should match !a/!b with ??/?? and {dot: true}
    ✓ should match !a/!b with ??/?? and {nonegate: true}
    ✓ should match !a/!b/c with ??/??
    ✓ should match !a/!b/c with ??/?? and {dot: true}
    ✓ should match !a/!b/c with ??/?? and {nonegate: true}
    ✓ should match !a/!b/c/d with ??/??
    ✓ should match !a/!b/c/d with ??/?? and {dot: true}
    ✓ should match !a/!b/c/d with ??/?? and {nonegate: true}
    ✓ should match !a/b/.c.md with ??/??
    ✓ should match !a/b/.c.md with ??/?? and {dot: true}
    ✓ should match !a/b/.c.md with ??/?? and {nonegate: true}
    ✓ should match /a/ with ??/??
    ✓ should match /a/ with ??/?? and {dot: true}
    ✓ should match /a/ with ??/?? and {nonegate: true}
    ✓ should match /a/b with ??/??
    ✓ should match /a/b with ??/?? and {dot: true}
    ✓ should match /a/b with ??/?? and {nonegate: true}
    ✓ should match /a/cb with ??/??
    ✓ should match /a/cb with ??/?? and {dot: true}
    ✓ should match /a/cb with ??/?? and {nonegate: true}
    ✓ should match /a/bb with ??/??
    ✓ should match /a/bb with ??/?? and {dot: true}
    ✓ should match /a/bb with ??/?? and {nonegate: true}
    ✓ should match /a/b/c with ??/??
    ✓ should match /a/b/c with ??/?? and {dot: true}
    ✓ should match /a/b/c with ??/?? and {nonegate: true}
    ✓ should match /a/b/c/ with ??/??
    ✓ should match /a/b/c/ with ??/?? and {dot: true}
    ✓ should match /a/b/c/ with ??/?? and {nonegate: true}
    ✓ should match /a/b/c/d with ??/??
    ✓ should match /a/b/c/d with ??/?? and {dot: true}
    ✓ should match /a/b/c/d with ??/?? and {nonegate: true}
    ✓ should match /a/b/c/d/ with ??/??
    ✓ should match /a/b/c/d/ with ??/?? and {dot: true}
    ✓ should match /a/b/c/d/ with ??/?? and {nonegate: true}
    ✓ should match . with ??/??
    ✓ should match . with ??/?? and {dot: true}
    ✓ should match . with ??/?? and {nonegate: true}
    ✓ should match ./ with ??/??
    ✓ should match ./ with ??/?? and {dot: true}
    ✓ should match ./ with ??/?? and {nonegate: true}
    ✓ should match .. with ??/??
    ✓ should match .. with ??/?? and {dot: true}
    ✓ should match .. with ??/?? and {nonegate: true}
    ✓ should match ../c with ??/??
    ✓ should match ../c with ??/?? and {dot: true}
    ✓ should match ../c with ??/?? and {nonegate: true}
    ✓ should match ../c with ??/??
    ✓ should match ../c with ??/?? and {dot: true}
    ✓ should match ../c with ??/?? and {nonegate: true}
    ✓ should match ./../c with ??/??
    ✓ should match ./../c with ??/?? and {dot: true}
    ✓ should match ./../c with ??/?? and {nonegate: true}
    ✓ should match ./a/../c with ??/??
    ✓ should match ./a/../c with ??/?? and {dot: true}
    ✓ should match ./a/../c with ??/?? and {nonegate: true}
    ✓ should match /.. with ??/??
    ✓ should match /.. with ??/?? and {dot: true}
    ✓ should match /.. with ??/?? and {nonegate: true}
    ✓ should match /../c with ??/??
    ✓ should match /../c with ??/?? and {dot: true}
    ✓ should match /../c with ??/?? and {nonegate: true}
    ✓ should match /../.c with ??/??
    ✓ should match /../.c with ??/?? and {dot: true}
    ✓ should match /../.c with ??/?? and {nonegate: true}
    ✓ should match /../.c/ with ??/??
    ✓ should match /../.c/ with ??/?? and {dot: true}
    ✓ should match /../.c/ with ??/?? and {nonegate: true}
    ✓ should match /a/../c with ??/??
    ✓ should match /a/../c with ??/?? and {dot: true}
    ✓ should match /a/../c with ??/?? and {nonegate: true}
    ✓ should match a/../c with ??/??
    ✓ should match a/../c with ??/?? and {dot: true}
    ✓ should match a/../c with ??/?? and {nonegate: true}
    ✓ should match ../.b/.c with ??/??
    ✓ should match ../.b/.c with ??/?? and {dot: true}
    ✓ should match ../.b/.c with ??/?? and {nonegate: true}
    ✓ should match ../b/.c with ??/??
    ✓ should match ../b/.c with ??/?? and {dot: true}
    ✓ should match ../b/.c with ??/?? and {nonegate: true}
    ✓ should match ./.b/.c with ??/??
    ✓ should match ./.b/.c with ??/?? and {dot: true}
    ✓ should match ./.b/.c with ??/?? and {nonegate: true}
    ✓ should match ./b/.c with ??/??
    ✓ should match ./b/.c with ??/?? and {dot: true}
    ✓ should match ./b/.c with ??/?? and {nonegate: true}
    ✓ should match .b with ??/??
    ✓ should match .b with ??/?? and {dot: true}
    ✓ should match .b with ??/?? and {nonegate: true}
    ✓ should match .b.c with ??/??
    ✓ should match .b.c with ??/?? and {dot: true}
    ✓ should match .b.c with ??/?? and {nonegate: true}
    ✓ should match .b.c/ with ??/??
    ✓ should match .b.c/ with ??/?? and {dot: true}
    ✓ should match .b.c/ with ??/?? and {nonegate: true}
    ✓ should match .b/ with ??/??
    ✓ should match .b/ with ??/?? and {dot: true}
    ✓ should match .b/ with ??/?? and {nonegate: true}
    ✓ should match .b/.c with ??/??
    ✓ should match .b/.c with ??/?? and {dot: true}
    ✓ should match .b/.c with ??/?? and {nonegate: true}
    ✓ should match .b/c with ??/??
    ✓ should match .b/c with ??/?? and {dot: true}
    ✓ should match .b/c with ??/?? and {nonegate: true}
    ✓ should match b/.c with ??/??
    ✓ should match b/.c with ??/?? and {dot: true}
    ✓ should match b/.c with ??/?? and {nonegate: true}
    ✓ should match b/.c/ with ??/??
    ✓ should match b/.c/ with ??/?? and {dot: true}
    ✓ should match b/.c/ with ??/?? and {nonegate: true}
    ✓ should match a/+b/c with ??/??
    ✓ should match a/+b/c with ??/?? and {dot: true}
    ✓ should match a/+b/c with ??/?? and {nonegate: true}
    ✓ should match +a/+b/c with ??/??
    ✓ should match +a/+b/c with ??/?? and {dot: true}
    ✓ should match +a/+b/c with ??/?? and {nonegate: true}
    ✓ should match a (foo) with ??/??
    ✓ should match a (foo) with ??/?? and {dot: true}
    ✓ should match a (foo) with ??/?? and {nonegate: true}
    ✓ should match a (foo)/(bar) with ??/??
    ✓ should match a (foo)/(bar) with ??/?? and {dot: true}
    ✓ should match a (foo)/(bar) with ??/?? and {nonegate: true}
    ✓ should match a/b/c (1) with ??/??
    ✓ should match a/b/c (1) with ??/?? and {dot: true}
    ✓ should match a/b/c (1) with ??/?? and {nonegate: true}
    ✓ should match a/b (2)/c (1) with ??/??
    ✓ should match a/b (2)/c (1) with ??/?? and {dot: true}
    ✓ should match a/b (2)/c (1) with ??/?? and {nonegate: true}
    ✓ should match a/b/c [def] with ??/??
    ✓ should match a/b/c [def] with ??/?? and {dot: true}
    ✓ should match a/b/c [def] with ??/?? and {nonegate: true}
    ✓ should match a with ???
    ✓ should match a with ??? and {dot: true}
    ✓ should match a with ??? and {nonegate: true}
    ✓ should match a.md with ???
    ✓ should match a.md with ??? and {dot: true}
    ✓ should match a.md with ??? and {nonegate: true}
    ✓ should match a.js with ???
    ✓ should match a.js with ??? and {dot: true}
    ✓ should match a.js with ??? and {nonegate: true}
    ✓ should match a/ with ???
    ✓ should match a/ with ??? and {dot: true}
    ✓ should match a/ with ??? and {nonegate: true}
    ✓ should match a/b with ???
    ✓ should match a/b with ??? and {dot: true}
    ✓ should match a/b with ??? and {nonegate: true}
    ✓ should match a/b/.c.md with ???
    ✓ should match a/b/.c.md with ??? and {dot: true}
    ✓ should match a/b/.c.md with ??? and {nonegate: true}
    ✓ should match a/b/c with ???
    ✓ should match a/b/c with ??? and {dot: true}
    ✓ should match a/b/c with ??? and {nonegate: true}
    ✓ should match a/b/c.md with ???
    ✓ should match a/b/c.md with ??? and {dot: true}
    ✓ should match a/b/c.md with ??? and {nonegate: true}
    ✓ should match a/b/c/ with ???
    ✓ should match a/b/c/ with ??? and {dot: true}
    ✓ should match a/b/c/ with ??? and {nonegate: true}
    ✓ should match a/b/c/d with ???
    ✓ should match a/b/c/d with ??? and {dot: true}
    ✓ should match a/b/c/d with ??? and {nonegate: true}
    ✓ should match a/b/c/d/ with ???
    ✓ should match a/b/c/d/ with ??? and {dot: true}
    ✓ should match a/b/c/d/ with ??? and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with ???
    ✓ should match a/b/c/d/e/f/z.js with ??? and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with ??? and {nonegate: true}
    ✓ should match a/b/c/z.js with ???
    ✓ should match a/b/c/z.js with ??? and {dot: true}
    ✓ should match a/b/c/z.js with ??? and {nonegate: true}
    ✓ should match a/bb with ???
    ✓ should match a/bb with ??? and {dot: true}
    ✓ should match a/bb with ??? and {nonegate: true}
    ✓ should match a/cb with ???
    ✓ should match a/cb with ??? and {dot: true}
    ✓ should match a/cb with ??? and {nonegate: true}
    ✓ should match abbbz with ???
    ✓ should match abbbz with ??? and {dot: true}
    ✓ should match abbbz with ??? and {nonegate: true}
    ✓ should match abc with ???
    ✓ should match abc with ??? and {dot: true}
    ✓ should match abc with ??? and {nonegate: true}
    ✓ should match abd with ???
    ✓ should match abd with ??? and {dot: true}
    ✓ should match abd with ??? and {nonegate: true}
    ✓ should match z.js with ???
    ✓ should match z.js with ??? and {dot: true}
    ✓ should match z.js with ??? and {nonegate: true}
    ✓ should match za.js with ???
    ✓ should match za.js with ??? and {dot: true}
    ✓ should match za.js with ??? and {nonegate: true}
    ✓ should match !a.js with ???
    ✓ should match !a.js with ??? and {dot: true}
    ✓ should match !a.js with ??? and {nonegate: true}
    ✓ should match !a/b with ???
    ✓ should match !a/b with ??? and {dot: true}
    ✓ should match !a/b with ??? and {nonegate: true}
    ✓ should match !a/b/ with ???
    ✓ should match !a/b/ with ??? and {dot: true}
    ✓ should match !a/b/ with ??? and {nonegate: true}
    ✓ should match !a/b/c with ???
    ✓ should match !a/b/c with ??? and {dot: true}
    ✓ should match !a/b/c with ??? and {nonegate: true}
    ✓ should match !a/b/c/ with ???
    ✓ should match !a/b/c/ with ??? and {dot: true}
    ✓ should match !a/b/c/ with ??? and {nonegate: true}
    ✓ should match !a/!b with ???
    ✓ should match !a/!b with ??? and {dot: true}
    ✓ should match !a/!b with ??? and {nonegate: true}
    ✓ should match !a/!b/c with ???
    ✓ should match !a/!b/c with ??? and {dot: true}
    ✓ should match !a/!b/c with ??? and {nonegate: true}
    ✓ should match !a/!b/c/d with ???
    ✓ should match !a/!b/c/d with ??? and {dot: true}
    ✓ should match !a/!b/c/d with ??? and {nonegate: true}
    ✓ should match !a/b/.c.md with ???
    ✓ should match !a/b/.c.md with ??? and {dot: true}
    ✓ should match !a/b/.c.md with ??? and {nonegate: true}
    ✓ should match /a/ with ???
    ✓ should match /a/ with ??? and {dot: true}
    ✓ should match /a/ with ??? and {nonegate: true}
    ✓ should match /a/b with ???
    ✓ should match /a/b with ??? and {dot: true}
    ✓ should match /a/b with ??? and {nonegate: true}
    ✓ should match /a/cb with ???
    ✓ should match /a/cb with ??? and {dot: true}
    ✓ should match /a/cb with ??? and {nonegate: true}
    ✓ should match /a/bb with ???
    ✓ should match /a/bb with ??? and {dot: true}
    ✓ should match /a/bb with ??? and {nonegate: true}
    ✓ should match /a/b/c with ???
    ✓ should match /a/b/c with ??? and {dot: true}
    ✓ should match /a/b/c with ??? and {nonegate: true}
    ✓ should match /a/b/c/ with ???
    ✓ should match /a/b/c/ with ??? and {dot: true}
    ✓ should match /a/b/c/ with ??? and {nonegate: true}
    ✓ should match /a/b/c/d with ???
    ✓ should match /a/b/c/d with ??? and {dot: true}
    ✓ should match /a/b/c/d with ??? and {nonegate: true}
    ✓ should match /a/b/c/d/ with ???
    ✓ should match /a/b/c/d/ with ??? and {dot: true}
    ✓ should match /a/b/c/d/ with ??? and {nonegate: true}
    ✓ should match . with ???
    ✓ should match . with ??? and {dot: true}
    ✓ should match . with ??? and {nonegate: true}
    ✓ should match ./ with ???
    ✓ should match ./ with ??? and {dot: true}
    ✓ should match ./ with ??? and {nonegate: true}
    ✓ should match .. with ???
    ✓ should match .. with ??? and {dot: true}
    ✓ should match .. with ??? and {nonegate: true}
    ✓ should match ../c with ???
    ✓ should match ../c with ??? and {dot: true}
    ✓ should match ../c with ??? and {nonegate: true}
    ✓ should match ../c with ???
    ✓ should match ../c with ??? and {dot: true}
    ✓ should match ../c with ??? and {nonegate: true}
    ✓ should match ./../c with ???
    ✓ should match ./../c with ??? and {dot: true}
    ✓ should match ./../c with ??? and {nonegate: true}
    ✓ should match ./a/../c with ???
    ✓ should match ./a/../c with ??? and {dot: true}
    ✓ should match ./a/../c with ??? and {nonegate: true}
    ✓ should match /.. with ???
    ✓ should match /.. with ??? and {dot: true}
    ✓ should match /.. with ??? and {nonegate: true}
    ✓ should match /../c with ???
    ✓ should match /../c with ??? and {dot: true}
    ✓ should match /../c with ??? and {nonegate: true}
    ✓ should match /../.c with ???
    ✓ should match /../.c with ??? and {dot: true}
    ✓ should match /../.c with ??? and {nonegate: true}
    ✓ should match /../.c/ with ???
    ✓ should match /../.c/ with ??? and {dot: true}
    ✓ should match /../.c/ with ??? and {nonegate: true}
    ✓ should match /a/../c with ???
    ✓ should match /a/../c with ??? and {dot: true}
    ✓ should match /a/../c with ??? and {nonegate: true}
    ✓ should match a/../c with ???
    ✓ should match a/../c with ??? and {dot: true}
    ✓ should match a/../c with ??? and {nonegate: true}
    ✓ should match ../.b/.c with ???
    ✓ should match ../.b/.c with ??? and {dot: true}
    ✓ should match ../.b/.c with ??? and {nonegate: true}
    ✓ should match ../b/.c with ???
    ✓ should match ../b/.c with ??? and {dot: true}
    ✓ should match ../b/.c with ??? and {nonegate: true}
    ✓ should match ./.b/.c with ???
    ✓ should match ./.b/.c with ??? and {dot: true}
    ✓ should match ./.b/.c with ??? and {nonegate: true}
    ✓ should match ./b/.c with ???
    ✓ should match ./b/.c with ??? and {dot: true}
    ✓ should match ./b/.c with ??? and {nonegate: true}
    ✓ should match .b with ???
    ✓ should match .b with ??? and {dot: true}
    ✓ should match .b with ??? and {nonegate: true}
    ✓ should match .b.c with ???
    ✓ should match .b.c with ??? and {dot: true}
    ✓ should match .b.c with ??? and {nonegate: true}
    ✓ should match .b.c/ with ???
    ✓ should match .b.c/ with ??? and {dot: true}
    ✓ should match .b.c/ with ??? and {nonegate: true}
    ✓ should match .b/ with ???
    ✓ should match .b/ with ??? and {dot: true}
    ✓ should match .b/ with ??? and {nonegate: true}
    ✓ should match .b/.c with ???
    ✓ should match .b/.c with ??? and {dot: true}
    ✓ should match .b/.c with ??? and {nonegate: true}
    ✓ should match .b/c with ???
    ✓ should match .b/c with ??? and {dot: true}
    ✓ should match .b/c with ??? and {nonegate: true}
    ✓ should match b/.c with ???
    ✓ should match b/.c with ??? and {dot: true}
    ✓ should match b/.c with ??? and {nonegate: true}
    ✓ should match b/.c/ with ???
    ✓ should match b/.c/ with ??? and {dot: true}
    ✓ should match b/.c/ with ??? and {nonegate: true}
    ✓ should match a/+b/c with ???
    ✓ should match a/+b/c with ??? and {dot: true}
    ✓ should match a/+b/c with ??? and {nonegate: true}
    ✓ should match +a/+b/c with ???
    ✓ should match +a/+b/c with ??? and {dot: true}
    ✓ should match +a/+b/c with ??? and {nonegate: true}
    ✓ should match a (foo) with ???
    ✓ should match a (foo) with ??? and {dot: true}
    ✓ should match a (foo) with ??? and {nonegate: true}
    ✓ should match a (foo)/(bar) with ???
    ✓ should match a (foo)/(bar) with ??? and {dot: true}
    ✓ should match a (foo)/(bar) with ??? and {nonegate: true}
    ✓ should match a/b/c (1) with ???
    ✓ should match a/b/c (1) with ??? and {dot: true}
    ✓ should match a/b/c (1) with ??? and {nonegate: true}
    ✓ should match a/b (2)/c (1) with ???
    ✓ should match a/b (2)/c (1) with ??? and {dot: true}
    ✓ should match a/b (2)/c (1) with ??? and {nonegate: true}
    ✓ should match a/b/c [def] with ???
    ✓ should match a/b/c [def] with ??? and {dot: true}
    ✓ should match a/b/c [def] with ??? and {nonegate: true}
    ✓ should match a with ????
    ✓ should match a with ???? and {dot: true}
    ✓ should match a with ???? and {nonegate: true}
    ✓ should match a.md with ????
    ✓ should match a.md with ???? and {dot: true}
    ✓ should match a.md with ???? and {nonegate: true}
    ✓ should match a.js with ????
    ✓ should match a.js with ???? and {dot: true}
    ✓ should match a.js with ???? and {nonegate: true}
    ✓ should match a/ with ????
    ✓ should match a/ with ???? and {dot: true}
    ✓ should match a/ with ???? and {nonegate: true}
    ✓ should match a/b with ????
    ✓ should match a/b with ???? and {dot: true}
    ✓ should match a/b with ???? and {nonegate: true}
    ✓ should match a/b/.c.md with ????
    ✓ should match a/b/.c.md with ???? and {dot: true}
    ✓ should match a/b/.c.md with ???? and {nonegate: true}
    ✓ should match a/b/c with ????
    ✓ should match a/b/c with ???? and {dot: true}
    ✓ should match a/b/c with ???? and {nonegate: true}
    ✓ should match a/b/c.md with ????
    ✓ should match a/b/c.md with ???? and {dot: true}
    ✓ should match a/b/c.md with ???? and {nonegate: true}
    ✓ should match a/b/c/ with ????
    ✓ should match a/b/c/ with ???? and {dot: true}
    ✓ should match a/b/c/ with ???? and {nonegate: true}
    ✓ should match a/b/c/d with ????
    ✓ should match a/b/c/d with ???? and {dot: true}
    ✓ should match a/b/c/d with ???? and {nonegate: true}
    ✓ should match a/b/c/d/ with ????
    ✓ should match a/b/c/d/ with ???? and {dot: true}
    ✓ should match a/b/c/d/ with ???? and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with ????
    ✓ should match a/b/c/d/e/f/z.js with ???? and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with ???? and {nonegate: true}
    ✓ should match a/b/c/z.js with ????
    ✓ should match a/b/c/z.js with ???? and {dot: true}
    ✓ should match a/b/c/z.js with ???? and {nonegate: true}
    ✓ should match a/bb with ????
    ✓ should match a/bb with ???? and {dot: true}
    ✓ should match a/bb with ???? and {nonegate: true}
    ✓ should match a/cb with ????
    ✓ should match a/cb with ???? and {dot: true}
    ✓ should match a/cb with ???? and {nonegate: true}
    ✓ should match abbbz with ????
    ✓ should match abbbz with ???? and {dot: true}
    ✓ should match abbbz with ???? and {nonegate: true}
    ✓ should match abc with ????
    ✓ should match abc with ???? and {dot: true}
    ✓ should match abc with ???? and {nonegate: true}
    ✓ should match abd with ????
    ✓ should match abd with ???? and {dot: true}
    ✓ should match abd with ???? and {nonegate: true}
    ✓ should match z.js with ????
    ✓ should match z.js with ???? and {dot: true}
    ✓ should match z.js with ???? and {nonegate: true}
    ✓ should match za.js with ????
    ✓ should match za.js with ???? and {dot: true}
    ✓ should match za.js with ???? and {nonegate: true}
    ✓ should match !a.js with ????
    ✓ should match !a.js with ???? and {dot: true}
    ✓ should match !a.js with ???? and {nonegate: true}
    ✓ should match !a/b with ????
    ✓ should match !a/b with ???? and {dot: true}
    ✓ should match !a/b with ???? and {nonegate: true}
    ✓ should match !a/b/ with ????
    ✓ should match !a/b/ with ???? and {dot: true}
    ✓ should match !a/b/ with ???? and {nonegate: true}
    ✓ should match !a/b/c with ????
    ✓ should match !a/b/c with ???? and {dot: true}
    ✓ should match !a/b/c with ???? and {nonegate: true}
    ✓ should match !a/b/c/ with ????
    ✓ should match !a/b/c/ with ???? and {dot: true}
    ✓ should match !a/b/c/ with ???? and {nonegate: true}
    ✓ should match !a/!b with ????
    ✓ should match !a/!b with ???? and {dot: true}
    ✓ should match !a/!b with ???? and {nonegate: true}
    ✓ should match !a/!b/c with ????
    ✓ should match !a/!b/c with ???? and {dot: true}
    ✓ should match !a/!b/c with ???? and {nonegate: true}
    ✓ should match !a/!b/c/d with ????
    ✓ should match !a/!b/c/d with ???? and {dot: true}
    ✓ should match !a/!b/c/d with ???? and {nonegate: true}
    ✓ should match !a/b/.c.md with ????
    ✓ should match !a/b/.c.md with ???? and {dot: true}
    ✓ should match !a/b/.c.md with ???? and {nonegate: true}
    ✓ should match /a/ with ????
    ✓ should match /a/ with ???? and {dot: true}
    ✓ should match /a/ with ???? and {nonegate: true}
    ✓ should match /a/b with ????
    ✓ should match /a/b with ???? and {dot: true}
    ✓ should match /a/b with ???? and {nonegate: true}
    ✓ should match /a/cb with ????
    ✓ should match /a/cb with ???? and {dot: true}
    ✓ should match /a/cb with ???? and {nonegate: true}
    ✓ should match /a/bb with ????
    ✓ should match /a/bb with ???? and {dot: true}
    ✓ should match /a/bb with ???? and {nonegate: true}
    ✓ should match /a/b/c with ????
    ✓ should match /a/b/c with ???? and {dot: true}
    ✓ should match /a/b/c with ???? and {nonegate: true}
    ✓ should match /a/b/c/ with ????
    ✓ should match /a/b/c/ with ???? and {dot: true}
    ✓ should match /a/b/c/ with ???? and {nonegate: true}
    ✓ should match /a/b/c/d with ????
    ✓ should match /a/b/c/d with ???? and {dot: true}
    ✓ should match /a/b/c/d with ???? and {nonegate: true}
    ✓ should match /a/b/c/d/ with ????
    ✓ should match /a/b/c/d/ with ???? and {dot: true}
    ✓ should match /a/b/c/d/ with ???? and {nonegate: true}
    ✓ should match . with ????
    ✓ should match . with ???? and {dot: true}
    ✓ should match . with ???? and {nonegate: true}
    ✓ should match ./ with ????
    ✓ should match ./ with ???? and {dot: true}
    ✓ should match ./ with ???? and {nonegate: true}
    ✓ should match .. with ????
    ✓ should match .. with ???? and {dot: true}
    ✓ should match .. with ???? and {nonegate: true}
    ✓ should match ../c with ????
    ✓ should match ../c with ???? and {dot: true}
    ✓ should match ../c with ???? and {nonegate: true}
    ✓ should match ../c with ????
    ✓ should match ../c with ???? and {dot: true}
    ✓ should match ../c with ???? and {nonegate: true}
    ✓ should match ./../c with ????
    ✓ should match ./../c with ???? and {dot: true}
    ✓ should match ./../c with ???? and {nonegate: true}
    ✓ should match ./a/../c with ????
    ✓ should match ./a/../c with ???? and {dot: true}
    ✓ should match ./a/../c with ???? and {nonegate: true}
    ✓ should match /.. with ????
    ✓ should match /.. with ???? and {dot: true}
    ✓ should match /.. with ???? and {nonegate: true}
    ✓ should match /../c with ????
    ✓ should match /../c with ???? and {dot: true}
    ✓ should match /../c with ???? and {nonegate: true}
    ✓ should match /../.c with ????
    ✓ should match /../.c with ???? and {dot: true}
    ✓ should match /../.c with ???? and {nonegate: true}
    ✓ should match /../.c/ with ????
    ✓ should match /../.c/ with ???? and {dot: true}
    ✓ should match /../.c/ with ???? and {nonegate: true}
    ✓ should match /a/../c with ????
    ✓ should match /a/../c with ???? and {dot: true}
    ✓ should match /a/../c with ???? and {nonegate: true}
    ✓ should match a/../c with ????
    ✓ should match a/../c with ???? and {dot: true}
    ✓ should match a/../c with ???? and {nonegate: true}
    ✓ should match ../.b/.c with ????
    ✓ should match ../.b/.c with ???? and {dot: true}
    ✓ should match ../.b/.c with ???? and {nonegate: true}
    ✓ should match ../b/.c with ????
    ✓ should match ../b/.c with ???? and {dot: true}
    ✓ should match ../b/.c with ???? and {nonegate: true}
    ✓ should match ./.b/.c with ????
    ✓ should match ./.b/.c with ???? and {dot: true}
    ✓ should match ./.b/.c with ???? and {nonegate: true}
    ✓ should match ./b/.c with ????
    ✓ should match ./b/.c with ???? and {dot: true}
    ✓ should match ./b/.c with ???? and {nonegate: true}
    ✓ should match .b with ????
    ✓ should match .b with ???? and {dot: true}
    ✓ should match .b with ???? and {nonegate: true}
    ✓ should match .b.c with ????
    ✓ should match .b.c with ???? and {dot: true}
    ✓ should match .b.c with ???? and {nonegate: true}
    ✓ should match .b.c/ with ????
    ✓ should match .b.c/ with ???? and {dot: true}
    ✓ should match .b.c/ with ???? and {nonegate: true}
    ✓ should match .b/ with ????
    ✓ should match .b/ with ???? and {dot: true}
    ✓ should match .b/ with ???? and {nonegate: true}
    ✓ should match .b/.c with ????
    ✓ should match .b/.c with ???? and {dot: true}
    ✓ should match .b/.c with ???? and {nonegate: true}
    ✓ should match .b/c with ????
    ✓ should match .b/c with ???? and {dot: true}
    ✓ should match .b/c with ???? and {nonegate: true}
    ✓ should match b/.c with ????
    ✓ should match b/.c with ???? and {dot: true}
    ✓ should match b/.c with ???? and {nonegate: true}
    ✓ should match b/.c/ with ????
    ✓ should match b/.c/ with ???? and {dot: true}
    ✓ should match b/.c/ with ???? and {nonegate: true}
    ✓ should match a/+b/c with ????
    ✓ should match a/+b/c with ???? and {dot: true}
    ✓ should match a/+b/c with ???? and {nonegate: true}
    ✓ should match +a/+b/c with ????
    ✓ should match +a/+b/c with ???? and {dot: true}
    ✓ should match +a/+b/c with ???? and {nonegate: true}
    ✓ should match a (foo) with ????
    ✓ should match a (foo) with ???? and {dot: true}
    ✓ should match a (foo) with ???? and {nonegate: true}
    ✓ should match a (foo)/(bar) with ????
    ✓ should match a (foo)/(bar) with ???? and {dot: true}
    ✓ should match a (foo)/(bar) with ???? and {nonegate: true}
    ✓ should match a/b/c (1) with ????
    ✓ should match a/b/c (1) with ???? and {dot: true}
    ✓ should match a/b/c (1) with ???? and {nonegate: true}
    ✓ should match a/b (2)/c (1) with ????
    ✓ should match a/b (2)/c (1) with ???? and {dot: true}
    ✓ should match a/b (2)/c (1) with ???? and {nonegate: true}
    ✓ should match a/b/c [def] with ????
    ✓ should match a/b/c [def] with ???? and {dot: true}
    ✓ should match a/b/c [def] with ???? and {nonegate: true}
    ✓ should match a with a/*
    ✓ should match a with a/* and {dot: true}
    ✓ should match a with a/* and {nonegate: true}
    ✓ should match a.md with a/*
    ✓ should match a.md with a/* and {dot: true}
    ✓ should match a.md with a/* and {nonegate: true}
    ✓ should match a.js with a/*
    ✓ should match a.js with a/* and {dot: true}
    ✓ should match a.js with a/* and {nonegate: true}
    ✓ should match a/ with a/*
    ✓ should match a/ with a/* and {dot: true}
    ✓ should match a/ with a/* and {nonegate: true}
    ✓ should match a/b with a/*
    ✓ should match a/b with a/* and {dot: true}
    ✓ should match a/b with a/* and {nonegate: true}
    ✓ should match a/b/.c.md with a/*
    ✓ should match a/b/.c.md with a/* and {dot: true}
    ✓ should match a/b/.c.md with a/* and {nonegate: true}
    ✓ should match a/b/c with a/*
    ✓ should match a/b/c with a/* and {dot: true}
    ✓ should match a/b/c with a/* and {nonegate: true}
    ✓ should match a/b/c.md with a/*
    ✓ should match a/b/c.md with a/* and {dot: true}
    ✓ should match a/b/c.md with a/* and {nonegate: true}
    ✓ should match a/b/c/ with a/*
    ✓ should match a/b/c/ with a/* and {dot: true}
    ✓ should match a/b/c/ with a/* and {nonegate: true}
    ✓ should match a/b/c/d with a/*
    ✓ should match a/b/c/d with a/* and {dot: true}
    ✓ should match a/b/c/d with a/* and {nonegate: true}
    ✓ should match a/b/c/d/ with a/*
    ✓ should match a/b/c/d/ with a/* and {dot: true}
    ✓ should match a/b/c/d/ with a/* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with a/*
    ✓ should match a/b/c/d/e/f/z.js with a/* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with a/* and {nonegate: true}
    ✓ should match a/b/c/z.js with a/*
    ✓ should match a/b/c/z.js with a/* and {dot: true}
    ✓ should match a/b/c/z.js with a/* and {nonegate: true}
    ✓ should match a/bb with a/*
    ✓ should match a/bb with a/* and {dot: true}
    ✓ should match a/bb with a/* and {nonegate: true}
    ✓ should match a/cb with a/*
    ✓ should match a/cb with a/* and {dot: true}
    ✓ should match a/cb with a/* and {nonegate: true}
    ✓ should match abbbz with a/*
    ✓ should match abbbz with a/* and {dot: true}
    ✓ should match abbbz with a/* and {nonegate: true}
    ✓ should match abc with a/*
    ✓ should match abc with a/* and {dot: true}
    ✓ should match abc with a/* and {nonegate: true}
    ✓ should match abd with a/*
    ✓ should match abd with a/* and {dot: true}
    ✓ should match abd with a/* and {nonegate: true}
    ✓ should match z.js with a/*
    ✓ should match z.js with a/* and {dot: true}
    ✓ should match z.js with a/* and {nonegate: true}
    ✓ should match za.js with a/*
    ✓ should match za.js with a/* and {dot: true}
    ✓ should match za.js with a/* and {nonegate: true}
    ✓ should match !a.js with a/*
    ✓ should match !a.js with a/* and {dot: true}
    ✓ should match !a.js with a/* and {nonegate: true}
    ✓ should match !a/b with a/*
    ✓ should match !a/b with a/* and {dot: true}
    ✓ should match !a/b with a/* and {nonegate: true}
    ✓ should match !a/b/ with a/*
    ✓ should match !a/b/ with a/* and {dot: true}
    ✓ should match !a/b/ with a/* and {nonegate: true}
    ✓ should match !a/b/c with a/*
    ✓ should match !a/b/c with a/* and {dot: true}
    ✓ should match !a/b/c with a/* and {nonegate: true}
    ✓ should match !a/b/c/ with a/*
    ✓ should match !a/b/c/ with a/* and {dot: true}
    ✓ should match !a/b/c/ with a/* and {nonegate: true}
    ✓ should match !a/!b with a/*
    ✓ should match !a/!b with a/* and {dot: true}
    ✓ should match !a/!b with a/* and {nonegate: true}
    ✓ should match !a/!b/c with a/*
    ✓ should match !a/!b/c with a/* and {dot: true}
    ✓ should match !a/!b/c with a/* and {nonegate: true}
    ✓ should match !a/!b/c/d with a/*
    ✓ should match !a/!b/c/d with a/* and {dot: true}
    ✓ should match !a/!b/c/d with a/* and {nonegate: true}
    ✓ should match !a/b/.c.md with a/*
    ✓ should match !a/b/.c.md with a/* and {dot: true}
    ✓ should match !a/b/.c.md with a/* and {nonegate: true}
    ✓ should match /a/ with a/*
    ✓ should match /a/ with a/* and {dot: true}
    ✓ should match /a/ with a/* and {nonegate: true}
    ✓ should match /a/b with a/*
    ✓ should match /a/b with a/* and {dot: true}
    ✓ should match /a/b with a/* and {nonegate: true}
    ✓ should match /a/cb with a/*
    ✓ should match /a/cb with a/* and {dot: true}
    ✓ should match /a/cb with a/* and {nonegate: true}
    ✓ should match /a/bb with a/*
    ✓ should match /a/bb with a/* and {dot: true}
    ✓ should match /a/bb with a/* and {nonegate: true}
    ✓ should match /a/b/c with a/*
    ✓ should match /a/b/c with a/* and {dot: true}
    ✓ should match /a/b/c with a/* and {nonegate: true}
    ✓ should match /a/b/c/ with a/*
    ✓ should match /a/b/c/ with a/* and {dot: true}
    ✓ should match /a/b/c/ with a/* and {nonegate: true}
    ✓ should match /a/b/c/d with a/*
    ✓ should match /a/b/c/d with a/* and {dot: true}
    ✓ should match /a/b/c/d with a/* and {nonegate: true}
    ✓ should match /a/b/c/d/ with a/*
    ✓ should match /a/b/c/d/ with a/* and {dot: true}
    ✓ should match /a/b/c/d/ with a/* and {nonegate: true}
    ✓ should match . with a/*
    ✓ should match . with a/* and {dot: true}
    ✓ should match . with a/* and {nonegate: true}
    ✓ should match ./ with a/*
    ✓ should match ./ with a/* and {dot: true}
    ✓ should match ./ with a/* and {nonegate: true}
    ✓ should match .. with a/*
    ✓ should match .. with a/* and {dot: true}
    ✓ should match .. with a/* and {nonegate: true}
    ✓ should match ../c with a/*
    ✓ should match ../c with a/* and {dot: true}
    ✓ should match ../c with a/* and {nonegate: true}
    ✓ should match ../c with a/*
    ✓ should match ../c with a/* and {dot: true}
    ✓ should match ../c with a/* and {nonegate: true}
    ✓ should match ./../c with a/*
    ✓ should match ./../c with a/* and {dot: true}
    ✓ should match ./../c with a/* and {nonegate: true}
    ✓ should match ./a/../c with a/*
    ✓ should match ./a/../c with a/* and {dot: true}
    ✓ should match ./a/../c with a/* and {nonegate: true}
    ✓ should match /.. with a/*
    ✓ should match /.. with a/* and {dot: true}
    ✓ should match /.. with a/* and {nonegate: true}
    ✓ should match /../c with a/*
    ✓ should match /../c with a/* and {dot: true}
    ✓ should match /../c with a/* and {nonegate: true}
    ✓ should match /../.c with a/*
    ✓ should match /../.c with a/* and {dot: true}
    ✓ should match /../.c with a/* and {nonegate: true}
    ✓ should match /../.c/ with a/*
    ✓ should match /../.c/ with a/* and {dot: true}
    ✓ should match /../.c/ with a/* and {nonegate: true}
    ✓ should match /a/../c with a/*
    ✓ should match /a/../c with a/* and {dot: true}
    ✓ should match /a/../c with a/* and {nonegate: true}
    ✓ should match a/../c with a/*
    ✓ should match a/../c with a/* and {dot: true}
    ✓ should match a/../c with a/* and {nonegate: true}
    ✓ should match ../.b/.c with a/*
    ✓ should match ../.b/.c with a/* and {dot: true}
    ✓ should match ../.b/.c with a/* and {nonegate: true}
    ✓ should match ../b/.c with a/*
    ✓ should match ../b/.c with a/* and {dot: true}
    ✓ should match ../b/.c with a/* and {nonegate: true}
    ✓ should match ./.b/.c with a/*
    ✓ should match ./.b/.c with a/* and {dot: true}
    ✓ should match ./.b/.c with a/* and {nonegate: true}
    ✓ should match ./b/.c with a/*
    ✓ should match ./b/.c with a/* and {dot: true}
    ✓ should match ./b/.c with a/* and {nonegate: true}
    ✓ should match .b with a/*
    ✓ should match .b with a/* and {dot: true}
    ✓ should match .b with a/* and {nonegate: true}
    ✓ should match .b.c with a/*
    ✓ should match .b.c with a/* and {dot: true}
    ✓ should match .b.c with a/* and {nonegate: true}
    ✓ should match .b.c/ with a/*
    ✓ should match .b.c/ with a/* and {dot: true}
    ✓ should match .b.c/ with a/* and {nonegate: true}
    ✓ should match .b/ with a/*
    ✓ should match .b/ with a/* and {dot: true}
    ✓ should match .b/ with a/* and {nonegate: true}
    ✓ should match .b/.c with a/*
    ✓ should match .b/.c with a/* and {dot: true}
    ✓ should match .b/.c with a/* and {nonegate: true}
    ✓ should match .b/c with a/*
    ✓ should match .b/c with a/* and {dot: true}
    ✓ should match .b/c with a/* and {nonegate: true}
    ✓ should match b/.c with a/*
    ✓ should match b/.c with a/* and {dot: true}
    ✓ should match b/.c with a/* and {nonegate: true}
    ✓ should match b/.c/ with a/*
    ✓ should match b/.c/ with a/* and {dot: true}
    ✓ should match b/.c/ with a/* and {nonegate: true}
    ✓ should match a/+b/c with a/*
    ✓ should match a/+b/c with a/* and {dot: true}
    ✓ should match a/+b/c with a/* and {nonegate: true}
    ✓ should match +a/+b/c with a/*
    ✓ should match +a/+b/c with a/* and {dot: true}
    ✓ should match +a/+b/c with a/* and {nonegate: true}
    ✓ should match a (foo) with a/*
    ✓ should match a (foo) with a/* and {dot: true}
    ✓ should match a (foo) with a/* and {nonegate: true}
    ✓ should match a (foo)/(bar) with a/*
    ✓ should match a (foo)/(bar) with a/* and {dot: true}
    ✓ should match a (foo)/(bar) with a/* and {nonegate: true}
    ✓ should match a/b/c (1) with a/*
    ✓ should match a/b/c (1) with a/* and {dot: true}
    ✓ should match a/b/c (1) with a/* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with a/*
    ✓ should match a/b (2)/c (1) with a/* and {dot: true}
    ✓ should match a/b (2)/c (1) with a/* and {nonegate: true}
    ✓ should match a/b/c [def] with a/*
    ✓ should match a/b/c [def] with a/* and {dot: true}
    ✓ should match a/b/c [def] with a/* and {nonegate: true}
    ✓ should match a with a/*/
    ✓ should match a with a/*/ and {dot: true}
    ✓ should match a with a/*/ and {nonegate: true}
    ✓ should match a.md with a/*/
    ✓ should match a.md with a/*/ and {dot: true}
    ✓ should match a.md with a/*/ and {nonegate: true}
    ✓ should match a.js with a/*/
    ✓ should match a.js with a/*/ and {dot: true}
    ✓ should match a.js with a/*/ and {nonegate: true}
    ✓ should match a/ with a/*/
    ✓ should match a/ with a/*/ and {dot: true}
    ✓ should match a/ with a/*/ and {nonegate: true}
    ✓ should match a/b with a/*/
    ✓ should match a/b with a/*/ and {dot: true}
    ✓ should match a/b with a/*/ and {nonegate: true}
    ✓ should match a/b/.c.md with a/*/
    ✓ should match a/b/.c.md with a/*/ and {dot: true}
    ✓ should match a/b/.c.md with a/*/ and {nonegate: true}
    ✓ should match a/b/c with a/*/
    ✓ should match a/b/c with a/*/ and {dot: true}
    ✓ should match a/b/c with a/*/ and {nonegate: true}
    ✓ should match a/b/c.md with a/*/
    ✓ should match a/b/c.md with a/*/ and {dot: true}
    ✓ should match a/b/c.md with a/*/ and {nonegate: true}
    ✓ should match a/b/c/ with a/*/
    ✓ should match a/b/c/ with a/*/ and {dot: true}
    ✓ should match a/b/c/ with a/*/ and {nonegate: true}
    ✓ should match a/b/c/d with a/*/
    ✓ should match a/b/c/d with a/*/ and {dot: true}
    ✓ should match a/b/c/d with a/*/ and {nonegate: true}
    ✓ should match a/b/c/d/ with a/*/
    ✓ should match a/b/c/d/ with a/*/ and {dot: true}
    ✓ should match a/b/c/d/ with a/*/ and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with a/*/
    ✓ should match a/b/c/d/e/f/z.js with a/*/ and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with a/*/ and {nonegate: true}
    ✓ should match a/b/c/z.js with a/*/
    ✓ should match a/b/c/z.js with a/*/ and {dot: true}
    ✓ should match a/b/c/z.js with a/*/ and {nonegate: true}
    ✓ should match a/bb with a/*/
    ✓ should match a/bb with a/*/ and {dot: true}
    ✓ should match a/bb with a/*/ and {nonegate: true}
    ✓ should match a/cb with a/*/
    ✓ should match a/cb with a/*/ and {dot: true}
    ✓ should match a/cb with a/*/ and {nonegate: true}
    ✓ should match abbbz with a/*/
    ✓ should match abbbz with a/*/ and {dot: true}
    ✓ should match abbbz with a/*/ and {nonegate: true}
    ✓ should match abc with a/*/
    ✓ should match abc with a/*/ and {dot: true}
    ✓ should match abc with a/*/ and {nonegate: true}
    ✓ should match abd with a/*/
    ✓ should match abd with a/*/ and {dot: true}
    ✓ should match abd with a/*/ and {nonegate: true}
    ✓ should match z.js with a/*/
    ✓ should match z.js with a/*/ and {dot: true}
    ✓ should match z.js with a/*/ and {nonegate: true}
    ✓ should match za.js with a/*/
    ✓ should match za.js with a/*/ and {dot: true}
    ✓ should match za.js with a/*/ and {nonegate: true}
    ✓ should match !a.js with a/*/
    ✓ should match !a.js with a/*/ and {dot: true}
    ✓ should match !a.js with a/*/ and {nonegate: true}
    ✓ should match !a/b with a/*/
    ✓ should match !a/b with a/*/ and {dot: true}
    ✓ should match !a/b with a/*/ and {nonegate: true}
    ✓ should match !a/b/ with a/*/
    ✓ should match !a/b/ with a/*/ and {dot: true}
    ✓ should match !a/b/ with a/*/ and {nonegate: true}
    ✓ should match !a/b/c with a/*/
    ✓ should match !a/b/c with a/*/ and {dot: true}
    ✓ should match !a/b/c with a/*/ and {nonegate: true}
    ✓ should match !a/b/c/ with a/*/
    ✓ should match !a/b/c/ with a/*/ and {dot: true}
    ✓ should match !a/b/c/ with a/*/ and {nonegate: true}
    ✓ should match !a/!b with a/*/
    ✓ should match !a/!b with a/*/ and {dot: true}
    ✓ should match !a/!b with a/*/ and {nonegate: true}
    ✓ should match !a/!b/c with a/*/
    ✓ should match !a/!b/c with a/*/ and {dot: true}
    ✓ should match !a/!b/c with a/*/ and {nonegate: true}
    ✓ should match !a/!b/c/d with a/*/
    ✓ should match !a/!b/c/d with a/*/ and {dot: true}
    ✓ should match !a/!b/c/d with a/*/ and {nonegate: true}
    ✓ should match !a/b/.c.md with a/*/
    ✓ should match !a/b/.c.md with a/*/ and {dot: true}
    ✓ should match !a/b/.c.md with a/*/ and {nonegate: true}
    ✓ should match /a/ with a/*/
    ✓ should match /a/ with a/*/ and {dot: true}
    ✓ should match /a/ with a/*/ and {nonegate: true}
    ✓ should match /a/b with a/*/
    ✓ should match /a/b with a/*/ and {dot: true}
    ✓ should match /a/b with a/*/ and {nonegate: true}
    ✓ should match /a/cb with a/*/
    ✓ should match /a/cb with a/*/ and {dot: true}
    ✓ should match /a/cb with a/*/ and {nonegate: true}
    ✓ should match /a/bb with a/*/
    ✓ should match /a/bb with a/*/ and {dot: true}
    ✓ should match /a/bb with a/*/ and {nonegate: true}
    ✓ should match /a/b/c with a/*/
    ✓ should match /a/b/c with a/*/ and {dot: true}
    ✓ should match /a/b/c with a/*/ and {nonegate: true}
    ✓ should match /a/b/c/ with a/*/
    ✓ should match /a/b/c/ with a/*/ and {dot: true}
    ✓ should match /a/b/c/ with a/*/ and {nonegate: true}
    ✓ should match /a/b/c/d with a/*/
    ✓ should match /a/b/c/d with a/*/ and {dot: true}
    ✓ should match /a/b/c/d with a/*/ and {nonegate: true}
    ✓ should match /a/b/c/d/ with a/*/
    ✓ should match /a/b/c/d/ with a/*/ and {dot: true}
    ✓ should match /a/b/c/d/ with a/*/ and {nonegate: true}
    ✓ should match . with a/*/
    ✓ should match . with a/*/ and {dot: true}
    ✓ should match . with a/*/ and {nonegate: true}
    ✓ should match ./ with a/*/
    ✓ should match ./ with a/*/ and {dot: true}
    ✓ should match ./ with a/*/ and {nonegate: true}
    ✓ should match .. with a/*/
    ✓ should match .. with a/*/ and {dot: true}
    ✓ should match .. with a/*/ and {nonegate: true}
    ✓ should match ../c with a/*/
    ✓ should match ../c with a/*/ and {dot: true}
    ✓ should match ../c with a/*/ and {nonegate: true}
    ✓ should match ../c with a/*/
    ✓ should match ../c with a/*/ and {dot: true}
    ✓ should match ../c with a/*/ and {nonegate: true}
    ✓ should match ./../c with a/*/
    ✓ should match ./../c with a/*/ and {dot: true}
    ✓ should match ./../c with a/*/ and {nonegate: true}
    ✓ should match ./a/../c with a/*/
    ✓ should match ./a/../c with a/*/ and {dot: true}
    ✓ should match ./a/../c with a/*/ and {nonegate: true}
    ✓ should match /.. with a/*/
    ✓ should match /.. with a/*/ and {dot: true}
    ✓ should match /.. with a/*/ and {nonegate: true}
    ✓ should match /../c with a/*/
    ✓ should match /../c with a/*/ and {dot: true}
    ✓ should match /../c with a/*/ and {nonegate: true}
    ✓ should match /../.c with a/*/
    ✓ should match /../.c with a/*/ and {dot: true}
    ✓ should match /../.c with a/*/ and {nonegate: true}
    ✓ should match /../.c/ with a/*/
    ✓ should match /../.c/ with a/*/ and {dot: true}
    ✓ should match /../.c/ with a/*/ and {nonegate: true}
    ✓ should match /a/../c with a/*/
    ✓ should match /a/../c with a/*/ and {dot: true}
    ✓ should match /a/../c with a/*/ and {nonegate: true}
    ✓ should match a/../c with a/*/
    ✓ should match a/../c with a/*/ and {dot: true}
    ✓ should match a/../c with a/*/ and {nonegate: true}
    ✓ should match ../.b/.c with a/*/
    ✓ should match ../.b/.c with a/*/ and {dot: true}
    ✓ should match ../.b/.c with a/*/ and {nonegate: true}
    ✓ should match ../b/.c with a/*/
    ✓ should match ../b/.c with a/*/ and {dot: true}
    ✓ should match ../b/.c with a/*/ and {nonegate: true}
    ✓ should match ./.b/.c with a/*/
    ✓ should match ./.b/.c with a/*/ and {dot: true}
    ✓ should match ./.b/.c with a/*/ and {nonegate: true}
    ✓ should match ./b/.c with a/*/
    ✓ should match ./b/.c with a/*/ and {dot: true}
    ✓ should match ./b/.c with a/*/ and {nonegate: true}
    ✓ should match .b with a/*/
    ✓ should match .b with a/*/ and {dot: true}
    ✓ should match .b with a/*/ and {nonegate: true}
    ✓ should match .b.c with a/*/
    ✓ should match .b.c with a/*/ and {dot: true}
    ✓ should match .b.c with a/*/ and {nonegate: true}
    ✓ should match .b.c/ with a/*/
    ✓ should match .b.c/ with a/*/ and {dot: true}
    ✓ should match .b.c/ with a/*/ and {nonegate: true}
    ✓ should match .b/ with a/*/
    ✓ should match .b/ with a/*/ and {dot: true}
    ✓ should match .b/ with a/*/ and {nonegate: true}
    ✓ should match .b/.c with a/*/
    ✓ should match .b/.c with a/*/ and {dot: true}
    ✓ should match .b/.c with a/*/ and {nonegate: true}
    ✓ should match .b/c with a/*/
    ✓ should match .b/c with a/*/ and {dot: true}
    ✓ should match .b/c with a/*/ and {nonegate: true}
    ✓ should match b/.c with a/*/
    ✓ should match b/.c with a/*/ and {dot: true}
    ✓ should match b/.c with a/*/ and {nonegate: true}
    ✓ should match b/.c/ with a/*/
    ✓ should match b/.c/ with a/*/ and {dot: true}
    ✓ should match b/.c/ with a/*/ and {nonegate: true}
    ✓ should match a/+b/c with a/*/
    ✓ should match a/+b/c with a/*/ and {dot: true}
    ✓ should match a/+b/c with a/*/ and {nonegate: true}
    ✓ should match +a/+b/c with a/*/
    ✓ should match +a/+b/c with a/*/ and {dot: true}
    ✓ should match +a/+b/c with a/*/ and {nonegate: true}
    ✓ should match a (foo) with a/*/
    ✓ should match a (foo) with a/*/ and {dot: true}
    ✓ should match a (foo) with a/*/ and {nonegate: true}
    ✓ should match a (foo)/(bar) with a/*/
    ✓ should match a (foo)/(bar) with a/*/ and {dot: true}
    ✓ should match a (foo)/(bar) with a/*/ and {nonegate: true}
    ✓ should match a/b/c (1) with a/*/
    ✓ should match a/b/c (1) with a/*/ and {dot: true}
    ✓ should match a/b/c (1) with a/*/ and {nonegate: true}
    ✓ should match a/b (2)/c (1) with a/*/
    ✓ should match a/b (2)/c (1) with a/*/ and {dot: true}
    ✓ should match a/b (2)/c (1) with a/*/ and {nonegate: true}
    ✓ should match a/b/c [def] with a/*/
    ✓ should match a/b/c [def] with a/*/ and {dot: true}
    ✓ should match a/b/c [def] with a/*/ and {nonegate: true}
    ✓ should match a with a/b/*
    ✓ should match a with a/b/* and {dot: true}
    ✓ should match a with a/b/* and {nonegate: true}
    ✓ should match a.md with a/b/*
    ✓ should match a.md with a/b/* and {dot: true}
    ✓ should match a.md with a/b/* and {nonegate: true}
    ✓ should match a.js with a/b/*
    ✓ should match a.js with a/b/* and {dot: true}
    ✓ should match a.js with a/b/* and {nonegate: true}
    ✓ should match a/ with a/b/*
    ✓ should match a/ with a/b/* and {dot: true}
    ✓ should match a/ with a/b/* and {nonegate: true}
    ✓ should match a/b with a/b/*
    ✓ should match a/b with a/b/* and {dot: true}
    ✓ should match a/b with a/b/* and {nonegate: true}
    ✓ should match a/b/.c.md with a/b/*
    ✓ should match a/b/.c.md with a/b/* and {dot: true}
    ✓ should match a/b/.c.md with a/b/* and {nonegate: true}
    ✓ should match a/b/c with a/b/*
    ✓ should match a/b/c with a/b/* and {dot: true}
    ✓ should match a/b/c with a/b/* and {nonegate: true}
    ✓ should match a/b/c.md with a/b/*
    ✓ should match a/b/c.md with a/b/* and {dot: true}
    ✓ should match a/b/c.md with a/b/* and {nonegate: true}
    ✓ should match a/b/c/ with a/b/*
    ✓ should match a/b/c/ with a/b/* and {dot: true}
    ✓ should match a/b/c/ with a/b/* and {nonegate: true}
    ✓ should match a/b/c/d with a/b/*
    ✓ should match a/b/c/d with a/b/* and {dot: true}
    ✓ should match a/b/c/d with a/b/* and {nonegate: true}
    ✓ should match a/b/c/d/ with a/b/*
    ✓ should match a/b/c/d/ with a/b/* and {dot: true}
    ✓ should match a/b/c/d/ with a/b/* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with a/b/*
    ✓ should match a/b/c/d/e/f/z.js with a/b/* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with a/b/* and {nonegate: true}
    ✓ should match a/b/c/z.js with a/b/*
    ✓ should match a/b/c/z.js with a/b/* and {dot: true}
    ✓ should match a/b/c/z.js with a/b/* and {nonegate: true}
    ✓ should match a/bb with a/b/*
    ✓ should match a/bb with a/b/* and {dot: true}
    ✓ should match a/bb with a/b/* and {nonegate: true}
    ✓ should match a/cb with a/b/*
    ✓ should match a/cb with a/b/* and {dot: true}
    ✓ should match a/cb with a/b/* and {nonegate: true}
    ✓ should match abbbz with a/b/*
    ✓ should match abbbz with a/b/* and {dot: true}
    ✓ should match abbbz with a/b/* and {nonegate: true}
    ✓ should match abc with a/b/*
    ✓ should match abc with a/b/* and {dot: true}
    ✓ should match abc with a/b/* and {nonegate: true}
    ✓ should match abd with a/b/*
    ✓ should match abd with a/b/* and {dot: true}
    ✓ should match abd with a/b/* and {nonegate: true}
    ✓ should match z.js with a/b/*
    ✓ should match z.js with a/b/* and {dot: true}
    ✓ should match z.js with a/b/* and {nonegate: true}
    ✓ should match za.js with a/b/*
    ✓ should match za.js with a/b/* and {dot: true}
    ✓ should match za.js with a/b/* and {nonegate: true}
    ✓ should match !a.js with a/b/*
    ✓ should match !a.js with a/b/* and {dot: true}
    ✓ should match !a.js with a/b/* and {nonegate: true}
    ✓ should match !a/b with a/b/*
    ✓ should match !a/b with a/b/* and {dot: true}
    ✓ should match !a/b with a/b/* and {nonegate: true}
    ✓ should match !a/b/ with a/b/*
    ✓ should match !a/b/ with a/b/* and {dot: true}
    ✓ should match !a/b/ with a/b/* and {nonegate: true}
    ✓ should match !a/b/c with a/b/*
    ✓ should match !a/b/c with a/b/* and {dot: true}
    ✓ should match !a/b/c with a/b/* and {nonegate: true}
    ✓ should match !a/b/c/ with a/b/*
    ✓ should match !a/b/c/ with a/b/* and {dot: true}
    ✓ should match !a/b/c/ with a/b/* and {nonegate: true}
    ✓ should match !a/!b with a/b/*
    ✓ should match !a/!b with a/b/* and {dot: true}
    ✓ should match !a/!b with a/b/* and {nonegate: true}
    ✓ should match !a/!b/c with a/b/*
    ✓ should match !a/!b/c with a/b/* and {dot: true}
    ✓ should match !a/!b/c with a/b/* and {nonegate: true}
    ✓ should match !a/!b/c/d with a/b/*
    ✓ should match !a/!b/c/d with a/b/* and {dot: true}
    ✓ should match !a/!b/c/d with a/b/* and {nonegate: true}
    ✓ should match !a/b/.c.md with a/b/*
    ✓ should match !a/b/.c.md with a/b/* and {dot: true}
    ✓ should match !a/b/.c.md with a/b/* and {nonegate: true}
    ✓ should match /a/ with a/b/*
    ✓ should match /a/ with a/b/* and {dot: true}
    ✓ should match /a/ with a/b/* and {nonegate: true}
    ✓ should match /a/b with a/b/*
    ✓ should match /a/b with a/b/* and {dot: true}
    ✓ should match /a/b with a/b/* and {nonegate: true}
    ✓ should match /a/cb with a/b/*
    ✓ should match /a/cb with a/b/* and {dot: true}
    ✓ should match /a/cb with a/b/* and {nonegate: true}
    ✓ should match /a/bb with a/b/*
    ✓ should match /a/bb with a/b/* and {dot: true}
    ✓ should match /a/bb with a/b/* and {nonegate: true}
    ✓ should match /a/b/c with a/b/*
    ✓ should match /a/b/c with a/b/* and {dot: true}
    ✓ should match /a/b/c with a/b/* and {nonegate: true}
    ✓ should match /a/b/c/ with a/b/*
    ✓ should match /a/b/c/ with a/b/* and {dot: true}
    ✓ should match /a/b/c/ with a/b/* and {nonegate: true}
    ✓ should match /a/b/c/d with a/b/*
    ✓ should match /a/b/c/d with a/b/* and {dot: true}
    ✓ should match /a/b/c/d with a/b/* and {nonegate: true}
    ✓ should match /a/b/c/d/ with a/b/*
    ✓ should match /a/b/c/d/ with a/b/* and {dot: true}
    ✓ should match /a/b/c/d/ with a/b/* and {nonegate: true}
    ✓ should match . with a/b/*
    ✓ should match . with a/b/* and {dot: true}
    ✓ should match . with a/b/* and {nonegate: true}
    ✓ should match ./ with a/b/*
    ✓ should match ./ with a/b/* and {dot: true}
    ✓ should match ./ with a/b/* and {nonegate: true}
    ✓ should match .. with a/b/*
    ✓ should match .. with a/b/* and {dot: true}
    ✓ should match .. with a/b/* and {nonegate: true}
    ✓ should match ../c with a/b/*
    ✓ should match ../c with a/b/* and {dot: true}
    ✓ should match ../c with a/b/* and {nonegate: true}
    ✓ should match ../c with a/b/*
    ✓ should match ../c with a/b/* and {dot: true}
    ✓ should match ../c with a/b/* and {nonegate: true}
    ✓ should match ./../c with a/b/*
    ✓ should match ./../c with a/b/* and {dot: true}
    ✓ should match ./../c with a/b/* and {nonegate: true}
    ✓ should match ./a/../c with a/b/*
    ✓ should match ./a/../c with a/b/* and {dot: true}
    ✓ should match ./a/../c with a/b/* and {nonegate: true}
    ✓ should match /.. with a/b/*
    ✓ should match /.. with a/b/* and {dot: true}
    ✓ should match /.. with a/b/* and {nonegate: true}
    ✓ should match /../c with a/b/*
    ✓ should match /../c with a/b/* and {dot: true}
    ✓ should match /../c with a/b/* and {nonegate: true}
    ✓ should match /../.c with a/b/*
    ✓ should match /../.c with a/b/* and {dot: true}
    ✓ should match /../.c with a/b/* and {nonegate: true}
    ✓ should match /../.c/ with a/b/*
    ✓ should match /../.c/ with a/b/* and {dot: true}
    ✓ should match /../.c/ with a/b/* and {nonegate: true}
    ✓ should match /a/../c with a/b/*
    ✓ should match /a/../c with a/b/* and {dot: true}
    ✓ should match /a/../c with a/b/* and {nonegate: true}
    ✓ should match a/../c with a/b/*
    ✓ should match a/../c with a/b/* and {dot: true}
    ✓ should match a/../c with a/b/* and {nonegate: true}
    ✓ should match ../.b/.c with a/b/*
    ✓ should match ../.b/.c with a/b/* and {dot: true}
    ✓ should match ../.b/.c with a/b/* and {nonegate: true}
    ✓ should match ../b/.c with a/b/*
    ✓ should match ../b/.c with a/b/* and {dot: true}
    ✓ should match ../b/.c with a/b/* and {nonegate: true}
    ✓ should match ./.b/.c with a/b/*
    ✓ should match ./.b/.c with a/b/* and {dot: true}
    ✓ should match ./.b/.c with a/b/* and {nonegate: true}
    ✓ should match ./b/.c with a/b/*
    ✓ should match ./b/.c with a/b/* and {dot: true}
    ✓ should match ./b/.c with a/b/* and {nonegate: true}
    ✓ should match .b with a/b/*
    ✓ should match .b with a/b/* and {dot: true}
    ✓ should match .b with a/b/* and {nonegate: true}
    ✓ should match .b.c with a/b/*
    ✓ should match .b.c with a/b/* and {dot: true}
    ✓ should match .b.c with a/b/* and {nonegate: true}
    ✓ should match .b.c/ with a/b/*
    ✓ should match .b.c/ with a/b/* and {dot: true}
    ✓ should match .b.c/ with a/b/* and {nonegate: true}
    ✓ should match .b/ with a/b/*
    ✓ should match .b/ with a/b/* and {dot: true}
    ✓ should match .b/ with a/b/* and {nonegate: true}
    ✓ should match .b/.c with a/b/*
    ✓ should match .b/.c with a/b/* and {dot: true}
    ✓ should match .b/.c with a/b/* and {nonegate: true}
    ✓ should match .b/c with a/b/*
    ✓ should match .b/c with a/b/* and {dot: true}
    ✓ should match .b/c with a/b/* and {nonegate: true}
    ✓ should match b/.c with a/b/*
    ✓ should match b/.c with a/b/* and {dot: true}
    ✓ should match b/.c with a/b/* and {nonegate: true}
    ✓ should match b/.c/ with a/b/*
    ✓ should match b/.c/ with a/b/* and {dot: true}
    ✓ should match b/.c/ with a/b/* and {nonegate: true}
    ✓ should match a/+b/c with a/b/*
    ✓ should match a/+b/c with a/b/* and {dot: true}
    ✓ should match a/+b/c with a/b/* and {nonegate: true}
    ✓ should match +a/+b/c with a/b/*
    ✓ should match +a/+b/c with a/b/* and {dot: true}
    ✓ should match +a/+b/c with a/b/* and {nonegate: true}
    ✓ should match a (foo) with a/b/*
    ✓ should match a (foo) with a/b/* and {dot: true}
    ✓ should match a (foo) with a/b/* and {nonegate: true}
    ✓ should match a (foo)/(bar) with a/b/*
    ✓ should match a (foo)/(bar) with a/b/* and {dot: true}
    ✓ should match a (foo)/(bar) with a/b/* and {nonegate: true}
    ✓ should match a/b/c (1) with a/b/*
    ✓ should match a/b/c (1) with a/b/* and {dot: true}
    ✓ should match a/b/c (1) with a/b/* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with a/b/*
    ✓ should match a/b (2)/c (1) with a/b/* and {dot: true}
    ✓ should match a/b (2)/c (1) with a/b/* and {nonegate: true}
    ✓ should match a/b/c [def] with a/b/*
    ✓ should match a/b/c [def] with a/b/* and {dot: true}
    ✓ should match a/b/c [def] with a/b/* and {nonegate: true}
    ✓ should match a with a/**/
    ✓ should match a with a/**/ and {dot: true}
    ✓ should match a with a/**/ and {nonegate: true}
    ✓ should match a.md with a/**/
    ✓ should match a.md with a/**/ and {dot: true}
    ✓ should match a.md with a/**/ and {nonegate: true}
    ✓ should match a.js with a/**/
    ✓ should match a.js with a/**/ and {dot: true}
    ✓ should match a.js with a/**/ and {nonegate: true}
    ✓ should match a/ with a/**/
    ✓ should match a/ with a/**/ and {dot: true}
    ✓ should match a/ with a/**/ and {nonegate: true}
    ✓ should match a/b with a/**/
    ✓ should match a/b with a/**/ and {dot: true}
    ✓ should match a/b with a/**/ and {nonegate: true}
    ✓ should match a/b/.c.md with a/**/
    ✓ should match a/b/.c.md with a/**/ and {dot: true}
    ✓ should match a/b/.c.md with a/**/ and {nonegate: true}
    ✓ should match a/b/c with a/**/
    ✓ should match a/b/c with a/**/ and {dot: true}
    ✓ should match a/b/c with a/**/ and {nonegate: true}
    ✓ should match a/b/c.md with a/**/
    ✓ should match a/b/c.md with a/**/ and {dot: true}
    ✓ should match a/b/c.md with a/**/ and {nonegate: true}
    ✓ should match a/b/c/ with a/**/
    ✓ should match a/b/c/ with a/**/ and {dot: true}
    ✓ should match a/b/c/ with a/**/ and {nonegate: true}
    ✓ should match a/b/c/d with a/**/
    ✓ should match a/b/c/d with a/**/ and {dot: true}
    ✓ should match a/b/c/d with a/**/ and {nonegate: true}
    ✓ should match a/b/c/d/ with a/**/
    ✓ should match a/b/c/d/ with a/**/ and {dot: true}
    ✓ should match a/b/c/d/ with a/**/ and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with a/**/
    ✓ should match a/b/c/d/e/f/z.js with a/**/ and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with a/**/ and {nonegate: true}
    ✓ should match a/b/c/z.js with a/**/
    ✓ should match a/b/c/z.js with a/**/ and {dot: true}
    ✓ should match a/b/c/z.js with a/**/ and {nonegate: true}
    ✓ should match a/bb with a/**/
    ✓ should match a/bb with a/**/ and {dot: true}
    ✓ should match a/bb with a/**/ and {nonegate: true}
    ✓ should match a/cb with a/**/
    ✓ should match a/cb with a/**/ and {dot: true}
    ✓ should match a/cb with a/**/ and {nonegate: true}
    ✓ should match abbbz with a/**/
    ✓ should match abbbz with a/**/ and {dot: true}
    ✓ should match abbbz with a/**/ and {nonegate: true}
    ✓ should match abc with a/**/
    ✓ should match abc with a/**/ and {dot: true}
    ✓ should match abc with a/**/ and {nonegate: true}
    ✓ should match abd with a/**/
    ✓ should match abd with a/**/ and {dot: true}
    ✓ should match abd with a/**/ and {nonegate: true}
    ✓ should match z.js with a/**/
    ✓ should match z.js with a/**/ and {dot: true}
    ✓ should match z.js with a/**/ and {nonegate: true}
    ✓ should match za.js with a/**/
    ✓ should match za.js with a/**/ and {dot: true}
    ✓ should match za.js with a/**/ and {nonegate: true}
    ✓ should match !a.js with a/**/
    ✓ should match !a.js with a/**/ and {dot: true}
    ✓ should match !a.js with a/**/ and {nonegate: true}
    ✓ should match !a/b with a/**/
    ✓ should match !a/b with a/**/ and {dot: true}
    ✓ should match !a/b with a/**/ and {nonegate: true}
    ✓ should match !a/b/ with a/**/
    ✓ should match !a/b/ with a/**/ and {dot: true}
    ✓ should match !a/b/ with a/**/ and {nonegate: true}
    ✓ should match !a/b/c with a/**/
    ✓ should match !a/b/c with a/**/ and {dot: true}
    ✓ should match !a/b/c with a/**/ and {nonegate: true}
    ✓ should match !a/b/c/ with a/**/
    ✓ should match !a/b/c/ with a/**/ and {dot: true}
    ✓ should match !a/b/c/ with a/**/ and {nonegate: true}
    ✓ should match !a/!b with a/**/
    ✓ should match !a/!b with a/**/ and {dot: true}
    ✓ should match !a/!b with a/**/ and {nonegate: true}
    ✓ should match !a/!b/c with a/**/
    ✓ should match !a/!b/c with a/**/ and {dot: true}
    ✓ should match !a/!b/c with a/**/ and {nonegate: true}
    ✓ should match !a/!b/c/d with a/**/
    ✓ should match !a/!b/c/d with a/**/ and {dot: true}
    ✓ should match !a/!b/c/d with a/**/ and {nonegate: true}
    ✓ should match !a/b/.c.md with a/**/
    ✓ should match !a/b/.c.md with a/**/ and {dot: true}
    ✓ should match !a/b/.c.md with a/**/ and {nonegate: true}
    ✓ should match /a/ with a/**/
    ✓ should match /a/ with a/**/ and {dot: true}
    ✓ should match /a/ with a/**/ and {nonegate: true}
    ✓ should match /a/b with a/**/
    ✓ should match /a/b with a/**/ and {dot: true}
    ✓ should match /a/b with a/**/ and {nonegate: true}
    ✓ should match /a/cb with a/**/
    ✓ should match /a/cb with a/**/ and {dot: true}
    ✓ should match /a/cb with a/**/ and {nonegate: true}
    ✓ should match /a/bb with a/**/
    ✓ should match /a/bb with a/**/ and {dot: true}
    ✓ should match /a/bb with a/**/ and {nonegate: true}
    ✓ should match /a/b/c with a/**/
    ✓ should match /a/b/c with a/**/ and {dot: true}
    ✓ should match /a/b/c with a/**/ and {nonegate: true}
    ✓ should match /a/b/c/ with a/**/
    ✓ should match /a/b/c/ with a/**/ and {dot: true}
    ✓ should match /a/b/c/ with a/**/ and {nonegate: true}
    ✓ should match /a/b/c/d with a/**/
    ✓ should match /a/b/c/d with a/**/ and {dot: true}
    ✓ should match /a/b/c/d with a/**/ and {nonegate: true}
    ✓ should match /a/b/c/d/ with a/**/
    ✓ should match /a/b/c/d/ with a/**/ and {dot: true}
    ✓ should match /a/b/c/d/ with a/**/ and {nonegate: true}
    ✓ should match . with a/**/
    ✓ should match . with a/**/ and {dot: true}
    ✓ should match . with a/**/ and {nonegate: true}
    ✓ should match ./ with a/**/
    ✓ should match ./ with a/**/ and {dot: true}
    ✓ should match ./ with a/**/ and {nonegate: true}
    ✓ should match .. with a/**/
    ✓ should match .. with a/**/ and {dot: true}
    ✓ should match .. with a/**/ and {nonegate: true}
    ✓ should match ../c with a/**/
    ✓ should match ../c with a/**/ and {dot: true}
    ✓ should match ../c with a/**/ and {nonegate: true}
    ✓ should match ../c with a/**/
    ✓ should match ../c with a/**/ and {dot: true}
    ✓ should match ../c with a/**/ and {nonegate: true}
    ✓ should match ./../c with a/**/
    ✓ should match ./../c with a/**/ and {dot: true}
    ✓ should match ./../c with a/**/ and {nonegate: true}
    ✓ should match ./a/../c with a/**/
    ✓ should match ./a/../c with a/**/ and {dot: true}
    ✓ should match ./a/../c with a/**/ and {nonegate: true}
    ✓ should match /.. with a/**/
    ✓ should match /.. with a/**/ and {dot: true}
    ✓ should match /.. with a/**/ and {nonegate: true}
    ✓ should match /../c with a/**/
    ✓ should match /../c with a/**/ and {dot: true}
    ✓ should match /../c with a/**/ and {nonegate: true}
    ✓ should match /../.c with a/**/
    ✓ should match /../.c with a/**/ and {dot: true}
    ✓ should match /../.c with a/**/ and {nonegate: true}
    ✓ should match /../.c/ with a/**/
    ✓ should match /../.c/ with a/**/ and {dot: true}
    ✓ should match /../.c/ with a/**/ and {nonegate: true}
    ✓ should match /a/../c with a/**/
    ✓ should match /a/../c with a/**/ and {dot: true}
    ✓ should match /a/../c with a/**/ and {nonegate: true}
    ✓ should match a/../c with a/**/
    ✓ should match a/../c with a/**/ and {dot: true}
    ✓ should match a/../c with a/**/ and {nonegate: true}
    ✓ should match ../.b/.c with a/**/
    ✓ should match ../.b/.c with a/**/ and {dot: true}
    ✓ should match ../.b/.c with a/**/ and {nonegate: true}
    ✓ should match ../b/.c with a/**/
    ✓ should match ../b/.c with a/**/ and {dot: true}
    ✓ should match ../b/.c with a/**/ and {nonegate: true}
    ✓ should match ./.b/.c with a/**/
    ✓ should match ./.b/.c with a/**/ and {dot: true}
    ✓ should match ./.b/.c with a/**/ and {nonegate: true}
    ✓ should match ./b/.c with a/**/
    ✓ should match ./b/.c with a/**/ and {dot: true}
    ✓ should match ./b/.c with a/**/ and {nonegate: true}
    ✓ should match .b with a/**/
    ✓ should match .b with a/**/ and {dot: true}
    ✓ should match .b with a/**/ and {nonegate: true}
    ✓ should match .b.c with a/**/
    ✓ should match .b.c with a/**/ and {dot: true}
    ✓ should match .b.c with a/**/ and {nonegate: true}
    ✓ should match .b.c/ with a/**/
    ✓ should match .b.c/ with a/**/ and {dot: true}
    ✓ should match .b.c/ with a/**/ and {nonegate: true}
    ✓ should match .b/ with a/**/
    ✓ should match .b/ with a/**/ and {dot: true}
    ✓ should match .b/ with a/**/ and {nonegate: true}
    ✓ should match .b/.c with a/**/
    ✓ should match .b/.c with a/**/ and {dot: true}
    ✓ should match .b/.c with a/**/ and {nonegate: true}
    ✓ should match .b/c with a/**/
    ✓ should match .b/c with a/**/ and {dot: true}
    ✓ should match .b/c with a/**/ and {nonegate: true}
    ✓ should match b/.c with a/**/
    ✓ should match b/.c with a/**/ and {dot: true}
    ✓ should match b/.c with a/**/ and {nonegate: true}
    ✓ should match b/.c/ with a/**/
    ✓ should match b/.c/ with a/**/ and {dot: true}
    ✓ should match b/.c/ with a/**/ and {nonegate: true}
    ✓ should match a/+b/c with a/**/
    ✓ should match a/+b/c with a/**/ and {dot: true}
    ✓ should match a/+b/c with a/**/ and {nonegate: true}
    ✓ should match +a/+b/c with a/**/
    ✓ should match +a/+b/c with a/**/ and {dot: true}
    ✓ should match +a/+b/c with a/**/ and {nonegate: true}
    ✓ should match a (foo) with a/**/
    ✓ should match a (foo) with a/**/ and {dot: true}
    ✓ should match a (foo) with a/**/ and {nonegate: true}
    ✓ should match a (foo)/(bar) with a/**/
    ✓ should match a (foo)/(bar) with a/**/ and {dot: true}
    ✓ should match a (foo)/(bar) with a/**/ and {nonegate: true}
    ✓ should match a/b/c (1) with a/**/
    ✓ should match a/b/c (1) with a/**/ and {dot: true}
    ✓ should match a/b/c (1) with a/**/ and {nonegate: true}
    ✓ should match a/b (2)/c (1) with a/**/
    ✓ should match a/b (2)/c (1) with a/**/ and {dot: true}
    ✓ should match a/b (2)/c (1) with a/**/ and {nonegate: true}
    ✓ should match a/b/c [def] with a/**/
    ✓ should match a/b/c [def] with a/**/ and {dot: true}
    ✓ should match a/b/c [def] with a/**/ and {nonegate: true}
    ✓ should match a with a/**/b
    ✓ should match a with a/**/b and {dot: true}
    ✓ should match a with a/**/b and {nonegate: true}
    ✓ should match a.md with a/**/b
    ✓ should match a.md with a/**/b and {dot: true}
    ✓ should match a.md with a/**/b and {nonegate: true}
    ✓ should match a.js with a/**/b
    ✓ should match a.js with a/**/b and {dot: true}
    ✓ should match a.js with a/**/b and {nonegate: true}
    ✓ should match a/ with a/**/b
    ✓ should match a/ with a/**/b and {dot: true}
    ✓ should match a/ with a/**/b and {nonegate: true}
    ✓ should match a/b with a/**/b
    ✓ should match a/b with a/**/b and {dot: true}
    ✓ should match a/b with a/**/b and {nonegate: true}
    ✓ should match a/b/.c.md with a/**/b
    ✓ should match a/b/.c.md with a/**/b and {dot: true}
    ✓ should match a/b/.c.md with a/**/b and {nonegate: true}
    ✓ should match a/b/c with a/**/b
    ✓ should match a/b/c with a/**/b and {dot: true}
    ✓ should match a/b/c with a/**/b and {nonegate: true}
    ✓ should match a/b/c.md with a/**/b
    ✓ should match a/b/c.md with a/**/b and {dot: true}
    ✓ should match a/b/c.md with a/**/b and {nonegate: true}
    ✓ should match a/b/c/ with a/**/b
    ✓ should match a/b/c/ with a/**/b and {dot: true}
    ✓ should match a/b/c/ with a/**/b and {nonegate: true}
    ✓ should match a/b/c/d with a/**/b
    ✓ should match a/b/c/d with a/**/b and {dot: true}
    ✓ should match a/b/c/d with a/**/b and {nonegate: true}
    ✓ should match a/b/c/d/ with a/**/b
    ✓ should match a/b/c/d/ with a/**/b and {dot: true}
    ✓ should match a/b/c/d/ with a/**/b and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with a/**/b
    ✓ should match a/b/c/d/e/f/z.js with a/**/b and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with a/**/b and {nonegate: true}
    ✓ should match a/b/c/z.js with a/**/b
    ✓ should match a/b/c/z.js with a/**/b and {dot: true}
    ✓ should match a/b/c/z.js with a/**/b and {nonegate: true}
    ✓ should match a/bb with a/**/b
    ✓ should match a/bb with a/**/b and {dot: true}
    ✓ should match a/bb with a/**/b and {nonegate: true}
    ✓ should match a/cb with a/**/b
    ✓ should match a/cb with a/**/b and {dot: true}
    ✓ should match a/cb with a/**/b and {nonegate: true}
    ✓ should match abbbz with a/**/b
    ✓ should match abbbz with a/**/b and {dot: true}
    ✓ should match abbbz with a/**/b and {nonegate: true}
    ✓ should match abc with a/**/b
    ✓ should match abc with a/**/b and {dot: true}
    ✓ should match abc with a/**/b and {nonegate: true}
    ✓ should match abd with a/**/b
    ✓ should match abd with a/**/b and {dot: true}
    ✓ should match abd with a/**/b and {nonegate: true}
    ✓ should match z.js with a/**/b
    ✓ should match z.js with a/**/b and {dot: true}
    ✓ should match z.js with a/**/b and {nonegate: true}
    ✓ should match za.js with a/**/b
    ✓ should match za.js with a/**/b and {dot: true}
    ✓ should match za.js with a/**/b and {nonegate: true}
    ✓ should match !a.js with a/**/b
    ✓ should match !a.js with a/**/b and {dot: true}
    ✓ should match !a.js with a/**/b and {nonegate: true}
    ✓ should match !a/b with a/**/b
    ✓ should match !a/b with a/**/b and {dot: true}
    ✓ should match !a/b with a/**/b and {nonegate: true}
    ✓ should match !a/b/ with a/**/b
    ✓ should match !a/b/ with a/**/b and {dot: true}
    ✓ should match !a/b/ with a/**/b and {nonegate: true}
    ✓ should match !a/b/c with a/**/b
    ✓ should match !a/b/c with a/**/b and {dot: true}
    ✓ should match !a/b/c with a/**/b and {nonegate: true}
    ✓ should match !a/b/c/ with a/**/b
    ✓ should match !a/b/c/ with a/**/b and {dot: true}
    ✓ should match !a/b/c/ with a/**/b and {nonegate: true}
    ✓ should match !a/!b with a/**/b
    ✓ should match !a/!b with a/**/b and {dot: true}
    ✓ should match !a/!b with a/**/b and {nonegate: true}
    ✓ should match !a/!b/c with a/**/b
    ✓ should match !a/!b/c with a/**/b and {dot: true}
    ✓ should match !a/!b/c with a/**/b and {nonegate: true}
    ✓ should match !a/!b/c/d with a/**/b
    ✓ should match !a/!b/c/d with a/**/b and {dot: true}
    ✓ should match !a/!b/c/d with a/**/b and {nonegate: true}
    ✓ should match !a/b/.c.md with a/**/b
    ✓ should match !a/b/.c.md with a/**/b and {dot: true}
    ✓ should match !a/b/.c.md with a/**/b and {nonegate: true}
    ✓ should match /a/ with a/**/b
    ✓ should match /a/ with a/**/b and {dot: true}
    ✓ should match /a/ with a/**/b and {nonegate: true}
    ✓ should match /a/b with a/**/b
    ✓ should match /a/b with a/**/b and {dot: true}
    ✓ should match /a/b with a/**/b and {nonegate: true}
    ✓ should match /a/cb with a/**/b
    ✓ should match /a/cb with a/**/b and {dot: true}
    ✓ should match /a/cb with a/**/b and {nonegate: true}
    ✓ should match /a/bb with a/**/b
    ✓ should match /a/bb with a/**/b and {dot: true}
    ✓ should match /a/bb with a/**/b and {nonegate: true}
    ✓ should match /a/b/c with a/**/b
    ✓ should match /a/b/c with a/**/b and {dot: true}
    ✓ should match /a/b/c with a/**/b and {nonegate: true}
    ✓ should match /a/b/c/ with a/**/b
    ✓ should match /a/b/c/ with a/**/b and {dot: true}
    ✓ should match /a/b/c/ with a/**/b and {nonegate: true}
    ✓ should match /a/b/c/d with a/**/b
    ✓ should match /a/b/c/d with a/**/b and {dot: true}
    ✓ should match /a/b/c/d with a/**/b and {nonegate: true}
    ✓ should match /a/b/c/d/ with a/**/b
    ✓ should match /a/b/c/d/ with a/**/b and {dot: true}
    ✓ should match /a/b/c/d/ with a/**/b and {nonegate: true}
    ✓ should match . with a/**/b
    ✓ should match . with a/**/b and {dot: true}
    ✓ should match . with a/**/b and {nonegate: true}
    ✓ should match ./ with a/**/b
    ✓ should match ./ with a/**/b and {dot: true}
    ✓ should match ./ with a/**/b and {nonegate: true}
    ✓ should match .. with a/**/b
    ✓ should match .. with a/**/b and {dot: true}
    ✓ should match .. with a/**/b and {nonegate: true}
    ✓ should match ../c with a/**/b
    ✓ should match ../c with a/**/b and {dot: true}
    ✓ should match ../c with a/**/b and {nonegate: true}
    ✓ should match ../c with a/**/b
    ✓ should match ../c with a/**/b and {dot: true}
    ✓ should match ../c with a/**/b and {nonegate: true}
    ✓ should match ./../c with a/**/b
    ✓ should match ./../c with a/**/b and {dot: true}
    ✓ should match ./../c with a/**/b and {nonegate: true}
    ✓ should match ./a/../c with a/**/b
    ✓ should match ./a/../c with a/**/b and {dot: true}
    ✓ should match ./a/../c with a/**/b and {nonegate: true}
    ✓ should match /.. with a/**/b
    ✓ should match /.. with a/**/b and {dot: true}
    ✓ should match /.. with a/**/b and {nonegate: true}
    ✓ should match /../c with a/**/b
    ✓ should match /../c with a/**/b and {dot: true}
    ✓ should match /../c with a/**/b and {nonegate: true}
    ✓ should match /../.c with a/**/b
    ✓ should match /../.c with a/**/b and {dot: true}
    ✓ should match /../.c with a/**/b and {nonegate: true}
    ✓ should match /../.c/ with a/**/b
    ✓ should match /../.c/ with a/**/b and {dot: true}
    ✓ should match /../.c/ with a/**/b and {nonegate: true}
    ✓ should match /a/../c with a/**/b
    ✓ should match /a/../c with a/**/b and {dot: true}
    ✓ should match /a/../c with a/**/b and {nonegate: true}
    ✓ should match a/../c with a/**/b
    ✓ should match a/../c with a/**/b and {dot: true}
    ✓ should match a/../c with a/**/b and {nonegate: true}
    ✓ should match ../.b/.c with a/**/b
    ✓ should match ../.b/.c with a/**/b and {dot: true}
    ✓ should match ../.b/.c with a/**/b and {nonegate: true}
    ✓ should match ../b/.c with a/**/b
    ✓ should match ../b/.c with a/**/b and {dot: true}
    ✓ should match ../b/.c with a/**/b and {nonegate: true}
    ✓ should match ./.b/.c with a/**/b
    ✓ should match ./.b/.c with a/**/b and {dot: true}
    ✓ should match ./.b/.c with a/**/b and {nonegate: true}
    ✓ should match ./b/.c with a/**/b
    ✓ should match ./b/.c with a/**/b and {dot: true}
    ✓ should match ./b/.c with a/**/b and {nonegate: true}
    ✓ should match .b with a/**/b
    ✓ should match .b with a/**/b and {dot: true}
    ✓ should match .b with a/**/b and {nonegate: true}
    ✓ should match .b.c with a/**/b
    ✓ should match .b.c with a/**/b and {dot: true}
    ✓ should match .b.c with a/**/b and {nonegate: true}
    ✓ should match .b.c/ with a/**/b
    ✓ should match .b.c/ with a/**/b and {dot: true}
    ✓ should match .b.c/ with a/**/b and {nonegate: true}
    ✓ should match .b/ with a/**/b
    ✓ should match .b/ with a/**/b and {dot: true}
    ✓ should match .b/ with a/**/b and {nonegate: true}
    ✓ should match .b/.c with a/**/b
    ✓ should match .b/.c with a/**/b and {dot: true}
    ✓ should match .b/.c with a/**/b and {nonegate: true}
    ✓ should match .b/c with a/**/b
    ✓ should match .b/c with a/**/b and {dot: true}
    ✓ should match .b/c with a/**/b and {nonegate: true}
    ✓ should match b/.c with a/**/b
    ✓ should match b/.c with a/**/b and {dot: true}
    ✓ should match b/.c with a/**/b and {nonegate: true}
    ✓ should match b/.c/ with a/**/b
    ✓ should match b/.c/ with a/**/b and {dot: true}
    ✓ should match b/.c/ with a/**/b and {nonegate: true}
    ✓ should match a/+b/c with a/**/b
    ✓ should match a/+b/c with a/**/b and {dot: true}
    ✓ should match a/+b/c with a/**/b and {nonegate: true}
    ✓ should match +a/+b/c with a/**/b
    ✓ should match +a/+b/c with a/**/b and {dot: true}
    ✓ should match +a/+b/c with a/**/b and {nonegate: true}
    ✓ should match a (foo) with a/**/b
    ✓ should match a (foo) with a/**/b and {dot: true}
    ✓ should match a (foo) with a/**/b and {nonegate: true}
    ✓ should match a (foo)/(bar) with a/**/b
    ✓ should match a (foo)/(bar) with a/**/b and {dot: true}
    ✓ should match a (foo)/(bar) with a/**/b and {nonegate: true}
    ✓ should match a/b/c (1) with a/**/b
    ✓ should match a/b/c (1) with a/**/b and {dot: true}
    ✓ should match a/b/c (1) with a/**/b and {nonegate: true}
    ✓ should match a/b (2)/c (1) with a/**/b
    ✓ should match a/b (2)/c (1) with a/**/b and {dot: true}
    ✓ should match a/b (2)/c (1) with a/**/b and {nonegate: true}
    ✓ should match a/b/c [def] with a/**/b
    ✓ should match a/b/c [def] with a/**/b and {dot: true}
    ✓ should match a/b/c [def] with a/**/b and {nonegate: true}
    ✓ should match a with a/**b
    ✓ should match a with a/**b and {dot: true}
    ✓ should match a with a/**b and {nonegate: true}
    ✓ should match a.md with a/**b
    ✓ should match a.md with a/**b and {dot: true}
    ✓ should match a.md with a/**b and {nonegate: true}
    ✓ should match a.js with a/**b
    ✓ should match a.js with a/**b and {dot: true}
    ✓ should match a.js with a/**b and {nonegate: true}
    ✓ should match a/ with a/**b
    ✓ should match a/ with a/**b and {dot: true}
    ✓ should match a/ with a/**b and {nonegate: true}
    ✓ should match a/b with a/**b
    ✓ should match a/b with a/**b and {dot: true}
    ✓ should match a/b with a/**b and {nonegate: true}
    ✓ should match a/b/.c.md with a/**b
    ✓ should match a/b/.c.md with a/**b and {dot: true}
    ✓ should match a/b/.c.md with a/**b and {nonegate: true}
    ✓ should match a/b/c with a/**b
    ✓ should match a/b/c with a/**b and {dot: true}
    ✓ should match a/b/c with a/**b and {nonegate: true}
    ✓ should match a/b/c.md with a/**b
    ✓ should match a/b/c.md with a/**b and {dot: true}
    ✓ should match a/b/c.md with a/**b and {nonegate: true}
    ✓ should match a/b/c/ with a/**b
    ✓ should match a/b/c/ with a/**b and {dot: true}
    ✓ should match a/b/c/ with a/**b and {nonegate: true}
    ✓ should match a/b/c/d with a/**b
    ✓ should match a/b/c/d with a/**b and {dot: true}
    ✓ should match a/b/c/d with a/**b and {nonegate: true}
    ✓ should match a/b/c/d/ with a/**b
    ✓ should match a/b/c/d/ with a/**b and {dot: true}
    ✓ should match a/b/c/d/ with a/**b and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with a/**b
    ✓ should match a/b/c/d/e/f/z.js with a/**b and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with a/**b and {nonegate: true}
    ✓ should match a/b/c/z.js with a/**b
    ✓ should match a/b/c/z.js with a/**b and {dot: true}
    ✓ should match a/b/c/z.js with a/**b and {nonegate: true}
    ✓ should match a/bb with a/**b
    ✓ should match a/bb with a/**b and {dot: true}
    ✓ should match a/bb with a/**b and {nonegate: true}
    ✓ should match a/cb with a/**b
    ✓ should match a/cb with a/**b and {dot: true}
    ✓ should match a/cb with a/**b and {nonegate: true}
    ✓ should match abbbz with a/**b
    ✓ should match abbbz with a/**b and {dot: true}
    ✓ should match abbbz with a/**b and {nonegate: true}
    ✓ should match abc with a/**b
    ✓ should match abc with a/**b and {dot: true}
    ✓ should match abc with a/**b and {nonegate: true}
    ✓ should match abd with a/**b
    ✓ should match abd with a/**b and {dot: true}
    ✓ should match abd with a/**b and {nonegate: true}
    ✓ should match z.js with a/**b
    ✓ should match z.js with a/**b and {dot: true}
    ✓ should match z.js with a/**b and {nonegate: true}
    ✓ should match za.js with a/**b
    ✓ should match za.js with a/**b and {dot: true}
    ✓ should match za.js with a/**b and {nonegate: true}
    ✓ should match !a.js with a/**b
    ✓ should match !a.js with a/**b and {dot: true}
    ✓ should match !a.js with a/**b and {nonegate: true}
    ✓ should match !a/b with a/**b
    ✓ should match !a/b with a/**b and {dot: true}
    ✓ should match !a/b with a/**b and {nonegate: true}
    ✓ should match !a/b/ with a/**b
    ✓ should match !a/b/ with a/**b and {dot: true}
    ✓ should match !a/b/ with a/**b and {nonegate: true}
    ✓ should match !a/b/c with a/**b
    ✓ should match !a/b/c with a/**b and {dot: true}
    ✓ should match !a/b/c with a/**b and {nonegate: true}
    ✓ should match !a/b/c/ with a/**b
    ✓ should match !a/b/c/ with a/**b and {dot: true}
    ✓ should match !a/b/c/ with a/**b and {nonegate: true}
    ✓ should match !a/!b with a/**b
    ✓ should match !a/!b with a/**b and {dot: true}
    ✓ should match !a/!b with a/**b and {nonegate: true}
    ✓ should match !a/!b/c with a/**b
    ✓ should match !a/!b/c with a/**b and {dot: true}
    ✓ should match !a/!b/c with a/**b and {nonegate: true}
    ✓ should match !a/!b/c/d with a/**b
    ✓ should match !a/!b/c/d with a/**b and {dot: true}
    ✓ should match !a/!b/c/d with a/**b and {nonegate: true}
    ✓ should match !a/b/.c.md with a/**b
    ✓ should match !a/b/.c.md with a/**b and {dot: true}
    ✓ should match !a/b/.c.md with a/**b and {nonegate: true}
    ✓ should match /a/ with a/**b
    ✓ should match /a/ with a/**b and {dot: true}
    ✓ should match /a/ with a/**b and {nonegate: true}
    ✓ should match /a/b with a/**b
    ✓ should match /a/b with a/**b and {dot: true}
    ✓ should match /a/b with a/**b and {nonegate: true}
    ✓ should match /a/cb with a/**b
    ✓ should match /a/cb with a/**b and {dot: true}
    ✓ should match /a/cb with a/**b and {nonegate: true}
    ✓ should match /a/bb with a/**b
    ✓ should match /a/bb with a/**b and {dot: true}
    ✓ should match /a/bb with a/**b and {nonegate: true}
    ✓ should match /a/b/c with a/**b
    ✓ should match /a/b/c with a/**b and {dot: true}
    ✓ should match /a/b/c with a/**b and {nonegate: true}
    ✓ should match /a/b/c/ with a/**b
    ✓ should match /a/b/c/ with a/**b and {dot: true}
    ✓ should match /a/b/c/ with a/**b and {nonegate: true}
    ✓ should match /a/b/c/d with a/**b
    ✓ should match /a/b/c/d with a/**b and {dot: true}
    ✓ should match /a/b/c/d with a/**b and {nonegate: true}
    ✓ should match /a/b/c/d/ with a/**b
    ✓ should match /a/b/c/d/ with a/**b and {dot: true}
    ✓ should match /a/b/c/d/ with a/**b and {nonegate: true}
    ✓ should match . with a/**b
    ✓ should match . with a/**b and {dot: true}
    ✓ should match . with a/**b and {nonegate: true}
    ✓ should match ./ with a/**b
    ✓ should match ./ with a/**b and {dot: true}
    ✓ should match ./ with a/**b and {nonegate: true}
    ✓ should match .. with a/**b
    ✓ should match .. with a/**b and {dot: true}
    ✓ should match .. with a/**b and {nonegate: true}
    ✓ should match ../c with a/**b
    ✓ should match ../c with a/**b and {dot: true}
    ✓ should match ../c with a/**b and {nonegate: true}
    ✓ should match ../c with a/**b
    ✓ should match ../c with a/**b and {dot: true}
    ✓ should match ../c with a/**b and {nonegate: true}
    ✓ should match ./../c with a/**b
    ✓ should match ./../c with a/**b and {dot: true}
    ✓ should match ./../c with a/**b and {nonegate: true}
    ✓ should match ./a/../c with a/**b
    ✓ should match ./a/../c with a/**b and {dot: true}
    ✓ should match ./a/../c with a/**b and {nonegate: true}
    ✓ should match /.. with a/**b
    ✓ should match /.. with a/**b and {dot: true}
    ✓ should match /.. with a/**b and {nonegate: true}
    ✓ should match /../c with a/**b
    ✓ should match /../c with a/**b and {dot: true}
    ✓ should match /../c with a/**b and {nonegate: true}
    ✓ should match /../.c with a/**b
    ✓ should match /../.c with a/**b and {dot: true}
    ✓ should match /../.c with a/**b and {nonegate: true}
    ✓ should match /../.c/ with a/**b
    ✓ should match /../.c/ with a/**b and {dot: true}
    ✓ should match /../.c/ with a/**b and {nonegate: true}
    ✓ should match /a/../c with a/**b
    ✓ should match /a/../c with a/**b and {dot: true}
    ✓ should match /a/../c with a/**b and {nonegate: true}
    ✓ should match a/../c with a/**b
    ✓ should match a/../c with a/**b and {dot: true}
    ✓ should match a/../c with a/**b and {nonegate: true}
    ✓ should match ../.b/.c with a/**b
    ✓ should match ../.b/.c with a/**b and {dot: true}
    ✓ should match ../.b/.c with a/**b and {nonegate: true}
    ✓ should match ../b/.c with a/**b
    ✓ should match ../b/.c with a/**b and {dot: true}
    ✓ should match ../b/.c with a/**b and {nonegate: true}
    ✓ should match ./.b/.c with a/**b
    ✓ should match ./.b/.c with a/**b and {dot: true}
    ✓ should match ./.b/.c with a/**b and {nonegate: true}
    ✓ should match ./b/.c with a/**b
    ✓ should match ./b/.c with a/**b and {dot: true}
    ✓ should match ./b/.c with a/**b and {nonegate: true}
    ✓ should match .b with a/**b
    ✓ should match .b with a/**b and {dot: true}
    ✓ should match .b with a/**b and {nonegate: true}
    ✓ should match .b.c with a/**b
    ✓ should match .b.c with a/**b and {dot: true}
    ✓ should match .b.c with a/**b and {nonegate: true}
    ✓ should match .b.c/ with a/**b
    ✓ should match .b.c/ with a/**b and {dot: true}
    ✓ should match .b.c/ with a/**b and {nonegate: true}
    ✓ should match .b/ with a/**b
    ✓ should match .b/ with a/**b and {dot: true}
    ✓ should match .b/ with a/**b and {nonegate: true}
    ✓ should match .b/.c with a/**b
    ✓ should match .b/.c with a/**b and {dot: true}
    ✓ should match .b/.c with a/**b and {nonegate: true}
    ✓ should match .b/c with a/**b
    ✓ should match .b/c with a/**b and {dot: true}
    ✓ should match .b/c with a/**b and {nonegate: true}
    ✓ should match b/.c with a/**b
    ✓ should match b/.c with a/**b and {dot: true}
    ✓ should match b/.c with a/**b and {nonegate: true}
    ✓ should match b/.c/ with a/**b
    ✓ should match b/.c/ with a/**b and {dot: true}
    ✓ should match b/.c/ with a/**b and {nonegate: true}
    ✓ should match a/+b/c with a/**b
    ✓ should match a/+b/c with a/**b and {dot: true}
    ✓ should match a/+b/c with a/**b and {nonegate: true}
    ✓ should match +a/+b/c with a/**b
    ✓ should match +a/+b/c with a/**b and {dot: true}
    ✓ should match +a/+b/c with a/**b and {nonegate: true}
    ✓ should match a (foo) with a/**b
    ✓ should match a (foo) with a/**b and {dot: true}
    ✓ should match a (foo) with a/**b and {nonegate: true}
    ✓ should match a (foo)/(bar) with a/**b
    ✓ should match a (foo)/(bar) with a/**b and {dot: true}
    ✓ should match a (foo)/(bar) with a/**b and {nonegate: true}
    ✓ should match a/b/c (1) with a/**b
    ✓ should match a/b/c (1) with a/**b and {dot: true}
    ✓ should match a/b/c (1) with a/**b and {nonegate: true}
    ✓ should match a/b (2)/c (1) with a/**b
    ✓ should match a/b (2)/c (1) with a/**b and {dot: true}
    ✓ should match a/b (2)/c (1) with a/**b and {nonegate: true}
    ✓ should match a/b/c [def] with a/**b
    ✓ should match a/b/c [def] with a/**b and {dot: true}
    ✓ should match a/b/c [def] with a/**b and {nonegate: true}
    ✓ should match a with a/*/
    ✓ should match a with a/*/ and {dot: true}
    ✓ should match a with a/*/ and {nonegate: true}
    ✓ should match a.md with a/*/
    ✓ should match a.md with a/*/ and {dot: true}
    ✓ should match a.md with a/*/ and {nonegate: true}
    ✓ should match a.js with a/*/
    ✓ should match a.js with a/*/ and {dot: true}
    ✓ should match a.js with a/*/ and {nonegate: true}
    ✓ should match a/ with a/*/
    ✓ should match a/ with a/*/ and {dot: true}
    ✓ should match a/ with a/*/ and {nonegate: true}
    ✓ should match a/b with a/*/
    ✓ should match a/b with a/*/ and {dot: true}
    ✓ should match a/b with a/*/ and {nonegate: true}
    ✓ should match a/b/.c.md with a/*/
    ✓ should match a/b/.c.md with a/*/ and {dot: true}
    ✓ should match a/b/.c.md with a/*/ and {nonegate: true}
    ✓ should match a/b/c with a/*/
    ✓ should match a/b/c with a/*/ and {dot: true}
    ✓ should match a/b/c with a/*/ and {nonegate: true}
    ✓ should match a/b/c.md with a/*/
    ✓ should match a/b/c.md with a/*/ and {dot: true}
    ✓ should match a/b/c.md with a/*/ and {nonegate: true}
    ✓ should match a/b/c/ with a/*/
    ✓ should match a/b/c/ with a/*/ and {dot: true}
    ✓ should match a/b/c/ with a/*/ and {nonegate: true}
    ✓ should match a/b/c/d with a/*/
    ✓ should match a/b/c/d with a/*/ and {dot: true}
    ✓ should match a/b/c/d with a/*/ and {nonegate: true}
    ✓ should match a/b/c/d/ with a/*/
    ✓ should match a/b/c/d/ with a/*/ and {dot: true}
    ✓ should match a/b/c/d/ with a/*/ and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with a/*/
    ✓ should match a/b/c/d/e/f/z.js with a/*/ and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with a/*/ and {nonegate: true}
    ✓ should match a/b/c/z.js with a/*/
    ✓ should match a/b/c/z.js with a/*/ and {dot: true}
    ✓ should match a/b/c/z.js with a/*/ and {nonegate: true}
    ✓ should match a/bb with a/*/
    ✓ should match a/bb with a/*/ and {dot: true}
    ✓ should match a/bb with a/*/ and {nonegate: true}
    ✓ should match a/cb with a/*/
    ✓ should match a/cb with a/*/ and {dot: true}
    ✓ should match a/cb with a/*/ and {nonegate: true}
    ✓ should match abbbz with a/*/
    ✓ should match abbbz with a/*/ and {dot: true}
    ✓ should match abbbz with a/*/ and {nonegate: true}
    ✓ should match abc with a/*/
    ✓ should match abc with a/*/ and {dot: true}
    ✓ should match abc with a/*/ and {nonegate: true}
    ✓ should match abd with a/*/
    ✓ should match abd with a/*/ and {dot: true}
    ✓ should match abd with a/*/ and {nonegate: true}
    ✓ should match z.js with a/*/
    ✓ should match z.js with a/*/ and {dot: true}
    ✓ should match z.js with a/*/ and {nonegate: true}
    ✓ should match za.js with a/*/
    ✓ should match za.js with a/*/ and {dot: true}
    ✓ should match za.js with a/*/ and {nonegate: true}
    ✓ should match !a.js with a/*/
    ✓ should match !a.js with a/*/ and {dot: true}
    ✓ should match !a.js with a/*/ and {nonegate: true}
    ✓ should match !a/b with a/*/
    ✓ should match !a/b with a/*/ and {dot: true}
    ✓ should match !a/b with a/*/ and {nonegate: true}
    ✓ should match !a/b/ with a/*/
    ✓ should match !a/b/ with a/*/ and {dot: true}
    ✓ should match !a/b/ with a/*/ and {nonegate: true}
    ✓ should match !a/b/c with a/*/
    ✓ should match !a/b/c with a/*/ and {dot: true}
    ✓ should match !a/b/c with a/*/ and {nonegate: true}
    ✓ should match !a/b/c/ with a/*/
    ✓ should match !a/b/c/ with a/*/ and {dot: true}
    ✓ should match !a/b/c/ with a/*/ and {nonegate: true}
    ✓ should match !a/!b with a/*/
    ✓ should match !a/!b with a/*/ and {dot: true}
    ✓ should match !a/!b with a/*/ and {nonegate: true}
    ✓ should match !a/!b/c with a/*/
    ✓ should match !a/!b/c with a/*/ and {dot: true}
    ✓ should match !a/!b/c with a/*/ and {nonegate: true}
    ✓ should match !a/!b/c/d with a/*/
    ✓ should match !a/!b/c/d with a/*/ and {dot: true}
    ✓ should match !a/!b/c/d with a/*/ and {nonegate: true}
    ✓ should match !a/b/.c.md with a/*/
    ✓ should match !a/b/.c.md with a/*/ and {dot: true}
    ✓ should match !a/b/.c.md with a/*/ and {nonegate: true}
    ✓ should match /a/ with a/*/
    ✓ should match /a/ with a/*/ and {dot: true}
    ✓ should match /a/ with a/*/ and {nonegate: true}
    ✓ should match /a/b with a/*/
    ✓ should match /a/b with a/*/ and {dot: true}
    ✓ should match /a/b with a/*/ and {nonegate: true}
    ✓ should match /a/cb with a/*/
    ✓ should match /a/cb with a/*/ and {dot: true}
    ✓ should match /a/cb with a/*/ and {nonegate: true}
    ✓ should match /a/bb with a/*/
    ✓ should match /a/bb with a/*/ and {dot: true}
    ✓ should match /a/bb with a/*/ and {nonegate: true}
    ✓ should match /a/b/c with a/*/
    ✓ should match /a/b/c with a/*/ and {dot: true}
    ✓ should match /a/b/c with a/*/ and {nonegate: true}
    ✓ should match /a/b/c/ with a/*/
    ✓ should match /a/b/c/ with a/*/ and {dot: true}
    ✓ should match /a/b/c/ with a/*/ and {nonegate: true}
    ✓ should match /a/b/c/d with a/*/
    ✓ should match /a/b/c/d with a/*/ and {dot: true}
    ✓ should match /a/b/c/d with a/*/ and {nonegate: true}
    ✓ should match /a/b/c/d/ with a/*/
    ✓ should match /a/b/c/d/ with a/*/ and {dot: true}
    ✓ should match /a/b/c/d/ with a/*/ and {nonegate: true}
    ✓ should match . with a/*/
    ✓ should match . with a/*/ and {dot: true}
    ✓ should match . with a/*/ and {nonegate: true}
    ✓ should match ./ with a/*/
    ✓ should match ./ with a/*/ and {dot: true}
    ✓ should match ./ with a/*/ and {nonegate: true}
    ✓ should match .. with a/*/
    ✓ should match .. with a/*/ and {dot: true}
    ✓ should match .. with a/*/ and {nonegate: true}
    ✓ should match ../c with a/*/
    ✓ should match ../c with a/*/ and {dot: true}
    ✓ should match ../c with a/*/ and {nonegate: true}
    ✓ should match ../c with a/*/
    ✓ should match ../c with a/*/ and {dot: true}
    ✓ should match ../c with a/*/ and {nonegate: true}
    ✓ should match ./../c with a/*/
    ✓ should match ./../c with a/*/ and {dot: true}
    ✓ should match ./../c with a/*/ and {nonegate: true}
    ✓ should match ./a/../c with a/*/
    ✓ should match ./a/../c with a/*/ and {dot: true}
    ✓ should match ./a/../c with a/*/ and {nonegate: true}
    ✓ should match /.. with a/*/
    ✓ should match /.. with a/*/ and {dot: true}
    ✓ should match /.. with a/*/ and {nonegate: true}
    ✓ should match /../c with a/*/
    ✓ should match /../c with a/*/ and {dot: true}
    ✓ should match /../c with a/*/ and {nonegate: true}
    ✓ should match /../.c with a/*/
    ✓ should match /../.c with a/*/ and {dot: true}
    ✓ should match /../.c with a/*/ and {nonegate: true}
    ✓ should match /../.c/ with a/*/
    ✓ should match /../.c/ with a/*/ and {dot: true}
    ✓ should match /../.c/ with a/*/ and {nonegate: true}
    ✓ should match /a/../c with a/*/
    ✓ should match /a/../c with a/*/ and {dot: true}
    ✓ should match /a/../c with a/*/ and {nonegate: true}
    ✓ should match a/../c with a/*/
    ✓ should match a/../c with a/*/ and {dot: true}
    ✓ should match a/../c with a/*/ and {nonegate: true}
    ✓ should match ../.b/.c with a/*/
    ✓ should match ../.b/.c with a/*/ and {dot: true}
    ✓ should match ../.b/.c with a/*/ and {nonegate: true}
    ✓ should match ../b/.c with a/*/
    ✓ should match ../b/.c with a/*/ and {dot: true}
    ✓ should match ../b/.c with a/*/ and {nonegate: true}
    ✓ should match ./.b/.c with a/*/
    ✓ should match ./.b/.c with a/*/ and {dot: true}
    ✓ should match ./.b/.c with a/*/ and {nonegate: true}
    ✓ should match ./b/.c with a/*/
    ✓ should match ./b/.c with a/*/ and {dot: true}
    ✓ should match ./b/.c with a/*/ and {nonegate: true}
    ✓ should match .b with a/*/
    ✓ should match .b with a/*/ and {dot: true}
    ✓ should match .b with a/*/ and {nonegate: true}
    ✓ should match .b.c with a/*/
    ✓ should match .b.c with a/*/ and {dot: true}
    ✓ should match .b.c with a/*/ and {nonegate: true}
    ✓ should match .b.c/ with a/*/
    ✓ should match .b.c/ with a/*/ and {dot: true}
    ✓ should match .b.c/ with a/*/ and {nonegate: true}
    ✓ should match .b/ with a/*/
    ✓ should match .b/ with a/*/ and {dot: true}
    ✓ should match .b/ with a/*/ and {nonegate: true}
    ✓ should match .b/.c with a/*/
    ✓ should match .b/.c with a/*/ and {dot: true}
    ✓ should match .b/.c with a/*/ and {nonegate: true}
    ✓ should match .b/c with a/*/
    ✓ should match .b/c with a/*/ and {dot: true}
    ✓ should match .b/c with a/*/ and {nonegate: true}
    ✓ should match b/.c with a/*/
    ✓ should match b/.c with a/*/ and {dot: true}
    ✓ should match b/.c with a/*/ and {nonegate: true}
    ✓ should match b/.c/ with a/*/
    ✓ should match b/.c/ with a/*/ and {dot: true}
    ✓ should match b/.c/ with a/*/ and {nonegate: true}
    ✓ should match a/+b/c with a/*/
    ✓ should match a/+b/c with a/*/ and {dot: true}
    ✓ should match a/+b/c with a/*/ and {nonegate: true}
    ✓ should match +a/+b/c with a/*/
    ✓ should match +a/+b/c with a/*/ and {dot: true}
    ✓ should match +a/+b/c with a/*/ and {nonegate: true}
    ✓ should match a (foo) with a/*/
    ✓ should match a (foo) with a/*/ and {dot: true}
    ✓ should match a (foo) with a/*/ and {nonegate: true}
    ✓ should match a (foo)/(bar) with a/*/
    ✓ should match a (foo)/(bar) with a/*/ and {dot: true}
    ✓ should match a (foo)/(bar) with a/*/ and {nonegate: true}
    ✓ should match a/b/c (1) with a/*/
    ✓ should match a/b/c (1) with a/*/ and {dot: true}
    ✓ should match a/b/c (1) with a/*/ and {nonegate: true}
    ✓ should match a/b (2)/c (1) with a/*/
    ✓ should match a/b (2)/c (1) with a/*/ and {dot: true}
    ✓ should match a/b (2)/c (1) with a/*/ and {nonegate: true}
    ✓ should match a/b/c [def] with a/*/
    ✓ should match a/b/c [def] with a/*/ and {dot: true}
    ✓ should match a/b/c [def] with a/*/ and {nonegate: true}
    ✓ should match a with a/*?b
    ✓ should match a with a/*?b and {dot: true}
    ✓ should match a with a/*?b and {nonegate: true}
    ✓ should match a.md with a/*?b
    ✓ should match a.md with a/*?b and {dot: true}
    ✓ should match a.md with a/*?b and {nonegate: true}
    ✓ should match a.js with a/*?b
    ✓ should match a.js with a/*?b and {dot: true}
    ✓ should match a.js with a/*?b and {nonegate: true}
    ✓ should match a/ with a/*?b
    ✓ should match a/ with a/*?b and {dot: true}
    ✓ should match a/ with a/*?b and {nonegate: true}
    ✓ should match a/b with a/*?b
    ✓ should match a/b with a/*?b and {dot: true}
    ✓ should match a/b with a/*?b and {nonegate: true}
    ✓ should match a/b/.c.md with a/*?b
    ✓ should match a/b/.c.md with a/*?b and {dot: true}
    ✓ should match a/b/.c.md with a/*?b and {nonegate: true}
    ✓ should match a/b/c with a/*?b
    ✓ should match a/b/c with a/*?b and {dot: true}
    ✓ should match a/b/c with a/*?b and {nonegate: true}
    ✓ should match a/b/c.md with a/*?b
    ✓ should match a/b/c.md with a/*?b and {dot: true}
    ✓ should match a/b/c.md with a/*?b and {nonegate: true}
    ✓ should match a/b/c/ with a/*?b
    ✓ should match a/b/c/ with a/*?b and {dot: true}
    ✓ should match a/b/c/ with a/*?b and {nonegate: true}
    ✓ should match a/b/c/d with a/*?b
    ✓ should match a/b/c/d with a/*?b and {dot: true}
    ✓ should match a/b/c/d with a/*?b and {nonegate: true}
    ✓ should match a/b/c/d/ with a/*?b
    ✓ should match a/b/c/d/ with a/*?b and {dot: true}
    ✓ should match a/b/c/d/ with a/*?b and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with a/*?b
    ✓ should match a/b/c/d/e/f/z.js with a/*?b and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with a/*?b and {nonegate: true}
    ✓ should match a/b/c/z.js with a/*?b
    ✓ should match a/b/c/z.js with a/*?b and {dot: true}
    ✓ should match a/b/c/z.js with a/*?b and {nonegate: true}
    ✓ should match a/bb with a/*?b
    ✓ should match a/bb with a/*?b and {dot: true}
    ✓ should match a/bb with a/*?b and {nonegate: true}
    ✓ should match a/cb with a/*?b
    ✓ should match a/cb with a/*?b and {dot: true}
    ✓ should match a/cb with a/*?b and {nonegate: true}
    ✓ should match abbbz with a/*?b
    ✓ should match abbbz with a/*?b and {dot: true}
    ✓ should match abbbz with a/*?b and {nonegate: true}
    ✓ should match abc with a/*?b
    ✓ should match abc with a/*?b and {dot: true}
    ✓ should match abc with a/*?b and {nonegate: true}
    ✓ should match abd with a/*?b
    ✓ should match abd with a/*?b and {dot: true}
    ✓ should match abd with a/*?b and {nonegate: true}
    ✓ should match z.js with a/*?b
    ✓ should match z.js with a/*?b and {dot: true}
    ✓ should match z.js with a/*?b and {nonegate: true}
    ✓ should match za.js with a/*?b
    ✓ should match za.js with a/*?b and {dot: true}
    ✓ should match za.js with a/*?b and {nonegate: true}
    ✓ should match !a.js with a/*?b
    ✓ should match !a.js with a/*?b and {dot: true}
    ✓ should match !a.js with a/*?b and {nonegate: true}
    ✓ should match !a/b with a/*?b
    ✓ should match !a/b with a/*?b and {dot: true}
    ✓ should match !a/b with a/*?b and {nonegate: true}
    ✓ should match !a/b/ with a/*?b
    ✓ should match !a/b/ with a/*?b and {dot: true}
    ✓ should match !a/b/ with a/*?b and {nonegate: true}
    ✓ should match !a/b/c with a/*?b
    ✓ should match !a/b/c with a/*?b and {dot: true}
    ✓ should match !a/b/c with a/*?b and {nonegate: true}
    ✓ should match !a/b/c/ with a/*?b
    ✓ should match !a/b/c/ with a/*?b and {dot: true}
    ✓ should match !a/b/c/ with a/*?b and {nonegate: true}
    ✓ should match !a/!b with a/*?b
    ✓ should match !a/!b with a/*?b and {dot: true}
    ✓ should match !a/!b with a/*?b and {nonegate: true}
    ✓ should match !a/!b/c with a/*?b
    ✓ should match !a/!b/c with a/*?b and {dot: true}
    ✓ should match !a/!b/c with a/*?b and {nonegate: true}
    ✓ should match !a/!b/c/d with a/*?b
    ✓ should match !a/!b/c/d with a/*?b and {dot: true}
    ✓ should match !a/!b/c/d with a/*?b and {nonegate: true}
    ✓ should match !a/b/.c.md with a/*?b
    ✓ should match !a/b/.c.md with a/*?b and {dot: true}
    ✓ should match !a/b/.c.md with a/*?b and {nonegate: true}
    ✓ should match /a/ with a/*?b
    ✓ should match /a/ with a/*?b and {dot: true}
    ✓ should match /a/ with a/*?b and {nonegate: true}
    ✓ should match /a/b with a/*?b
    ✓ should match /a/b with a/*?b and {dot: true}
    ✓ should match /a/b with a/*?b and {nonegate: true}
    ✓ should match /a/cb with a/*?b
    ✓ should match /a/cb with a/*?b and {dot: true}
    ✓ should match /a/cb with a/*?b and {nonegate: true}
    ✓ should match /a/bb with a/*?b
    ✓ should match /a/bb with a/*?b and {dot: true}
    ✓ should match /a/bb with a/*?b and {nonegate: true}
    ✓ should match /a/b/c with a/*?b
    ✓ should match /a/b/c with a/*?b and {dot: true}
    ✓ should match /a/b/c with a/*?b and {nonegate: true}
    ✓ should match /a/b/c/ with a/*?b
    ✓ should match /a/b/c/ with a/*?b and {dot: true}
    ✓ should match /a/b/c/ with a/*?b and {nonegate: true}
    ✓ should match /a/b/c/d with a/*?b
    ✓ should match /a/b/c/d with a/*?b and {dot: true}
    ✓ should match /a/b/c/d with a/*?b and {nonegate: true}
    ✓ should match /a/b/c/d/ with a/*?b
    ✓ should match /a/b/c/d/ with a/*?b and {dot: true}
    ✓ should match /a/b/c/d/ with a/*?b and {nonegate: true}
    ✓ should match . with a/*?b
    ✓ should match . with a/*?b and {dot: true}
    ✓ should match . with a/*?b and {nonegate: true}
    ✓ should match ./ with a/*?b
    ✓ should match ./ with a/*?b and {dot: true}
    ✓ should match ./ with a/*?b and {nonegate: true}
    ✓ should match .. with a/*?b
    ✓ should match .. with a/*?b and {dot: true}
    ✓ should match .. with a/*?b and {nonegate: true}
    ✓ should match ../c with a/*?b
    ✓ should match ../c with a/*?b and {dot: true}
    ✓ should match ../c with a/*?b and {nonegate: true}
    ✓ should match ../c with a/*?b
    ✓ should match ../c with a/*?b and {dot: true}
    ✓ should match ../c with a/*?b and {nonegate: true}
    ✓ should match ./../c with a/*?b
    ✓ should match ./../c with a/*?b and {dot: true}
    ✓ should match ./../c with a/*?b and {nonegate: true}
    ✓ should match ./a/../c with a/*?b
    ✓ should match ./a/../c with a/*?b and {dot: true}
    ✓ should match ./a/../c with a/*?b and {nonegate: true}
    ✓ should match /.. with a/*?b
    ✓ should match /.. with a/*?b and {dot: true}
    ✓ should match /.. with a/*?b and {nonegate: true}
    ✓ should match /../c with a/*?b
    ✓ should match /../c with a/*?b and {dot: true}
    ✓ should match /../c with a/*?b and {nonegate: true}
    ✓ should match /../.c with a/*?b
    ✓ should match /../.c with a/*?b and {dot: true}
    ✓ should match /../.c with a/*?b and {nonegate: true}
    ✓ should match /../.c/ with a/*?b
    ✓ should match /../.c/ with a/*?b and {dot: true}
    ✓ should match /../.c/ with a/*?b and {nonegate: true}
    ✓ should match /a/../c with a/*?b
    ✓ should match /a/../c with a/*?b and {dot: true}
    ✓ should match /a/../c with a/*?b and {nonegate: true}
    ✓ should match a/../c with a/*?b
    ✓ should match a/../c with a/*?b and {dot: true}
    ✓ should match a/../c with a/*?b and {nonegate: true}
    ✓ should match ../.b/.c with a/*?b
    ✓ should match ../.b/.c with a/*?b and {dot: true}
    ✓ should match ../.b/.c with a/*?b and {nonegate: true}
    ✓ should match ../b/.c with a/*?b
    ✓ should match ../b/.c with a/*?b and {dot: true}
    ✓ should match ../b/.c with a/*?b and {nonegate: true}
    ✓ should match ./.b/.c with a/*?b
    ✓ should match ./.b/.c with a/*?b and {dot: true}
    ✓ should match ./.b/.c with a/*?b and {nonegate: true}
    ✓ should match ./b/.c with a/*?b
    ✓ should match ./b/.c with a/*?b and {dot: true}
    ✓ should match ./b/.c with a/*?b and {nonegate: true}
    ✓ should match .b with a/*?b
    ✓ should match .b with a/*?b and {dot: true}
    ✓ should match .b with a/*?b and {nonegate: true}
    ✓ should match .b.c with a/*?b
    ✓ should match .b.c with a/*?b and {dot: true}
    ✓ should match .b.c with a/*?b and {nonegate: true}
    ✓ should match .b.c/ with a/*?b
    ✓ should match .b.c/ with a/*?b and {dot: true}
    ✓ should match .b.c/ with a/*?b and {nonegate: true}
    ✓ should match .b/ with a/*?b
    ✓ should match .b/ with a/*?b and {dot: true}
    ✓ should match .b/ with a/*?b and {nonegate: true}
    ✓ should match .b/.c with a/*?b
    ✓ should match .b/.c with a/*?b and {dot: true}
    ✓ should match .b/.c with a/*?b and {nonegate: true}
    ✓ should match .b/c with a/*?b
    ✓ should match .b/c with a/*?b and {dot: true}
    ✓ should match .b/c with a/*?b and {nonegate: true}
    ✓ should match b/.c with a/*?b
    ✓ should match b/.c with a/*?b and {dot: true}
    ✓ should match b/.c with a/*?b and {nonegate: true}
    ✓ should match b/.c/ with a/*?b
    ✓ should match b/.c/ with a/*?b and {dot: true}
    ✓ should match b/.c/ with a/*?b and {nonegate: true}
    ✓ should match a/+b/c with a/*?b
    ✓ should match a/+b/c with a/*?b and {dot: true}
    ✓ should match a/+b/c with a/*?b and {nonegate: true}
    ✓ should match +a/+b/c with a/*?b
    ✓ should match +a/+b/c with a/*?b and {dot: true}
    ✓ should match +a/+b/c with a/*?b and {nonegate: true}
    ✓ should match a (foo) with a/*?b
    ✓ should match a (foo) with a/*?b and {dot: true}
    ✓ should match a (foo) with a/*?b and {nonegate: true}
    ✓ should match a (foo)/(bar) with a/*?b
    ✓ should match a (foo)/(bar) with a/*?b and {dot: true}
    ✓ should match a (foo)/(bar) with a/*?b and {nonegate: true}
    ✓ should match a/b/c (1) with a/*?b
    ✓ should match a/b/c (1) with a/*?b and {dot: true}
    ✓ should match a/b/c (1) with a/*?b and {nonegate: true}
    ✓ should match a/b (2)/c (1) with a/*?b
    ✓ should match a/b (2)/c (1) with a/*?b and {dot: true}
    ✓ should match a/b (2)/c (1) with a/*?b and {nonegate: true}
    ✓ should match a/b/c [def] with a/*?b
    ✓ should match a/b/c [def] with a/*?b and {dot: true}
    ✓ should match a/b/c [def] with a/*?b and {nonegate: true}
    ✓ should match a with a/?
    ✓ should match a with a/? and {dot: true}
    ✓ should match a with a/? and {nonegate: true}
    ✓ should match a.md with a/?
    ✓ should match a.md with a/? and {dot: true}
    ✓ should match a.md with a/? and {nonegate: true}
    ✓ should match a.js with a/?
    ✓ should match a.js with a/? and {dot: true}
    ✓ should match a.js with a/? and {nonegate: true}
    ✓ should match a/ with a/?
    ✓ should match a/ with a/? and {dot: true}
    ✓ should match a/ with a/? and {nonegate: true}
    ✓ should match a/b with a/?
    ✓ should match a/b with a/? and {dot: true}
    ✓ should match a/b with a/? and {nonegate: true}
    ✓ should match a/b/.c.md with a/?
    ✓ should match a/b/.c.md with a/? and {dot: true}
    ✓ should match a/b/.c.md with a/? and {nonegate: true}
    ✓ should match a/b/c with a/?
    ✓ should match a/b/c with a/? and {dot: true}
    ✓ should match a/b/c with a/? and {nonegate: true}
    ✓ should match a/b/c.md with a/?
    ✓ should match a/b/c.md with a/? and {dot: true}
    ✓ should match a/b/c.md with a/? and {nonegate: true}
    ✓ should match a/b/c/ with a/?
    ✓ should match a/b/c/ with a/? and {dot: true}
    ✓ should match a/b/c/ with a/? and {nonegate: true}
    ✓ should match a/b/c/d with a/?
    ✓ should match a/b/c/d with a/? and {dot: true}
    ✓ should match a/b/c/d with a/? and {nonegate: true}
    ✓ should match a/b/c/d/ with a/?
    ✓ should match a/b/c/d/ with a/? and {dot: true}
    ✓ should match a/b/c/d/ with a/? and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with a/?
    ✓ should match a/b/c/d/e/f/z.js with a/? and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with a/? and {nonegate: true}
    ✓ should match a/b/c/z.js with a/?
    ✓ should match a/b/c/z.js with a/? and {dot: true}
    ✓ should match a/b/c/z.js with a/? and {nonegate: true}
    ✓ should match a/bb with a/?
    ✓ should match a/bb with a/? and {dot: true}
    ✓ should match a/bb with a/? and {nonegate: true}
    ✓ should match a/cb with a/?
    ✓ should match a/cb with a/? and {dot: true}
    ✓ should match a/cb with a/? and {nonegate: true}
    ✓ should match abbbz with a/?
    ✓ should match abbbz with a/? and {dot: true}
    ✓ should match abbbz with a/? and {nonegate: true}
    ✓ should match abc with a/?
    ✓ should match abc with a/? and {dot: true}
    ✓ should match abc with a/? and {nonegate: true}
    ✓ should match abd with a/?
    ✓ should match abd with a/? and {dot: true}
    ✓ should match abd with a/? and {nonegate: true}
    ✓ should match z.js with a/?
    ✓ should match z.js with a/? and {dot: true}
    ✓ should match z.js with a/? and {nonegate: true}
    ✓ should match za.js with a/?
    ✓ should match za.js with a/? and {dot: true}
    ✓ should match za.js with a/? and {nonegate: true}
    ✓ should match !a.js with a/?
    ✓ should match !a.js with a/? and {dot: true}
    ✓ should match !a.js with a/? and {nonegate: true}
    ✓ should match !a/b with a/?
    ✓ should match !a/b with a/? and {dot: true}
    ✓ should match !a/b with a/? and {nonegate: true}
    ✓ should match !a/b/ with a/?
    ✓ should match !a/b/ with a/? and {dot: true}
    ✓ should match !a/b/ with a/? and {nonegate: true}
    ✓ should match !a/b/c with a/?
    ✓ should match !a/b/c with a/? and {dot: true}
    ✓ should match !a/b/c with a/? and {nonegate: true}
    ✓ should match !a/b/c/ with a/?
    ✓ should match !a/b/c/ with a/? and {dot: true}
    ✓ should match !a/b/c/ with a/? and {nonegate: true}
    ✓ should match !a/!b with a/?
    ✓ should match !a/!b with a/? and {dot: true}
    ✓ should match !a/!b with a/? and {nonegate: true}
    ✓ should match !a/!b/c with a/?
    ✓ should match !a/!b/c with a/? and {dot: true}
    ✓ should match !a/!b/c with a/? and {nonegate: true}
    ✓ should match !a/!b/c/d with a/?
    ✓ should match !a/!b/c/d with a/? and {dot: true}
    ✓ should match !a/!b/c/d with a/? and {nonegate: true}
    ✓ should match !a/b/.c.md with a/?
    ✓ should match !a/b/.c.md with a/? and {dot: true}
    ✓ should match !a/b/.c.md with a/? and {nonegate: true}
    ✓ should match /a/ with a/?
    ✓ should match /a/ with a/? and {dot: true}
    ✓ should match /a/ with a/? and {nonegate: true}
    ✓ should match /a/b with a/?
    ✓ should match /a/b with a/? and {dot: true}
    ✓ should match /a/b with a/? and {nonegate: true}
    ✓ should match /a/cb with a/?
    ✓ should match /a/cb with a/? and {dot: true}
    ✓ should match /a/cb with a/? and {nonegate: true}
    ✓ should match /a/bb with a/?
    ✓ should match /a/bb with a/? and {dot: true}
    ✓ should match /a/bb with a/? and {nonegate: true}
    ✓ should match /a/b/c with a/?
    ✓ should match /a/b/c with a/? and {dot: true}
    ✓ should match /a/b/c with a/? and {nonegate: true}
    ✓ should match /a/b/c/ with a/?
    ✓ should match /a/b/c/ with a/? and {dot: true}
    ✓ should match /a/b/c/ with a/? and {nonegate: true}
    ✓ should match /a/b/c/d with a/?
    ✓ should match /a/b/c/d with a/? and {dot: true}
    ✓ should match /a/b/c/d with a/? and {nonegate: true}
    ✓ should match /a/b/c/d/ with a/?
    ✓ should match /a/b/c/d/ with a/? and {dot: true}
    ✓ should match /a/b/c/d/ with a/? and {nonegate: true}
    ✓ should match . with a/?
    ✓ should match . with a/? and {dot: true}
    ✓ should match . with a/? and {nonegate: true}
    ✓ should match ./ with a/?
    ✓ should match ./ with a/? and {dot: true}
    ✓ should match ./ with a/? and {nonegate: true}
    ✓ should match .. with a/?
    ✓ should match .. with a/? and {dot: true}
    ✓ should match .. with a/? and {nonegate: true}
    ✓ should match ../c with a/?
    ✓ should match ../c with a/? and {dot: true}
    ✓ should match ../c with a/? and {nonegate: true}
    ✓ should match ../c with a/?
    ✓ should match ../c with a/? and {dot: true}
    ✓ should match ../c with a/? and {nonegate: true}
    ✓ should match ./../c with a/?
    ✓ should match ./../c with a/? and {dot: true}
    ✓ should match ./../c with a/? and {nonegate: true}
    ✓ should match ./a/../c with a/?
    ✓ should match ./a/../c with a/? and {dot: true}
    ✓ should match ./a/../c with a/? and {nonegate: true}
    ✓ should match /.. with a/?
    ✓ should match /.. with a/? and {dot: true}
    ✓ should match /.. with a/? and {nonegate: true}
    ✓ should match /../c with a/?
    ✓ should match /../c with a/? and {dot: true}
    ✓ should match /../c with a/? and {nonegate: true}
    ✓ should match /../.c with a/?
    ✓ should match /../.c with a/? and {dot: true}
    ✓ should match /../.c with a/? and {nonegate: true}
    ✓ should match /../.c/ with a/?
    ✓ should match /../.c/ with a/? and {dot: true}
    ✓ should match /../.c/ with a/? and {nonegate: true}
    ✓ should match /a/../c with a/?
    ✓ should match /a/../c with a/? and {dot: true}
    ✓ should match /a/../c with a/? and {nonegate: true}
    ✓ should match a/../c with a/?
    ✓ should match a/../c with a/? and {dot: true}
    ✓ should match a/../c with a/? and {nonegate: true}
    ✓ should match ../.b/.c with a/?
    ✓ should match ../.b/.c with a/? and {dot: true}
    ✓ should match ../.b/.c with a/? and {nonegate: true}
    ✓ should match ../b/.c with a/?
    ✓ should match ../b/.c with a/? and {dot: true}
    ✓ should match ../b/.c with a/? and {nonegate: true}
    ✓ should match ./.b/.c with a/?
    ✓ should match ./.b/.c with a/? and {dot: true}
    ✓ should match ./.b/.c with a/? and {nonegate: true}
    ✓ should match ./b/.c with a/?
    ✓ should match ./b/.c with a/? and {dot: true}
    ✓ should match ./b/.c with a/? and {nonegate: true}
    ✓ should match .b with a/?
    ✓ should match .b with a/? and {dot: true}
    ✓ should match .b with a/? and {nonegate: true}
    ✓ should match .b.c with a/?
    ✓ should match .b.c with a/? and {dot: true}
    ✓ should match .b.c with a/? and {nonegate: true}
    ✓ should match .b.c/ with a/?
    ✓ should match .b.c/ with a/? and {dot: true}
    ✓ should match .b.c/ with a/? and {nonegate: true}
    ✓ should match .b/ with a/?
    ✓ should match .b/ with a/? and {dot: true}
    ✓ should match .b/ with a/? and {nonegate: true}
    ✓ should match .b/.c with a/?
    ✓ should match .b/.c with a/? and {dot: true}
    ✓ should match .b/.c with a/? and {nonegate: true}
    ✓ should match .b/c with a/?
    ✓ should match .b/c with a/? and {dot: true}
    ✓ should match .b/c with a/? and {nonegate: true}
    ✓ should match b/.c with a/?
    ✓ should match b/.c with a/? and {dot: true}
    ✓ should match b/.c with a/? and {nonegate: true}
    ✓ should match b/.c/ with a/?
    ✓ should match b/.c/ with a/? and {dot: true}
    ✓ should match b/.c/ with a/? and {nonegate: true}
    ✓ should match a/+b/c with a/?
    ✓ should match a/+b/c with a/? and {dot: true}
    ✓ should match a/+b/c with a/? and {nonegate: true}
    ✓ should match +a/+b/c with a/?
    ✓ should match +a/+b/c with a/? and {dot: true}
    ✓ should match +a/+b/c with a/? and {nonegate: true}
    ✓ should match a (foo) with a/?
    ✓ should match a (foo) with a/? and {dot: true}
    ✓ should match a (foo) with a/? and {nonegate: true}
    ✓ should match a (foo)/(bar) with a/?
    ✓ should match a (foo)/(bar) with a/? and {dot: true}
    ✓ should match a (foo)/(bar) with a/? and {nonegate: true}
    ✓ should match a/b/c (1) with a/?
    ✓ should match a/b/c (1) with a/? and {dot: true}
    ✓ should match a/b/c (1) with a/? and {nonegate: true}
    ✓ should match a/b (2)/c (1) with a/?
    ✓ should match a/b (2)/c (1) with a/? and {dot: true}
    ✓ should match a/b (2)/c (1) with a/? and {nonegate: true}
    ✓ should match a/b/c [def] with a/?
    ✓ should match a/b/c [def] with a/? and {dot: true}
    ✓ should match a/b/c [def] with a/? and {nonegate: true}
    ✓ should match a with a/?*b
    ✓ should match a with a/?*b and {dot: true}
    ✓ should match a with a/?*b and {nonegate: true}
    ✓ should match a.md with a/?*b
    ✓ should match a.md with a/?*b and {dot: true}
    ✓ should match a.md with a/?*b and {nonegate: true}
    ✓ should match a.js with a/?*b
    ✓ should match a.js with a/?*b and {dot: true}
    ✓ should match a.js with a/?*b and {nonegate: true}
    ✓ should match a/ with a/?*b
    ✓ should match a/ with a/?*b and {dot: true}
    ✓ should match a/ with a/?*b and {nonegate: true}
    ✓ should match a/b with a/?*b
    ✓ should match a/b with a/?*b and {dot: true}
    ✓ should match a/b with a/?*b and {nonegate: true}
    ✓ should match a/b/.c.md with a/?*b
    ✓ should match a/b/.c.md with a/?*b and {dot: true}
    ✓ should match a/b/.c.md with a/?*b and {nonegate: true}
    ✓ should match a/b/c with a/?*b
    ✓ should match a/b/c with a/?*b and {dot: true}
    ✓ should match a/b/c with a/?*b and {nonegate: true}
    ✓ should match a/b/c.md with a/?*b
    ✓ should match a/b/c.md with a/?*b and {dot: true}
    ✓ should match a/b/c.md with a/?*b and {nonegate: true}
    ✓ should match a/b/c/ with a/?*b
    ✓ should match a/b/c/ with a/?*b and {dot: true}
    ✓ should match a/b/c/ with a/?*b and {nonegate: true}
    ✓ should match a/b/c/d with a/?*b
    ✓ should match a/b/c/d with a/?*b and {dot: true}
    ✓ should match a/b/c/d with a/?*b and {nonegate: true}
    ✓ should match a/b/c/d/ with a/?*b
    ✓ should match a/b/c/d/ with a/?*b and {dot: true}
    ✓ should match a/b/c/d/ with a/?*b and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with a/?*b
    ✓ should match a/b/c/d/e/f/z.js with a/?*b and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with a/?*b and {nonegate: true}
    ✓ should match a/b/c/z.js with a/?*b
    ✓ should match a/b/c/z.js with a/?*b and {dot: true}
    ✓ should match a/b/c/z.js with a/?*b and {nonegate: true}
    ✓ should match a/bb with a/?*b
    ✓ should match a/bb with a/?*b and {dot: true}
    ✓ should match a/bb with a/?*b and {nonegate: true}
    ✓ should match a/cb with a/?*b
    ✓ should match a/cb with a/?*b and {dot: true}
    ✓ should match a/cb with a/?*b and {nonegate: true}
    ✓ should match abbbz with a/?*b
    ✓ should match abbbz with a/?*b and {dot: true}
    ✓ should match abbbz with a/?*b and {nonegate: true}
    ✓ should match abc with a/?*b
    ✓ should match abc with a/?*b and {dot: true}
    ✓ should match abc with a/?*b and {nonegate: true}
    ✓ should match abd with a/?*b
    ✓ should match abd with a/?*b and {dot: true}
    ✓ should match abd with a/?*b and {nonegate: true}
    ✓ should match z.js with a/?*b
    ✓ should match z.js with a/?*b and {dot: true}
    ✓ should match z.js with a/?*b and {nonegate: true}
    ✓ should match za.js with a/?*b
    ✓ should match za.js with a/?*b and {dot: true}
    ✓ should match za.js with a/?*b and {nonegate: true}
    ✓ should match !a.js with a/?*b
    ✓ should match !a.js with a/?*b and {dot: true}
    ✓ should match !a.js with a/?*b and {nonegate: true}
    ✓ should match !a/b with a/?*b
    ✓ should match !a/b with a/?*b and {dot: true}
    ✓ should match !a/b with a/?*b and {nonegate: true}
    ✓ should match !a/b/ with a/?*b
    ✓ should match !a/b/ with a/?*b and {dot: true}
    ✓ should match !a/b/ with a/?*b and {nonegate: true}
    ✓ should match !a/b/c with a/?*b
    ✓ should match !a/b/c with a/?*b and {dot: true}
    ✓ should match !a/b/c with a/?*b and {nonegate: true}
    ✓ should match !a/b/c/ with a/?*b
    ✓ should match !a/b/c/ with a/?*b and {dot: true}
    ✓ should match !a/b/c/ with a/?*b and {nonegate: true}
    ✓ should match !a/!b with a/?*b
    ✓ should match !a/!b with a/?*b and {dot: true}
    ✓ should match !a/!b with a/?*b and {nonegate: true}
    ✓ should match !a/!b/c with a/?*b
    ✓ should match !a/!b/c with a/?*b and {dot: true}
    ✓ should match !a/!b/c with a/?*b and {nonegate: true}
    ✓ should match !a/!b/c/d with a/?*b
    ✓ should match !a/!b/c/d with a/?*b and {dot: true}
    ✓ should match !a/!b/c/d with a/?*b and {nonegate: true}
    ✓ should match !a/b/.c.md with a/?*b
    ✓ should match !a/b/.c.md with a/?*b and {dot: true}
    ✓ should match !a/b/.c.md with a/?*b and {nonegate: true}
    ✓ should match /a/ with a/?*b
    ✓ should match /a/ with a/?*b and {dot: true}
    ✓ should match /a/ with a/?*b and {nonegate: true}
    ✓ should match /a/b with a/?*b
    ✓ should match /a/b with a/?*b and {dot: true}
    ✓ should match /a/b with a/?*b and {nonegate: true}
    ✓ should match /a/cb with a/?*b
    ✓ should match /a/cb with a/?*b and {dot: true}
    ✓ should match /a/cb with a/?*b and {nonegate: true}
    ✓ should match /a/bb with a/?*b
    ✓ should match /a/bb with a/?*b and {dot: true}
    ✓ should match /a/bb with a/?*b and {nonegate: true}
    ✓ should match /a/b/c with a/?*b
    ✓ should match /a/b/c with a/?*b and {dot: true}
    ✓ should match /a/b/c with a/?*b and {nonegate: true}
    ✓ should match /a/b/c/ with a/?*b
    ✓ should match /a/b/c/ with a/?*b and {dot: true}
    ✓ should match /a/b/c/ with a/?*b and {nonegate: true}
    ✓ should match /a/b/c/d with a/?*b
    ✓ should match /a/b/c/d with a/?*b and {dot: true}
    ✓ should match /a/b/c/d with a/?*b and {nonegate: true}
    ✓ should match /a/b/c/d/ with a/?*b
    ✓ should match /a/b/c/d/ with a/?*b and {dot: true}
    ✓ should match /a/b/c/d/ with a/?*b and {nonegate: true}
    ✓ should match . with a/?*b
    ✓ should match . with a/?*b and {dot: true}
    ✓ should match . with a/?*b and {nonegate: true}
    ✓ should match ./ with a/?*b
    ✓ should match ./ with a/?*b and {dot: true}
    ✓ should match ./ with a/?*b and {nonegate: true}
    ✓ should match .. with a/?*b
    ✓ should match .. with a/?*b and {dot: true}
    ✓ should match .. with a/?*b and {nonegate: true}
    ✓ should match ../c with a/?*b
    ✓ should match ../c with a/?*b and {dot: true}
    ✓ should match ../c with a/?*b and {nonegate: true}
    ✓ should match ../c with a/?*b
    ✓ should match ../c with a/?*b and {dot: true}
    ✓ should match ../c with a/?*b and {nonegate: true}
    ✓ should match ./../c with a/?*b
    ✓ should match ./../c with a/?*b and {dot: true}
    ✓ should match ./../c with a/?*b and {nonegate: true}
    ✓ should match ./a/../c with a/?*b
    ✓ should match ./a/../c with a/?*b and {dot: true}
    ✓ should match ./a/../c with a/?*b and {nonegate: true}
    ✓ should match /.. with a/?*b
    ✓ should match /.. with a/?*b and {dot: true}
    ✓ should match /.. with a/?*b and {nonegate: true}
    ✓ should match /../c with a/?*b
    ✓ should match /../c with a/?*b and {dot: true}
    ✓ should match /../c with a/?*b and {nonegate: true}
    ✓ should match /../.c with a/?*b
    ✓ should match /../.c with a/?*b and {dot: true}
    ✓ should match /../.c with a/?*b and {nonegate: true}
    ✓ should match /../.c/ with a/?*b
    ✓ should match /../.c/ with a/?*b and {dot: true}
    ✓ should match /../.c/ with a/?*b and {nonegate: true}
    ✓ should match /a/../c with a/?*b
    ✓ should match /a/../c with a/?*b and {dot: true}
    ✓ should match /a/../c with a/?*b and {nonegate: true}
    ✓ should match a/../c with a/?*b
    ✓ should match a/../c with a/?*b and {dot: true}
    ✓ should match a/../c with a/?*b and {nonegate: true}
    ✓ should match ../.b/.c with a/?*b
    ✓ should match ../.b/.c with a/?*b and {dot: true}
    ✓ should match ../.b/.c with a/?*b and {nonegate: true}
    ✓ should match ../b/.c with a/?*b
    ✓ should match ../b/.c with a/?*b and {dot: true}
    ✓ should match ../b/.c with a/?*b and {nonegate: true}
    ✓ should match ./.b/.c with a/?*b
    ✓ should match ./.b/.c with a/?*b and {dot: true}
    ✓ should match ./.b/.c with a/?*b and {nonegate: true}
    ✓ should match ./b/.c with a/?*b
    ✓ should match ./b/.c with a/?*b and {dot: true}
    ✓ should match ./b/.c with a/?*b and {nonegate: true}
    ✓ should match .b with a/?*b
    ✓ should match .b with a/?*b and {dot: true}
    ✓ should match .b with a/?*b and {nonegate: true}
    ✓ should match .b.c with a/?*b
    ✓ should match .b.c with a/?*b and {dot: true}
    ✓ should match .b.c with a/?*b and {nonegate: true}
    ✓ should match .b.c/ with a/?*b
    ✓ should match .b.c/ with a/?*b and {dot: true}
    ✓ should match .b.c/ with a/?*b and {nonegate: true}
    ✓ should match .b/ with a/?*b
    ✓ should match .b/ with a/?*b and {dot: true}
    ✓ should match .b/ with a/?*b and {nonegate: true}
    ✓ should match .b/.c with a/?*b
    ✓ should match .b/.c with a/?*b and {dot: true}
    ✓ should match .b/.c with a/?*b and {nonegate: true}
    ✓ should match .b/c with a/?*b
    ✓ should match .b/c with a/?*b and {dot: true}
    ✓ should match .b/c with a/?*b and {nonegate: true}
    ✓ should match b/.c with a/?*b
    ✓ should match b/.c with a/?*b and {dot: true}
    ✓ should match b/.c with a/?*b and {nonegate: true}
    ✓ should match b/.c/ with a/?*b
    ✓ should match b/.c/ with a/?*b and {dot: true}
    ✓ should match b/.c/ with a/?*b and {nonegate: true}
    ✓ should match a/+b/c with a/?*b
    ✓ should match a/+b/c with a/?*b and {dot: true}
    ✓ should match a/+b/c with a/?*b and {nonegate: true}
    ✓ should match +a/+b/c with a/?*b
    ✓ should match +a/+b/c with a/?*b and {dot: true}
    ✓ should match +a/+b/c with a/?*b and {nonegate: true}
    ✓ should match a (foo) with a/?*b
    ✓ should match a (foo) with a/?*b and {dot: true}
    ✓ should match a (foo) with a/?*b and {nonegate: true}
    ✓ should match a (foo)/(bar) with a/?*b
    ✓ should match a (foo)/(bar) with a/?*b and {dot: true}
    ✓ should match a (foo)/(bar) with a/?*b and {nonegate: true}
    ✓ should match a/b/c (1) with a/?*b
    ✓ should match a/b/c (1) with a/?*b and {dot: true}
    ✓ should match a/b/c (1) with a/?*b and {nonegate: true}
    ✓ should match a/b (2)/c (1) with a/?*b
    ✓ should match a/b (2)/c (1) with a/?*b and {dot: true}
    ✓ should match a/b (2)/c (1) with a/?*b and {nonegate: true}
    ✓ should match a/b/c [def] with a/?*b
    ✓ should match a/b/c [def] with a/?*b and {dot: true}
    ✓ should match a/b/c [def] with a/?*b and {nonegate: true}
    ✓ should match a with a/??b
    ✓ should match a with a/??b and {dot: true}
    ✓ should match a with a/??b and {nonegate: true}
    ✓ should match a.md with a/??b
    ✓ should match a.md with a/??b and {dot: true}
    ✓ should match a.md with a/??b and {nonegate: true}
    ✓ should match a.js with a/??b
    ✓ should match a.js with a/??b and {dot: true}
    ✓ should match a.js with a/??b and {nonegate: true}
    ✓ should match a/ with a/??b
    ✓ should match a/ with a/??b and {dot: true}
    ✓ should match a/ with a/??b and {nonegate: true}
    ✓ should match a/b with a/??b
    ✓ should match a/b with a/??b and {dot: true}
    ✓ should match a/b with a/??b and {nonegate: true}
    ✓ should match a/b/.c.md with a/??b
    ✓ should match a/b/.c.md with a/??b and {dot: true}
    ✓ should match a/b/.c.md with a/??b and {nonegate: true}
    ✓ should match a/b/c with a/??b
    ✓ should match a/b/c with a/??b and {dot: true}
    ✓ should match a/b/c with a/??b and {nonegate: true}
    ✓ should match a/b/c.md with a/??b
    ✓ should match a/b/c.md with a/??b and {dot: true}
    ✓ should match a/b/c.md with a/??b and {nonegate: true}
    ✓ should match a/b/c/ with a/??b
    ✓ should match a/b/c/ with a/??b and {dot: true}
    ✓ should match a/b/c/ with a/??b and {nonegate: true}
    ✓ should match a/b/c/d with a/??b
    ✓ should match a/b/c/d with a/??b and {dot: true}
    ✓ should match a/b/c/d with a/??b and {nonegate: true}
    ✓ should match a/b/c/d/ with a/??b
    ✓ should match a/b/c/d/ with a/??b and {dot: true}
    ✓ should match a/b/c/d/ with a/??b and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with a/??b
    ✓ should match a/b/c/d/e/f/z.js with a/??b and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with a/??b and {nonegate: true}
    ✓ should match a/b/c/z.js with a/??b
    ✓ should match a/b/c/z.js with a/??b and {dot: true}
    ✓ should match a/b/c/z.js with a/??b and {nonegate: true}
    ✓ should match a/bb with a/??b
    ✓ should match a/bb with a/??b and {dot: true}
    ✓ should match a/bb with a/??b and {nonegate: true}
    ✓ should match a/cb with a/??b
    ✓ should match a/cb with a/??b and {dot: true}
    ✓ should match a/cb with a/??b and {nonegate: true}
    ✓ should match abbbz with a/??b
    ✓ should match abbbz with a/??b and {dot: true}
    ✓ should match abbbz with a/??b and {nonegate: true}
    ✓ should match abc with a/??b
    ✓ should match abc with a/??b and {dot: true}
    ✓ should match abc with a/??b and {nonegate: true}
    ✓ should match abd with a/??b
    ✓ should match abd with a/??b and {dot: true}
    ✓ should match abd with a/??b and {nonegate: true}
    ✓ should match z.js with a/??b
    ✓ should match z.js with a/??b and {dot: true}
    ✓ should match z.js with a/??b and {nonegate: true}
    ✓ should match za.js with a/??b
    ✓ should match za.js with a/??b and {dot: true}
    ✓ should match za.js with a/??b and {nonegate: true}
    ✓ should match !a.js with a/??b
    ✓ should match !a.js with a/??b and {dot: true}
    ✓ should match !a.js with a/??b and {nonegate: true}
    ✓ should match !a/b with a/??b
    ✓ should match !a/b with a/??b and {dot: true}
    ✓ should match !a/b with a/??b and {nonegate: true}
    ✓ should match !a/b/ with a/??b
    ✓ should match !a/b/ with a/??b and {dot: true}
    ✓ should match !a/b/ with a/??b and {nonegate: true}
    ✓ should match !a/b/c with a/??b
    ✓ should match !a/b/c with a/??b and {dot: true}
    ✓ should match !a/b/c with a/??b and {nonegate: true}
    ✓ should match !a/b/c/ with a/??b
    ✓ should match !a/b/c/ with a/??b and {dot: true}
    ✓ should match !a/b/c/ with a/??b and {nonegate: true}
    ✓ should match !a/!b with a/??b
    ✓ should match !a/!b with a/??b and {dot: true}
    ✓ should match !a/!b with a/??b and {nonegate: true}
    ✓ should match !a/!b/c with a/??b
    ✓ should match !a/!b/c with a/??b and {dot: true}
    ✓ should match !a/!b/c with a/??b and {nonegate: true}
    ✓ should match !a/!b/c/d with a/??b
    ✓ should match !a/!b/c/d with a/??b and {dot: true}
    ✓ should match !a/!b/c/d with a/??b and {nonegate: true}
    ✓ should match !a/b/.c.md with a/??b
    ✓ should match !a/b/.c.md with a/??b and {dot: true}
    ✓ should match !a/b/.c.md with a/??b and {nonegate: true}
    ✓ should match /a/ with a/??b
    ✓ should match /a/ with a/??b and {dot: true}
    ✓ should match /a/ with a/??b and {nonegate: true}
    ✓ should match /a/b with a/??b
    ✓ should match /a/b with a/??b and {dot: true}
    ✓ should match /a/b with a/??b and {nonegate: true}
    ✓ should match /a/cb with a/??b
    ✓ should match /a/cb with a/??b and {dot: true}
    ✓ should match /a/cb with a/??b and {nonegate: true}
    ✓ should match /a/bb with a/??b
    ✓ should match /a/bb with a/??b and {dot: true}
    ✓ should match /a/bb with a/??b and {nonegate: true}
    ✓ should match /a/b/c with a/??b
    ✓ should match /a/b/c with a/??b and {dot: true}
    ✓ should match /a/b/c with a/??b and {nonegate: true}
    ✓ should match /a/b/c/ with a/??b
    ✓ should match /a/b/c/ with a/??b and {dot: true}
    ✓ should match /a/b/c/ with a/??b and {nonegate: true}
    ✓ should match /a/b/c/d with a/??b
    ✓ should match /a/b/c/d with a/??b and {dot: true}
    ✓ should match /a/b/c/d with a/??b and {nonegate: true}
    ✓ should match /a/b/c/d/ with a/??b
    ✓ should match /a/b/c/d/ with a/??b and {dot: true}
    ✓ should match /a/b/c/d/ with a/??b and {nonegate: true}
    ✓ should match . with a/??b
    ✓ should match . with a/??b and {dot: true}
    ✓ should match . with a/??b and {nonegate: true}
    ✓ should match ./ with a/??b
    ✓ should match ./ with a/??b and {dot: true}
    ✓ should match ./ with a/??b and {nonegate: true}
    ✓ should match .. with a/??b
    ✓ should match .. with a/??b and {dot: true}
    ✓ should match .. with a/??b and {nonegate: true}
    ✓ should match ../c with a/??b
    ✓ should match ../c with a/??b and {dot: true}
    ✓ should match ../c with a/??b and {nonegate: true}
    ✓ should match ../c with a/??b
    ✓ should match ../c with a/??b and {dot: true}
    ✓ should match ../c with a/??b and {nonegate: true}
    ✓ should match ./../c with a/??b
    ✓ should match ./../c with a/??b and {dot: true}
    ✓ should match ./../c with a/??b and {nonegate: true}
    ✓ should match ./a/../c with a/??b
    ✓ should match ./a/../c with a/??b and {dot: true}
    ✓ should match ./a/../c with a/??b and {nonegate: true}
    ✓ should match /.. with a/??b
    ✓ should match /.. with a/??b and {dot: true}
    ✓ should match /.. with a/??b and {nonegate: true}
    ✓ should match /../c with a/??b
    ✓ should match /../c with a/??b and {dot: true}
    ✓ should match /../c with a/??b and {nonegate: true}
    ✓ should match /../.c with a/??b
    ✓ should match /../.c with a/??b and {dot: true}
    ✓ should match /../.c with a/??b and {nonegate: true}
    ✓ should match /../.c/ with a/??b
    ✓ should match /../.c/ with a/??b and {dot: true}
    ✓ should match /../.c/ with a/??b and {nonegate: true}
    ✓ should match /a/../c with a/??b
    ✓ should match /a/../c with a/??b and {dot: true}
    ✓ should match /a/../c with a/??b and {nonegate: true}
    ✓ should match a/../c with a/??b
    ✓ should match a/../c with a/??b and {dot: true}
    ✓ should match a/../c with a/??b and {nonegate: true}
    ✓ should match ../.b/.c with a/??b
    ✓ should match ../.b/.c with a/??b and {dot: true}
    ✓ should match ../.b/.c with a/??b and {nonegate: true}
    ✓ should match ../b/.c with a/??b
    ✓ should match ../b/.c with a/??b and {dot: true}
    ✓ should match ../b/.c with a/??b and {nonegate: true}
    ✓ should match ./.b/.c with a/??b
    ✓ should match ./.b/.c with a/??b and {dot: true}
    ✓ should match ./.b/.c with a/??b and {nonegate: true}
    ✓ should match ./b/.c with a/??b
    ✓ should match ./b/.c with a/??b and {dot: true}
    ✓ should match ./b/.c with a/??b and {nonegate: true}
    ✓ should match .b with a/??b
    ✓ should match .b with a/??b and {dot: true}
    ✓ should match .b with a/??b and {nonegate: true}
    ✓ should match .b.c with a/??b
    ✓ should match .b.c with a/??b and {dot: true}
    ✓ should match .b.c with a/??b and {nonegate: true}
    ✓ should match .b.c/ with a/??b
    ✓ should match .b.c/ with a/??b and {dot: true}
    ✓ should match .b.c/ with a/??b and {nonegate: true}
    ✓ should match .b/ with a/??b
    ✓ should match .b/ with a/??b and {dot: true}
    ✓ should match .b/ with a/??b and {nonegate: true}
    ✓ should match .b/.c with a/??b
    ✓ should match .b/.c with a/??b and {dot: true}
    ✓ should match .b/.c with a/??b and {nonegate: true}
    ✓ should match .b/c with a/??b
    ✓ should match .b/c with a/??b and {dot: true}
    ✓ should match .b/c with a/??b and {nonegate: true}
    ✓ should match b/.c with a/??b
    ✓ should match b/.c with a/??b and {dot: true}
    ✓ should match b/.c with a/??b and {nonegate: true}
    ✓ should match b/.c/ with a/??b
    ✓ should match b/.c/ with a/??b and {dot: true}
    ✓ should match b/.c/ with a/??b and {nonegate: true}
    ✓ should match a/+b/c with a/??b
    ✓ should match a/+b/c with a/??b and {dot: true}
    ✓ should match a/+b/c with a/??b and {nonegate: true}
    ✓ should match +a/+b/c with a/??b
    ✓ should match +a/+b/c with a/??b and {dot: true}
    ✓ should match +a/+b/c with a/??b and {nonegate: true}
    ✓ should match a (foo) with a/??b
    ✓ should match a (foo) with a/??b and {dot: true}
    ✓ should match a (foo) with a/??b and {nonegate: true}
    ✓ should match a (foo)/(bar) with a/??b
    ✓ should match a (foo)/(bar) with a/??b and {dot: true}
    ✓ should match a (foo)/(bar) with a/??b and {nonegate: true}
    ✓ should match a/b/c (1) with a/??b
    ✓ should match a/b/c (1) with a/??b and {dot: true}
    ✓ should match a/b/c (1) with a/??b and {nonegate: true}
    ✓ should match a/b (2)/c (1) with a/??b
    ✓ should match a/b (2)/c (1) with a/??b and {dot: true}
    ✓ should match a/b (2)/c (1) with a/??b and {nonegate: true}
    ✓ should match a/b/c [def] with a/??b
    ✓ should match a/b/c [def] with a/??b and {dot: true}
    ✓ should match a/b/c [def] with a/??b and {nonegate: true}
    ✓ should match a with a/?b
    ✓ should match a with a/?b and {dot: true}
    ✓ should match a with a/?b and {nonegate: true}
    ✓ should match a.md with a/?b
    ✓ should match a.md with a/?b and {dot: true}
    ✓ should match a.md with a/?b and {nonegate: true}
    ✓ should match a.js with a/?b
    ✓ should match a.js with a/?b and {dot: true}
    ✓ should match a.js with a/?b and {nonegate: true}
    ✓ should match a/ with a/?b
    ✓ should match a/ with a/?b and {dot: true}
    ✓ should match a/ with a/?b and {nonegate: true}
    ✓ should match a/b with a/?b
    ✓ should match a/b with a/?b and {dot: true}
    ✓ should match a/b with a/?b and {nonegate: true}
    ✓ should match a/b/.c.md with a/?b
    ✓ should match a/b/.c.md with a/?b and {dot: true}
    ✓ should match a/b/.c.md with a/?b and {nonegate: true}
    ✓ should match a/b/c with a/?b
    ✓ should match a/b/c with a/?b and {dot: true}
    ✓ should match a/b/c with a/?b and {nonegate: true}
    ✓ should match a/b/c.md with a/?b
    ✓ should match a/b/c.md with a/?b and {dot: true}
    ✓ should match a/b/c.md with a/?b and {nonegate: true}
    ✓ should match a/b/c/ with a/?b
    ✓ should match a/b/c/ with a/?b and {dot: true}
    ✓ should match a/b/c/ with a/?b and {nonegate: true}
    ✓ should match a/b/c/d with a/?b
    ✓ should match a/b/c/d with a/?b and {dot: true}
    ✓ should match a/b/c/d with a/?b and {nonegate: true}
    ✓ should match a/b/c/d/ with a/?b
    ✓ should match a/b/c/d/ with a/?b and {dot: true}
    ✓ should match a/b/c/d/ with a/?b and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with a/?b
    ✓ should match a/b/c/d/e/f/z.js with a/?b and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with a/?b and {nonegate: true}
    ✓ should match a/b/c/z.js with a/?b
    ✓ should match a/b/c/z.js with a/?b and {dot: true}
    ✓ should match a/b/c/z.js with a/?b and {nonegate: true}
    ✓ should match a/bb with a/?b
    ✓ should match a/bb with a/?b and {dot: true}
    ✓ should match a/bb with a/?b and {nonegate: true}
    ✓ should match a/cb with a/?b
    ✓ should match a/cb with a/?b and {dot: true}
    ✓ should match a/cb with a/?b and {nonegate: true}
    ✓ should match abbbz with a/?b
    ✓ should match abbbz with a/?b and {dot: true}
    ✓ should match abbbz with a/?b and {nonegate: true}
    ✓ should match abc with a/?b
    ✓ should match abc with a/?b and {dot: true}
    ✓ should match abc with a/?b and {nonegate: true}
    ✓ should match abd with a/?b
    ✓ should match abd with a/?b and {dot: true}
    ✓ should match abd with a/?b and {nonegate: true}
    ✓ should match z.js with a/?b
    ✓ should match z.js with a/?b and {dot: true}
    ✓ should match z.js with a/?b and {nonegate: true}
    ✓ should match za.js with a/?b
    ✓ should match za.js with a/?b and {dot: true}
    ✓ should match za.js with a/?b and {nonegate: true}
    ✓ should match !a.js with a/?b
    ✓ should match !a.js with a/?b and {dot: true}
    ✓ should match !a.js with a/?b and {nonegate: true}
    ✓ should match !a/b with a/?b
    ✓ should match !a/b with a/?b and {dot: true}
    ✓ should match !a/b with a/?b and {nonegate: true}
    ✓ should match !a/b/ with a/?b
    ✓ should match !a/b/ with a/?b and {dot: true}
    ✓ should match !a/b/ with a/?b and {nonegate: true}
    ✓ should match !a/b/c with a/?b
    ✓ should match !a/b/c with a/?b and {dot: true}
    ✓ should match !a/b/c with a/?b and {nonegate: true}
    ✓ should match !a/b/c/ with a/?b
    ✓ should match !a/b/c/ with a/?b and {dot: true}
    ✓ should match !a/b/c/ with a/?b and {nonegate: true}
    ✓ should match !a/!b with a/?b
    ✓ should match !a/!b with a/?b and {dot: true}
    ✓ should match !a/!b with a/?b and {nonegate: true}
    ✓ should match !a/!b/c with a/?b
    ✓ should match !a/!b/c with a/?b and {dot: true}
    ✓ should match !a/!b/c with a/?b and {nonegate: true}
    ✓ should match !a/!b/c/d with a/?b
    ✓ should match !a/!b/c/d with a/?b and {dot: true}
    ✓ should match !a/!b/c/d with a/?b and {nonegate: true}
    ✓ should match !a/b/.c.md with a/?b
    ✓ should match !a/b/.c.md with a/?b and {dot: true}
    ✓ should match !a/b/.c.md with a/?b and {nonegate: true}
    ✓ should match /a/ with a/?b
    ✓ should match /a/ with a/?b and {dot: true}
    ✓ should match /a/ with a/?b and {nonegate: true}
    ✓ should match /a/b with a/?b
    ✓ should match /a/b with a/?b and {dot: true}
    ✓ should match /a/b with a/?b and {nonegate: true}
    ✓ should match /a/cb with a/?b
    ✓ should match /a/cb with a/?b and {dot: true}
    ✓ should match /a/cb with a/?b and {nonegate: true}
    ✓ should match /a/bb with a/?b
    ✓ should match /a/bb with a/?b and {dot: true}
    ✓ should match /a/bb with a/?b and {nonegate: true}
    ✓ should match /a/b/c with a/?b
    ✓ should match /a/b/c with a/?b and {dot: true}
    ✓ should match /a/b/c with a/?b and {nonegate: true}
    ✓ should match /a/b/c/ with a/?b
    ✓ should match /a/b/c/ with a/?b and {dot: true}
    ✓ should match /a/b/c/ with a/?b and {nonegate: true}
    ✓ should match /a/b/c/d with a/?b
    ✓ should match /a/b/c/d with a/?b and {dot: true}
    ✓ should match /a/b/c/d with a/?b and {nonegate: true}
    ✓ should match /a/b/c/d/ with a/?b
    ✓ should match /a/b/c/d/ with a/?b and {dot: true}
    ✓ should match /a/b/c/d/ with a/?b and {nonegate: true}
    ✓ should match . with a/?b
    ✓ should match . with a/?b and {dot: true}
    ✓ should match . with a/?b and {nonegate: true}
    ✓ should match ./ with a/?b
    ✓ should match ./ with a/?b and {dot: true}
    ✓ should match ./ with a/?b and {nonegate: true}
    ✓ should match .. with a/?b
    ✓ should match .. with a/?b and {dot: true}
    ✓ should match .. with a/?b and {nonegate: true}
    ✓ should match ../c with a/?b
    ✓ should match ../c with a/?b and {dot: true}
    ✓ should match ../c with a/?b and {nonegate: true}
    ✓ should match ../c with a/?b
    ✓ should match ../c with a/?b and {dot: true}
    ✓ should match ../c with a/?b and {nonegate: true}
    ✓ should match ./../c with a/?b
    ✓ should match ./../c with a/?b and {dot: true}
    ✓ should match ./../c with a/?b and {nonegate: true}
    ✓ should match ./a/../c with a/?b
    ✓ should match ./a/../c with a/?b and {dot: true}
    ✓ should match ./a/../c with a/?b and {nonegate: true}
    ✓ should match /.. with a/?b
    ✓ should match /.. with a/?b and {dot: true}
    ✓ should match /.. with a/?b and {nonegate: true}
    ✓ should match /../c with a/?b
    ✓ should match /../c with a/?b and {dot: true}
    ✓ should match /../c with a/?b and {nonegate: true}
    ✓ should match /../.c with a/?b
    ✓ should match /../.c with a/?b and {dot: true}
    ✓ should match /../.c with a/?b and {nonegate: true}
    ✓ should match /../.c/ with a/?b
    ✓ should match /../.c/ with a/?b and {dot: true}
    ✓ should match /../.c/ with a/?b and {nonegate: true}
    ✓ should match /a/../c with a/?b
    ✓ should match /a/../c with a/?b and {dot: true}
    ✓ should match /a/../c with a/?b and {nonegate: true}
    ✓ should match a/../c with a/?b
    ✓ should match a/../c with a/?b and {dot: true}
    ✓ should match a/../c with a/?b and {nonegate: true}
    ✓ should match ../.b/.c with a/?b
    ✓ should match ../.b/.c with a/?b and {dot: true}
    ✓ should match ../.b/.c with a/?b and {nonegate: true}
    ✓ should match ../b/.c with a/?b
    ✓ should match ../b/.c with a/?b and {dot: true}
    ✓ should match ../b/.c with a/?b and {nonegate: true}
    ✓ should match ./.b/.c with a/?b
    ✓ should match ./.b/.c with a/?b and {dot: true}
    ✓ should match ./.b/.c with a/?b and {nonegate: true}
    ✓ should match ./b/.c with a/?b
    ✓ should match ./b/.c with a/?b and {dot: true}
    ✓ should match ./b/.c with a/?b and {nonegate: true}
    ✓ should match .b with a/?b
    ✓ should match .b with a/?b and {dot: true}
    ✓ should match .b with a/?b and {nonegate: true}
    ✓ should match .b.c with a/?b
    ✓ should match .b.c with a/?b and {dot: true}
    ✓ should match .b.c with a/?b and {nonegate: true}
    ✓ should match .b.c/ with a/?b
    ✓ should match .b.c/ with a/?b and {dot: true}
    ✓ should match .b.c/ with a/?b and {nonegate: true}
    ✓ should match .b/ with a/?b
    ✓ should match .b/ with a/?b and {dot: true}
    ✓ should match .b/ with a/?b and {nonegate: true}
    ✓ should match .b/.c with a/?b
    ✓ should match .b/.c with a/?b and {dot: true}
    ✓ should match .b/.c with a/?b and {nonegate: true}
    ✓ should match .b/c with a/?b
    ✓ should match .b/c with a/?b and {dot: true}
    ✓ should match .b/c with a/?b and {nonegate: true}
    ✓ should match b/.c with a/?b
    ✓ should match b/.c with a/?b and {dot: true}
    ✓ should match b/.c with a/?b and {nonegate: true}
    ✓ should match b/.c/ with a/?b
    ✓ should match b/.c/ with a/?b and {dot: true}
    ✓ should match b/.c/ with a/?b and {nonegate: true}
    ✓ should match a/+b/c with a/?b
    ✓ should match a/+b/c with a/?b and {dot: true}
    ✓ should match a/+b/c with a/?b and {nonegate: true}
    ✓ should match +a/+b/c with a/?b
    ✓ should match +a/+b/c with a/?b and {dot: true}
    ✓ should match +a/+b/c with a/?b and {nonegate: true}
    ✓ should match a (foo) with a/?b
    ✓ should match a (foo) with a/?b and {dot: true}
    ✓ should match a (foo) with a/?b and {nonegate: true}
    ✓ should match a (foo)/(bar) with a/?b
    ✓ should match a (foo)/(bar) with a/?b and {dot: true}
    ✓ should match a (foo)/(bar) with a/?b and {nonegate: true}
    ✓ should match a/b/c (1) with a/?b
    ✓ should match a/b/c (1) with a/?b and {dot: true}
    ✓ should match a/b/c (1) with a/?b and {nonegate: true}
    ✓ should match a/b (2)/c (1) with a/?b
    ✓ should match a/b (2)/c (1) with a/?b and {dot: true}
    ✓ should match a/b (2)/c (1) with a/?b and {nonegate: true}
    ✓ should match a/b/c [def] with a/?b
    ✓ should match a/b/c [def] with a/?b and {dot: true}
    ✓ should match a/b/c [def] with a/?b and {nonegate: true}
    ✓ should match a with a/b
    ✓ should match a with a/b and {dot: true}
    ✓ should match a with a/b and {nonegate: true}
    ✓ should match a.md with a/b
    ✓ should match a.md with a/b and {dot: true}
    ✓ should match a.md with a/b and {nonegate: true}
    ✓ should match a.js with a/b
    ✓ should match a.js with a/b and {dot: true}
    ✓ should match a.js with a/b and {nonegate: true}
    ✓ should match a/ with a/b
    ✓ should match a/ with a/b and {dot: true}
    ✓ should match a/ with a/b and {nonegate: true}
    ✓ should match a/b with a/b
    ✓ should match a/b with a/b and {dot: true}
    ✓ should match a/b with a/b and {nonegate: true}
    ✓ should match a/b/.c.md with a/b
    ✓ should match a/b/.c.md with a/b and {dot: true}
    ✓ should match a/b/.c.md with a/b and {nonegate: true}
    ✓ should match a/b/c with a/b
    ✓ should match a/b/c with a/b and {dot: true}
    ✓ should match a/b/c with a/b and {nonegate: true}
    ✓ should match a/b/c.md with a/b
    ✓ should match a/b/c.md with a/b and {dot: true}
    ✓ should match a/b/c.md with a/b and {nonegate: true}
    ✓ should match a/b/c/ with a/b
    ✓ should match a/b/c/ with a/b and {dot: true}
    ✓ should match a/b/c/ with a/b and {nonegate: true}
    ✓ should match a/b/c/d with a/b
    ✓ should match a/b/c/d with a/b and {dot: true}
    ✓ should match a/b/c/d with a/b and {nonegate: true}
    ✓ should match a/b/c/d/ with a/b
    ✓ should match a/b/c/d/ with a/b and {dot: true}
    ✓ should match a/b/c/d/ with a/b and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with a/b
    ✓ should match a/b/c/d/e/f/z.js with a/b and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with a/b and {nonegate: true}
    ✓ should match a/b/c/z.js with a/b
    ✓ should match a/b/c/z.js with a/b and {dot: true}
    ✓ should match a/b/c/z.js with a/b and {nonegate: true}
    ✓ should match a/bb with a/b
    ✓ should match a/bb with a/b and {dot: true}
    ✓ should match a/bb with a/b and {nonegate: true}
    ✓ should match a/cb with a/b
    ✓ should match a/cb with a/b and {dot: true}
    ✓ should match a/cb with a/b and {nonegate: true}
    ✓ should match abbbz with a/b
    ✓ should match abbbz with a/b and {dot: true}
    ✓ should match abbbz with a/b and {nonegate: true}
    ✓ should match abc with a/b
    ✓ should match abc with a/b and {dot: true}
    ✓ should match abc with a/b and {nonegate: true}
    ✓ should match abd with a/b
    ✓ should match abd with a/b and {dot: true}
    ✓ should match abd with a/b and {nonegate: true}
    ✓ should match z.js with a/b
    ✓ should match z.js with a/b and {dot: true}
    ✓ should match z.js with a/b and {nonegate: true}
    ✓ should match za.js with a/b
    ✓ should match za.js with a/b and {dot: true}
    ✓ should match za.js with a/b and {nonegate: true}
    ✓ should match !a.js with a/b
    ✓ should match !a.js with a/b and {dot: true}
    ✓ should match !a.js with a/b and {nonegate: true}
    ✓ should match !a/b with a/b
    ✓ should match !a/b with a/b and {dot: true}
    ✓ should match !a/b with a/b and {nonegate: true}
    ✓ should match !a/b/ with a/b
    ✓ should match !a/b/ with a/b and {dot: true}
    ✓ should match !a/b/ with a/b and {nonegate: true}
    ✓ should match !a/b/c with a/b
    ✓ should match !a/b/c with a/b and {dot: true}
    ✓ should match !a/b/c with a/b and {nonegate: true}
    ✓ should match !a/b/c/ with a/b
    ✓ should match !a/b/c/ with a/b and {dot: true}
    ✓ should match !a/b/c/ with a/b and {nonegate: true}
    ✓ should match !a/!b with a/b
    ✓ should match !a/!b with a/b and {dot: true}
    ✓ should match !a/!b with a/b and {nonegate: true}
    ✓ should match !a/!b/c with a/b
    ✓ should match !a/!b/c with a/b and {dot: true}
    ✓ should match !a/!b/c with a/b and {nonegate: true}
    ✓ should match !a/!b/c/d with a/b
    ✓ should match !a/!b/c/d with a/b and {dot: true}
    ✓ should match !a/!b/c/d with a/b and {nonegate: true}
    ✓ should match !a/b/.c.md with a/b
    ✓ should match !a/b/.c.md with a/b and {dot: true}
    ✓ should match !a/b/.c.md with a/b and {nonegate: true}
    ✓ should match /a/ with a/b
    ✓ should match /a/ with a/b and {dot: true}
    ✓ should match /a/ with a/b and {nonegate: true}
    ✓ should match /a/b with a/b
    ✓ should match /a/b with a/b and {dot: true}
    ✓ should match /a/b with a/b and {nonegate: true}
    ✓ should match /a/cb with a/b
    ✓ should match /a/cb with a/b and {dot: true}
    ✓ should match /a/cb with a/b and {nonegate: true}
    ✓ should match /a/bb with a/b
    ✓ should match /a/bb with a/b and {dot: true}
    ✓ should match /a/bb with a/b and {nonegate: true}
    ✓ should match /a/b/c with a/b
    ✓ should match /a/b/c with a/b and {dot: true}
    ✓ should match /a/b/c with a/b and {nonegate: true}
    ✓ should match /a/b/c/ with a/b
    ✓ should match /a/b/c/ with a/b and {dot: true}
    ✓ should match /a/b/c/ with a/b and {nonegate: true}
    ✓ should match /a/b/c/d with a/b
    ✓ should match /a/b/c/d with a/b and {dot: true}
    ✓ should match /a/b/c/d with a/b and {nonegate: true}
    ✓ should match /a/b/c/d/ with a/b
    ✓ should match /a/b/c/d/ with a/b and {dot: true}
    ✓ should match /a/b/c/d/ with a/b and {nonegate: true}
    ✓ should match . with a/b
    ✓ should match . with a/b and {dot: true}
    ✓ should match . with a/b and {nonegate: true}
    ✓ should match ./ with a/b
    ✓ should match ./ with a/b and {dot: true}
    ✓ should match ./ with a/b and {nonegate: true}
    ✓ should match .. with a/b
    ✓ should match .. with a/b and {dot: true}
    ✓ should match .. with a/b and {nonegate: true}
    ✓ should match ../c with a/b
    ✓ should match ../c with a/b and {dot: true}
    ✓ should match ../c with a/b and {nonegate: true}
    ✓ should match ../c with a/b
    ✓ should match ../c with a/b and {dot: true}
    ✓ should match ../c with a/b and {nonegate: true}
    ✓ should match ./../c with a/b
    ✓ should match ./../c with a/b and {dot: true}
    ✓ should match ./../c with a/b and {nonegate: true}
    ✓ should match ./a/../c with a/b
    ✓ should match ./a/../c with a/b and {dot: true}
    ✓ should match ./a/../c with a/b and {nonegate: true}
    ✓ should match /.. with a/b
    ✓ should match /.. with a/b and {dot: true}
    ✓ should match /.. with a/b and {nonegate: true}
    ✓ should match /../c with a/b
    ✓ should match /../c with a/b and {dot: true}
    ✓ should match /../c with a/b and {nonegate: true}
    ✓ should match /../.c with a/b
    ✓ should match /../.c with a/b and {dot: true}
    ✓ should match /../.c with a/b and {nonegate: true}
    ✓ should match /../.c/ with a/b
    ✓ should match /../.c/ with a/b and {dot: true}
    ✓ should match /../.c/ with a/b and {nonegate: true}
    ✓ should match /a/../c with a/b
    ✓ should match /a/../c with a/b and {dot: true}
    ✓ should match /a/../c with a/b and {nonegate: true}
    ✓ should match a/../c with a/b
    ✓ should match a/../c with a/b and {dot: true}
    ✓ should match a/../c with a/b and {nonegate: true}
    ✓ should match ../.b/.c with a/b
    ✓ should match ../.b/.c with a/b and {dot: true}
    ✓ should match ../.b/.c with a/b and {nonegate: true}
    ✓ should match ../b/.c with a/b
    ✓ should match ../b/.c with a/b and {dot: true}
    ✓ should match ../b/.c with a/b and {nonegate: true}
    ✓ should match ./.b/.c with a/b
    ✓ should match ./.b/.c with a/b and {dot: true}
    ✓ should match ./.b/.c with a/b and {nonegate: true}
    ✓ should match ./b/.c with a/b
    ✓ should match ./b/.c with a/b and {dot: true}
    ✓ should match ./b/.c with a/b and {nonegate: true}
    ✓ should match .b with a/b
    ✓ should match .b with a/b and {dot: true}
    ✓ should match .b with a/b and {nonegate: true}
    ✓ should match .b.c with a/b
    ✓ should match .b.c with a/b and {dot: true}
    ✓ should match .b.c with a/b and {nonegate: true}
    ✓ should match .b.c/ with a/b
    ✓ should match .b.c/ with a/b and {dot: true}
    ✓ should match .b.c/ with a/b and {nonegate: true}
    ✓ should match .b/ with a/b
    ✓ should match .b/ with a/b and {dot: true}
    ✓ should match .b/ with a/b and {nonegate: true}
    ✓ should match .b/.c with a/b
    ✓ should match .b/.c with a/b and {dot: true}
    ✓ should match .b/.c with a/b and {nonegate: true}
    ✓ should match .b/c with a/b
    ✓ should match .b/c with a/b and {dot: true}
    ✓ should match .b/c with a/b and {nonegate: true}
    ✓ should match b/.c with a/b
    ✓ should match b/.c with a/b and {dot: true}
    ✓ should match b/.c with a/b and {nonegate: true}
    ✓ should match b/.c/ with a/b
    ✓ should match b/.c/ with a/b and {dot: true}
    ✓ should match b/.c/ with a/b and {nonegate: true}
    ✓ should match a/+b/c with a/b
    ✓ should match a/+b/c with a/b and {dot: true}
    ✓ should match a/+b/c with a/b and {nonegate: true}
    ✓ should match +a/+b/c with a/b
    ✓ should match +a/+b/c with a/b and {dot: true}
    ✓ should match +a/+b/c with a/b and {nonegate: true}
    ✓ should match a (foo) with a/b
    ✓ should match a (foo) with a/b and {dot: true}
    ✓ should match a (foo) with a/b and {nonegate: true}
    ✓ should match a (foo)/(bar) with a/b
    ✓ should match a (foo)/(bar) with a/b and {dot: true}
    ✓ should match a (foo)/(bar) with a/b and {nonegate: true}
    ✓ should match a/b/c (1) with a/b
    ✓ should match a/b/c (1) with a/b and {dot: true}
    ✓ should match a/b/c (1) with a/b and {nonegate: true}
    ✓ should match a/b (2)/c (1) with a/b
    ✓ should match a/b (2)/c (1) with a/b and {dot: true}
    ✓ should match a/b (2)/c (1) with a/b and {nonegate: true}
    ✓ should match a/b/c [def] with a/b
    ✓ should match a/b/c [def] with a/b and {dot: true}
    ✓ should match a/b/c [def] with a/b and {nonegate: true}
    ✓ should match a with a/b*
    ✓ should match a with a/b* and {dot: true}
    ✓ should match a with a/b* and {nonegate: true}
    ✓ should match a.md with a/b*
    ✓ should match a.md with a/b* and {dot: true}
    ✓ should match a.md with a/b* and {nonegate: true}
    ✓ should match a.js with a/b*
    ✓ should match a.js with a/b* and {dot: true}
    ✓ should match a.js with a/b* and {nonegate: true}
    ✓ should match a/ with a/b*
    ✓ should match a/ with a/b* and {dot: true}
    ✓ should match a/ with a/b* and {nonegate: true}
    ✓ should match a/b with a/b*
    ✓ should match a/b with a/b* and {dot: true}
    ✓ should match a/b with a/b* and {nonegate: true}
    ✓ should match a/b/.c.md with a/b*
    ✓ should match a/b/.c.md with a/b* and {dot: true}
    ✓ should match a/b/.c.md with a/b* and {nonegate: true}
    ✓ should match a/b/c with a/b*
    ✓ should match a/b/c with a/b* and {dot: true}
    ✓ should match a/b/c with a/b* and {nonegate: true}
    ✓ should match a/b/c.md with a/b*
    ✓ should match a/b/c.md with a/b* and {dot: true}
    ✓ should match a/b/c.md with a/b* and {nonegate: true}
    ✓ should match a/b/c/ with a/b*
    ✓ should match a/b/c/ with a/b* and {dot: true}
    ✓ should match a/b/c/ with a/b* and {nonegate: true}
    ✓ should match a/b/c/d with a/b*
    ✓ should match a/b/c/d with a/b* and {dot: true}
    ✓ should match a/b/c/d with a/b* and {nonegate: true}
    ✓ should match a/b/c/d/ with a/b*
    ✓ should match a/b/c/d/ with a/b* and {dot: true}
    ✓ should match a/b/c/d/ with a/b* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with a/b*
    ✓ should match a/b/c/d/e/f/z.js with a/b* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with a/b* and {nonegate: true}
    ✓ should match a/b/c/z.js with a/b*
    ✓ should match a/b/c/z.js with a/b* and {dot: true}
    ✓ should match a/b/c/z.js with a/b* and {nonegate: true}
    ✓ should match a/bb with a/b*
    ✓ should match a/bb with a/b* and {dot: true}
    ✓ should match a/bb with a/b* and {nonegate: true}
    ✓ should match a/cb with a/b*
    ✓ should match a/cb with a/b* and {dot: true}
    ✓ should match a/cb with a/b* and {nonegate: true}
    ✓ should match abbbz with a/b*
    ✓ should match abbbz with a/b* and {dot: true}
    ✓ should match abbbz with a/b* and {nonegate: true}
    ✓ should match abc with a/b*
    ✓ should match abc with a/b* and {dot: true}
    ✓ should match abc with a/b* and {nonegate: true}
    ✓ should match abd with a/b*
    ✓ should match abd with a/b* and {dot: true}
    ✓ should match abd with a/b* and {nonegate: true}
    ✓ should match z.js with a/b*
    ✓ should match z.js with a/b* and {dot: true}
    ✓ should match z.js with a/b* and {nonegate: true}
    ✓ should match za.js with a/b*
    ✓ should match za.js with a/b* and {dot: true}
    ✓ should match za.js with a/b* and {nonegate: true}
    ✓ should match !a.js with a/b*
    ✓ should match !a.js with a/b* and {dot: true}
    ✓ should match !a.js with a/b* and {nonegate: true}
    ✓ should match !a/b with a/b*
    ✓ should match !a/b with a/b* and {dot: true}
    ✓ should match !a/b with a/b* and {nonegate: true}
    ✓ should match !a/b/ with a/b*
    ✓ should match !a/b/ with a/b* and {dot: true}
    ✓ should match !a/b/ with a/b* and {nonegate: true}
    ✓ should match !a/b/c with a/b*
    ✓ should match !a/b/c with a/b* and {dot: true}
    ✓ should match !a/b/c with a/b* and {nonegate: true}
    ✓ should match !a/b/c/ with a/b*
    ✓ should match !a/b/c/ with a/b* and {dot: true}
    ✓ should match !a/b/c/ with a/b* and {nonegate: true}
    ✓ should match !a/!b with a/b*
    ✓ should match !a/!b with a/b* and {dot: true}
    ✓ should match !a/!b with a/b* and {nonegate: true}
    ✓ should match !a/!b/c with a/b*
    ✓ should match !a/!b/c with a/b* and {dot: true}
    ✓ should match !a/!b/c with a/b* and {nonegate: true}
    ✓ should match !a/!b/c/d with a/b*
    ✓ should match !a/!b/c/d with a/b* and {dot: true}
    ✓ should match !a/!b/c/d with a/b* and {nonegate: true}
    ✓ should match !a/b/.c.md with a/b*
    ✓ should match !a/b/.c.md with a/b* and {dot: true}
    ✓ should match !a/b/.c.md with a/b* and {nonegate: true}
    ✓ should match /a/ with a/b*
    ✓ should match /a/ with a/b* and {dot: true}
    ✓ should match /a/ with a/b* and {nonegate: true}
    ✓ should match /a/b with a/b*
    ✓ should match /a/b with a/b* and {dot: true}
    ✓ should match /a/b with a/b* and {nonegate: true}
    ✓ should match /a/cb with a/b*
    ✓ should match /a/cb with a/b* and {dot: true}
    ✓ should match /a/cb with a/b* and {nonegate: true}
    ✓ should match /a/bb with a/b*
    ✓ should match /a/bb with a/b* and {dot: true}
    ✓ should match /a/bb with a/b* and {nonegate: true}
    ✓ should match /a/b/c with a/b*
    ✓ should match /a/b/c with a/b* and {dot: true}
    ✓ should match /a/b/c with a/b* and {nonegate: true}
    ✓ should match /a/b/c/ with a/b*
    ✓ should match /a/b/c/ with a/b* and {dot: true}
    ✓ should match /a/b/c/ with a/b* and {nonegate: true}
    ✓ should match /a/b/c/d with a/b*
    ✓ should match /a/b/c/d with a/b* and {dot: true}
    ✓ should match /a/b/c/d with a/b* and {nonegate: true}
    ✓ should match /a/b/c/d/ with a/b*
    ✓ should match /a/b/c/d/ with a/b* and {dot: true}
    ✓ should match /a/b/c/d/ with a/b* and {nonegate: true}
    ✓ should match . with a/b*
    ✓ should match . with a/b* and {dot: true}
    ✓ should match . with a/b* and {nonegate: true}
    ✓ should match ./ with a/b*
    ✓ should match ./ with a/b* and {dot: true}
    ✓ should match ./ with a/b* and {nonegate: true}
    ✓ should match .. with a/b*
    ✓ should match .. with a/b* and {dot: true}
    ✓ should match .. with a/b* and {nonegate: true}
    ✓ should match ../c with a/b*
    ✓ should match ../c with a/b* and {dot: true}
    ✓ should match ../c with a/b* and {nonegate: true}
    ✓ should match ../c with a/b*
    ✓ should match ../c with a/b* and {dot: true}
    ✓ should match ../c with a/b* and {nonegate: true}
    ✓ should match ./../c with a/b*
    ✓ should match ./../c with a/b* and {dot: true}
    ✓ should match ./../c with a/b* and {nonegate: true}
    ✓ should match ./a/../c with a/b*
    ✓ should match ./a/../c with a/b* and {dot: true}
    ✓ should match ./a/../c with a/b* and {nonegate: true}
    ✓ should match /.. with a/b*
    ✓ should match /.. with a/b* and {dot: true}
    ✓ should match /.. with a/b* and {nonegate: true}
    ✓ should match /../c with a/b*
    ✓ should match /../c with a/b* and {dot: true}
    ✓ should match /../c with a/b* and {nonegate: true}
    ✓ should match /../.c with a/b*
    ✓ should match /../.c with a/b* and {dot: true}
    ✓ should match /../.c with a/b* and {nonegate: true}
    ✓ should match /../.c/ with a/b*
    ✓ should match /../.c/ with a/b* and {dot: true}
    ✓ should match /../.c/ with a/b* and {nonegate: true}
    ✓ should match /a/../c with a/b*
    ✓ should match /a/../c with a/b* and {dot: true}
    ✓ should match /a/../c with a/b* and {nonegate: true}
    ✓ should match a/../c with a/b*
    ✓ should match a/../c with a/b* and {dot: true}
    ✓ should match a/../c with a/b* and {nonegate: true}
    ✓ should match ../.b/.c with a/b*
    ✓ should match ../.b/.c with a/b* and {dot: true}
    ✓ should match ../.b/.c with a/b* and {nonegate: true}
    ✓ should match ../b/.c with a/b*
    ✓ should match ../b/.c with a/b* and {dot: true}
    ✓ should match ../b/.c with a/b* and {nonegate: true}
    ✓ should match ./.b/.c with a/b*
    ✓ should match ./.b/.c with a/b* and {dot: true}
    ✓ should match ./.b/.c with a/b* and {nonegate: true}
    ✓ should match ./b/.c with a/b*
    ✓ should match ./b/.c with a/b* and {dot: true}
    ✓ should match ./b/.c with a/b* and {nonegate: true}
    ✓ should match .b with a/b*
    ✓ should match .b with a/b* and {dot: true}
    ✓ should match .b with a/b* and {nonegate: true}
    ✓ should match .b.c with a/b*
    ✓ should match .b.c with a/b* and {dot: true}
    ✓ should match .b.c with a/b* and {nonegate: true}
    ✓ should match .b.c/ with a/b*
    ✓ should match .b.c/ with a/b* and {dot: true}
    ✓ should match .b.c/ with a/b* and {nonegate: true}
    ✓ should match .b/ with a/b*
    ✓ should match .b/ with a/b* and {dot: true}
    ✓ should match .b/ with a/b* and {nonegate: true}
    ✓ should match .b/.c with a/b*
    ✓ should match .b/.c with a/b* and {dot: true}
    ✓ should match .b/.c with a/b* and {nonegate: true}
    ✓ should match .b/c with a/b*
    ✓ should match .b/c with a/b* and {dot: true}
    ✓ should match .b/c with a/b* and {nonegate: true}
    ✓ should match b/.c with a/b*
    ✓ should match b/.c with a/b* and {dot: true}
    ✓ should match b/.c with a/b* and {nonegate: true}
    ✓ should match b/.c/ with a/b*
    ✓ should match b/.c/ with a/b* and {dot: true}
    ✓ should match b/.c/ with a/b* and {nonegate: true}
    ✓ should match a/+b/c with a/b*
    ✓ should match a/+b/c with a/b* and {dot: true}
    ✓ should match a/+b/c with a/b* and {nonegate: true}
    ✓ should match +a/+b/c with a/b*
    ✓ should match +a/+b/c with a/b* and {dot: true}
    ✓ should match +a/+b/c with a/b* and {nonegate: true}
    ✓ should match a (foo) with a/b*
    ✓ should match a (foo) with a/b* and {dot: true}
    ✓ should match a (foo) with a/b* and {nonegate: true}
    ✓ should match a (foo)/(bar) with a/b*
    ✓ should match a (foo)/(bar) with a/b* and {dot: true}
    ✓ should match a (foo)/(bar) with a/b* and {nonegate: true}
    ✓ should match a/b/c (1) with a/b*
    ✓ should match a/b/c (1) with a/b* and {dot: true}
    ✓ should match a/b/c (1) with a/b* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with a/b*
    ✓ should match a/b (2)/c (1) with a/b* and {dot: true}
    ✓ should match a/b (2)/c (1) with a/b* and {nonegate: true}
    ✓ should match a/b/c [def] with a/b*
    ✓ should match a/b/c [def] with a/b* and {dot: true}
    ✓ should match a/b/c [def] with a/b* and {nonegate: true}
    ✓ should match a with a/b/*
    ✓ should match a with a/b/* and {dot: true}
    ✓ should match a with a/b/* and {nonegate: true}
    ✓ should match a.md with a/b/*
    ✓ should match a.md with a/b/* and {dot: true}
    ✓ should match a.md with a/b/* and {nonegate: true}
    ✓ should match a.js with a/b/*
    ✓ should match a.js with a/b/* and {dot: true}
    ✓ should match a.js with a/b/* and {nonegate: true}
    ✓ should match a/ with a/b/*
    ✓ should match a/ with a/b/* and {dot: true}
    ✓ should match a/ with a/b/* and {nonegate: true}
    ✓ should match a/b with a/b/*
    ✓ should match a/b with a/b/* and {dot: true}
    ✓ should match a/b with a/b/* and {nonegate: true}
    ✓ should match a/b/.c.md with a/b/*
    ✓ should match a/b/.c.md with a/b/* and {dot: true}
    ✓ should match a/b/.c.md with a/b/* and {nonegate: true}
    ✓ should match a/b/c with a/b/*
    ✓ should match a/b/c with a/b/* and {dot: true}
    ✓ should match a/b/c with a/b/* and {nonegate: true}
    ✓ should match a/b/c.md with a/b/*
    ✓ should match a/b/c.md with a/b/* and {dot: true}
    ✓ should match a/b/c.md with a/b/* and {nonegate: true}
    ✓ should match a/b/c/ with a/b/*
    ✓ should match a/b/c/ with a/b/* and {dot: true}
    ✓ should match a/b/c/ with a/b/* and {nonegate: true}
    ✓ should match a/b/c/d with a/b/*
    ✓ should match a/b/c/d with a/b/* and {dot: true}
    ✓ should match a/b/c/d with a/b/* and {nonegate: true}
    ✓ should match a/b/c/d/ with a/b/*
    ✓ should match a/b/c/d/ with a/b/* and {dot: true}
    ✓ should match a/b/c/d/ with a/b/* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with a/b/*
    ✓ should match a/b/c/d/e/f/z.js with a/b/* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with a/b/* and {nonegate: true}
    ✓ should match a/b/c/z.js with a/b/*
    ✓ should match a/b/c/z.js with a/b/* and {dot: true}
    ✓ should match a/b/c/z.js with a/b/* and {nonegate: true}
    ✓ should match a/bb with a/b/*
    ✓ should match a/bb with a/b/* and {dot: true}
    ✓ should match a/bb with a/b/* and {nonegate: true}
    ✓ should match a/cb with a/b/*
    ✓ should match a/cb with a/b/* and {dot: true}
    ✓ should match a/cb with a/b/* and {nonegate: true}
    ✓ should match abbbz with a/b/*
    ✓ should match abbbz with a/b/* and {dot: true}
    ✓ should match abbbz with a/b/* and {nonegate: true}
    ✓ should match abc with a/b/*
    ✓ should match abc with a/b/* and {dot: true}
    ✓ should match abc with a/b/* and {nonegate: true}
    ✓ should match abd with a/b/*
    ✓ should match abd with a/b/* and {dot: true}
    ✓ should match abd with a/b/* and {nonegate: true}
    ✓ should match z.js with a/b/*
    ✓ should match z.js with a/b/* and {dot: true}
    ✓ should match z.js with a/b/* and {nonegate: true}
    ✓ should match za.js with a/b/*
    ✓ should match za.js with a/b/* and {dot: true}
    ✓ should match za.js with a/b/* and {nonegate: true}
    ✓ should match !a.js with a/b/*
    ✓ should match !a.js with a/b/* and {dot: true}
    ✓ should match !a.js with a/b/* and {nonegate: true}
    ✓ should match !a/b with a/b/*
    ✓ should match !a/b with a/b/* and {dot: true}
    ✓ should match !a/b with a/b/* and {nonegate: true}
    ✓ should match !a/b/ with a/b/*
    ✓ should match !a/b/ with a/b/* and {dot: true}
    ✓ should match !a/b/ with a/b/* and {nonegate: true}
    ✓ should match !a/b/c with a/b/*
    ✓ should match !a/b/c with a/b/* and {dot: true}
    ✓ should match !a/b/c with a/b/* and {nonegate: true}
    ✓ should match !a/b/c/ with a/b/*
    ✓ should match !a/b/c/ with a/b/* and {dot: true}
    ✓ should match !a/b/c/ with a/b/* and {nonegate: true}
    ✓ should match !a/!b with a/b/*
    ✓ should match !a/!b with a/b/* and {dot: true}
    ✓ should match !a/!b with a/b/* and {nonegate: true}
    ✓ should match !a/!b/c with a/b/*
    ✓ should match !a/!b/c with a/b/* and {dot: true}
    ✓ should match !a/!b/c with a/b/* and {nonegate: true}
    ✓ should match !a/!b/c/d with a/b/*
    ✓ should match !a/!b/c/d with a/b/* and {dot: true}
    ✓ should match !a/!b/c/d with a/b/* and {nonegate: true}
    ✓ should match !a/b/.c.md with a/b/*
    ✓ should match !a/b/.c.md with a/b/* and {dot: true}
    ✓ should match !a/b/.c.md with a/b/* and {nonegate: true}
    ✓ should match /a/ with a/b/*
    ✓ should match /a/ with a/b/* and {dot: true}
    ✓ should match /a/ with a/b/* and {nonegate: true}
    ✓ should match /a/b with a/b/*
    ✓ should match /a/b with a/b/* and {dot: true}
    ✓ should match /a/b with a/b/* and {nonegate: true}
    ✓ should match /a/cb with a/b/*
    ✓ should match /a/cb with a/b/* and {dot: true}
    ✓ should match /a/cb with a/b/* and {nonegate: true}
    ✓ should match /a/bb with a/b/*
    ✓ should match /a/bb with a/b/* and {dot: true}
    ✓ should match /a/bb with a/b/* and {nonegate: true}
    ✓ should match /a/b/c with a/b/*
    ✓ should match /a/b/c with a/b/* and {dot: true}
    ✓ should match /a/b/c with a/b/* and {nonegate: true}
    ✓ should match /a/b/c/ with a/b/*
    ✓ should match /a/b/c/ with a/b/* and {dot: true}
    ✓ should match /a/b/c/ with a/b/* and {nonegate: true}
    ✓ should match /a/b/c/d with a/b/*
    ✓ should match /a/b/c/d with a/b/* and {dot: true}
    ✓ should match /a/b/c/d with a/b/* and {nonegate: true}
    ✓ should match /a/b/c/d/ with a/b/*
    ✓ should match /a/b/c/d/ with a/b/* and {dot: true}
    ✓ should match /a/b/c/d/ with a/b/* and {nonegate: true}
    ✓ should match . with a/b/*
    ✓ should match . with a/b/* and {dot: true}
    ✓ should match . with a/b/* and {nonegate: true}
    ✓ should match ./ with a/b/*
    ✓ should match ./ with a/b/* and {dot: true}
    ✓ should match ./ with a/b/* and {nonegate: true}
    ✓ should match .. with a/b/*
    ✓ should match .. with a/b/* and {dot: true}
    ✓ should match .. with a/b/* and {nonegate: true}
    ✓ should match ../c with a/b/*
    ✓ should match ../c with a/b/* and {dot: true}
    ✓ should match ../c with a/b/* and {nonegate: true}
    ✓ should match ../c with a/b/*
    ✓ should match ../c with a/b/* and {dot: true}
    ✓ should match ../c with a/b/* and {nonegate: true}
    ✓ should match ./../c with a/b/*
    ✓ should match ./../c with a/b/* and {dot: true}
    ✓ should match ./../c with a/b/* and {nonegate: true}
    ✓ should match ./a/../c with a/b/*
    ✓ should match ./a/../c with a/b/* and {dot: true}
    ✓ should match ./a/../c with a/b/* and {nonegate: true}
    ✓ should match /.. with a/b/*
    ✓ should match /.. with a/b/* and {dot: true}
    ✓ should match /.. with a/b/* and {nonegate: true}
    ✓ should match /../c with a/b/*
    ✓ should match /../c with a/b/* and {dot: true}
    ✓ should match /../c with a/b/* and {nonegate: true}
    ✓ should match /../.c with a/b/*
    ✓ should match /../.c with a/b/* and {dot: true}
    ✓ should match /../.c with a/b/* and {nonegate: true}
    ✓ should match /../.c/ with a/b/*
    ✓ should match /../.c/ with a/b/* and {dot: true}
    ✓ should match /../.c/ with a/b/* and {nonegate: true}
    ✓ should match /a/../c with a/b/*
    ✓ should match /a/../c with a/b/* and {dot: true}
    ✓ should match /a/../c with a/b/* and {nonegate: true}
    ✓ should match a/../c with a/b/*
    ✓ should match a/../c with a/b/* and {dot: true}
    ✓ should match a/../c with a/b/* and {nonegate: true}
    ✓ should match ../.b/.c with a/b/*
    ✓ should match ../.b/.c with a/b/* and {dot: true}
    ✓ should match ../.b/.c with a/b/* and {nonegate: true}
    ✓ should match ../b/.c with a/b/*
    ✓ should match ../b/.c with a/b/* and {dot: true}
    ✓ should match ../b/.c with a/b/* and {nonegate: true}
    ✓ should match ./.b/.c with a/b/*
    ✓ should match ./.b/.c with a/b/* and {dot: true}
    ✓ should match ./.b/.c with a/b/* and {nonegate: true}
    ✓ should match ./b/.c with a/b/*
    ✓ should match ./b/.c with a/b/* and {dot: true}
    ✓ should match ./b/.c with a/b/* and {nonegate: true}
    ✓ should match .b with a/b/*
    ✓ should match .b with a/b/* and {dot: true}
    ✓ should match .b with a/b/* and {nonegate: true}
    ✓ should match .b.c with a/b/*
    ✓ should match .b.c with a/b/* and {dot: true}
    ✓ should match .b.c with a/b/* and {nonegate: true}
    ✓ should match .b.c/ with a/b/*
    ✓ should match .b.c/ with a/b/* and {dot: true}
    ✓ should match .b.c/ with a/b/* and {nonegate: true}
    ✓ should match .b/ with a/b/*
    ✓ should match .b/ with a/b/* and {dot: true}
    ✓ should match .b/ with a/b/* and {nonegate: true}
    ✓ should match .b/.c with a/b/*
    ✓ should match .b/.c with a/b/* and {dot: true}
    ✓ should match .b/.c with a/b/* and {nonegate: true}
    ✓ should match .b/c with a/b/*
    ✓ should match .b/c with a/b/* and {dot: true}
    ✓ should match .b/c with a/b/* and {nonegate: true}
    ✓ should match b/.c with a/b/*
    ✓ should match b/.c with a/b/* and {dot: true}
    ✓ should match b/.c with a/b/* and {nonegate: true}
    ✓ should match b/.c/ with a/b/*
    ✓ should match b/.c/ with a/b/* and {dot: true}
    ✓ should match b/.c/ with a/b/* and {nonegate: true}
    ✓ should match a/+b/c with a/b/*
    ✓ should match a/+b/c with a/b/* and {dot: true}
    ✓ should match a/+b/c with a/b/* and {nonegate: true}
    ✓ should match +a/+b/c with a/b/*
    ✓ should match +a/+b/c with a/b/* and {dot: true}
    ✓ should match +a/+b/c with a/b/* and {nonegate: true}
    ✓ should match a (foo) with a/b/*
    ✓ should match a (foo) with a/b/* and {dot: true}
    ✓ should match a (foo) with a/b/* and {nonegate: true}
    ✓ should match a (foo)/(bar) with a/b/*
    ✓ should match a (foo)/(bar) with a/b/* and {dot: true}
    ✓ should match a (foo)/(bar) with a/b/* and {nonegate: true}
    ✓ should match a/b/c (1) with a/b/*
    ✓ should match a/b/c (1) with a/b/* and {dot: true}
    ✓ should match a/b/c (1) with a/b/* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with a/b/*
    ✓ should match a/b (2)/c (1) with a/b/* and {dot: true}
    ✓ should match a/b (2)/c (1) with a/b/* and {nonegate: true}
    ✓ should match a/b/c [def] with a/b/*
    ✓ should match a/b/c [def] with a/b/* and {dot: true}
    ✓ should match a/b/c [def] with a/b/* and {nonegate: true}
    ✓ should match a with a/b/c
    ✓ should match a with a/b/c and {dot: true}
    ✓ should match a with a/b/c and {nonegate: true}
    ✓ should match a.md with a/b/c
    ✓ should match a.md with a/b/c and {dot: true}
    ✓ should match a.md with a/b/c and {nonegate: true}
    ✓ should match a.js with a/b/c
    ✓ should match a.js with a/b/c and {dot: true}
    ✓ should match a.js with a/b/c and {nonegate: true}
    ✓ should match a/ with a/b/c
    ✓ should match a/ with a/b/c and {dot: true}
    ✓ should match a/ with a/b/c and {nonegate: true}
    ✓ should match a/b with a/b/c
    ✓ should match a/b with a/b/c and {dot: true}
    ✓ should match a/b with a/b/c and {nonegate: true}
    ✓ should match a/b/.c.md with a/b/c
    ✓ should match a/b/.c.md with a/b/c and {dot: true}
    ✓ should match a/b/.c.md with a/b/c and {nonegate: true}
    ✓ should match a/b/c with a/b/c
    ✓ should match a/b/c with a/b/c and {dot: true}
    ✓ should match a/b/c with a/b/c and {nonegate: true}
    ✓ should match a/b/c.md with a/b/c
    ✓ should match a/b/c.md with a/b/c and {dot: true}
    ✓ should match a/b/c.md with a/b/c and {nonegate: true}
    ✓ should match a/b/c/ with a/b/c
    ✓ should match a/b/c/ with a/b/c and {dot: true}
    ✓ should match a/b/c/ with a/b/c and {nonegate: true}
    ✓ should match a/b/c/d with a/b/c
    ✓ should match a/b/c/d with a/b/c and {dot: true}
    ✓ should match a/b/c/d with a/b/c and {nonegate: true}
    ✓ should match a/b/c/d/ with a/b/c
    ✓ should match a/b/c/d/ with a/b/c and {dot: true}
    ✓ should match a/b/c/d/ with a/b/c and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with a/b/c
    ✓ should match a/b/c/d/e/f/z.js with a/b/c and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with a/b/c and {nonegate: true}
    ✓ should match a/b/c/z.js with a/b/c
    ✓ should match a/b/c/z.js with a/b/c and {dot: true}
    ✓ should match a/b/c/z.js with a/b/c and {nonegate: true}
    ✓ should match a/bb with a/b/c
    ✓ should match a/bb with a/b/c and {dot: true}
    ✓ should match a/bb with a/b/c and {nonegate: true}
    ✓ should match a/cb with a/b/c
    ✓ should match a/cb with a/b/c and {dot: true}
    ✓ should match a/cb with a/b/c and {nonegate: true}
    ✓ should match abbbz with a/b/c
    ✓ should match abbbz with a/b/c and {dot: true}
    ✓ should match abbbz with a/b/c and {nonegate: true}
    ✓ should match abc with a/b/c
    ✓ should match abc with a/b/c and {dot: true}
    ✓ should match abc with a/b/c and {nonegate: true}
    ✓ should match abd with a/b/c
    ✓ should match abd with a/b/c and {dot: true}
    ✓ should match abd with a/b/c and {nonegate: true}
    ✓ should match z.js with a/b/c
    ✓ should match z.js with a/b/c and {dot: true}
    ✓ should match z.js with a/b/c and {nonegate: true}
    ✓ should match za.js with a/b/c
    ✓ should match za.js with a/b/c and {dot: true}
    ✓ should match za.js with a/b/c and {nonegate: true}
    ✓ should match !a.js with a/b/c
    ✓ should match !a.js with a/b/c and {dot: true}
    ✓ should match !a.js with a/b/c and {nonegate: true}
    ✓ should match !a/b with a/b/c
    ✓ should match !a/b with a/b/c and {dot: true}
    ✓ should match !a/b with a/b/c and {nonegate: true}
    ✓ should match !a/b/ with a/b/c
    ✓ should match !a/b/ with a/b/c and {dot: true}
    ✓ should match !a/b/ with a/b/c and {nonegate: true}
    ✓ should match !a/b/c with a/b/c
    ✓ should match !a/b/c with a/b/c and {dot: true}
    ✓ should match !a/b/c with a/b/c and {nonegate: true}
    ✓ should match !a/b/c/ with a/b/c
    ✓ should match !a/b/c/ with a/b/c and {dot: true}
    ✓ should match !a/b/c/ with a/b/c and {nonegate: true}
    ✓ should match !a/!b with a/b/c
    ✓ should match !a/!b with a/b/c and {dot: true}
    ✓ should match !a/!b with a/b/c and {nonegate: true}
    ✓ should match !a/!b/c with a/b/c
    ✓ should match !a/!b/c with a/b/c and {dot: true}
    ✓ should match !a/!b/c with a/b/c and {nonegate: true}
    ✓ should match !a/!b/c/d with a/b/c
    ✓ should match !a/!b/c/d with a/b/c and {dot: true}
    ✓ should match !a/!b/c/d with a/b/c and {nonegate: true}
    ✓ should match !a/b/.c.md with a/b/c
    ✓ should match !a/b/.c.md with a/b/c and {dot: true}
    ✓ should match !a/b/.c.md with a/b/c and {nonegate: true}
    ✓ should match /a/ with a/b/c
    ✓ should match /a/ with a/b/c and {dot: true}
    ✓ should match /a/ with a/b/c and {nonegate: true}
    ✓ should match /a/b with a/b/c
    ✓ should match /a/b with a/b/c and {dot: true}
    ✓ should match /a/b with a/b/c and {nonegate: true}
    ✓ should match /a/cb with a/b/c
    ✓ should match /a/cb with a/b/c and {dot: true}
    ✓ should match /a/cb with a/b/c and {nonegate: true}
    ✓ should match /a/bb with a/b/c
    ✓ should match /a/bb with a/b/c and {dot: true}
    ✓ should match /a/bb with a/b/c and {nonegate: true}
    ✓ should match /a/b/c with a/b/c
    ✓ should match /a/b/c with a/b/c and {dot: true}
    ✓ should match /a/b/c with a/b/c and {nonegate: true}
    ✓ should match /a/b/c/ with a/b/c
    ✓ should match /a/b/c/ with a/b/c and {dot: true}
    ✓ should match /a/b/c/ with a/b/c and {nonegate: true}
    ✓ should match /a/b/c/d with a/b/c
    ✓ should match /a/b/c/d with a/b/c and {dot: true}
    ✓ should match /a/b/c/d with a/b/c and {nonegate: true}
    ✓ should match /a/b/c/d/ with a/b/c
    ✓ should match /a/b/c/d/ with a/b/c and {dot: true}
    ✓ should match /a/b/c/d/ with a/b/c and {nonegate: true}
    ✓ should match . with a/b/c
    ✓ should match . with a/b/c and {dot: true}
    ✓ should match . with a/b/c and {nonegate: true}
    ✓ should match ./ with a/b/c
    ✓ should match ./ with a/b/c and {dot: true}
    ✓ should match ./ with a/b/c and {nonegate: true}
    ✓ should match .. with a/b/c
    ✓ should match .. with a/b/c and {dot: true}
    ✓ should match .. with a/b/c and {nonegate: true}
    ✓ should match ../c with a/b/c
    ✓ should match ../c with a/b/c and {dot: true}
    ✓ should match ../c with a/b/c and {nonegate: true}
    ✓ should match ../c with a/b/c
    ✓ should match ../c with a/b/c and {dot: true}
    ✓ should match ../c with a/b/c and {nonegate: true}
    ✓ should match ./../c with a/b/c
    ✓ should match ./../c with a/b/c and {dot: true}
    ✓ should match ./../c with a/b/c and {nonegate: true}
    ✓ should match ./a/../c with a/b/c
    ✓ should match ./a/../c with a/b/c and {dot: true}
    ✓ should match ./a/../c with a/b/c and {nonegate: true}
    ✓ should match /.. with a/b/c
    ✓ should match /.. with a/b/c and {dot: true}
    ✓ should match /.. with a/b/c and {nonegate: true}
    ✓ should match /../c with a/b/c
    ✓ should match /../c with a/b/c and {dot: true}
    ✓ should match /../c with a/b/c and {nonegate: true}
    ✓ should match /../.c with a/b/c
    ✓ should match /../.c with a/b/c and {dot: true}
    ✓ should match /../.c with a/b/c and {nonegate: true}
    ✓ should match /../.c/ with a/b/c
    ✓ should match /../.c/ with a/b/c and {dot: true}
    ✓ should match /../.c/ with a/b/c and {nonegate: true}
    ✓ should match /a/../c with a/b/c
    ✓ should match /a/../c with a/b/c and {dot: true}
    ✓ should match /a/../c with a/b/c and {nonegate: true}
    ✓ should match a/../c with a/b/c
    ✓ should match a/../c with a/b/c and {dot: true}
    ✓ should match a/../c with a/b/c and {nonegate: true}
    ✓ should match ../.b/.c with a/b/c
    ✓ should match ../.b/.c with a/b/c and {dot: true}
    ✓ should match ../.b/.c with a/b/c and {nonegate: true}
    ✓ should match ../b/.c with a/b/c
    ✓ should match ../b/.c with a/b/c and {dot: true}
    ✓ should match ../b/.c with a/b/c and {nonegate: true}
    ✓ should match ./.b/.c with a/b/c
    ✓ should match ./.b/.c with a/b/c and {dot: true}
    ✓ should match ./.b/.c with a/b/c and {nonegate: true}
    ✓ should match ./b/.c with a/b/c
    ✓ should match ./b/.c with a/b/c and {dot: true}
    ✓ should match ./b/.c with a/b/c and {nonegate: true}
    ✓ should match .b with a/b/c
    ✓ should match .b with a/b/c and {dot: true}
    ✓ should match .b with a/b/c and {nonegate: true}
    ✓ should match .b.c with a/b/c
    ✓ should match .b.c with a/b/c and {dot: true}
    ✓ should match .b.c with a/b/c and {nonegate: true}
    ✓ should match .b.c/ with a/b/c
    ✓ should match .b.c/ with a/b/c and {dot: true}
    ✓ should match .b.c/ with a/b/c and {nonegate: true}
    ✓ should match .b/ with a/b/c
    ✓ should match .b/ with a/b/c and {dot: true}
    ✓ should match .b/ with a/b/c and {nonegate: true}
    ✓ should match .b/.c with a/b/c
    ✓ should match .b/.c with a/b/c and {dot: true}
    ✓ should match .b/.c with a/b/c and {nonegate: true}
    ✓ should match .b/c with a/b/c
    ✓ should match .b/c with a/b/c and {dot: true}
    ✓ should match .b/c with a/b/c and {nonegate: true}
    ✓ should match b/.c with a/b/c
    ✓ should match b/.c with a/b/c and {dot: true}
    ✓ should match b/.c with a/b/c and {nonegate: true}
    ✓ should match b/.c/ with a/b/c
    ✓ should match b/.c/ with a/b/c and {dot: true}
    ✓ should match b/.c/ with a/b/c and {nonegate: true}
    ✓ should match a/+b/c with a/b/c
    ✓ should match a/+b/c with a/b/c and {dot: true}
    ✓ should match a/+b/c with a/b/c and {nonegate: true}
    ✓ should match +a/+b/c with a/b/c
    ✓ should match +a/+b/c with a/b/c and {dot: true}
    ✓ should match +a/+b/c with a/b/c and {nonegate: true}
    ✓ should match a (foo) with a/b/c
    ✓ should match a (foo) with a/b/c and {dot: true}
    ✓ should match a (foo) with a/b/c and {nonegate: true}
    ✓ should match a (foo)/(bar) with a/b/c
    ✓ should match a (foo)/(bar) with a/b/c and {dot: true}
    ✓ should match a (foo)/(bar) with a/b/c and {nonegate: true}
    ✓ should match a/b/c (1) with a/b/c
    ✓ should match a/b/c (1) with a/b/c and {dot: true}
    ✓ should match a/b/c (1) with a/b/c and {nonegate: true}
    ✓ should match a/b (2)/c (1) with a/b/c
    ✓ should match a/b (2)/c (1) with a/b/c and {dot: true}
    ✓ should match a/b (2)/c (1) with a/b/c and {nonegate: true}
    ✓ should match a/b/c [def] with a/b/c
    ✓ should match a/b/c [def] with a/b/c and {dot: true}
    ✓ should match a/b/c [def] with a/b/c and {nonegate: true}
    ✓ should match a with a/b/c/*
    ✓ should match a with a/b/c/* and {dot: true}
    ✓ should match a with a/b/c/* and {nonegate: true}
    ✓ should match a.md with a/b/c/*
    ✓ should match a.md with a/b/c/* and {dot: true}
    ✓ should match a.md with a/b/c/* and {nonegate: true}
    ✓ should match a.js with a/b/c/*
    ✓ should match a.js with a/b/c/* and {dot: true}
    ✓ should match a.js with a/b/c/* and {nonegate: true}
    ✓ should match a/ with a/b/c/*
    ✓ should match a/ with a/b/c/* and {dot: true}
    ✓ should match a/ with a/b/c/* and {nonegate: true}
    ✓ should match a/b with a/b/c/*
    ✓ should match a/b with a/b/c/* and {dot: true}
    ✓ should match a/b with a/b/c/* and {nonegate: true}
    ✓ should match a/b/.c.md with a/b/c/*
    ✓ should match a/b/.c.md with a/b/c/* and {dot: true}
    ✓ should match a/b/.c.md with a/b/c/* and {nonegate: true}
    ✓ should match a/b/c with a/b/c/*
    ✓ should match a/b/c with a/b/c/* and {dot: true}
    ✓ should match a/b/c with a/b/c/* and {nonegate: true}
    ✓ should match a/b/c.md with a/b/c/*
    ✓ should match a/b/c.md with a/b/c/* and {dot: true}
    ✓ should match a/b/c.md with a/b/c/* and {nonegate: true}
    ✓ should match a/b/c/ with a/b/c/*
    ✓ should match a/b/c/ with a/b/c/* and {dot: true}
    ✓ should match a/b/c/ with a/b/c/* and {nonegate: true}
    ✓ should match a/b/c/d with a/b/c/*
    ✓ should match a/b/c/d with a/b/c/* and {dot: true}
    ✓ should match a/b/c/d with a/b/c/* and {nonegate: true}
    ✓ should match a/b/c/d/ with a/b/c/*
    ✓ should match a/b/c/d/ with a/b/c/* and {dot: true}
    ✓ should match a/b/c/d/ with a/b/c/* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with a/b/c/*
    ✓ should match a/b/c/d/e/f/z.js with a/b/c/* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with a/b/c/* and {nonegate: true}
    ✓ should match a/b/c/z.js with a/b/c/*
    ✓ should match a/b/c/z.js with a/b/c/* and {dot: true}
    ✓ should match a/b/c/z.js with a/b/c/* and {nonegate: true}
    ✓ should match a/bb with a/b/c/*
    ✓ should match a/bb with a/b/c/* and {dot: true}
    ✓ should match a/bb with a/b/c/* and {nonegate: true}
    ✓ should match a/cb with a/b/c/*
    ✓ should match a/cb with a/b/c/* and {dot: true}
    ✓ should match a/cb with a/b/c/* and {nonegate: true}
    ✓ should match abbbz with a/b/c/*
    ✓ should match abbbz with a/b/c/* and {dot: true}
    ✓ should match abbbz with a/b/c/* and {nonegate: true}
    ✓ should match abc with a/b/c/*
    ✓ should match abc with a/b/c/* and {dot: true}
    ✓ should match abc with a/b/c/* and {nonegate: true}
    ✓ should match abd with a/b/c/*
    ✓ should match abd with a/b/c/* and {dot: true}
    ✓ should match abd with a/b/c/* and {nonegate: true}
    ✓ should match z.js with a/b/c/*
    ✓ should match z.js with a/b/c/* and {dot: true}
    ✓ should match z.js with a/b/c/* and {nonegate: true}
    ✓ should match za.js with a/b/c/*
    ✓ should match za.js with a/b/c/* and {dot: true}
    ✓ should match za.js with a/b/c/* and {nonegate: true}
    ✓ should match !a.js with a/b/c/*
    ✓ should match !a.js with a/b/c/* and {dot: true}
    ✓ should match !a.js with a/b/c/* and {nonegate: true}
    ✓ should match !a/b with a/b/c/*
    ✓ should match !a/b with a/b/c/* and {dot: true}
    ✓ should match !a/b with a/b/c/* and {nonegate: true}
    ✓ should match !a/b/ with a/b/c/*
    ✓ should match !a/b/ with a/b/c/* and {dot: true}
    ✓ should match !a/b/ with a/b/c/* and {nonegate: true}
    ✓ should match !a/b/c with a/b/c/*
    ✓ should match !a/b/c with a/b/c/* and {dot: true}
    ✓ should match !a/b/c with a/b/c/* and {nonegate: true}
    ✓ should match !a/b/c/ with a/b/c/*
    ✓ should match !a/b/c/ with a/b/c/* and {dot: true}
    ✓ should match !a/b/c/ with a/b/c/* and {nonegate: true}
    ✓ should match !a/!b with a/b/c/*
    ✓ should match !a/!b with a/b/c/* and {dot: true}
    ✓ should match !a/!b with a/b/c/* and {nonegate: true}
    ✓ should match !a/!b/c with a/b/c/*
    ✓ should match !a/!b/c with a/b/c/* and {dot: true}
    ✓ should match !a/!b/c with a/b/c/* and {nonegate: true}
    ✓ should match !a/!b/c/d with a/b/c/*
    ✓ should match !a/!b/c/d with a/b/c/* and {dot: true}
    ✓ should match !a/!b/c/d with a/b/c/* and {nonegate: true}
    ✓ should match !a/b/.c.md with a/b/c/*
    ✓ should match !a/b/.c.md with a/b/c/* and {dot: true}
    ✓ should match !a/b/.c.md with a/b/c/* and {nonegate: true}
    ✓ should match /a/ with a/b/c/*
    ✓ should match /a/ with a/b/c/* and {dot: true}
    ✓ should match /a/ with a/b/c/* and {nonegate: true}
    ✓ should match /a/b with a/b/c/*
    ✓ should match /a/b with a/b/c/* and {dot: true}
    ✓ should match /a/b with a/b/c/* and {nonegate: true}
    ✓ should match /a/cb with a/b/c/*
    ✓ should match /a/cb with a/b/c/* and {dot: true}
    ✓ should match /a/cb with a/b/c/* and {nonegate: true}
    ✓ should match /a/bb with a/b/c/*
    ✓ should match /a/bb with a/b/c/* and {dot: true}
    ✓ should match /a/bb with a/b/c/* and {nonegate: true}
    ✓ should match /a/b/c with a/b/c/*
    ✓ should match /a/b/c with a/b/c/* and {dot: true}
    ✓ should match /a/b/c with a/b/c/* and {nonegate: true}
    ✓ should match /a/b/c/ with a/b/c/*
    ✓ should match /a/b/c/ with a/b/c/* and {dot: true}
    ✓ should match /a/b/c/ with a/b/c/* and {nonegate: true}
    ✓ should match /a/b/c/d with a/b/c/*
    ✓ should match /a/b/c/d with a/b/c/* and {dot: true}
    ✓ should match /a/b/c/d with a/b/c/* and {nonegate: true}
    ✓ should match /a/b/c/d/ with a/b/c/*
    ✓ should match /a/b/c/d/ with a/b/c/* and {dot: true}
    ✓ should match /a/b/c/d/ with a/b/c/* and {nonegate: true}
    ✓ should match . with a/b/c/*
    ✓ should match . with a/b/c/* and {dot: true}
    ✓ should match . with a/b/c/* and {nonegate: true}
    ✓ should match ./ with a/b/c/*
    ✓ should match ./ with a/b/c/* and {dot: true}
    ✓ should match ./ with a/b/c/* and {nonegate: true}
    ✓ should match .. with a/b/c/*
    ✓ should match .. with a/b/c/* and {dot: true}
    ✓ should match .. with a/b/c/* and {nonegate: true}
    ✓ should match ../c with a/b/c/*
    ✓ should match ../c with a/b/c/* and {dot: true}
    ✓ should match ../c with a/b/c/* and {nonegate: true}
    ✓ should match ../c with a/b/c/*
    ✓ should match ../c with a/b/c/* and {dot: true}
    ✓ should match ../c with a/b/c/* and {nonegate: true}
    ✓ should match ./../c with a/b/c/*
    ✓ should match ./../c with a/b/c/* and {dot: true}
    ✓ should match ./../c with a/b/c/* and {nonegate: true}
    ✓ should match ./a/../c with a/b/c/*
    ✓ should match ./a/../c with a/b/c/* and {dot: true}
    ✓ should match ./a/../c with a/b/c/* and {nonegate: true}
    ✓ should match /.. with a/b/c/*
    ✓ should match /.. with a/b/c/* and {dot: true}
    ✓ should match /.. with a/b/c/* and {nonegate: true}
    ✓ should match /../c with a/b/c/*
    ✓ should match /../c with a/b/c/* and {dot: true}
    ✓ should match /../c with a/b/c/* and {nonegate: true}
    ✓ should match /../.c with a/b/c/*
    ✓ should match /../.c with a/b/c/* and {dot: true}
    ✓ should match /../.c with a/b/c/* and {nonegate: true}
    ✓ should match /../.c/ with a/b/c/*
    ✓ should match /../.c/ with a/b/c/* and {dot: true}
    ✓ should match /../.c/ with a/b/c/* and {nonegate: true}
    ✓ should match /a/../c with a/b/c/*
    ✓ should match /a/../c with a/b/c/* and {dot: true}
    ✓ should match /a/../c with a/b/c/* and {nonegate: true}
    ✓ should match a/../c with a/b/c/*
    ✓ should match a/../c with a/b/c/* and {dot: true}
    ✓ should match a/../c with a/b/c/* and {nonegate: true}
    ✓ should match ../.b/.c with a/b/c/*
    ✓ should match ../.b/.c with a/b/c/* and {dot: true}
    ✓ should match ../.b/.c with a/b/c/* and {nonegate: true}
    ✓ should match ../b/.c with a/b/c/*
    ✓ should match ../b/.c with a/b/c/* and {dot: true}
    ✓ should match ../b/.c with a/b/c/* and {nonegate: true}
    ✓ should match ./.b/.c with a/b/c/*
    ✓ should match ./.b/.c with a/b/c/* and {dot: true}
    ✓ should match ./.b/.c with a/b/c/* and {nonegate: true}
    ✓ should match ./b/.c with a/b/c/*
    ✓ should match ./b/.c with a/b/c/* and {dot: true}
    ✓ should match ./b/.c with a/b/c/* and {nonegate: true}
    ✓ should match .b with a/b/c/*
    ✓ should match .b with a/b/c/* and {dot: true}
    ✓ should match .b with a/b/c/* and {nonegate: true}
    ✓ should match .b.c with a/b/c/*
    ✓ should match .b.c with a/b/c/* and {dot: true}
    ✓ should match .b.c with a/b/c/* and {nonegate: true}
    ✓ should match .b.c/ with a/b/c/*
    ✓ should match .b.c/ with a/b/c/* and {dot: true}
    ✓ should match .b.c/ with a/b/c/* and {nonegate: true}
    ✓ should match .b/ with a/b/c/*
    ✓ should match .b/ with a/b/c/* and {dot: true}
    ✓ should match .b/ with a/b/c/* and {nonegate: true}
    ✓ should match .b/.c with a/b/c/*
    ✓ should match .b/.c with a/b/c/* and {dot: true}
    ✓ should match .b/.c with a/b/c/* and {nonegate: true}
    ✓ should match .b/c with a/b/c/*
    ✓ should match .b/c with a/b/c/* and {dot: true}
    ✓ should match .b/c with a/b/c/* and {nonegate: true}
    ✓ should match b/.c with a/b/c/*
    ✓ should match b/.c with a/b/c/* and {dot: true}
    ✓ should match b/.c with a/b/c/* and {nonegate: true}
    ✓ should match b/.c/ with a/b/c/*
    ✓ should match b/.c/ with a/b/c/* and {dot: true}
    ✓ should match b/.c/ with a/b/c/* and {nonegate: true}
    ✓ should match a/+b/c with a/b/c/*
    ✓ should match a/+b/c with a/b/c/* and {dot: true}
    ✓ should match a/+b/c with a/b/c/* and {nonegate: true}
    ✓ should match +a/+b/c with a/b/c/*
    ✓ should match +a/+b/c with a/b/c/* and {dot: true}
    ✓ should match +a/+b/c with a/b/c/* and {nonegate: true}
    ✓ should match a (foo) with a/b/c/*
    ✓ should match a (foo) with a/b/c/* and {dot: true}
    ✓ should match a (foo) with a/b/c/* and {nonegate: true}
    ✓ should match a (foo)/(bar) with a/b/c/*
    ✓ should match a (foo)/(bar) with a/b/c/* and {dot: true}
    ✓ should match a (foo)/(bar) with a/b/c/* and {nonegate: true}
    ✓ should match a/b/c (1) with a/b/c/*
    ✓ should match a/b/c (1) with a/b/c/* and {dot: true}
    ✓ should match a/b/c (1) with a/b/c/* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with a/b/c/*
    ✓ should match a/b (2)/c (1) with a/b/c/* and {dot: true}
    ✓ should match a/b (2)/c (1) with a/b/c/* and {nonegate: true}
    ✓ should match a/b/c [def] with a/b/c/*
    ✓ should match a/b/c [def] with a/b/c/* and {dot: true}
    ✓ should match a/b/c [def] with a/b/c/* and {nonegate: true}
    ✓ should match a with a/b/c/**/*.js
    ✓ should match a with a/b/c/**/*.js and {dot: true}
    ✓ should match a with a/b/c/**/*.js and {nonegate: true}
    ✓ should match a.md with a/b/c/**/*.js
    ✓ should match a.md with a/b/c/**/*.js and {dot: true}
    ✓ should match a.md with a/b/c/**/*.js and {nonegate: true}
    ✓ should match a.js with a/b/c/**/*.js
    ✓ should match a.js with a/b/c/**/*.js and {dot: true}
    ✓ should match a.js with a/b/c/**/*.js and {nonegate: true}
    ✓ should match a/ with a/b/c/**/*.js
    ✓ should match a/ with a/b/c/**/*.js and {dot: true}
    ✓ should match a/ with a/b/c/**/*.js and {nonegate: true}
    ✓ should match a/b with a/b/c/**/*.js
    ✓ should match a/b with a/b/c/**/*.js and {dot: true}
    ✓ should match a/b with a/b/c/**/*.js and {nonegate: true}
    ✓ should match a/b/.c.md with a/b/c/**/*.js
    ✓ should match a/b/.c.md with a/b/c/**/*.js and {dot: true}
    ✓ should match a/b/.c.md with a/b/c/**/*.js and {nonegate: true}
    ✓ should match a/b/c with a/b/c/**/*.js
    ✓ should match a/b/c with a/b/c/**/*.js and {dot: true}
    ✓ should match a/b/c with a/b/c/**/*.js and {nonegate: true}
    ✓ should match a/b/c.md with a/b/c/**/*.js
    ✓ should match a/b/c.md with a/b/c/**/*.js and {dot: true}
    ✓ should match a/b/c.md with a/b/c/**/*.js and {nonegate: true}
    ✓ should match a/b/c/ with a/b/c/**/*.js
    ✓ should match a/b/c/ with a/b/c/**/*.js and {dot: true}
    ✓ should match a/b/c/ with a/b/c/**/*.js and {nonegate: true}
    ✓ should match a/b/c/d with a/b/c/**/*.js
    ✓ should match a/b/c/d with a/b/c/**/*.js and {dot: true}
    ✓ should match a/b/c/d with a/b/c/**/*.js and {nonegate: true}
    ✓ should match a/b/c/d/ with a/b/c/**/*.js
    ✓ should match a/b/c/d/ with a/b/c/**/*.js and {dot: true}
    ✓ should match a/b/c/d/ with a/b/c/**/*.js and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with a/b/c/**/*.js
    ✓ should match a/b/c/d/e/f/z.js with a/b/c/**/*.js and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with a/b/c/**/*.js and {nonegate: true}
    ✓ should match a/b/c/z.js with a/b/c/**/*.js
    ✓ should match a/b/c/z.js with a/b/c/**/*.js and {dot: true}
    ✓ should match a/b/c/z.js with a/b/c/**/*.js and {nonegate: true}
    ✓ should match a/bb with a/b/c/**/*.js
    ✓ should match a/bb with a/b/c/**/*.js and {dot: true}
    ✓ should match a/bb with a/b/c/**/*.js and {nonegate: true}
    ✓ should match a/cb with a/b/c/**/*.js
    ✓ should match a/cb with a/b/c/**/*.js and {dot: true}
    ✓ should match a/cb with a/b/c/**/*.js and {nonegate: true}
    ✓ should match abbbz with a/b/c/**/*.js
    ✓ should match abbbz with a/b/c/**/*.js and {dot: true}
    ✓ should match abbbz with a/b/c/**/*.js and {nonegate: true}
    ✓ should match abc with a/b/c/**/*.js
    ✓ should match abc with a/b/c/**/*.js and {dot: true}
    ✓ should match abc with a/b/c/**/*.js and {nonegate: true}
    ✓ should match abd with a/b/c/**/*.js
    ✓ should match abd with a/b/c/**/*.js and {dot: true}
    ✓ should match abd with a/b/c/**/*.js and {nonegate: true}
    ✓ should match z.js with a/b/c/**/*.js
    ✓ should match z.js with a/b/c/**/*.js and {dot: true}
    ✓ should match z.js with a/b/c/**/*.js and {nonegate: true}
    ✓ should match za.js with a/b/c/**/*.js
    ✓ should match za.js with a/b/c/**/*.js and {dot: true}
    ✓ should match za.js with a/b/c/**/*.js and {nonegate: true}
    ✓ should match !a.js with a/b/c/**/*.js
    ✓ should match !a.js with a/b/c/**/*.js and {dot: true}
    ✓ should match !a.js with a/b/c/**/*.js and {nonegate: true}
    ✓ should match !a/b with a/b/c/**/*.js
    ✓ should match !a/b with a/b/c/**/*.js and {dot: true}
    ✓ should match !a/b with a/b/c/**/*.js and {nonegate: true}
    ✓ should match !a/b/ with a/b/c/**/*.js
    ✓ should match !a/b/ with a/b/c/**/*.js and {dot: true}
    ✓ should match !a/b/ with a/b/c/**/*.js and {nonegate: true}
    ✓ should match !a/b/c with a/b/c/**/*.js
    ✓ should match !a/b/c with a/b/c/**/*.js and {dot: true}
    ✓ should match !a/b/c with a/b/c/**/*.js and {nonegate: true}
    ✓ should match !a/b/c/ with a/b/c/**/*.js
    ✓ should match !a/b/c/ with a/b/c/**/*.js and {dot: true}
    ✓ should match !a/b/c/ with a/b/c/**/*.js and {nonegate: true}
    ✓ should match !a/!b with a/b/c/**/*.js
    ✓ should match !a/!b with a/b/c/**/*.js and {dot: true}
    ✓ should match !a/!b with a/b/c/**/*.js and {nonegate: true}
    ✓ should match !a/!b/c with a/b/c/**/*.js
    ✓ should match !a/!b/c with a/b/c/**/*.js and {dot: true}
    ✓ should match !a/!b/c with a/b/c/**/*.js and {nonegate: true}
    ✓ should match !a/!b/c/d with a/b/c/**/*.js
    ✓ should match !a/!b/c/d with a/b/c/**/*.js and {dot: true}
    ✓ should match !a/!b/c/d with a/b/c/**/*.js and {nonegate: true}
    ✓ should match !a/b/.c.md with a/b/c/**/*.js
    ✓ should match !a/b/.c.md with a/b/c/**/*.js and {dot: true}
    ✓ should match !a/b/.c.md with a/b/c/**/*.js and {nonegate: true}
    ✓ should match /a/ with a/b/c/**/*.js
    ✓ should match /a/ with a/b/c/**/*.js and {dot: true}
    ✓ should match /a/ with a/b/c/**/*.js and {nonegate: true}
    ✓ should match /a/b with a/b/c/**/*.js
    ✓ should match /a/b with a/b/c/**/*.js and {dot: true}
    ✓ should match /a/b with a/b/c/**/*.js and {nonegate: true}
    ✓ should match /a/cb with a/b/c/**/*.js
    ✓ should match /a/cb with a/b/c/**/*.js and {dot: true}
    ✓ should match /a/cb with a/b/c/**/*.js and {nonegate: true}
    ✓ should match /a/bb with a/b/c/**/*.js
    ✓ should match /a/bb with a/b/c/**/*.js and {dot: true}
    ✓ should match /a/bb with a/b/c/**/*.js and {nonegate: true}
    ✓ should match /a/b/c with a/b/c/**/*.js
    ✓ should match /a/b/c with a/b/c/**/*.js and {dot: true}
    ✓ should match /a/b/c with a/b/c/**/*.js and {nonegate: true}
    ✓ should match /a/b/c/ with a/b/c/**/*.js
    ✓ should match /a/b/c/ with a/b/c/**/*.js and {dot: true}
    ✓ should match /a/b/c/ with a/b/c/**/*.js and {nonegate: true}
    ✓ should match /a/b/c/d with a/b/c/**/*.js
    ✓ should match /a/b/c/d with a/b/c/**/*.js and {dot: true}
    ✓ should match /a/b/c/d with a/b/c/**/*.js and {nonegate: true}
    ✓ should match /a/b/c/d/ with a/b/c/**/*.js
    ✓ should match /a/b/c/d/ with a/b/c/**/*.js and {dot: true}
    ✓ should match /a/b/c/d/ with a/b/c/**/*.js and {nonegate: true}
    ✓ should match . with a/b/c/**/*.js
    ✓ should match . with a/b/c/**/*.js and {dot: true}
    ✓ should match . with a/b/c/**/*.js and {nonegate: true}
    ✓ should match ./ with a/b/c/**/*.js
    ✓ should match ./ with a/b/c/**/*.js and {dot: true}
    ✓ should match ./ with a/b/c/**/*.js and {nonegate: true}
    ✓ should match .. with a/b/c/**/*.js
    ✓ should match .. with a/b/c/**/*.js and {dot: true}
    ✓ should match .. with a/b/c/**/*.js and {nonegate: true}
    ✓ should match ../c with a/b/c/**/*.js
    ✓ should match ../c with a/b/c/**/*.js and {dot: true}
    ✓ should match ../c with a/b/c/**/*.js and {nonegate: true}
    ✓ should match ../c with a/b/c/**/*.js
    ✓ should match ../c with a/b/c/**/*.js and {dot: true}
    ✓ should match ../c with a/b/c/**/*.js and {nonegate: true}
    ✓ should match ./../c with a/b/c/**/*.js
    ✓ should match ./../c with a/b/c/**/*.js and {dot: true}
    ✓ should match ./../c with a/b/c/**/*.js and {nonegate: true}
    ✓ should match ./a/../c with a/b/c/**/*.js
    ✓ should match ./a/../c with a/b/c/**/*.js and {dot: true}
    ✓ should match ./a/../c with a/b/c/**/*.js and {nonegate: true}
    ✓ should match /.. with a/b/c/**/*.js
    ✓ should match /.. with a/b/c/**/*.js and {dot: true}
    ✓ should match /.. with a/b/c/**/*.js and {nonegate: true}
    ✓ should match /../c with a/b/c/**/*.js
    ✓ should match /../c with a/b/c/**/*.js and {dot: true}
    ✓ should match /../c with a/b/c/**/*.js and {nonegate: true}
    ✓ should match /../.c with a/b/c/**/*.js
    ✓ should match /../.c with a/b/c/**/*.js and {dot: true}
    ✓ should match /../.c with a/b/c/**/*.js and {nonegate: true}
    ✓ should match /../.c/ with a/b/c/**/*.js
    ✓ should match /../.c/ with a/b/c/**/*.js and {dot: true}
    ✓ should match /../.c/ with a/b/c/**/*.js and {nonegate: true}
    ✓ should match /a/../c with a/b/c/**/*.js
    ✓ should match /a/../c with a/b/c/**/*.js and {dot: true}
    ✓ should match /a/../c with a/b/c/**/*.js and {nonegate: true}
    ✓ should match a/../c with a/b/c/**/*.js
    ✓ should match a/../c with a/b/c/**/*.js and {dot: true}
    ✓ should match a/../c with a/b/c/**/*.js and {nonegate: true}
    ✓ should match ../.b/.c with a/b/c/**/*.js
    ✓ should match ../.b/.c with a/b/c/**/*.js and {dot: true}
    ✓ should match ../.b/.c with a/b/c/**/*.js and {nonegate: true}
    ✓ should match ../b/.c with a/b/c/**/*.js
    ✓ should match ../b/.c with a/b/c/**/*.js and {dot: true}
    ✓ should match ../b/.c with a/b/c/**/*.js and {nonegate: true}
    ✓ should match ./.b/.c with a/b/c/**/*.js
    ✓ should match ./.b/.c with a/b/c/**/*.js and {dot: true}
    ✓ should match ./.b/.c with a/b/c/**/*.js and {nonegate: true}
    ✓ should match ./b/.c with a/b/c/**/*.js
    ✓ should match ./b/.c with a/b/c/**/*.js and {dot: true}
    ✓ should match ./b/.c with a/b/c/**/*.js and {nonegate: true}
    ✓ should match .b with a/b/c/**/*.js
    ✓ should match .b with a/b/c/**/*.js and {dot: true}
    ✓ should match .b with a/b/c/**/*.js and {nonegate: true}
    ✓ should match .b.c with a/b/c/**/*.js
    ✓ should match .b.c with a/b/c/**/*.js and {dot: true}
    ✓ should match .b.c with a/b/c/**/*.js and {nonegate: true}
    ✓ should match .b.c/ with a/b/c/**/*.js
    ✓ should match .b.c/ with a/b/c/**/*.js and {dot: true}
    ✓ should match .b.c/ with a/b/c/**/*.js and {nonegate: true}
    ✓ should match .b/ with a/b/c/**/*.js
    ✓ should match .b/ with a/b/c/**/*.js and {dot: true}
    ✓ should match .b/ with a/b/c/**/*.js and {nonegate: true}
    ✓ should match .b/.c with a/b/c/**/*.js
    ✓ should match .b/.c with a/b/c/**/*.js and {dot: true}
    ✓ should match .b/.c with a/b/c/**/*.js and {nonegate: true}
    ✓ should match .b/c with a/b/c/**/*.js
    ✓ should match .b/c with a/b/c/**/*.js and {dot: true}
    ✓ should match .b/c with a/b/c/**/*.js and {nonegate: true}
    ✓ should match b/.c with a/b/c/**/*.js
    ✓ should match b/.c with a/b/c/**/*.js and {dot: true}
    ✓ should match b/.c with a/b/c/**/*.js and {nonegate: true}
    ✓ should match b/.c/ with a/b/c/**/*.js
    ✓ should match b/.c/ with a/b/c/**/*.js and {dot: true}
    ✓ should match b/.c/ with a/b/c/**/*.js and {nonegate: true}
    ✓ should match a/+b/c with a/b/c/**/*.js
    ✓ should match a/+b/c with a/b/c/**/*.js and {dot: true}
    ✓ should match a/+b/c with a/b/c/**/*.js and {nonegate: true}
    ✓ should match +a/+b/c with a/b/c/**/*.js
    ✓ should match +a/+b/c with a/b/c/**/*.js and {dot: true}
    ✓ should match +a/+b/c with a/b/c/**/*.js and {nonegate: true}
    ✓ should match a (foo) with a/b/c/**/*.js
    ✓ should match a (foo) with a/b/c/**/*.js and {dot: true}
    ✓ should match a (foo) with a/b/c/**/*.js and {nonegate: true}
    ✓ should match a (foo)/(bar) with a/b/c/**/*.js
    ✓ should match a (foo)/(bar) with a/b/c/**/*.js and {dot: true}
    ✓ should match a (foo)/(bar) with a/b/c/**/*.js and {nonegate: true}
    ✓ should match a/b/c (1) with a/b/c/**/*.js
    ✓ should match a/b/c (1) with a/b/c/**/*.js and {dot: true}
    ✓ should match a/b/c (1) with a/b/c/**/*.js and {nonegate: true}
    ✓ should match a/b (2)/c (1) with a/b/c/**/*.js
    ✓ should match a/b (2)/c (1) with a/b/c/**/*.js and {dot: true}
    ✓ should match a/b (2)/c (1) with a/b/c/**/*.js and {nonegate: true}
    ✓ should match a/b/c [def] with a/b/c/**/*.js
    ✓ should match a/b/c [def] with a/b/c/**/*.js and {dot: true}
    ✓ should match a/b/c [def] with a/b/c/**/*.js and {nonegate: true}
    ✓ should match a with a/b/c/*.js
    ✓ should match a with a/b/c/*.js and {dot: true}
    ✓ should match a with a/b/c/*.js and {nonegate: true}
    ✓ should match a.md with a/b/c/*.js
    ✓ should match a.md with a/b/c/*.js and {dot: true}
    ✓ should match a.md with a/b/c/*.js and {nonegate: true}
    ✓ should match a.js with a/b/c/*.js
    ✓ should match a.js with a/b/c/*.js and {dot: true}
    ✓ should match a.js with a/b/c/*.js and {nonegate: true}
    ✓ should match a/ with a/b/c/*.js
    ✓ should match a/ with a/b/c/*.js and {dot: true}
    ✓ should match a/ with a/b/c/*.js and {nonegate: true}
    ✓ should match a/b with a/b/c/*.js
    ✓ should match a/b with a/b/c/*.js and {dot: true}
    ✓ should match a/b with a/b/c/*.js and {nonegate: true}
    ✓ should match a/b/.c.md with a/b/c/*.js
    ✓ should match a/b/.c.md with a/b/c/*.js and {dot: true}
    ✓ should match a/b/.c.md with a/b/c/*.js and {nonegate: true}
    ✓ should match a/b/c with a/b/c/*.js
    ✓ should match a/b/c with a/b/c/*.js and {dot: true}
    ✓ should match a/b/c with a/b/c/*.js and {nonegate: true}
    ✓ should match a/b/c.md with a/b/c/*.js
    ✓ should match a/b/c.md with a/b/c/*.js and {dot: true}
    ✓ should match a/b/c.md with a/b/c/*.js and {nonegate: true}
    ✓ should match a/b/c/ with a/b/c/*.js
    ✓ should match a/b/c/ with a/b/c/*.js and {dot: true}
    ✓ should match a/b/c/ with a/b/c/*.js and {nonegate: true}
    ✓ should match a/b/c/d with a/b/c/*.js
    ✓ should match a/b/c/d with a/b/c/*.js and {dot: true}
    ✓ should match a/b/c/d with a/b/c/*.js and {nonegate: true}
    ✓ should match a/b/c/d/ with a/b/c/*.js
    ✓ should match a/b/c/d/ with a/b/c/*.js and {dot: true}
    ✓ should match a/b/c/d/ with a/b/c/*.js and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with a/b/c/*.js
    ✓ should match a/b/c/d/e/f/z.js with a/b/c/*.js and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with a/b/c/*.js and {nonegate: true}
    ✓ should match a/b/c/z.js with a/b/c/*.js
    ✓ should match a/b/c/z.js with a/b/c/*.js and {dot: true}
    ✓ should match a/b/c/z.js with a/b/c/*.js and {nonegate: true}
    ✓ should match a/bb with a/b/c/*.js
    ✓ should match a/bb with a/b/c/*.js and {dot: true}
    ✓ should match a/bb with a/b/c/*.js and {nonegate: true}
    ✓ should match a/cb with a/b/c/*.js
    ✓ should match a/cb with a/b/c/*.js and {dot: true}
    ✓ should match a/cb with a/b/c/*.js and {nonegate: true}
    ✓ should match abbbz with a/b/c/*.js
    ✓ should match abbbz with a/b/c/*.js and {dot: true}
    ✓ should match abbbz with a/b/c/*.js and {nonegate: true}
    ✓ should match abc with a/b/c/*.js
    ✓ should match abc with a/b/c/*.js and {dot: true}
    ✓ should match abc with a/b/c/*.js and {nonegate: true}
    ✓ should match abd with a/b/c/*.js
    ✓ should match abd with a/b/c/*.js and {dot: true}
    ✓ should match abd with a/b/c/*.js and {nonegate: true}
    ✓ should match z.js with a/b/c/*.js
    ✓ should match z.js with a/b/c/*.js and {dot: true}
    ✓ should match z.js with a/b/c/*.js and {nonegate: true}
    ✓ should match za.js with a/b/c/*.js
    ✓ should match za.js with a/b/c/*.js and {dot: true}
    ✓ should match za.js with a/b/c/*.js and {nonegate: true}
    ✓ should match !a.js with a/b/c/*.js
    ✓ should match !a.js with a/b/c/*.js and {dot: true}
    ✓ should match !a.js with a/b/c/*.js and {nonegate: true}
    ✓ should match !a/b with a/b/c/*.js
    ✓ should match !a/b with a/b/c/*.js and {dot: true}
    ✓ should match !a/b with a/b/c/*.js and {nonegate: true}
    ✓ should match !a/b/ with a/b/c/*.js
    ✓ should match !a/b/ with a/b/c/*.js and {dot: true}
    ✓ should match !a/b/ with a/b/c/*.js and {nonegate: true}
    ✓ should match !a/b/c with a/b/c/*.js
    ✓ should match !a/b/c with a/b/c/*.js and {dot: true}
    ✓ should match !a/b/c with a/b/c/*.js and {nonegate: true}
    ✓ should match !a/b/c/ with a/b/c/*.js
    ✓ should match !a/b/c/ with a/b/c/*.js and {dot: true}
    ✓ should match !a/b/c/ with a/b/c/*.js and {nonegate: true}
    ✓ should match !a/!b with a/b/c/*.js
    ✓ should match !a/!b with a/b/c/*.js and {dot: true}
    ✓ should match !a/!b with a/b/c/*.js and {nonegate: true}
    ✓ should match !a/!b/c with a/b/c/*.js
    ✓ should match !a/!b/c with a/b/c/*.js and {dot: true}
    ✓ should match !a/!b/c with a/b/c/*.js and {nonegate: true}
    ✓ should match !a/!b/c/d with a/b/c/*.js
    ✓ should match !a/!b/c/d with a/b/c/*.js and {dot: true}
    ✓ should match !a/!b/c/d with a/b/c/*.js and {nonegate: true}
    ✓ should match !a/b/.c.md with a/b/c/*.js
    ✓ should match !a/b/.c.md with a/b/c/*.js and {dot: true}
    ✓ should match !a/b/.c.md with a/b/c/*.js and {nonegate: true}
    ✓ should match /a/ with a/b/c/*.js
    ✓ should match /a/ with a/b/c/*.js and {dot: true}
    ✓ should match /a/ with a/b/c/*.js and {nonegate: true}
    ✓ should match /a/b with a/b/c/*.js
    ✓ should match /a/b with a/b/c/*.js and {dot: true}
    ✓ should match /a/b with a/b/c/*.js and {nonegate: true}
    ✓ should match /a/cb with a/b/c/*.js
    ✓ should match /a/cb with a/b/c/*.js and {dot: true}
    ✓ should match /a/cb with a/b/c/*.js and {nonegate: true}
    ✓ should match /a/bb with a/b/c/*.js
    ✓ should match /a/bb with a/b/c/*.js and {dot: true}
    ✓ should match /a/bb with a/b/c/*.js and {nonegate: true}
    ✓ should match /a/b/c with a/b/c/*.js
    ✓ should match /a/b/c with a/b/c/*.js and {dot: true}
    ✓ should match /a/b/c with a/b/c/*.js and {nonegate: true}
    ✓ should match /a/b/c/ with a/b/c/*.js
    ✓ should match /a/b/c/ with a/b/c/*.js and {dot: true}
    ✓ should match /a/b/c/ with a/b/c/*.js and {nonegate: true}
    ✓ should match /a/b/c/d with a/b/c/*.js
    ✓ should match /a/b/c/d with a/b/c/*.js and {dot: true}
    ✓ should match /a/b/c/d with a/b/c/*.js and {nonegate: true}
    ✓ should match /a/b/c/d/ with a/b/c/*.js
    ✓ should match /a/b/c/d/ with a/b/c/*.js and {dot: true}
    ✓ should match /a/b/c/d/ with a/b/c/*.js and {nonegate: true}
    ✓ should match . with a/b/c/*.js
    ✓ should match . with a/b/c/*.js and {dot: true}
    ✓ should match . with a/b/c/*.js and {nonegate: true}
    ✓ should match ./ with a/b/c/*.js
    ✓ should match ./ with a/b/c/*.js and {dot: true}
    ✓ should match ./ with a/b/c/*.js and {nonegate: true}
    ✓ should match .. with a/b/c/*.js
    ✓ should match .. with a/b/c/*.js and {dot: true}
    ✓ should match .. with a/b/c/*.js and {nonegate: true}
    ✓ should match ../c with a/b/c/*.js
    ✓ should match ../c with a/b/c/*.js and {dot: true}
    ✓ should match ../c with a/b/c/*.js and {nonegate: true}
    ✓ should match ../c with a/b/c/*.js
    ✓ should match ../c with a/b/c/*.js and {dot: true}
    ✓ should match ../c with a/b/c/*.js and {nonegate: true}
    ✓ should match ./../c with a/b/c/*.js
    ✓ should match ./../c with a/b/c/*.js and {dot: true}
    ✓ should match ./../c with a/b/c/*.js and {nonegate: true}
    ✓ should match ./a/../c with a/b/c/*.js
    ✓ should match ./a/../c with a/b/c/*.js and {dot: true}
    ✓ should match ./a/../c with a/b/c/*.js and {nonegate: true}
    ✓ should match /.. with a/b/c/*.js
    ✓ should match /.. with a/b/c/*.js and {dot: true}
    ✓ should match /.. with a/b/c/*.js and {nonegate: true}
    ✓ should match /../c with a/b/c/*.js
    ✓ should match /../c with a/b/c/*.js and {dot: true}
    ✓ should match /../c with a/b/c/*.js and {nonegate: true}
    ✓ should match /../.c with a/b/c/*.js
    ✓ should match /../.c with a/b/c/*.js and {dot: true}
    ✓ should match /../.c with a/b/c/*.js and {nonegate: true}
    ✓ should match /../.c/ with a/b/c/*.js
    ✓ should match /../.c/ with a/b/c/*.js and {dot: true}
    ✓ should match /../.c/ with a/b/c/*.js and {nonegate: true}
    ✓ should match /a/../c with a/b/c/*.js
    ✓ should match /a/../c with a/b/c/*.js and {dot: true}
    ✓ should match /a/../c with a/b/c/*.js and {nonegate: true}
    ✓ should match a/../c with a/b/c/*.js
    ✓ should match a/../c with a/b/c/*.js and {dot: true}
    ✓ should match a/../c with a/b/c/*.js and {nonegate: true}
    ✓ should match ../.b/.c with a/b/c/*.js
    ✓ should match ../.b/.c with a/b/c/*.js and {dot: true}
    ✓ should match ../.b/.c with a/b/c/*.js and {nonegate: true}
    ✓ should match ../b/.c with a/b/c/*.js
    ✓ should match ../b/.c with a/b/c/*.js and {dot: true}
    ✓ should match ../b/.c with a/b/c/*.js and {nonegate: true}
    ✓ should match ./.b/.c with a/b/c/*.js
    ✓ should match ./.b/.c with a/b/c/*.js and {dot: true}
    ✓ should match ./.b/.c with a/b/c/*.js and {nonegate: true}
    ✓ should match ./b/.c with a/b/c/*.js
    ✓ should match ./b/.c with a/b/c/*.js and {dot: true}
    ✓ should match ./b/.c with a/b/c/*.js and {nonegate: true}
    ✓ should match .b with a/b/c/*.js
    ✓ should match .b with a/b/c/*.js and {dot: true}
    ✓ should match .b with a/b/c/*.js and {nonegate: true}
    ✓ should match .b.c with a/b/c/*.js
    ✓ should match .b.c with a/b/c/*.js and {dot: true}
    ✓ should match .b.c with a/b/c/*.js and {nonegate: true}
    ✓ should match .b.c/ with a/b/c/*.js
    ✓ should match .b.c/ with a/b/c/*.js and {dot: true}
    ✓ should match .b.c/ with a/b/c/*.js and {nonegate: true}
    ✓ should match .b/ with a/b/c/*.js
    ✓ should match .b/ with a/b/c/*.js and {dot: true}
    ✓ should match .b/ with a/b/c/*.js and {nonegate: true}
    ✓ should match .b/.c with a/b/c/*.js
    ✓ should match .b/.c with a/b/c/*.js and {dot: true}
    ✓ should match .b/.c with a/b/c/*.js and {nonegate: true}
    ✓ should match .b/c with a/b/c/*.js
    ✓ should match .b/c with a/b/c/*.js and {dot: true}
    ✓ should match .b/c with a/b/c/*.js and {nonegate: true}
    ✓ should match b/.c with a/b/c/*.js
    ✓ should match b/.c with a/b/c/*.js and {dot: true}
    ✓ should match b/.c with a/b/c/*.js and {nonegate: true}
    ✓ should match b/.c/ with a/b/c/*.js
    ✓ should match b/.c/ with a/b/c/*.js and {dot: true}
    ✓ should match b/.c/ with a/b/c/*.js and {nonegate: true}
    ✓ should match a/+b/c with a/b/c/*.js
    ✓ should match a/+b/c with a/b/c/*.js and {dot: true}
    ✓ should match a/+b/c with a/b/c/*.js and {nonegate: true}
    ✓ should match +a/+b/c with a/b/c/*.js
    ✓ should match +a/+b/c with a/b/c/*.js and {dot: true}
    ✓ should match +a/+b/c with a/b/c/*.js and {nonegate: true}
    ✓ should match a (foo) with a/b/c/*.js
    ✓ should match a (foo) with a/b/c/*.js and {dot: true}
    ✓ should match a (foo) with a/b/c/*.js and {nonegate: true}
    ✓ should match a (foo)/(bar) with a/b/c/*.js
    ✓ should match a (foo)/(bar) with a/b/c/*.js and {dot: true}
    ✓ should match a (foo)/(bar) with a/b/c/*.js and {nonegate: true}
    ✓ should match a/b/c (1) with a/b/c/*.js
    ✓ should match a/b/c (1) with a/b/c/*.js and {dot: true}
    ✓ should match a/b/c (1) with a/b/c/*.js and {nonegate: true}
    ✓ should match a/b (2)/c (1) with a/b/c/*.js
    ✓ should match a/b (2)/c (1) with a/b/c/*.js and {dot: true}
    ✓ should match a/b (2)/c (1) with a/b/c/*.js and {nonegate: true}
    ✓ should match a/b/c [def] with a/b/c/*.js
    ✓ should match a/b/c [def] with a/b/c/*.js and {dot: true}
    ✓ should match a/b/c [def] with a/b/c/*.js and {nonegate: true}

  .makeRe
    ✓ should match a with !**
    ✓ should match a with !** and {dot: true}
    ✓ should match a with !** and {nonegate: true}
    ✓ should match a.md with !**
    ✓ should match a.md with !** and {dot: true}
    ✓ should match a.md with !** and {nonegate: true}
    ✓ should match a.js with !**
    ✓ should match a.js with !** and {dot: true}
    ✓ should match a.js with !** and {nonegate: true}
    ✓ should match a/ with !**
    ✓ should match a/ with !** and {dot: true}
    ✓ should match a/ with !** and {nonegate: true}
    ✓ should match a/b with !**
    ✓ should match a/b with !** and {dot: true}
    ✓ should match a/b with !** and {nonegate: true}
    ✓ should match a/b/.c.md with !**
    ✓ should match a/b/.c.md with !** and {dot: true}
    ✓ should match a/b/.c.md with !** and {nonegate: true}
    ✓ should match a/b/c with !**
    ✓ should match a/b/c with !** and {dot: true}
    ✓ should match a/b/c with !** and {nonegate: true}
    ✓ should match a/b/c.md with !**
    ✓ should match a/b/c.md with !** and {dot: true}
    ✓ should match a/b/c.md with !** and {nonegate: true}
    ✓ should match a/b/c/ with !**
    ✓ should match a/b/c/ with !** and {dot: true}
    ✓ should match a/b/c/ with !** and {nonegate: true}
    ✓ should match a/b/c/d with !**
    ✓ should match a/b/c/d with !** and {dot: true}
    ✓ should match a/b/c/d with !** and {nonegate: true}
    ✓ should match a/b/c/d/ with !**
    ✓ should match a/b/c/d/ with !** and {dot: true}
    ✓ should match a/b/c/d/ with !** and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with !**
    ✓ should match a/b/c/d/e/f/z.js with !** and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with !** and {nonegate: true}
    ✓ should match a/b/c/z.js with !**
    ✓ should match a/b/c/z.js with !** and {dot: true}
    ✓ should match a/b/c/z.js with !** and {nonegate: true}
    ✓ should match a/bb with !**
    ✓ should match a/bb with !** and {dot: true}
    ✓ should match a/bb with !** and {nonegate: true}
    ✓ should match a/cb with !**
    ✓ should match a/cb with !** and {dot: true}
    ✓ should match a/cb with !** and {nonegate: true}
    ✓ should match abbbz with !**
    ✓ should match abbbz with !** and {dot: true}
    ✓ should match abbbz with !** and {nonegate: true}
    ✓ should match abc with !**
    ✓ should match abc with !** and {dot: true}
    ✓ should match abc with !** and {nonegate: true}
    ✓ should match abd with !**
    ✓ should match abd with !** and {dot: true}
    ✓ should match abd with !** and {nonegate: true}
    ✓ should match z.js with !**
    ✓ should match z.js with !** and {dot: true}
    ✓ should match z.js with !** and {nonegate: true}
    ✓ should match za.js with !**
    ✓ should match za.js with !** and {dot: true}
    ✓ should match za.js with !** and {nonegate: true}
    ✓ should match !a.js with !**
    ✓ should match !a.js with !** and {dot: true}
    ✓ should match !a.js with !** and {nonegate: true}
    ✓ should match !a/b with !**
    ✓ should match !a/b with !** and {dot: true}
    ✓ should match !a/b with !** and {nonegate: true}
    ✓ should match !a/b/ with !**
    ✓ should match !a/b/ with !** and {dot: true}
    ✓ should match !a/b/ with !** and {nonegate: true}
    ✓ should match !a/b/c with !**
    ✓ should match !a/b/c with !** and {dot: true}
    ✓ should match !a/b/c with !** and {nonegate: true}
    ✓ should match !a/b/c/ with !**
    ✓ should match !a/b/c/ with !** and {dot: true}
    ✓ should match !a/b/c/ with !** and {nonegate: true}
    ✓ should match !a/!b with !**
    ✓ should match !a/!b with !** and {dot: true}
    ✓ should match !a/!b with !** and {nonegate: true}
    ✓ should match !a/!b/c with !**
    ✓ should match !a/!b/c with !** and {dot: true}
    ✓ should match !a/!b/c with !** and {nonegate: true}
    ✓ should match !a/!b/c/d with !**
    ✓ should match !a/!b/c/d with !** and {dot: true}
    ✓ should match !a/!b/c/d with !** and {nonegate: true}
    ✓ should match !a/b/.c.md with !**
    ✓ should match !a/b/.c.md with !** and {dot: true}
    ✓ should match !a/b/.c.md with !** and {nonegate: true}
    ✓ should match /a/ with !**
    ✓ should match /a/ with !** and {dot: true}
    ✓ should match /a/ with !** and {nonegate: true}
    ✓ should match /a/b with !**
    ✓ should match /a/b with !** and {dot: true}
    ✓ should match /a/b with !** and {nonegate: true}
    ✓ should match /a/cb with !**
    ✓ should match /a/cb with !** and {dot: true}
    ✓ should match /a/cb with !** and {nonegate: true}
    ✓ should match /a/bb with !**
    ✓ should match /a/bb with !** and {dot: true}
    ✓ should match /a/bb with !** and {nonegate: true}
    ✓ should match /a/b/c with !**
    ✓ should match /a/b/c with !** and {dot: true}
    ✓ should match /a/b/c with !** and {nonegate: true}
    ✓ should match /a/b/c/ with !**
    ✓ should match /a/b/c/ with !** and {dot: true}
    ✓ should match /a/b/c/ with !** and {nonegate: true}
    ✓ should match /a/b/c/d with !**
    ✓ should match /a/b/c/d with !** and {dot: true}
    ✓ should match /a/b/c/d with !** and {nonegate: true}
    ✓ should match /a/b/c/d/ with !**
    ✓ should match /a/b/c/d/ with !** and {dot: true}
    ✓ should match /a/b/c/d/ with !** and {nonegate: true}
    ✓ should match . with !**
    ✓ should match . with !** and {dot: true}
    ✓ should match . with !** and {nonegate: true}
    ✓ should match ./ with !**
    ✓ should match ./ with !** and {dot: true}
    ✓ should match ./ with !** and {nonegate: true}
    ✓ should match .. with !**
    ✓ should match .. with !** and {dot: true}
    ✓ should match .. with !** and {nonegate: true}
    ✓ should match ../c with !**
    ✓ should match ../c with !** and {dot: true}
    ✓ should match ../c with !** and {nonegate: true}
    ✓ should match ../c with !**
    ✓ should match ../c with !** and {dot: true}
    ✓ should match ../c with !** and {nonegate: true}
    ✓ should match ./../c with !**
    ✓ should match ./../c with !** and {dot: true}
    ✓ should match ./../c with !** and {nonegate: true}
    ✓ should match ./a/../c with !**
    ✓ should match ./a/../c with !** and {dot: true}
    ✓ should match ./a/../c with !** and {nonegate: true}
    ✓ should match /.. with !**
    ✓ should match /.. with !** and {dot: true}
    ✓ should match /.. with !** and {nonegate: true}
    ✓ should match /../c with !**
    ✓ should match /../c with !** and {dot: true}
    ✓ should match /../c with !** and {nonegate: true}
    ✓ should match /../.c with !**
    ✓ should match /../.c with !** and {dot: true}
    ✓ should match /../.c with !** and {nonegate: true}
    ✓ should match /../.c/ with !**
    ✓ should match /../.c/ with !** and {dot: true}
    ✓ should match /../.c/ with !** and {nonegate: true}
    ✓ should match /a/../c with !**
    ✓ should match /a/../c with !** and {dot: true}
    ✓ should match /a/../c with !** and {nonegate: true}
    ✓ should match a/../c with !**
    ✓ should match a/../c with !** and {dot: true}
    ✓ should match a/../c with !** and {nonegate: true}
    ✓ should match ../.b/.c with !**
    ✓ should match ../.b/.c with !** and {dot: true}
    ✓ should match ../.b/.c with !** and {nonegate: true}
    ✓ should match ../b/.c with !**
    ✓ should match ../b/.c with !** and {dot: true}
    ✓ should match ../b/.c with !** and {nonegate: true}
    ✓ should match ./.b/.c with !**
    ✓ should match ./.b/.c with !** and {dot: true}
    ✓ should match ./.b/.c with !** and {nonegate: true}
    ✓ should match ./b/.c with !**
    ✓ should match ./b/.c with !** and {dot: true}
    ✓ should match ./b/.c with !** and {nonegate: true}
    ✓ should match .b with !**
    ✓ should match .b with !** and {dot: true}
    ✓ should match .b with !** and {nonegate: true}
    ✓ should match .b.c with !**
    ✓ should match .b.c with !** and {dot: true}
    ✓ should match .b.c with !** and {nonegate: true}
    ✓ should match .b.c/ with !**
    ✓ should match .b.c/ with !** and {dot: true}
    ✓ should match .b.c/ with !** and {nonegate: true}
    ✓ should match .b/ with !**
    ✓ should match .b/ with !** and {dot: true}
    ✓ should match .b/ with !** and {nonegate: true}
    ✓ should match .b/.c with !**
    ✓ should match .b/.c with !** and {dot: true}
    ✓ should match .b/.c with !** and {nonegate: true}
    ✓ should match .b/c with !**
    ✓ should match .b/c with !** and {dot: true}
    ✓ should match .b/c with !** and {nonegate: true}
    ✓ should match b/.c with !**
    ✓ should match b/.c with !** and {dot: true}
    ✓ should match b/.c with !** and {nonegate: true}
    ✓ should match b/.c/ with !**
    ✓ should match b/.c/ with !** and {dot: true}
    ✓ should match b/.c/ with !** and {nonegate: true}
    ✓ should match a/+b/c with !**
    ✓ should match a/+b/c with !** and {dot: true}
    ✓ should match a/+b/c with !** and {nonegate: true}
    ✓ should match +a/+b/c with !**
    ✓ should match +a/+b/c with !** and {dot: true}
    ✓ should match +a/+b/c with !** and {nonegate: true}
    ✓ should match a (foo) with !**
    ✓ should match a (foo) with !** and {dot: true}
    ✓ should match a (foo) with !** and {nonegate: true}
    ✓ should match a (foo)/(bar) with !**
    ✓ should match a (foo)/(bar) with !** and {dot: true}
    ✓ should match a (foo)/(bar) with !** and {nonegate: true}
    ✓ should match a/b/c (1) with !**
    ✓ should match a/b/c (1) with !** and {dot: true}
    ✓ should match a/b/c (1) with !** and {nonegate: true}
    ✓ should match a/b (2)/c (1) with !**
    ✓ should match a/b (2)/c (1) with !** and {dot: true}
    ✓ should match a/b (2)/c (1) with !** and {nonegate: true}
    ✓ should match a/b/c [def] with !**
    ✓ should match a/b/c [def] with !** and {dot: true}
    ✓ should match a/b/c [def] with !** and {nonegate: true}
    ✓ should match a with !**/*
    ✓ should match a with !**/* and {dot: true}
    ✓ should match a with !**/* and {nonegate: true}
    ✓ should match a.md with !**/*
    ✓ should match a.md with !**/* and {dot: true}
    ✓ should match a.md with !**/* and {nonegate: true}
    ✓ should match a.js with !**/*
    ✓ should match a.js with !**/* and {dot: true}
    ✓ should match a.js with !**/* and {nonegate: true}
    ✓ should match a/ with !**/*
    ✓ should match a/ with !**/* and {dot: true}
    ✓ should match a/ with !**/* and {nonegate: true}
    ✓ should match a/b with !**/*
    ✓ should match a/b with !**/* and {dot: true}
    ✓ should match a/b with !**/* and {nonegate: true}
    ✓ should match a/b/.c.md with !**/*
    ✓ should match a/b/.c.md with !**/* and {dot: true}
    ✓ should match a/b/.c.md with !**/* and {nonegate: true}
    ✓ should match a/b/c with !**/*
    ✓ should match a/b/c with !**/* and {dot: true}
    ✓ should match a/b/c with !**/* and {nonegate: true}
    ✓ should match a/b/c.md with !**/*
    ✓ should match a/b/c.md with !**/* and {dot: true}
    ✓ should match a/b/c.md with !**/* and {nonegate: true}
    ✓ should match a/b/c/ with !**/*
    ✓ should match a/b/c/ with !**/* and {dot: true}
    ✓ should match a/b/c/ with !**/* and {nonegate: true}
    ✓ should match a/b/c/d with !**/*
    ✓ should match a/b/c/d with !**/* and {dot: true}
    ✓ should match a/b/c/d with !**/* and {nonegate: true}
    ✓ should match a/b/c/d/ with !**/*
    ✓ should match a/b/c/d/ with !**/* and {dot: true}
    ✓ should match a/b/c/d/ with !**/* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with !**/*
    ✓ should match a/b/c/d/e/f/z.js with !**/* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with !**/* and {nonegate: true}
    ✓ should match a/b/c/z.js with !**/*
    ✓ should match a/b/c/z.js with !**/* and {dot: true}
    ✓ should match a/b/c/z.js with !**/* and {nonegate: true}
    ✓ should match a/bb with !**/*
    ✓ should match a/bb with !**/* and {dot: true}
    ✓ should match a/bb with !**/* and {nonegate: true}
    ✓ should match a/cb with !**/*
    ✓ should match a/cb with !**/* and {dot: true}
    ✓ should match a/cb with !**/* and {nonegate: true}
    ✓ should match abbbz with !**/*
    ✓ should match abbbz with !**/* and {dot: true}
    ✓ should match abbbz with !**/* and {nonegate: true}
    ✓ should match abc with !**/*
    ✓ should match abc with !**/* and {dot: true}
    ✓ should match abc with !**/* and {nonegate: true}
    ✓ should match abd with !**/*
    ✓ should match abd with !**/* and {dot: true}
    ✓ should match abd with !**/* and {nonegate: true}
    ✓ should match z.js with !**/*
    ✓ should match z.js with !**/* and {dot: true}
    ✓ should match z.js with !**/* and {nonegate: true}
    ✓ should match za.js with !**/*
    ✓ should match za.js with !**/* and {dot: true}
    ✓ should match za.js with !**/* and {nonegate: true}
    ✓ should match !a.js with !**/*
    ✓ should match !a.js with !**/* and {dot: true}
    ✓ should match !a.js with !**/* and {nonegate: true}
    ✓ should match !a/b with !**/*
    ✓ should match !a/b with !**/* and {dot: true}
    ✓ should match !a/b with !**/* and {nonegate: true}
    ✓ should match !a/b/ with !**/*
    ✓ should match !a/b/ with !**/* and {dot: true}
    ✓ should match !a/b/ with !**/* and {nonegate: true}
    ✓ should match !a/b/c with !**/*
    ✓ should match !a/b/c with !**/* and {dot: true}
    ✓ should match !a/b/c with !**/* and {nonegate: true}
    ✓ should match !a/b/c/ with !**/*
    ✓ should match !a/b/c/ with !**/* and {dot: true}
    ✓ should match !a/b/c/ with !**/* and {nonegate: true}
    ✓ should match !a/!b with !**/*
    ✓ should match !a/!b with !**/* and {dot: true}
    ✓ should match !a/!b with !**/* and {nonegate: true}
    ✓ should match !a/!b/c with !**/*
    ✓ should match !a/!b/c with !**/* and {dot: true}
    ✓ should match !a/!b/c with !**/* and {nonegate: true}
    ✓ should match !a/!b/c/d with !**/*
    ✓ should match !a/!b/c/d with !**/* and {dot: true}
    ✓ should match !a/!b/c/d with !**/* and {nonegate: true}
    ✓ should match !a/b/.c.md with !**/*
    ✓ should match !a/b/.c.md with !**/* and {dot: true}
    ✓ should match !a/b/.c.md with !**/* and {nonegate: true}
    ✓ should match /a/ with !**/*
    ✓ should match /a/ with !**/* and {dot: true}
    ✓ should match /a/ with !**/* and {nonegate: true}
    ✓ should match /a/b with !**/*
    ✓ should match /a/b with !**/* and {dot: true}
    ✓ should match /a/b with !**/* and {nonegate: true}
    ✓ should match /a/cb with !**/*
    ✓ should match /a/cb with !**/* and {dot: true}
    ✓ should match /a/cb with !**/* and {nonegate: true}
    ✓ should match /a/bb with !**/*
    ✓ should match /a/bb with !**/* and {dot: true}
    ✓ should match /a/bb with !**/* and {nonegate: true}
    ✓ should match /a/b/c with !**/*
    ✓ should match /a/b/c with !**/* and {dot: true}
    ✓ should match /a/b/c with !**/* and {nonegate: true}
    ✓ should match /a/b/c/ with !**/*
    ✓ should match /a/b/c/ with !**/* and {dot: true}
    ✓ should match /a/b/c/ with !**/* and {nonegate: true}
    ✓ should match /a/b/c/d with !**/*
    ✓ should match /a/b/c/d with !**/* and {dot: true}
    ✓ should match /a/b/c/d with !**/* and {nonegate: true}
    ✓ should match /a/b/c/d/ with !**/*
    ✓ should match /a/b/c/d/ with !**/* and {dot: true}
    ✓ should match /a/b/c/d/ with !**/* and {nonegate: true}
    ✓ should match . with !**/*
    ✓ should match . with !**/* and {dot: true}
    ✓ should match . with !**/* and {nonegate: true}
    ✓ should match ./ with !**/*
    ✓ should match ./ with !**/* and {dot: true}
    ✓ should match ./ with !**/* and {nonegate: true}
    ✓ should match .. with !**/*
    ✓ should match .. with !**/* and {dot: true}
    ✓ should match .. with !**/* and {nonegate: true}
    ✓ should match ../c with !**/*
    ✓ should match ../c with !**/* and {dot: true}
    ✓ should match ../c with !**/* and {nonegate: true}
    ✓ should match ../c with !**/*
    ✓ should match ../c with !**/* and {dot: true}
    ✓ should match ../c with !**/* and {nonegate: true}
    ✓ should match ./../c with !**/*
    ✓ should match ./../c with !**/* and {dot: true}
    ✓ should match ./../c with !**/* and {nonegate: true}
    ✓ should match ./a/../c with !**/*
    ✓ should match ./a/../c with !**/* and {dot: true}
    ✓ should match ./a/../c with !**/* and {nonegate: true}
    ✓ should match /.. with !**/*
    ✓ should match /.. with !**/* and {dot: true}
    ✓ should match /.. with !**/* and {nonegate: true}
    ✓ should match /../c with !**/*
    ✓ should match /../c with !**/* and {dot: true}
    ✓ should match /../c with !**/* and {nonegate: true}
    ✓ should match /../.c with !**/*
    ✓ should match /../.c with !**/* and {dot: true}
    ✓ should match /../.c with !**/* and {nonegate: true}
    ✓ should match /../.c/ with !**/*
    ✓ should match /../.c/ with !**/* and {dot: true}
    ✓ should match /../.c/ with !**/* and {nonegate: true}
    ✓ should match /a/../c with !**/*
    ✓ should match /a/../c with !**/* and {dot: true}
    ✓ should match /a/../c with !**/* and {nonegate: true}
    ✓ should match a/../c with !**/*
    ✓ should match a/../c with !**/* and {dot: true}
    ✓ should match a/../c with !**/* and {nonegate: true}
    ✓ should match ../.b/.c with !**/*
    ✓ should match ../.b/.c with !**/* and {dot: true}
    ✓ should match ../.b/.c with !**/* and {nonegate: true}
    ✓ should match ../b/.c with !**/*
    ✓ should match ../b/.c with !**/* and {dot: true}
    ✓ should match ../b/.c with !**/* and {nonegate: true}
    ✓ should match ./.b/.c with !**/*
    ✓ should match ./.b/.c with !**/* and {dot: true}
    ✓ should match ./.b/.c with !**/* and {nonegate: true}
    ✓ should match ./b/.c with !**/*
    ✓ should match ./b/.c with !**/* and {dot: true}
    ✓ should match ./b/.c with !**/* and {nonegate: true}
    ✓ should match .b with !**/*
    ✓ should match .b with !**/* and {dot: true}
    ✓ should match .b with !**/* and {nonegate: true}
    ✓ should match .b.c with !**/*
    ✓ should match .b.c with !**/* and {dot: true}
    ✓ should match .b.c with !**/* and {nonegate: true}
    ✓ should match .b.c/ with !**/*
    ✓ should match .b.c/ with !**/* and {dot: true}
    ✓ should match .b.c/ with !**/* and {nonegate: true}
    ✓ should match .b/ with !**/*
    ✓ should match .b/ with !**/* and {dot: true}
    ✓ should match .b/ with !**/* and {nonegate: true}
    ✓ should match .b/.c with !**/*
    ✓ should match .b/.c with !**/* and {dot: true}
    ✓ should match .b/.c with !**/* and {nonegate: true}
    ✓ should match .b/c with !**/*
    ✓ should match .b/c with !**/* and {dot: true}
    ✓ should match .b/c with !**/* and {nonegate: true}
    ✓ should match b/.c with !**/*
    ✓ should match b/.c with !**/* and {dot: true}
    ✓ should match b/.c with !**/* and {nonegate: true}
    ✓ should match b/.c/ with !**/*
    ✓ should match b/.c/ with !**/* and {dot: true}
    ✓ should match b/.c/ with !**/* and {nonegate: true}
    ✓ should match a/+b/c with !**/*
    ✓ should match a/+b/c with !**/* and {dot: true}
    ✓ should match a/+b/c with !**/* and {nonegate: true}
    ✓ should match +a/+b/c with !**/*
    ✓ should match +a/+b/c with !**/* and {dot: true}
    ✓ should match +a/+b/c with !**/* and {nonegate: true}
    ✓ should match a (foo) with !**/*
    ✓ should match a (foo) with !**/* and {dot: true}
    ✓ should match a (foo) with !**/* and {nonegate: true}
    ✓ should match a (foo)/(bar) with !**/*
    ✓ should match a (foo)/(bar) with !**/* and {dot: true}
    ✓ should match a (foo)/(bar) with !**/* and {nonegate: true}
    ✓ should match a/b/c (1) with !**/*
    ✓ should match a/b/c (1) with !**/* and {dot: true}
    ✓ should match a/b/c (1) with !**/* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with !**/*
    ✓ should match a/b (2)/c (1) with !**/* and {dot: true}
    ✓ should match a/b (2)/c (1) with !**/* and {nonegate: true}
    ✓ should match a/b/c [def] with !**/*
    ✓ should match a/b/c [def] with !**/* and {dot: true}
    ✓ should match a/b/c [def] with !**/* and {nonegate: true}
    ✓ should match a with !**/*.md
    ✓ should match a with !**/*.md and {dot: true}
    ✓ should match a with !**/*.md and {nonegate: true}
    ✓ should match a.md with !**/*.md
    ✓ should match a.md with !**/*.md and {dot: true}
    ✓ should match a.md with !**/*.md and {nonegate: true}
    ✓ should match a.js with !**/*.md
    ✓ should match a.js with !**/*.md and {dot: true}
    ✓ should match a.js with !**/*.md and {nonegate: true}
    ✓ should match a/ with !**/*.md
    ✓ should match a/ with !**/*.md and {dot: true}
    ✓ should match a/ with !**/*.md and {nonegate: true}
    ✓ should match a/b with !**/*.md
    ✓ should match a/b with !**/*.md and {dot: true}
    ✓ should match a/b with !**/*.md and {nonegate: true}
    ✓ should match a/b/.c.md with !**/*.md
    ✓ should match a/b/.c.md with !**/*.md and {dot: true}
    ✓ should match a/b/.c.md with !**/*.md and {nonegate: true}
    ✓ should match a/b/c with !**/*.md
    ✓ should match a/b/c with !**/*.md and {dot: true}
    ✓ should match a/b/c with !**/*.md and {nonegate: true}
    ✓ should match a/b/c.md with !**/*.md
    ✓ should match a/b/c.md with !**/*.md and {dot: true}
    ✓ should match a/b/c.md with !**/*.md and {nonegate: true}
    ✓ should match a/b/c/ with !**/*.md
    ✓ should match a/b/c/ with !**/*.md and {dot: true}
    ✓ should match a/b/c/ with !**/*.md and {nonegate: true}
    ✓ should match a/b/c/d with !**/*.md
    ✓ should match a/b/c/d with !**/*.md and {dot: true}
    ✓ should match a/b/c/d with !**/*.md and {nonegate: true}
    ✓ should match a/b/c/d/ with !**/*.md
    ✓ should match a/b/c/d/ with !**/*.md and {dot: true}
    ✓ should match a/b/c/d/ with !**/*.md and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with !**/*.md
    ✓ should match a/b/c/d/e/f/z.js with !**/*.md and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with !**/*.md and {nonegate: true}
    ✓ should match a/b/c/z.js with !**/*.md
    ✓ should match a/b/c/z.js with !**/*.md and {dot: true}
    ✓ should match a/b/c/z.js with !**/*.md and {nonegate: true}
    ✓ should match a/bb with !**/*.md
    ✓ should match a/bb with !**/*.md and {dot: true}
    ✓ should match a/bb with !**/*.md and {nonegate: true}
    ✓ should match a/cb with !**/*.md
    ✓ should match a/cb with !**/*.md and {dot: true}
    ✓ should match a/cb with !**/*.md and {nonegate: true}
    ✓ should match abbbz with !**/*.md
    ✓ should match abbbz with !**/*.md and {dot: true}
    ✓ should match abbbz with !**/*.md and {nonegate: true}
    ✓ should match abc with !**/*.md
    ✓ should match abc with !**/*.md and {dot: true}
    ✓ should match abc with !**/*.md and {nonegate: true}
    ✓ should match abd with !**/*.md
    ✓ should match abd with !**/*.md and {dot: true}
    ✓ should match abd with !**/*.md and {nonegate: true}
    ✓ should match z.js with !**/*.md
    ✓ should match z.js with !**/*.md and {dot: true}
    ✓ should match z.js with !**/*.md and {nonegate: true}
    ✓ should match za.js with !**/*.md
    ✓ should match za.js with !**/*.md and {dot: true}
    ✓ should match za.js with !**/*.md and {nonegate: true}
    ✓ should match !a.js with !**/*.md
    ✓ should match !a.js with !**/*.md and {dot: true}
    ✓ should match !a.js with !**/*.md and {nonegate: true}
    ✓ should match !a/b with !**/*.md
    ✓ should match !a/b with !**/*.md and {dot: true}
    ✓ should match !a/b with !**/*.md and {nonegate: true}
    ✓ should match !a/b/ with !**/*.md
    ✓ should match !a/b/ with !**/*.md and {dot: true}
    ✓ should match !a/b/ with !**/*.md and {nonegate: true}
    ✓ should match !a/b/c with !**/*.md
    ✓ should match !a/b/c with !**/*.md and {dot: true}
    ✓ should match !a/b/c with !**/*.md and {nonegate: true}
    ✓ should match !a/b/c/ with !**/*.md
    ✓ should match !a/b/c/ with !**/*.md and {dot: true}
    ✓ should match !a/b/c/ with !**/*.md and {nonegate: true}
    ✓ should match !a/!b with !**/*.md
    ✓ should match !a/!b with !**/*.md and {dot: true}
    ✓ should match !a/!b with !**/*.md and {nonegate: true}
    ✓ should match !a/!b/c with !**/*.md
    ✓ should match !a/!b/c with !**/*.md and {dot: true}
    ✓ should match !a/!b/c with !**/*.md and {nonegate: true}
    ✓ should match !a/!b/c/d with !**/*.md
    ✓ should match !a/!b/c/d with !**/*.md and {dot: true}
    ✓ should match !a/!b/c/d with !**/*.md and {nonegate: true}
    ✓ should match !a/b/.c.md with !**/*.md
    ✓ should match !a/b/.c.md with !**/*.md and {dot: true}
    ✓ should match !a/b/.c.md with !**/*.md and {nonegate: true}
    ✓ should match /a/ with !**/*.md
    ✓ should match /a/ with !**/*.md and {dot: true}
    ✓ should match /a/ with !**/*.md and {nonegate: true}
    ✓ should match /a/b with !**/*.md
    ✓ should match /a/b with !**/*.md and {dot: true}
    ✓ should match /a/b with !**/*.md and {nonegate: true}
    ✓ should match /a/cb with !**/*.md
    ✓ should match /a/cb with !**/*.md and {dot: true}
    ✓ should match /a/cb with !**/*.md and {nonegate: true}
    ✓ should match /a/bb with !**/*.md
    ✓ should match /a/bb with !**/*.md and {dot: true}
    ✓ should match /a/bb with !**/*.md and {nonegate: true}
    ✓ should match /a/b/c with !**/*.md
    ✓ should match /a/b/c with !**/*.md and {dot: true}
    ✓ should match /a/b/c with !**/*.md and {nonegate: true}
    ✓ should match /a/b/c/ with !**/*.md
    ✓ should match /a/b/c/ with !**/*.md and {dot: true}
    ✓ should match /a/b/c/ with !**/*.md and {nonegate: true}
    ✓ should match /a/b/c/d with !**/*.md
    ✓ should match /a/b/c/d with !**/*.md and {dot: true}
    ✓ should match /a/b/c/d with !**/*.md and {nonegate: true}
    ✓ should match /a/b/c/d/ with !**/*.md
    ✓ should match /a/b/c/d/ with !**/*.md and {dot: true}
    ✓ should match /a/b/c/d/ with !**/*.md and {nonegate: true}
    ✓ should match . with !**/*.md
    ✓ should match . with !**/*.md and {dot: true}
    ✓ should match . with !**/*.md and {nonegate: true}
    ✓ should match ./ with !**/*.md
    ✓ should match ./ with !**/*.md and {dot: true}
    ✓ should match ./ with !**/*.md and {nonegate: true}
    ✓ should match .. with !**/*.md
    ✓ should match .. with !**/*.md and {dot: true}
    ✓ should match .. with !**/*.md and {nonegate: true}
    ✓ should match ../c with !**/*.md
    ✓ should match ../c with !**/*.md and {dot: true}
    ✓ should match ../c with !**/*.md and {nonegate: true}
    ✓ should match ../c with !**/*.md
    ✓ should match ../c with !**/*.md and {dot: true}
    ✓ should match ../c with !**/*.md and {nonegate: true}
    ✓ should match ./../c with !**/*.md
    ✓ should match ./../c with !**/*.md and {dot: true}
    ✓ should match ./../c with !**/*.md and {nonegate: true}
    ✓ should match ./a/../c with !**/*.md
    ✓ should match ./a/../c with !**/*.md and {dot: true}
    ✓ should match ./a/../c with !**/*.md and {nonegate: true}
    ✓ should match /.. with !**/*.md
    ✓ should match /.. with !**/*.md and {dot: true}
    ✓ should match /.. with !**/*.md and {nonegate: true}
    ✓ should match /../c with !**/*.md
    ✓ should match /../c with !**/*.md and {dot: true}
    ✓ should match /../c with !**/*.md and {nonegate: true}
    ✓ should match /../.c with !**/*.md
    ✓ should match /../.c with !**/*.md and {dot: true}
    ✓ should match /../.c with !**/*.md and {nonegate: true}
    ✓ should match /../.c/ with !**/*.md
    ✓ should match /../.c/ with !**/*.md and {dot: true}
    ✓ should match /../.c/ with !**/*.md and {nonegate: true}
    ✓ should match /a/../c with !**/*.md
    ✓ should match /a/../c with !**/*.md and {dot: true}
    ✓ should match /a/../c with !**/*.md and {nonegate: true}
    ✓ should match a/../c with !**/*.md
    ✓ should match a/../c with !**/*.md and {dot: true}
    ✓ should match a/../c with !**/*.md and {nonegate: true}
    ✓ should match ../.b/.c with !**/*.md
    ✓ should match ../.b/.c with !**/*.md and {dot: true}
    ✓ should match ../.b/.c with !**/*.md and {nonegate: true}
    ✓ should match ../b/.c with !**/*.md
    ✓ should match ../b/.c with !**/*.md and {dot: true}
    ✓ should match ../b/.c with !**/*.md and {nonegate: true}
    ✓ should match ./.b/.c with !**/*.md
    ✓ should match ./.b/.c with !**/*.md and {dot: true}
    ✓ should match ./.b/.c with !**/*.md and {nonegate: true}
    ✓ should match ./b/.c with !**/*.md
    ✓ should match ./b/.c with !**/*.md and {dot: true}
    ✓ should match ./b/.c with !**/*.md and {nonegate: true}
    ✓ should match .b with !**/*.md
    ✓ should match .b with !**/*.md and {dot: true}
    ✓ should match .b with !**/*.md and {nonegate: true}
    ✓ should match .b.c with !**/*.md
    ✓ should match .b.c with !**/*.md and {dot: true}
    ✓ should match .b.c with !**/*.md and {nonegate: true}
    ✓ should match .b.c/ with !**/*.md
    ✓ should match .b.c/ with !**/*.md and {dot: true}
    ✓ should match .b.c/ with !**/*.md and {nonegate: true}
    ✓ should match .b/ with !**/*.md
    ✓ should match .b/ with !**/*.md and {dot: true}
    ✓ should match .b/ with !**/*.md and {nonegate: true}
    ✓ should match .b/.c with !**/*.md
    ✓ should match .b/.c with !**/*.md and {dot: true}
    ✓ should match .b/.c with !**/*.md and {nonegate: true}
    ✓ should match .b/c with !**/*.md
    ✓ should match .b/c with !**/*.md and {dot: true}
    ✓ should match .b/c with !**/*.md and {nonegate: true}
    ✓ should match b/.c with !**/*.md
    ✓ should match b/.c with !**/*.md and {dot: true}
    ✓ should match b/.c with !**/*.md and {nonegate: true}
    ✓ should match b/.c/ with !**/*.md
    ✓ should match b/.c/ with !**/*.md and {dot: true}
    ✓ should match b/.c/ with !**/*.md and {nonegate: true}
    ✓ should match a/+b/c with !**/*.md
    ✓ should match a/+b/c with !**/*.md and {dot: true}
    ✓ should match a/+b/c with !**/*.md and {nonegate: true}
    ✓ should match +a/+b/c with !**/*.md
    ✓ should match +a/+b/c with !**/*.md and {dot: true}
    ✓ should match +a/+b/c with !**/*.md and {nonegate: true}
    ✓ should match a (foo) with !**/*.md
    ✓ should match a (foo) with !**/*.md and {dot: true}
    ✓ should match a (foo) with !**/*.md and {nonegate: true}
    ✓ should match a (foo)/(bar) with !**/*.md
    ✓ should match a (foo)/(bar) with !**/*.md and {dot: true}
    ✓ should match a (foo)/(bar) with !**/*.md and {nonegate: true}
    ✓ should match a/b/c (1) with !**/*.md
    ✓ should match a/b/c (1) with !**/*.md and {dot: true}
    ✓ should match a/b/c (1) with !**/*.md and {nonegate: true}
    ✓ should match a/b (2)/c (1) with !**/*.md
    ✓ should match a/b (2)/c (1) with !**/*.md and {dot: true}
    ✓ should match a/b (2)/c (1) with !**/*.md and {nonegate: true}
    ✓ should match a/b/c [def] with !**/*.md
    ✓ should match a/b/c [def] with !**/*.md and {dot: true}
    ✓ should match a/b/c [def] with !**/*.md and {nonegate: true}
    ✓ should match a with !*.*
    ✓ should match a with !*.* and {dot: true}
    ✓ should match a with !*.* and {nonegate: true}
    ✓ should match a.md with !*.*
    ✓ should match a.md with !*.* and {dot: true}
    ✓ should match a.md with !*.* and {nonegate: true}
    ✓ should match a.js with !*.*
    ✓ should match a.js with !*.* and {dot: true}
    ✓ should match a.js with !*.* and {nonegate: true}
    ✓ should match a/ with !*.*
    ✓ should match a/ with !*.* and {dot: true}
    ✓ should match a/ with !*.* and {nonegate: true}
    ✓ should match a/b with !*.*
    ✓ should match a/b with !*.* and {dot: true}
    ✓ should match a/b with !*.* and {nonegate: true}
    ✓ should match a/b/.c.md with !*.*
    ✓ should match a/b/.c.md with !*.* and {dot: true}
    ✓ should match a/b/.c.md with !*.* and {nonegate: true}
    ✓ should match a/b/c with !*.*
    ✓ should match a/b/c with !*.* and {dot: true}
    ✓ should match a/b/c with !*.* and {nonegate: true}
    ✓ should match a/b/c.md with !*.*
    ✓ should match a/b/c.md with !*.* and {dot: true}
    ✓ should match a/b/c.md with !*.* and {nonegate: true}
    ✓ should match a/b/c/ with !*.*
    ✓ should match a/b/c/ with !*.* and {dot: true}
    ✓ should match a/b/c/ with !*.* and {nonegate: true}
    ✓ should match a/b/c/d with !*.*
    ✓ should match a/b/c/d with !*.* and {dot: true}
    ✓ should match a/b/c/d with !*.* and {nonegate: true}
    ✓ should match a/b/c/d/ with !*.*
    ✓ should match a/b/c/d/ with !*.* and {dot: true}
    ✓ should match a/b/c/d/ with !*.* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with !*.*
    ✓ should match a/b/c/d/e/f/z.js with !*.* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with !*.* and {nonegate: true}
    ✓ should match a/b/c/z.js with !*.*
    ✓ should match a/b/c/z.js with !*.* and {dot: true}
    ✓ should match a/b/c/z.js with !*.* and {nonegate: true}
    ✓ should match a/bb with !*.*
    ✓ should match a/bb with !*.* and {dot: true}
    ✓ should match a/bb with !*.* and {nonegate: true}
    ✓ should match a/cb with !*.*
    ✓ should match a/cb with !*.* and {dot: true}
    ✓ should match a/cb with !*.* and {nonegate: true}
    ✓ should match abbbz with !*.*
    ✓ should match abbbz with !*.* and {dot: true}
    ✓ should match abbbz with !*.* and {nonegate: true}
    ✓ should match abc with !*.*
    ✓ should match abc with !*.* and {dot: true}
    ✓ should match abc with !*.* and {nonegate: true}
    ✓ should match abd with !*.*
    ✓ should match abd with !*.* and {dot: true}
    ✓ should match abd with !*.* and {nonegate: true}
    ✓ should match z.js with !*.*
    ✓ should match z.js with !*.* and {dot: true}
    ✓ should match z.js with !*.* and {nonegate: true}
    ✓ should match za.js with !*.*
    ✓ should match za.js with !*.* and {dot: true}
    ✓ should match za.js with !*.* and {nonegate: true}
    ✓ should match !a.js with !*.*
    ✓ should match !a.js with !*.* and {dot: true}
    ✓ should match !a.js with !*.* and {nonegate: true}
    ✓ should match !a/b with !*.*
    ✓ should match !a/b with !*.* and {dot: true}
    ✓ should match !a/b with !*.* and {nonegate: true}
    ✓ should match !a/b/ with !*.*
    ✓ should match !a/b/ with !*.* and {dot: true}
    ✓ should match !a/b/ with !*.* and {nonegate: true}
    ✓ should match !a/b/c with !*.*
    ✓ should match !a/b/c with !*.* and {dot: true}
    ✓ should match !a/b/c with !*.* and {nonegate: true}
    ✓ should match !a/b/c/ with !*.*
    ✓ should match !a/b/c/ with !*.* and {dot: true}
    ✓ should match !a/b/c/ with !*.* and {nonegate: true}
    ✓ should match !a/!b with !*.*
    ✓ should match !a/!b with !*.* and {dot: true}
    ✓ should match !a/!b with !*.* and {nonegate: true}
    ✓ should match !a/!b/c with !*.*
    ✓ should match !a/!b/c with !*.* and {dot: true}
    ✓ should match !a/!b/c with !*.* and {nonegate: true}
    ✓ should match !a/!b/c/d with !*.*
    ✓ should match !a/!b/c/d with !*.* and {dot: true}
    ✓ should match !a/!b/c/d with !*.* and {nonegate: true}
    ✓ should match !a/b/.c.md with !*.*
    ✓ should match !a/b/.c.md with !*.* and {dot: true}
    ✓ should match !a/b/.c.md with !*.* and {nonegate: true}
    ✓ should match /a/ with !*.*
    ✓ should match /a/ with !*.* and {dot: true}
    ✓ should match /a/ with !*.* and {nonegate: true}
    ✓ should match /a/b with !*.*
    ✓ should match /a/b with !*.* and {dot: true}
    ✓ should match /a/b with !*.* and {nonegate: true}
    ✓ should match /a/cb with !*.*
    ✓ should match /a/cb with !*.* and {dot: true}
    ✓ should match /a/cb with !*.* and {nonegate: true}
    ✓ should match /a/bb with !*.*
    ✓ should match /a/bb with !*.* and {dot: true}
    ✓ should match /a/bb with !*.* and {nonegate: true}
    ✓ should match /a/b/c with !*.*
    ✓ should match /a/b/c with !*.* and {dot: true}
    ✓ should match /a/b/c with !*.* and {nonegate: true}
    ✓ should match /a/b/c/ with !*.*
    ✓ should match /a/b/c/ with !*.* and {dot: true}
    ✓ should match /a/b/c/ with !*.* and {nonegate: true}
    ✓ should match /a/b/c/d with !*.*
    ✓ should match /a/b/c/d with !*.* and {dot: true}
    ✓ should match /a/b/c/d with !*.* and {nonegate: true}
    ✓ should match /a/b/c/d/ with !*.*
    ✓ should match /a/b/c/d/ with !*.* and {dot: true}
    ✓ should match /a/b/c/d/ with !*.* and {nonegate: true}
    ✓ should match . with !*.*
    ✓ should match . with !*.* and {dot: true}
    ✓ should match . with !*.* and {nonegate: true}
    ✓ should match ./ with !*.*
    ✓ should match ./ with !*.* and {dot: true}
    ✓ should match ./ with !*.* and {nonegate: true}
    ✓ should match .. with !*.*
    ✓ should match .. with !*.* and {dot: true}
    ✓ should match .. with !*.* and {nonegate: true}
    ✓ should match ../c with !*.*
    ✓ should match ../c with !*.* and {dot: true}
    ✓ should match ../c with !*.* and {nonegate: true}
    ✓ should match ../c with !*.*
    ✓ should match ../c with !*.* and {dot: true}
    ✓ should match ../c with !*.* and {nonegate: true}
    ✓ should match ./../c with !*.*
    ✓ should match ./../c with !*.* and {dot: true}
    ✓ should match ./../c with !*.* and {nonegate: true}
    ✓ should match ./a/../c with !*.*
    ✓ should match ./a/../c with !*.* and {dot: true}
    ✓ should match ./a/../c with !*.* and {nonegate: true}
    ✓ should match /.. with !*.*
    ✓ should match /.. with !*.* and {dot: true}
    ✓ should match /.. with !*.* and {nonegate: true}
    ✓ should match /../c with !*.*
    ✓ should match /../c with !*.* and {dot: true}
    ✓ should match /../c with !*.* and {nonegate: true}
    ✓ should match /../.c with !*.*
    ✓ should match /../.c with !*.* and {dot: true}
    ✓ should match /../.c with !*.* and {nonegate: true}
    ✓ should match /../.c/ with !*.*
    ✓ should match /../.c/ with !*.* and {dot: true}
    ✓ should match /../.c/ with !*.* and {nonegate: true}
    ✓ should match /a/../c with !*.*
    ✓ should match /a/../c with !*.* and {dot: true}
    ✓ should match /a/../c with !*.* and {nonegate: true}
    ✓ should match a/../c with !*.*
    ✓ should match a/../c with !*.* and {dot: true}
    ✓ should match a/../c with !*.* and {nonegate: true}
    ✓ should match ../.b/.c with !*.*
    ✓ should match ../.b/.c with !*.* and {dot: true}
    ✓ should match ../.b/.c with !*.* and {nonegate: true}
    ✓ should match ../b/.c with !*.*
    ✓ should match ../b/.c with !*.* and {dot: true}
    ✓ should match ../b/.c with !*.* and {nonegate: true}
    ✓ should match ./.b/.c with !*.*
    ✓ should match ./.b/.c with !*.* and {dot: true}
    ✓ should match ./.b/.c with !*.* and {nonegate: true}
    ✓ should match ./b/.c with !*.*
    ✓ should match ./b/.c with !*.* and {dot: true}
    ✓ should match ./b/.c with !*.* and {nonegate: true}
    ✓ should match .b with !*.*
    ✓ should match .b with !*.* and {dot: true}
    ✓ should match .b with !*.* and {nonegate: true}
    ✓ should match .b.c with !*.*
    ✓ should match .b.c with !*.* and {dot: true}
    ✓ should match .b.c with !*.* and {nonegate: true}
    ✓ should match .b.c/ with !*.*
    ✓ should match .b.c/ with !*.* and {dot: true}
    ✓ should match .b.c/ with !*.* and {nonegate: true}
    ✓ should match .b/ with !*.*
    ✓ should match .b/ with !*.* and {dot: true}
    ✓ should match .b/ with !*.* and {nonegate: true}
    ✓ should match .b/.c with !*.*
    ✓ should match .b/.c with !*.* and {dot: true}
    ✓ should match .b/.c with !*.* and {nonegate: true}
    ✓ should match .b/c with !*.*
    ✓ should match .b/c with !*.* and {dot: true}
    ✓ should match .b/c with !*.* and {nonegate: true}
    ✓ should match b/.c with !*.*
    ✓ should match b/.c with !*.* and {dot: true}
    ✓ should match b/.c with !*.* and {nonegate: true}
    ✓ should match b/.c/ with !*.*
    ✓ should match b/.c/ with !*.* and {dot: true}
    ✓ should match b/.c/ with !*.* and {nonegate: true}
    ✓ should match a/+b/c with !*.*
    ✓ should match a/+b/c with !*.* and {dot: true}
    ✓ should match a/+b/c with !*.* and {nonegate: true}
    ✓ should match +a/+b/c with !*.*
    ✓ should match +a/+b/c with !*.* and {dot: true}
    ✓ should match +a/+b/c with !*.* and {nonegate: true}
    ✓ should match a (foo) with !*.*
    ✓ should match a (foo) with !*.* and {dot: true}
    ✓ should match a (foo) with !*.* and {nonegate: true}
    ✓ should match a (foo)/(bar) with !*.*
    ✓ should match a (foo)/(bar) with !*.* and {dot: true}
    ✓ should match a (foo)/(bar) with !*.* and {nonegate: true}
    ✓ should match a/b/c (1) with !*.*
    ✓ should match a/b/c (1) with !*.* and {dot: true}
    ✓ should match a/b/c (1) with !*.* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with !*.*
    ✓ should match a/b (2)/c (1) with !*.* and {dot: true}
    ✓ should match a/b (2)/c (1) with !*.* and {nonegate: true}
    ✓ should match a/b/c [def] with !*.*
    ✓ should match a/b/c [def] with !*.* and {dot: true}
    ✓ should match a/b/c [def] with !*.* and {nonegate: true}
    ✓ should match a with !*.js
    ✓ should match a with !*.js and {dot: true}
    ✓ should match a with !*.js and {nonegate: true}
    ✓ should match a.md with !*.js
    ✓ should match a.md with !*.js and {dot: true}
    ✓ should match a.md with !*.js and {nonegate: true}
    ✓ should match a.js with !*.js
    ✓ should match a.js with !*.js and {dot: true}
    ✓ should match a.js with !*.js and {nonegate: true}
    ✓ should match a/ with !*.js
    ✓ should match a/ with !*.js and {dot: true}
    ✓ should match a/ with !*.js and {nonegate: true}
    ✓ should match a/b with !*.js
    ✓ should match a/b with !*.js and {dot: true}
    ✓ should match a/b with !*.js and {nonegate: true}
    ✓ should match a/b/.c.md with !*.js
    ✓ should match a/b/.c.md with !*.js and {dot: true}
    ✓ should match a/b/.c.md with !*.js and {nonegate: true}
    ✓ should match a/b/c with !*.js
    ✓ should match a/b/c with !*.js and {dot: true}
    ✓ should match a/b/c with !*.js and {nonegate: true}
    ✓ should match a/b/c.md with !*.js
    ✓ should match a/b/c.md with !*.js and {dot: true}
    ✓ should match a/b/c.md with !*.js and {nonegate: true}
    ✓ should match a/b/c/ with !*.js
    ✓ should match a/b/c/ with !*.js and {dot: true}
    ✓ should match a/b/c/ with !*.js and {nonegate: true}
    ✓ should match a/b/c/d with !*.js
    ✓ should match a/b/c/d with !*.js and {dot: true}
    ✓ should match a/b/c/d with !*.js and {nonegate: true}
    ✓ should match a/b/c/d/ with !*.js
    ✓ should match a/b/c/d/ with !*.js and {dot: true}
    ✓ should match a/b/c/d/ with !*.js and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with !*.js
    ✓ should match a/b/c/d/e/f/z.js with !*.js and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with !*.js and {nonegate: true}
    ✓ should match a/b/c/z.js with !*.js
    ✓ should match a/b/c/z.js with !*.js and {dot: true}
    ✓ should match a/b/c/z.js with !*.js and {nonegate: true}
    ✓ should match a/bb with !*.js
    ✓ should match a/bb with !*.js and {dot: true}
    ✓ should match a/bb with !*.js and {nonegate: true}
    ✓ should match a/cb with !*.js
    ✓ should match a/cb with !*.js and {dot: true}
    ✓ should match a/cb with !*.js and {nonegate: true}
    ✓ should match abbbz with !*.js
    ✓ should match abbbz with !*.js and {dot: true}
    ✓ should match abbbz with !*.js and {nonegate: true}
    ✓ should match abc with !*.js
    ✓ should match abc with !*.js and {dot: true}
    ✓ should match abc with !*.js and {nonegate: true}
    ✓ should match abd with !*.js
    ✓ should match abd with !*.js and {dot: true}
    ✓ should match abd with !*.js and {nonegate: true}
    ✓ should match z.js with !*.js
    ✓ should match z.js with !*.js and {dot: true}
    ✓ should match z.js with !*.js and {nonegate: true}
    ✓ should match za.js with !*.js
    ✓ should match za.js with !*.js and {dot: true}
    ✓ should match za.js with !*.js and {nonegate: true}
    ✓ should match !a.js with !*.js
    ✓ should match !a.js with !*.js and {dot: true}
    ✓ should match !a.js with !*.js and {nonegate: true}
    ✓ should match !a/b with !*.js
    ✓ should match !a/b with !*.js and {dot: true}
    ✓ should match !a/b with !*.js and {nonegate: true}
    ✓ should match !a/b/ with !*.js
    ✓ should match !a/b/ with !*.js and {dot: true}
    ✓ should match !a/b/ with !*.js and {nonegate: true}
    ✓ should match !a/b/c with !*.js
    ✓ should match !a/b/c with !*.js and {dot: true}
    ✓ should match !a/b/c with !*.js and {nonegate: true}
    ✓ should match !a/b/c/ with !*.js
    ✓ should match !a/b/c/ with !*.js and {dot: true}
    ✓ should match !a/b/c/ with !*.js and {nonegate: true}
    ✓ should match !a/!b with !*.js
    ✓ should match !a/!b with !*.js and {dot: true}
    ✓ should match !a/!b with !*.js and {nonegate: true}
    ✓ should match !a/!b/c with !*.js
    ✓ should match !a/!b/c with !*.js and {dot: true}
    ✓ should match !a/!b/c with !*.js and {nonegate: true}
    ✓ should match !a/!b/c/d with !*.js
    ✓ should match !a/!b/c/d with !*.js and {dot: true}
    ✓ should match !a/!b/c/d with !*.js and {nonegate: true}
    ✓ should match !a/b/.c.md with !*.js
    ✓ should match !a/b/.c.md with !*.js and {dot: true}
    ✓ should match !a/b/.c.md with !*.js and {nonegate: true}
    ✓ should match /a/ with !*.js
    ✓ should match /a/ with !*.js and {dot: true}
    ✓ should match /a/ with !*.js and {nonegate: true}
    ✓ should match /a/b with !*.js
    ✓ should match /a/b with !*.js and {dot: true}
    ✓ should match /a/b with !*.js and {nonegate: true}
    ✓ should match /a/cb with !*.js
    ✓ should match /a/cb with !*.js and {dot: true}
    ✓ should match /a/cb with !*.js and {nonegate: true}
    ✓ should match /a/bb with !*.js
    ✓ should match /a/bb with !*.js and {dot: true}
    ✓ should match /a/bb with !*.js and {nonegate: true}
    ✓ should match /a/b/c with !*.js
    ✓ should match /a/b/c with !*.js and {dot: true}
    ✓ should match /a/b/c with !*.js and {nonegate: true}
    ✓ should match /a/b/c/ with !*.js
    ✓ should match /a/b/c/ with !*.js and {dot: true}
    ✓ should match /a/b/c/ with !*.js and {nonegate: true}
    ✓ should match /a/b/c/d with !*.js
    ✓ should match /a/b/c/d with !*.js and {dot: true}
    ✓ should match /a/b/c/d with !*.js and {nonegate: true}
    ✓ should match /a/b/c/d/ with !*.js
    ✓ should match /a/b/c/d/ with !*.js and {dot: true}
    ✓ should match /a/b/c/d/ with !*.js and {nonegate: true}
    ✓ should match . with !*.js
    ✓ should match . with !*.js and {dot: true}
    ✓ should match . with !*.js and {nonegate: true}
    ✓ should match ./ with !*.js
    ✓ should match ./ with !*.js and {dot: true}
    ✓ should match ./ with !*.js and {nonegate: true}
    ✓ should match .. with !*.js
    ✓ should match .. with !*.js and {dot: true}
    ✓ should match .. with !*.js and {nonegate: true}
    ✓ should match ../c with !*.js
    ✓ should match ../c with !*.js and {dot: true}
    ✓ should match ../c with !*.js and {nonegate: true}
    ✓ should match ../c with !*.js
    ✓ should match ../c with !*.js and {dot: true}
    ✓ should match ../c with !*.js and {nonegate: true}
    ✓ should match ./../c with !*.js
    ✓ should match ./../c with !*.js and {dot: true}
    ✓ should match ./../c with !*.js and {nonegate: true}
    ✓ should match ./a/../c with !*.js
    ✓ should match ./a/../c with !*.js and {dot: true}
    ✓ should match ./a/../c with !*.js and {nonegate: true}
    ✓ should match /.. with !*.js
    ✓ should match /.. with !*.js and {dot: true}
    ✓ should match /.. with !*.js and {nonegate: true}
    ✓ should match /../c with !*.js
    ✓ should match /../c with !*.js and {dot: true}
    ✓ should match /../c with !*.js and {nonegate: true}
    ✓ should match /../.c with !*.js
    ✓ should match /../.c with !*.js and {dot: true}
    ✓ should match /../.c with !*.js and {nonegate: true}
    ✓ should match /../.c/ with !*.js
    ✓ should match /../.c/ with !*.js and {dot: true}
    ✓ should match /../.c/ with !*.js and {nonegate: true}
    ✓ should match /a/../c with !*.js
    ✓ should match /a/../c with !*.js and {dot: true}
    ✓ should match /a/../c with !*.js and {nonegate: true}
    ✓ should match a/../c with !*.js
    ✓ should match a/../c with !*.js and {dot: true}
    ✓ should match a/../c with !*.js and {nonegate: true}
    ✓ should match ../.b/.c with !*.js
    ✓ should match ../.b/.c with !*.js and {dot: true}
    ✓ should match ../.b/.c with !*.js and {nonegate: true}
    ✓ should match ../b/.c with !*.js
    ✓ should match ../b/.c with !*.js and {dot: true}
    ✓ should match ../b/.c with !*.js and {nonegate: true}
    ✓ should match ./.b/.c with !*.js
    ✓ should match ./.b/.c with !*.js and {dot: true}
    ✓ should match ./.b/.c with !*.js and {nonegate: true}
    ✓ should match ./b/.c with !*.js
    ✓ should match ./b/.c with !*.js and {dot: true}
    ✓ should match ./b/.c with !*.js and {nonegate: true}
    ✓ should match .b with !*.js
    ✓ should match .b with !*.js and {dot: true}
    ✓ should match .b with !*.js and {nonegate: true}
    ✓ should match .b.c with !*.js
    ✓ should match .b.c with !*.js and {dot: true}
    ✓ should match .b.c with !*.js and {nonegate: true}
    ✓ should match .b.c/ with !*.js
    ✓ should match .b.c/ with !*.js and {dot: true}
    ✓ should match .b.c/ with !*.js and {nonegate: true}
    ✓ should match .b/ with !*.js
    ✓ should match .b/ with !*.js and {dot: true}
    ✓ should match .b/ with !*.js and {nonegate: true}
    ✓ should match .b/.c with !*.js
    ✓ should match .b/.c with !*.js and {dot: true}
    ✓ should match .b/.c with !*.js and {nonegate: true}
    ✓ should match .b/c with !*.js
    ✓ should match .b/c with !*.js and {dot: true}
    ✓ should match .b/c with !*.js and {nonegate: true}
    ✓ should match b/.c with !*.js
    ✓ should match b/.c with !*.js and {dot: true}
    ✓ should match b/.c with !*.js and {nonegate: true}
    ✓ should match b/.c/ with !*.js
    ✓ should match b/.c/ with !*.js and {dot: true}
    ✓ should match b/.c/ with !*.js and {nonegate: true}
    ✓ should match a/+b/c with !*.js
    ✓ should match a/+b/c with !*.js and {dot: true}
    ✓ should match a/+b/c with !*.js and {nonegate: true}
    ✓ should match +a/+b/c with !*.js
    ✓ should match +a/+b/c with !*.js and {dot: true}
    ✓ should match +a/+b/c with !*.js and {nonegate: true}
    ✓ should match a (foo) with !*.js
    ✓ should match a (foo) with !*.js and {dot: true}
    ✓ should match a (foo) with !*.js and {nonegate: true}
    ✓ should match a (foo)/(bar) with !*.js
    ✓ should match a (foo)/(bar) with !*.js and {dot: true}
    ✓ should match a (foo)/(bar) with !*.js and {nonegate: true}
    ✓ should match a/b/c (1) with !*.js
    ✓ should match a/b/c (1) with !*.js and {dot: true}
    ✓ should match a/b/c (1) with !*.js and {nonegate: true}
    ✓ should match a/b (2)/c (1) with !*.js
    ✓ should match a/b (2)/c (1) with !*.js and {dot: true}
    ✓ should match a/b (2)/c (1) with !*.js and {nonegate: true}
    ✓ should match a/b/c [def] with !*.js
    ✓ should match a/b/c [def] with !*.js and {dot: true}
    ✓ should match a/b/c [def] with !*.js and {nonegate: true}
    ✓ should match a with !*/**/*
    ✓ should match a with !*/**/* and {dot: true}
    ✓ should match a with !*/**/* and {nonegate: true}
    ✓ should match a.md with !*/**/*
    ✓ should match a.md with !*/**/* and {dot: true}
    ✓ should match a.md with !*/**/* and {nonegate: true}
    ✓ should match a.js with !*/**/*
    ✓ should match a.js with !*/**/* and {dot: true}
    ✓ should match a.js with !*/**/* and {nonegate: true}
    ✓ should match a/ with !*/**/*
    ✓ should match a/ with !*/**/* and {dot: true}
    ✓ should match a/ with !*/**/* and {nonegate: true}
    ✓ should match a/b with !*/**/*
    ✓ should match a/b with !*/**/* and {dot: true}
    ✓ should match a/b with !*/**/* and {nonegate: true}
    ✓ should match a/b/.c.md with !*/**/*
    ✓ should match a/b/.c.md with !*/**/* and {dot: true}
    ✓ should match a/b/.c.md with !*/**/* and {nonegate: true}
    ✓ should match a/b/c with !*/**/*
    ✓ should match a/b/c with !*/**/* and {dot: true}
    ✓ should match a/b/c with !*/**/* and {nonegate: true}
    ✓ should match a/b/c.md with !*/**/*
    ✓ should match a/b/c.md with !*/**/* and {dot: true}
    ✓ should match a/b/c.md with !*/**/* and {nonegate: true}
    ✓ should match a/b/c/ with !*/**/*
    ✓ should match a/b/c/ with !*/**/* and {dot: true}
    ✓ should match a/b/c/ with !*/**/* and {nonegate: true}
    ✓ should match a/b/c/d with !*/**/*
    ✓ should match a/b/c/d with !*/**/* and {dot: true}
    ✓ should match a/b/c/d with !*/**/* and {nonegate: true}
    ✓ should match a/b/c/d/ with !*/**/*
    ✓ should match a/b/c/d/ with !*/**/* and {dot: true}
    ✓ should match a/b/c/d/ with !*/**/* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with !*/**/*
    ✓ should match a/b/c/d/e/f/z.js with !*/**/* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with !*/**/* and {nonegate: true}
    ✓ should match a/b/c/z.js with !*/**/*
    ✓ should match a/b/c/z.js with !*/**/* and {dot: true}
    ✓ should match a/b/c/z.js with !*/**/* and {nonegate: true}
    ✓ should match a/bb with !*/**/*
    ✓ should match a/bb with !*/**/* and {dot: true}
    ✓ should match a/bb with !*/**/* and {nonegate: true}
    ✓ should match a/cb with !*/**/*
    ✓ should match a/cb with !*/**/* and {dot: true}
    ✓ should match a/cb with !*/**/* and {nonegate: true}
    ✓ should match abbbz with !*/**/*
    ✓ should match abbbz with !*/**/* and {dot: true}
    ✓ should match abbbz with !*/**/* and {nonegate: true}
    ✓ should match abc with !*/**/*
    ✓ should match abc with !*/**/* and {dot: true}
    ✓ should match abc with !*/**/* and {nonegate: true}
    ✓ should match abd with !*/**/*
    ✓ should match abd with !*/**/* and {dot: true}
    ✓ should match abd with !*/**/* and {nonegate: true}
    ✓ should match z.js with !*/**/*
    ✓ should match z.js with !*/**/* and {dot: true}
    ✓ should match z.js with !*/**/* and {nonegate: true}
    ✓ should match za.js with !*/**/*
    ✓ should match za.js with !*/**/* and {dot: true}
    ✓ should match za.js with !*/**/* and {nonegate: true}
    ✓ should match !a.js with !*/**/*
    ✓ should match !a.js with !*/**/* and {dot: true}
    ✓ should match !a.js with !*/**/* and {nonegate: true}
    ✓ should match !a/b with !*/**/*
    ✓ should match !a/b with !*/**/* and {dot: true}
    ✓ should match !a/b with !*/**/* and {nonegate: true}
    ✓ should match !a/b/ with !*/**/*
    ✓ should match !a/b/ with !*/**/* and {dot: true}
    ✓ should match !a/b/ with !*/**/* and {nonegate: true}
    ✓ should match !a/b/c with !*/**/*
    ✓ should match !a/b/c with !*/**/* and {dot: true}
    ✓ should match !a/b/c with !*/**/* and {nonegate: true}
    ✓ should match !a/b/c/ with !*/**/*
    ✓ should match !a/b/c/ with !*/**/* and {dot: true}
    ✓ should match !a/b/c/ with !*/**/* and {nonegate: true}
    ✓ should match !a/!b with !*/**/*
    ✓ should match !a/!b with !*/**/* and {dot: true}
    ✓ should match !a/!b with !*/**/* and {nonegate: true}
    ✓ should match !a/!b/c with !*/**/*
    ✓ should match !a/!b/c with !*/**/* and {dot: true}
    ✓ should match !a/!b/c with !*/**/* and {nonegate: true}
    ✓ should match !a/!b/c/d with !*/**/*
    ✓ should match !a/!b/c/d with !*/**/* and {dot: true}
    ✓ should match !a/!b/c/d with !*/**/* and {nonegate: true}
    ✓ should match !a/b/.c.md with !*/**/*
    ✓ should match !a/b/.c.md with !*/**/* and {dot: true}
    ✓ should match !a/b/.c.md with !*/**/* and {nonegate: true}
    ✓ should match /a/ with !*/**/*
    ✓ should match /a/ with !*/**/* and {dot: true}
    ✓ should match /a/ with !*/**/* and {nonegate: true}
    ✓ should match /a/b with !*/**/*
    ✓ should match /a/b with !*/**/* and {dot: true}
    ✓ should match /a/b with !*/**/* and {nonegate: true}
    ✓ should match /a/cb with !*/**/*
    ✓ should match /a/cb with !*/**/* and {dot: true}
    ✓ should match /a/cb with !*/**/* and {nonegate: true}
    ✓ should match /a/bb with !*/**/*
    ✓ should match /a/bb with !*/**/* and {dot: true}
    ✓ should match /a/bb with !*/**/* and {nonegate: true}
    ✓ should match /a/b/c with !*/**/*
    ✓ should match /a/b/c with !*/**/* and {dot: true}
    ✓ should match /a/b/c with !*/**/* and {nonegate: true}
    ✓ should match /a/b/c/ with !*/**/*
    ✓ should match /a/b/c/ with !*/**/* and {dot: true}
    ✓ should match /a/b/c/ with !*/**/* and {nonegate: true}
    ✓ should match /a/b/c/d with !*/**/*
    ✓ should match /a/b/c/d with !*/**/* and {dot: true}
    ✓ should match /a/b/c/d with !*/**/* and {nonegate: true}
    ✓ should match /a/b/c/d/ with !*/**/*
    ✓ should match /a/b/c/d/ with !*/**/* and {dot: true}
    ✓ should match /a/b/c/d/ with !*/**/* and {nonegate: true}
    ✓ should match . with !*/**/*
    ✓ should match . with !*/**/* and {dot: true}
    ✓ should match . with !*/**/* and {nonegate: true}
    ✓ should match ./ with !*/**/*
    ✓ should match ./ with !*/**/* and {dot: true}
    ✓ should match ./ with !*/**/* and {nonegate: true}
    ✓ should match .. with !*/**/*
    ✓ should match .. with !*/**/* and {dot: true}
    ✓ should match .. with !*/**/* and {nonegate: true}
    ✓ should match ../c with !*/**/*
    ✓ should match ../c with !*/**/* and {dot: true}
    ✓ should match ../c with !*/**/* and {nonegate: true}
    ✓ should match ../c with !*/**/*
    ✓ should match ../c with !*/**/* and {dot: true}
    ✓ should match ../c with !*/**/* and {nonegate: true}
    ✓ should match ./../c with !*/**/*
    ✓ should match ./../c with !*/**/* and {dot: true}
    ✓ should match ./../c with !*/**/* and {nonegate: true}
    ✓ should match ./a/../c with !*/**/*
    ✓ should match ./a/../c with !*/**/* and {dot: true}
    ✓ should match ./a/../c with !*/**/* and {nonegate: true}
    ✓ should match /.. with !*/**/*
    ✓ should match /.. with !*/**/* and {dot: true}
    ✓ should match /.. with !*/**/* and {nonegate: true}
    ✓ should match /../c with !*/**/*
    ✓ should match /../c with !*/**/* and {dot: true}
    ✓ should match /../c with !*/**/* and {nonegate: true}
    ✓ should match /../.c with !*/**/*
    ✓ should match /../.c with !*/**/* and {dot: true}
    ✓ should match /../.c with !*/**/* and {nonegate: true}
    ✓ should match /../.c/ with !*/**/*
    ✓ should match /../.c/ with !*/**/* and {dot: true}
    ✓ should match /../.c/ with !*/**/* and {nonegate: true}
    ✓ should match /a/../c with !*/**/*
    ✓ should match /a/../c with !*/**/* and {dot: true}
    ✓ should match /a/../c with !*/**/* and {nonegate: true}
    ✓ should match a/../c with !*/**/*
    ✓ should match a/../c with !*/**/* and {dot: true}
    ✓ should match a/../c with !*/**/* and {nonegate: true}
    ✓ should match ../.b/.c with !*/**/*
    ✓ should match ../.b/.c with !*/**/* and {dot: true}
    ✓ should match ../.b/.c with !*/**/* and {nonegate: true}
    ✓ should match ../b/.c with !*/**/*
    ✓ should match ../b/.c with !*/**/* and {dot: true}
    ✓ should match ../b/.c with !*/**/* and {nonegate: true}
    ✓ should match ./.b/.c with !*/**/*
    ✓ should match ./.b/.c with !*/**/* and {dot: true}
    ✓ should match ./.b/.c with !*/**/* and {nonegate: true}
    ✓ should match ./b/.c with !*/**/*
    ✓ should match ./b/.c with !*/**/* and {dot: true}
    ✓ should match ./b/.c with !*/**/* and {nonegate: true}
    ✓ should match .b with !*/**/*
    ✓ should match .b with !*/**/* and {dot: true}
    ✓ should match .b with !*/**/* and {nonegate: true}
    ✓ should match .b.c with !*/**/*
    ✓ should match .b.c with !*/**/* and {dot: true}
    ✓ should match .b.c with !*/**/* and {nonegate: true}
    ✓ should match .b.c/ with !*/**/*
    ✓ should match .b.c/ with !*/**/* and {dot: true}
    ✓ should match .b.c/ with !*/**/* and {nonegate: true}
    ✓ should match .b/ with !*/**/*
    ✓ should match .b/ with !*/**/* and {dot: true}
    ✓ should match .b/ with !*/**/* and {nonegate: true}
    ✓ should match .b/.c with !*/**/*
    ✓ should match .b/.c with !*/**/* and {dot: true}
    ✓ should match .b/.c with !*/**/* and {nonegate: true}
    ✓ should match .b/c with !*/**/*
    ✓ should match .b/c with !*/**/* and {dot: true}
    ✓ should match .b/c with !*/**/* and {nonegate: true}
    ✓ should match b/.c with !*/**/*
    ✓ should match b/.c with !*/**/* and {dot: true}
    ✓ should match b/.c with !*/**/* and {nonegate: true}
    ✓ should match b/.c/ with !*/**/*
    ✓ should match b/.c/ with !*/**/* and {dot: true}
    ✓ should match b/.c/ with !*/**/* and {nonegate: true}
    ✓ should match a/+b/c with !*/**/*
    ✓ should match a/+b/c with !*/**/* and {dot: true}
    ✓ should match a/+b/c with !*/**/* and {nonegate: true}
    ✓ should match +a/+b/c with !*/**/*
    ✓ should match +a/+b/c with !*/**/* and {dot: true}
    ✓ should match +a/+b/c with !*/**/* and {nonegate: true}
    ✓ should match a (foo) with !*/**/*
    ✓ should match a (foo) with !*/**/* and {dot: true}
    ✓ should match a (foo) with !*/**/* and {nonegate: true}
    ✓ should match a (foo)/(bar) with !*/**/*
    ✓ should match a (foo)/(bar) with !*/**/* and {dot: true}
    ✓ should match a (foo)/(bar) with !*/**/* and {nonegate: true}
    ✓ should match a/b/c (1) with !*/**/*
    ✓ should match a/b/c (1) with !*/**/* and {dot: true}
    ✓ should match a/b/c (1) with !*/**/* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with !*/**/*
    ✓ should match a/b (2)/c (1) with !*/**/* and {dot: true}
    ✓ should match a/b (2)/c (1) with !*/**/* and {nonegate: true}
    ✓ should match a/b/c [def] with !*/**/*
    ✓ should match a/b/c [def] with !*/**/* and {dot: true}
    ✓ should match a/b/c [def] with !*/**/* and {nonegate: true}
    ✓ should match a with !*/**/*/
    ✓ should match a with !*/**/*/ and {dot: true}
    ✓ should match a with !*/**/*/ and {nonegate: true}
    ✓ should match a.md with !*/**/*/
    ✓ should match a.md with !*/**/*/ and {dot: true}
    ✓ should match a.md with !*/**/*/ and {nonegate: true}
    ✓ should match a.js with !*/**/*/
    ✓ should match a.js with !*/**/*/ and {dot: true}
    ✓ should match a.js with !*/**/*/ and {nonegate: true}
    ✓ should match a/ with !*/**/*/
    ✓ should match a/ with !*/**/*/ and {dot: true}
    ✓ should match a/ with !*/**/*/ and {nonegate: true}
    ✓ should match a/b with !*/**/*/
    ✓ should match a/b with !*/**/*/ and {dot: true}
    ✓ should match a/b with !*/**/*/ and {nonegate: true}
    ✓ should match a/b/.c.md with !*/**/*/
    ✓ should match a/b/.c.md with !*/**/*/ and {dot: true}
    ✓ should match a/b/.c.md with !*/**/*/ and {nonegate: true}
    ✓ should match a/b/c with !*/**/*/
    ✓ should match a/b/c with !*/**/*/ and {dot: true}
    ✓ should match a/b/c with !*/**/*/ and {nonegate: true}
    ✓ should match a/b/c.md with !*/**/*/
    ✓ should match a/b/c.md with !*/**/*/ and {dot: true}
    ✓ should match a/b/c.md with !*/**/*/ and {nonegate: true}
    ✓ should match a/b/c/ with !*/**/*/
    ✓ should match a/b/c/ with !*/**/*/ and {dot: true}
    ✓ should match a/b/c/ with !*/**/*/ and {nonegate: true}
    ✓ should match a/b/c/d with !*/**/*/
    ✓ should match a/b/c/d with !*/**/*/ and {dot: true}
    ✓ should match a/b/c/d with !*/**/*/ and {nonegate: true}
    ✓ should match a/b/c/d/ with !*/**/*/
    ✓ should match a/b/c/d/ with !*/**/*/ and {dot: true}
    ✓ should match a/b/c/d/ with !*/**/*/ and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with !*/**/*/
    ✓ should match a/b/c/d/e/f/z.js with !*/**/*/ and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with !*/**/*/ and {nonegate: true}
    ✓ should match a/b/c/z.js with !*/**/*/
    ✓ should match a/b/c/z.js with !*/**/*/ and {dot: true}
    ✓ should match a/b/c/z.js with !*/**/*/ and {nonegate: true}
    ✓ should match a/bb with !*/**/*/
    ✓ should match a/bb with !*/**/*/ and {dot: true}
    ✓ should match a/bb with !*/**/*/ and {nonegate: true}
    ✓ should match a/cb with !*/**/*/
    ✓ should match a/cb with !*/**/*/ and {dot: true}
    ✓ should match a/cb with !*/**/*/ and {nonegate: true}
    ✓ should match abbbz with !*/**/*/
    ✓ should match abbbz with !*/**/*/ and {dot: true}
    ✓ should match abbbz with !*/**/*/ and {nonegate: true}
    ✓ should match abc with !*/**/*/
    ✓ should match abc with !*/**/*/ and {dot: true}
    ✓ should match abc with !*/**/*/ and {nonegate: true}
    ✓ should match abd with !*/**/*/
    ✓ should match abd with !*/**/*/ and {dot: true}
    ✓ should match abd with !*/**/*/ and {nonegate: true}
    ✓ should match z.js with !*/**/*/
    ✓ should match z.js with !*/**/*/ and {dot: true}
    ✓ should match z.js with !*/**/*/ and {nonegate: true}
    ✓ should match za.js with !*/**/*/
    ✓ should match za.js with !*/**/*/ and {dot: true}
    ✓ should match za.js with !*/**/*/ and {nonegate: true}
    ✓ should match !a.js with !*/**/*/
    ✓ should match !a.js with !*/**/*/ and {dot: true}
    ✓ should match !a.js with !*/**/*/ and {nonegate: true}
    ✓ should match !a/b with !*/**/*/
    ✓ should match !a/b with !*/**/*/ and {dot: true}
    ✓ should match !a/b with !*/**/*/ and {nonegate: true}
    ✓ should match !a/b/ with !*/**/*/
    ✓ should match !a/b/ with !*/**/*/ and {dot: true}
    ✓ should match !a/b/ with !*/**/*/ and {nonegate: true}
    ✓ should match !a/b/c with !*/**/*/
    ✓ should match !a/b/c with !*/**/*/ and {dot: true}
    ✓ should match !a/b/c with !*/**/*/ and {nonegate: true}
    ✓ should match !a/b/c/ with !*/**/*/
    ✓ should match !a/b/c/ with !*/**/*/ and {dot: true}
    ✓ should match !a/b/c/ with !*/**/*/ and {nonegate: true}
    ✓ should match !a/!b with !*/**/*/
    ✓ should match !a/!b with !*/**/*/ and {dot: true}
    ✓ should match !a/!b with !*/**/*/ and {nonegate: true}
    ✓ should match !a/!b/c with !*/**/*/
    ✓ should match !a/!b/c with !*/**/*/ and {dot: true}
    ✓ should match !a/!b/c with !*/**/*/ and {nonegate: true}
    ✓ should match !a/!b/c/d with !*/**/*/
    ✓ should match !a/!b/c/d with !*/**/*/ and {dot: true}
    ✓ should match !a/!b/c/d with !*/**/*/ and {nonegate: true}
    ✓ should match !a/b/.c.md with !*/**/*/
    ✓ should match !a/b/.c.md with !*/**/*/ and {dot: true}
    ✓ should match !a/b/.c.md with !*/**/*/ and {nonegate: true}
    ✓ should match /a/ with !*/**/*/
    ✓ should match /a/ with !*/**/*/ and {dot: true}
    ✓ should match /a/ with !*/**/*/ and {nonegate: true}
    ✓ should match /a/b with !*/**/*/
    ✓ should match /a/b with !*/**/*/ and {dot: true}
    ✓ should match /a/b with !*/**/*/ and {nonegate: true}
    ✓ should match /a/cb with !*/**/*/
    ✓ should match /a/cb with !*/**/*/ and {dot: true}
    ✓ should match /a/cb with !*/**/*/ and {nonegate: true}
    ✓ should match /a/bb with !*/**/*/
    ✓ should match /a/bb with !*/**/*/ and {dot: true}
    ✓ should match /a/bb with !*/**/*/ and {nonegate: true}
    ✓ should match /a/b/c with !*/**/*/
    ✓ should match /a/b/c with !*/**/*/ and {dot: true}
    ✓ should match /a/b/c with !*/**/*/ and {nonegate: true}
    ✓ should match /a/b/c/ with !*/**/*/
    ✓ should match /a/b/c/ with !*/**/*/ and {dot: true}
    ✓ should match /a/b/c/ with !*/**/*/ and {nonegate: true}
    ✓ should match /a/b/c/d with !*/**/*/
    ✓ should match /a/b/c/d with !*/**/*/ and {dot: true}
    ✓ should match /a/b/c/d with !*/**/*/ and {nonegate: true}
    ✓ should match /a/b/c/d/ with !*/**/*/
    ✓ should match /a/b/c/d/ with !*/**/*/ and {dot: true}
    ✓ should match /a/b/c/d/ with !*/**/*/ and {nonegate: true}
    ✓ should match . with !*/**/*/
    ✓ should match . with !*/**/*/ and {dot: true}
    ✓ should match . with !*/**/*/ and {nonegate: true}
    ✓ should match ./ with !*/**/*/
    ✓ should match ./ with !*/**/*/ and {dot: true}
    ✓ should match ./ with !*/**/*/ and {nonegate: true}
    ✓ should match .. with !*/**/*/
    ✓ should match .. with !*/**/*/ and {dot: true}
    ✓ should match .. with !*/**/*/ and {nonegate: true}
    ✓ should match ../c with !*/**/*/
    ✓ should match ../c with !*/**/*/ and {dot: true}
    ✓ should match ../c with !*/**/*/ and {nonegate: true}
    ✓ should match ../c with !*/**/*/
    ✓ should match ../c with !*/**/*/ and {dot: true}
    ✓ should match ../c with !*/**/*/ and {nonegate: true}
    ✓ should match ./../c with !*/**/*/
    ✓ should match ./../c with !*/**/*/ and {dot: true}
    ✓ should match ./../c with !*/**/*/ and {nonegate: true}
    ✓ should match ./a/../c with !*/**/*/
    ✓ should match ./a/../c with !*/**/*/ and {dot: true}
    ✓ should match ./a/../c with !*/**/*/ and {nonegate: true}
    ✓ should match /.. with !*/**/*/
    ✓ should match /.. with !*/**/*/ and {dot: true}
    ✓ should match /.. with !*/**/*/ and {nonegate: true}
    ✓ should match /../c with !*/**/*/
    ✓ should match /../c with !*/**/*/ and {dot: true}
    ✓ should match /../c with !*/**/*/ and {nonegate: true}
    ✓ should match /../.c with !*/**/*/
    ✓ should match /../.c with !*/**/*/ and {dot: true}
    ✓ should match /../.c with !*/**/*/ and {nonegate: true}
    ✓ should match /../.c/ with !*/**/*/
    ✓ should match /../.c/ with !*/**/*/ and {dot: true}
    ✓ should match /../.c/ with !*/**/*/ and {nonegate: true}
    ✓ should match /a/../c with !*/**/*/
    ✓ should match /a/../c with !*/**/*/ and {dot: true}
    ✓ should match /a/../c with !*/**/*/ and {nonegate: true}
    ✓ should match a/../c with !*/**/*/
    ✓ should match a/../c with !*/**/*/ and {dot: true}
    ✓ should match a/../c with !*/**/*/ and {nonegate: true}
    ✓ should match ../.b/.c with !*/**/*/
    ✓ should match ../.b/.c with !*/**/*/ and {dot: true}
    ✓ should match ../.b/.c with !*/**/*/ and {nonegate: true}
    ✓ should match ../b/.c with !*/**/*/
    ✓ should match ../b/.c with !*/**/*/ and {dot: true}
    ✓ should match ../b/.c with !*/**/*/ and {nonegate: true}
    ✓ should match ./.b/.c with !*/**/*/
    ✓ should match ./.b/.c with !*/**/*/ and {dot: true}
    ✓ should match ./.b/.c with !*/**/*/ and {nonegate: true}
    ✓ should match ./b/.c with !*/**/*/
    ✓ should match ./b/.c with !*/**/*/ and {dot: true}
    ✓ should match ./b/.c with !*/**/*/ and {nonegate: true}
    ✓ should match .b with !*/**/*/
    ✓ should match .b with !*/**/*/ and {dot: true}
    ✓ should match .b with !*/**/*/ and {nonegate: true}
    ✓ should match .b.c with !*/**/*/
    ✓ should match .b.c with !*/**/*/ and {dot: true}
    ✓ should match .b.c with !*/**/*/ and {nonegate: true}
    ✓ should match .b.c/ with !*/**/*/
    ✓ should match .b.c/ with !*/**/*/ and {dot: true}
    ✓ should match .b.c/ with !*/**/*/ and {nonegate: true}
    ✓ should match .b/ with !*/**/*/
    ✓ should match .b/ with !*/**/*/ and {dot: true}
    ✓ should match .b/ with !*/**/*/ and {nonegate: true}
    ✓ should match .b/.c with !*/**/*/
    ✓ should match .b/.c with !*/**/*/ and {dot: true}
    ✓ should match .b/.c with !*/**/*/ and {nonegate: true}
    ✓ should match .b/c with !*/**/*/
    ✓ should match .b/c with !*/**/*/ and {dot: true}
    ✓ should match .b/c with !*/**/*/ and {nonegate: true}
    ✓ should match b/.c with !*/**/*/
    ✓ should match b/.c with !*/**/*/ and {dot: true}
    ✓ should match b/.c with !*/**/*/ and {nonegate: true}
    ✓ should match b/.c/ with !*/**/*/
    ✓ should match b/.c/ with !*/**/*/ and {dot: true}
    ✓ should match b/.c/ with !*/**/*/ and {nonegate: true}
    ✓ should match a/+b/c with !*/**/*/
    ✓ should match a/+b/c with !*/**/*/ and {dot: true}
    ✓ should match a/+b/c with !*/**/*/ and {nonegate: true}
    ✓ should match +a/+b/c with !*/**/*/
    ✓ should match +a/+b/c with !*/**/*/ and {dot: true}
    ✓ should match +a/+b/c with !*/**/*/ and {nonegate: true}
    ✓ should match a (foo) with !*/**/*/
    ✓ should match a (foo) with !*/**/*/ and {dot: true}
    ✓ should match a (foo) with !*/**/*/ and {nonegate: true}
    ✓ should match a (foo)/(bar) with !*/**/*/
    ✓ should match a (foo)/(bar) with !*/**/*/ and {dot: true}
    ✓ should match a (foo)/(bar) with !*/**/*/ and {nonegate: true}
    ✓ should match a/b/c (1) with !*/**/*/
    ✓ should match a/b/c (1) with !*/**/*/ and {dot: true}
    ✓ should match a/b/c (1) with !*/**/*/ and {nonegate: true}
    ✓ should match a/b (2)/c (1) with !*/**/*/
    ✓ should match a/b (2)/c (1) with !*/**/*/ and {dot: true}
    ✓ should match a/b (2)/c (1) with !*/**/*/ and {nonegate: true}
    ✓ should match a/b/c [def] with !*/**/*/
    ✓ should match a/b/c [def] with !*/**/*/ and {dot: true}
    ✓ should match a/b/c [def] with !*/**/*/ and {nonegate: true}
    ✓ should match a with !*/*/*
    ✓ should match a with !*/*/* and {dot: true}
    ✓ should match a with !*/*/* and {nonegate: true}
    ✓ should match a.md with !*/*/*
    ✓ should match a.md with !*/*/* and {dot: true}
    ✓ should match a.md with !*/*/* and {nonegate: true}
    ✓ should match a.js with !*/*/*
    ✓ should match a.js with !*/*/* and {dot: true}
    ✓ should match a.js with !*/*/* and {nonegate: true}
    ✓ should match a/ with !*/*/*
    ✓ should match a/ with !*/*/* and {dot: true}
    ✓ should match a/ with !*/*/* and {nonegate: true}
    ✓ should match a/b with !*/*/*
    ✓ should match a/b with !*/*/* and {dot: true}
    ✓ should match a/b with !*/*/* and {nonegate: true}
    ✓ should match a/b/.c.md with !*/*/*
    ✓ should match a/b/.c.md with !*/*/* and {dot: true}
    ✓ should match a/b/.c.md with !*/*/* and {nonegate: true}
    ✓ should match a/b/c with !*/*/*
    ✓ should match a/b/c with !*/*/* and {dot: true}
    ✓ should match a/b/c with !*/*/* and {nonegate: true}
    ✓ should match a/b/c.md with !*/*/*
    ✓ should match a/b/c.md with !*/*/* and {dot: true}
    ✓ should match a/b/c.md with !*/*/* and {nonegate: true}
    ✓ should match a/b/c/ with !*/*/*
    ✓ should match a/b/c/ with !*/*/* and {dot: true}
    ✓ should match a/b/c/ with !*/*/* and {nonegate: true}
    ✓ should match a/b/c/d with !*/*/*
    ✓ should match a/b/c/d with !*/*/* and {dot: true}
    ✓ should match a/b/c/d with !*/*/* and {nonegate: true}
    ✓ should match a/b/c/d/ with !*/*/*
    ✓ should match a/b/c/d/ with !*/*/* and {dot: true}
    ✓ should match a/b/c/d/ with !*/*/* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with !*/*/*
    ✓ should match a/b/c/d/e/f/z.js with !*/*/* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with !*/*/* and {nonegate: true}
    ✓ should match a/b/c/z.js with !*/*/*
    ✓ should match a/b/c/z.js with !*/*/* and {dot: true}
    ✓ should match a/b/c/z.js with !*/*/* and {nonegate: true}
    ✓ should match a/bb with !*/*/*
    ✓ should match a/bb with !*/*/* and {dot: true}
    ✓ should match a/bb with !*/*/* and {nonegate: true}
    ✓ should match a/cb with !*/*/*
    ✓ should match a/cb with !*/*/* and {dot: true}
    ✓ should match a/cb with !*/*/* and {nonegate: true}
    ✓ should match abbbz with !*/*/*
    ✓ should match abbbz with !*/*/* and {dot: true}
    ✓ should match abbbz with !*/*/* and {nonegate: true}
    ✓ should match abc with !*/*/*
    ✓ should match abc with !*/*/* and {dot: true}
    ✓ should match abc with !*/*/* and {nonegate: true}
    ✓ should match abd with !*/*/*
    ✓ should match abd with !*/*/* and {dot: true}
    ✓ should match abd with !*/*/* and {nonegate: true}
    ✓ should match z.js with !*/*/*
    ✓ should match z.js with !*/*/* and {dot: true}
    ✓ should match z.js with !*/*/* and {nonegate: true}
    ✓ should match za.js with !*/*/*
    ✓ should match za.js with !*/*/* and {dot: true}
    ✓ should match za.js with !*/*/* and {nonegate: true}
    ✓ should match !a.js with !*/*/*
    ✓ should match !a.js with !*/*/* and {dot: true}
    ✓ should match !a.js with !*/*/* and {nonegate: true}
    ✓ should match !a/b with !*/*/*
    ✓ should match !a/b with !*/*/* and {dot: true}
    ✓ should match !a/b with !*/*/* and {nonegate: true}
    ✓ should match !a/b/ with !*/*/*
    ✓ should match !a/b/ with !*/*/* and {dot: true}
    ✓ should match !a/b/ with !*/*/* and {nonegate: true}
    ✓ should match !a/b/c with !*/*/*
    ✓ should match !a/b/c with !*/*/* and {dot: true}
    ✓ should match !a/b/c with !*/*/* and {nonegate: true}
    ✓ should match !a/b/c/ with !*/*/*
    ✓ should match !a/b/c/ with !*/*/* and {dot: true}
    ✓ should match !a/b/c/ with !*/*/* and {nonegate: true}
    ✓ should match !a/!b with !*/*/*
    ✓ should match !a/!b with !*/*/* and {dot: true}
    ✓ should match !a/!b with !*/*/* and {nonegate: true}
    ✓ should match !a/!b/c with !*/*/*
    ✓ should match !a/!b/c with !*/*/* and {dot: true}
    ✓ should match !a/!b/c with !*/*/* and {nonegate: true}
    ✓ should match !a/!b/c/d with !*/*/*
    ✓ should match !a/!b/c/d with !*/*/* and {dot: true}
    ✓ should match !a/!b/c/d with !*/*/* and {nonegate: true}
    ✓ should match !a/b/.c.md with !*/*/*
    ✓ should match !a/b/.c.md with !*/*/* and {dot: true}
    ✓ should match !a/b/.c.md with !*/*/* and {nonegate: true}
    ✓ should match /a/ with !*/*/*
    ✓ should match /a/ with !*/*/* and {dot: true}
    ✓ should match /a/ with !*/*/* and {nonegate: true}
    ✓ should match /a/b with !*/*/*
    ✓ should match /a/b with !*/*/* and {dot: true}
    ✓ should match /a/b with !*/*/* and {nonegate: true}
    ✓ should match /a/cb with !*/*/*
    ✓ should match /a/cb with !*/*/* and {dot: true}
    ✓ should match /a/cb with !*/*/* and {nonegate: true}
    ✓ should match /a/bb with !*/*/*
    ✓ should match /a/bb with !*/*/* and {dot: true}
    ✓ should match /a/bb with !*/*/* and {nonegate: true}
    ✓ should match /a/b/c with !*/*/*
    ✓ should match /a/b/c with !*/*/* and {dot: true}
    ✓ should match /a/b/c with !*/*/* and {nonegate: true}
    ✓ should match /a/b/c/ with !*/*/*
    ✓ should match /a/b/c/ with !*/*/* and {dot: true}
    ✓ should match /a/b/c/ with !*/*/* and {nonegate: true}
    ✓ should match /a/b/c/d with !*/*/*
    ✓ should match /a/b/c/d with !*/*/* and {dot: true}
    ✓ should match /a/b/c/d with !*/*/* and {nonegate: true}
    ✓ should match /a/b/c/d/ with !*/*/*
    ✓ should match /a/b/c/d/ with !*/*/* and {dot: true}
    ✓ should match /a/b/c/d/ with !*/*/* and {nonegate: true}
    ✓ should match . with !*/*/*
    ✓ should match . with !*/*/* and {dot: true}
    ✓ should match . with !*/*/* and {nonegate: true}
    ✓ should match ./ with !*/*/*
    ✓ should match ./ with !*/*/* and {dot: true}
    ✓ should match ./ with !*/*/* and {nonegate: true}
    ✓ should match .. with !*/*/*
    ✓ should match .. with !*/*/* and {dot: true}
    ✓ should match .. with !*/*/* and {nonegate: true}
    ✓ should match ../c with !*/*/*
    ✓ should match ../c with !*/*/* and {dot: true}
    ✓ should match ../c with !*/*/* and {nonegate: true}
    ✓ should match ../c with !*/*/*
    ✓ should match ../c with !*/*/* and {dot: true}
    ✓ should match ../c with !*/*/* and {nonegate: true}
    ✓ should match ./../c with !*/*/*
    ✓ should match ./../c with !*/*/* and {dot: true}
    ✓ should match ./../c with !*/*/* and {nonegate: true}
    ✓ should match ./a/../c with !*/*/*
    ✓ should match ./a/../c with !*/*/* and {dot: true}
    ✓ should match ./a/../c with !*/*/* and {nonegate: true}
    ✓ should match /.. with !*/*/*
    ✓ should match /.. with !*/*/* and {dot: true}
    ✓ should match /.. with !*/*/* and {nonegate: true}
    ✓ should match /../c with !*/*/*
    ✓ should match /../c with !*/*/* and {dot: true}
    ✓ should match /../c with !*/*/* and {nonegate: true}
    ✓ should match /../.c with !*/*/*
    ✓ should match /../.c with !*/*/* and {dot: true}
    ✓ should match /../.c with !*/*/* and {nonegate: true}
    ✓ should match /../.c/ with !*/*/*
    ✓ should match /../.c/ with !*/*/* and {dot: true}
    ✓ should match /../.c/ with !*/*/* and {nonegate: true}
    ✓ should match /a/../c with !*/*/*
    ✓ should match /a/../c with !*/*/* and {dot: true}
    ✓ should match /a/../c with !*/*/* and {nonegate: true}
    ✓ should match a/../c with !*/*/*
    ✓ should match a/../c with !*/*/* and {dot: true}
    ✓ should match a/../c with !*/*/* and {nonegate: true}
    ✓ should match ../.b/.c with !*/*/*
    ✓ should match ../.b/.c with !*/*/* and {dot: true}
    ✓ should match ../.b/.c with !*/*/* and {nonegate: true}
    ✓ should match ../b/.c with !*/*/*
    ✓ should match ../b/.c with !*/*/* and {dot: true}
    ✓ should match ../b/.c with !*/*/* and {nonegate: true}
    ✓ should match ./.b/.c with !*/*/*
    ✓ should match ./.b/.c with !*/*/* and {dot: true}
    ✓ should match ./.b/.c with !*/*/* and {nonegate: true}
    ✓ should match ./b/.c with !*/*/*
    ✓ should match ./b/.c with !*/*/* and {dot: true}
    ✓ should match ./b/.c with !*/*/* and {nonegate: true}
    ✓ should match .b with !*/*/*
    ✓ should match .b with !*/*/* and {dot: true}
    ✓ should match .b with !*/*/* and {nonegate: true}
    ✓ should match .b.c with !*/*/*
    ✓ should match .b.c with !*/*/* and {dot: true}
    ✓ should match .b.c with !*/*/* and {nonegate: true}
    ✓ should match .b.c/ with !*/*/*
    ✓ should match .b.c/ with !*/*/* and {dot: true}
    ✓ should match .b.c/ with !*/*/* and {nonegate: true}
    ✓ should match .b/ with !*/*/*
    ✓ should match .b/ with !*/*/* and {dot: true}
    ✓ should match .b/ with !*/*/* and {nonegate: true}
    ✓ should match .b/.c with !*/*/*
    ✓ should match .b/.c with !*/*/* and {dot: true}
    ✓ should match .b/.c with !*/*/* and {nonegate: true}
    ✓ should match .b/c with !*/*/*
    ✓ should match .b/c with !*/*/* and {dot: true}
    ✓ should match .b/c with !*/*/* and {nonegate: true}
    ✓ should match b/.c with !*/*/*
    ✓ should match b/.c with !*/*/* and {dot: true}
    ✓ should match b/.c with !*/*/* and {nonegate: true}
    ✓ should match b/.c/ with !*/*/*
    ✓ should match b/.c/ with !*/*/* and {dot: true}
    ✓ should match b/.c/ with !*/*/* and {nonegate: true}
    ✓ should match a/+b/c with !*/*/*
    ✓ should match a/+b/c with !*/*/* and {dot: true}
    ✓ should match a/+b/c with !*/*/* and {nonegate: true}
    ✓ should match +a/+b/c with !*/*/*
    ✓ should match +a/+b/c with !*/*/* and {dot: true}
    ✓ should match +a/+b/c with !*/*/* and {nonegate: true}
    ✓ should match a (foo) with !*/*/*
    ✓ should match a (foo) with !*/*/* and {dot: true}
    ✓ should match a (foo) with !*/*/* and {nonegate: true}
    ✓ should match a (foo)/(bar) with !*/*/*
    ✓ should match a (foo)/(bar) with !*/*/* and {dot: true}
    ✓ should match a (foo)/(bar) with !*/*/* and {nonegate: true}
    ✓ should match a/b/c (1) with !*/*/*
    ✓ should match a/b/c (1) with !*/*/* and {dot: true}
    ✓ should match a/b/c (1) with !*/*/* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with !*/*/*
    ✓ should match a/b (2)/c (1) with !*/*/* and {dot: true}
    ✓ should match a/b (2)/c (1) with !*/*/* and {nonegate: true}
    ✓ should match a/b/c [def] with !*/*/*
    ✓ should match a/b/c [def] with !*/*/* and {dot: true}
    ✓ should match a/b/c [def] with !*/*/* and {nonegate: true}
    ✓ should match a with !/**
    ✓ should match a with !/** and {dot: true}
    ✓ should match a with !/** and {nonegate: true}
    ✓ should match a.md with !/**
    ✓ should match a.md with !/** and {dot: true}
    ✓ should match a.md with !/** and {nonegate: true}
    ✓ should match a.js with !/**
    ✓ should match a.js with !/** and {dot: true}
    ✓ should match a.js with !/** and {nonegate: true}
    ✓ should match a/ with !/**
    ✓ should match a/ with !/** and {dot: true}
    ✓ should match a/ with !/** and {nonegate: true}
    ✓ should match a/b with !/**
    ✓ should match a/b with !/** and {dot: true}
    ✓ should match a/b with !/** and {nonegate: true}
    ✓ should match a/b/.c.md with !/**
    ✓ should match a/b/.c.md with !/** and {dot: true}
    ✓ should match a/b/.c.md with !/** and {nonegate: true}
    ✓ should match a/b/c with !/**
    ✓ should match a/b/c with !/** and {dot: true}
    ✓ should match a/b/c with !/** and {nonegate: true}
    ✓ should match a/b/c.md with !/**
    ✓ should match a/b/c.md with !/** and {dot: true}
    ✓ should match a/b/c.md with !/** and {nonegate: true}
    ✓ should match a/b/c/ with !/**
    ✓ should match a/b/c/ with !/** and {dot: true}
    ✓ should match a/b/c/ with !/** and {nonegate: true}
    ✓ should match a/b/c/d with !/**
    ✓ should match a/b/c/d with !/** and {dot: true}
    ✓ should match a/b/c/d with !/** and {nonegate: true}
    ✓ should match a/b/c/d/ with !/**
    ✓ should match a/b/c/d/ with !/** and {dot: true}
    ✓ should match a/b/c/d/ with !/** and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with !/**
    ✓ should match a/b/c/d/e/f/z.js with !/** and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with !/** and {nonegate: true}
    ✓ should match a/b/c/z.js with !/**
    ✓ should match a/b/c/z.js with !/** and {dot: true}
    ✓ should match a/b/c/z.js with !/** and {nonegate: true}
    ✓ should match a/bb with !/**
    ✓ should match a/bb with !/** and {dot: true}
    ✓ should match a/bb with !/** and {nonegate: true}
    ✓ should match a/cb with !/**
    ✓ should match a/cb with !/** and {dot: true}
    ✓ should match a/cb with !/** and {nonegate: true}
    ✓ should match abbbz with !/**
    ✓ should match abbbz with !/** and {dot: true}
    ✓ should match abbbz with !/** and {nonegate: true}
    ✓ should match abc with !/**
    ✓ should match abc with !/** and {dot: true}
    ✓ should match abc with !/** and {nonegate: true}
    ✓ should match abd with !/**
    ✓ should match abd with !/** and {dot: true}
    ✓ should match abd with !/** and {nonegate: true}
    ✓ should match z.js with !/**
    ✓ should match z.js with !/** and {dot: true}
    ✓ should match z.js with !/** and {nonegate: true}
    ✓ should match za.js with !/**
    ✓ should match za.js with !/** and {dot: true}
    ✓ should match za.js with !/** and {nonegate: true}
    ✓ should match !a.js with !/**
    ✓ should match !a.js with !/** and {dot: true}
    ✓ should match !a.js with !/** and {nonegate: true}
    ✓ should match !a/b with !/**
    ✓ should match !a/b with !/** and {dot: true}
    ✓ should match !a/b with !/** and {nonegate: true}
    ✓ should match !a/b/ with !/**
    ✓ should match !a/b/ with !/** and {dot: true}
    ✓ should match !a/b/ with !/** and {nonegate: true}
    ✓ should match !a/b/c with !/**
    ✓ should match !a/b/c with !/** and {dot: true}
    ✓ should match !a/b/c with !/** and {nonegate: true}
    ✓ should match !a/b/c/ with !/**
    ✓ should match !a/b/c/ with !/** and {dot: true}
    ✓ should match !a/b/c/ with !/** and {nonegate: true}
    ✓ should match !a/!b with !/**
    ✓ should match !a/!b with !/** and {dot: true}
    ✓ should match !a/!b with !/** and {nonegate: true}
    ✓ should match !a/!b/c with !/**
    ✓ should match !a/!b/c with !/** and {dot: true}
    ✓ should match !a/!b/c with !/** and {nonegate: true}
    ✓ should match !a/!b/c/d with !/**
    ✓ should match !a/!b/c/d with !/** and {dot: true}
    ✓ should match !a/!b/c/d with !/** and {nonegate: true}
    ✓ should match !a/b/.c.md with !/**
    ✓ should match !a/b/.c.md with !/** and {dot: true}
    ✓ should match !a/b/.c.md with !/** and {nonegate: true}
    ✓ should match /a/ with !/**
    ✓ should match /a/ with !/** and {dot: true}
    ✓ should match /a/ with !/** and {nonegate: true}
    ✓ should match /a/b with !/**
    ✓ should match /a/b with !/** and {dot: true}
    ✓ should match /a/b with !/** and {nonegate: true}
    ✓ should match /a/cb with !/**
    ✓ should match /a/cb with !/** and {dot: true}
    ✓ should match /a/cb with !/** and {nonegate: true}
    ✓ should match /a/bb with !/**
    ✓ should match /a/bb with !/** and {dot: true}
    ✓ should match /a/bb with !/** and {nonegate: true}
    ✓ should match /a/b/c with !/**
    ✓ should match /a/b/c with !/** and {dot: true}
    ✓ should match /a/b/c with !/** and {nonegate: true}
    ✓ should match /a/b/c/ with !/**
    ✓ should match /a/b/c/ with !/** and {dot: true}
    ✓ should match /a/b/c/ with !/** and {nonegate: true}
    ✓ should match /a/b/c/d with !/**
    ✓ should match /a/b/c/d with !/** and {dot: true}
    ✓ should match /a/b/c/d with !/** and {nonegate: true}
    ✓ should match /a/b/c/d/ with !/**
    ✓ should match /a/b/c/d/ with !/** and {dot: true}
    ✓ should match /a/b/c/d/ with !/** and {nonegate: true}
    ✓ should match . with !/**
    ✓ should match . with !/** and {dot: true}
    ✓ should match . with !/** and {nonegate: true}
    ✓ should match ./ with !/**
    ✓ should match ./ with !/** and {dot: true}
    ✓ should match ./ with !/** and {nonegate: true}
    ✓ should match .. with !/**
    ✓ should match .. with !/** and {dot: true}
    ✓ should match .. with !/** and {nonegate: true}
    ✓ should match ../c with !/**
    ✓ should match ../c with !/** and {dot: true}
    ✓ should match ../c with !/** and {nonegate: true}
    ✓ should match ../c with !/**
    ✓ should match ../c with !/** and {dot: true}
    ✓ should match ../c with !/** and {nonegate: true}
    ✓ should match ./../c with !/**
    ✓ should match ./../c with !/** and {dot: true}
    ✓ should match ./../c with !/** and {nonegate: true}
    ✓ should match ./a/../c with !/**
    ✓ should match ./a/../c with !/** and {dot: true}
    ✓ should match ./a/../c with !/** and {nonegate: true}
    ✓ should match /.. with !/**
    ✓ should match /.. with !/** and {dot: true}
    ✓ should match /.. with !/** and {nonegate: true}
    ✓ should match /../c with !/**
    ✓ should match /../c with !/** and {dot: true}
    ✓ should match /../c with !/** and {nonegate: true}
    ✓ should match /../.c with !/**
    ✓ should match /../.c with !/** and {dot: true}
    ✓ should match /../.c with !/** and {nonegate: true}
    ✓ should match /../.c/ with !/**
    ✓ should match /../.c/ with !/** and {dot: true}
    ✓ should match /../.c/ with !/** and {nonegate: true}
    ✓ should match /a/../c with !/**
    ✓ should match /a/../c with !/** and {dot: true}
    ✓ should match /a/../c with !/** and {nonegate: true}
    ✓ should match a/../c with !/**
    ✓ should match a/../c with !/** and {dot: true}
    ✓ should match a/../c with !/** and {nonegate: true}
    ✓ should match ../.b/.c with !/**
    ✓ should match ../.b/.c with !/** and {dot: true}
    ✓ should match ../.b/.c with !/** and {nonegate: true}
    ✓ should match ../b/.c with !/**
    ✓ should match ../b/.c with !/** and {dot: true}
    ✓ should match ../b/.c with !/** and {nonegate: true}
    ✓ should match ./.b/.c with !/**
    ✓ should match ./.b/.c with !/** and {dot: true}
    ✓ should match ./.b/.c with !/** and {nonegate: true}
    ✓ should match ./b/.c with !/**
    ✓ should match ./b/.c with !/** and {dot: true}
    ✓ should match ./b/.c with !/** and {nonegate: true}
    ✓ should match .b with !/**
    ✓ should match .b with !/** and {dot: true}
    ✓ should match .b with !/** and {nonegate: true}
    ✓ should match .b.c with !/**
    ✓ should match .b.c with !/** and {dot: true}
    ✓ should match .b.c with !/** and {nonegate: true}
    ✓ should match .b.c/ with !/**
    ✓ should match .b.c/ with !/** and {dot: true}
    ✓ should match .b.c/ with !/** and {nonegate: true}
    ✓ should match .b/ with !/**
    ✓ should match .b/ with !/** and {dot: true}
    ✓ should match .b/ with !/** and {nonegate: true}
    ✓ should match .b/.c with !/**
    ✓ should match .b/.c with !/** and {dot: true}
    ✓ should match .b/.c with !/** and {nonegate: true}
    ✓ should match .b/c with !/**
    ✓ should match .b/c with !/** and {dot: true}
    ✓ should match .b/c with !/** and {nonegate: true}
    ✓ should match b/.c with !/**
    ✓ should match b/.c with !/** and {dot: true}
    ✓ should match b/.c with !/** and {nonegate: true}
    ✓ should match b/.c/ with !/**
    ✓ should match b/.c/ with !/** and {dot: true}
    ✓ should match b/.c/ with !/** and {nonegate: true}
    ✓ should match a/+b/c with !/**
    ✓ should match a/+b/c with !/** and {dot: true}
    ✓ should match a/+b/c with !/** and {nonegate: true}
    ✓ should match +a/+b/c with !/**
    ✓ should match +a/+b/c with !/** and {dot: true}
    ✓ should match +a/+b/c with !/** and {nonegate: true}
    ✓ should match a (foo) with !/**
    ✓ should match a (foo) with !/** and {dot: true}
    ✓ should match a (foo) with !/** and {nonegate: true}
    ✓ should match a (foo)/(bar) with !/**
    ✓ should match a (foo)/(bar) with !/** and {dot: true}
    ✓ should match a (foo)/(bar) with !/** and {nonegate: true}
    ✓ should match a/b/c (1) with !/**
    ✓ should match a/b/c (1) with !/** and {dot: true}
    ✓ should match a/b/c (1) with !/** and {nonegate: true}
    ✓ should match a/b (2)/c (1) with !/**
    ✓ should match a/b (2)/c (1) with !/** and {dot: true}
    ✓ should match a/b (2)/c (1) with !/** and {nonegate: true}
    ✓ should match a/b/c [def] with !/**
    ✓ should match a/b/c [def] with !/** and {dot: true}
    ✓ should match a/b/c [def] with !/** and {nonegate: true}
    ✓ should match a with !/**/
    ✓ should match a with !/**/ and {dot: true}
    ✓ should match a with !/**/ and {nonegate: true}
    ✓ should match a.md with !/**/
    ✓ should match a.md with !/**/ and {dot: true}
    ✓ should match a.md with !/**/ and {nonegate: true}
    ✓ should match a.js with !/**/
    ✓ should match a.js with !/**/ and {dot: true}
    ✓ should match a.js with !/**/ and {nonegate: true}
    ✓ should match a/ with !/**/
    ✓ should match a/ with !/**/ and {dot: true}
    ✓ should match a/ with !/**/ and {nonegate: true}
    ✓ should match a/b with !/**/
    ✓ should match a/b with !/**/ and {dot: true}
    ✓ should match a/b with !/**/ and {nonegate: true}
    ✓ should match a/b/.c.md with !/**/
    ✓ should match a/b/.c.md with !/**/ and {dot: true}
    ✓ should match a/b/.c.md with !/**/ and {nonegate: true}
    ✓ should match a/b/c with !/**/
    ✓ should match a/b/c with !/**/ and {dot: true}
    ✓ should match a/b/c with !/**/ and {nonegate: true}
    ✓ should match a/b/c.md with !/**/
    ✓ should match a/b/c.md with !/**/ and {dot: true}
    ✓ should match a/b/c.md with !/**/ and {nonegate: true}
    ✓ should match a/b/c/ with !/**/
    ✓ should match a/b/c/ with !/**/ and {dot: true}
    ✓ should match a/b/c/ with !/**/ and {nonegate: true}
    ✓ should match a/b/c/d with !/**/
    ✓ should match a/b/c/d with !/**/ and {dot: true}
    ✓ should match a/b/c/d with !/**/ and {nonegate: true}
    ✓ should match a/b/c/d/ with !/**/
    ✓ should match a/b/c/d/ with !/**/ and {dot: true}
    ✓ should match a/b/c/d/ with !/**/ and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with !/**/
    ✓ should match a/b/c/d/e/f/z.js with !/**/ and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with !/**/ and {nonegate: true}
    ✓ should match a/b/c/z.js with !/**/
    ✓ should match a/b/c/z.js with !/**/ and {dot: true}
    ✓ should match a/b/c/z.js with !/**/ and {nonegate: true}
    ✓ should match a/bb with !/**/
    ✓ should match a/bb with !/**/ and {dot: true}
    ✓ should match a/bb with !/**/ and {nonegate: true}
    ✓ should match a/cb with !/**/
    ✓ should match a/cb with !/**/ and {dot: true}
    ✓ should match a/cb with !/**/ and {nonegate: true}
    ✓ should match abbbz with !/**/
    ✓ should match abbbz with !/**/ and {dot: true}
    ✓ should match abbbz with !/**/ and {nonegate: true}
    ✓ should match abc with !/**/
    ✓ should match abc with !/**/ and {dot: true}
    ✓ should match abc with !/**/ and {nonegate: true}
    ✓ should match abd with !/**/
    ✓ should match abd with !/**/ and {dot: true}
    ✓ should match abd with !/**/ and {nonegate: true}
    ✓ should match z.js with !/**/
    ✓ should match z.js with !/**/ and {dot: true}
    ✓ should match z.js with !/**/ and {nonegate: true}
    ✓ should match za.js with !/**/
    ✓ should match za.js with !/**/ and {dot: true}
    ✓ should match za.js with !/**/ and {nonegate: true}
    ✓ should match !a.js with !/**/
    ✓ should match !a.js with !/**/ and {dot: true}
    ✓ should match !a.js with !/**/ and {nonegate: true}
    ✓ should match !a/b with !/**/
    ✓ should match !a/b with !/**/ and {dot: true}
    ✓ should match !a/b with !/**/ and {nonegate: true}
    ✓ should match !a/b/ with !/**/
    ✓ should match !a/b/ with !/**/ and {dot: true}
    ✓ should match !a/b/ with !/**/ and {nonegate: true}
    ✓ should match !a/b/c with !/**/
    ✓ should match !a/b/c with !/**/ and {dot: true}
    ✓ should match !a/b/c with !/**/ and {nonegate: true}
    ✓ should match !a/b/c/ with !/**/
    ✓ should match !a/b/c/ with !/**/ and {dot: true}
    ✓ should match !a/b/c/ with !/**/ and {nonegate: true}
    ✓ should match !a/!b with !/**/
    ✓ should match !a/!b with !/**/ and {dot: true}
    ✓ should match !a/!b with !/**/ and {nonegate: true}
    ✓ should match !a/!b/c with !/**/
    ✓ should match !a/!b/c with !/**/ and {dot: true}
    ✓ should match !a/!b/c with !/**/ and {nonegate: true}
    ✓ should match !a/!b/c/d with !/**/
    ✓ should match !a/!b/c/d with !/**/ and {dot: true}
    ✓ should match !a/!b/c/d with !/**/ and {nonegate: true}
    ✓ should match !a/b/.c.md with !/**/
    ✓ should match !a/b/.c.md with !/**/ and {dot: true}
    ✓ should match !a/b/.c.md with !/**/ and {nonegate: true}
    ✓ should match /a/ with !/**/
    ✓ should match /a/ with !/**/ and {dot: true}
    ✓ should match /a/ with !/**/ and {nonegate: true}
    ✓ should match /a/b with !/**/
    ✓ should match /a/b with !/**/ and {dot: true}
    ✓ should match /a/b with !/**/ and {nonegate: true}
    ✓ should match /a/cb with !/**/
    ✓ should match /a/cb with !/**/ and {dot: true}
    ✓ should match /a/cb with !/**/ and {nonegate: true}
    ✓ should match /a/bb with !/**/
    ✓ should match /a/bb with !/**/ and {dot: true}
    ✓ should match /a/bb with !/**/ and {nonegate: true}
    ✓ should match /a/b/c with !/**/
    ✓ should match /a/b/c with !/**/ and {dot: true}
    ✓ should match /a/b/c with !/**/ and {nonegate: true}
    ✓ should match /a/b/c/ with !/**/
    ✓ should match /a/b/c/ with !/**/ and {dot: true}
    ✓ should match /a/b/c/ with !/**/ and {nonegate: true}
    ✓ should match /a/b/c/d with !/**/
    ✓ should match /a/b/c/d with !/**/ and {dot: true}
    ✓ should match /a/b/c/d with !/**/ and {nonegate: true}
    ✓ should match /a/b/c/d/ with !/**/
    ✓ should match /a/b/c/d/ with !/**/ and {dot: true}
    ✓ should match /a/b/c/d/ with !/**/ and {nonegate: true}
    ✓ should match . with !/**/
    ✓ should match . with !/**/ and {dot: true}
    ✓ should match . with !/**/ and {nonegate: true}
    ✓ should match ./ with !/**/
    ✓ should match ./ with !/**/ and {dot: true}
    ✓ should match ./ with !/**/ and {nonegate: true}
    ✓ should match .. with !/**/
    ✓ should match .. with !/**/ and {dot: true}
    ✓ should match .. with !/**/ and {nonegate: true}
    ✓ should match ../c with !/**/
    ✓ should match ../c with !/**/ and {dot: true}
    ✓ should match ../c with !/**/ and {nonegate: true}
    ✓ should match ../c with !/**/
    ✓ should match ../c with !/**/ and {dot: true}
    ✓ should match ../c with !/**/ and {nonegate: true}
    ✓ should match ./../c with !/**/
    ✓ should match ./../c with !/**/ and {dot: true}
    ✓ should match ./../c with !/**/ and {nonegate: true}
    ✓ should match ./a/../c with !/**/
    ✓ should match ./a/../c with !/**/ and {dot: true}
    ✓ should match ./a/../c with !/**/ and {nonegate: true}
    ✓ should match /.. with !/**/
    ✓ should match /.. with !/**/ and {dot: true}
    ✓ should match /.. with !/**/ and {nonegate: true}
    ✓ should match /../c with !/**/
    ✓ should match /../c with !/**/ and {dot: true}
    ✓ should match /../c with !/**/ and {nonegate: true}
    ✓ should match /../.c with !/**/
    ✓ should match /../.c with !/**/ and {dot: true}
    ✓ should match /../.c with !/**/ and {nonegate: true}
    ✓ should match /../.c/ with !/**/
    ✓ should match /../.c/ with !/**/ and {dot: true}
    ✓ should match /../.c/ with !/**/ and {nonegate: true}
    ✓ should match /a/../c with !/**/
    ✓ should match /a/../c with !/**/ and {dot: true}
    ✓ should match /a/../c with !/**/ and {nonegate: true}
    ✓ should match a/../c with !/**/
    ✓ should match a/../c with !/**/ and {dot: true}
    ✓ should match a/../c with !/**/ and {nonegate: true}
    ✓ should match ../.b/.c with !/**/
    ✓ should match ../.b/.c with !/**/ and {dot: true}
    ✓ should match ../.b/.c with !/**/ and {nonegate: true}
    ✓ should match ../b/.c with !/**/
    ✓ should match ../b/.c with !/**/ and {dot: true}
    ✓ should match ../b/.c with !/**/ and {nonegate: true}
    ✓ should match ./.b/.c with !/**/
    ✓ should match ./.b/.c with !/**/ and {dot: true}
    ✓ should match ./.b/.c with !/**/ and {nonegate: true}
    ✓ should match ./b/.c with !/**/
    ✓ should match ./b/.c with !/**/ and {dot: true}
    ✓ should match ./b/.c with !/**/ and {nonegate: true}
    ✓ should match .b with !/**/
    ✓ should match .b with !/**/ and {dot: true}
    ✓ should match .b with !/**/ and {nonegate: true}
    ✓ should match .b.c with !/**/
    ✓ should match .b.c with !/**/ and {dot: true}
    ✓ should match .b.c with !/**/ and {nonegate: true}
    ✓ should match .b.c/ with !/**/
    ✓ should match .b.c/ with !/**/ and {dot: true}
    ✓ should match .b.c/ with !/**/ and {nonegate: true}
    ✓ should match .b/ with !/**/
    ✓ should match .b/ with !/**/ and {dot: true}
    ✓ should match .b/ with !/**/ and {nonegate: true}
    ✓ should match .b/.c with !/**/
    ✓ should match .b/.c with !/**/ and {dot: true}
    ✓ should match .b/.c with !/**/ and {nonegate: true}
    ✓ should match .b/c with !/**/
    ✓ should match .b/c with !/**/ and {dot: true}
    ✓ should match .b/c with !/**/ and {nonegate: true}
    ✓ should match b/.c with !/**/
    ✓ should match b/.c with !/**/ and {dot: true}
    ✓ should match b/.c with !/**/ and {nonegate: true}
    ✓ should match b/.c/ with !/**/
    ✓ should match b/.c/ with !/**/ and {dot: true}
    ✓ should match b/.c/ with !/**/ and {nonegate: true}
    ✓ should match a/+b/c with !/**/
    ✓ should match a/+b/c with !/**/ and {dot: true}
    ✓ should match a/+b/c with !/**/ and {nonegate: true}
    ✓ should match +a/+b/c with !/**/
    ✓ should match +a/+b/c with !/**/ and {dot: true}
    ✓ should match +a/+b/c with !/**/ and {nonegate: true}
    ✓ should match a (foo) with !/**/
    ✓ should match a (foo) with !/**/ and {dot: true}
    ✓ should match a (foo) with !/**/ and {nonegate: true}
    ✓ should match a (foo)/(bar) with !/**/
    ✓ should match a (foo)/(bar) with !/**/ and {dot: true}
    ✓ should match a (foo)/(bar) with !/**/ and {nonegate: true}
    ✓ should match a/b/c (1) with !/**/
    ✓ should match a/b/c (1) with !/**/ and {dot: true}
    ✓ should match a/b/c (1) with !/**/ and {nonegate: true}
    ✓ should match a/b (2)/c (1) with !/**/
    ✓ should match a/b (2)/c (1) with !/**/ and {dot: true}
    ✓ should match a/b (2)/c (1) with !/**/ and {nonegate: true}
    ✓ should match a/b/c [def] with !/**/
    ✓ should match a/b/c [def] with !/**/ and {dot: true}
    ✓ should match a/b/c [def] with !/**/ and {nonegate: true}
    ✓ should match a with !/*/
    ✓ should match a with !/*/ and {dot: true}
    ✓ should match a with !/*/ and {nonegate: true}
    ✓ should match a.md with !/*/
    ✓ should match a.md with !/*/ and {dot: true}
    ✓ should match a.md with !/*/ and {nonegate: true}
    ✓ should match a.js with !/*/
    ✓ should match a.js with !/*/ and {dot: true}
    ✓ should match a.js with !/*/ and {nonegate: true}
    ✓ should match a/ with !/*/
    ✓ should match a/ with !/*/ and {dot: true}
    ✓ should match a/ with !/*/ and {nonegate: true}
    ✓ should match a/b with !/*/
    ✓ should match a/b with !/*/ and {dot: true}
    ✓ should match a/b with !/*/ and {nonegate: true}
    ✓ should match a/b/.c.md with !/*/
    ✓ should match a/b/.c.md with !/*/ and {dot: true}
    ✓ should match a/b/.c.md with !/*/ and {nonegate: true}
    ✓ should match a/b/c with !/*/
    ✓ should match a/b/c with !/*/ and {dot: true}
    ✓ should match a/b/c with !/*/ and {nonegate: true}
    ✓ should match a/b/c.md with !/*/
    ✓ should match a/b/c.md with !/*/ and {dot: true}
    ✓ should match a/b/c.md with !/*/ and {nonegate: true}
    ✓ should match a/b/c/ with !/*/
    ✓ should match a/b/c/ with !/*/ and {dot: true}
    ✓ should match a/b/c/ with !/*/ and {nonegate: true}
    ✓ should match a/b/c/d with !/*/
    ✓ should match a/b/c/d with !/*/ and {dot: true}
    ✓ should match a/b/c/d with !/*/ and {nonegate: true}
    ✓ should match a/b/c/d/ with !/*/
    ✓ should match a/b/c/d/ with !/*/ and {dot: true}
    ✓ should match a/b/c/d/ with !/*/ and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with !/*/
    ✓ should match a/b/c/d/e/f/z.js with !/*/ and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with !/*/ and {nonegate: true}
    ✓ should match a/b/c/z.js with !/*/
    ✓ should match a/b/c/z.js with !/*/ and {dot: true}
    ✓ should match a/b/c/z.js with !/*/ and {nonegate: true}
    ✓ should match a/bb with !/*/
    ✓ should match a/bb with !/*/ and {dot: true}
    ✓ should match a/bb with !/*/ and {nonegate: true}
    ✓ should match a/cb with !/*/
    ✓ should match a/cb with !/*/ and {dot: true}
    ✓ should match a/cb with !/*/ and {nonegate: true}
    ✓ should match abbbz with !/*/
    ✓ should match abbbz with !/*/ and {dot: true}
    ✓ should match abbbz with !/*/ and {nonegate: true}
    ✓ should match abc with !/*/
    ✓ should match abc with !/*/ and {dot: true}
    ✓ should match abc with !/*/ and {nonegate: true}
    ✓ should match abd with !/*/
    ✓ should match abd with !/*/ and {dot: true}
    ✓ should match abd with !/*/ and {nonegate: true}
    ✓ should match z.js with !/*/
    ✓ should match z.js with !/*/ and {dot: true}
    ✓ should match z.js with !/*/ and {nonegate: true}
    ✓ should match za.js with !/*/
    ✓ should match za.js with !/*/ and {dot: true}
    ✓ should match za.js with !/*/ and {nonegate: true}
    ✓ should match !a.js with !/*/
    ✓ should match !a.js with !/*/ and {dot: true}
    ✓ should match !a.js with !/*/ and {nonegate: true}
    ✓ should match !a/b with !/*/
    ✓ should match !a/b with !/*/ and {dot: true}
    ✓ should match !a/b with !/*/ and {nonegate: true}
    ✓ should match !a/b/ with !/*/
    ✓ should match !a/b/ with !/*/ and {dot: true}
    ✓ should match !a/b/ with !/*/ and {nonegate: true}
    ✓ should match !a/b/c with !/*/
    ✓ should match !a/b/c with !/*/ and {dot: true}
    ✓ should match !a/b/c with !/*/ and {nonegate: true}
    ✓ should match !a/b/c/ with !/*/
    ✓ should match !a/b/c/ with !/*/ and {dot: true}
    ✓ should match !a/b/c/ with !/*/ and {nonegate: true}
    ✓ should match !a/!b with !/*/
    ✓ should match !a/!b with !/*/ and {dot: true}
    ✓ should match !a/!b with !/*/ and {nonegate: true}
    ✓ should match !a/!b/c with !/*/
    ✓ should match !a/!b/c with !/*/ and {dot: true}
    ✓ should match !a/!b/c with !/*/ and {nonegate: true}
    ✓ should match !a/!b/c/d with !/*/
    ✓ should match !a/!b/c/d with !/*/ and {dot: true}
    ✓ should match !a/!b/c/d with !/*/ and {nonegate: true}
    ✓ should match !a/b/.c.md with !/*/
    ✓ should match !a/b/.c.md with !/*/ and {dot: true}
    ✓ should match !a/b/.c.md with !/*/ and {nonegate: true}
    ✓ should match /a/ with !/*/
    ✓ should match /a/ with !/*/ and {dot: true}
    ✓ should match /a/ with !/*/ and {nonegate: true}
    ✓ should match /a/b with !/*/
    ✓ should match /a/b with !/*/ and {dot: true}
    ✓ should match /a/b with !/*/ and {nonegate: true}
    ✓ should match /a/cb with !/*/
    ✓ should match /a/cb with !/*/ and {dot: true}
    ✓ should match /a/cb with !/*/ and {nonegate: true}
    ✓ should match /a/bb with !/*/
    ✓ should match /a/bb with !/*/ and {dot: true}
    ✓ should match /a/bb with !/*/ and {nonegate: true}
    ✓ should match /a/b/c with !/*/
    ✓ should match /a/b/c with !/*/ and {dot: true}
    ✓ should match /a/b/c with !/*/ and {nonegate: true}
    ✓ should match /a/b/c/ with !/*/
    ✓ should match /a/b/c/ with !/*/ and {dot: true}
    ✓ should match /a/b/c/ with !/*/ and {nonegate: true}
    ✓ should match /a/b/c/d with !/*/
    ✓ should match /a/b/c/d with !/*/ and {dot: true}
    ✓ should match /a/b/c/d with !/*/ and {nonegate: true}
    ✓ should match /a/b/c/d/ with !/*/
    ✓ should match /a/b/c/d/ with !/*/ and {dot: true}
    ✓ should match /a/b/c/d/ with !/*/ and {nonegate: true}
    ✓ should match . with !/*/
    ✓ should match . with !/*/ and {dot: true}
    ✓ should match . with !/*/ and {nonegate: true}
    ✓ should match ./ with !/*/
    ✓ should match ./ with !/*/ and {dot: true}
    ✓ should match ./ with !/*/ and {nonegate: true}
    ✓ should match .. with !/*/
    ✓ should match .. with !/*/ and {dot: true}
    ✓ should match .. with !/*/ and {nonegate: true}
    ✓ should match ../c with !/*/
    ✓ should match ../c with !/*/ and {dot: true}
    ✓ should match ../c with !/*/ and {nonegate: true}
    ✓ should match ../c with !/*/
    ✓ should match ../c with !/*/ and {dot: true}
    ✓ should match ../c with !/*/ and {nonegate: true}
    ✓ should match ./../c with !/*/
    ✓ should match ./../c with !/*/ and {dot: true}
    ✓ should match ./../c with !/*/ and {nonegate: true}
    ✓ should match ./a/../c with !/*/
    ✓ should match ./a/../c with !/*/ and {dot: true}
    ✓ should match ./a/../c with !/*/ and {nonegate: true}
    ✓ should match /.. with !/*/
    ✓ should match /.. with !/*/ and {dot: true}
    ✓ should match /.. with !/*/ and {nonegate: true}
    ✓ should match /../c with !/*/
    ✓ should match /../c with !/*/ and {dot: true}
    ✓ should match /../c with !/*/ and {nonegate: true}
    ✓ should match /../.c with !/*/
    ✓ should match /../.c with !/*/ and {dot: true}
    ✓ should match /../.c with !/*/ and {nonegate: true}
    ✓ should match /../.c/ with !/*/
    ✓ should match /../.c/ with !/*/ and {dot: true}
    ✓ should match /../.c/ with !/*/ and {nonegate: true}
    ✓ should match /a/../c with !/*/
    ✓ should match /a/../c with !/*/ and {dot: true}
    ✓ should match /a/../c with !/*/ and {nonegate: true}
    ✓ should match a/../c with !/*/
    ✓ should match a/../c with !/*/ and {dot: true}
    ✓ should match a/../c with !/*/ and {nonegate: true}
    ✓ should match ../.b/.c with !/*/
    ✓ should match ../.b/.c with !/*/ and {dot: true}
    ✓ should match ../.b/.c with !/*/ and {nonegate: true}
    ✓ should match ../b/.c with !/*/
    ✓ should match ../b/.c with !/*/ and {dot: true}
    ✓ should match ../b/.c with !/*/ and {nonegate: true}
    ✓ should match ./.b/.c with !/*/
    ✓ should match ./.b/.c with !/*/ and {dot: true}
    ✓ should match ./.b/.c with !/*/ and {nonegate: true}
    ✓ should match ./b/.c with !/*/
    ✓ should match ./b/.c with !/*/ and {dot: true}
    ✓ should match ./b/.c with !/*/ and {nonegate: true}
    ✓ should match .b with !/*/
    ✓ should match .b with !/*/ and {dot: true}
    ✓ should match .b with !/*/ and {nonegate: true}
    ✓ should match .b.c with !/*/
    ✓ should match .b.c with !/*/ and {dot: true}
    ✓ should match .b.c with !/*/ and {nonegate: true}
    ✓ should match .b.c/ with !/*/
    ✓ should match .b.c/ with !/*/ and {dot: true}
    ✓ should match .b.c/ with !/*/ and {nonegate: true}
    ✓ should match .b/ with !/*/
    ✓ should match .b/ with !/*/ and {dot: true}
    ✓ should match .b/ with !/*/ and {nonegate: true}
    ✓ should match .b/.c with !/*/
    ✓ should match .b/.c with !/*/ and {dot: true}
    ✓ should match .b/.c with !/*/ and {nonegate: true}
    ✓ should match .b/c with !/*/
    ✓ should match .b/c with !/*/ and {dot: true}
    ✓ should match .b/c with !/*/ and {nonegate: true}
    ✓ should match b/.c with !/*/
    ✓ should match b/.c with !/*/ and {dot: true}
    ✓ should match b/.c with !/*/ and {nonegate: true}
    ✓ should match b/.c/ with !/*/
    ✓ should match b/.c/ with !/*/ and {dot: true}
    ✓ should match b/.c/ with !/*/ and {nonegate: true}
    ✓ should match a/+b/c with !/*/
    ✓ should match a/+b/c with !/*/ and {dot: true}
    ✓ should match a/+b/c with !/*/ and {nonegate: true}
    ✓ should match +a/+b/c with !/*/
    ✓ should match +a/+b/c with !/*/ and {dot: true}
    ✓ should match +a/+b/c with !/*/ and {nonegate: true}
    ✓ should match a (foo) with !/*/
    ✓ should match a (foo) with !/*/ and {dot: true}
    ✓ should match a (foo) with !/*/ and {nonegate: true}
    ✓ should match a (foo)/(bar) with !/*/
    ✓ should match a (foo)/(bar) with !/*/ and {dot: true}
    ✓ should match a (foo)/(bar) with !/*/ and {nonegate: true}
    ✓ should match a/b/c (1) with !/*/
    ✓ should match a/b/c (1) with !/*/ and {dot: true}
    ✓ should match a/b/c (1) with !/*/ and {nonegate: true}
    ✓ should match a/b (2)/c (1) with !/*/
    ✓ should match a/b (2)/c (1) with !/*/ and {dot: true}
    ✓ should match a/b (2)/c (1) with !/*/ and {nonegate: true}
    ✓ should match a/b/c [def] with !/*/
    ✓ should match a/b/c [def] with !/*/ and {dot: true}
    ✓ should match a/b/c [def] with !/*/ and {nonegate: true}
    ✓ should match a with !/*/**/*/
    ✓ should match a with !/*/**/*/ and {dot: true}
    ✓ should match a with !/*/**/*/ and {nonegate: true}
    ✓ should match a.md with !/*/**/*/
    ✓ should match a.md with !/*/**/*/ and {dot: true}
    ✓ should match a.md with !/*/**/*/ and {nonegate: true}
    ✓ should match a.js with !/*/**/*/
    ✓ should match a.js with !/*/**/*/ and {dot: true}
    ✓ should match a.js with !/*/**/*/ and {nonegate: true}
    ✓ should match a/ with !/*/**/*/
    ✓ should match a/ with !/*/**/*/ and {dot: true}
    ✓ should match a/ with !/*/**/*/ and {nonegate: true}
    ✓ should match a/b with !/*/**/*/
    ✓ should match a/b with !/*/**/*/ and {dot: true}
    ✓ should match a/b with !/*/**/*/ and {nonegate: true}
    ✓ should match a/b/.c.md with !/*/**/*/
    ✓ should match a/b/.c.md with !/*/**/*/ and {dot: true}
    ✓ should match a/b/.c.md with !/*/**/*/ and {nonegate: true}
    ✓ should match a/b/c with !/*/**/*/
    ✓ should match a/b/c with !/*/**/*/ and {dot: true}
    ✓ should match a/b/c with !/*/**/*/ and {nonegate: true}
    ✓ should match a/b/c.md with !/*/**/*/
    ✓ should match a/b/c.md with !/*/**/*/ and {dot: true}
    ✓ should match a/b/c.md with !/*/**/*/ and {nonegate: true}
    ✓ should match a/b/c/ with !/*/**/*/
    ✓ should match a/b/c/ with !/*/**/*/ and {dot: true}
    ✓ should match a/b/c/ with !/*/**/*/ and {nonegate: true}
    ✓ should match a/b/c/d with !/*/**/*/
    ✓ should match a/b/c/d with !/*/**/*/ and {dot: true}
    ✓ should match a/b/c/d with !/*/**/*/ and {nonegate: true}
    ✓ should match a/b/c/d/ with !/*/**/*/
    ✓ should match a/b/c/d/ with !/*/**/*/ and {dot: true}
    ✓ should match a/b/c/d/ with !/*/**/*/ and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with !/*/**/*/
    ✓ should match a/b/c/d/e/f/z.js with !/*/**/*/ and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with !/*/**/*/ and {nonegate: true}
    ✓ should match a/b/c/z.js with !/*/**/*/
    ✓ should match a/b/c/z.js with !/*/**/*/ and {dot: true}
    ✓ should match a/b/c/z.js with !/*/**/*/ and {nonegate: true}
    ✓ should match a/bb with !/*/**/*/
    ✓ should match a/bb with !/*/**/*/ and {dot: true}
    ✓ should match a/bb with !/*/**/*/ and {nonegate: true}
    ✓ should match a/cb with !/*/**/*/
    ✓ should match a/cb with !/*/**/*/ and {dot: true}
    ✓ should match a/cb with !/*/**/*/ and {nonegate: true}
    ✓ should match abbbz with !/*/**/*/
    ✓ should match abbbz with !/*/**/*/ and {dot: true}
    ✓ should match abbbz with !/*/**/*/ and {nonegate: true}
    ✓ should match abc with !/*/**/*/
    ✓ should match abc with !/*/**/*/ and {dot: true}
    ✓ should match abc with !/*/**/*/ and {nonegate: true}
    ✓ should match abd with !/*/**/*/
    ✓ should match abd with !/*/**/*/ and {dot: true}
    ✓ should match abd with !/*/**/*/ and {nonegate: true}
    ✓ should match z.js with !/*/**/*/
    ✓ should match z.js with !/*/**/*/ and {dot: true}
    ✓ should match z.js with !/*/**/*/ and {nonegate: true}
    ✓ should match za.js with !/*/**/*/
    ✓ should match za.js with !/*/**/*/ and {dot: true}
    ✓ should match za.js with !/*/**/*/ and {nonegate: true}
    ✓ should match !a.js with !/*/**/*/
    ✓ should match !a.js with !/*/**/*/ and {dot: true}
    ✓ should match !a.js with !/*/**/*/ and {nonegate: true}
    ✓ should match !a/b with !/*/**/*/
    ✓ should match !a/b with !/*/**/*/ and {dot: true}
    ✓ should match !a/b with !/*/**/*/ and {nonegate: true}
    ✓ should match !a/b/ with !/*/**/*/
    ✓ should match !a/b/ with !/*/**/*/ and {dot: true}
    ✓ should match !a/b/ with !/*/**/*/ and {nonegate: true}
    ✓ should match !a/b/c with !/*/**/*/
    ✓ should match !a/b/c with !/*/**/*/ and {dot: true}
    ✓ should match !a/b/c with !/*/**/*/ and {nonegate: true}
    ✓ should match !a/b/c/ with !/*/**/*/
    ✓ should match !a/b/c/ with !/*/**/*/ and {dot: true}
    ✓ should match !a/b/c/ with !/*/**/*/ and {nonegate: true}
    ✓ should match !a/!b with !/*/**/*/
    ✓ should match !a/!b with !/*/**/*/ and {dot: true}
    ✓ should match !a/!b with !/*/**/*/ and {nonegate: true}
    ✓ should match !a/!b/c with !/*/**/*/
    ✓ should match !a/!b/c with !/*/**/*/ and {dot: true}
    ✓ should match !a/!b/c with !/*/**/*/ and {nonegate: true}
    ✓ should match !a/!b/c/d with !/*/**/*/
    ✓ should match !a/!b/c/d with !/*/**/*/ and {dot: true}
    ✓ should match !a/!b/c/d with !/*/**/*/ and {nonegate: true}
    ✓ should match !a/b/.c.md with !/*/**/*/
    ✓ should match !a/b/.c.md with !/*/**/*/ and {dot: true}
    ✓ should match !a/b/.c.md with !/*/**/*/ and {nonegate: true}
    ✓ should match /a/ with !/*/**/*/
    ✓ should match /a/ with !/*/**/*/ and {dot: true}
    ✓ should match /a/ with !/*/**/*/ and {nonegate: true}
    ✓ should match /a/b with !/*/**/*/
    ✓ should match /a/b with !/*/**/*/ and {dot: true}
    ✓ should match /a/b with !/*/**/*/ and {nonegate: true}
    ✓ should match /a/cb with !/*/**/*/
    ✓ should match /a/cb with !/*/**/*/ and {dot: true}
    ✓ should match /a/cb with !/*/**/*/ and {nonegate: true}
    ✓ should match /a/bb with !/*/**/*/
    ✓ should match /a/bb with !/*/**/*/ and {dot: true}
    ✓ should match /a/bb with !/*/**/*/ and {nonegate: true}
    ✓ should match /a/b/c with !/*/**/*/
    ✓ should match /a/b/c with !/*/**/*/ and {dot: true}
    ✓ should match /a/b/c with !/*/**/*/ and {nonegate: true}
    ✓ should match /a/b/c/ with !/*/**/*/
    ✓ should match /a/b/c/ with !/*/**/*/ and {dot: true}
    ✓ should match /a/b/c/ with !/*/**/*/ and {nonegate: true}
    ✓ should match /a/b/c/d with !/*/**/*/
    ✓ should match /a/b/c/d with !/*/**/*/ and {dot: true}
    ✓ should match /a/b/c/d with !/*/**/*/ and {nonegate: true}
    ✓ should match /a/b/c/d/ with !/*/**/*/
    ✓ should match /a/b/c/d/ with !/*/**/*/ and {dot: true}
    ✓ should match /a/b/c/d/ with !/*/**/*/ and {nonegate: true}
    ✓ should match . with !/*/**/*/
    ✓ should match . with !/*/**/*/ and {dot: true}
    ✓ should match . with !/*/**/*/ and {nonegate: true}
    ✓ should match ./ with !/*/**/*/
    ✓ should match ./ with !/*/**/*/ and {dot: true}
    ✓ should match ./ with !/*/**/*/ and {nonegate: true}
    ✓ should match .. with !/*/**/*/
    ✓ should match .. with !/*/**/*/ and {dot: true}
    ✓ should match .. with !/*/**/*/ and {nonegate: true}
    ✓ should match ../c with !/*/**/*/
    ✓ should match ../c with !/*/**/*/ and {dot: true}
    ✓ should match ../c with !/*/**/*/ and {nonegate: true}
    ✓ should match ../c with !/*/**/*/
    ✓ should match ../c with !/*/**/*/ and {dot: true}
    ✓ should match ../c with !/*/**/*/ and {nonegate: true}
    ✓ should match ./../c with !/*/**/*/
    ✓ should match ./../c with !/*/**/*/ and {dot: true}
    ✓ should match ./../c with !/*/**/*/ and {nonegate: true}
    ✓ should match ./a/../c with !/*/**/*/
    ✓ should match ./a/../c with !/*/**/*/ and {dot: true}
    ✓ should match ./a/../c with !/*/**/*/ and {nonegate: true}
    ✓ should match /.. with !/*/**/*/
    ✓ should match /.. with !/*/**/*/ and {dot: true}
    ✓ should match /.. with !/*/**/*/ and {nonegate: true}
    ✓ should match /../c with !/*/**/*/
    ✓ should match /../c with !/*/**/*/ and {dot: true}
    ✓ should match /../c with !/*/**/*/ and {nonegate: true}
    ✓ should match /../.c with !/*/**/*/
    ✓ should match /../.c with !/*/**/*/ and {dot: true}
    ✓ should match /../.c with !/*/**/*/ and {nonegate: true}
    ✓ should match /../.c/ with !/*/**/*/
    ✓ should match /../.c/ with !/*/**/*/ and {dot: true}
    ✓ should match /../.c/ with !/*/**/*/ and {nonegate: true}
    ✓ should match /a/../c with !/*/**/*/
    ✓ should match /a/../c with !/*/**/*/ and {dot: true}
    ✓ should match /a/../c with !/*/**/*/ and {nonegate: true}
    ✓ should match a/../c with !/*/**/*/
    ✓ should match a/../c with !/*/**/*/ and {dot: true}
    ✓ should match a/../c with !/*/**/*/ and {nonegate: true}
    ✓ should match ../.b/.c with !/*/**/*/
    ✓ should match ../.b/.c with !/*/**/*/ and {dot: true}
    ✓ should match ../.b/.c with !/*/**/*/ and {nonegate: true}
    ✓ should match ../b/.c with !/*/**/*/
    ✓ should match ../b/.c with !/*/**/*/ and {dot: true}
    ✓ should match ../b/.c with !/*/**/*/ and {nonegate: true}
    ✓ should match ./.b/.c with !/*/**/*/
    ✓ should match ./.b/.c with !/*/**/*/ and {dot: true}
    ✓ should match ./.b/.c with !/*/**/*/ and {nonegate: true}
    ✓ should match ./b/.c with !/*/**/*/
    ✓ should match ./b/.c with !/*/**/*/ and {dot: true}
    ✓ should match ./b/.c with !/*/**/*/ and {nonegate: true}
    ✓ should match .b with !/*/**/*/
    ✓ should match .b with !/*/**/*/ and {dot: true}
    ✓ should match .b with !/*/**/*/ and {nonegate: true}
    ✓ should match .b.c with !/*/**/*/
    ✓ should match .b.c with !/*/**/*/ and {dot: true}
    ✓ should match .b.c with !/*/**/*/ and {nonegate: true}
    ✓ should match .b.c/ with !/*/**/*/
    ✓ should match .b.c/ with !/*/**/*/ and {dot: true}
    ✓ should match .b.c/ with !/*/**/*/ and {nonegate: true}
    ✓ should match .b/ with !/*/**/*/
    ✓ should match .b/ with !/*/**/*/ and {dot: true}
    ✓ should match .b/ with !/*/**/*/ and {nonegate: true}
    ✓ should match .b/.c with !/*/**/*/
    ✓ should match .b/.c with !/*/**/*/ and {dot: true}
    ✓ should match .b/.c with !/*/**/*/ and {nonegate: true}
    ✓ should match .b/c with !/*/**/*/
    ✓ should match .b/c with !/*/**/*/ and {dot: true}
    ✓ should match .b/c with !/*/**/*/ and {nonegate: true}
    ✓ should match b/.c with !/*/**/*/
    ✓ should match b/.c with !/*/**/*/ and {dot: true}
    ✓ should match b/.c with !/*/**/*/ and {nonegate: true}
    ✓ should match b/.c/ with !/*/**/*/
    ✓ should match b/.c/ with !/*/**/*/ and {dot: true}
    ✓ should match b/.c/ with !/*/**/*/ and {nonegate: true}
    ✓ should match a/+b/c with !/*/**/*/
    ✓ should match a/+b/c with !/*/**/*/ and {dot: true}
    ✓ should match a/+b/c with !/*/**/*/ and {nonegate: true}
    ✓ should match +a/+b/c with !/*/**/*/
    ✓ should match +a/+b/c with !/*/**/*/ and {dot: true}
    ✓ should match +a/+b/c with !/*/**/*/ and {nonegate: true}
    ✓ should match a (foo) with !/*/**/*/
    ✓ should match a (foo) with !/*/**/*/ and {dot: true}
    ✓ should match a (foo) with !/*/**/*/ and {nonegate: true}
    ✓ should match a (foo)/(bar) with !/*/**/*/
    ✓ should match a (foo)/(bar) with !/*/**/*/ and {dot: true}
    ✓ should match a (foo)/(bar) with !/*/**/*/ and {nonegate: true}
    ✓ should match a/b/c (1) with !/*/**/*/
    ✓ should match a/b/c (1) with !/*/**/*/ and {dot: true}
    ✓ should match a/b/c (1) with !/*/**/*/ and {nonegate: true}
    ✓ should match a/b (2)/c (1) with !/*/**/*/
    ✓ should match a/b (2)/c (1) with !/*/**/*/ and {dot: true}
    ✓ should match a/b (2)/c (1) with !/*/**/*/ and {nonegate: true}
    ✓ should match a/b/c [def] with !/*/**/*/
    ✓ should match a/b/c [def] with !/*/**/*/ and {dot: true}
    ✓ should match a/b/c [def] with !/*/**/*/ and {nonegate: true}
    ✓ should match a with !/*/*/
    ✓ should match a with !/*/*/ and {dot: true}
    ✓ should match a with !/*/*/ and {nonegate: true}
    ✓ should match a.md with !/*/*/
    ✓ should match a.md with !/*/*/ and {dot: true}
    ✓ should match a.md with !/*/*/ and {nonegate: true}
    ✓ should match a.js with !/*/*/
    ✓ should match a.js with !/*/*/ and {dot: true}
    ✓ should match a.js with !/*/*/ and {nonegate: true}
    ✓ should match a/ with !/*/*/
    ✓ should match a/ with !/*/*/ and {dot: true}
    ✓ should match a/ with !/*/*/ and {nonegate: true}
    ✓ should match a/b with !/*/*/
    ✓ should match a/b with !/*/*/ and {dot: true}
    ✓ should match a/b with !/*/*/ and {nonegate: true}
    ✓ should match a/b/.c.md with !/*/*/
    ✓ should match a/b/.c.md with !/*/*/ and {dot: true}
    ✓ should match a/b/.c.md with !/*/*/ and {nonegate: true}
    ✓ should match a/b/c with !/*/*/
    ✓ should match a/b/c with !/*/*/ and {dot: true}
    ✓ should match a/b/c with !/*/*/ and {nonegate: true}
    ✓ should match a/b/c.md with !/*/*/
    ✓ should match a/b/c.md with !/*/*/ and {dot: true}
    ✓ should match a/b/c.md with !/*/*/ and {nonegate: true}
    ✓ should match a/b/c/ with !/*/*/
    ✓ should match a/b/c/ with !/*/*/ and {dot: true}
    ✓ should match a/b/c/ with !/*/*/ and {nonegate: true}
    ✓ should match a/b/c/d with !/*/*/
    ✓ should match a/b/c/d with !/*/*/ and {dot: true}
    ✓ should match a/b/c/d with !/*/*/ and {nonegate: true}
    ✓ should match a/b/c/d/ with !/*/*/
    ✓ should match a/b/c/d/ with !/*/*/ and {dot: true}
    ✓ should match a/b/c/d/ with !/*/*/ and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with !/*/*/
    ✓ should match a/b/c/d/e/f/z.js with !/*/*/ and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with !/*/*/ and {nonegate: true}
    ✓ should match a/b/c/z.js with !/*/*/
    ✓ should match a/b/c/z.js with !/*/*/ and {dot: true}
    ✓ should match a/b/c/z.js with !/*/*/ and {nonegate: true}
    ✓ should match a/bb with !/*/*/
    ✓ should match a/bb with !/*/*/ and {dot: true}
    ✓ should match a/bb with !/*/*/ and {nonegate: true}
    ✓ should match a/cb with !/*/*/
    ✓ should match a/cb with !/*/*/ and {dot: true}
    ✓ should match a/cb with !/*/*/ and {nonegate: true}
    ✓ should match abbbz with !/*/*/
    ✓ should match abbbz with !/*/*/ and {dot: true}
    ✓ should match abbbz with !/*/*/ and {nonegate: true}
    ✓ should match abc with !/*/*/
    ✓ should match abc with !/*/*/ and {dot: true}
    ✓ should match abc with !/*/*/ and {nonegate: true}
    ✓ should match abd with !/*/*/
    ✓ should match abd with !/*/*/ and {dot: true}
    ✓ should match abd with !/*/*/ and {nonegate: true}
    ✓ should match z.js with !/*/*/
    ✓ should match z.js with !/*/*/ and {dot: true}
    ✓ should match z.js with !/*/*/ and {nonegate: true}
    ✓ should match za.js with !/*/*/
    ✓ should match za.js with !/*/*/ and {dot: true}
    ✓ should match za.js with !/*/*/ and {nonegate: true}
    ✓ should match !a.js with !/*/*/
    ✓ should match !a.js with !/*/*/ and {dot: true}
    ✓ should match !a.js with !/*/*/ and {nonegate: true}
    ✓ should match !a/b with !/*/*/
    ✓ should match !a/b with !/*/*/ and {dot: true}
    ✓ should match !a/b with !/*/*/ and {nonegate: true}
    ✓ should match !a/b/ with !/*/*/
    ✓ should match !a/b/ with !/*/*/ and {dot: true}
    ✓ should match !a/b/ with !/*/*/ and {nonegate: true}
    ✓ should match !a/b/c with !/*/*/
    ✓ should match !a/b/c with !/*/*/ and {dot: true}
    ✓ should match !a/b/c with !/*/*/ and {nonegate: true}
    ✓ should match !a/b/c/ with !/*/*/
    ✓ should match !a/b/c/ with !/*/*/ and {dot: true}
    ✓ should match !a/b/c/ with !/*/*/ and {nonegate: true}
    ✓ should match !a/!b with !/*/*/
    ✓ should match !a/!b with !/*/*/ and {dot: true}
    ✓ should match !a/!b with !/*/*/ and {nonegate: true}
    ✓ should match !a/!b/c with !/*/*/
    ✓ should match !a/!b/c with !/*/*/ and {dot: true}
    ✓ should match !a/!b/c with !/*/*/ and {nonegate: true}
    ✓ should match !a/!b/c/d with !/*/*/
    ✓ should match !a/!b/c/d with !/*/*/ and {dot: true}
    ✓ should match !a/!b/c/d with !/*/*/ and {nonegate: true}
    ✓ should match !a/b/.c.md with !/*/*/
    ✓ should match !a/b/.c.md with !/*/*/ and {dot: true}
    ✓ should match !a/b/.c.md with !/*/*/ and {nonegate: true}
    ✓ should match /a/ with !/*/*/
    ✓ should match /a/ with !/*/*/ and {dot: true}
    ✓ should match /a/ with !/*/*/ and {nonegate: true}
    ✓ should match /a/b with !/*/*/
    ✓ should match /a/b with !/*/*/ and {dot: true}
    ✓ should match /a/b with !/*/*/ and {nonegate: true}
    ✓ should match /a/cb with !/*/*/
    ✓ should match /a/cb with !/*/*/ and {dot: true}
    ✓ should match /a/cb with !/*/*/ and {nonegate: true}
    ✓ should match /a/bb with !/*/*/
    ✓ should match /a/bb with !/*/*/ and {dot: true}
    ✓ should match /a/bb with !/*/*/ and {nonegate: true}
    ✓ should match /a/b/c with !/*/*/
    ✓ should match /a/b/c with !/*/*/ and {dot: true}
    ✓ should match /a/b/c with !/*/*/ and {nonegate: true}
    ✓ should match /a/b/c/ with !/*/*/
    ✓ should match /a/b/c/ with !/*/*/ and {dot: true}
    ✓ should match /a/b/c/ with !/*/*/ and {nonegate: true}
    ✓ should match /a/b/c/d with !/*/*/
    ✓ should match /a/b/c/d with !/*/*/ and {dot: true}
    ✓ should match /a/b/c/d with !/*/*/ and {nonegate: true}
    ✓ should match /a/b/c/d/ with !/*/*/
    ✓ should match /a/b/c/d/ with !/*/*/ and {dot: true}
    ✓ should match /a/b/c/d/ with !/*/*/ and {nonegate: true}
    ✓ should match . with !/*/*/
    ✓ should match . with !/*/*/ and {dot: true}
    ✓ should match . with !/*/*/ and {nonegate: true}
    ✓ should match ./ with !/*/*/
    ✓ should match ./ with !/*/*/ and {dot: true}
    ✓ should match ./ with !/*/*/ and {nonegate: true}
    ✓ should match .. with !/*/*/
    ✓ should match .. with !/*/*/ and {dot: true}
    ✓ should match .. with !/*/*/ and {nonegate: true}
    ✓ should match ../c with !/*/*/
    ✓ should match ../c with !/*/*/ and {dot: true}
    ✓ should match ../c with !/*/*/ and {nonegate: true}
    ✓ should match ../c with !/*/*/
    ✓ should match ../c with !/*/*/ and {dot: true}
    ✓ should match ../c with !/*/*/ and {nonegate: true}
    ✓ should match ./../c with !/*/*/
    ✓ should match ./../c with !/*/*/ and {dot: true}
    ✓ should match ./../c with !/*/*/ and {nonegate: true}
    ✓ should match ./a/../c with !/*/*/
    ✓ should match ./a/../c with !/*/*/ and {dot: true}
    ✓ should match ./a/../c with !/*/*/ and {nonegate: true}
    ✓ should match /.. with !/*/*/
    ✓ should match /.. with !/*/*/ and {dot: true}
    ✓ should match /.. with !/*/*/ and {nonegate: true}
    ✓ should match /../c with !/*/*/
    ✓ should match /../c with !/*/*/ and {dot: true}
    ✓ should match /../c with !/*/*/ and {nonegate: true}
    ✓ should match /../.c with !/*/*/
    ✓ should match /../.c with !/*/*/ and {dot: true}
    ✓ should match /../.c with !/*/*/ and {nonegate: true}
    ✓ should match /../.c/ with !/*/*/
    ✓ should match /../.c/ with !/*/*/ and {dot: true}
    ✓ should match /../.c/ with !/*/*/ and {nonegate: true}
    ✓ should match /a/../c with !/*/*/
    ✓ should match /a/../c with !/*/*/ and {dot: true}
    ✓ should match /a/../c with !/*/*/ and {nonegate: true}
    ✓ should match a/../c with !/*/*/
    ✓ should match a/../c with !/*/*/ and {dot: true}
    ✓ should match a/../c with !/*/*/ and {nonegate: true}
    ✓ should match ../.b/.c with !/*/*/
    ✓ should match ../.b/.c with !/*/*/ and {dot: true}
    ✓ should match ../.b/.c with !/*/*/ and {nonegate: true}
    ✓ should match ../b/.c with !/*/*/
    ✓ should match ../b/.c with !/*/*/ and {dot: true}
    ✓ should match ../b/.c with !/*/*/ and {nonegate: true}
    ✓ should match ./.b/.c with !/*/*/
    ✓ should match ./.b/.c with !/*/*/ and {dot: true}
    ✓ should match ./.b/.c with !/*/*/ and {nonegate: true}
    ✓ should match ./b/.c with !/*/*/
    ✓ should match ./b/.c with !/*/*/ and {dot: true}
    ✓ should match ./b/.c with !/*/*/ and {nonegate: true}
    ✓ should match .b with !/*/*/
    ✓ should match .b with !/*/*/ and {dot: true}
    ✓ should match .b with !/*/*/ and {nonegate: true}
    ✓ should match .b.c with !/*/*/
    ✓ should match .b.c with !/*/*/ and {dot: true}
    ✓ should match .b.c with !/*/*/ and {nonegate: true}
    ✓ should match .b.c/ with !/*/*/
    ✓ should match .b.c/ with !/*/*/ and {dot: true}
    ✓ should match .b.c/ with !/*/*/ and {nonegate: true}
    ✓ should match .b/ with !/*/*/
    ✓ should match .b/ with !/*/*/ and {dot: true}
    ✓ should match .b/ with !/*/*/ and {nonegate: true}
    ✓ should match .b/.c with !/*/*/
    ✓ should match .b/.c with !/*/*/ and {dot: true}
    ✓ should match .b/.c with !/*/*/ and {nonegate: true}
    ✓ should match .b/c with !/*/*/
    ✓ should match .b/c with !/*/*/ and {dot: true}
    ✓ should match .b/c with !/*/*/ and {nonegate: true}
    ✓ should match b/.c with !/*/*/
    ✓ should match b/.c with !/*/*/ and {dot: true}
    ✓ should match b/.c with !/*/*/ and {nonegate: true}
    ✓ should match b/.c/ with !/*/*/
    ✓ should match b/.c/ with !/*/*/ and {dot: true}
    ✓ should match b/.c/ with !/*/*/ and {nonegate: true}
    ✓ should match a/+b/c with !/*/*/
    ✓ should match a/+b/c with !/*/*/ and {dot: true}
    ✓ should match a/+b/c with !/*/*/ and {nonegate: true}
    ✓ should match +a/+b/c with !/*/*/
    ✓ should match +a/+b/c with !/*/*/ and {dot: true}
    ✓ should match +a/+b/c with !/*/*/ and {nonegate: true}
    ✓ should match a (foo) with !/*/*/
    ✓ should match a (foo) with !/*/*/ and {dot: true}
    ✓ should match a (foo) with !/*/*/ and {nonegate: true}
    ✓ should match a (foo)/(bar) with !/*/*/
    ✓ should match a (foo)/(bar) with !/*/*/ and {dot: true}
    ✓ should match a (foo)/(bar) with !/*/*/ and {nonegate: true}
    ✓ should match a/b/c (1) with !/*/*/
    ✓ should match a/b/c (1) with !/*/*/ and {dot: true}
    ✓ should match a/b/c (1) with !/*/*/ and {nonegate: true}
    ✓ should match a/b (2)/c (1) with !/*/*/
    ✓ should match a/b (2)/c (1) with !/*/*/ and {dot: true}
    ✓ should match a/b (2)/c (1) with !/*/*/ and {nonegate: true}
    ✓ should match a/b/c [def] with !/*/*/
    ✓ should match a/b/c [def] with !/*/*/ and {dot: true}
    ✓ should match a/b/c [def] with !/*/*/ and {nonegate: true}
    ✓ should match a with !a/!b*
    ✓ should match a with !a/!b* and {dot: true}
    ✓ should match a with !a/!b* and {nonegate: true}
    ✓ should match a.md with !a/!b*
    ✓ should match a.md with !a/!b* and {dot: true}
    ✓ should match a.md with !a/!b* and {nonegate: true}
    ✓ should match a.js with !a/!b*
    ✓ should match a.js with !a/!b* and {dot: true}
    ✓ should match a.js with !a/!b* and {nonegate: true}
    ✓ should match a/ with !a/!b*
    ✓ should match a/ with !a/!b* and {dot: true}
    ✓ should match a/ with !a/!b* and {nonegate: true}
    ✓ should match a/b with !a/!b*
    ✓ should match a/b with !a/!b* and {dot: true}
    ✓ should match a/b with !a/!b* and {nonegate: true}
    ✓ should match a/b/.c.md with !a/!b*
    ✓ should match a/b/.c.md with !a/!b* and {dot: true}
    ✓ should match a/b/.c.md with !a/!b* and {nonegate: true}
    ✓ should match a/b/c with !a/!b*
    ✓ should match a/b/c with !a/!b* and {dot: true}
    ✓ should match a/b/c with !a/!b* and {nonegate: true}
    ✓ should match a/b/c.md with !a/!b*
    ✓ should match a/b/c.md with !a/!b* and {dot: true}
    ✓ should match a/b/c.md with !a/!b* and {nonegate: true}
    ✓ should match a/b/c/ with !a/!b*
    ✓ should match a/b/c/ with !a/!b* and {dot: true}
    ✓ should match a/b/c/ with !a/!b* and {nonegate: true}
    ✓ should match a/b/c/d with !a/!b*
    ✓ should match a/b/c/d with !a/!b* and {dot: true}
    ✓ should match a/b/c/d with !a/!b* and {nonegate: true}
    ✓ should match a/b/c/d/ with !a/!b*
    ✓ should match a/b/c/d/ with !a/!b* and {dot: true}
    ✓ should match a/b/c/d/ with !a/!b* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with !a/!b*
    ✓ should match a/b/c/d/e/f/z.js with !a/!b* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with !a/!b* and {nonegate: true}
    ✓ should match a/b/c/z.js with !a/!b*
    ✓ should match a/b/c/z.js with !a/!b* and {dot: true}
    ✓ should match a/b/c/z.js with !a/!b* and {nonegate: true}
    ✓ should match a/bb with !a/!b*
    ✓ should match a/bb with !a/!b* and {dot: true}
    ✓ should match a/bb with !a/!b* and {nonegate: true}
    ✓ should match a/cb with !a/!b*
    ✓ should match a/cb with !a/!b* and {dot: true}
    ✓ should match a/cb with !a/!b* and {nonegate: true}
    ✓ should match abbbz with !a/!b*
    ✓ should match abbbz with !a/!b* and {dot: true}
    ✓ should match abbbz with !a/!b* and {nonegate: true}
    ✓ should match abc with !a/!b*
    ✓ should match abc with !a/!b* and {dot: true}
    ✓ should match abc with !a/!b* and {nonegate: true}
    ✓ should match abd with !a/!b*
    ✓ should match abd with !a/!b* and {dot: true}
    ✓ should match abd with !a/!b* and {nonegate: true}
    ✓ should match z.js with !a/!b*
    ✓ should match z.js with !a/!b* and {dot: true}
    ✓ should match z.js with !a/!b* and {nonegate: true}
    ✓ should match za.js with !a/!b*
    ✓ should match za.js with !a/!b* and {dot: true}
    ✓ should match za.js with !a/!b* and {nonegate: true}
    ✓ should match !a.js with !a/!b*
    ✓ should match !a.js with !a/!b* and {dot: true}
    ✓ should match !a.js with !a/!b* and {nonegate: true}
    ✓ should match !a/b with !a/!b*
    ✓ should match !a/b with !a/!b* and {dot: true}
    ✓ should match !a/b with !a/!b* and {nonegate: true}
    ✓ should match !a/b/ with !a/!b*
    ✓ should match !a/b/ with !a/!b* and {dot: true}
    ✓ should match !a/b/ with !a/!b* and {nonegate: true}
    ✓ should match !a/b/c with !a/!b*
    ✓ should match !a/b/c with !a/!b* and {dot: true}
    ✓ should match !a/b/c with !a/!b* and {nonegate: true}
    ✓ should match !a/b/c/ with !a/!b*
    ✓ should match !a/b/c/ with !a/!b* and {dot: true}
    ✓ should match !a/b/c/ with !a/!b* and {nonegate: true}
    ✓ should match !a/!b with !a/!b*
    ✓ should match !a/!b with !a/!b* and {dot: true}
    ✓ should match !a/!b with !a/!b* and {nonegate: true}
    ✓ should match !a/!b/c with !a/!b*
    ✓ should match !a/!b/c with !a/!b* and {dot: true}
    ✓ should match !a/!b/c with !a/!b* and {nonegate: true}
    ✓ should match !a/!b/c/d with !a/!b*
    ✓ should match !a/!b/c/d with !a/!b* and {dot: true}
    ✓ should match !a/!b/c/d with !a/!b* and {nonegate: true}
    ✓ should match !a/b/.c.md with !a/!b*
    ✓ should match !a/b/.c.md with !a/!b* and {dot: true}
    ✓ should match !a/b/.c.md with !a/!b* and {nonegate: true}
    ✓ should match /a/ with !a/!b*
    ✓ should match /a/ with !a/!b* and {dot: true}
    ✓ should match /a/ with !a/!b* and {nonegate: true}
    ✓ should match /a/b with !a/!b*
    ✓ should match /a/b with !a/!b* and {dot: true}
    ✓ should match /a/b with !a/!b* and {nonegate: true}
    ✓ should match /a/cb with !a/!b*
    ✓ should match /a/cb with !a/!b* and {dot: true}
    ✓ should match /a/cb with !a/!b* and {nonegate: true}
    ✓ should match /a/bb with !a/!b*
    ✓ should match /a/bb with !a/!b* and {dot: true}
    ✓ should match /a/bb with !a/!b* and {nonegate: true}
    ✓ should match /a/b/c with !a/!b*
    ✓ should match /a/b/c with !a/!b* and {dot: true}
    ✓ should match /a/b/c with !a/!b* and {nonegate: true}
    ✓ should match /a/b/c/ with !a/!b*
    ✓ should match /a/b/c/ with !a/!b* and {dot: true}
    ✓ should match /a/b/c/ with !a/!b* and {nonegate: true}
    ✓ should match /a/b/c/d with !a/!b*
    ✓ should match /a/b/c/d with !a/!b* and {dot: true}
    ✓ should match /a/b/c/d with !a/!b* and {nonegate: true}
    ✓ should match /a/b/c/d/ with !a/!b*
    ✓ should match /a/b/c/d/ with !a/!b* and {dot: true}
    ✓ should match /a/b/c/d/ with !a/!b* and {nonegate: true}
    ✓ should match . with !a/!b*
    ✓ should match . with !a/!b* and {dot: true}
    ✓ should match . with !a/!b* and {nonegate: true}
    ✓ should match ./ with !a/!b*
    ✓ should match ./ with !a/!b* and {dot: true}
    ✓ should match ./ with !a/!b* and {nonegate: true}
    ✓ should match .. with !a/!b*
    ✓ should match .. with !a/!b* and {dot: true}
    ✓ should match .. with !a/!b* and {nonegate: true}
    ✓ should match ../c with !a/!b*
    ✓ should match ../c with !a/!b* and {dot: true}
    ✓ should match ../c with !a/!b* and {nonegate: true}
    ✓ should match ../c with !a/!b*
    ✓ should match ../c with !a/!b* and {dot: true}
    ✓ should match ../c with !a/!b* and {nonegate: true}
    ✓ should match ./../c with !a/!b*
    ✓ should match ./../c with !a/!b* and {dot: true}
    ✓ should match ./../c with !a/!b* and {nonegate: true}
    ✓ should match ./a/../c with !a/!b*
    ✓ should match ./a/../c with !a/!b* and {dot: true}
    ✓ should match ./a/../c with !a/!b* and {nonegate: true}
    ✓ should match /.. with !a/!b*
    ✓ should match /.. with !a/!b* and {dot: true}
    ✓ should match /.. with !a/!b* and {nonegate: true}
    ✓ should match /../c with !a/!b*
    ✓ should match /../c with !a/!b* and {dot: true}
    ✓ should match /../c with !a/!b* and {nonegate: true}
    ✓ should match /../.c with !a/!b*
    ✓ should match /../.c with !a/!b* and {dot: true}
    ✓ should match /../.c with !a/!b* and {nonegate: true}
    ✓ should match /../.c/ with !a/!b*
    ✓ should match /../.c/ with !a/!b* and {dot: true}
    ✓ should match /../.c/ with !a/!b* and {nonegate: true}
    ✓ should match /a/../c with !a/!b*
    ✓ should match /a/../c with !a/!b* and {dot: true}
    ✓ should match /a/../c with !a/!b* and {nonegate: true}
    ✓ should match a/../c with !a/!b*
    ✓ should match a/../c with !a/!b* and {dot: true}
    ✓ should match a/../c with !a/!b* and {nonegate: true}
    ✓ should match ../.b/.c with !a/!b*
    ✓ should match ../.b/.c with !a/!b* and {dot: true}
    ✓ should match ../.b/.c with !a/!b* and {nonegate: true}
    ✓ should match ../b/.c with !a/!b*
    ✓ should match ../b/.c with !a/!b* and {dot: true}
    ✓ should match ../b/.c with !a/!b* and {nonegate: true}
    ✓ should match ./.b/.c with !a/!b*
    ✓ should match ./.b/.c with !a/!b* and {dot: true}
    ✓ should match ./.b/.c with !a/!b* and {nonegate: true}
    ✓ should match ./b/.c with !a/!b*
    ✓ should match ./b/.c with !a/!b* and {dot: true}
    ✓ should match ./b/.c with !a/!b* and {nonegate: true}
    ✓ should match .b with !a/!b*
    ✓ should match .b with !a/!b* and {dot: true}
    ✓ should match .b with !a/!b* and {nonegate: true}
    ✓ should match .b.c with !a/!b*
    ✓ should match .b.c with !a/!b* and {dot: true}
    ✓ should match .b.c with !a/!b* and {nonegate: true}
    ✓ should match .b.c/ with !a/!b*
    ✓ should match .b.c/ with !a/!b* and {dot: true}
    ✓ should match .b.c/ with !a/!b* and {nonegate: true}
    ✓ should match .b/ with !a/!b*
    ✓ should match .b/ with !a/!b* and {dot: true}
    ✓ should match .b/ with !a/!b* and {nonegate: true}
    ✓ should match .b/.c with !a/!b*
    ✓ should match .b/.c with !a/!b* and {dot: true}
    ✓ should match .b/.c with !a/!b* and {nonegate: true}
    ✓ should match .b/c with !a/!b*
    ✓ should match .b/c with !a/!b* and {dot: true}
    ✓ should match .b/c with !a/!b* and {nonegate: true}
    ✓ should match b/.c with !a/!b*
    ✓ should match b/.c with !a/!b* and {dot: true}
    ✓ should match b/.c with !a/!b* and {nonegate: true}
    ✓ should match b/.c/ with !a/!b*
    ✓ should match b/.c/ with !a/!b* and {dot: true}
    ✓ should match b/.c/ with !a/!b* and {nonegate: true}
    ✓ should match a/+b/c with !a/!b*
    ✓ should match a/+b/c with !a/!b* and {dot: true}
    ✓ should match a/+b/c with !a/!b* and {nonegate: true}
    ✓ should match +a/+b/c with !a/!b*
    ✓ should match +a/+b/c with !a/!b* and {dot: true}
    ✓ should match +a/+b/c with !a/!b* and {nonegate: true}
    ✓ should match a (foo) with !a/!b*
    ✓ should match a (foo) with !a/!b* and {dot: true}
    ✓ should match a (foo) with !a/!b* and {nonegate: true}
    ✓ should match a (foo)/(bar) with !a/!b*
    ✓ should match a (foo)/(bar) with !a/!b* and {dot: true}
    ✓ should match a (foo)/(bar) with !a/!b* and {nonegate: true}
    ✓ should match a/b/c (1) with !a/!b*
    ✓ should match a/b/c (1) with !a/!b* and {dot: true}
    ✓ should match a/b/c (1) with !a/!b* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with !a/!b*
    ✓ should match a/b (2)/c (1) with !a/!b* and {dot: true}
    ✓ should match a/b (2)/c (1) with !a/!b* and {nonegate: true}
    ✓ should match a/b/c [def] with !a/!b*
    ✓ should match a/b/c [def] with !a/!b* and {dot: true}
    ✓ should match a/b/c [def] with !a/!b* and {nonegate: true}
    ✓ should match a with !a/!b/*
    ✓ should match a with !a/!b/* and {dot: true}
    ✓ should match a with !a/!b/* and {nonegate: true}
    ✓ should match a.md with !a/!b/*
    ✓ should match a.md with !a/!b/* and {dot: true}
    ✓ should match a.md with !a/!b/* and {nonegate: true}
    ✓ should match a.js with !a/!b/*
    ✓ should match a.js with !a/!b/* and {dot: true}
    ✓ should match a.js with !a/!b/* and {nonegate: true}
    ✓ should match a/ with !a/!b/*
    ✓ should match a/ with !a/!b/* and {dot: true}
    ✓ should match a/ with !a/!b/* and {nonegate: true}
    ✓ should match a/b with !a/!b/*
    ✓ should match a/b with !a/!b/* and {dot: true}
    ✓ should match a/b with !a/!b/* and {nonegate: true}
    ✓ should match a/b/.c.md with !a/!b/*
    ✓ should match a/b/.c.md with !a/!b/* and {dot: true}
    ✓ should match a/b/.c.md with !a/!b/* and {nonegate: true}
    ✓ should match a/b/c with !a/!b/*
    ✓ should match a/b/c with !a/!b/* and {dot: true}
    ✓ should match a/b/c with !a/!b/* and {nonegate: true}
    ✓ should match a/b/c.md with !a/!b/*
    ✓ should match a/b/c.md with !a/!b/* and {dot: true}
    ✓ should match a/b/c.md with !a/!b/* and {nonegate: true}
    ✓ should match a/b/c/ with !a/!b/*
    ✓ should match a/b/c/ with !a/!b/* and {dot: true}
    ✓ should match a/b/c/ with !a/!b/* and {nonegate: true}
    ✓ should match a/b/c/d with !a/!b/*
    ✓ should match a/b/c/d with !a/!b/* and {dot: true}
    ✓ should match a/b/c/d with !a/!b/* and {nonegate: true}
    ✓ should match a/b/c/d/ with !a/!b/*
    ✓ should match a/b/c/d/ with !a/!b/* and {dot: true}
    ✓ should match a/b/c/d/ with !a/!b/* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with !a/!b/*
    ✓ should match a/b/c/d/e/f/z.js with !a/!b/* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with !a/!b/* and {nonegate: true}
    ✓ should match a/b/c/z.js with !a/!b/*
    ✓ should match a/b/c/z.js with !a/!b/* and {dot: true}
    ✓ should match a/b/c/z.js with !a/!b/* and {nonegate: true}
    ✓ should match a/bb with !a/!b/*
    ✓ should match a/bb with !a/!b/* and {dot: true}
    ✓ should match a/bb with !a/!b/* and {nonegate: true}
    ✓ should match a/cb with !a/!b/*
    ✓ should match a/cb with !a/!b/* and {dot: true}
    ✓ should match a/cb with !a/!b/* and {nonegate: true}
    ✓ should match abbbz with !a/!b/*
    ✓ should match abbbz with !a/!b/* and {dot: true}
    ✓ should match abbbz with !a/!b/* and {nonegate: true}
    ✓ should match abc with !a/!b/*
    ✓ should match abc with !a/!b/* and {dot: true}
    ✓ should match abc with !a/!b/* and {nonegate: true}
    ✓ should match abd with !a/!b/*
    ✓ should match abd with !a/!b/* and {dot: true}
    ✓ should match abd with !a/!b/* and {nonegate: true}
    ✓ should match z.js with !a/!b/*
    ✓ should match z.js with !a/!b/* and {dot: true}
    ✓ should match z.js with !a/!b/* and {nonegate: true}
    ✓ should match za.js with !a/!b/*
    ✓ should match za.js with !a/!b/* and {dot: true}
    ✓ should match za.js with !a/!b/* and {nonegate: true}
    ✓ should match !a.js with !a/!b/*
    ✓ should match !a.js with !a/!b/* and {dot: true}
    ✓ should match !a.js with !a/!b/* and {nonegate: true}
    ✓ should match !a/b with !a/!b/*
    ✓ should match !a/b with !a/!b/* and {dot: true}
    ✓ should match !a/b with !a/!b/* and {nonegate: true}
    ✓ should match !a/b/ with !a/!b/*
    ✓ should match !a/b/ with !a/!b/* and {dot: true}
    ✓ should match !a/b/ with !a/!b/* and {nonegate: true}
    ✓ should match !a/b/c with !a/!b/*
    ✓ should match !a/b/c with !a/!b/* and {dot: true}
    ✓ should match !a/b/c with !a/!b/* and {nonegate: true}
    ✓ should match !a/b/c/ with !a/!b/*
    ✓ should match !a/b/c/ with !a/!b/* and {dot: true}
    ✓ should match !a/b/c/ with !a/!b/* and {nonegate: true}
    ✓ should match !a/!b with !a/!b/*
    ✓ should match !a/!b with !a/!b/* and {dot: true}
    ✓ should match !a/!b with !a/!b/* and {nonegate: true}
    ✓ should match !a/!b/c with !a/!b/*
    ✓ should match !a/!b/c with !a/!b/* and {dot: true}
    ✓ should match !a/!b/c with !a/!b/* and {nonegate: true}
    ✓ should match !a/!b/c/d with !a/!b/*
    ✓ should match !a/!b/c/d with !a/!b/* and {dot: true}
    ✓ should match !a/!b/c/d with !a/!b/* and {nonegate: true}
    ✓ should match !a/b/.c.md with !a/!b/*
    ✓ should match !a/b/.c.md with !a/!b/* and {dot: true}
    ✓ should match !a/b/.c.md with !a/!b/* and {nonegate: true}
    ✓ should match /a/ with !a/!b/*
    ✓ should match /a/ with !a/!b/* and {dot: true}
    ✓ should match /a/ with !a/!b/* and {nonegate: true}
    ✓ should match /a/b with !a/!b/*
    ✓ should match /a/b with !a/!b/* and {dot: true}
    ✓ should match /a/b with !a/!b/* and {nonegate: true}
    ✓ should match /a/cb with !a/!b/*
    ✓ should match /a/cb with !a/!b/* and {dot: true}
    ✓ should match /a/cb with !a/!b/* and {nonegate: true}
    ✓ should match /a/bb with !a/!b/*
    ✓ should match /a/bb with !a/!b/* and {dot: true}
    ✓ should match /a/bb with !a/!b/* and {nonegate: true}
    ✓ should match /a/b/c with !a/!b/*
    ✓ should match /a/b/c with !a/!b/* and {dot: true}
    ✓ should match /a/b/c with !a/!b/* and {nonegate: true}
    ✓ should match /a/b/c/ with !a/!b/*
    ✓ should match /a/b/c/ with !a/!b/* and {dot: true}
    ✓ should match /a/b/c/ with !a/!b/* and {nonegate: true}
    ✓ should match /a/b/c/d with !a/!b/*
    ✓ should match /a/b/c/d with !a/!b/* and {dot: true}
    ✓ should match /a/b/c/d with !a/!b/* and {nonegate: true}
    ✓ should match /a/b/c/d/ with !a/!b/*
    ✓ should match /a/b/c/d/ with !a/!b/* and {dot: true}
    ✓ should match /a/b/c/d/ with !a/!b/* and {nonegate: true}
    ✓ should match . with !a/!b/*
    ✓ should match . with !a/!b/* and {dot: true}
    ✓ should match . with !a/!b/* and {nonegate: true}
    ✓ should match ./ with !a/!b/*
    ✓ should match ./ with !a/!b/* and {dot: true}
    ✓ should match ./ with !a/!b/* and {nonegate: true}
    ✓ should match .. with !a/!b/*
    ✓ should match .. with !a/!b/* and {dot: true}
    ✓ should match .. with !a/!b/* and {nonegate: true}
    ✓ should match ../c with !a/!b/*
    ✓ should match ../c with !a/!b/* and {dot: true}
    ✓ should match ../c with !a/!b/* and {nonegate: true}
    ✓ should match ../c with !a/!b/*
    ✓ should match ../c with !a/!b/* and {dot: true}
    ✓ should match ../c with !a/!b/* and {nonegate: true}
    ✓ should match ./../c with !a/!b/*
    ✓ should match ./../c with !a/!b/* and {dot: true}
    ✓ should match ./../c with !a/!b/* and {nonegate: true}
    ✓ should match ./a/../c with !a/!b/*
    ✓ should match ./a/../c with !a/!b/* and {dot: true}
    ✓ should match ./a/../c with !a/!b/* and {nonegate: true}
    ✓ should match /.. with !a/!b/*
    ✓ should match /.. with !a/!b/* and {dot: true}
    ✓ should match /.. with !a/!b/* and {nonegate: true}
    ✓ should match /../c with !a/!b/*
    ✓ should match /../c with !a/!b/* and {dot: true}
    ✓ should match /../c with !a/!b/* and {nonegate: true}
    ✓ should match /../.c with !a/!b/*
    ✓ should match /../.c with !a/!b/* and {dot: true}
    ✓ should match /../.c with !a/!b/* and {nonegate: true}
    ✓ should match /../.c/ with !a/!b/*
    ✓ should match /../.c/ with !a/!b/* and {dot: true}
    ✓ should match /../.c/ with !a/!b/* and {nonegate: true}
    ✓ should match /a/../c with !a/!b/*
    ✓ should match /a/../c with !a/!b/* and {dot: true}
    ✓ should match /a/../c with !a/!b/* and {nonegate: true}
    ✓ should match a/../c with !a/!b/*
    ✓ should match a/../c with !a/!b/* and {dot: true}
    ✓ should match a/../c with !a/!b/* and {nonegate: true}
    ✓ should match ../.b/.c with !a/!b/*
    ✓ should match ../.b/.c with !a/!b/* and {dot: true}
    ✓ should match ../.b/.c with !a/!b/* and {nonegate: true}
    ✓ should match ../b/.c with !a/!b/*
    ✓ should match ../b/.c with !a/!b/* and {dot: true}
    ✓ should match ../b/.c with !a/!b/* and {nonegate: true}
    ✓ should match ./.b/.c with !a/!b/*
    ✓ should match ./.b/.c with !a/!b/* and {dot: true}
    ✓ should match ./.b/.c with !a/!b/* and {nonegate: true}
    ✓ should match ./b/.c with !a/!b/*
    ✓ should match ./b/.c with !a/!b/* and {dot: true}
    ✓ should match ./b/.c with !a/!b/* and {nonegate: true}
    ✓ should match .b with !a/!b/*
    ✓ should match .b with !a/!b/* and {dot: true}
    ✓ should match .b with !a/!b/* and {nonegate: true}
    ✓ should match .b.c with !a/!b/*
    ✓ should match .b.c with !a/!b/* and {dot: true}
    ✓ should match .b.c with !a/!b/* and {nonegate: true}
    ✓ should match .b.c/ with !a/!b/*
    ✓ should match .b.c/ with !a/!b/* and {dot: true}
    ✓ should match .b.c/ with !a/!b/* and {nonegate: true}
    ✓ should match .b/ with !a/!b/*
    ✓ should match .b/ with !a/!b/* and {dot: true}
    ✓ should match .b/ with !a/!b/* and {nonegate: true}
    ✓ should match .b/.c with !a/!b/*
    ✓ should match .b/.c with !a/!b/* and {dot: true}
    ✓ should match .b/.c with !a/!b/* and {nonegate: true}
    ✓ should match .b/c with !a/!b/*
    ✓ should match .b/c with !a/!b/* and {dot: true}
    ✓ should match .b/c with !a/!b/* and {nonegate: true}
    ✓ should match b/.c with !a/!b/*
    ✓ should match b/.c with !a/!b/* and {dot: true}
    ✓ should match b/.c with !a/!b/* and {nonegate: true}
    ✓ should match b/.c/ with !a/!b/*
    ✓ should match b/.c/ with !a/!b/* and {dot: true}
    ✓ should match b/.c/ with !a/!b/* and {nonegate: true}
    ✓ should match a/+b/c with !a/!b/*
    ✓ should match a/+b/c with !a/!b/* and {dot: true}
    ✓ should match a/+b/c with !a/!b/* and {nonegate: true}
    ✓ should match +a/+b/c with !a/!b/*
    ✓ should match +a/+b/c with !a/!b/* and {dot: true}
    ✓ should match +a/+b/c with !a/!b/* and {nonegate: true}
    ✓ should match a (foo) with !a/!b/*
    ✓ should match a (foo) with !a/!b/* and {dot: true}
    ✓ should match a (foo) with !a/!b/* and {nonegate: true}
    ✓ should match a (foo)/(bar) with !a/!b/*
    ✓ should match a (foo)/(bar) with !a/!b/* and {dot: true}
    ✓ should match a (foo)/(bar) with !a/!b/* and {nonegate: true}
    ✓ should match a/b/c (1) with !a/!b/*
    ✓ should match a/b/c (1) with !a/!b/* and {dot: true}
    ✓ should match a/b/c (1) with !a/!b/* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with !a/!b/*
    ✓ should match a/b (2)/c (1) with !a/!b/* and {dot: true}
    ✓ should match a/b (2)/c (1) with !a/!b/* and {nonegate: true}
    ✓ should match a/b/c [def] with !a/!b/*
    ✓ should match a/b/c [def] with !a/!b/* and {dot: true}
    ✓ should match a/b/c [def] with !a/!b/* and {nonegate: true}
    ✓ should match a with !a/*?b
    ✓ should match a with !a/*?b and {dot: true}
    ✓ should match a with !a/*?b and {nonegate: true}
    ✓ should match a.md with !a/*?b
    ✓ should match a.md with !a/*?b and {dot: true}
    ✓ should match a.md with !a/*?b and {nonegate: true}
    ✓ should match a.js with !a/*?b
    ✓ should match a.js with !a/*?b and {dot: true}
    ✓ should match a.js with !a/*?b and {nonegate: true}
    ✓ should match a/ with !a/*?b
    ✓ should match a/ with !a/*?b and {dot: true}
    ✓ should match a/ with !a/*?b and {nonegate: true}
    ✓ should match a/b with !a/*?b
    ✓ should match a/b with !a/*?b and {dot: true}
    ✓ should match a/b with !a/*?b and {nonegate: true}
    ✓ should match a/b/.c.md with !a/*?b
    ✓ should match a/b/.c.md with !a/*?b and {dot: true}
    ✓ should match a/b/.c.md with !a/*?b and {nonegate: true}
    ✓ should match a/b/c with !a/*?b
    ✓ should match a/b/c with !a/*?b and {dot: true}
    ✓ should match a/b/c with !a/*?b and {nonegate: true}
    ✓ should match a/b/c.md with !a/*?b
    ✓ should match a/b/c.md with !a/*?b and {dot: true}
    ✓ should match a/b/c.md with !a/*?b and {nonegate: true}
    ✓ should match a/b/c/ with !a/*?b
    ✓ should match a/b/c/ with !a/*?b and {dot: true}
    ✓ should match a/b/c/ with !a/*?b and {nonegate: true}
    ✓ should match a/b/c/d with !a/*?b
    ✓ should match a/b/c/d with !a/*?b and {dot: true}
    ✓ should match a/b/c/d with !a/*?b and {nonegate: true}
    ✓ should match a/b/c/d/ with !a/*?b
    ✓ should match a/b/c/d/ with !a/*?b and {dot: true}
    ✓ should match a/b/c/d/ with !a/*?b and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with !a/*?b
    ✓ should match a/b/c/d/e/f/z.js with !a/*?b and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with !a/*?b and {nonegate: true}
    ✓ should match a/b/c/z.js with !a/*?b
    ✓ should match a/b/c/z.js with !a/*?b and {dot: true}
    ✓ should match a/b/c/z.js with !a/*?b and {nonegate: true}
    ✓ should match a/bb with !a/*?b
    ✓ should match a/bb with !a/*?b and {dot: true}
    ✓ should match a/bb with !a/*?b and {nonegate: true}
    ✓ should match a/cb with !a/*?b
    ✓ should match a/cb with !a/*?b and {dot: true}
    ✓ should match a/cb with !a/*?b and {nonegate: true}
    ✓ should match abbbz with !a/*?b
    ✓ should match abbbz with !a/*?b and {dot: true}
    ✓ should match abbbz with !a/*?b and {nonegate: true}
    ✓ should match abc with !a/*?b
    ✓ should match abc with !a/*?b and {dot: true}
    ✓ should match abc with !a/*?b and {nonegate: true}
    ✓ should match abd with !a/*?b
    ✓ should match abd with !a/*?b and {dot: true}
    ✓ should match abd with !a/*?b and {nonegate: true}
    ✓ should match z.js with !a/*?b
    ✓ should match z.js with !a/*?b and {dot: true}
    ✓ should match z.js with !a/*?b and {nonegate: true}
    ✓ should match za.js with !a/*?b
    ✓ should match za.js with !a/*?b and {dot: true}
    ✓ should match za.js with !a/*?b and {nonegate: true}
    ✓ should match !a.js with !a/*?b
    ✓ should match !a.js with !a/*?b and {dot: true}
    ✓ should match !a.js with !a/*?b and {nonegate: true}
    ✓ should match !a/b with !a/*?b
    ✓ should match !a/b with !a/*?b and {dot: true}
    ✓ should match !a/b with !a/*?b and {nonegate: true}
    ✓ should match !a/b/ with !a/*?b
    ✓ should match !a/b/ with !a/*?b and {dot: true}
    ✓ should match !a/b/ with !a/*?b and {nonegate: true}
    ✓ should match !a/b/c with !a/*?b
    ✓ should match !a/b/c with !a/*?b and {dot: true}
    ✓ should match !a/b/c with !a/*?b and {nonegate: true}
    ✓ should match !a/b/c/ with !a/*?b
    ✓ should match !a/b/c/ with !a/*?b and {dot: true}
    ✓ should match !a/b/c/ with !a/*?b and {nonegate: true}
    ✓ should match !a/!b with !a/*?b
    ✓ should match !a/!b with !a/*?b and {dot: true}
    ✓ should match !a/!b with !a/*?b and {nonegate: true}
    ✓ should match !a/!b/c with !a/*?b
    ✓ should match !a/!b/c with !a/*?b and {dot: true}
    ✓ should match !a/!b/c with !a/*?b and {nonegate: true}
    ✓ should match !a/!b/c/d with !a/*?b
    ✓ should match !a/!b/c/d with !a/*?b and {dot: true}
    ✓ should match !a/!b/c/d with !a/*?b and {nonegate: true}
    ✓ should match !a/b/.c.md with !a/*?b
    ✓ should match !a/b/.c.md with !a/*?b and {dot: true}
    ✓ should match !a/b/.c.md with !a/*?b and {nonegate: true}
    ✓ should match /a/ with !a/*?b
    ✓ should match /a/ with !a/*?b and {dot: true}
    ✓ should match /a/ with !a/*?b and {nonegate: true}
    ✓ should match /a/b with !a/*?b
    ✓ should match /a/b with !a/*?b and {dot: true}
    ✓ should match /a/b with !a/*?b and {nonegate: true}
    ✓ should match /a/cb with !a/*?b
    ✓ should match /a/cb with !a/*?b and {dot: true}
    ✓ should match /a/cb with !a/*?b and {nonegate: true}
    ✓ should match /a/bb with !a/*?b
    ✓ should match /a/bb with !a/*?b and {dot: true}
    ✓ should match /a/bb with !a/*?b and {nonegate: true}
    ✓ should match /a/b/c with !a/*?b
    ✓ should match /a/b/c with !a/*?b and {dot: true}
    ✓ should match /a/b/c with !a/*?b and {nonegate: true}
    ✓ should match /a/b/c/ with !a/*?b
    ✓ should match /a/b/c/ with !a/*?b and {dot: true}
    ✓ should match /a/b/c/ with !a/*?b and {nonegate: true}
    ✓ should match /a/b/c/d with !a/*?b
    ✓ should match /a/b/c/d with !a/*?b and {dot: true}
    ✓ should match /a/b/c/d with !a/*?b and {nonegate: true}
    ✓ should match /a/b/c/d/ with !a/*?b
    ✓ should match /a/b/c/d/ with !a/*?b and {dot: true}
    ✓ should match /a/b/c/d/ with !a/*?b and {nonegate: true}
    ✓ should match . with !a/*?b
    ✓ should match . with !a/*?b and {dot: true}
    ✓ should match . with !a/*?b and {nonegate: true}
    ✓ should match ./ with !a/*?b
    ✓ should match ./ with !a/*?b and {dot: true}
    ✓ should match ./ with !a/*?b and {nonegate: true}
    ✓ should match .. with !a/*?b
    ✓ should match .. with !a/*?b and {dot: true}
    ✓ should match .. with !a/*?b and {nonegate: true}
    ✓ should match ../c with !a/*?b
    ✓ should match ../c with !a/*?b and {dot: true}
    ✓ should match ../c with !a/*?b and {nonegate: true}
    ✓ should match ../c with !a/*?b
    ✓ should match ../c with !a/*?b and {dot: true}
    ✓ should match ../c with !a/*?b and {nonegate: true}
    ✓ should match ./../c with !a/*?b
    ✓ should match ./../c with !a/*?b and {dot: true}
    ✓ should match ./../c with !a/*?b and {nonegate: true}
    ✓ should match ./a/../c with !a/*?b
    ✓ should match ./a/../c with !a/*?b and {dot: true}
    ✓ should match ./a/../c with !a/*?b and {nonegate: true}
    ✓ should match /.. with !a/*?b
    ✓ should match /.. with !a/*?b and {dot: true}
    ✓ should match /.. with !a/*?b and {nonegate: true}
    ✓ should match /../c with !a/*?b
    ✓ should match /../c with !a/*?b and {dot: true}
    ✓ should match /../c with !a/*?b and {nonegate: true}
    ✓ should match /../.c with !a/*?b
    ✓ should match /../.c with !a/*?b and {dot: true}
    ✓ should match /../.c with !a/*?b and {nonegate: true}
    ✓ should match /../.c/ with !a/*?b
    ✓ should match /../.c/ with !a/*?b and {dot: true}
    ✓ should match /../.c/ with !a/*?b and {nonegate: true}
    ✓ should match /a/../c with !a/*?b
    ✓ should match /a/../c with !a/*?b and {dot: true}
    ✓ should match /a/../c with !a/*?b and {nonegate: true}
    ✓ should match a/../c with !a/*?b
    ✓ should match a/../c with !a/*?b and {dot: true}
    ✓ should match a/../c with !a/*?b and {nonegate: true}
    ✓ should match ../.b/.c with !a/*?b
    ✓ should match ../.b/.c with !a/*?b and {dot: true}
    ✓ should match ../.b/.c with !a/*?b and {nonegate: true}
    ✓ should match ../b/.c with !a/*?b
    ✓ should match ../b/.c with !a/*?b and {dot: true}
    ✓ should match ../b/.c with !a/*?b and {nonegate: true}
    ✓ should match ./.b/.c with !a/*?b
    ✓ should match ./.b/.c with !a/*?b and {dot: true}
    ✓ should match ./.b/.c with !a/*?b and {nonegate: true}
    ✓ should match ./b/.c with !a/*?b
    ✓ should match ./b/.c with !a/*?b and {dot: true}
    ✓ should match ./b/.c with !a/*?b and {nonegate: true}
    ✓ should match .b with !a/*?b
    ✓ should match .b with !a/*?b and {dot: true}
    ✓ should match .b with !a/*?b and {nonegate: true}
    ✓ should match .b.c with !a/*?b
    ✓ should match .b.c with !a/*?b and {dot: true}
    ✓ should match .b.c with !a/*?b and {nonegate: true}
    ✓ should match .b.c/ with !a/*?b
    ✓ should match .b.c/ with !a/*?b and {dot: true}
    ✓ should match .b.c/ with !a/*?b and {nonegate: true}
    ✓ should match .b/ with !a/*?b
    ✓ should match .b/ with !a/*?b and {dot: true}
    ✓ should match .b/ with !a/*?b and {nonegate: true}
    ✓ should match .b/.c with !a/*?b
    ✓ should match .b/.c with !a/*?b and {dot: true}
    ✓ should match .b/.c with !a/*?b and {nonegate: true}
    ✓ should match .b/c with !a/*?b
    ✓ should match .b/c with !a/*?b and {dot: true}
    ✓ should match .b/c with !a/*?b and {nonegate: true}
    ✓ should match b/.c with !a/*?b
    ✓ should match b/.c with !a/*?b and {dot: true}
    ✓ should match b/.c with !a/*?b and {nonegate: true}
    ✓ should match b/.c/ with !a/*?b
    ✓ should match b/.c/ with !a/*?b and {dot: true}
    ✓ should match b/.c/ with !a/*?b and {nonegate: true}
    ✓ should match a/+b/c with !a/*?b
    ✓ should match a/+b/c with !a/*?b and {dot: true}
    ✓ should match a/+b/c with !a/*?b and {nonegate: true}
    ✓ should match +a/+b/c with !a/*?b
    ✓ should match +a/+b/c with !a/*?b and {dot: true}
    ✓ should match +a/+b/c with !a/*?b and {nonegate: true}
    ✓ should match a (foo) with !a/*?b
    ✓ should match a (foo) with !a/*?b and {dot: true}
    ✓ should match a (foo) with !a/*?b and {nonegate: true}
    ✓ should match a (foo)/(bar) with !a/*?b
    ✓ should match a (foo)/(bar) with !a/*?b and {dot: true}
    ✓ should match a (foo)/(bar) with !a/*?b and {nonegate: true}
    ✓ should match a/b/c (1) with !a/*?b
    ✓ should match a/b/c (1) with !a/*?b and {dot: true}
    ✓ should match a/b/c (1) with !a/*?b and {nonegate: true}
    ✓ should match a/b (2)/c (1) with !a/*?b
    ✓ should match a/b (2)/c (1) with !a/*?b and {dot: true}
    ✓ should match a/b (2)/c (1) with !a/*?b and {nonegate: true}
    ✓ should match a/b/c [def] with !a/*?b
    ✓ should match a/b/c [def] with !a/*?b and {dot: true}
    ✓ should match a/b/c [def] with !a/*?b and {nonegate: true}
    ✓ should match a with !a/?
    ✓ should match a with !a/? and {dot: true}
    ✓ should match a with !a/? and {nonegate: true}
    ✓ should match a.md with !a/?
    ✓ should match a.md with !a/? and {dot: true}
    ✓ should match a.md with !a/? and {nonegate: true}
    ✓ should match a.js with !a/?
    ✓ should match a.js with !a/? and {dot: true}
    ✓ should match a.js with !a/? and {nonegate: true}
    ✓ should match a/ with !a/?
    ✓ should match a/ with !a/? and {dot: true}
    ✓ should match a/ with !a/? and {nonegate: true}
    ✓ should match a/b with !a/?
    ✓ should match a/b with !a/? and {dot: true}
    ✓ should match a/b with !a/? and {nonegate: true}
    ✓ should match a/b/.c.md with !a/?
    ✓ should match a/b/.c.md with !a/? and {dot: true}
    ✓ should match a/b/.c.md with !a/? and {nonegate: true}
    ✓ should match a/b/c with !a/?
    ✓ should match a/b/c with !a/? and {dot: true}
    ✓ should match a/b/c with !a/? and {nonegate: true}
    ✓ should match a/b/c.md with !a/?
    ✓ should match a/b/c.md with !a/? and {dot: true}
    ✓ should match a/b/c.md with !a/? and {nonegate: true}
    ✓ should match a/b/c/ with !a/?
    ✓ should match a/b/c/ with !a/? and {dot: true}
    ✓ should match a/b/c/ with !a/? and {nonegate: true}
    ✓ should match a/b/c/d with !a/?
    ✓ should match a/b/c/d with !a/? and {dot: true}
    ✓ should match a/b/c/d with !a/? and {nonegate: true}
    ✓ should match a/b/c/d/ with !a/?
    ✓ should match a/b/c/d/ with !a/? and {dot: true}
    ✓ should match a/b/c/d/ with !a/? and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with !a/?
    ✓ should match a/b/c/d/e/f/z.js with !a/? and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with !a/? and {nonegate: true}
    ✓ should match a/b/c/z.js with !a/?
    ✓ should match a/b/c/z.js with !a/? and {dot: true}
    ✓ should match a/b/c/z.js with !a/? and {nonegate: true}
    ✓ should match a/bb with !a/?
    ✓ should match a/bb with !a/? and {dot: true}
    ✓ should match a/bb with !a/? and {nonegate: true}
    ✓ should match a/cb with !a/?
    ✓ should match a/cb with !a/? and {dot: true}
    ✓ should match a/cb with !a/? and {nonegate: true}
    ✓ should match abbbz with !a/?
    ✓ should match abbbz with !a/? and {dot: true}
    ✓ should match abbbz with !a/? and {nonegate: true}
    ✓ should match abc with !a/?
    ✓ should match abc with !a/? and {dot: true}
    ✓ should match abc with !a/? and {nonegate: true}
    ✓ should match abd with !a/?
    ✓ should match abd with !a/? and {dot: true}
    ✓ should match abd with !a/? and {nonegate: true}
    ✓ should match z.js with !a/?
    ✓ should match z.js with !a/? and {dot: true}
    ✓ should match z.js with !a/? and {nonegate: true}
    ✓ should match za.js with !a/?
    ✓ should match za.js with !a/? and {dot: true}
    ✓ should match za.js with !a/? and {nonegate: true}
    ✓ should match !a.js with !a/?
    ✓ should match !a.js with !a/? and {dot: true}
    ✓ should match !a.js with !a/? and {nonegate: true}
    ✓ should match !a/b with !a/?
    ✓ should match !a/b with !a/? and {dot: true}
    ✓ should match !a/b with !a/? and {nonegate: true}
    ✓ should match !a/b/ with !a/?
    ✓ should match !a/b/ with !a/? and {dot: true}
    ✓ should match !a/b/ with !a/? and {nonegate: true}
    ✓ should match !a/b/c with !a/?
    ✓ should match !a/b/c with !a/? and {dot: true}
    ✓ should match !a/b/c with !a/? and {nonegate: true}
    ✓ should match !a/b/c/ with !a/?
    ✓ should match !a/b/c/ with !a/? and {dot: true}
    ✓ should match !a/b/c/ with !a/? and {nonegate: true}
    ✓ should match !a/!b with !a/?
    ✓ should match !a/!b with !a/? and {dot: true}
    ✓ should match !a/!b with !a/? and {nonegate: true}
    ✓ should match !a/!b/c with !a/?
    ✓ should match !a/!b/c with !a/? and {dot: true}
    ✓ should match !a/!b/c with !a/? and {nonegate: true}
    ✓ should match !a/!b/c/d with !a/?
    ✓ should match !a/!b/c/d with !a/? and {dot: true}
    ✓ should match !a/!b/c/d with !a/? and {nonegate: true}
    ✓ should match !a/b/.c.md with !a/?
    ✓ should match !a/b/.c.md with !a/? and {dot: true}
    ✓ should match !a/b/.c.md with !a/? and {nonegate: true}
    ✓ should match /a/ with !a/?
    ✓ should match /a/ with !a/? and {dot: true}
    ✓ should match /a/ with !a/? and {nonegate: true}
    ✓ should match /a/b with !a/?
    ✓ should match /a/b with !a/? and {dot: true}
    ✓ should match /a/b with !a/? and {nonegate: true}
    ✓ should match /a/cb with !a/?
    ✓ should match /a/cb with !a/? and {dot: true}
    ✓ should match /a/cb with !a/? and {nonegate: true}
    ✓ should match /a/bb with !a/?
    ✓ should match /a/bb with !a/? and {dot: true}
    ✓ should match /a/bb with !a/? and {nonegate: true}
    ✓ should match /a/b/c with !a/?
    ✓ should match /a/b/c with !a/? and {dot: true}
    ✓ should match /a/b/c with !a/? and {nonegate: true}
    ✓ should match /a/b/c/ with !a/?
    ✓ should match /a/b/c/ with !a/? and {dot: true}
    ✓ should match /a/b/c/ with !a/? and {nonegate: true}
    ✓ should match /a/b/c/d with !a/?
    ✓ should match /a/b/c/d with !a/? and {dot: true}
    ✓ should match /a/b/c/d with !a/? and {nonegate: true}
    ✓ should match /a/b/c/d/ with !a/?
    ✓ should match /a/b/c/d/ with !a/? and {dot: true}
    ✓ should match /a/b/c/d/ with !a/? and {nonegate: true}
    ✓ should match . with !a/?
    ✓ should match . with !a/? and {dot: true}
    ✓ should match . with !a/? and {nonegate: true}
    ✓ should match ./ with !a/?
    ✓ should match ./ with !a/? and {dot: true}
    ✓ should match ./ with !a/? and {nonegate: true}
    ✓ should match .. with !a/?
    ✓ should match .. with !a/? and {dot: true}
    ✓ should match .. with !a/? and {nonegate: true}
    ✓ should match ../c with !a/?
    ✓ should match ../c with !a/? and {dot: true}
    ✓ should match ../c with !a/? and {nonegate: true}
    ✓ should match ../c with !a/?
    ✓ should match ../c with !a/? and {dot: true}
    ✓ should match ../c with !a/? and {nonegate: true}
    ✓ should match ./../c with !a/?
    ✓ should match ./../c with !a/? and {dot: true}
    ✓ should match ./../c with !a/? and {nonegate: true}
    ✓ should match ./a/../c with !a/?
    ✓ should match ./a/../c with !a/? and {dot: true}
    ✓ should match ./a/../c with !a/? and {nonegate: true}
    ✓ should match /.. with !a/?
    ✓ should match /.. with !a/? and {dot: true}
    ✓ should match /.. with !a/? and {nonegate: true}
    ✓ should match /../c with !a/?
    ✓ should match /../c with !a/? and {dot: true}
    ✓ should match /../c with !a/? and {nonegate: true}
    ✓ should match /../.c with !a/?
    ✓ should match /../.c with !a/? and {dot: true}
    ✓ should match /../.c with !a/? and {nonegate: true}
    ✓ should match /../.c/ with !a/?
    ✓ should match /../.c/ with !a/? and {dot: true}
    ✓ should match /../.c/ with !a/? and {nonegate: true}
    ✓ should match /a/../c with !a/?
    ✓ should match /a/../c with !a/? and {dot: true}
    ✓ should match /a/../c with !a/? and {nonegate: true}
    ✓ should match a/../c with !a/?
    ✓ should match a/../c with !a/? and {dot: true}
    ✓ should match a/../c with !a/? and {nonegate: true}
    ✓ should match ../.b/.c with !a/?
    ✓ should match ../.b/.c with !a/? and {dot: true}
    ✓ should match ../.b/.c with !a/? and {nonegate: true}
    ✓ should match ../b/.c with !a/?
    ✓ should match ../b/.c with !a/? and {dot: true}
    ✓ should match ../b/.c with !a/? and {nonegate: true}
    ✓ should match ./.b/.c with !a/?
    ✓ should match ./.b/.c with !a/? and {dot: true}
    ✓ should match ./.b/.c with !a/? and {nonegate: true}
    ✓ should match ./b/.c with !a/?
    ✓ should match ./b/.c with !a/? and {dot: true}
    ✓ should match ./b/.c with !a/? and {nonegate: true}
    ✓ should match .b with !a/?
    ✓ should match .b with !a/? and {dot: true}
    ✓ should match .b with !a/? and {nonegate: true}
    ✓ should match .b.c with !a/?
    ✓ should match .b.c with !a/? and {dot: true}
    ✓ should match .b.c with !a/? and {nonegate: true}
    ✓ should match .b.c/ with !a/?
    ✓ should match .b.c/ with !a/? and {dot: true}
    ✓ should match .b.c/ with !a/? and {nonegate: true}
    ✓ should match .b/ with !a/?
    ✓ should match .b/ with !a/? and {dot: true}
    ✓ should match .b/ with !a/? and {nonegate: true}
    ✓ should match .b/.c with !a/?
    ✓ should match .b/.c with !a/? and {dot: true}
    ✓ should match .b/.c with !a/? and {nonegate: true}
    ✓ should match .b/c with !a/?
    ✓ should match .b/c with !a/? and {dot: true}
    ✓ should match .b/c with !a/? and {nonegate: true}
    ✓ should match b/.c with !a/?
    ✓ should match b/.c with !a/? and {dot: true}
    ✓ should match b/.c with !a/? and {nonegate: true}
    ✓ should match b/.c/ with !a/?
    ✓ should match b/.c/ with !a/? and {dot: true}
    ✓ should match b/.c/ with !a/? and {nonegate: true}
    ✓ should match a/+b/c with !a/?
    ✓ should match a/+b/c with !a/? and {dot: true}
    ✓ should match a/+b/c with !a/? and {nonegate: true}
    ✓ should match +a/+b/c with !a/?
    ✓ should match +a/+b/c with !a/? and {dot: true}
    ✓ should match +a/+b/c with !a/? and {nonegate: true}
    ✓ should match a (foo) with !a/?
    ✓ should match a (foo) with !a/? and {dot: true}
    ✓ should match a (foo) with !a/? and {nonegate: true}
    ✓ should match a (foo)/(bar) with !a/?
    ✓ should match a (foo)/(bar) with !a/? and {dot: true}
    ✓ should match a (foo)/(bar) with !a/? and {nonegate: true}
    ✓ should match a/b/c (1) with !a/?
    ✓ should match a/b/c (1) with !a/? and {dot: true}
    ✓ should match a/b/c (1) with !a/? and {nonegate: true}
    ✓ should match a/b (2)/c (1) with !a/?
    ✓ should match a/b (2)/c (1) with !a/? and {dot: true}
    ✓ should match a/b (2)/c (1) with !a/? and {nonegate: true}
    ✓ should match a/b/c [def] with !a/?
    ✓ should match a/b/c [def] with !a/? and {dot: true}
    ✓ should match a/b/c [def] with !a/? and {nonegate: true}
    ✓ should match a with !a/?*b
    ✓ should match a with !a/?*b and {dot: true}
    ✓ should match a with !a/?*b and {nonegate: true}
    ✓ should match a.md with !a/?*b
    ✓ should match a.md with !a/?*b and {dot: true}
    ✓ should match a.md with !a/?*b and {nonegate: true}
    ✓ should match a.js with !a/?*b
    ✓ should match a.js with !a/?*b and {dot: true}
    ✓ should match a.js with !a/?*b and {nonegate: true}
    ✓ should match a/ with !a/?*b
    ✓ should match a/ with !a/?*b and {dot: true}
    ✓ should match a/ with !a/?*b and {nonegate: true}
    ✓ should match a/b with !a/?*b
    ✓ should match a/b with !a/?*b and {dot: true}
    ✓ should match a/b with !a/?*b and {nonegate: true}
    ✓ should match a/b/.c.md with !a/?*b
    ✓ should match a/b/.c.md with !a/?*b and {dot: true}
    ✓ should match a/b/.c.md with !a/?*b and {nonegate: true}
    ✓ should match a/b/c with !a/?*b
    ✓ should match a/b/c with !a/?*b and {dot: true}
    ✓ should match a/b/c with !a/?*b and {nonegate: true}
    ✓ should match a/b/c.md with !a/?*b
    ✓ should match a/b/c.md with !a/?*b and {dot: true}
    ✓ should match a/b/c.md with !a/?*b and {nonegate: true}
    ✓ should match a/b/c/ with !a/?*b
    ✓ should match a/b/c/ with !a/?*b and {dot: true}
    ✓ should match a/b/c/ with !a/?*b and {nonegate: true}
    ✓ should match a/b/c/d with !a/?*b
    ✓ should match a/b/c/d with !a/?*b and {dot: true}
    ✓ should match a/b/c/d with !a/?*b and {nonegate: true}
    ✓ should match a/b/c/d/ with !a/?*b
    ✓ should match a/b/c/d/ with !a/?*b and {dot: true}
    ✓ should match a/b/c/d/ with !a/?*b and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with !a/?*b
    ✓ should match a/b/c/d/e/f/z.js with !a/?*b and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with !a/?*b and {nonegate: true}
    ✓ should match a/b/c/z.js with !a/?*b
    ✓ should match a/b/c/z.js with !a/?*b and {dot: true}
    ✓ should match a/b/c/z.js with !a/?*b and {nonegate: true}
    ✓ should match a/bb with !a/?*b
    ✓ should match a/bb with !a/?*b and {dot: true}
    ✓ should match a/bb with !a/?*b and {nonegate: true}
    ✓ should match a/cb with !a/?*b
    ✓ should match a/cb with !a/?*b and {dot: true}
    ✓ should match a/cb with !a/?*b and {nonegate: true}
    ✓ should match abbbz with !a/?*b
    ✓ should match abbbz with !a/?*b and {dot: true}
    ✓ should match abbbz with !a/?*b and {nonegate: true}
    ✓ should match abc with !a/?*b
    ✓ should match abc with !a/?*b and {dot: true}
    ✓ should match abc with !a/?*b and {nonegate: true}
    ✓ should match abd with !a/?*b
    ✓ should match abd with !a/?*b and {dot: true}
    ✓ should match abd with !a/?*b and {nonegate: true}
    ✓ should match z.js with !a/?*b
    ✓ should match z.js with !a/?*b and {dot: true}
    ✓ should match z.js with !a/?*b and {nonegate: true}
    ✓ should match za.js with !a/?*b
    ✓ should match za.js with !a/?*b and {dot: true}
    ✓ should match za.js with !a/?*b and {nonegate: true}
    ✓ should match !a.js with !a/?*b
    ✓ should match !a.js with !a/?*b and {dot: true}
    ✓ should match !a.js with !a/?*b and {nonegate: true}
    ✓ should match !a/b with !a/?*b
    ✓ should match !a/b with !a/?*b and {dot: true}
    ✓ should match !a/b with !a/?*b and {nonegate: true}
    ✓ should match !a/b/ with !a/?*b
    ✓ should match !a/b/ with !a/?*b and {dot: true}
    ✓ should match !a/b/ with !a/?*b and {nonegate: true}
    ✓ should match !a/b/c with !a/?*b
    ✓ should match !a/b/c with !a/?*b and {dot: true}
    ✓ should match !a/b/c with !a/?*b and {nonegate: true}
    ✓ should match !a/b/c/ with !a/?*b
    ✓ should match !a/b/c/ with !a/?*b and {dot: true}
    ✓ should match !a/b/c/ with !a/?*b and {nonegate: true}
    ✓ should match !a/!b with !a/?*b
    ✓ should match !a/!b with !a/?*b and {dot: true}
    ✓ should match !a/!b with !a/?*b and {nonegate: true}
    ✓ should match !a/!b/c with !a/?*b
    ✓ should match !a/!b/c with !a/?*b and {dot: true}
    ✓ should match !a/!b/c with !a/?*b and {nonegate: true}
    ✓ should match !a/!b/c/d with !a/?*b
    ✓ should match !a/!b/c/d with !a/?*b and {dot: true}
    ✓ should match !a/!b/c/d with !a/?*b and {nonegate: true}
    ✓ should match !a/b/.c.md with !a/?*b
    ✓ should match !a/b/.c.md with !a/?*b and {dot: true}
    ✓ should match !a/b/.c.md with !a/?*b and {nonegate: true}
    ✓ should match /a/ with !a/?*b
    ✓ should match /a/ with !a/?*b and {dot: true}
    ✓ should match /a/ with !a/?*b and {nonegate: true}
    ✓ should match /a/b with !a/?*b
    ✓ should match /a/b with !a/?*b and {dot: true}
    ✓ should match /a/b with !a/?*b and {nonegate: true}
    ✓ should match /a/cb with !a/?*b
    ✓ should match /a/cb with !a/?*b and {dot: true}
    ✓ should match /a/cb with !a/?*b and {nonegate: true}
    ✓ should match /a/bb with !a/?*b
    ✓ should match /a/bb with !a/?*b and {dot: true}
    ✓ should match /a/bb with !a/?*b and {nonegate: true}
    ✓ should match /a/b/c with !a/?*b
    ✓ should match /a/b/c with !a/?*b and {dot: true}
    ✓ should match /a/b/c with !a/?*b and {nonegate: true}
    ✓ should match /a/b/c/ with !a/?*b
    ✓ should match /a/b/c/ with !a/?*b and {dot: true}
    ✓ should match /a/b/c/ with !a/?*b and {nonegate: true}
    ✓ should match /a/b/c/d with !a/?*b
    ✓ should match /a/b/c/d with !a/?*b and {dot: true}
    ✓ should match /a/b/c/d with !a/?*b and {nonegate: true}
    ✓ should match /a/b/c/d/ with !a/?*b
    ✓ should match /a/b/c/d/ with !a/?*b and {dot: true}
    ✓ should match /a/b/c/d/ with !a/?*b and {nonegate: true}
    ✓ should match . with !a/?*b
    ✓ should match . with !a/?*b and {dot: true}
    ✓ should match . with !a/?*b and {nonegate: true}
    ✓ should match ./ with !a/?*b
    ✓ should match ./ with !a/?*b and {dot: true}
    ✓ should match ./ with !a/?*b and {nonegate: true}
    ✓ should match .. with !a/?*b
    ✓ should match .. with !a/?*b and {dot: true}
    ✓ should match .. with !a/?*b and {nonegate: true}
    ✓ should match ../c with !a/?*b
    ✓ should match ../c with !a/?*b and {dot: true}
    ✓ should match ../c with !a/?*b and {nonegate: true}
    ✓ should match ../c with !a/?*b
    ✓ should match ../c with !a/?*b and {dot: true}
    ✓ should match ../c with !a/?*b and {nonegate: true}
    ✓ should match ./../c with !a/?*b
    ✓ should match ./../c with !a/?*b and {dot: true}
    ✓ should match ./../c with !a/?*b and {nonegate: true}
    ✓ should match ./a/../c with !a/?*b
    ✓ should match ./a/../c with !a/?*b and {dot: true}
    ✓ should match ./a/../c with !a/?*b and {nonegate: true}
    ✓ should match /.. with !a/?*b
    ✓ should match /.. with !a/?*b and {dot: true}
    ✓ should match /.. with !a/?*b and {nonegate: true}
    ✓ should match /../c with !a/?*b
    ✓ should match /../c with !a/?*b and {dot: true}
    ✓ should match /../c with !a/?*b and {nonegate: true}
    ✓ should match /../.c with !a/?*b
    ✓ should match /../.c with !a/?*b and {dot: true}
    ✓ should match /../.c with !a/?*b and {nonegate: true}
    ✓ should match /../.c/ with !a/?*b
    ✓ should match /../.c/ with !a/?*b and {dot: true}
    ✓ should match /../.c/ with !a/?*b and {nonegate: true}
    ✓ should match /a/../c with !a/?*b
    ✓ should match /a/../c with !a/?*b and {dot: true}
    ✓ should match /a/../c with !a/?*b and {nonegate: true}
    ✓ should match a/../c with !a/?*b
    ✓ should match a/../c with !a/?*b and {dot: true}
    ✓ should match a/../c with !a/?*b and {nonegate: true}
    ✓ should match ../.b/.c with !a/?*b
    ✓ should match ../.b/.c with !a/?*b and {dot: true}
    ✓ should match ../.b/.c with !a/?*b and {nonegate: true}
    ✓ should match ../b/.c with !a/?*b
    ✓ should match ../b/.c with !a/?*b and {dot: true}
    ✓ should match ../b/.c with !a/?*b and {nonegate: true}
    ✓ should match ./.b/.c with !a/?*b
    ✓ should match ./.b/.c with !a/?*b and {dot: true}
    ✓ should match ./.b/.c with !a/?*b and {nonegate: true}
    ✓ should match ./b/.c with !a/?*b
    ✓ should match ./b/.c with !a/?*b and {dot: true}
    ✓ should match ./b/.c with !a/?*b and {nonegate: true}
    ✓ should match .b with !a/?*b
    ✓ should match .b with !a/?*b and {dot: true}
    ✓ should match .b with !a/?*b and {nonegate: true}
    ✓ should match .b.c with !a/?*b
    ✓ should match .b.c with !a/?*b and {dot: true}
    ✓ should match .b.c with !a/?*b and {nonegate: true}
    ✓ should match .b.c/ with !a/?*b
    ✓ should match .b.c/ with !a/?*b and {dot: true}
    ✓ should match .b.c/ with !a/?*b and {nonegate: true}
    ✓ should match .b/ with !a/?*b
    ✓ should match .b/ with !a/?*b and {dot: true}
    ✓ should match .b/ with !a/?*b and {nonegate: true}
    ✓ should match .b/.c with !a/?*b
    ✓ should match .b/.c with !a/?*b and {dot: true}
    ✓ should match .b/.c with !a/?*b and {nonegate: true}
    ✓ should match .b/c with !a/?*b
    ✓ should match .b/c with !a/?*b and {dot: true}
    ✓ should match .b/c with !a/?*b and {nonegate: true}
    ✓ should match b/.c with !a/?*b
    ✓ should match b/.c with !a/?*b and {dot: true}
    ✓ should match b/.c with !a/?*b and {nonegate: true}
    ✓ should match b/.c/ with !a/?*b
    ✓ should match b/.c/ with !a/?*b and {dot: true}
    ✓ should match b/.c/ with !a/?*b and {nonegate: true}
    ✓ should match a/+b/c with !a/?*b
    ✓ should match a/+b/c with !a/?*b and {dot: true}
    ✓ should match a/+b/c with !a/?*b and {nonegate: true}
    ✓ should match +a/+b/c with !a/?*b
    ✓ should match +a/+b/c with !a/?*b and {dot: true}
    ✓ should match +a/+b/c with !a/?*b and {nonegate: true}
    ✓ should match a (foo) with !a/?*b
    ✓ should match a (foo) with !a/?*b and {dot: true}
    ✓ should match a (foo) with !a/?*b and {nonegate: true}
    ✓ should match a (foo)/(bar) with !a/?*b
    ✓ should match a (foo)/(bar) with !a/?*b and {dot: true}
    ✓ should match a (foo)/(bar) with !a/?*b and {nonegate: true}
    ✓ should match a/b/c (1) with !a/?*b
    ✓ should match a/b/c (1) with !a/?*b and {dot: true}
    ✓ should match a/b/c (1) with !a/?*b and {nonegate: true}
    ✓ should match a/b (2)/c (1) with !a/?*b
    ✓ should match a/b (2)/c (1) with !a/?*b and {dot: true}
    ✓ should match a/b (2)/c (1) with !a/?*b and {nonegate: true}
    ✓ should match a/b/c [def] with !a/?*b
    ✓ should match a/b/c [def] with !a/?*b and {dot: true}
    ✓ should match a/b/c [def] with !a/?*b and {nonegate: true}
    ✓ should match a with !a/??b
    ✓ should match a with !a/??b and {dot: true}
    ✓ should match a with !a/??b and {nonegate: true}
    ✓ should match a.md with !a/??b
    ✓ should match a.md with !a/??b and {dot: true}
    ✓ should match a.md with !a/??b and {nonegate: true}
    ✓ should match a.js with !a/??b
    ✓ should match a.js with !a/??b and {dot: true}
    ✓ should match a.js with !a/??b and {nonegate: true}
    ✓ should match a/ with !a/??b
    ✓ should match a/ with !a/??b and {dot: true}
    ✓ should match a/ with !a/??b and {nonegate: true}
    ✓ should match a/b with !a/??b
    ✓ should match a/b with !a/??b and {dot: true}
    ✓ should match a/b with !a/??b and {nonegate: true}
    ✓ should match a/b/.c.md with !a/??b
    ✓ should match a/b/.c.md with !a/??b and {dot: true}
    ✓ should match a/b/.c.md with !a/??b and {nonegate: true}
    ✓ should match a/b/c with !a/??b
    ✓ should match a/b/c with !a/??b and {dot: true}
    ✓ should match a/b/c with !a/??b and {nonegate: true}
    ✓ should match a/b/c.md with !a/??b
    ✓ should match a/b/c.md with !a/??b and {dot: true}
    ✓ should match a/b/c.md with !a/??b and {nonegate: true}
    ✓ should match a/b/c/ with !a/??b
    ✓ should match a/b/c/ with !a/??b and {dot: true}
    ✓ should match a/b/c/ with !a/??b and {nonegate: true}
    ✓ should match a/b/c/d with !a/??b
    ✓ should match a/b/c/d with !a/??b and {dot: true}
    ✓ should match a/b/c/d with !a/??b and {nonegate: true}
    ✓ should match a/b/c/d/ with !a/??b
    ✓ should match a/b/c/d/ with !a/??b and {dot: true}
    ✓ should match a/b/c/d/ with !a/??b and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with !a/??b
    ✓ should match a/b/c/d/e/f/z.js with !a/??b and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with !a/??b and {nonegate: true}
    ✓ should match a/b/c/z.js with !a/??b
    ✓ should match a/b/c/z.js with !a/??b and {dot: true}
    ✓ should match a/b/c/z.js with !a/??b and {nonegate: true}
    ✓ should match a/bb with !a/??b
    ✓ should match a/bb with !a/??b and {dot: true}
    ✓ should match a/bb with !a/??b and {nonegate: true}
    ✓ should match a/cb with !a/??b
    ✓ should match a/cb with !a/??b and {dot: true}
    ✓ should match a/cb with !a/??b and {nonegate: true}
    ✓ should match abbbz with !a/??b
    ✓ should match abbbz with !a/??b and {dot: true}
    ✓ should match abbbz with !a/??b and {nonegate: true}
    ✓ should match abc with !a/??b
    ✓ should match abc with !a/??b and {dot: true}
    ✓ should match abc with !a/??b and {nonegate: true}
    ✓ should match abd with !a/??b
    ✓ should match abd with !a/??b and {dot: true}
    ✓ should match abd with !a/??b and {nonegate: true}
    ✓ should match z.js with !a/??b
    ✓ should match z.js with !a/??b and {dot: true}
    ✓ should match z.js with !a/??b and {nonegate: true}
    ✓ should match za.js with !a/??b
    ✓ should match za.js with !a/??b and {dot: true}
    ✓ should match za.js with !a/??b and {nonegate: true}
    ✓ should match !a.js with !a/??b
    ✓ should match !a.js with !a/??b and {dot: true}
    ✓ should match !a.js with !a/??b and {nonegate: true}
    ✓ should match !a/b with !a/??b
    ✓ should match !a/b with !a/??b and {dot: true}
    ✓ should match !a/b with !a/??b and {nonegate: true}
    ✓ should match !a/b/ with !a/??b
    ✓ should match !a/b/ with !a/??b and {dot: true}
    ✓ should match !a/b/ with !a/??b and {nonegate: true}
    ✓ should match !a/b/c with !a/??b
    ✓ should match !a/b/c with !a/??b and {dot: true}
    ✓ should match !a/b/c with !a/??b and {nonegate: true}
    ✓ should match !a/b/c/ with !a/??b
    ✓ should match !a/b/c/ with !a/??b and {dot: true}
    ✓ should match !a/b/c/ with !a/??b and {nonegate: true}
    ✓ should match !a/!b with !a/??b
    ✓ should match !a/!b with !a/??b and {dot: true}
    ✓ should match !a/!b with !a/??b and {nonegate: true}
    ✓ should match !a/!b/c with !a/??b
    ✓ should match !a/!b/c with !a/??b and {dot: true}
    ✓ should match !a/!b/c with !a/??b and {nonegate: true}
    ✓ should match !a/!b/c/d with !a/??b
    ✓ should match !a/!b/c/d with !a/??b and {dot: true}
    ✓ should match !a/!b/c/d with !a/??b and {nonegate: true}
    ✓ should match !a/b/.c.md with !a/??b
    ✓ should match !a/b/.c.md with !a/??b and {dot: true}
    ✓ should match !a/b/.c.md with !a/??b and {nonegate: true}
    ✓ should match /a/ with !a/??b
    ✓ should match /a/ with !a/??b and {dot: true}
    ✓ should match /a/ with !a/??b and {nonegate: true}
    ✓ should match /a/b with !a/??b
    ✓ should match /a/b with !a/??b and {dot: true}
    ✓ should match /a/b with !a/??b and {nonegate: true}
    ✓ should match /a/cb with !a/??b
    ✓ should match /a/cb with !a/??b and {dot: true}
    ✓ should match /a/cb with !a/??b and {nonegate: true}
    ✓ should match /a/bb with !a/??b
    ✓ should match /a/bb with !a/??b and {dot: true}
    ✓ should match /a/bb with !a/??b and {nonegate: true}
    ✓ should match /a/b/c with !a/??b
    ✓ should match /a/b/c with !a/??b and {dot: true}
    ✓ should match /a/b/c with !a/??b and {nonegate: true}
    ✓ should match /a/b/c/ with !a/??b
    ✓ should match /a/b/c/ with !a/??b and {dot: true}
    ✓ should match /a/b/c/ with !a/??b and {nonegate: true}
    ✓ should match /a/b/c/d with !a/??b
    ✓ should match /a/b/c/d with !a/??b and {dot: true}
    ✓ should match /a/b/c/d with !a/??b and {nonegate: true}
    ✓ should match /a/b/c/d/ with !a/??b
    ✓ should match /a/b/c/d/ with !a/??b and {dot: true}
    ✓ should match /a/b/c/d/ with !a/??b and {nonegate: true}
    ✓ should match . with !a/??b
    ✓ should match . with !a/??b and {dot: true}
    ✓ should match . with !a/??b and {nonegate: true}
    ✓ should match ./ with !a/??b
    ✓ should match ./ with !a/??b and {dot: true}
    ✓ should match ./ with !a/??b and {nonegate: true}
    ✓ should match .. with !a/??b
    ✓ should match .. with !a/??b and {dot: true}
    ✓ should match .. with !a/??b and {nonegate: true}
    ✓ should match ../c with !a/??b
    ✓ should match ../c with !a/??b and {dot: true}
    ✓ should match ../c with !a/??b and {nonegate: true}
    ✓ should match ../c with !a/??b
    ✓ should match ../c with !a/??b and {dot: true}
    ✓ should match ../c with !a/??b and {nonegate: true}
    ✓ should match ./../c with !a/??b
    ✓ should match ./../c with !a/??b and {dot: true}
    ✓ should match ./../c with !a/??b and {nonegate: true}
    ✓ should match ./a/../c with !a/??b
    ✓ should match ./a/../c with !a/??b and {dot: true}
    ✓ should match ./a/../c with !a/??b and {nonegate: true}
    ✓ should match /.. with !a/??b
    ✓ should match /.. with !a/??b and {dot: true}
    ✓ should match /.. with !a/??b and {nonegate: true}
    ✓ should match /../c with !a/??b
    ✓ should match /../c with !a/??b and {dot: true}
    ✓ should match /../c with !a/??b and {nonegate: true}
    ✓ should match /../.c with !a/??b
    ✓ should match /../.c with !a/??b and {dot: true}
    ✓ should match /../.c with !a/??b and {nonegate: true}
    ✓ should match /../.c/ with !a/??b
    ✓ should match /../.c/ with !a/??b and {dot: true}
    ✓ should match /../.c/ with !a/??b and {nonegate: true}
    ✓ should match /a/../c with !a/??b
    ✓ should match /a/../c with !a/??b and {dot: true}
    ✓ should match /a/../c with !a/??b and {nonegate: true}
    ✓ should match a/../c with !a/??b
    ✓ should match a/../c with !a/??b and {dot: true}
    ✓ should match a/../c with !a/??b and {nonegate: true}
    ✓ should match ../.b/.c with !a/??b
    ✓ should match ../.b/.c with !a/??b and {dot: true}
    ✓ should match ../.b/.c with !a/??b and {nonegate: true}
    ✓ should match ../b/.c with !a/??b
    ✓ should match ../b/.c with !a/??b and {dot: true}
    ✓ should match ../b/.c with !a/??b and {nonegate: true}
    ✓ should match ./.b/.c with !a/??b
    ✓ should match ./.b/.c with !a/??b and {dot: true}
    ✓ should match ./.b/.c with !a/??b and {nonegate: true}
    ✓ should match ./b/.c with !a/??b
    ✓ should match ./b/.c with !a/??b and {dot: true}
    ✓ should match ./b/.c with !a/??b and {nonegate: true}
    ✓ should match .b with !a/??b
    ✓ should match .b with !a/??b and {dot: true}
    ✓ should match .b with !a/??b and {nonegate: true}
    ✓ should match .b.c with !a/??b
    ✓ should match .b.c with !a/??b and {dot: true}
    ✓ should match .b.c with !a/??b and {nonegate: true}
    ✓ should match .b.c/ with !a/??b
    ✓ should match .b.c/ with !a/??b and {dot: true}
    ✓ should match .b.c/ with !a/??b and {nonegate: true}
    ✓ should match .b/ with !a/??b
    ✓ should match .b/ with !a/??b and {dot: true}
    ✓ should match .b/ with !a/??b and {nonegate: true}
    ✓ should match .b/.c with !a/??b
    ✓ should match .b/.c with !a/??b and {dot: true}
    ✓ should match .b/.c with !a/??b and {nonegate: true}
    ✓ should match .b/c with !a/??b
    ✓ should match .b/c with !a/??b and {dot: true}
    ✓ should match .b/c with !a/??b and {nonegate: true}
    ✓ should match b/.c with !a/??b
    ✓ should match b/.c with !a/??b and {dot: true}
    ✓ should match b/.c with !a/??b and {nonegate: true}
    ✓ should match b/.c/ with !a/??b
    ✓ should match b/.c/ with !a/??b and {dot: true}
    ✓ should match b/.c/ with !a/??b and {nonegate: true}
    ✓ should match a/+b/c with !a/??b
    ✓ should match a/+b/c with !a/??b and {dot: true}
    ✓ should match a/+b/c with !a/??b and {nonegate: true}
    ✓ should match +a/+b/c with !a/??b
    ✓ should match +a/+b/c with !a/??b and {dot: true}
    ✓ should match +a/+b/c with !a/??b and {nonegate: true}
    ✓ should match a (foo) with !a/??b
    ✓ should match a (foo) with !a/??b and {dot: true}
    ✓ should match a (foo) with !a/??b and {nonegate: true}
    ✓ should match a (foo)/(bar) with !a/??b
    ✓ should match a (foo)/(bar) with !a/??b and {dot: true}
    ✓ should match a (foo)/(bar) with !a/??b and {nonegate: true}
    ✓ should match a/b/c (1) with !a/??b
    ✓ should match a/b/c (1) with !a/??b and {dot: true}
    ✓ should match a/b/c (1) with !a/??b and {nonegate: true}
    ✓ should match a/b (2)/c (1) with !a/??b
    ✓ should match a/b (2)/c (1) with !a/??b and {dot: true}
    ✓ should match a/b (2)/c (1) with !a/??b and {nonegate: true}
    ✓ should match a/b/c [def] with !a/??b
    ✓ should match a/b/c [def] with !a/??b and {dot: true}
    ✓ should match a/b/c [def] with !a/??b and {nonegate: true}
    ✓ should match a with !a/?b
    ✓ should match a with !a/?b and {dot: true}
    ✓ should match a with !a/?b and {nonegate: true}
    ✓ should match a.md with !a/?b
    ✓ should match a.md with !a/?b and {dot: true}
    ✓ should match a.md with !a/?b and {nonegate: true}
    ✓ should match a.js with !a/?b
    ✓ should match a.js with !a/?b and {dot: true}
    ✓ should match a.js with !a/?b and {nonegate: true}
    ✓ should match a/ with !a/?b
    ✓ should match a/ with !a/?b and {dot: true}
    ✓ should match a/ with !a/?b and {nonegate: true}
    ✓ should match a/b with !a/?b
    ✓ should match a/b with !a/?b and {dot: true}
    ✓ should match a/b with !a/?b and {nonegate: true}
    ✓ should match a/b/.c.md with !a/?b
    ✓ should match a/b/.c.md with !a/?b and {dot: true}
    ✓ should match a/b/.c.md with !a/?b and {nonegate: true}
    ✓ should match a/b/c with !a/?b
    ✓ should match a/b/c with !a/?b and {dot: true}
    ✓ should match a/b/c with !a/?b and {nonegate: true}
    ✓ should match a/b/c.md with !a/?b
    ✓ should match a/b/c.md with !a/?b and {dot: true}
    ✓ should match a/b/c.md with !a/?b and {nonegate: true}
    ✓ should match a/b/c/ with !a/?b
    ✓ should match a/b/c/ with !a/?b and {dot: true}
    ✓ should match a/b/c/ with !a/?b and {nonegate: true}
    ✓ should match a/b/c/d with !a/?b
    ✓ should match a/b/c/d with !a/?b and {dot: true}
    ✓ should match a/b/c/d with !a/?b and {nonegate: true}
    ✓ should match a/b/c/d/ with !a/?b
    ✓ should match a/b/c/d/ with !a/?b and {dot: true}
    ✓ should match a/b/c/d/ with !a/?b and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with !a/?b
    ✓ should match a/b/c/d/e/f/z.js with !a/?b and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with !a/?b and {nonegate: true}
    ✓ should match a/b/c/z.js with !a/?b
    ✓ should match a/b/c/z.js with !a/?b and {dot: true}
    ✓ should match a/b/c/z.js with !a/?b and {nonegate: true}
    ✓ should match a/bb with !a/?b
    ✓ should match a/bb with !a/?b and {dot: true}
    ✓ should match a/bb with !a/?b and {nonegate: true}
    ✓ should match a/cb with !a/?b
    ✓ should match a/cb with !a/?b and {dot: true}
    ✓ should match a/cb with !a/?b and {nonegate: true}
    ✓ should match abbbz with !a/?b
    ✓ should match abbbz with !a/?b and {dot: true}
    ✓ should match abbbz with !a/?b and {nonegate: true}
    ✓ should match abc with !a/?b
    ✓ should match abc with !a/?b and {dot: true}
    ✓ should match abc with !a/?b and {nonegate: true}
    ✓ should match abd with !a/?b
    ✓ should match abd with !a/?b and {dot: true}
    ✓ should match abd with !a/?b and {nonegate: true}
    ✓ should match z.js with !a/?b
    ✓ should match z.js with !a/?b and {dot: true}
    ✓ should match z.js with !a/?b and {nonegate: true}
    ✓ should match za.js with !a/?b
    ✓ should match za.js with !a/?b and {dot: true}
    ✓ should match za.js with !a/?b and {nonegate: true}
    ✓ should match !a.js with !a/?b
    ✓ should match !a.js with !a/?b and {dot: true}
    ✓ should match !a.js with !a/?b and {nonegate: true}
    ✓ should match !a/b with !a/?b
    ✓ should match !a/b with !a/?b and {dot: true}
    ✓ should match !a/b with !a/?b and {nonegate: true}
    ✓ should match !a/b/ with !a/?b
    ✓ should match !a/b/ with !a/?b and {dot: true}
    ✓ should match !a/b/ with !a/?b and {nonegate: true}
    ✓ should match !a/b/c with !a/?b
    ✓ should match !a/b/c with !a/?b and {dot: true}
    ✓ should match !a/b/c with !a/?b and {nonegate: true}
    ✓ should match !a/b/c/ with !a/?b
    ✓ should match !a/b/c/ with !a/?b and {dot: true}
    ✓ should match !a/b/c/ with !a/?b and {nonegate: true}
    ✓ should match !a/!b with !a/?b
    ✓ should match !a/!b with !a/?b and {dot: true}
    ✓ should match !a/!b with !a/?b and {nonegate: true}
    ✓ should match !a/!b/c with !a/?b
    ✓ should match !a/!b/c with !a/?b and {dot: true}
    ✓ should match !a/!b/c with !a/?b and {nonegate: true}
    ✓ should match !a/!b/c/d with !a/?b
    ✓ should match !a/!b/c/d with !a/?b and {dot: true}
    ✓ should match !a/!b/c/d with !a/?b and {nonegate: true}
    ✓ should match !a/b/.c.md with !a/?b
    ✓ should match !a/b/.c.md with !a/?b and {dot: true}
    ✓ should match !a/b/.c.md with !a/?b and {nonegate: true}
    ✓ should match /a/ with !a/?b
    ✓ should match /a/ with !a/?b and {dot: true}
    ✓ should match /a/ with !a/?b and {nonegate: true}
    ✓ should match /a/b with !a/?b
    ✓ should match /a/b with !a/?b and {dot: true}
    ✓ should match /a/b with !a/?b and {nonegate: true}
    ✓ should match /a/cb with !a/?b
    ✓ should match /a/cb with !a/?b and {dot: true}
    ✓ should match /a/cb with !a/?b and {nonegate: true}
    ✓ should match /a/bb with !a/?b
    ✓ should match /a/bb with !a/?b and {dot: true}
    ✓ should match /a/bb with !a/?b and {nonegate: true}
    ✓ should match /a/b/c with !a/?b
    ✓ should match /a/b/c with !a/?b and {dot: true}
    ✓ should match /a/b/c with !a/?b and {nonegate: true}
    ✓ should match /a/b/c/ with !a/?b
    ✓ should match /a/b/c/ with !a/?b and {dot: true}
    ✓ should match /a/b/c/ with !a/?b and {nonegate: true}
    ✓ should match /a/b/c/d with !a/?b
    ✓ should match /a/b/c/d with !a/?b and {dot: true}
    ✓ should match /a/b/c/d with !a/?b and {nonegate: true}
    ✓ should match /a/b/c/d/ with !a/?b
    ✓ should match /a/b/c/d/ with !a/?b and {dot: true}
    ✓ should match /a/b/c/d/ with !a/?b and {nonegate: true}
    ✓ should match . with !a/?b
    ✓ should match . with !a/?b and {dot: true}
    ✓ should match . with !a/?b and {nonegate: true}
    ✓ should match ./ with !a/?b
    ✓ should match ./ with !a/?b and {dot: true}
    ✓ should match ./ with !a/?b and {nonegate: true}
    ✓ should match .. with !a/?b
    ✓ should match .. with !a/?b and {dot: true}
    ✓ should match .. with !a/?b and {nonegate: true}
    ✓ should match ../c with !a/?b
    ✓ should match ../c with !a/?b and {dot: true}
    ✓ should match ../c with !a/?b and {nonegate: true}
    ✓ should match ../c with !a/?b
    ✓ should match ../c with !a/?b and {dot: true}
    ✓ should match ../c with !a/?b and {nonegate: true}
    ✓ should match ./../c with !a/?b
    ✓ should match ./../c with !a/?b and {dot: true}
    ✓ should match ./../c with !a/?b and {nonegate: true}
    ✓ should match ./a/../c with !a/?b
    ✓ should match ./a/../c with !a/?b and {dot: true}
    ✓ should match ./a/../c with !a/?b and {nonegate: true}
    ✓ should match /.. with !a/?b
    ✓ should match /.. with !a/?b and {dot: true}
    ✓ should match /.. with !a/?b and {nonegate: true}
    ✓ should match /../c with !a/?b
    ✓ should match /../c with !a/?b and {dot: true}
    ✓ should match /../c with !a/?b and {nonegate: true}
    ✓ should match /../.c with !a/?b
    ✓ should match /../.c with !a/?b and {dot: true}
    ✓ should match /../.c with !a/?b and {nonegate: true}
    ✓ should match /../.c/ with !a/?b
    ✓ should match /../.c/ with !a/?b and {dot: true}
    ✓ should match /../.c/ with !a/?b and {nonegate: true}
    ✓ should match /a/../c with !a/?b
    ✓ should match /a/../c with !a/?b and {dot: true}
    ✓ should match /a/../c with !a/?b and {nonegate: true}
    ✓ should match a/../c with !a/?b
    ✓ should match a/../c with !a/?b and {dot: true}
    ✓ should match a/../c with !a/?b and {nonegate: true}
    ✓ should match ../.b/.c with !a/?b
    ✓ should match ../.b/.c with !a/?b and {dot: true}
    ✓ should match ../.b/.c with !a/?b and {nonegate: true}
    ✓ should match ../b/.c with !a/?b
    ✓ should match ../b/.c with !a/?b and {dot: true}
    ✓ should match ../b/.c with !a/?b and {nonegate: true}
    ✓ should match ./.b/.c with !a/?b
    ✓ should match ./.b/.c with !a/?b and {dot: true}
    ✓ should match ./.b/.c with !a/?b and {nonegate: true}
    ✓ should match ./b/.c with !a/?b
    ✓ should match ./b/.c with !a/?b and {dot: true}
    ✓ should match ./b/.c with !a/?b and {nonegate: true}
    ✓ should match .b with !a/?b
    ✓ should match .b with !a/?b and {dot: true}
    ✓ should match .b with !a/?b and {nonegate: true}
    ✓ should match .b.c with !a/?b
    ✓ should match .b.c with !a/?b and {dot: true}
    ✓ should match .b.c with !a/?b and {nonegate: true}
    ✓ should match .b.c/ with !a/?b
    ✓ should match .b.c/ with !a/?b and {dot: true}
    ✓ should match .b.c/ with !a/?b and {nonegate: true}
    ✓ should match .b/ with !a/?b
    ✓ should match .b/ with !a/?b and {dot: true}
    ✓ should match .b/ with !a/?b and {nonegate: true}
    ✓ should match .b/.c with !a/?b
    ✓ should match .b/.c with !a/?b and {dot: true}
    ✓ should match .b/.c with !a/?b and {nonegate: true}
    ✓ should match .b/c with !a/?b
    ✓ should match .b/c with !a/?b and {dot: true}
    ✓ should match .b/c with !a/?b and {nonegate: true}
    ✓ should match b/.c with !a/?b
    ✓ should match b/.c with !a/?b and {dot: true}
    ✓ should match b/.c with !a/?b and {nonegate: true}
    ✓ should match b/.c/ with !a/?b
    ✓ should match b/.c/ with !a/?b and {dot: true}
    ✓ should match b/.c/ with !a/?b and {nonegate: true}
    ✓ should match a/+b/c with !a/?b
    ✓ should match a/+b/c with !a/?b and {dot: true}
    ✓ should match a/+b/c with !a/?b and {nonegate: true}
    ✓ should match +a/+b/c with !a/?b
    ✓ should match +a/+b/c with !a/?b and {dot: true}
    ✓ should match +a/+b/c with !a/?b and {nonegate: true}
    ✓ should match a (foo) with !a/?b
    ✓ should match a (foo) with !a/?b and {dot: true}
    ✓ should match a (foo) with !a/?b and {nonegate: true}
    ✓ should match a (foo)/(bar) with !a/?b
    ✓ should match a (foo)/(bar) with !a/?b and {dot: true}
    ✓ should match a (foo)/(bar) with !a/?b and {nonegate: true}
    ✓ should match a/b/c (1) with !a/?b
    ✓ should match a/b/c (1) with !a/?b and {dot: true}
    ✓ should match a/b/c (1) with !a/?b and {nonegate: true}
    ✓ should match a/b (2)/c (1) with !a/?b
    ✓ should match a/b (2)/c (1) with !a/?b and {dot: true}
    ✓ should match a/b (2)/c (1) with !a/?b and {nonegate: true}
    ✓ should match a/b/c [def] with !a/?b
    ✓ should match a/b/c [def] with !a/?b and {dot: true}
    ✓ should match a/b/c [def] with !a/?b and {nonegate: true}
    ✓ should match a with !a/b/!*
    ✓ should match a with !a/b/!* and {dot: true}
    ✓ should match a with !a/b/!* and {nonegate: true}
    ✓ should match a.md with !a/b/!*
    ✓ should match a.md with !a/b/!* and {dot: true}
    ✓ should match a.md with !a/b/!* and {nonegate: true}
    ✓ should match a.js with !a/b/!*
    ✓ should match a.js with !a/b/!* and {dot: true}
    ✓ should match a.js with !a/b/!* and {nonegate: true}
    ✓ should match a/ with !a/b/!*
    ✓ should match a/ with !a/b/!* and {dot: true}
    ✓ should match a/ with !a/b/!* and {nonegate: true}
    ✓ should match a/b with !a/b/!*
    ✓ should match a/b with !a/b/!* and {dot: true}
    ✓ should match a/b with !a/b/!* and {nonegate: true}
    ✓ should match a/b/.c.md with !a/b/!*
    ✓ should match a/b/.c.md with !a/b/!* and {dot: true}
    ✓ should match a/b/.c.md with !a/b/!* and {nonegate: true}
    ✓ should match a/b/c with !a/b/!*
    ✓ should match a/b/c with !a/b/!* and {dot: true}
    ✓ should match a/b/c with !a/b/!* and {nonegate: true}
    ✓ should match a/b/c.md with !a/b/!*
    ✓ should match a/b/c.md with !a/b/!* and {dot: true}
    ✓ should match a/b/c.md with !a/b/!* and {nonegate: true}
    ✓ should match a/b/c/ with !a/b/!*
    ✓ should match a/b/c/ with !a/b/!* and {dot: true}
    ✓ should match a/b/c/ with !a/b/!* and {nonegate: true}
    ✓ should match a/b/c/d with !a/b/!*
    ✓ should match a/b/c/d with !a/b/!* and {dot: true}
    ✓ should match a/b/c/d with !a/b/!* and {nonegate: true}
    ✓ should match a/b/c/d/ with !a/b/!*
    ✓ should match a/b/c/d/ with !a/b/!* and {dot: true}
    ✓ should match a/b/c/d/ with !a/b/!* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with !a/b/!*
    ✓ should match a/b/c/d/e/f/z.js with !a/b/!* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with !a/b/!* and {nonegate: true}
    ✓ should match a/b/c/z.js with !a/b/!*
    ✓ should match a/b/c/z.js with !a/b/!* and {dot: true}
    ✓ should match a/b/c/z.js with !a/b/!* and {nonegate: true}
    ✓ should match a/bb with !a/b/!*
    ✓ should match a/bb with !a/b/!* and {dot: true}
    ✓ should match a/bb with !a/b/!* and {nonegate: true}
    ✓ should match a/cb with !a/b/!*
    ✓ should match a/cb with !a/b/!* and {dot: true}
    ✓ should match a/cb with !a/b/!* and {nonegate: true}
    ✓ should match abbbz with !a/b/!*
    ✓ should match abbbz with !a/b/!* and {dot: true}
    ✓ should match abbbz with !a/b/!* and {nonegate: true}
    ✓ should match abc with !a/b/!*
    ✓ should match abc with !a/b/!* and {dot: true}
    ✓ should match abc with !a/b/!* and {nonegate: true}
    ✓ should match abd with !a/b/!*
    ✓ should match abd with !a/b/!* and {dot: true}
    ✓ should match abd with !a/b/!* and {nonegate: true}
    ✓ should match z.js with !a/b/!*
    ✓ should match z.js with !a/b/!* and {dot: true}
    ✓ should match z.js with !a/b/!* and {nonegate: true}
    ✓ should match za.js with !a/b/!*
    ✓ should match za.js with !a/b/!* and {dot: true}
    ✓ should match za.js with !a/b/!* and {nonegate: true}
    ✓ should match !a.js with !a/b/!*
    ✓ should match !a.js with !a/b/!* and {dot: true}
    ✓ should match !a.js with !a/b/!* and {nonegate: true}
    ✓ should match !a/b with !a/b/!*
    ✓ should match !a/b with !a/b/!* and {dot: true}
    ✓ should match !a/b with !a/b/!* and {nonegate: true}
    ✓ should match !a/b/ with !a/b/!*
    ✓ should match !a/b/ with !a/b/!* and {dot: true}
    ✓ should match !a/b/ with !a/b/!* and {nonegate: true}
    ✓ should match !a/b/c with !a/b/!*
    ✓ should match !a/b/c with !a/b/!* and {dot: true}
    ✓ should match !a/b/c with !a/b/!* and {nonegate: true}
    ✓ should match !a/b/c/ with !a/b/!*
    ✓ should match !a/b/c/ with !a/b/!* and {dot: true}
    ✓ should match !a/b/c/ with !a/b/!* and {nonegate: true}
    ✓ should match !a/!b with !a/b/!*
    ✓ should match !a/!b with !a/b/!* and {dot: true}
    ✓ should match !a/!b with !a/b/!* and {nonegate: true}
    ✓ should match !a/!b/c with !a/b/!*
    ✓ should match !a/!b/c with !a/b/!* and {dot: true}
    ✓ should match !a/!b/c with !a/b/!* and {nonegate: true}
    ✓ should match !a/!b/c/d with !a/b/!*
    ✓ should match !a/!b/c/d with !a/b/!* and {dot: true}
    ✓ should match !a/!b/c/d with !a/b/!* and {nonegate: true}
    ✓ should match !a/b/.c.md with !a/b/!*
    ✓ should match !a/b/.c.md with !a/b/!* and {dot: true}
    ✓ should match !a/b/.c.md with !a/b/!* and {nonegate: true}
    ✓ should match /a/ with !a/b/!*
    ✓ should match /a/ with !a/b/!* and {dot: true}
    ✓ should match /a/ with !a/b/!* and {nonegate: true}
    ✓ should match /a/b with !a/b/!*
    ✓ should match /a/b with !a/b/!* and {dot: true}
    ✓ should match /a/b with !a/b/!* and {nonegate: true}
    ✓ should match /a/cb with !a/b/!*
    ✓ should match /a/cb with !a/b/!* and {dot: true}
    ✓ should match /a/cb with !a/b/!* and {nonegate: true}
    ✓ should match /a/bb with !a/b/!*
    ✓ should match /a/bb with !a/b/!* and {dot: true}
    ✓ should match /a/bb with !a/b/!* and {nonegate: true}
    ✓ should match /a/b/c with !a/b/!*
    ✓ should match /a/b/c with !a/b/!* and {dot: true}
    ✓ should match /a/b/c with !a/b/!* and {nonegate: true}
    ✓ should match /a/b/c/ with !a/b/!*
    ✓ should match /a/b/c/ with !a/b/!* and {dot: true}
    ✓ should match /a/b/c/ with !a/b/!* and {nonegate: true}
    ✓ should match /a/b/c/d with !a/b/!*
    ✓ should match /a/b/c/d with !a/b/!* and {dot: true}
    ✓ should match /a/b/c/d with !a/b/!* and {nonegate: true}
    ✓ should match /a/b/c/d/ with !a/b/!*
    ✓ should match /a/b/c/d/ with !a/b/!* and {dot: true}
    ✓ should match /a/b/c/d/ with !a/b/!* and {nonegate: true}
    ✓ should match . with !a/b/!*
    ✓ should match . with !a/b/!* and {dot: true}
    ✓ should match . with !a/b/!* and {nonegate: true}
    ✓ should match ./ with !a/b/!*
    ✓ should match ./ with !a/b/!* and {dot: true}
    ✓ should match ./ with !a/b/!* and {nonegate: true}
    ✓ should match .. with !a/b/!*
    ✓ should match .. with !a/b/!* and {dot: true}
    ✓ should match .. with !a/b/!* and {nonegate: true}
    ✓ should match ../c with !a/b/!*
    ✓ should match ../c with !a/b/!* and {dot: true}
    ✓ should match ../c with !a/b/!* and {nonegate: true}
    ✓ should match ../c with !a/b/!*
    ✓ should match ../c with !a/b/!* and {dot: true}
    ✓ should match ../c with !a/b/!* and {nonegate: true}
    ✓ should match ./../c with !a/b/!*
    ✓ should match ./../c with !a/b/!* and {dot: true}
    ✓ should match ./../c with !a/b/!* and {nonegate: true}
    ✓ should match ./a/../c with !a/b/!*
    ✓ should match ./a/../c with !a/b/!* and {dot: true}
    ✓ should match ./a/../c with !a/b/!* and {nonegate: true}
    ✓ should match /.. with !a/b/!*
    ✓ should match /.. with !a/b/!* and {dot: true}
    ✓ should match /.. with !a/b/!* and {nonegate: true}
    ✓ should match /../c with !a/b/!*
    ✓ should match /../c with !a/b/!* and {dot: true}
    ✓ should match /../c with !a/b/!* and {nonegate: true}
    ✓ should match /../.c with !a/b/!*
    ✓ should match /../.c with !a/b/!* and {dot: true}
    ✓ should match /../.c with !a/b/!* and {nonegate: true}
    ✓ should match /../.c/ with !a/b/!*
    ✓ should match /../.c/ with !a/b/!* and {dot: true}
    ✓ should match /../.c/ with !a/b/!* and {nonegate: true}
    ✓ should match /a/../c with !a/b/!*
    ✓ should match /a/../c with !a/b/!* and {dot: true}
    ✓ should match /a/../c with !a/b/!* and {nonegate: true}
    ✓ should match a/../c with !a/b/!*
    ✓ should match a/../c with !a/b/!* and {dot: true}
    ✓ should match a/../c with !a/b/!* and {nonegate: true}
    ✓ should match ../.b/.c with !a/b/!*
    ✓ should match ../.b/.c with !a/b/!* and {dot: true}
    ✓ should match ../.b/.c with !a/b/!* and {nonegate: true}
    ✓ should match ../b/.c with !a/b/!*
    ✓ should match ../b/.c with !a/b/!* and {dot: true}
    ✓ should match ../b/.c with !a/b/!* and {nonegate: true}
    ✓ should match ./.b/.c with !a/b/!*
    ✓ should match ./.b/.c with !a/b/!* and {dot: true}
    ✓ should match ./.b/.c with !a/b/!* and {nonegate: true}
    ✓ should match ./b/.c with !a/b/!*
    ✓ should match ./b/.c with !a/b/!* and {dot: true}
    ✓ should match ./b/.c with !a/b/!* and {nonegate: true}
    ✓ should match .b with !a/b/!*
    ✓ should match .b with !a/b/!* and {dot: true}
    ✓ should match .b with !a/b/!* and {nonegate: true}
    ✓ should match .b.c with !a/b/!*
    ✓ should match .b.c with !a/b/!* and {dot: true}
    ✓ should match .b.c with !a/b/!* and {nonegate: true}
    ✓ should match .b.c/ with !a/b/!*
    ✓ should match .b.c/ with !a/b/!* and {dot: true}
    ✓ should match .b.c/ with !a/b/!* and {nonegate: true}
    ✓ should match .b/ with !a/b/!*
    ✓ should match .b/ with !a/b/!* and {dot: true}
    ✓ should match .b/ with !a/b/!* and {nonegate: true}
    ✓ should match .b/.c with !a/b/!*
    ✓ should match .b/.c with !a/b/!* and {dot: true}
    ✓ should match .b/.c with !a/b/!* and {nonegate: true}
    ✓ should match .b/c with !a/b/!*
    ✓ should match .b/c with !a/b/!* and {dot: true}
    ✓ should match .b/c with !a/b/!* and {nonegate: true}
    ✓ should match b/.c with !a/b/!*
    ✓ should match b/.c with !a/b/!* and {dot: true}
    ✓ should match b/.c with !a/b/!* and {nonegate: true}
    ✓ should match b/.c/ with !a/b/!*
    ✓ should match b/.c/ with !a/b/!* and {dot: true}
    ✓ should match b/.c/ with !a/b/!* and {nonegate: true}
    ✓ should match a/+b/c with !a/b/!*
    ✓ should match a/+b/c with !a/b/!* and {dot: true}
    ✓ should match a/+b/c with !a/b/!* and {nonegate: true}
    ✓ should match +a/+b/c with !a/b/!*
    ✓ should match +a/+b/c with !a/b/!* and {dot: true}
    ✓ should match +a/+b/c with !a/b/!* and {nonegate: true}
    ✓ should match a (foo) with !a/b/!*
    ✓ should match a (foo) with !a/b/!* and {dot: true}
    ✓ should match a (foo) with !a/b/!* and {nonegate: true}
    ✓ should match a (foo)/(bar) with !a/b/!*
    ✓ should match a (foo)/(bar) with !a/b/!* and {dot: true}
    ✓ should match a (foo)/(bar) with !a/b/!* and {nonegate: true}
    ✓ should match a/b/c (1) with !a/b/!*
    ✓ should match a/b/c (1) with !a/b/!* and {dot: true}
    ✓ should match a/b/c (1) with !a/b/!* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with !a/b/!*
    ✓ should match a/b (2)/c (1) with !a/b/!* and {dot: true}
    ✓ should match a/b (2)/c (1) with !a/b/!* and {nonegate: true}
    ✓ should match a/b/c [def] with !a/b/!*
    ✓ should match a/b/c [def] with !a/b/!* and {dot: true}
    ✓ should match a/b/c [def] with !a/b/!* and {nonegate: true}
    ✓ should match a with !a/b/*
    ✓ should match a with !a/b/* and {dot: true}
    ✓ should match a with !a/b/* and {nonegate: true}
    ✓ should match a.md with !a/b/*
    ✓ should match a.md with !a/b/* and {dot: true}
    ✓ should match a.md with !a/b/* and {nonegate: true}
    ✓ should match a.js with !a/b/*
    ✓ should match a.js with !a/b/* and {dot: true}
    ✓ should match a.js with !a/b/* and {nonegate: true}
    ✓ should match a/ with !a/b/*
    ✓ should match a/ with !a/b/* and {dot: true}
    ✓ should match a/ with !a/b/* and {nonegate: true}
    ✓ should match a/b with !a/b/*
    ✓ should match a/b with !a/b/* and {dot: true}
    ✓ should match a/b with !a/b/* and {nonegate: true}
    ✓ should match a/b/.c.md with !a/b/*
    ✓ should match a/b/.c.md with !a/b/* and {dot: true}
    ✓ should match a/b/.c.md with !a/b/* and {nonegate: true}
    ✓ should match a/b/c with !a/b/*
    ✓ should match a/b/c with !a/b/* and {dot: true}
    ✓ should match a/b/c with !a/b/* and {nonegate: true}
    ✓ should match a/b/c.md with !a/b/*
    ✓ should match a/b/c.md with !a/b/* and {dot: true}
    ✓ should match a/b/c.md with !a/b/* and {nonegate: true}
    ✓ should match a/b/c/ with !a/b/*
    ✓ should match a/b/c/ with !a/b/* and {dot: true}
    ✓ should match a/b/c/ with !a/b/* and {nonegate: true}
    ✓ should match a/b/c/d with !a/b/*
    ✓ should match a/b/c/d with !a/b/* and {dot: true}
    ✓ should match a/b/c/d with !a/b/* and {nonegate: true}
    ✓ should match a/b/c/d/ with !a/b/*
    ✓ should match a/b/c/d/ with !a/b/* and {dot: true}
    ✓ should match a/b/c/d/ with !a/b/* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with !a/b/*
    ✓ should match a/b/c/d/e/f/z.js with !a/b/* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with !a/b/* and {nonegate: true}
    ✓ should match a/b/c/z.js with !a/b/*
    ✓ should match a/b/c/z.js with !a/b/* and {dot: true}
    ✓ should match a/b/c/z.js with !a/b/* and {nonegate: true}
    ✓ should match a/bb with !a/b/*
    ✓ should match a/bb with !a/b/* and {dot: true}
    ✓ should match a/bb with !a/b/* and {nonegate: true}
    ✓ should match a/cb with !a/b/*
    ✓ should match a/cb with !a/b/* and {dot: true}
    ✓ should match a/cb with !a/b/* and {nonegate: true}
    ✓ should match abbbz with !a/b/*
    ✓ should match abbbz with !a/b/* and {dot: true}
    ✓ should match abbbz with !a/b/* and {nonegate: true}
    ✓ should match abc with !a/b/*
    ✓ should match abc with !a/b/* and {dot: true}
    ✓ should match abc with !a/b/* and {nonegate: true}
    ✓ should match abd with !a/b/*
    ✓ should match abd with !a/b/* and {dot: true}
    ✓ should match abd with !a/b/* and {nonegate: true}
    ✓ should match z.js with !a/b/*
    ✓ should match z.js with !a/b/* and {dot: true}
    ✓ should match z.js with !a/b/* and {nonegate: true}
    ✓ should match za.js with !a/b/*
    ✓ should match za.js with !a/b/* and {dot: true}
    ✓ should match za.js with !a/b/* and {nonegate: true}
    ✓ should match !a.js with !a/b/*
    ✓ should match !a.js with !a/b/* and {dot: true}
    ✓ should match !a.js with !a/b/* and {nonegate: true}
    ✓ should match !a/b with !a/b/*
    ✓ should match !a/b with !a/b/* and {dot: true}
    ✓ should match !a/b with !a/b/* and {nonegate: true}
    ✓ should match !a/b/ with !a/b/*
    ✓ should match !a/b/ with !a/b/* and {dot: true}
    ✓ should match !a/b/ with !a/b/* and {nonegate: true}
    ✓ should match !a/b/c with !a/b/*
    ✓ should match !a/b/c with !a/b/* and {dot: true}
    ✓ should match !a/b/c with !a/b/* and {nonegate: true}
    ✓ should match !a/b/c/ with !a/b/*
    ✓ should match !a/b/c/ with !a/b/* and {dot: true}
    ✓ should match !a/b/c/ with !a/b/* and {nonegate: true}
    ✓ should match !a/!b with !a/b/*
    ✓ should match !a/!b with !a/b/* and {dot: true}
    ✓ should match !a/!b with !a/b/* and {nonegate: true}
    ✓ should match !a/!b/c with !a/b/*
    ✓ should match !a/!b/c with !a/b/* and {dot: true}
    ✓ should match !a/!b/c with !a/b/* and {nonegate: true}
    ✓ should match !a/!b/c/d with !a/b/*
    ✓ should match !a/!b/c/d with !a/b/* and {dot: true}
    ✓ should match !a/!b/c/d with !a/b/* and {nonegate: true}
    ✓ should match !a/b/.c.md with !a/b/*
    ✓ should match !a/b/.c.md with !a/b/* and {dot: true}
    ✓ should match !a/b/.c.md with !a/b/* and {nonegate: true}
    ✓ should match /a/ with !a/b/*
    ✓ should match /a/ with !a/b/* and {dot: true}
    ✓ should match /a/ with !a/b/* and {nonegate: true}
    ✓ should match /a/b with !a/b/*
    ✓ should match /a/b with !a/b/* and {dot: true}
    ✓ should match /a/b with !a/b/* and {nonegate: true}
    ✓ should match /a/cb with !a/b/*
    ✓ should match /a/cb with !a/b/* and {dot: true}
    ✓ should match /a/cb with !a/b/* and {nonegate: true}
    ✓ should match /a/bb with !a/b/*
    ✓ should match /a/bb with !a/b/* and {dot: true}
    ✓ should match /a/bb with !a/b/* and {nonegate: true}
    ✓ should match /a/b/c with !a/b/*
    ✓ should match /a/b/c with !a/b/* and {dot: true}
    ✓ should match /a/b/c with !a/b/* and {nonegate: true}
    ✓ should match /a/b/c/ with !a/b/*
    ✓ should match /a/b/c/ with !a/b/* and {dot: true}
    ✓ should match /a/b/c/ with !a/b/* and {nonegate: true}
    ✓ should match /a/b/c/d with !a/b/*
    ✓ should match /a/b/c/d with !a/b/* and {dot: true}
    ✓ should match /a/b/c/d with !a/b/* and {nonegate: true}
    ✓ should match /a/b/c/d/ with !a/b/*
    ✓ should match /a/b/c/d/ with !a/b/* and {dot: true}
    ✓ should match /a/b/c/d/ with !a/b/* and {nonegate: true}
    ✓ should match . with !a/b/*
    ✓ should match . with !a/b/* and {dot: true}
    ✓ should match . with !a/b/* and {nonegate: true}
    ✓ should match ./ with !a/b/*
    ✓ should match ./ with !a/b/* and {dot: true}
    ✓ should match ./ with !a/b/* and {nonegate: true}
    ✓ should match .. with !a/b/*
    ✓ should match .. with !a/b/* and {dot: true}
    ✓ should match .. with !a/b/* and {nonegate: true}
    ✓ should match ../c with !a/b/*
    ✓ should match ../c with !a/b/* and {dot: true}
    ✓ should match ../c with !a/b/* and {nonegate: true}
    ✓ should match ../c with !a/b/*
    ✓ should match ../c with !a/b/* and {dot: true}
    ✓ should match ../c with !a/b/* and {nonegate: true}
    ✓ should match ./../c with !a/b/*
    ✓ should match ./../c with !a/b/* and {dot: true}
    ✓ should match ./../c with !a/b/* and {nonegate: true}
    ✓ should match ./a/../c with !a/b/*
    ✓ should match ./a/../c with !a/b/* and {dot: true}
    ✓ should match ./a/../c with !a/b/* and {nonegate: true}
    ✓ should match /.. with !a/b/*
    ✓ should match /.. with !a/b/* and {dot: true}
    ✓ should match /.. with !a/b/* and {nonegate: true}
    ✓ should match /../c with !a/b/*
    ✓ should match /../c with !a/b/* and {dot: true}
    ✓ should match /../c with !a/b/* and {nonegate: true}
    ✓ should match /../.c with !a/b/*
    ✓ should match /../.c with !a/b/* and {dot: true}
    ✓ should match /../.c with !a/b/* and {nonegate: true}
    ✓ should match /../.c/ with !a/b/*
    ✓ should match /../.c/ with !a/b/* and {dot: true}
    ✓ should match /../.c/ with !a/b/* and {nonegate: true}
    ✓ should match /a/../c with !a/b/*
    ✓ should match /a/../c with !a/b/* and {dot: true}
    ✓ should match /a/../c with !a/b/* and {nonegate: true}
    ✓ should match a/../c with !a/b/*
    ✓ should match a/../c with !a/b/* and {dot: true}
    ✓ should match a/../c with !a/b/* and {nonegate: true}
    ✓ should match ../.b/.c with !a/b/*
    ✓ should match ../.b/.c with !a/b/* and {dot: true}
    ✓ should match ../.b/.c with !a/b/* and {nonegate: true}
    ✓ should match ../b/.c with !a/b/*
    ✓ should match ../b/.c with !a/b/* and {dot: true}
    ✓ should match ../b/.c with !a/b/* and {nonegate: true}
    ✓ should match ./.b/.c with !a/b/*
    ✓ should match ./.b/.c with !a/b/* and {dot: true}
    ✓ should match ./.b/.c with !a/b/* and {nonegate: true}
    ✓ should match ./b/.c with !a/b/*
    ✓ should match ./b/.c with !a/b/* and {dot: true}
    ✓ should match ./b/.c with !a/b/* and {nonegate: true}
    ✓ should match .b with !a/b/*
    ✓ should match .b with !a/b/* and {dot: true}
    ✓ should match .b with !a/b/* and {nonegate: true}
    ✓ should match .b.c with !a/b/*
    ✓ should match .b.c with !a/b/* and {dot: true}
    ✓ should match .b.c with !a/b/* and {nonegate: true}
    ✓ should match .b.c/ with !a/b/*
    ✓ should match .b.c/ with !a/b/* and {dot: true}
    ✓ should match .b.c/ with !a/b/* and {nonegate: true}
    ✓ should match .b/ with !a/b/*
    ✓ should match .b/ with !a/b/* and {dot: true}
    ✓ should match .b/ with !a/b/* and {nonegate: true}
    ✓ should match .b/.c with !a/b/*
    ✓ should match .b/.c with !a/b/* and {dot: true}
    ✓ should match .b/.c with !a/b/* and {nonegate: true}
    ✓ should match .b/c with !a/b/*
    ✓ should match .b/c with !a/b/* and {dot: true}
    ✓ should match .b/c with !a/b/* and {nonegate: true}
    ✓ should match b/.c with !a/b/*
    ✓ should match b/.c with !a/b/* and {dot: true}
    ✓ should match b/.c with !a/b/* and {nonegate: true}
    ✓ should match b/.c/ with !a/b/*
    ✓ should match b/.c/ with !a/b/* and {dot: true}
    ✓ should match b/.c/ with !a/b/* and {nonegate: true}
    ✓ should match a/+b/c with !a/b/*
    ✓ should match a/+b/c with !a/b/* and {dot: true}
    ✓ should match a/+b/c with !a/b/* and {nonegate: true}
    ✓ should match +a/+b/c with !a/b/*
    ✓ should match +a/+b/c with !a/b/* and {dot: true}
    ✓ should match +a/+b/c with !a/b/* and {nonegate: true}
    ✓ should match a (foo) with !a/b/*
    ✓ should match a (foo) with !a/b/* and {dot: true}
    ✓ should match a (foo) with !a/b/* and {nonegate: true}
    ✓ should match a (foo)/(bar) with !a/b/*
    ✓ should match a (foo)/(bar) with !a/b/* and {dot: true}
    ✓ should match a (foo)/(bar) with !a/b/* and {nonegate: true}
    ✓ should match a/b/c (1) with !a/b/*
    ✓ should match a/b/c (1) with !a/b/* and {dot: true}
    ✓ should match a/b/c (1) with !a/b/* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with !a/b/*
    ✓ should match a/b (2)/c (1) with !a/b/* and {dot: true}
    ✓ should match a/b (2)/c (1) with !a/b/* and {nonegate: true}
    ✓ should match a/b/c [def] with !a/b/*
    ✓ should match a/b/c [def] with !a/b/* and {dot: true}
    ✓ should match a/b/c [def] with !a/b/* and {nonegate: true}
    ✓ should match a with !a/b/c*
    ✓ should match a with !a/b/c* and {dot: true}
    ✓ should match a with !a/b/c* and {nonegate: true}
    ✓ should match a.md with !a/b/c*
    ✓ should match a.md with !a/b/c* and {dot: true}
    ✓ should match a.md with !a/b/c* and {nonegate: true}
    ✓ should match a.js with !a/b/c*
    ✓ should match a.js with !a/b/c* and {dot: true}
    ✓ should match a.js with !a/b/c* and {nonegate: true}
    ✓ should match a/ with !a/b/c*
    ✓ should match a/ with !a/b/c* and {dot: true}
    ✓ should match a/ with !a/b/c* and {nonegate: true}
    ✓ should match a/b with !a/b/c*
    ✓ should match a/b with !a/b/c* and {dot: true}
    ✓ should match a/b with !a/b/c* and {nonegate: true}
    ✓ should match a/b/.c.md with !a/b/c*
    ✓ should match a/b/.c.md with !a/b/c* and {dot: true}
    ✓ should match a/b/.c.md with !a/b/c* and {nonegate: true}
    ✓ should match a/b/c with !a/b/c*
    ✓ should match a/b/c with !a/b/c* and {dot: true}
    ✓ should match a/b/c with !a/b/c* and {nonegate: true}
    ✓ should match a/b/c.md with !a/b/c*
    ✓ should match a/b/c.md with !a/b/c* and {dot: true}
    ✓ should match a/b/c.md with !a/b/c* and {nonegate: true}
    ✓ should match a/b/c/ with !a/b/c*
    ✓ should match a/b/c/ with !a/b/c* and {dot: true}
    ✓ should match a/b/c/ with !a/b/c* and {nonegate: true}
    ✓ should match a/b/c/d with !a/b/c*
    ✓ should match a/b/c/d with !a/b/c* and {dot: true}
    ✓ should match a/b/c/d with !a/b/c* and {nonegate: true}
    ✓ should match a/b/c/d/ with !a/b/c*
    ✓ should match a/b/c/d/ with !a/b/c* and {dot: true}
    ✓ should match a/b/c/d/ with !a/b/c* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with !a/b/c*
    ✓ should match a/b/c/d/e/f/z.js with !a/b/c* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with !a/b/c* and {nonegate: true}
    ✓ should match a/b/c/z.js with !a/b/c*
    ✓ should match a/b/c/z.js with !a/b/c* and {dot: true}
    ✓ should match a/b/c/z.js with !a/b/c* and {nonegate: true}
    ✓ should match a/bb with !a/b/c*
    ✓ should match a/bb with !a/b/c* and {dot: true}
    ✓ should match a/bb with !a/b/c* and {nonegate: true}
    ✓ should match a/cb with !a/b/c*
    ✓ should match a/cb with !a/b/c* and {dot: true}
    ✓ should match a/cb with !a/b/c* and {nonegate: true}
    ✓ should match abbbz with !a/b/c*
    ✓ should match abbbz with !a/b/c* and {dot: true}
    ✓ should match abbbz with !a/b/c* and {nonegate: true}
    ✓ should match abc with !a/b/c*
    ✓ should match abc with !a/b/c* and {dot: true}
    ✓ should match abc with !a/b/c* and {nonegate: true}
    ✓ should match abd with !a/b/c*
    ✓ should match abd with !a/b/c* and {dot: true}
    ✓ should match abd with !a/b/c* and {nonegate: true}
    ✓ should match z.js with !a/b/c*
    ✓ should match z.js with !a/b/c* and {dot: true}
    ✓ should match z.js with !a/b/c* and {nonegate: true}
    ✓ should match za.js with !a/b/c*
    ✓ should match za.js with !a/b/c* and {dot: true}
    ✓ should match za.js with !a/b/c* and {nonegate: true}
    ✓ should match !a.js with !a/b/c*
    ✓ should match !a.js with !a/b/c* and {dot: true}
    ✓ should match !a.js with !a/b/c* and {nonegate: true}
    ✓ should match !a/b with !a/b/c*
    ✓ should match !a/b with !a/b/c* and {dot: true}
    ✓ should match !a/b with !a/b/c* and {nonegate: true}
    ✓ should match !a/b/ with !a/b/c*
    ✓ should match !a/b/ with !a/b/c* and {dot: true}
    ✓ should match !a/b/ with !a/b/c* and {nonegate: true}
    ✓ should match !a/b/c with !a/b/c*
    ✓ should match !a/b/c with !a/b/c* and {dot: true}
    ✓ should match !a/b/c with !a/b/c* and {nonegate: true}
    ✓ should match !a/b/c/ with !a/b/c*
    ✓ should match !a/b/c/ with !a/b/c* and {dot: true}
    ✓ should match !a/b/c/ with !a/b/c* and {nonegate: true}
    ✓ should match !a/!b with !a/b/c*
    ✓ should match !a/!b with !a/b/c* and {dot: true}
    ✓ should match !a/!b with !a/b/c* and {nonegate: true}
    ✓ should match !a/!b/c with !a/b/c*
    ✓ should match !a/!b/c with !a/b/c* and {dot: true}
    ✓ should match !a/!b/c with !a/b/c* and {nonegate: true}
    ✓ should match !a/!b/c/d with !a/b/c*
    ✓ should match !a/!b/c/d with !a/b/c* and {dot: true}
    ✓ should match !a/!b/c/d with !a/b/c* and {nonegate: true}
    ✓ should match !a/b/.c.md with !a/b/c*
    ✓ should match !a/b/.c.md with !a/b/c* and {dot: true}
    ✓ should match !a/b/.c.md with !a/b/c* and {nonegate: true}
    ✓ should match /a/ with !a/b/c*
    ✓ should match /a/ with !a/b/c* and {dot: true}
    ✓ should match /a/ with !a/b/c* and {nonegate: true}
    ✓ should match /a/b with !a/b/c*
    ✓ should match /a/b with !a/b/c* and {dot: true}
    ✓ should match /a/b with !a/b/c* and {nonegate: true}
    ✓ should match /a/cb with !a/b/c*
    ✓ should match /a/cb with !a/b/c* and {dot: true}
    ✓ should match /a/cb with !a/b/c* and {nonegate: true}
    ✓ should match /a/bb with !a/b/c*
    ✓ should match /a/bb with !a/b/c* and {dot: true}
    ✓ should match /a/bb with !a/b/c* and {nonegate: true}
    ✓ should match /a/b/c with !a/b/c*
    ✓ should match /a/b/c with !a/b/c* and {dot: true}
    ✓ should match /a/b/c with !a/b/c* and {nonegate: true}
    ✓ should match /a/b/c/ with !a/b/c*
    ✓ should match /a/b/c/ with !a/b/c* and {dot: true}
    ✓ should match /a/b/c/ with !a/b/c* and {nonegate: true}
    ✓ should match /a/b/c/d with !a/b/c*
    ✓ should match /a/b/c/d with !a/b/c* and {dot: true}
    ✓ should match /a/b/c/d with !a/b/c* and {nonegate: true}
    ✓ should match /a/b/c/d/ with !a/b/c*
    ✓ should match /a/b/c/d/ with !a/b/c* and {dot: true}
    ✓ should match /a/b/c/d/ with !a/b/c* and {nonegate: true}
    ✓ should match . with !a/b/c*
    ✓ should match . with !a/b/c* and {dot: true}
    ✓ should match . with !a/b/c* and {nonegate: true}
    ✓ should match ./ with !a/b/c*
    ✓ should match ./ with !a/b/c* and {dot: true}
    ✓ should match ./ with !a/b/c* and {nonegate: true}
    ✓ should match .. with !a/b/c*
    ✓ should match .. with !a/b/c* and {dot: true}
    ✓ should match .. with !a/b/c* and {nonegate: true}
    ✓ should match ../c with !a/b/c*
    ✓ should match ../c with !a/b/c* and {dot: true}
    ✓ should match ../c with !a/b/c* and {nonegate: true}
    ✓ should match ../c with !a/b/c*
    ✓ should match ../c with !a/b/c* and {dot: true}
    ✓ should match ../c with !a/b/c* and {nonegate: true}
    ✓ should match ./../c with !a/b/c*
    ✓ should match ./../c with !a/b/c* and {dot: true}
    ✓ should match ./../c with !a/b/c* and {nonegate: true}
    ✓ should match ./a/../c with !a/b/c*
    ✓ should match ./a/../c with !a/b/c* and {dot: true}
    ✓ should match ./a/../c with !a/b/c* and {nonegate: true}
    ✓ should match /.. with !a/b/c*
    ✓ should match /.. with !a/b/c* and {dot: true}
    ✓ should match /.. with !a/b/c* and {nonegate: true}
    ✓ should match /../c with !a/b/c*
    ✓ should match /../c with !a/b/c* and {dot: true}
    ✓ should match /../c with !a/b/c* and {nonegate: true}
    ✓ should match /../.c with !a/b/c*
    ✓ should match /../.c with !a/b/c* and {dot: true}
    ✓ should match /../.c with !a/b/c* and {nonegate: true}
    ✓ should match /../.c/ with !a/b/c*
    ✓ should match /../.c/ with !a/b/c* and {dot: true}
    ✓ should match /../.c/ with !a/b/c* and {nonegate: true}
    ✓ should match /a/../c with !a/b/c*
    ✓ should match /a/../c with !a/b/c* and {dot: true}
    ✓ should match /a/../c with !a/b/c* and {nonegate: true}
    ✓ should match a/../c with !a/b/c*
    ✓ should match a/../c with !a/b/c* and {dot: true}
    ✓ should match a/../c with !a/b/c* and {nonegate: true}
    ✓ should match ../.b/.c with !a/b/c*
    ✓ should match ../.b/.c with !a/b/c* and {dot: true}
    ✓ should match ../.b/.c with !a/b/c* and {nonegate: true}
    ✓ should match ../b/.c with !a/b/c*
    ✓ should match ../b/.c with !a/b/c* and {dot: true}
    ✓ should match ../b/.c with !a/b/c* and {nonegate: true}
    ✓ should match ./.b/.c with !a/b/c*
    ✓ should match ./.b/.c with !a/b/c* and {dot: true}
    ✓ should match ./.b/.c with !a/b/c* and {nonegate: true}
    ✓ should match ./b/.c with !a/b/c*
    ✓ should match ./b/.c with !a/b/c* and {dot: true}
    ✓ should match ./b/.c with !a/b/c* and {nonegate: true}
    ✓ should match .b with !a/b/c*
    ✓ should match .b with !a/b/c* and {dot: true}
    ✓ should match .b with !a/b/c* and {nonegate: true}
    ✓ should match .b.c with !a/b/c*
    ✓ should match .b.c with !a/b/c* and {dot: true}
    ✓ should match .b.c with !a/b/c* and {nonegate: true}
    ✓ should match .b.c/ with !a/b/c*
    ✓ should match .b.c/ with !a/b/c* and {dot: true}
    ✓ should match .b.c/ with !a/b/c* and {nonegate: true}
    ✓ should match .b/ with !a/b/c*
    ✓ should match .b/ with !a/b/c* and {dot: true}
    ✓ should match .b/ with !a/b/c* and {nonegate: true}
    ✓ should match .b/.c with !a/b/c*
    ✓ should match .b/.c with !a/b/c* and {dot: true}
    ✓ should match .b/.c with !a/b/c* and {nonegate: true}
    ✓ should match .b/c with !a/b/c*
    ✓ should match .b/c with !a/b/c* and {dot: true}
    ✓ should match .b/c with !a/b/c* and {nonegate: true}
    ✓ should match b/.c with !a/b/c*
    ✓ should match b/.c with !a/b/c* and {dot: true}
    ✓ should match b/.c with !a/b/c* and {nonegate: true}
    ✓ should match b/.c/ with !a/b/c*
    ✓ should match b/.c/ with !a/b/c* and {dot: true}
    ✓ should match b/.c/ with !a/b/c* and {nonegate: true}
    ✓ should match a/+b/c with !a/b/c*
    ✓ should match a/+b/c with !a/b/c* and {dot: true}
    ✓ should match a/+b/c with !a/b/c* and {nonegate: true}
    ✓ should match +a/+b/c with !a/b/c*
    ✓ should match +a/+b/c with !a/b/c* and {dot: true}
    ✓ should match +a/+b/c with !a/b/c* and {nonegate: true}
    ✓ should match a (foo) with !a/b/c*
    ✓ should match a (foo) with !a/b/c* and {dot: true}
    ✓ should match a (foo) with !a/b/c* and {nonegate: true}
    ✓ should match a (foo)/(bar) with !a/b/c*
    ✓ should match a (foo)/(bar) with !a/b/c* and {dot: true}
    ✓ should match a (foo)/(bar) with !a/b/c* and {nonegate: true}
    ✓ should match a/b/c (1) with !a/b/c*
    ✓ should match a/b/c (1) with !a/b/c* and {dot: true}
    ✓ should match a/b/c (1) with !a/b/c* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with !a/b/c*
    ✓ should match a/b (2)/c (1) with !a/b/c* and {dot: true}
    ✓ should match a/b (2)/c (1) with !a/b/c* and {nonegate: true}
    ✓ should match a/b/c [def] with !a/b/c*
    ✓ should match a/b/c [def] with !a/b/c* and {dot: true}
    ✓ should match a/b/c [def] with !a/b/c* and {nonegate: true}
    ✓ should match a with *
    ✓ should match a with * and {dot: true}
    ✓ should match a with * and {nonegate: true}
    ✓ should match a.md with *
    ✓ should match a.md with * and {dot: true}
    ✓ should match a.md with * and {nonegate: true}
    ✓ should match a.js with *
    ✓ should match a.js with * and {dot: true}
    ✓ should match a.js with * and {nonegate: true}
    ✓ should match a/ with *
    ✓ should match a/ with * and {dot: true}
    ✓ should match a/ with * and {nonegate: true}
    ✓ should match a/b with *
    ✓ should match a/b with * and {dot: true}
    ✓ should match a/b with * and {nonegate: true}
    ✓ should match a/b/.c.md with *
    ✓ should match a/b/.c.md with * and {dot: true}
    ✓ should match a/b/.c.md with * and {nonegate: true}
    ✓ should match a/b/c with *
    ✓ should match a/b/c with * and {dot: true}
    ✓ should match a/b/c with * and {nonegate: true}
    ✓ should match a/b/c.md with *
    ✓ should match a/b/c.md with * and {dot: true}
    ✓ should match a/b/c.md with * and {nonegate: true}
    ✓ should match a/b/c/ with *
    ✓ should match a/b/c/ with * and {dot: true}
    ✓ should match a/b/c/ with * and {nonegate: true}
    ✓ should match a/b/c/d with *
    ✓ should match a/b/c/d with * and {dot: true}
    ✓ should match a/b/c/d with * and {nonegate: true}
    ✓ should match a/b/c/d/ with *
    ✓ should match a/b/c/d/ with * and {dot: true}
    ✓ should match a/b/c/d/ with * and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with *
    ✓ should match a/b/c/d/e/f/z.js with * and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with * and {nonegate: true}
    ✓ should match a/b/c/z.js with *
    ✓ should match a/b/c/z.js with * and {dot: true}
    ✓ should match a/b/c/z.js with * and {nonegate: true}
    ✓ should match a/bb with *
    ✓ should match a/bb with * and {dot: true}
    ✓ should match a/bb with * and {nonegate: true}
    ✓ should match a/cb with *
    ✓ should match a/cb with * and {dot: true}
    ✓ should match a/cb with * and {nonegate: true}
    ✓ should match abbbz with *
    ✓ should match abbbz with * and {dot: true}
    ✓ should match abbbz with * and {nonegate: true}
    ✓ should match abc with *
    ✓ should match abc with * and {dot: true}
    ✓ should match abc with * and {nonegate: true}
    ✓ should match abd with *
    ✓ should match abd with * and {dot: true}
    ✓ should match abd with * and {nonegate: true}
    ✓ should match z.js with *
    ✓ should match z.js with * and {dot: true}
    ✓ should match z.js with * and {nonegate: true}
    ✓ should match za.js with *
    ✓ should match za.js with * and {dot: true}
    ✓ should match za.js with * and {nonegate: true}
    ✓ should match !a.js with *
    ✓ should match !a.js with * and {dot: true}
    ✓ should match !a.js with * and {nonegate: true}
    ✓ should match !a/b with *
    ✓ should match !a/b with * and {dot: true}
    ✓ should match !a/b with * and {nonegate: true}
    ✓ should match !a/b/ with *
    ✓ should match !a/b/ with * and {dot: true}
    ✓ should match !a/b/ with * and {nonegate: true}
    ✓ should match !a/b/c with *
    ✓ should match !a/b/c with * and {dot: true}
    ✓ should match !a/b/c with * and {nonegate: true}
    ✓ should match !a/b/c/ with *
    ✓ should match !a/b/c/ with * and {dot: true}
    ✓ should match !a/b/c/ with * and {nonegate: true}
    ✓ should match !a/!b with *
    ✓ should match !a/!b with * and {dot: true}
    ✓ should match !a/!b with * and {nonegate: true}
    ✓ should match !a/!b/c with *
    ✓ should match !a/!b/c with * and {dot: true}
    ✓ should match !a/!b/c with * and {nonegate: true}
    ✓ should match !a/!b/c/d with *
    ✓ should match !a/!b/c/d with * and {dot: true}
    ✓ should match !a/!b/c/d with * and {nonegate: true}
    ✓ should match !a/b/.c.md with *
    ✓ should match !a/b/.c.md with * and {dot: true}
    ✓ should match !a/b/.c.md with * and {nonegate: true}
    ✓ should match /a/ with *
    ✓ should match /a/ with * and {dot: true}
    ✓ should match /a/ with * and {nonegate: true}
    ✓ should match /a/b with *
    ✓ should match /a/b with * and {dot: true}
    ✓ should match /a/b with * and {nonegate: true}
    ✓ should match /a/cb with *
    ✓ should match /a/cb with * and {dot: true}
    ✓ should match /a/cb with * and {nonegate: true}
    ✓ should match /a/bb with *
    ✓ should match /a/bb with * and {dot: true}
    ✓ should match /a/bb with * and {nonegate: true}
    ✓ should match /a/b/c with *
    ✓ should match /a/b/c with * and {dot: true}
    ✓ should match /a/b/c with * and {nonegate: true}
    ✓ should match /a/b/c/ with *
    ✓ should match /a/b/c/ with * and {dot: true}
    ✓ should match /a/b/c/ with * and {nonegate: true}
    ✓ should match /a/b/c/d with *
    ✓ should match /a/b/c/d with * and {dot: true}
    ✓ should match /a/b/c/d with * and {nonegate: true}
    ✓ should match /a/b/c/d/ with *
    ✓ should match /a/b/c/d/ with * and {dot: true}
    ✓ should match /a/b/c/d/ with * and {nonegate: true}
    ✓ should match . with *
    ✓ should match . with * and {dot: true}
    ✓ should match . with * and {nonegate: true}
    ✓ should match ./ with *
    ✓ should match ./ with * and {dot: true}
    ✓ should match ./ with * and {nonegate: true}
    ✓ should match .. with *
    ✓ should match .. with * and {dot: true}
    ✓ should match .. with * and {nonegate: true}
    ✓ should match ../c with *
    ✓ should match ../c with * and {dot: true}
    ✓ should match ../c with * and {nonegate: true}
    ✓ should match ../c with *
    ✓ should match ../c with * and {dot: true}
    ✓ should match ../c with * and {nonegate: true}
    ✓ should match ./../c with *
    ✓ should match ./../c with * and {dot: true}
    ✓ should match ./../c with * and {nonegate: true}
    ✓ should match ./a/../c with *
    ✓ should match ./a/../c with * and {dot: true}
    ✓ should match ./a/../c with * and {nonegate: true}
    ✓ should match /.. with *
    ✓ should match /.. with * and {dot: true}
    ✓ should match /.. with * and {nonegate: true}
    ✓ should match /../c with *
    ✓ should match /../c with * and {dot: true}
    ✓ should match /../c with * and {nonegate: true}
    ✓ should match /../.c with *
    ✓ should match /../.c with * and {dot: true}
    ✓ should match /../.c with * and {nonegate: true}
    ✓ should match /../.c/ with *
    ✓ should match /../.c/ with * and {dot: true}
    ✓ should match /../.c/ with * and {nonegate: true}
    ✓ should match /a/../c with *
    ✓ should match /a/../c with * and {dot: true}
    ✓ should match /a/../c with * and {nonegate: true}
    ✓ should match a/../c with *
    ✓ should match a/../c with * and {dot: true}
    ✓ should match a/../c with * and {nonegate: true}
    ✓ should match ../.b/.c with *
    ✓ should match ../.b/.c with * and {dot: true}
    ✓ should match ../.b/.c with * and {nonegate: true}
    ✓ should match ../b/.c with *
    ✓ should match ../b/.c with * and {dot: true}
    ✓ should match ../b/.c with * and {nonegate: true}
    ✓ should match ./.b/.c with *
    ✓ should match ./.b/.c with * and {dot: true}
    ✓ should match ./.b/.c with * and {nonegate: true}
    ✓ should match ./b/.c with *
    ✓ should match ./b/.c with * and {dot: true}
    ✓ should match ./b/.c with * and {nonegate: true}
    ✓ should match .b with *
    ✓ should match .b with * and {dot: true}
    ✓ should match .b with * and {nonegate: true}
    ✓ should match .b.c with *
    ✓ should match .b.c with * and {dot: true}
    ✓ should match .b.c with * and {nonegate: true}
    ✓ should match .b.c/ with *
    ✓ should match .b.c/ with * and {dot: true}
    ✓ should match .b.c/ with * and {nonegate: true}
    ✓ should match .b/ with *
    ✓ should match .b/ with * and {dot: true}
    ✓ should match .b/ with * and {nonegate: true}
    ✓ should match .b/.c with *
    ✓ should match .b/.c with * and {dot: true}
    ✓ should match .b/.c with * and {nonegate: true}
    ✓ should match .b/c with *
    ✓ should match .b/c with * and {dot: true}
    ✓ should match .b/c with * and {nonegate: true}
    ✓ should match b/.c with *
    ✓ should match b/.c with * and {dot: true}
    ✓ should match b/.c with * and {nonegate: true}
    ✓ should match b/.c/ with *
    ✓ should match b/.c/ with * and {dot: true}
    ✓ should match b/.c/ with * and {nonegate: true}
    ✓ should match a/+b/c with *
    ✓ should match a/+b/c with * and {dot: true}
    ✓ should match a/+b/c with * and {nonegate: true}
    ✓ should match +a/+b/c with *
    ✓ should match +a/+b/c with * and {dot: true}
    ✓ should match +a/+b/c with * and {nonegate: true}
    ✓ should match a (foo) with *
    ✓ should match a (foo) with * and {dot: true}
    ✓ should match a (foo) with * and {nonegate: true}
    ✓ should match a (foo)/(bar) with *
    ✓ should match a (foo)/(bar) with * and {dot: true}
    ✓ should match a (foo)/(bar) with * and {nonegate: true}
    ✓ should match a/b/c (1) with *
    ✓ should match a/b/c (1) with * and {dot: true}
    ✓ should match a/b/c (1) with * and {nonegate: true}
    ✓ should match a/b (2)/c (1) with *
    ✓ should match a/b (2)/c (1) with * and {dot: true}
    ✓ should match a/b (2)/c (1) with * and {nonegate: true}
    ✓ should match a/b/c [def] with *
    ✓ should match a/b/c [def] with * and {dot: true}
    ✓ should match a/b/c [def] with * and {nonegate: true}
    ✓ should match a with **
    ✓ should match a with ** and {dot: true}
    ✓ should match a with ** and {nonegate: true}
    ✓ should match a.md with **
    ✓ should match a.md with ** and {dot: true}
    ✓ should match a.md with ** and {nonegate: true}
    ✓ should match a.js with **
    ✓ should match a.js with ** and {dot: true}
    ✓ should match a.js with ** and {nonegate: true}
    ✓ should match a/ with **
    ✓ should match a/ with ** and {dot: true}
    ✓ should match a/ with ** and {nonegate: true}
    ✓ should match a/b with **
    ✓ should match a/b with ** and {dot: true}
    ✓ should match a/b with ** and {nonegate: true}
    ✓ should match a/b/.c.md with **
    ✓ should match a/b/.c.md with ** and {dot: true}
    ✓ should match a/b/.c.md with ** and {nonegate: true}
    ✓ should match a/b/c with **
    ✓ should match a/b/c with ** and {dot: true}
    ✓ should match a/b/c with ** and {nonegate: true}
    ✓ should match a/b/c.md with **
    ✓ should match a/b/c.md with ** and {dot: true}
    ✓ should match a/b/c.md with ** and {nonegate: true}
    ✓ should match a/b/c/ with **
    ✓ should match a/b/c/ with ** and {dot: true}
    ✓ should match a/b/c/ with ** and {nonegate: true}
    ✓ should match a/b/c/d with **
    ✓ should match a/b/c/d with ** and {dot: true}
    ✓ should match a/b/c/d with ** and {nonegate: true}
    ✓ should match a/b/c/d/ with **
    ✓ should match a/b/c/d/ with ** and {dot: true}
    ✓ should match a/b/c/d/ with ** and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with **
    ✓ should match a/b/c/d/e/f/z.js with ** and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with ** and {nonegate: true}
    ✓ should match a/b/c/z.js with **
    ✓ should match a/b/c/z.js with ** and {dot: true}
    ✓ should match a/b/c/z.js with ** and {nonegate: true}
    ✓ should match a/bb with **
    ✓ should match a/bb with ** and {dot: true}
    ✓ should match a/bb with ** and {nonegate: true}
    ✓ should match a/cb with **
    ✓ should match a/cb with ** and {dot: true}
    ✓ should match a/cb with ** and {nonegate: true}
    ✓ should match abbbz with **
    ✓ should match abbbz with ** and {dot: true}
    ✓ should match abbbz with ** and {nonegate: true}
    ✓ should match abc with **
    ✓ should match abc with ** and {dot: true}
    ✓ should match abc with ** and {nonegate: true}
    ✓ should match abd with **
    ✓ should match abd with ** and {dot: true}
    ✓ should match abd with ** and {nonegate: true}
    ✓ should match z.js with **
    ✓ should match z.js with ** and {dot: true}
    ✓ should match z.js with ** and {nonegate: true}
    ✓ should match za.js with **
    ✓ should match za.js with ** and {dot: true}
    ✓ should match za.js with ** and {nonegate: true}
    ✓ should match !a.js with **
    ✓ should match !a.js with ** and {dot: true}
    ✓ should match !a.js with ** and {nonegate: true}
    ✓ should match !a/b with **
    ✓ should match !a/b with ** and {dot: true}
    ✓ should match !a/b with ** and {nonegate: true}
    ✓ should match !a/b/ with **
    ✓ should match !a/b/ with ** and {dot: true}
    ✓ should match !a/b/ with ** and {nonegate: true}
    ✓ should match !a/b/c with **
    ✓ should match !a/b/c with ** and {dot: true}
    ✓ should match !a/b/c with ** and {nonegate: true}
    ✓ should match !a/b/c/ with **
    ✓ should match !a/b/c/ with ** and {dot: true}
    ✓ should match !a/b/c/ with ** and {nonegate: true}
    ✓ should match !a/!b with **
    ✓ should match !a/!b with ** and {dot: true}
    ✓ should match !a/!b with ** and {nonegate: true}
    ✓ should match !a/!b/c with **
    ✓ should match !a/!b/c with ** and {dot: true}
    ✓ should match !a/!b/c with ** and {nonegate: true}
    ✓ should match !a/!b/c/d with **
    ✓ should match !a/!b/c/d with ** and {dot: true}
    ✓ should match !a/!b/c/d with ** and {nonegate: true}
    ✓ should match !a/b/.c.md with **
    ✓ should match !a/b/.c.md with ** and {dot: true}
    ✓ should match !a/b/.c.md with ** and {nonegate: true}
    ✓ should match /a/ with **
    ✓ should match /a/ with ** and {dot: true}
    ✓ should match /a/ with ** and {nonegate: true}
    ✓ should match /a/b with **
    ✓ should match /a/b with ** and {dot: true}
    ✓ should match /a/b with ** and {nonegate: true}
    ✓ should match /a/cb with **
    ✓ should match /a/cb with ** and {dot: true}
    ✓ should match /a/cb with ** and {nonegate: true}
    ✓ should match /a/bb with **
    ✓ should match /a/bb with ** and {dot: true}
    ✓ should match /a/bb with ** and {nonegate: true}
    ✓ should match /a/b/c with **
    ✓ should match /a/b/c with ** and {dot: true}
    ✓ should match /a/b/c with ** and {nonegate: true}
    ✓ should match /a/b/c/ with **
    ✓ should match /a/b/c/ with ** and {dot: true}
    ✓ should match /a/b/c/ with ** and {nonegate: true}
    ✓ should match /a/b/c/d with **
    ✓ should match /a/b/c/d with ** and {dot: true}
    ✓ should match /a/b/c/d with ** and {nonegate: true}
    ✓ should match /a/b/c/d/ with **
    ✓ should match /a/b/c/d/ with ** and {dot: true}
    ✓ should match /a/b/c/d/ with ** and {nonegate: true}
    ✓ should match . with **
    ✓ should match . with ** and {dot: true}
    ✓ should match . with ** and {nonegate: true}
    ✓ should match ./ with **
    ✓ should match ./ with ** and {dot: true}
    ✓ should match ./ with ** and {nonegate: true}
    ✓ should match .. with **
    ✓ should match .. with ** and {dot: true}
    ✓ should match .. with ** and {nonegate: true}
    ✓ should match ../c with **
    ✓ should match ../c with ** and {dot: true}
    ✓ should match ../c with ** and {nonegate: true}
    ✓ should match ../c with **
    ✓ should match ../c with ** and {dot: true}
    ✓ should match ../c with ** and {nonegate: true}
    ✓ should match ./../c with **
    ✓ should match ./../c with ** and {dot: true}
    ✓ should match ./../c with ** and {nonegate: true}
    ✓ should match ./a/../c with **
    ✓ should match ./a/../c with ** and {dot: true}
    ✓ should match ./a/../c with ** and {nonegate: true}
    ✓ should match /.. with **
    ✓ should match /.. with ** and {dot: true}
    ✓ should match /.. with ** and {nonegate: true}
    ✓ should match /../c with **
    ✓ should match /../c with ** and {dot: true}
    ✓ should match /../c with ** and {nonegate: true}
    ✓ should match /../.c with **
    ✓ should match /../.c with ** and {dot: true}
    ✓ should match /../.c with ** and {nonegate: true}
    ✓ should match /../.c/ with **
    ✓ should match /../.c/ with ** and {dot: true}
    ✓ should match /../.c/ with ** and {nonegate: true}
    ✓ should match /a/../c with **
    ✓ should match /a/../c with ** and {dot: true}
    ✓ should match /a/../c with ** and {nonegate: true}
    ✓ should match a/../c with **
    ✓ should match a/../c with ** and {dot: true}
    ✓ should match a/../c with ** and {nonegate: true}
    ✓ should match ../.b/.c with **
    ✓ should match ../.b/.c with ** and {dot: true}
    ✓ should match ../.b/.c with ** and {nonegate: true}
    ✓ should match ../b/.c with **
    ✓ should match ../b/.c with ** and {dot: true}
    ✓ should match ../b/.c with ** and {nonegate: true}
    ✓ should match ./.b/.c with **
    ✓ should match ./.b/.c with ** and {dot: true}
    ✓ should match ./.b/.c with ** and {nonegate: true}
    ✓ should match ./b/.c with **
    ✓ should match ./b/.c with ** and {dot: true}
    ✓ should match ./b/.c with ** and {nonegate: true}
    ✓ should match .b with **
    ✓ should match .b with ** and {dot: true}
    ✓ should match .b with ** and {nonegate: true}
    ✓ should match .b.c with **
    ✓ should match .b.c with ** and {dot: true}
    ✓ should match .b.c with ** and {nonegate: true}
    ✓ should match .b.c/ with **
    ✓ should match .b.c/ with ** and {dot: true}
    ✓ should match .b.c/ with ** and {nonegate: true}
    ✓ should match .b/ with **
    ✓ should match .b/ with ** and {dot: true}
    ✓ should match .b/ with ** and {nonegate: true}
    ✓ should match .b/.c with **
    ✓ should match .b/.c with ** and {dot: true}
    ✓ should match .b/.c with ** and {nonegate: true}
    ✓ should match .b/c with **
    ✓ should match .b/c with ** and {dot: true}
    ✓ should match .b/c with ** and {nonegate: true}
    ✓ should match b/.c with **
    ✓ should match b/.c with ** and {dot: true}
    ✓ should match b/.c with ** and {nonegate: true}
    ✓ should match b/.c/ with **
    ✓ should match b/.c/ with ** and {dot: true}
    ✓ should match b/.c/ with ** and {nonegate: true}
    ✓ should match a/+b/c with **
    ✓ should match a/+b/c with ** and {dot: true}
    ✓ should match a/+b/c with ** and {nonegate: true}
    ✓ should match +a/+b/c with **
    ✓ should match +a/+b/c with ** and {dot: true}
    ✓ should match +a/+b/c with ** and {nonegate: true}
    ✓ should match a (foo) with **
    ✓ should match a (foo) with ** and {dot: true}
    ✓ should match a (foo) with ** and {nonegate: true}
    ✓ should match a (foo)/(bar) with **
    ✓ should match a (foo)/(bar) with ** and {dot: true}
    ✓ should match a (foo)/(bar) with ** and {nonegate: true}
    ✓ should match a/b/c (1) with **
    ✓ should match a/b/c (1) with ** and {dot: true}
    ✓ should match a/b/c (1) with ** and {nonegate: true}
    ✓ should match a/b (2)/c (1) with **
    ✓ should match a/b (2)/c (1) with ** and {dot: true}
    ✓ should match a/b (2)/c (1) with ** and {nonegate: true}
    ✓ should match a/b/c [def] with **
    ✓ should match a/b/c [def] with ** and {dot: true}
    ✓ should match a/b/c [def] with ** and {nonegate: true}
    ✓ should match a with ***
    ✓ should match a with *** and {dot: true}
    ✓ should match a with *** and {nonegate: true}
    ✓ should match a.md with ***
    ✓ should match a.md with *** and {dot: true}
    ✓ should match a.md with *** and {nonegate: true}
    ✓ should match a.js with ***
    ✓ should match a.js with *** and {dot: true}
    ✓ should match a.js with *** and {nonegate: true}
    ✓ should match a/ with ***
    ✓ should match a/ with *** and {dot: true}
    ✓ should match a/ with *** and {nonegate: true}
    ✓ should match a/b with ***
    ✓ should match a/b with *** and {dot: true}
    ✓ should match a/b with *** and {nonegate: true}
    ✓ should match a/b/.c.md with ***
    ✓ should match a/b/.c.md with *** and {dot: true}
    ✓ should match a/b/.c.md with *** and {nonegate: true}
    ✓ should match a/b/c with ***
    ✓ should match a/b/c with *** and {dot: true}
    ✓ should match a/b/c with *** and {nonegate: true}
    ✓ should match a/b/c.md with ***
    ✓ should match a/b/c.md with *** and {dot: true}
    ✓ should match a/b/c.md with *** and {nonegate: true}
    ✓ should match a/b/c/ with ***
    ✓ should match a/b/c/ with *** and {dot: true}
    ✓ should match a/b/c/ with *** and {nonegate: true}
    ✓ should match a/b/c/d with ***
    ✓ should match a/b/c/d with *** and {dot: true}
    ✓ should match a/b/c/d with *** and {nonegate: true}
    ✓ should match a/b/c/d/ with ***
    ✓ should match a/b/c/d/ with *** and {dot: true}
    ✓ should match a/b/c/d/ with *** and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with ***
    ✓ should match a/b/c/d/e/f/z.js with *** and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with *** and {nonegate: true}
    ✓ should match a/b/c/z.js with ***
    ✓ should match a/b/c/z.js with *** and {dot: true}
    ✓ should match a/b/c/z.js with *** and {nonegate: true}
    ✓ should match a/bb with ***
    ✓ should match a/bb with *** and {dot: true}
    ✓ should match a/bb with *** and {nonegate: true}
    ✓ should match a/cb with ***
    ✓ should match a/cb with *** and {dot: true}
    ✓ should match a/cb with *** and {nonegate: true}
    ✓ should match abbbz with ***
    ✓ should match abbbz with *** and {dot: true}
    ✓ should match abbbz with *** and {nonegate: true}
    ✓ should match abc with ***
    ✓ should match abc with *** and {dot: true}
    ✓ should match abc with *** and {nonegate: true}
    ✓ should match abd with ***
    ✓ should match abd with *** and {dot: true}
    ✓ should match abd with *** and {nonegate: true}
    ✓ should match z.js with ***
    ✓ should match z.js with *** and {dot: true}
    ✓ should match z.js with *** and {nonegate: true}
    ✓ should match za.js with ***
    ✓ should match za.js with *** and {dot: true}
    ✓ should match za.js with *** and {nonegate: true}
    ✓ should match !a.js with ***
    ✓ should match !a.js with *** and {dot: true}
    ✓ should match !a.js with *** and {nonegate: true}
    ✓ should match !a/b with ***
    ✓ should match !a/b with *** and {dot: true}
    ✓ should match !a/b with *** and {nonegate: true}
    ✓ should match !a/b/ with ***
    ✓ should match !a/b/ with *** and {dot: true}
    ✓ should match !a/b/ with *** and {nonegate: true}
    ✓ should match !a/b/c with ***
    ✓ should match !a/b/c with *** and {dot: true}
    ✓ should match !a/b/c with *** and {nonegate: true}
    ✓ should match !a/b/c/ with ***
    ✓ should match !a/b/c/ with *** and {dot: true}
    ✓ should match !a/b/c/ with *** and {nonegate: true}
    ✓ should match !a/!b with ***
    ✓ should match !a/!b with *** and {dot: true}
    ✓ should match !a/!b with *** and {nonegate: true}
    ✓ should match !a/!b/c with ***
    ✓ should match !a/!b/c with *** and {dot: true}
    ✓ should match !a/!b/c with *** and {nonegate: true}
    ✓ should match !a/!b/c/d with ***
    ✓ should match !a/!b/c/d with *** and {dot: true}
    ✓ should match !a/!b/c/d with *** and {nonegate: true}
    ✓ should match !a/b/.c.md with ***
    ✓ should match !a/b/.c.md with *** and {dot: true}
    ✓ should match !a/b/.c.md with *** and {nonegate: true}
    ✓ should match /a/ with ***
    ✓ should match /a/ with *** and {dot: true}
    ✓ should match /a/ with *** and {nonegate: true}
    ✓ should match /a/b with ***
    ✓ should match /a/b with *** and {dot: true}
    ✓ should match /a/b with *** and {nonegate: true}
    ✓ should match /a/cb with ***
    ✓ should match /a/cb with *** and {dot: true}
    ✓ should match /a/cb with *** and {nonegate: true}
    ✓ should match /a/bb with ***
    ✓ should match /a/bb with *** and {dot: true}
    ✓ should match /a/bb with *** and {nonegate: true}
    ✓ should match /a/b/c with ***
    ✓ should match /a/b/c with *** and {dot: true}
    ✓ should match /a/b/c with *** and {nonegate: true}
    ✓ should match /a/b/c/ with ***
    ✓ should match /a/b/c/ with *** and {dot: true}
    ✓ should match /a/b/c/ with *** and {nonegate: true}
    ✓ should match /a/b/c/d with ***
    ✓ should match /a/b/c/d with *** and {dot: true}
    ✓ should match /a/b/c/d with *** and {nonegate: true}
    ✓ should match /a/b/c/d/ with ***
    ✓ should match /a/b/c/d/ with *** and {dot: true}
    ✓ should match /a/b/c/d/ with *** and {nonegate: true}
    ✓ should match . with ***
    ✓ should match . with *** and {dot: true}
    ✓ should match . with *** and {nonegate: true}
    ✓ should match ./ with ***
    ✓ should match ./ with *** and {dot: true}
    ✓ should match ./ with *** and {nonegate: true}
    ✓ should match .. with ***
    ✓ should match .. with *** and {dot: true}
    ✓ should match .. with *** and {nonegate: true}
    ✓ should match ../c with ***
    ✓ should match ../c with *** and {dot: true}
    ✓ should match ../c with *** and {nonegate: true}
    ✓ should match ../c with ***
    ✓ should match ../c with *** and {dot: true}
    ✓ should match ../c with *** and {nonegate: true}
    ✓ should match ./../c with ***
    ✓ should match ./../c with *** and {dot: true}
    ✓ should match ./../c with *** and {nonegate: true}
    ✓ should match ./a/../c with ***
    ✓ should match ./a/../c with *** and {dot: true}
    ✓ should match ./a/../c with *** and {nonegate: true}
    ✓ should match /.. with ***
    ✓ should match /.. with *** and {dot: true}
    ✓ should match /.. with *** and {nonegate: true}
    ✓ should match /../c with ***
    ✓ should match /../c with *** and {dot: true}
    ✓ should match /../c with *** and {nonegate: true}
    ✓ should match /../.c with ***
    ✓ should match /../.c with *** and {dot: true}
    ✓ should match /../.c with *** and {nonegate: true}
    ✓ should match /../.c/ with ***
    ✓ should match /../.c/ with *** and {dot: true}
    ✓ should match /../.c/ with *** and {nonegate: true}
    ✓ should match /a/../c with ***
    ✓ should match /a/../c with *** and {dot: true}
    ✓ should match /a/../c with *** and {nonegate: true}
    ✓ should match a/../c with ***
    ✓ should match a/../c with *** and {dot: true}
    ✓ should match a/../c with *** and {nonegate: true}
    ✓ should match ../.b/.c with ***
    ✓ should match ../.b/.c with *** and {dot: true}
    ✓ should match ../.b/.c with *** and {nonegate: true}
    ✓ should match ../b/.c with ***
    ✓ should match ../b/.c with *** and {dot: true}
    ✓ should match ../b/.c with *** and {nonegate: true}
    ✓ should match ./.b/.c with ***
    ✓ should match ./.b/.c with *** and {dot: true}
    ✓ should match ./.b/.c with *** and {nonegate: true}
    ✓ should match ./b/.c with ***
    ✓ should match ./b/.c with *** and {dot: true}
    ✓ should match ./b/.c with *** and {nonegate: true}
    ✓ should match .b with ***
    ✓ should match .b with *** and {dot: true}
    ✓ should match .b with *** and {nonegate: true}
    ✓ should match .b.c with ***
    ✓ should match .b.c with *** and {dot: true}
    ✓ should match .b.c with *** and {nonegate: true}
    ✓ should match .b.c/ with ***
    ✓ should match .b.c/ with *** and {dot: true}
    ✓ should match .b.c/ with *** and {nonegate: true}
    ✓ should match .b/ with ***
    ✓ should match .b/ with *** and {dot: true}
    ✓ should match .b/ with *** and {nonegate: true}
    ✓ should match .b/.c with ***
    ✓ should match .b/.c with *** and {dot: true}
    ✓ should match .b/.c with *** and {nonegate: true}
    ✓ should match .b/c with ***
    ✓ should match .b/c with *** and {dot: true}
    ✓ should match .b/c with *** and {nonegate: true}
    ✓ should match b/.c with ***
    ✓ should match b/.c with *** and {dot: true}
    ✓ should match b/.c with *** and {nonegate: true}
    ✓ should match b/.c/ with ***
    ✓ should match b/.c/ with *** and {dot: true}
    ✓ should match b/.c/ with *** and {nonegate: true}
    ✓ should match a/+b/c with ***
    ✓ should match a/+b/c with *** and {dot: true}
    ✓ should match a/+b/c with *** and {nonegate: true}
    ✓ should match +a/+b/c with ***
    ✓ should match +a/+b/c with *** and {dot: true}
    ✓ should match +a/+b/c with *** and {nonegate: true}
    ✓ should match a (foo) with ***
    ✓ should match a (foo) with *** and {dot: true}
    ✓ should match a (foo) with *** and {nonegate: true}
    ✓ should match a (foo)/(bar) with ***
    ✓ should match a (foo)/(bar) with *** and {dot: true}
    ✓ should match a (foo)/(bar) with *** and {nonegate: true}
    ✓ should match a/b/c (1) with ***
    ✓ should match a/b/c (1) with *** and {dot: true}
    ✓ should match a/b/c (1) with *** and {nonegate: true}
    ✓ should match a/b (2)/c (1) with ***
    ✓ should match a/b (2)/c (1) with *** and {dot: true}
    ✓ should match a/b (2)/c (1) with *** and {nonegate: true}
    ✓ should match a/b/c [def] with ***
    ✓ should match a/b/c [def] with *** and {dot: true}
    ✓ should match a/b/c [def] with *** and {nonegate: true}
    ✓ should match a with **********
    ✓ should match a with ********** and {dot: true}
    ✓ should match a with ********** and {nonegate: true}
    ✓ should match a.md with **********
    ✓ should match a.md with ********** and {dot: true}
    ✓ should match a.md with ********** and {nonegate: true}
    ✓ should match a.js with **********
    ✓ should match a.js with ********** and {dot: true}
    ✓ should match a.js with ********** and {nonegate: true}
    ✓ should match a/ with **********
    ✓ should match a/ with ********** and {dot: true}
    ✓ should match a/ with ********** and {nonegate: true}
    ✓ should match a/b with **********
    ✓ should match a/b with ********** and {dot: true}
    ✓ should match a/b with ********** and {nonegate: true}
    ✓ should match a/b/.c.md with **********
    ✓ should match a/b/.c.md with ********** and {dot: true}
    ✓ should match a/b/.c.md with ********** and {nonegate: true}
    ✓ should match a/b/c with **********
    ✓ should match a/b/c with ********** and {dot: true}
    ✓ should match a/b/c with ********** and {nonegate: true}
    ✓ should match a/b/c.md with **********
    ✓ should match a/b/c.md with ********** and {dot: true}
    ✓ should match a/b/c.md with ********** and {nonegate: true}
    ✓ should match a/b/c/ with **********
    ✓ should match a/b/c/ with ********** and {dot: true}
    ✓ should match a/b/c/ with ********** and {nonegate: true}
    ✓ should match a/b/c/d with **********
    ✓ should match a/b/c/d with ********** and {dot: true}
    ✓ should match a/b/c/d with ********** and {nonegate: true}
    ✓ should match a/b/c/d/ with **********
    ✓ should match a/b/c/d/ with ********** and {dot: true}
    ✓ should match a/b/c/d/ with ********** and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with **********
    ✓ should match a/b/c/d/e/f/z.js with ********** and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with ********** and {nonegate: true}
    ✓ should match a/b/c/z.js with **********
    ✓ should match a/b/c/z.js with ********** and {dot: true}
    ✓ should match a/b/c/z.js with ********** and {nonegate: true}
    ✓ should match a/bb with **********
    ✓ should match a/bb with ********** and {dot: true}
    ✓ should match a/bb with ********** and {nonegate: true}
    ✓ should match a/cb with **********
    ✓ should match a/cb with ********** and {dot: true}
    ✓ should match a/cb with ********** and {nonegate: true}
    ✓ should match abbbz with **********
    ✓ should match abbbz with ********** and {dot: true}
    ✓ should match abbbz with ********** and {nonegate: true}
    ✓ should match abc with **********
    ✓ should match abc with ********** and {dot: true}
    ✓ should match abc with ********** and {nonegate: true}
    ✓ should match abd with **********
    ✓ should match abd with ********** and {dot: true}
    ✓ should match abd with ********** and {nonegate: true}
    ✓ should match z.js with **********
    ✓ should match z.js with ********** and {dot: true}
    ✓ should match z.js with ********** and {nonegate: true}
    ✓ should match za.js with **********
    ✓ should match za.js with ********** and {dot: true}
    ✓ should match za.js with ********** and {nonegate: true}
    ✓ should match !a.js with **********
    ✓ should match !a.js with ********** and {dot: true}
    ✓ should match !a.js with ********** and {nonegate: true}
    ✓ should match !a/b with **********
    ✓ should match !a/b with ********** and {dot: true}
    ✓ should match !a/b with ********** and {nonegate: true}
    ✓ should match !a/b/ with **********
    ✓ should match !a/b/ with ********** and {dot: true}
    ✓ should match !a/b/ with ********** and {nonegate: true}
    ✓ should match !a/b/c with **********
    ✓ should match !a/b/c with ********** and {dot: true}
    ✓ should match !a/b/c with ********** and {nonegate: true}
    ✓ should match !a/b/c/ with **********
    ✓ should match !a/b/c/ with ********** and {dot: true}
    ✓ should match !a/b/c/ with ********** and {nonegate: true}
    ✓ should match !a/!b with **********
    ✓ should match !a/!b with ********** and {dot: true}
    ✓ should match !a/!b with ********** and {nonegate: true}
    ✓ should match !a/!b/c with **********
    ✓ should match !a/!b/c with ********** and {dot: true}
    ✓ should match !a/!b/c with ********** and {nonegate: true}
    ✓ should match !a/!b/c/d with **********
    ✓ should match !a/!b/c/d with ********** and {dot: true}
    ✓ should match !a/!b/c/d with ********** and {nonegate: true}
    ✓ should match !a/b/.c.md with **********
    ✓ should match !a/b/.c.md with ********** and {dot: true}
    ✓ should match !a/b/.c.md with ********** and {nonegate: true}
    ✓ should match /a/ with **********
    ✓ should match /a/ with ********** and {dot: true}
    ✓ should match /a/ with ********** and {nonegate: true}
    ✓ should match /a/b with **********
    ✓ should match /a/b with ********** and {dot: true}
    ✓ should match /a/b with ********** and {nonegate: true}
    ✓ should match /a/cb with **********
    ✓ should match /a/cb with ********** and {dot: true}
    ✓ should match /a/cb with ********** and {nonegate: true}
    ✓ should match /a/bb with **********
    ✓ should match /a/bb with ********** and {dot: true}
    ✓ should match /a/bb with ********** and {nonegate: true}
    ✓ should match /a/b/c with **********
    ✓ should match /a/b/c with ********** and {dot: true}
    ✓ should match /a/b/c with ********** and {nonegate: true}
    ✓ should match /a/b/c/ with **********
    ✓ should match /a/b/c/ with ********** and {dot: true}
    ✓ should match /a/b/c/ with ********** and {nonegate: true}
    ✓ should match /a/b/c/d with **********
    ✓ should match /a/b/c/d with ********** and {dot: true}
    ✓ should match /a/b/c/d with ********** and {nonegate: true}
    ✓ should match /a/b/c/d/ with **********
    ✓ should match /a/b/c/d/ with ********** and {dot: true}
    ✓ should match /a/b/c/d/ with ********** and {nonegate: true}
    ✓ should match . with **********
    ✓ should match . with ********** and {dot: true}
    ✓ should match . with ********** and {nonegate: true}
    ✓ should match ./ with **********
    ✓ should match ./ with ********** and {dot: true}
    ✓ should match ./ with ********** and {nonegate: true}
    ✓ should match .. with **********
    ✓ should match .. with ********** and {dot: true}
    ✓ should match .. with ********** and {nonegate: true}
    ✓ should match ../c with **********
    ✓ should match ../c with ********** and {dot: true}
    ✓ should match ../c with ********** and {nonegate: true}
    ✓ should match ../c with **********
    ✓ should match ../c with ********** and {dot: true}
    ✓ should match ../c with ********** and {nonegate: true}
    ✓ should match ./../c with **********
    ✓ should match ./../c with ********** and {dot: true}
    ✓ should match ./../c with ********** and {nonegate: true}
    ✓ should match ./a/../c with **********
    ✓ should match ./a/../c with ********** and {dot: true}
    ✓ should match ./a/../c with ********** and {nonegate: true}
    ✓ should match /.. with **********
    ✓ should match /.. with ********** and {dot: true}
    ✓ should match /.. with ********** and {nonegate: true}
    ✓ should match /../c with **********
    ✓ should match /../c with ********** and {dot: true}
    ✓ should match /../c with ********** and {nonegate: true}
    ✓ should match /../.c with **********
    ✓ should match /../.c with ********** and {dot: true}
    ✓ should match /../.c with ********** and {nonegate: true}
    ✓ should match /../.c/ with **********
    ✓ should match /../.c/ with ********** and {dot: true}
    ✓ should match /../.c/ with ********** and {nonegate: true}
    ✓ should match /a/../c with **********
    ✓ should match /a/../c with ********** and {dot: true}
    ✓ should match /a/../c with ********** and {nonegate: true}
    ✓ should match a/../c with **********
    ✓ should match a/../c with ********** and {dot: true}
    ✓ should match a/../c with ********** and {nonegate: true}
    ✓ should match ../.b/.c with **********
    ✓ should match ../.b/.c with ********** and {dot: true}
    ✓ should match ../.b/.c with ********** and {nonegate: true}
    ✓ should match ../b/.c with **********
    ✓ should match ../b/.c with ********** and {dot: true}
    ✓ should match ../b/.c with ********** and {nonegate: true}
    ✓ should match ./.b/.c with **********
    ✓ should match ./.b/.c with ********** and {dot: true}
    ✓ should match ./.b/.c with ********** and {nonegate: true}
    ✓ should match ./b/.c with **********
    ✓ should match ./b/.c with ********** and {dot: true}
    ✓ should match ./b/.c with ********** and {nonegate: true}
    ✓ should match .b with **********
    ✓ should match .b with ********** and {dot: true}
    ✓ should match .b with ********** and {nonegate: true}
    ✓ should match .b.c with **********
    ✓ should match .b.c with ********** and {dot: true}
    ✓ should match .b.c with ********** and {nonegate: true}
    ✓ should match .b.c/ with **********
    ✓ should match .b.c/ with ********** and {dot: true}
    ✓ should match .b.c/ with ********** and {nonegate: true}
    ✓ should match .b/ with **********
    ✓ should match .b/ with ********** and {dot: true}
    ✓ should match .b/ with ********** and {nonegate: true}
    ✓ should match .b/.c with **********
    ✓ should match .b/.c with ********** and {dot: true}
    ✓ should match .b/.c with ********** and {nonegate: true}
    ✓ should match .b/c with **********
    ✓ should match .b/c with ********** and {dot: true}
    ✓ should match .b/c with ********** and {nonegate: true}
    ✓ should match b/.c with **********
    ✓ should match b/.c with ********** and {dot: true}
    ✓ should match b/.c with ********** and {nonegate: true}
    ✓ should match b/.c/ with **********
    ✓ should match b/.c/ with ********** and {dot: true}
    ✓ should match b/.c/ with ********** and {nonegate: true}
    ✓ should match a/+b/c with **********
    ✓ should match a/+b/c with ********** and {dot: true}
    ✓ should match a/+b/c with ********** and {nonegate: true}
    ✓ should match +a/+b/c with **********
    ✓ should match +a/+b/c with ********** and {dot: true}
    ✓ should match +a/+b/c with ********** and {nonegate: true}
    ✓ should match a (foo) with **********
    ✓ should match a (foo) with ********** and {dot: true}
    ✓ should match a (foo) with ********** and {nonegate: true}
    ✓ should match a (foo)/(bar) with **********
    ✓ should match a (foo)/(bar) with ********** and {dot: true}
    ✓ should match a (foo)/(bar) with ********** and {nonegate: true}
    ✓ should match a/b/c (1) with **********
    ✓ should match a/b/c (1) with ********** and {dot: true}
    ✓ should match a/b/c (1) with ********** and {nonegate: true}
    ✓ should match a/b (2)/c (1) with **********
    ✓ should match a/b (2)/c (1) with ********** and {dot: true}
    ✓ should match a/b (2)/c (1) with ********** and {nonegate: true}
    ✓ should match a/b/c [def] with **********
    ✓ should match a/b/c [def] with ********** and {dot: true}
    ✓ should match a/b/c [def] with ********** and {nonegate: true}
    ✓ should match a with **/
    ✓ should match a with **/ and {dot: true}
    ✓ should match a with **/ and {nonegate: true}
    ✓ should match a.md with **/
    ✓ should match a.md with **/ and {dot: true}
    ✓ should match a.md with **/ and {nonegate: true}
    ✓ should match a.js with **/
    ✓ should match a.js with **/ and {dot: true}
    ✓ should match a.js with **/ and {nonegate: true}
    ✓ should match a/ with **/
    ✓ should match a/ with **/ and {dot: true}
    ✓ should match a/ with **/ and {nonegate: true}
    ✓ should match a/b with **/
    ✓ should match a/b with **/ and {dot: true}
    ✓ should match a/b with **/ and {nonegate: true}
    ✓ should match a/b/.c.md with **/
    ✓ should match a/b/.c.md with **/ and {dot: true}
    ✓ should match a/b/.c.md with **/ and {nonegate: true}
    ✓ should match a/b/c with **/
    ✓ should match a/b/c with **/ and {dot: true}
    ✓ should match a/b/c with **/ and {nonegate: true}
    ✓ should match a/b/c.md with **/
    ✓ should match a/b/c.md with **/ and {dot: true}
    ✓ should match a/b/c.md with **/ and {nonegate: true}
    ✓ should match a/b/c/ with **/
    ✓ should match a/b/c/ with **/ and {dot: true}
    ✓ should match a/b/c/ with **/ and {nonegate: true}
    ✓ should match a/b/c/d with **/
    ✓ should match a/b/c/d with **/ and {dot: true}
    ✓ should match a/b/c/d with **/ and {nonegate: true}
    ✓ should match a/b/c/d/ with **/
    ✓ should match a/b/c/d/ with **/ and {dot: true}
    ✓ should match a/b/c/d/ with **/ and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with **/
    ✓ should match a/b/c/d/e/f/z.js with **/ and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with **/ and {nonegate: true}
    ✓ should match a/b/c/z.js with **/
    ✓ should match a/b/c/z.js with **/ and {dot: true}
    ✓ should match a/b/c/z.js with **/ and {nonegate: true}
    ✓ should match a/bb with **/
    ✓ should match a/bb with **/ and {dot: true}
    ✓ should match a/bb with **/ and {nonegate: true}
    ✓ should match a/cb with **/
    ✓ should match a/cb with **/ and {dot: true}
    ✓ should match a/cb with **/ and {nonegate: true}
    ✓ should match abbbz with **/
    ✓ should match abbbz with **/ and {dot: true}
    ✓ should match abbbz with **/ and {nonegate: true}
    ✓ should match abc with **/
    ✓ should match abc with **/ and {dot: true}
    ✓ should match abc with **/ and {nonegate: true}
    ✓ should match abd with **/
    ✓ should match abd with **/ and {dot: true}
    ✓ should match abd with **/ and {nonegate: true}
    ✓ should match z.js with **/
    ✓ should match z.js with **/ and {dot: true}
    ✓ should match z.js with **/ and {nonegate: true}
    ✓ should match za.js with **/
    ✓ should match za.js with **/ and {dot: true}
    ✓ should match za.js with **/ and {nonegate: true}
    ✓ should match !a.js with **/
    ✓ should match !a.js with **/ and {dot: true}
    ✓ should match !a.js with **/ and {nonegate: true}
    ✓ should match !a/b with **/
    ✓ should match !a/b with **/ and {dot: true}
    ✓ should match !a/b with **/ and {nonegate: true}
    ✓ should match !a/b/ with **/
    ✓ should match !a/b/ with **/ and {dot: true}
    ✓ should match !a/b/ with **/ and {nonegate: true}
    ✓ should match !a/b/c with **/
    ✓ should match !a/b/c with **/ and {dot: true}
    ✓ should match !a/b/c with **/ and {nonegate: true}
    ✓ should match !a/b/c/ with **/
    ✓ should match !a/b/c/ with **/ and {dot: true}
    ✓ should match !a/b/c/ with **/ and {nonegate: true}
    ✓ should match !a/!b with **/
    ✓ should match !a/!b with **/ and {dot: true}
    ✓ should match !a/!b with **/ and {nonegate: true}
    ✓ should match !a/!b/c with **/
    ✓ should match !a/!b/c with **/ and {dot: true}
    ✓ should match !a/!b/c with **/ and {nonegate: true}
    ✓ should match !a/!b/c/d with **/
    ✓ should match !a/!b/c/d with **/ and {dot: true}
    ✓ should match !a/!b/c/d with **/ and {nonegate: true}
    ✓ should match !a/b/.c.md with **/
    ✓ should match !a/b/.c.md with **/ and {dot: true}
    ✓ should match !a/b/.c.md with **/ and {nonegate: true}
    ✓ should match /a/ with **/
    ✓ should match /a/ with **/ and {dot: true}
    ✓ should match /a/ with **/ and {nonegate: true}
    ✓ should match /a/b with **/
    ✓ should match /a/b with **/ and {dot: true}
    ✓ should match /a/b with **/ and {nonegate: true}
    ✓ should match /a/cb with **/
    ✓ should match /a/cb with **/ and {dot: true}
    ✓ should match /a/cb with **/ and {nonegate: true}
    ✓ should match /a/bb with **/
    ✓ should match /a/bb with **/ and {dot: true}
    ✓ should match /a/bb with **/ and {nonegate: true}
    ✓ should match /a/b/c with **/
    ✓ should match /a/b/c with **/ and {dot: true}
    ✓ should match /a/b/c with **/ and {nonegate: true}
    ✓ should match /a/b/c/ with **/
    ✓ should match /a/b/c/ with **/ and {dot: true}
    ✓ should match /a/b/c/ with **/ and {nonegate: true}
    ✓ should match /a/b/c/d with **/
    ✓ should match /a/b/c/d with **/ and {dot: true}
    ✓ should match /a/b/c/d with **/ and {nonegate: true}
    ✓ should match /a/b/c/d/ with **/
    ✓ should match /a/b/c/d/ with **/ and {dot: true}
    ✓ should match /a/b/c/d/ with **/ and {nonegate: true}
    ✓ should match . with **/
    ✓ should match . with **/ and {dot: true}
    ✓ should match . with **/ and {nonegate: true}
    ✓ should match ./ with **/
    ✓ should match ./ with **/ and {dot: true}
    ✓ should match ./ with **/ and {nonegate: true}
    ✓ should match .. with **/
    ✓ should match .. with **/ and {dot: true}
    ✓ should match .. with **/ and {nonegate: true}
    ✓ should match ../c with **/
    ✓ should match ../c with **/ and {dot: true}
    ✓ should match ../c with **/ and {nonegate: true}
    ✓ should match ../c with **/
    ✓ should match ../c with **/ and {dot: true}
    ✓ should match ../c with **/ and {nonegate: true}
    ✓ should match ./../c with **/
    ✓ should match ./../c with **/ and {dot: true}
    ✓ should match ./../c with **/ and {nonegate: true}
    ✓ should match ./a/../c with **/
    ✓ should match ./a/../c with **/ and {dot: true}
    ✓ should match ./a/../c with **/ and {nonegate: true}
    ✓ should match /.. with **/
    ✓ should match /.. with **/ and {dot: true}
    ✓ should match /.. with **/ and {nonegate: true}
    ✓ should match /../c with **/
    ✓ should match /../c with **/ and {dot: true}
    ✓ should match /../c with **/ and {nonegate: true}
    ✓ should match /../.c with **/
    ✓ should match /../.c with **/ and {dot: true}
    ✓ should match /../.c with **/ and {nonegate: true}
    ✓ should match /../.c/ with **/
    ✓ should match /../.c/ with **/ and {dot: true}
    ✓ should match /../.c/ with **/ and {nonegate: true}
    ✓ should match /a/../c with **/
    ✓ should match /a/../c with **/ and {dot: true}
    ✓ should match /a/../c with **/ and {nonegate: true}
    ✓ should match a/../c with **/
    ✓ should match a/../c with **/ and {dot: true}
    ✓ should match a/../c with **/ and {nonegate: true}
    ✓ should match ../.b/.c with **/
    ✓ should match ../.b/.c with **/ and {dot: true}
    ✓ should match ../.b/.c with **/ and {nonegate: true}
    ✓ should match ../b/.c with **/
    ✓ should match ../b/.c with **/ and {dot: true}
    ✓ should match ../b/.c with **/ and {nonegate: true}
    ✓ should match ./.b/.c with **/
    ✓ should match ./.b/.c with **/ and {dot: true}
    ✓ should match ./.b/.c with **/ and {nonegate: true}
    ✓ should match ./b/.c with **/
    ✓ should match ./b/.c with **/ and {dot: true}
    ✓ should match ./b/.c with **/ and {nonegate: true}
    ✓ should match .b with **/
    ✓ should match .b with **/ and {dot: true}
    ✓ should match .b with **/ and {nonegate: true}
    ✓ should match .b.c with **/
    ✓ should match .b.c with **/ and {dot: true}
    ✓ should match .b.c with **/ and {nonegate: true}
    ✓ should match .b.c/ with **/
    ✓ should match .b.c/ with **/ and {dot: true}
    ✓ should match .b.c/ with **/ and {nonegate: true}
    ✓ should match .b/ with **/
    ✓ should match .b/ with **/ and {dot: true}
    ✓ should match .b/ with **/ and {nonegate: true}
    ✓ should match .b/.c with **/
    ✓ should match .b/.c with **/ and {dot: true}
    ✓ should match .b/.c with **/ and {nonegate: true}
    ✓ should match .b/c with **/
    ✓ should match .b/c with **/ and {dot: true}
    ✓ should match .b/c with **/ and {nonegate: true}
    ✓ should match b/.c with **/
    ✓ should match b/.c with **/ and {dot: true}
    ✓ should match b/.c with **/ and {nonegate: true}
    ✓ should match b/.c/ with **/
    ✓ should match b/.c/ with **/ and {dot: true}
    ✓ should match b/.c/ with **/ and {nonegate: true}
    ✓ should match a/+b/c with **/
    ✓ should match a/+b/c with **/ and {dot: true}
    ✓ should match a/+b/c with **/ and {nonegate: true}
    ✓ should match +a/+b/c with **/
    ✓ should match +a/+b/c with **/ and {dot: true}
    ✓ should match +a/+b/c with **/ and {nonegate: true}
    ✓ should match a (foo) with **/
    ✓ should match a (foo) with **/ and {dot: true}
    ✓ should match a (foo) with **/ and {nonegate: true}
    ✓ should match a (foo)/(bar) with **/
    ✓ should match a (foo)/(bar) with **/ and {dot: true}
    ✓ should match a (foo)/(bar) with **/ and {nonegate: true}
    ✓ should match a/b/c (1) with **/
    ✓ should match a/b/c (1) with **/ and {dot: true}
    ✓ should match a/b/c (1) with **/ and {nonegate: true}
    ✓ should match a/b (2)/c (1) with **/
    ✓ should match a/b (2)/c (1) with **/ and {dot: true}
    ✓ should match a/b (2)/c (1) with **/ and {nonegate: true}
    ✓ should match a/b/c [def] with **/
    ✓ should match a/b/c [def] with **/ and {dot: true}
    ✓ should match a/b/c [def] with **/ and {nonegate: true}
    ✓ should match a with **/*
    ✓ should match a with **/* and {dot: true}
    ✓ should match a with **/* and {nonegate: true}
    ✓ should match a.md with **/*
    ✓ should match a.md with **/* and {dot: true}
    ✓ should match a.md with **/* and {nonegate: true}
    ✓ should match a.js with **/*
    ✓ should match a.js with **/* and {dot: true}
    ✓ should match a.js with **/* and {nonegate: true}
    ✓ should match a/ with **/*
    ✓ should match a/ with **/* and {dot: true}
    ✓ should match a/ with **/* and {nonegate: true}
    ✓ should match a/b with **/*
    ✓ should match a/b with **/* and {dot: true}
    ✓ should match a/b with **/* and {nonegate: true}
    ✓ should match a/b/.c.md with **/*
    ✓ should match a/b/.c.md with **/* and {dot: true}
    ✓ should match a/b/.c.md with **/* and {nonegate: true}
    ✓ should match a/b/c with **/*
    ✓ should match a/b/c with **/* and {dot: true}
    ✓ should match a/b/c with **/* and {nonegate: true}
    ✓ should match a/b/c.md with **/*
    ✓ should match a/b/c.md with **/* and {dot: true}
    ✓ should match a/b/c.md with **/* and {nonegate: true}
    ✓ should match a/b/c/ with **/*
    ✓ should match a/b/c/ with **/* and {dot: true}
    ✓ should match a/b/c/ with **/* and {nonegate: true}
    ✓ should match a/b/c/d with **/*
    ✓ should match a/b/c/d with **/* and {dot: true}
    ✓ should match a/b/c/d with **/* and {nonegate: true}
    ✓ should match a/b/c/d/ with **/*
    ✓ should match a/b/c/d/ with **/* and {dot: true}
    ✓ should match a/b/c/d/ with **/* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with **/*
    ✓ should match a/b/c/d/e/f/z.js with **/* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with **/* and {nonegate: true}
    ✓ should match a/b/c/z.js with **/*
    ✓ should match a/b/c/z.js with **/* and {dot: true}
    ✓ should match a/b/c/z.js with **/* and {nonegate: true}
    ✓ should match a/bb with **/*
    ✓ should match a/bb with **/* and {dot: true}
    ✓ should match a/bb with **/* and {nonegate: true}
    ✓ should match a/cb with **/*
    ✓ should match a/cb with **/* and {dot: true}
    ✓ should match a/cb with **/* and {nonegate: true}
    ✓ should match abbbz with **/*
    ✓ should match abbbz with **/* and {dot: true}
    ✓ should match abbbz with **/* and {nonegate: true}
    ✓ should match abc with **/*
    ✓ should match abc with **/* and {dot: true}
    ✓ should match abc with **/* and {nonegate: true}
    ✓ should match abd with **/*
    ✓ should match abd with **/* and {dot: true}
    ✓ should match abd with **/* and {nonegate: true}
    ✓ should match z.js with **/*
    ✓ should match z.js with **/* and {dot: true}
    ✓ should match z.js with **/* and {nonegate: true}
    ✓ should match za.js with **/*
    ✓ should match za.js with **/* and {dot: true}
    ✓ should match za.js with **/* and {nonegate: true}
    ✓ should match !a.js with **/*
    ✓ should match !a.js with **/* and {dot: true}
    ✓ should match !a.js with **/* and {nonegate: true}
    ✓ should match !a/b with **/*
    ✓ should match !a/b with **/* and {dot: true}
    ✓ should match !a/b with **/* and {nonegate: true}
    ✓ should match !a/b/ with **/*
    ✓ should match !a/b/ with **/* and {dot: true}
    ✓ should match !a/b/ with **/* and {nonegate: true}
    ✓ should match !a/b/c with **/*
    ✓ should match !a/b/c with **/* and {dot: true}
    ✓ should match !a/b/c with **/* and {nonegate: true}
    ✓ should match !a/b/c/ with **/*
    ✓ should match !a/b/c/ with **/* and {dot: true}
    ✓ should match !a/b/c/ with **/* and {nonegate: true}
    ✓ should match !a/!b with **/*
    ✓ should match !a/!b with **/* and {dot: true}
    ✓ should match !a/!b with **/* and {nonegate: true}
    ✓ should match !a/!b/c with **/*
    ✓ should match !a/!b/c with **/* and {dot: true}
    ✓ should match !a/!b/c with **/* and {nonegate: true}
    ✓ should match !a/!b/c/d with **/*
    ✓ should match !a/!b/c/d with **/* and {dot: true}
    ✓ should match !a/!b/c/d with **/* and {nonegate: true}
    ✓ should match !a/b/.c.md with **/*
    ✓ should match !a/b/.c.md with **/* and {dot: true}
    ✓ should match !a/b/.c.md with **/* and {nonegate: true}
    ✓ should match /a/ with **/*
    ✓ should match /a/ with **/* and {dot: true}
    ✓ should match /a/ with **/* and {nonegate: true}
    ✓ should match /a/b with **/*
    ✓ should match /a/b with **/* and {dot: true}
    ✓ should match /a/b with **/* and {nonegate: true}
    ✓ should match /a/cb with **/*
    ✓ should match /a/cb with **/* and {dot: true}
    ✓ should match /a/cb with **/* and {nonegate: true}
    ✓ should match /a/bb with **/*
    ✓ should match /a/bb with **/* and {dot: true}
    ✓ should match /a/bb with **/* and {nonegate: true}
    ✓ should match /a/b/c with **/*
    ✓ should match /a/b/c with **/* and {dot: true}
    ✓ should match /a/b/c with **/* and {nonegate: true}
    ✓ should match /a/b/c/ with **/*
    ✓ should match /a/b/c/ with **/* and {dot: true}
    ✓ should match /a/b/c/ with **/* and {nonegate: true}
    ✓ should match /a/b/c/d with **/*
    ✓ should match /a/b/c/d with **/* and {dot: true}
    ✓ should match /a/b/c/d with **/* and {nonegate: true}
    ✓ should match /a/b/c/d/ with **/*
    ✓ should match /a/b/c/d/ with **/* and {dot: true}
    ✓ should match /a/b/c/d/ with **/* and {nonegate: true}
    ✓ should match . with **/*
    ✓ should match . with **/* and {dot: true}
    ✓ should match . with **/* and {nonegate: true}
    ✓ should match ./ with **/*
    ✓ should match ./ with **/* and {dot: true}
    ✓ should match ./ with **/* and {nonegate: true}
    ✓ should match .. with **/*
    ✓ should match .. with **/* and {dot: true}
    ✓ should match .. with **/* and {nonegate: true}
    ✓ should match ../c with **/*
    ✓ should match ../c with **/* and {dot: true}
    ✓ should match ../c with **/* and {nonegate: true}
    ✓ should match ../c with **/*
    ✓ should match ../c with **/* and {dot: true}
    ✓ should match ../c with **/* and {nonegate: true}
    ✓ should match ./../c with **/*
    ✓ should match ./../c with **/* and {dot: true}
    ✓ should match ./../c with **/* and {nonegate: true}
    ✓ should match ./a/../c with **/*
    ✓ should match ./a/../c with **/* and {dot: true}
    ✓ should match ./a/../c with **/* and {nonegate: true}
    ✓ should match /.. with **/*
    ✓ should match /.. with **/* and {dot: true}
    ✓ should match /.. with **/* and {nonegate: true}
    ✓ should match /../c with **/*
    ✓ should match /../c with **/* and {dot: true}
    ✓ should match /../c with **/* and {nonegate: true}
    ✓ should match /../.c with **/*
    ✓ should match /../.c with **/* and {dot: true}
    ✓ should match /../.c with **/* and {nonegate: true}
    ✓ should match /../.c/ with **/*
    ✓ should match /../.c/ with **/* and {dot: true}
    ✓ should match /../.c/ with **/* and {nonegate: true}
    ✓ should match /a/../c with **/*
    ✓ should match /a/../c with **/* and {dot: true}
    ✓ should match /a/../c with **/* and {nonegate: true}
    ✓ should match a/../c with **/*
    ✓ should match a/../c with **/* and {dot: true}
    ✓ should match a/../c with **/* and {nonegate: true}
    ✓ should match ../.b/.c with **/*
    ✓ should match ../.b/.c with **/* and {dot: true}
    ✓ should match ../.b/.c with **/* and {nonegate: true}
    ✓ should match ../b/.c with **/*
    ✓ should match ../b/.c with **/* and {dot: true}
    ✓ should match ../b/.c with **/* and {nonegate: true}
    ✓ should match ./.b/.c with **/*
    ✓ should match ./.b/.c with **/* and {dot: true}
    ✓ should match ./.b/.c with **/* and {nonegate: true}
    ✓ should match ./b/.c with **/*
    ✓ should match ./b/.c with **/* and {dot: true}
    ✓ should match ./b/.c with **/* and {nonegate: true}
    ✓ should match .b with **/*
    ✓ should match .b with **/* and {dot: true}
    ✓ should match .b with **/* and {nonegate: true}
    ✓ should match .b.c with **/*
    ✓ should match .b.c with **/* and {dot: true}
    ✓ should match .b.c with **/* and {nonegate: true}
    ✓ should match .b.c/ with **/*
    ✓ should match .b.c/ with **/* and {dot: true}
    ✓ should match .b.c/ with **/* and {nonegate: true}
    ✓ should match .b/ with **/*
    ✓ should match .b/ with **/* and {dot: true}
    ✓ should match .b/ with **/* and {nonegate: true}
    ✓ should match .b/.c with **/*
    ✓ should match .b/.c with **/* and {dot: true}
    ✓ should match .b/.c with **/* and {nonegate: true}
    ✓ should match .b/c with **/*
    ✓ should match .b/c with **/* and {dot: true}
    ✓ should match .b/c with **/* and {nonegate: true}
    ✓ should match b/.c with **/*
    ✓ should match b/.c with **/* and {dot: true}
    ✓ should match b/.c with **/* and {nonegate: true}
    ✓ should match b/.c/ with **/*
    ✓ should match b/.c/ with **/* and {dot: true}
    ✓ should match b/.c/ with **/* and {nonegate: true}
    ✓ should match a/+b/c with **/*
    ✓ should match a/+b/c with **/* and {dot: true}
    ✓ should match a/+b/c with **/* and {nonegate: true}
    ✓ should match +a/+b/c with **/*
    ✓ should match +a/+b/c with **/* and {dot: true}
    ✓ should match +a/+b/c with **/* and {nonegate: true}
    ✓ should match a (foo) with **/*
    ✓ should match a (foo) with **/* and {dot: true}
    ✓ should match a (foo) with **/* and {nonegate: true}
    ✓ should match a (foo)/(bar) with **/*
    ✓ should match a (foo)/(bar) with **/* and {dot: true}
    ✓ should match a (foo)/(bar) with **/* and {nonegate: true}
    ✓ should match a/b/c (1) with **/*
    ✓ should match a/b/c (1) with **/* and {dot: true}
    ✓ should match a/b/c (1) with **/* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with **/*
    ✓ should match a/b (2)/c (1) with **/* and {dot: true}
    ✓ should match a/b (2)/c (1) with **/* and {nonegate: true}
    ✓ should match a/b/c [def] with **/*
    ✓ should match a/b/c [def] with **/* and {dot: true}
    ✓ should match a/b/c [def] with **/* and {nonegate: true}
    ✓ should match a with **/**
    ✓ should match a with **/** and {dot: true}
    ✓ should match a with **/** and {nonegate: true}
    ✓ should match a.md with **/**
    ✓ should match a.md with **/** and {dot: true}
    ✓ should match a.md with **/** and {nonegate: true}
    ✓ should match a.js with **/**
    ✓ should match a.js with **/** and {dot: true}
    ✓ should match a.js with **/** and {nonegate: true}
    ✓ should match a/ with **/**
    ✓ should match a/ with **/** and {dot: true}
    ✓ should match a/ with **/** and {nonegate: true}
    ✓ should match a/b with **/**
    ✓ should match a/b with **/** and {dot: true}
    ✓ should match a/b with **/** and {nonegate: true}
    ✓ should match a/b/.c.md with **/**
    ✓ should match a/b/.c.md with **/** and {dot: true}
    ✓ should match a/b/.c.md with **/** and {nonegate: true}
    ✓ should match a/b/c with **/**
    ✓ should match a/b/c with **/** and {dot: true}
    ✓ should match a/b/c with **/** and {nonegate: true}
    ✓ should match a/b/c.md with **/**
    ✓ should match a/b/c.md with **/** and {dot: true}
    ✓ should match a/b/c.md with **/** and {nonegate: true}
    ✓ should match a/b/c/ with **/**
    ✓ should match a/b/c/ with **/** and {dot: true}
    ✓ should match a/b/c/ with **/** and {nonegate: true}
    ✓ should match a/b/c/d with **/**
    ✓ should match a/b/c/d with **/** and {dot: true}
    ✓ should match a/b/c/d with **/** and {nonegate: true}
    ✓ should match a/b/c/d/ with **/**
    ✓ should match a/b/c/d/ with **/** and {dot: true}
    ✓ should match a/b/c/d/ with **/** and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with **/**
    ✓ should match a/b/c/d/e/f/z.js with **/** and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with **/** and {nonegate: true}
    ✓ should match a/b/c/z.js with **/**
    ✓ should match a/b/c/z.js with **/** and {dot: true}
    ✓ should match a/b/c/z.js with **/** and {nonegate: true}
    ✓ should match a/bb with **/**
    ✓ should match a/bb with **/** and {dot: true}
    ✓ should match a/bb with **/** and {nonegate: true}
    ✓ should match a/cb with **/**
    ✓ should match a/cb with **/** and {dot: true}
    ✓ should match a/cb with **/** and {nonegate: true}
    ✓ should match abbbz with **/**
    ✓ should match abbbz with **/** and {dot: true}
    ✓ should match abbbz with **/** and {nonegate: true}
    ✓ should match abc with **/**
    ✓ should match abc with **/** and {dot: true}
    ✓ should match abc with **/** and {nonegate: true}
    ✓ should match abd with **/**
    ✓ should match abd with **/** and {dot: true}
    ✓ should match abd with **/** and {nonegate: true}
    ✓ should match z.js with **/**
    ✓ should match z.js with **/** and {dot: true}
    ✓ should match z.js with **/** and {nonegate: true}
    ✓ should match za.js with **/**
    ✓ should match za.js with **/** and {dot: true}
    ✓ should match za.js with **/** and {nonegate: true}
    ✓ should match !a.js with **/**
    ✓ should match !a.js with **/** and {dot: true}
    ✓ should match !a.js with **/** and {nonegate: true}
    ✓ should match !a/b with **/**
    ✓ should match !a/b with **/** and {dot: true}
    ✓ should match !a/b with **/** and {nonegate: true}
    ✓ should match !a/b/ with **/**
    ✓ should match !a/b/ with **/** and {dot: true}
    ✓ should match !a/b/ with **/** and {nonegate: true}
    ✓ should match !a/b/c with **/**
    ✓ should match !a/b/c with **/** and {dot: true}
    ✓ should match !a/b/c with **/** and {nonegate: true}
    ✓ should match !a/b/c/ with **/**
    ✓ should match !a/b/c/ with **/** and {dot: true}
    ✓ should match !a/b/c/ with **/** and {nonegate: true}
    ✓ should match !a/!b with **/**
    ✓ should match !a/!b with **/** and {dot: true}
    ✓ should match !a/!b with **/** and {nonegate: true}
    ✓ should match !a/!b/c with **/**
    ✓ should match !a/!b/c with **/** and {dot: true}
    ✓ should match !a/!b/c with **/** and {nonegate: true}
    ✓ should match !a/!b/c/d with **/**
    ✓ should match !a/!b/c/d with **/** and {dot: true}
    ✓ should match !a/!b/c/d with **/** and {nonegate: true}
    ✓ should match !a/b/.c.md with **/**
    ✓ should match !a/b/.c.md with **/** and {dot: true}
    ✓ should match !a/b/.c.md with **/** and {nonegate: true}
    ✓ should match /a/ with **/**
    ✓ should match /a/ with **/** and {dot: true}
    ✓ should match /a/ with **/** and {nonegate: true}
    ✓ should match /a/b with **/**
    ✓ should match /a/b with **/** and {dot: true}
    ✓ should match /a/b with **/** and {nonegate: true}
    ✓ should match /a/cb with **/**
    ✓ should match /a/cb with **/** and {dot: true}
    ✓ should match /a/cb with **/** and {nonegate: true}
    ✓ should match /a/bb with **/**
    ✓ should match /a/bb with **/** and {dot: true}
    ✓ should match /a/bb with **/** and {nonegate: true}
    ✓ should match /a/b/c with **/**
    ✓ should match /a/b/c with **/** and {dot: true}
    ✓ should match /a/b/c with **/** and {nonegate: true}
    ✓ should match /a/b/c/ with **/**
    ✓ should match /a/b/c/ with **/** and {dot: true}
    ✓ should match /a/b/c/ with **/** and {nonegate: true}
    ✓ should match /a/b/c/d with **/**
    ✓ should match /a/b/c/d with **/** and {dot: true}
    ✓ should match /a/b/c/d with **/** and {nonegate: true}
    ✓ should match /a/b/c/d/ with **/**
    ✓ should match /a/b/c/d/ with **/** and {dot: true}
    ✓ should match /a/b/c/d/ with **/** and {nonegate: true}
    ✓ should match . with **/**
    ✓ should match . with **/** and {dot: true}
    ✓ should match . with **/** and {nonegate: true}
    ✓ should match ./ with **/**
    ✓ should match ./ with **/** and {dot: true}
    ✓ should match ./ with **/** and {nonegate: true}
    ✓ should match .. with **/**
    ✓ should match .. with **/** and {dot: true}
    ✓ should match .. with **/** and {nonegate: true}
    ✓ should match ../c with **/**
    ✓ should match ../c with **/** and {dot: true}
    ✓ should match ../c with **/** and {nonegate: true}
    ✓ should match ../c with **/**
    ✓ should match ../c with **/** and {dot: true}
    ✓ should match ../c with **/** and {nonegate: true}
    ✓ should match ./../c with **/**
    ✓ should match ./../c with **/** and {dot: true}
    ✓ should match ./../c with **/** and {nonegate: true}
    ✓ should match ./a/../c with **/**
    ✓ should match ./a/../c with **/** and {dot: true}
    ✓ should match ./a/../c with **/** and {nonegate: true}
    ✓ should match /.. with **/**
    ✓ should match /.. with **/** and {dot: true}
    ✓ should match /.. with **/** and {nonegate: true}
    ✓ should match /../c with **/**
    ✓ should match /../c with **/** and {dot: true}
    ✓ should match /../c with **/** and {nonegate: true}
    ✓ should match /../.c with **/**
    ✓ should match /../.c with **/** and {dot: true}
    ✓ should match /../.c with **/** and {nonegate: true}
    ✓ should match /../.c/ with **/**
    ✓ should match /../.c/ with **/** and {dot: true}
    ✓ should match /../.c/ with **/** and {nonegate: true}
    ✓ should match /a/../c with **/**
    ✓ should match /a/../c with **/** and {dot: true}
    ✓ should match /a/../c with **/** and {nonegate: true}
    ✓ should match a/../c with **/**
    ✓ should match a/../c with **/** and {dot: true}
    ✓ should match a/../c with **/** and {nonegate: true}
    ✓ should match ../.b/.c with **/**
    ✓ should match ../.b/.c with **/** and {dot: true}
    ✓ should match ../.b/.c with **/** and {nonegate: true}
    ✓ should match ../b/.c with **/**
    ✓ should match ../b/.c with **/** and {dot: true}
    ✓ should match ../b/.c with **/** and {nonegate: true}
    ✓ should match ./.b/.c with **/**
    ✓ should match ./.b/.c with **/** and {dot: true}
    ✓ should match ./.b/.c with **/** and {nonegate: true}
    ✓ should match ./b/.c with **/**
    ✓ should match ./b/.c with **/** and {dot: true}
    ✓ should match ./b/.c with **/** and {nonegate: true}
    ✓ should match .b with **/**
    ✓ should match .b with **/** and {dot: true}
    ✓ should match .b with **/** and {nonegate: true}
    ✓ should match .b.c with **/**
    ✓ should match .b.c with **/** and {dot: true}
    ✓ should match .b.c with **/** and {nonegate: true}
    ✓ should match .b.c/ with **/**
    ✓ should match .b.c/ with **/** and {dot: true}
    ✓ should match .b.c/ with **/** and {nonegate: true}
    ✓ should match .b/ with **/**
    ✓ should match .b/ with **/** and {dot: true}
    ✓ should match .b/ with **/** and {nonegate: true}
    ✓ should match .b/.c with **/**
    ✓ should match .b/.c with **/** and {dot: true}
    ✓ should match .b/.c with **/** and {nonegate: true}
    ✓ should match .b/c with **/**
    ✓ should match .b/c with **/** and {dot: true}
    ✓ should match .b/c with **/** and {nonegate: true}
    ✓ should match b/.c with **/**
    ✓ should match b/.c with **/** and {dot: true}
    ✓ should match b/.c with **/** and {nonegate: true}
    ✓ should match b/.c/ with **/**
    ✓ should match b/.c/ with **/** and {dot: true}
    ✓ should match b/.c/ with **/** and {nonegate: true}
    ✓ should match a/+b/c with **/**
    ✓ should match a/+b/c with **/** and {dot: true}
    ✓ should match a/+b/c with **/** and {nonegate: true}
    ✓ should match +a/+b/c with **/**
    ✓ should match +a/+b/c with **/** and {dot: true}
    ✓ should match +a/+b/c with **/** and {nonegate: true}
    ✓ should match a (foo) with **/**
    ✓ should match a (foo) with **/** and {dot: true}
    ✓ should match a (foo) with **/** and {nonegate: true}
    ✓ should match a (foo)/(bar) with **/**
    ✓ should match a (foo)/(bar) with **/** and {dot: true}
    ✓ should match a (foo)/(bar) with **/** and {nonegate: true}
    ✓ should match a/b/c (1) with **/**
    ✓ should match a/b/c (1) with **/** and {dot: true}
    ✓ should match a/b/c (1) with **/** and {nonegate: true}
    ✓ should match a/b (2)/c (1) with **/**
    ✓ should match a/b (2)/c (1) with **/** and {dot: true}
    ✓ should match a/b (2)/c (1) with **/** and {nonegate: true}
    ✓ should match a/b/c [def] with **/**
    ✓ should match a/b/c [def] with **/** and {dot: true}
    ✓ should match a/b/c [def] with **/** and {nonegate: true}
    ✓ should match a with **/**/**
    ✓ should match a with **/**/** and {dot: true}
    ✓ should match a with **/**/** and {nonegate: true}
    ✓ should match a.md with **/**/**
    ✓ should match a.md with **/**/** and {dot: true}
    ✓ should match a.md with **/**/** and {nonegate: true}
    ✓ should match a.js with **/**/**
    ✓ should match a.js with **/**/** and {dot: true}
    ✓ should match a.js with **/**/** and {nonegate: true}
    ✓ should match a/ with **/**/**
    ✓ should match a/ with **/**/** and {dot: true}
    ✓ should match a/ with **/**/** and {nonegate: true}
    ✓ should match a/b with **/**/**
    ✓ should match a/b with **/**/** and {dot: true}
    ✓ should match a/b with **/**/** and {nonegate: true}
    ✓ should match a/b/.c.md with **/**/**
    ✓ should match a/b/.c.md with **/**/** and {dot: true}
    ✓ should match a/b/.c.md with **/**/** and {nonegate: true}
    ✓ should match a/b/c with **/**/**
    ✓ should match a/b/c with **/**/** and {dot: true}
    ✓ should match a/b/c with **/**/** and {nonegate: true}
    ✓ should match a/b/c.md with **/**/**
    ✓ should match a/b/c.md with **/**/** and {dot: true}
    ✓ should match a/b/c.md with **/**/** and {nonegate: true}
    ✓ should match a/b/c/ with **/**/**
    ✓ should match a/b/c/ with **/**/** and {dot: true}
    ✓ should match a/b/c/ with **/**/** and {nonegate: true}
    ✓ should match a/b/c/d with **/**/**
    ✓ should match a/b/c/d with **/**/** and {dot: true}
    ✓ should match a/b/c/d with **/**/** and {nonegate: true}
    ✓ should match a/b/c/d/ with **/**/**
    ✓ should match a/b/c/d/ with **/**/** and {dot: true}
    ✓ should match a/b/c/d/ with **/**/** and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with **/**/**
    ✓ should match a/b/c/d/e/f/z.js with **/**/** and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with **/**/** and {nonegate: true}
    ✓ should match a/b/c/z.js with **/**/**
    ✓ should match a/b/c/z.js with **/**/** and {dot: true}
    ✓ should match a/b/c/z.js with **/**/** and {nonegate: true}
    ✓ should match a/bb with **/**/**
    ✓ should match a/bb with **/**/** and {dot: true}
    ✓ should match a/bb with **/**/** and {nonegate: true}
    ✓ should match a/cb with **/**/**
    ✓ should match a/cb with **/**/** and {dot: true}
    ✓ should match a/cb with **/**/** and {nonegate: true}
    ✓ should match abbbz with **/**/**
    ✓ should match abbbz with **/**/** and {dot: true}
    ✓ should match abbbz with **/**/** and {nonegate: true}
    ✓ should match abc with **/**/**
    ✓ should match abc with **/**/** and {dot: true}
    ✓ should match abc with **/**/** and {nonegate: true}
    ✓ should match abd with **/**/**
    ✓ should match abd with **/**/** and {dot: true}
    ✓ should match abd with **/**/** and {nonegate: true}
    ✓ should match z.js with **/**/**
    ✓ should match z.js with **/**/** and {dot: true}
    ✓ should match z.js with **/**/** and {nonegate: true}
    ✓ should match za.js with **/**/**
    ✓ should match za.js with **/**/** and {dot: true}
    ✓ should match za.js with **/**/** and {nonegate: true}
    ✓ should match !a.js with **/**/**
    ✓ should match !a.js with **/**/** and {dot: true}
    ✓ should match !a.js with **/**/** and {nonegate: true}
    ✓ should match !a/b with **/**/**
    ✓ should match !a/b with **/**/** and {dot: true}
    ✓ should match !a/b with **/**/** and {nonegate: true}
    ✓ should match !a/b/ with **/**/**
    ✓ should match !a/b/ with **/**/** and {dot: true}
    ✓ should match !a/b/ with **/**/** and {nonegate: true}
    ✓ should match !a/b/c with **/**/**
    ✓ should match !a/b/c with **/**/** and {dot: true}
    ✓ should match !a/b/c with **/**/** and {nonegate: true}
    ✓ should match !a/b/c/ with **/**/**
    ✓ should match !a/b/c/ with **/**/** and {dot: true}
    ✓ should match !a/b/c/ with **/**/** and {nonegate: true}
    ✓ should match !a/!b with **/**/**
    ✓ should match !a/!b with **/**/** and {dot: true}
    ✓ should match !a/!b with **/**/** and {nonegate: true}
    ✓ should match !a/!b/c with **/**/**
    ✓ should match !a/!b/c with **/**/** and {dot: true}
    ✓ should match !a/!b/c with **/**/** and {nonegate: true}
    ✓ should match !a/!b/c/d with **/**/**
    ✓ should match !a/!b/c/d with **/**/** and {dot: true}
    ✓ should match !a/!b/c/d with **/**/** and {nonegate: true}
    ✓ should match !a/b/.c.md with **/**/**
    ✓ should match !a/b/.c.md with **/**/** and {dot: true}
    ✓ should match !a/b/.c.md with **/**/** and {nonegate: true}
    ✓ should match /a/ with **/**/**
    ✓ should match /a/ with **/**/** and {dot: true}
    ✓ should match /a/ with **/**/** and {nonegate: true}
    ✓ should match /a/b with **/**/**
    ✓ should match /a/b with **/**/** and {dot: true}
    ✓ should match /a/b with **/**/** and {nonegate: true}
    ✓ should match /a/cb with **/**/**
    ✓ should match /a/cb with **/**/** and {dot: true}
    ✓ should match /a/cb with **/**/** and {nonegate: true}
    ✓ should match /a/bb with **/**/**
    ✓ should match /a/bb with **/**/** and {dot: true}
    ✓ should match /a/bb with **/**/** and {nonegate: true}
    ✓ should match /a/b/c with **/**/**
    ✓ should match /a/b/c with **/**/** and {dot: true}
    ✓ should match /a/b/c with **/**/** and {nonegate: true}
    ✓ should match /a/b/c/ with **/**/**
    ✓ should match /a/b/c/ with **/**/** and {dot: true}
    ✓ should match /a/b/c/ with **/**/** and {nonegate: true}
    ✓ should match /a/b/c/d with **/**/**
    ✓ should match /a/b/c/d with **/**/** and {dot: true}
    ✓ should match /a/b/c/d with **/**/** and {nonegate: true}
    ✓ should match /a/b/c/d/ with **/**/**
    ✓ should match /a/b/c/d/ with **/**/** and {dot: true}
    ✓ should match /a/b/c/d/ with **/**/** and {nonegate: true}
    ✓ should match . with **/**/**
    ✓ should match . with **/**/** and {dot: true}
    ✓ should match . with **/**/** and {nonegate: true}
    ✓ should match ./ with **/**/**
    ✓ should match ./ with **/**/** and {dot: true}
    ✓ should match ./ with **/**/** and {nonegate: true}
    ✓ should match .. with **/**/**
    ✓ should match .. with **/**/** and {dot: true}
    ✓ should match .. with **/**/** and {nonegate: true}
    ✓ should match ../c with **/**/**
    ✓ should match ../c with **/**/** and {dot: true}
    ✓ should match ../c with **/**/** and {nonegate: true}
    ✓ should match ../c with **/**/**
    ✓ should match ../c with **/**/** and {dot: true}
    ✓ should match ../c with **/**/** and {nonegate: true}
    ✓ should match ./../c with **/**/**
    ✓ should match ./../c with **/**/** and {dot: true}
    ✓ should match ./../c with **/**/** and {nonegate: true}
    ✓ should match ./a/../c with **/**/**
    ✓ should match ./a/../c with **/**/** and {dot: true}
    ✓ should match ./a/../c with **/**/** and {nonegate: true}
    ✓ should match /.. with **/**/**
    ✓ should match /.. with **/**/** and {dot: true}
    ✓ should match /.. with **/**/** and {nonegate: true}
    ✓ should match /../c with **/**/**
    ✓ should match /../c with **/**/** and {dot: true}
    ✓ should match /../c with **/**/** and {nonegate: true}
    ✓ should match /../.c with **/**/**
    ✓ should match /../.c with **/**/** and {dot: true}
    ✓ should match /../.c with **/**/** and {nonegate: true}
    ✓ should match /../.c/ with **/**/**
    ✓ should match /../.c/ with **/**/** and {dot: true}
    ✓ should match /../.c/ with **/**/** and {nonegate: true}
    ✓ should match /a/../c with **/**/**
    ✓ should match /a/../c with **/**/** and {dot: true}
    ✓ should match /a/../c with **/**/** and {nonegate: true}
    ✓ should match a/../c with **/**/**
    ✓ should match a/../c with **/**/** and {dot: true}
    ✓ should match a/../c with **/**/** and {nonegate: true}
    ✓ should match ../.b/.c with **/**/**
    ✓ should match ../.b/.c with **/**/** and {dot: true}
    ✓ should match ../.b/.c with **/**/** and {nonegate: true}
    ✓ should match ../b/.c with **/**/**
    ✓ should match ../b/.c with **/**/** and {dot: true}
    ✓ should match ../b/.c with **/**/** and {nonegate: true}
    ✓ should match ./.b/.c with **/**/**
    ✓ should match ./.b/.c with **/**/** and {dot: true}
    ✓ should match ./.b/.c with **/**/** and {nonegate: true}
    ✓ should match ./b/.c with **/**/**
    ✓ should match ./b/.c with **/**/** and {dot: true}
    ✓ should match ./b/.c with **/**/** and {nonegate: true}
    ✓ should match .b with **/**/**
    ✓ should match .b with **/**/** and {dot: true}
    ✓ should match .b with **/**/** and {nonegate: true}
    ✓ should match .b.c with **/**/**
    ✓ should match .b.c with **/**/** and {dot: true}
    ✓ should match .b.c with **/**/** and {nonegate: true}
    ✓ should match .b.c/ with **/**/**
    ✓ should match .b.c/ with **/**/** and {dot: true}
    ✓ should match .b.c/ with **/**/** and {nonegate: true}
    ✓ should match .b/ with **/**/**
    ✓ should match .b/ with **/**/** and {dot: true}
    ✓ should match .b/ with **/**/** and {nonegate: true}
    ✓ should match .b/.c with **/**/**
    ✓ should match .b/.c with **/**/** and {dot: true}
    ✓ should match .b/.c with **/**/** and {nonegate: true}
    ✓ should match .b/c with **/**/**
    ✓ should match .b/c with **/**/** and {dot: true}
    ✓ should match .b/c with **/**/** and {nonegate: true}
    ✓ should match b/.c with **/**/**
    ✓ should match b/.c with **/**/** and {dot: true}
    ✓ should match b/.c with **/**/** and {nonegate: true}
    ✓ should match b/.c/ with **/**/**
    ✓ should match b/.c/ with **/**/** and {dot: true}
    ✓ should match b/.c/ with **/**/** and {nonegate: true}
    ✓ should match a/+b/c with **/**/**
    ✓ should match a/+b/c with **/**/** and {dot: true}
    ✓ should match a/+b/c with **/**/** and {nonegate: true}
    ✓ should match +a/+b/c with **/**/**
    ✓ should match +a/+b/c with **/**/** and {dot: true}
    ✓ should match +a/+b/c with **/**/** and {nonegate: true}
    ✓ should match a (foo) with **/**/**
    ✓ should match a (foo) with **/**/** and {dot: true}
    ✓ should match a (foo) with **/**/** and {nonegate: true}
    ✓ should match a (foo)/(bar) with **/**/**
    ✓ should match a (foo)/(bar) with **/**/** and {dot: true}
    ✓ should match a (foo)/(bar) with **/**/** and {nonegate: true}
    ✓ should match a/b/c (1) with **/**/**
    ✓ should match a/b/c (1) with **/**/** and {dot: true}
    ✓ should match a/b/c (1) with **/**/** and {nonegate: true}
    ✓ should match a/b (2)/c (1) with **/**/**
    ✓ should match a/b (2)/c (1) with **/**/** and {dot: true}
    ✓ should match a/b (2)/c (1) with **/**/** and {nonegate: true}
    ✓ should match a/b/c [def] with **/**/**
    ✓ should match a/b/c [def] with **/**/** and {dot: true}
    ✓ should match a/b/c [def] with **/**/** and {nonegate: true}
    ✓ should match a with **/*.md
    ✓ should match a with **/*.md and {dot: true}
    ✓ should match a with **/*.md and {nonegate: true}
    ✓ should match a.md with **/*.md
    ✓ should match a.md with **/*.md and {dot: true}
    ✓ should match a.md with **/*.md and {nonegate: true}
    ✓ should match a.js with **/*.md
    ✓ should match a.js with **/*.md and {dot: true}
    ✓ should match a.js with **/*.md and {nonegate: true}
    ✓ should match a/ with **/*.md
    ✓ should match a/ with **/*.md and {dot: true}
    ✓ should match a/ with **/*.md and {nonegate: true}
    ✓ should match a/b with **/*.md
    ✓ should match a/b with **/*.md and {dot: true}
    ✓ should match a/b with **/*.md and {nonegate: true}
    ✓ should match a/b/.c.md with **/*.md
    ✓ should match a/b/.c.md with **/*.md and {dot: true}
    ✓ should match a/b/.c.md with **/*.md and {nonegate: true}
    ✓ should match a/b/c with **/*.md
    ✓ should match a/b/c with **/*.md and {dot: true}
    ✓ should match a/b/c with **/*.md and {nonegate: true}
    ✓ should match a/b/c.md with **/*.md
    ✓ should match a/b/c.md with **/*.md and {dot: true}
    ✓ should match a/b/c.md with **/*.md and {nonegate: true}
    ✓ should match a/b/c/ with **/*.md
    ✓ should match a/b/c/ with **/*.md and {dot: true}
    ✓ should match a/b/c/ with **/*.md and {nonegate: true}
    ✓ should match a/b/c/d with **/*.md
    ✓ should match a/b/c/d with **/*.md and {dot: true}
    ✓ should match a/b/c/d with **/*.md and {nonegate: true}
    ✓ should match a/b/c/d/ with **/*.md
    ✓ should match a/b/c/d/ with **/*.md and {dot: true}
    ✓ should match a/b/c/d/ with **/*.md and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with **/*.md
    ✓ should match a/b/c/d/e/f/z.js with **/*.md and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with **/*.md and {nonegate: true}
    ✓ should match a/b/c/z.js with **/*.md
    ✓ should match a/b/c/z.js with **/*.md and {dot: true}
    ✓ should match a/b/c/z.js with **/*.md and {nonegate: true}
    ✓ should match a/bb with **/*.md
    ✓ should match a/bb with **/*.md and {dot: true}
    ✓ should match a/bb with **/*.md and {nonegate: true}
    ✓ should match a/cb with **/*.md
    ✓ should match a/cb with **/*.md and {dot: true}
    ✓ should match a/cb with **/*.md and {nonegate: true}
    ✓ should match abbbz with **/*.md
    ✓ should match abbbz with **/*.md and {dot: true}
    ✓ should match abbbz with **/*.md and {nonegate: true}
    ✓ should match abc with **/*.md
    ✓ should match abc with **/*.md and {dot: true}
    ✓ should match abc with **/*.md and {nonegate: true}
    ✓ should match abd with **/*.md
    ✓ should match abd with **/*.md and {dot: true}
    ✓ should match abd with **/*.md and {nonegate: true}
    ✓ should match z.js with **/*.md
    ✓ should match z.js with **/*.md and {dot: true}
    ✓ should match z.js with **/*.md and {nonegate: true}
    ✓ should match za.js with **/*.md
    ✓ should match za.js with **/*.md and {dot: true}
    ✓ should match za.js with **/*.md and {nonegate: true}
    ✓ should match !a.js with **/*.md
    ✓ should match !a.js with **/*.md and {dot: true}
    ✓ should match !a.js with **/*.md and {nonegate: true}
    ✓ should match !a/b with **/*.md
    ✓ should match !a/b with **/*.md and {dot: true}
    ✓ should match !a/b with **/*.md and {nonegate: true}
    ✓ should match !a/b/ with **/*.md
    ✓ should match !a/b/ with **/*.md and {dot: true}
    ✓ should match !a/b/ with **/*.md and {nonegate: true}
    ✓ should match !a/b/c with **/*.md
    ✓ should match !a/b/c with **/*.md and {dot: true}
    ✓ should match !a/b/c with **/*.md and {nonegate: true}
    ✓ should match !a/b/c/ with **/*.md
    ✓ should match !a/b/c/ with **/*.md and {dot: true}
    ✓ should match !a/b/c/ with **/*.md and {nonegate: true}
    ✓ should match !a/!b with **/*.md
    ✓ should match !a/!b with **/*.md and {dot: true}
    ✓ should match !a/!b with **/*.md and {nonegate: true}
    ✓ should match !a/!b/c with **/*.md
    ✓ should match !a/!b/c with **/*.md and {dot: true}
    ✓ should match !a/!b/c with **/*.md and {nonegate: true}
    ✓ should match !a/!b/c/d with **/*.md
    ✓ should match !a/!b/c/d with **/*.md and {dot: true}
    ✓ should match !a/!b/c/d with **/*.md and {nonegate: true}
    ✓ should match !a/b/.c.md with **/*.md
    ✓ should match !a/b/.c.md with **/*.md and {dot: true}
    ✓ should match !a/b/.c.md with **/*.md and {nonegate: true}
    ✓ should match /a/ with **/*.md
    ✓ should match /a/ with **/*.md and {dot: true}
    ✓ should match /a/ with **/*.md and {nonegate: true}
    ✓ should match /a/b with **/*.md
    ✓ should match /a/b with **/*.md and {dot: true}
    ✓ should match /a/b with **/*.md and {nonegate: true}
    ✓ should match /a/cb with **/*.md
    ✓ should match /a/cb with **/*.md and {dot: true}
    ✓ should match /a/cb with **/*.md and {nonegate: true}
    ✓ should match /a/bb with **/*.md
    ✓ should match /a/bb with **/*.md and {dot: true}
    ✓ should match /a/bb with **/*.md and {nonegate: true}
    ✓ should match /a/b/c with **/*.md
    ✓ should match /a/b/c with **/*.md and {dot: true}
    ✓ should match /a/b/c with **/*.md and {nonegate: true}
    ✓ should match /a/b/c/ with **/*.md
    ✓ should match /a/b/c/ with **/*.md and {dot: true}
    ✓ should match /a/b/c/ with **/*.md and {nonegate: true}
    ✓ should match /a/b/c/d with **/*.md
    ✓ should match /a/b/c/d with **/*.md and {dot: true}
    ✓ should match /a/b/c/d with **/*.md and {nonegate: true}
    ✓ should match /a/b/c/d/ with **/*.md
    ✓ should match /a/b/c/d/ with **/*.md and {dot: true}
    ✓ should match /a/b/c/d/ with **/*.md and {nonegate: true}
    ✓ should match . with **/*.md
    ✓ should match . with **/*.md and {dot: true}
    ✓ should match . with **/*.md and {nonegate: true}
    ✓ should match ./ with **/*.md
    ✓ should match ./ with **/*.md and {dot: true}
    ✓ should match ./ with **/*.md and {nonegate: true}
    ✓ should match .. with **/*.md
    ✓ should match .. with **/*.md and {dot: true}
    ✓ should match .. with **/*.md and {nonegate: true}
    ✓ should match ../c with **/*.md
    ✓ should match ../c with **/*.md and {dot: true}
    ✓ should match ../c with **/*.md and {nonegate: true}
    ✓ should match ../c with **/*.md
    ✓ should match ../c with **/*.md and {dot: true}
    ✓ should match ../c with **/*.md and {nonegate: true}
    ✓ should match ./../c with **/*.md
    ✓ should match ./../c with **/*.md and {dot: true}
    ✓ should match ./../c with **/*.md and {nonegate: true}
    ✓ should match ./a/../c with **/*.md
    ✓ should match ./a/../c with **/*.md and {dot: true}
    ✓ should match ./a/../c with **/*.md and {nonegate: true}
    ✓ should match /.. with **/*.md
    ✓ should match /.. with **/*.md and {dot: true}
    ✓ should match /.. with **/*.md and {nonegate: true}
    ✓ should match /../c with **/*.md
    ✓ should match /../c with **/*.md and {dot: true}
    ✓ should match /../c with **/*.md and {nonegate: true}
    ✓ should match /../.c with **/*.md
    ✓ should match /../.c with **/*.md and {dot: true}
    ✓ should match /../.c with **/*.md and {nonegate: true}
    ✓ should match /../.c/ with **/*.md
    ✓ should match /../.c/ with **/*.md and {dot: true}
    ✓ should match /../.c/ with **/*.md and {nonegate: true}
    ✓ should match /a/../c with **/*.md
    ✓ should match /a/../c with **/*.md and {dot: true}
    ✓ should match /a/../c with **/*.md and {nonegate: true}
    ✓ should match a/../c with **/*.md
    ✓ should match a/../c with **/*.md and {dot: true}
    ✓ should match a/../c with **/*.md and {nonegate: true}
    ✓ should match ../.b/.c with **/*.md
    ✓ should match ../.b/.c with **/*.md and {dot: true}
    ✓ should match ../.b/.c with **/*.md and {nonegate: true}
    ✓ should match ../b/.c with **/*.md
    ✓ should match ../b/.c with **/*.md and {dot: true}
    ✓ should match ../b/.c with **/*.md and {nonegate: true}
    ✓ should match ./.b/.c with **/*.md
    ✓ should match ./.b/.c with **/*.md and {dot: true}
    ✓ should match ./.b/.c with **/*.md and {nonegate: true}
    ✓ should match ./b/.c with **/*.md
    ✓ should match ./b/.c with **/*.md and {dot: true}
    ✓ should match ./b/.c with **/*.md and {nonegate: true}
    ✓ should match .b with **/*.md
    ✓ should match .b with **/*.md and {dot: true}
    ✓ should match .b with **/*.md and {nonegate: true}
    ✓ should match .b.c with **/*.md
    ✓ should match .b.c with **/*.md and {dot: true}
    ✓ should match .b.c with **/*.md and {nonegate: true}
    ✓ should match .b.c/ with **/*.md
    ✓ should match .b.c/ with **/*.md and {dot: true}
    ✓ should match .b.c/ with **/*.md and {nonegate: true}
    ✓ should match .b/ with **/*.md
    ✓ should match .b/ with **/*.md and {dot: true}
    ✓ should match .b/ with **/*.md and {nonegate: true}
    ✓ should match .b/.c with **/*.md
    ✓ should match .b/.c with **/*.md and {dot: true}
    ✓ should match .b/.c with **/*.md and {nonegate: true}
    ✓ should match .b/c with **/*.md
    ✓ should match .b/c with **/*.md and {dot: true}
    ✓ should match .b/c with **/*.md and {nonegate: true}
    ✓ should match b/.c with **/*.md
    ✓ should match b/.c with **/*.md and {dot: true}
    ✓ should match b/.c with **/*.md and {nonegate: true}
    ✓ should match b/.c/ with **/*.md
    ✓ should match b/.c/ with **/*.md and {dot: true}
    ✓ should match b/.c/ with **/*.md and {nonegate: true}
    ✓ should match a/+b/c with **/*.md
    ✓ should match a/+b/c with **/*.md and {dot: true}
    ✓ should match a/+b/c with **/*.md and {nonegate: true}
    ✓ should match +a/+b/c with **/*.md
    ✓ should match +a/+b/c with **/*.md and {dot: true}
    ✓ should match +a/+b/c with **/*.md and {nonegate: true}
    ✓ should match a (foo) with **/*.md
    ✓ should match a (foo) with **/*.md and {dot: true}
    ✓ should match a (foo) with **/*.md and {nonegate: true}
    ✓ should match a (foo)/(bar) with **/*.md
    ✓ should match a (foo)/(bar) with **/*.md and {dot: true}
    ✓ should match a (foo)/(bar) with **/*.md and {nonegate: true}
    ✓ should match a/b/c (1) with **/*.md
    ✓ should match a/b/c (1) with **/*.md and {dot: true}
    ✓ should match a/b/c (1) with **/*.md and {nonegate: true}
    ✓ should match a/b (2)/c (1) with **/*.md
    ✓ should match a/b (2)/c (1) with **/*.md and {dot: true}
    ✓ should match a/b (2)/c (1) with **/*.md and {nonegate: true}
    ✓ should match a/b/c [def] with **/*.md
    ✓ should match a/b/c [def] with **/*.md and {dot: true}
    ✓ should match a/b/c [def] with **/*.md and {nonegate: true}
    ✓ should match a with **/*?.md
    ✓ should match a with **/*?.md and {dot: true}
    ✓ should match a with **/*?.md and {nonegate: true}
    ✓ should match a.md with **/*?.md
    ✓ should match a.md with **/*?.md and {dot: true}
    ✓ should match a.md with **/*?.md and {nonegate: true}
    ✓ should match a.js with **/*?.md
    ✓ should match a.js with **/*?.md and {dot: true}
    ✓ should match a.js with **/*?.md and {nonegate: true}
    ✓ should match a/ with **/*?.md
    ✓ should match a/ with **/*?.md and {dot: true}
    ✓ should match a/ with **/*?.md and {nonegate: true}
    ✓ should match a/b with **/*?.md
    ✓ should match a/b with **/*?.md and {dot: true}
    ✓ should match a/b with **/*?.md and {nonegate: true}
    ✓ should match a/b/.c.md with **/*?.md
    ✓ should match a/b/.c.md with **/*?.md and {dot: true}
    ✓ should match a/b/.c.md with **/*?.md and {nonegate: true}
    ✓ should match a/b/c with **/*?.md
    ✓ should match a/b/c with **/*?.md and {dot: true}
    ✓ should match a/b/c with **/*?.md and {nonegate: true}
    ✓ should match a/b/c.md with **/*?.md
    ✓ should match a/b/c.md with **/*?.md and {dot: true}
    ✓ should match a/b/c.md with **/*?.md and {nonegate: true}
    ✓ should match a/b/c/ with **/*?.md
    ✓ should match a/b/c/ with **/*?.md and {dot: true}
    ✓ should match a/b/c/ with **/*?.md and {nonegate: true}
    ✓ should match a/b/c/d with **/*?.md
    ✓ should match a/b/c/d with **/*?.md and {dot: true}
    ✓ should match a/b/c/d with **/*?.md and {nonegate: true}
    ✓ should match a/b/c/d/ with **/*?.md
    ✓ should match a/b/c/d/ with **/*?.md and {dot: true}
    ✓ should match a/b/c/d/ with **/*?.md and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with **/*?.md
    ✓ should match a/b/c/d/e/f/z.js with **/*?.md and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with **/*?.md and {nonegate: true}
    ✓ should match a/b/c/z.js with **/*?.md
    ✓ should match a/b/c/z.js with **/*?.md and {dot: true}
    ✓ should match a/b/c/z.js with **/*?.md and {nonegate: true}
    ✓ should match a/bb with **/*?.md
    ✓ should match a/bb with **/*?.md and {dot: true}
    ✓ should match a/bb with **/*?.md and {nonegate: true}
    ✓ should match a/cb with **/*?.md
    ✓ should match a/cb with **/*?.md and {dot: true}
    ✓ should match a/cb with **/*?.md and {nonegate: true}
    ✓ should match abbbz with **/*?.md
    ✓ should match abbbz with **/*?.md and {dot: true}
    ✓ should match abbbz with **/*?.md and {nonegate: true}
    ✓ should match abc with **/*?.md
    ✓ should match abc with **/*?.md and {dot: true}
    ✓ should match abc with **/*?.md and {nonegate: true}
    ✓ should match abd with **/*?.md
    ✓ should match abd with **/*?.md and {dot: true}
    ✓ should match abd with **/*?.md and {nonegate: true}
    ✓ should match z.js with **/*?.md
    ✓ should match z.js with **/*?.md and {dot: true}
    ✓ should match z.js with **/*?.md and {nonegate: true}
    ✓ should match za.js with **/*?.md
    ✓ should match za.js with **/*?.md and {dot: true}
    ✓ should match za.js with **/*?.md and {nonegate: true}
    ✓ should match !a.js with **/*?.md
    ✓ should match !a.js with **/*?.md and {dot: true}
    ✓ should match !a.js with **/*?.md and {nonegate: true}
    ✓ should match !a/b with **/*?.md
    ✓ should match !a/b with **/*?.md and {dot: true}
    ✓ should match !a/b with **/*?.md and {nonegate: true}
    ✓ should match !a/b/ with **/*?.md
    ✓ should match !a/b/ with **/*?.md and {dot: true}
    ✓ should match !a/b/ with **/*?.md and {nonegate: true}
    ✓ should match !a/b/c with **/*?.md
    ✓ should match !a/b/c with **/*?.md and {dot: true}
    ✓ should match !a/b/c with **/*?.md and {nonegate: true}
    ✓ should match !a/b/c/ with **/*?.md
    ✓ should match !a/b/c/ with **/*?.md and {dot: true}
    ✓ should match !a/b/c/ with **/*?.md and {nonegate: true}
    ✓ should match !a/!b with **/*?.md
    ✓ should match !a/!b with **/*?.md and {dot: true}
    ✓ should match !a/!b with **/*?.md and {nonegate: true}
    ✓ should match !a/!b/c with **/*?.md
    ✓ should match !a/!b/c with **/*?.md and {dot: true}
    ✓ should match !a/!b/c with **/*?.md and {nonegate: true}
    ✓ should match !a/!b/c/d with **/*?.md
    ✓ should match !a/!b/c/d with **/*?.md and {dot: true}
    ✓ should match !a/!b/c/d with **/*?.md and {nonegate: true}
    ✓ should match !a/b/.c.md with **/*?.md
    ✓ should match !a/b/.c.md with **/*?.md and {dot: true}
    ✓ should match !a/b/.c.md with **/*?.md and {nonegate: true}
    ✓ should match /a/ with **/*?.md
    ✓ should match /a/ with **/*?.md and {dot: true}
    ✓ should match /a/ with **/*?.md and {nonegate: true}
    ✓ should match /a/b with **/*?.md
    ✓ should match /a/b with **/*?.md and {dot: true}
    ✓ should match /a/b with **/*?.md and {nonegate: true}
    ✓ should match /a/cb with **/*?.md
    ✓ should match /a/cb with **/*?.md and {dot: true}
    ✓ should match /a/cb with **/*?.md and {nonegate: true}
    ✓ should match /a/bb with **/*?.md
    ✓ should match /a/bb with **/*?.md and {dot: true}
    ✓ should match /a/bb with **/*?.md and {nonegate: true}
    ✓ should match /a/b/c with **/*?.md
    ✓ should match /a/b/c with **/*?.md and {dot: true}
    ✓ should match /a/b/c with **/*?.md and {nonegate: true}
    ✓ should match /a/b/c/ with **/*?.md
    ✓ should match /a/b/c/ with **/*?.md and {dot: true}
    ✓ should match /a/b/c/ with **/*?.md and {nonegate: true}
    ✓ should match /a/b/c/d with **/*?.md
    ✓ should match /a/b/c/d with **/*?.md and {dot: true}
    ✓ should match /a/b/c/d with **/*?.md and {nonegate: true}
    ✓ should match /a/b/c/d/ with **/*?.md
    ✓ should match /a/b/c/d/ with **/*?.md and {dot: true}
    ✓ should match /a/b/c/d/ with **/*?.md and {nonegate: true}
    ✓ should match . with **/*?.md
    ✓ should match . with **/*?.md and {dot: true}
    ✓ should match . with **/*?.md and {nonegate: true}
    ✓ should match ./ with **/*?.md
    ✓ should match ./ with **/*?.md and {dot: true}
    ✓ should match ./ with **/*?.md and {nonegate: true}
    ✓ should match .. with **/*?.md
    ✓ should match .. with **/*?.md and {dot: true}
    ✓ should match .. with **/*?.md and {nonegate: true}
    ✓ should match ../c with **/*?.md
    ✓ should match ../c with **/*?.md and {dot: true}
    ✓ should match ../c with **/*?.md and {nonegate: true}
    ✓ should match ../c with **/*?.md
    ✓ should match ../c with **/*?.md and {dot: true}
    ✓ should match ../c with **/*?.md and {nonegate: true}
    ✓ should match ./../c with **/*?.md
    ✓ should match ./../c with **/*?.md and {dot: true}
    ✓ should match ./../c with **/*?.md and {nonegate: true}
    ✓ should match ./a/../c with **/*?.md
    ✓ should match ./a/../c with **/*?.md and {dot: true}
    ✓ should match ./a/../c with **/*?.md and {nonegate: true}
    ✓ should match /.. with **/*?.md
    ✓ should match /.. with **/*?.md and {dot: true}
    ✓ should match /.. with **/*?.md and {nonegate: true}
    ✓ should match /../c with **/*?.md
    ✓ should match /../c with **/*?.md and {dot: true}
    ✓ should match /../c with **/*?.md and {nonegate: true}
    ✓ should match /../.c with **/*?.md
    ✓ should match /../.c with **/*?.md and {dot: true}
    ✓ should match /../.c with **/*?.md and {nonegate: true}
    ✓ should match /../.c/ with **/*?.md
    ✓ should match /../.c/ with **/*?.md and {dot: true}
    ✓ should match /../.c/ with **/*?.md and {nonegate: true}
    ✓ should match /a/../c with **/*?.md
    ✓ should match /a/../c with **/*?.md and {dot: true}
    ✓ should match /a/../c with **/*?.md and {nonegate: true}
    ✓ should match a/../c with **/*?.md
    ✓ should match a/../c with **/*?.md and {dot: true}
    ✓ should match a/../c with **/*?.md and {nonegate: true}
    ✓ should match ../.b/.c with **/*?.md
    ✓ should match ../.b/.c with **/*?.md and {dot: true}
    ✓ should match ../.b/.c with **/*?.md and {nonegate: true}
    ✓ should match ../b/.c with **/*?.md
    ✓ should match ../b/.c with **/*?.md and {dot: true}
    ✓ should match ../b/.c with **/*?.md and {nonegate: true}
    ✓ should match ./.b/.c with **/*?.md
    ✓ should match ./.b/.c with **/*?.md and {dot: true}
    ✓ should match ./.b/.c with **/*?.md and {nonegate: true}
    ✓ should match ./b/.c with **/*?.md
    ✓ should match ./b/.c with **/*?.md and {dot: true}
    ✓ should match ./b/.c with **/*?.md and {nonegate: true}
    ✓ should match .b with **/*?.md
    ✓ should match .b with **/*?.md and {dot: true}
    ✓ should match .b with **/*?.md and {nonegate: true}
    ✓ should match .b.c with **/*?.md
    ✓ should match .b.c with **/*?.md and {dot: true}
    ✓ should match .b.c with **/*?.md and {nonegate: true}
    ✓ should match .b.c/ with **/*?.md
    ✓ should match .b.c/ with **/*?.md and {dot: true}
    ✓ should match .b.c/ with **/*?.md and {nonegate: true}
    ✓ should match .b/ with **/*?.md
    ✓ should match .b/ with **/*?.md and {dot: true}
    ✓ should match .b/ with **/*?.md and {nonegate: true}
    ✓ should match .b/.c with **/*?.md
    ✓ should match .b/.c with **/*?.md and {dot: true}
    ✓ should match .b/.c with **/*?.md and {nonegate: true}
    ✓ should match .b/c with **/*?.md
    ✓ should match .b/c with **/*?.md and {dot: true}
    ✓ should match .b/c with **/*?.md and {nonegate: true}
    ✓ should match b/.c with **/*?.md
    ✓ should match b/.c with **/*?.md and {dot: true}
    ✓ should match b/.c with **/*?.md and {nonegate: true}
    ✓ should match b/.c/ with **/*?.md
    ✓ should match b/.c/ with **/*?.md and {dot: true}
    ✓ should match b/.c/ with **/*?.md and {nonegate: true}
    ✓ should match a/+b/c with **/*?.md
    ✓ should match a/+b/c with **/*?.md and {dot: true}
    ✓ should match a/+b/c with **/*?.md and {nonegate: true}
    ✓ should match +a/+b/c with **/*?.md
    ✓ should match +a/+b/c with **/*?.md and {dot: true}
    ✓ should match +a/+b/c with **/*?.md and {nonegate: true}
    ✓ should match a (foo) with **/*?.md
    ✓ should match a (foo) with **/*?.md and {dot: true}
    ✓ should match a (foo) with **/*?.md and {nonegate: true}
    ✓ should match a (foo)/(bar) with **/*?.md
    ✓ should match a (foo)/(bar) with **/*?.md and {dot: true}
    ✓ should match a (foo)/(bar) with **/*?.md and {nonegate: true}
    ✓ should match a/b/c (1) with **/*?.md
    ✓ should match a/b/c (1) with **/*?.md and {dot: true}
    ✓ should match a/b/c (1) with **/*?.md and {nonegate: true}
    ✓ should match a/b (2)/c (1) with **/*?.md
    ✓ should match a/b (2)/c (1) with **/*?.md and {dot: true}
    ✓ should match a/b (2)/c (1) with **/*?.md and {nonegate: true}
    ✓ should match a/b/c [def] with **/*?.md
    ✓ should match a/b/c [def] with **/*?.md and {dot: true}
    ✓ should match a/b/c [def] with **/*?.md and {nonegate: true}
    ✓ should match a with **/.?.md
    ✓ should match a with **/.?.md and {dot: true}
    ✓ should match a with **/.?.md and {nonegate: true}
    ✓ should match a.md with **/.?.md
    ✓ should match a.md with **/.?.md and {dot: true}
    ✓ should match a.md with **/.?.md and {nonegate: true}
    ✓ should match a.js with **/.?.md
    ✓ should match a.js with **/.?.md and {dot: true}
    ✓ should match a.js with **/.?.md and {nonegate: true}
    ✓ should match a/ with **/.?.md
    ✓ should match a/ with **/.?.md and {dot: true}
    ✓ should match a/ with **/.?.md and {nonegate: true}
    ✓ should match a/b with **/.?.md
    ✓ should match a/b with **/.?.md and {dot: true}
    ✓ should match a/b with **/.?.md and {nonegate: true}
    ✓ should match a/b/.c.md with **/.?.md
    ✓ should match a/b/.c.md with **/.?.md and {dot: true}
    ✓ should match a/b/.c.md with **/.?.md and {nonegate: true}
    ✓ should match a/b/c with **/.?.md
    ✓ should match a/b/c with **/.?.md and {dot: true}
    ✓ should match a/b/c with **/.?.md and {nonegate: true}
    ✓ should match a/b/c.md with **/.?.md
    ✓ should match a/b/c.md with **/.?.md and {dot: true}
    ✓ should match a/b/c.md with **/.?.md and {nonegate: true}
    ✓ should match a/b/c/ with **/.?.md
    ✓ should match a/b/c/ with **/.?.md and {dot: true}
    ✓ should match a/b/c/ with **/.?.md and {nonegate: true}
    ✓ should match a/b/c/d with **/.?.md
    ✓ should match a/b/c/d with **/.?.md and {dot: true}
    ✓ should match a/b/c/d with **/.?.md and {nonegate: true}
    ✓ should match a/b/c/d/ with **/.?.md
    ✓ should match a/b/c/d/ with **/.?.md and {dot: true}
    ✓ should match a/b/c/d/ with **/.?.md and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with **/.?.md
    ✓ should match a/b/c/d/e/f/z.js with **/.?.md and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with **/.?.md and {nonegate: true}
    ✓ should match a/b/c/z.js with **/.?.md
    ✓ should match a/b/c/z.js with **/.?.md and {dot: true}
    ✓ should match a/b/c/z.js with **/.?.md and {nonegate: true}
    ✓ should match a/bb with **/.?.md
    ✓ should match a/bb with **/.?.md and {dot: true}
    ✓ should match a/bb with **/.?.md and {nonegate: true}
    ✓ should match a/cb with **/.?.md
    ✓ should match a/cb with **/.?.md and {dot: true}
    ✓ should match a/cb with **/.?.md and {nonegate: true}
    ✓ should match abbbz with **/.?.md
    ✓ should match abbbz with **/.?.md and {dot: true}
    ✓ should match abbbz with **/.?.md and {nonegate: true}
    ✓ should match abc with **/.?.md
    ✓ should match abc with **/.?.md and {dot: true}
    ✓ should match abc with **/.?.md and {nonegate: true}
    ✓ should match abd with **/.?.md
    ✓ should match abd with **/.?.md and {dot: true}
    ✓ should match abd with **/.?.md and {nonegate: true}
    ✓ should match z.js with **/.?.md
    ✓ should match z.js with **/.?.md and {dot: true}
    ✓ should match z.js with **/.?.md and {nonegate: true}
    ✓ should match za.js with **/.?.md
    ✓ should match za.js with **/.?.md and {dot: true}
    ✓ should match za.js with **/.?.md and {nonegate: true}
    ✓ should match !a.js with **/.?.md
    ✓ should match !a.js with **/.?.md and {dot: true}
    ✓ should match !a.js with **/.?.md and {nonegate: true}
    ✓ should match !a/b with **/.?.md
    ✓ should match !a/b with **/.?.md and {dot: true}
    ✓ should match !a/b with **/.?.md and {nonegate: true}
    ✓ should match !a/b/ with **/.?.md
    ✓ should match !a/b/ with **/.?.md and {dot: true}
    ✓ should match !a/b/ with **/.?.md and {nonegate: true}
    ✓ should match !a/b/c with **/.?.md
    ✓ should match !a/b/c with **/.?.md and {dot: true}
    ✓ should match !a/b/c with **/.?.md and {nonegate: true}
    ✓ should match !a/b/c/ with **/.?.md
    ✓ should match !a/b/c/ with **/.?.md and {dot: true}
    ✓ should match !a/b/c/ with **/.?.md and {nonegate: true}
    ✓ should match !a/!b with **/.?.md
    ✓ should match !a/!b with **/.?.md and {dot: true}
    ✓ should match !a/!b with **/.?.md and {nonegate: true}
    ✓ should match !a/!b/c with **/.?.md
    ✓ should match !a/!b/c with **/.?.md and {dot: true}
    ✓ should match !a/!b/c with **/.?.md and {nonegate: true}
    ✓ should match !a/!b/c/d with **/.?.md
    ✓ should match !a/!b/c/d with **/.?.md and {dot: true}
    ✓ should match !a/!b/c/d with **/.?.md and {nonegate: true}
    ✓ should match !a/b/.c.md with **/.?.md
    ✓ should match !a/b/.c.md with **/.?.md and {dot: true}
    ✓ should match !a/b/.c.md with **/.?.md and {nonegate: true}
    ✓ should match /a/ with **/.?.md
    ✓ should match /a/ with **/.?.md and {dot: true}
    ✓ should match /a/ with **/.?.md and {nonegate: true}
    ✓ should match /a/b with **/.?.md
    ✓ should match /a/b with **/.?.md and {dot: true}
    ✓ should match /a/b with **/.?.md and {nonegate: true}
    ✓ should match /a/cb with **/.?.md
    ✓ should match /a/cb with **/.?.md and {dot: true}
    ✓ should match /a/cb with **/.?.md and {nonegate: true}
    ✓ should match /a/bb with **/.?.md
    ✓ should match /a/bb with **/.?.md and {dot: true}
    ✓ should match /a/bb with **/.?.md and {nonegate: true}
    ✓ should match /a/b/c with **/.?.md
    ✓ should match /a/b/c with **/.?.md and {dot: true}
    ✓ should match /a/b/c with **/.?.md and {nonegate: true}
    ✓ should match /a/b/c/ with **/.?.md
    ✓ should match /a/b/c/ with **/.?.md and {dot: true}
    ✓ should match /a/b/c/ with **/.?.md and {nonegate: true}
    ✓ should match /a/b/c/d with **/.?.md
    ✓ should match /a/b/c/d with **/.?.md and {dot: true}
    ✓ should match /a/b/c/d with **/.?.md and {nonegate: true}
    ✓ should match /a/b/c/d/ with **/.?.md
    ✓ should match /a/b/c/d/ with **/.?.md and {dot: true}
    ✓ should match /a/b/c/d/ with **/.?.md and {nonegate: true}
    ✓ should match . with **/.?.md
    ✓ should match . with **/.?.md and {dot: true}
    ✓ should match . with **/.?.md and {nonegate: true}
    ✓ should match ./ with **/.?.md
    ✓ should match ./ with **/.?.md and {dot: true}
    ✓ should match ./ with **/.?.md and {nonegate: true}
    ✓ should match .. with **/.?.md
    ✓ should match .. with **/.?.md and {dot: true}
    ✓ should match .. with **/.?.md and {nonegate: true}
    ✓ should match ../c with **/.?.md
    ✓ should match ../c with **/.?.md and {dot: true}
    ✓ should match ../c with **/.?.md and {nonegate: true}
    ✓ should match ../c with **/.?.md
    ✓ should match ../c with **/.?.md and {dot: true}
    ✓ should match ../c with **/.?.md and {nonegate: true}
    ✓ should match ./../c with **/.?.md
    ✓ should match ./../c with **/.?.md and {dot: true}
    ✓ should match ./../c with **/.?.md and {nonegate: true}
    ✓ should match ./a/../c with **/.?.md
    ✓ should match ./a/../c with **/.?.md and {dot: true}
    ✓ should match ./a/../c with **/.?.md and {nonegate: true}
    ✓ should match /.. with **/.?.md
    ✓ should match /.. with **/.?.md and {dot: true}
    ✓ should match /.. with **/.?.md and {nonegate: true}
    ✓ should match /../c with **/.?.md
    ✓ should match /../c with **/.?.md and {dot: true}
    ✓ should match /../c with **/.?.md and {nonegate: true}
    ✓ should match /../.c with **/.?.md
    ✓ should match /../.c with **/.?.md and {dot: true}
    ✓ should match /../.c with **/.?.md and {nonegate: true}
    ✓ should match /../.c/ with **/.?.md
    ✓ should match /../.c/ with **/.?.md and {dot: true}
    ✓ should match /../.c/ with **/.?.md and {nonegate: true}
    ✓ should match /a/../c with **/.?.md
    ✓ should match /a/../c with **/.?.md and {dot: true}
    ✓ should match /a/../c with **/.?.md and {nonegate: true}
    ✓ should match a/../c with **/.?.md
    ✓ should match a/../c with **/.?.md and {dot: true}
    ✓ should match a/../c with **/.?.md and {nonegate: true}
    ✓ should match ../.b/.c with **/.?.md
    ✓ should match ../.b/.c with **/.?.md and {dot: true}
    ✓ should match ../.b/.c with **/.?.md and {nonegate: true}
    ✓ should match ../b/.c with **/.?.md
    ✓ should match ../b/.c with **/.?.md and {dot: true}
    ✓ should match ../b/.c with **/.?.md and {nonegate: true}
    ✓ should match ./.b/.c with **/.?.md
    ✓ should match ./.b/.c with **/.?.md and {dot: true}
    ✓ should match ./.b/.c with **/.?.md and {nonegate: true}
    ✓ should match ./b/.c with **/.?.md
    ✓ should match ./b/.c with **/.?.md and {dot: true}
    ✓ should match ./b/.c with **/.?.md and {nonegate: true}
    ✓ should match .b with **/.?.md
    ✓ should match .b with **/.?.md and {dot: true}
    ✓ should match .b with **/.?.md and {nonegate: true}
    ✓ should match .b.c with **/.?.md
    ✓ should match .b.c with **/.?.md and {dot: true}
    ✓ should match .b.c with **/.?.md and {nonegate: true}
    ✓ should match .b.c/ with **/.?.md
    ✓ should match .b.c/ with **/.?.md and {dot: true}
    ✓ should match .b.c/ with **/.?.md and {nonegate: true}
    ✓ should match .b/ with **/.?.md
    ✓ should match .b/ with **/.?.md and {dot: true}
    ✓ should match .b/ with **/.?.md and {nonegate: true}
    ✓ should match .b/.c with **/.?.md
    ✓ should match .b/.c with **/.?.md and {dot: true}
    ✓ should match .b/.c with **/.?.md and {nonegate: true}
    ✓ should match .b/c with **/.?.md
    ✓ should match .b/c with **/.?.md and {dot: true}
    ✓ should match .b/c with **/.?.md and {nonegate: true}
    ✓ should match b/.c with **/.?.md
    ✓ should match b/.c with **/.?.md and {dot: true}
    ✓ should match b/.c with **/.?.md and {nonegate: true}
    ✓ should match b/.c/ with **/.?.md
    ✓ should match b/.c/ with **/.?.md and {dot: true}
    ✓ should match b/.c/ with **/.?.md and {nonegate: true}
    ✓ should match a/+b/c with **/.?.md
    ✓ should match a/+b/c with **/.?.md and {dot: true}
    ✓ should match a/+b/c with **/.?.md and {nonegate: true}
    ✓ should match +a/+b/c with **/.?.md
    ✓ should match +a/+b/c with **/.?.md and {dot: true}
    ✓ should match +a/+b/c with **/.?.md and {nonegate: true}
    ✓ should match a (foo) with **/.?.md
    ✓ should match a (foo) with **/.?.md and {dot: true}
    ✓ should match a (foo) with **/.?.md and {nonegate: true}
    ✓ should match a (foo)/(bar) with **/.?.md
    ✓ should match a (foo)/(bar) with **/.?.md and {dot: true}
    ✓ should match a (foo)/(bar) with **/.?.md and {nonegate: true}
    ✓ should match a/b/c (1) with **/.?.md
    ✓ should match a/b/c (1) with **/.?.md and {dot: true}
    ✓ should match a/b/c (1) with **/.?.md and {nonegate: true}
    ✓ should match a/b (2)/c (1) with **/.?.md
    ✓ should match a/b (2)/c (1) with **/.?.md and {dot: true}
    ✓ should match a/b (2)/c (1) with **/.?.md and {nonegate: true}
    ✓ should match a/b/c [def] with **/.?.md
    ✓ should match a/b/c [def] with **/.?.md and {dot: true}
    ✓ should match a/b/c [def] with **/.?.md and {nonegate: true}
    ✓ should match a with **/?.md
    ✓ should match a with **/?.md and {dot: true}
    ✓ should match a with **/?.md and {nonegate: true}
    ✓ should match a.md with **/?.md
    ✓ should match a.md with **/?.md and {dot: true}
    ✓ should match a.md with **/?.md and {nonegate: true}
    ✓ should match a.js with **/?.md
    ✓ should match a.js with **/?.md and {dot: true}
    ✓ should match a.js with **/?.md and {nonegate: true}
    ✓ should match a/ with **/?.md
    ✓ should match a/ with **/?.md and {dot: true}
    ✓ should match a/ with **/?.md and {nonegate: true}
    ✓ should match a/b with **/?.md
    ✓ should match a/b with **/?.md and {dot: true}
    ✓ should match a/b with **/?.md and {nonegate: true}
    ✓ should match a/b/.c.md with **/?.md
    ✓ should match a/b/.c.md with **/?.md and {dot: true}
    ✓ should match a/b/.c.md with **/?.md and {nonegate: true}
    ✓ should match a/b/c with **/?.md
    ✓ should match a/b/c with **/?.md and {dot: true}
    ✓ should match a/b/c with **/?.md and {nonegate: true}
    ✓ should match a/b/c.md with **/?.md
    ✓ should match a/b/c.md with **/?.md and {dot: true}
    ✓ should match a/b/c.md with **/?.md and {nonegate: true}
    ✓ should match a/b/c/ with **/?.md
    ✓ should match a/b/c/ with **/?.md and {dot: true}
    ✓ should match a/b/c/ with **/?.md and {nonegate: true}
    ✓ should match a/b/c/d with **/?.md
    ✓ should match a/b/c/d with **/?.md and {dot: true}
    ✓ should match a/b/c/d with **/?.md and {nonegate: true}
    ✓ should match a/b/c/d/ with **/?.md
    ✓ should match a/b/c/d/ with **/?.md and {dot: true}
    ✓ should match a/b/c/d/ with **/?.md and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with **/?.md
    ✓ should match a/b/c/d/e/f/z.js with **/?.md and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with **/?.md and {nonegate: true}
    ✓ should match a/b/c/z.js with **/?.md
    ✓ should match a/b/c/z.js with **/?.md and {dot: true}
    ✓ should match a/b/c/z.js with **/?.md and {nonegate: true}
    ✓ should match a/bb with **/?.md
    ✓ should match a/bb with **/?.md and {dot: true}
    ✓ should match a/bb with **/?.md and {nonegate: true}
    ✓ should match a/cb with **/?.md
    ✓ should match a/cb with **/?.md and {dot: true}
    ✓ should match a/cb with **/?.md and {nonegate: true}
    ✓ should match abbbz with **/?.md
    ✓ should match abbbz with **/?.md and {dot: true}
    ✓ should match abbbz with **/?.md and {nonegate: true}
    ✓ should match abc with **/?.md
    ✓ should match abc with **/?.md and {dot: true}
    ✓ should match abc with **/?.md and {nonegate: true}
    ✓ should match abd with **/?.md
    ✓ should match abd with **/?.md and {dot: true}
    ✓ should match abd with **/?.md and {nonegate: true}
    ✓ should match z.js with **/?.md
    ✓ should match z.js with **/?.md and {dot: true}
    ✓ should match z.js with **/?.md and {nonegate: true}
    ✓ should match za.js with **/?.md
    ✓ should match za.js with **/?.md and {dot: true}
    ✓ should match za.js with **/?.md and {nonegate: true}
    ✓ should match !a.js with **/?.md
    ✓ should match !a.js with **/?.md and {dot: true}
    ✓ should match !a.js with **/?.md and {nonegate: true}
    ✓ should match !a/b with **/?.md
    ✓ should match !a/b with **/?.md and {dot: true}
    ✓ should match !a/b with **/?.md and {nonegate: true}
    ✓ should match !a/b/ with **/?.md
    ✓ should match !a/b/ with **/?.md and {dot: true}
    ✓ should match !a/b/ with **/?.md and {nonegate: true}
    ✓ should match !a/b/c with **/?.md
    ✓ should match !a/b/c with **/?.md and {dot: true}
    ✓ should match !a/b/c with **/?.md and {nonegate: true}
    ✓ should match !a/b/c/ with **/?.md
    ✓ should match !a/b/c/ with **/?.md and {dot: true}
    ✓ should match !a/b/c/ with **/?.md and {nonegate: true}
    ✓ should match !a/!b with **/?.md
    ✓ should match !a/!b with **/?.md and {dot: true}
    ✓ should match !a/!b with **/?.md and {nonegate: true}
    ✓ should match !a/!b/c with **/?.md
    ✓ should match !a/!b/c with **/?.md and {dot: true}
    ✓ should match !a/!b/c with **/?.md and {nonegate: true}
    ✓ should match !a/!b/c/d with **/?.md
    ✓ should match !a/!b/c/d with **/?.md and {dot: true}
    ✓ should match !a/!b/c/d with **/?.md and {nonegate: true}
    ✓ should match !a/b/.c.md with **/?.md
    ✓ should match !a/b/.c.md with **/?.md and {dot: true}
    ✓ should match !a/b/.c.md with **/?.md and {nonegate: true}
    ✓ should match /a/ with **/?.md
    ✓ should match /a/ with **/?.md and {dot: true}
    ✓ should match /a/ with **/?.md and {nonegate: true}
    ✓ should match /a/b with **/?.md
    ✓ should match /a/b with **/?.md and {dot: true}
    ✓ should match /a/b with **/?.md and {nonegate: true}
    ✓ should match /a/cb with **/?.md
    ✓ should match /a/cb with **/?.md and {dot: true}
    ✓ should match /a/cb with **/?.md and {nonegate: true}
    ✓ should match /a/bb with **/?.md
    ✓ should match /a/bb with **/?.md and {dot: true}
    ✓ should match /a/bb with **/?.md and {nonegate: true}
    ✓ should match /a/b/c with **/?.md
    ✓ should match /a/b/c with **/?.md and {dot: true}
    ✓ should match /a/b/c with **/?.md and {nonegate: true}
    ✓ should match /a/b/c/ with **/?.md
    ✓ should match /a/b/c/ with **/?.md and {dot: true}
    ✓ should match /a/b/c/ with **/?.md and {nonegate: true}
    ✓ should match /a/b/c/d with **/?.md
    ✓ should match /a/b/c/d with **/?.md and {dot: true}
    ✓ should match /a/b/c/d with **/?.md and {nonegate: true}
    ✓ should match /a/b/c/d/ with **/?.md
    ✓ should match /a/b/c/d/ with **/?.md and {dot: true}
    ✓ should match /a/b/c/d/ with **/?.md and {nonegate: true}
    ✓ should match . with **/?.md
    ✓ should match . with **/?.md and {dot: true}
    ✓ should match . with **/?.md and {nonegate: true}
    ✓ should match ./ with **/?.md
    ✓ should match ./ with **/?.md and {dot: true}
    ✓ should match ./ with **/?.md and {nonegate: true}
    ✓ should match .. with **/?.md
    ✓ should match .. with **/?.md and {dot: true}
    ✓ should match .. with **/?.md and {nonegate: true}
    ✓ should match ../c with **/?.md
    ✓ should match ../c with **/?.md and {dot: true}
    ✓ should match ../c with **/?.md and {nonegate: true}
    ✓ should match ../c with **/?.md
    ✓ should match ../c with **/?.md and {dot: true}
    ✓ should match ../c with **/?.md and {nonegate: true}
    ✓ should match ./../c with **/?.md
    ✓ should match ./../c with **/?.md and {dot: true}
    ✓ should match ./../c with **/?.md and {nonegate: true}
    ✓ should match ./a/../c with **/?.md
    ✓ should match ./a/../c with **/?.md and {dot: true}
    ✓ should match ./a/../c with **/?.md and {nonegate: true}
    ✓ should match /.. with **/?.md
    ✓ should match /.. with **/?.md and {dot: true}
    ✓ should match /.. with **/?.md and {nonegate: true}
    ✓ should match /../c with **/?.md
    ✓ should match /../c with **/?.md and {dot: true}
    ✓ should match /../c with **/?.md and {nonegate: true}
    ✓ should match /../.c with **/?.md
    ✓ should match /../.c with **/?.md and {dot: true}
    ✓ should match /../.c with **/?.md and {nonegate: true}
    ✓ should match /../.c/ with **/?.md
    ✓ should match /../.c/ with **/?.md and {dot: true}
    ✓ should match /../.c/ with **/?.md and {nonegate: true}
    ✓ should match /a/../c with **/?.md
    ✓ should match /a/../c with **/?.md and {dot: true}
    ✓ should match /a/../c with **/?.md and {nonegate: true}
    ✓ should match a/../c with **/?.md
    ✓ should match a/../c with **/?.md and {dot: true}
    ✓ should match a/../c with **/?.md and {nonegate: true}
    ✓ should match ../.b/.c with **/?.md
    ✓ should match ../.b/.c with **/?.md and {dot: true}
    ✓ should match ../.b/.c with **/?.md and {nonegate: true}
    ✓ should match ../b/.c with **/?.md
    ✓ should match ../b/.c with **/?.md and {dot: true}
    ✓ should match ../b/.c with **/?.md and {nonegate: true}
    ✓ should match ./.b/.c with **/?.md
    ✓ should match ./.b/.c with **/?.md and {dot: true}
    ✓ should match ./.b/.c with **/?.md and {nonegate: true}
    ✓ should match ./b/.c with **/?.md
    ✓ should match ./b/.c with **/?.md and {dot: true}
    ✓ should match ./b/.c with **/?.md and {nonegate: true}
    ✓ should match .b with **/?.md
    ✓ should match .b with **/?.md and {dot: true}
    ✓ should match .b with **/?.md and {nonegate: true}
    ✓ should match .b.c with **/?.md
    ✓ should match .b.c with **/?.md and {dot: true}
    ✓ should match .b.c with **/?.md and {nonegate: true}
    ✓ should match .b.c/ with **/?.md
    ✓ should match .b.c/ with **/?.md and {dot: true}
    ✓ should match .b.c/ with **/?.md and {nonegate: true}
    ✓ should match .b/ with **/?.md
    ✓ should match .b/ with **/?.md and {dot: true}
    ✓ should match .b/ with **/?.md and {nonegate: true}
    ✓ should match .b/.c with **/?.md
    ✓ should match .b/.c with **/?.md and {dot: true}
    ✓ should match .b/.c with **/?.md and {nonegate: true}
    ✓ should match .b/c with **/?.md
    ✓ should match .b/c with **/?.md and {dot: true}
    ✓ should match .b/c with **/?.md and {nonegate: true}
    ✓ should match b/.c with **/?.md
    ✓ should match b/.c with **/?.md and {dot: true}
    ✓ should match b/.c with **/?.md and {nonegate: true}
    ✓ should match b/.c/ with **/?.md
    ✓ should match b/.c/ with **/?.md and {dot: true}
    ✓ should match b/.c/ with **/?.md and {nonegate: true}
    ✓ should match a/+b/c with **/?.md
    ✓ should match a/+b/c with **/?.md and {dot: true}
    ✓ should match a/+b/c with **/?.md and {nonegate: true}
    ✓ should match +a/+b/c with **/?.md
    ✓ should match +a/+b/c with **/?.md and {dot: true}
    ✓ should match +a/+b/c with **/?.md and {nonegate: true}
    ✓ should match a (foo) with **/?.md
    ✓ should match a (foo) with **/?.md and {dot: true}
    ✓ should match a (foo) with **/?.md and {nonegate: true}
    ✓ should match a (foo)/(bar) with **/?.md
    ✓ should match a (foo)/(bar) with **/?.md and {dot: true}
    ✓ should match a (foo)/(bar) with **/?.md and {nonegate: true}
    ✓ should match a/b/c (1) with **/?.md
    ✓ should match a/b/c (1) with **/?.md and {dot: true}
    ✓ should match a/b/c (1) with **/?.md and {nonegate: true}
    ✓ should match a/b (2)/c (1) with **/?.md
    ✓ should match a/b (2)/c (1) with **/?.md and {dot: true}
    ✓ should match a/b (2)/c (1) with **/?.md and {nonegate: true}
    ✓ should match a/b/c [def] with **/?.md
    ✓ should match a/b/c [def] with **/?.md and {dot: true}
    ✓ should match a/b/c [def] with **/?.md and {nonegate: true}
    ✓ should match a with **/z*.js
    ✓ should match a with **/z*.js and {dot: true}
    ✓ should match a with **/z*.js and {nonegate: true}
    ✓ should match a.md with **/z*.js
    ✓ should match a.md with **/z*.js and {dot: true}
    ✓ should match a.md with **/z*.js and {nonegate: true}
    ✓ should match a.js with **/z*.js
    ✓ should match a.js with **/z*.js and {dot: true}
    ✓ should match a.js with **/z*.js and {nonegate: true}
    ✓ should match a/ with **/z*.js
    ✓ should match a/ with **/z*.js and {dot: true}
    ✓ should match a/ with **/z*.js and {nonegate: true}
    ✓ should match a/b with **/z*.js
    ✓ should match a/b with **/z*.js and {dot: true}
    ✓ should match a/b with **/z*.js and {nonegate: true}
    ✓ should match a/b/.c.md with **/z*.js
    ✓ should match a/b/.c.md with **/z*.js and {dot: true}
    ✓ should match a/b/.c.md with **/z*.js and {nonegate: true}
    ✓ should match a/b/c with **/z*.js
    ✓ should match a/b/c with **/z*.js and {dot: true}
    ✓ should match a/b/c with **/z*.js and {nonegate: true}
    ✓ should match a/b/c.md with **/z*.js
    ✓ should match a/b/c.md with **/z*.js and {dot: true}
    ✓ should match a/b/c.md with **/z*.js and {nonegate: true}
    ✓ should match a/b/c/ with **/z*.js
    ✓ should match a/b/c/ with **/z*.js and {dot: true}
    ✓ should match a/b/c/ with **/z*.js and {nonegate: true}
    ✓ should match a/b/c/d with **/z*.js
    ✓ should match a/b/c/d with **/z*.js and {dot: true}
    ✓ should match a/b/c/d with **/z*.js and {nonegate: true}
    ✓ should match a/b/c/d/ with **/z*.js
    ✓ should match a/b/c/d/ with **/z*.js and {dot: true}
    ✓ should match a/b/c/d/ with **/z*.js and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with **/z*.js
    ✓ should match a/b/c/d/e/f/z.js with **/z*.js and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with **/z*.js and {nonegate: true}
    ✓ should match a/b/c/z.js with **/z*.js
    ✓ should match a/b/c/z.js with **/z*.js and {dot: true}
    ✓ should match a/b/c/z.js with **/z*.js and {nonegate: true}
    ✓ should match a/bb with **/z*.js
    ✓ should match a/bb with **/z*.js and {dot: true}
    ✓ should match a/bb with **/z*.js and {nonegate: true}
    ✓ should match a/cb with **/z*.js
    ✓ should match a/cb with **/z*.js and {dot: true}
    ✓ should match a/cb with **/z*.js and {nonegate: true}
    ✓ should match abbbz with **/z*.js
    ✓ should match abbbz with **/z*.js and {dot: true}
    ✓ should match abbbz with **/z*.js and {nonegate: true}
    ✓ should match abc with **/z*.js
    ✓ should match abc with **/z*.js and {dot: true}
    ✓ should match abc with **/z*.js and {nonegate: true}
    ✓ should match abd with **/z*.js
    ✓ should match abd with **/z*.js and {dot: true}
    ✓ should match abd with **/z*.js and {nonegate: true}
    ✓ should match z.js with **/z*.js
    ✓ should match z.js with **/z*.js and {dot: true}
    ✓ should match z.js with **/z*.js and {nonegate: true}
    ✓ should match za.js with **/z*.js
    ✓ should match za.js with **/z*.js and {dot: true}
    ✓ should match za.js with **/z*.js and {nonegate: true}
    ✓ should match !a.js with **/z*.js
    ✓ should match !a.js with **/z*.js and {dot: true}
    ✓ should match !a.js with **/z*.js and {nonegate: true}
    ✓ should match !a/b with **/z*.js
    ✓ should match !a/b with **/z*.js and {dot: true}
    ✓ should match !a/b with **/z*.js and {nonegate: true}
    ✓ should match !a/b/ with **/z*.js
    ✓ should match !a/b/ with **/z*.js and {dot: true}
    ✓ should match !a/b/ with **/z*.js and {nonegate: true}
    ✓ should match !a/b/c with **/z*.js
    ✓ should match !a/b/c with **/z*.js and {dot: true}
    ✓ should match !a/b/c with **/z*.js and {nonegate: true}
    ✓ should match !a/b/c/ with **/z*.js
    ✓ should match !a/b/c/ with **/z*.js and {dot: true}
    ✓ should match !a/b/c/ with **/z*.js and {nonegate: true}
    ✓ should match !a/!b with **/z*.js
    ✓ should match !a/!b with **/z*.js and {dot: true}
    ✓ should match !a/!b with **/z*.js and {nonegate: true}
    ✓ should match !a/!b/c with **/z*.js
    ✓ should match !a/!b/c with **/z*.js and {dot: true}
    ✓ should match !a/!b/c with **/z*.js and {nonegate: true}
    ✓ should match !a/!b/c/d with **/z*.js
    ✓ should match !a/!b/c/d with **/z*.js and {dot: true}
    ✓ should match !a/!b/c/d with **/z*.js and {nonegate: true}
    ✓ should match !a/b/.c.md with **/z*.js
    ✓ should match !a/b/.c.md with **/z*.js and {dot: true}
    ✓ should match !a/b/.c.md with **/z*.js and {nonegate: true}
    ✓ should match /a/ with **/z*.js
    ✓ should match /a/ with **/z*.js and {dot: true}
    ✓ should match /a/ with **/z*.js and {nonegate: true}
    ✓ should match /a/b with **/z*.js
    ✓ should match /a/b with **/z*.js and {dot: true}
    ✓ should match /a/b with **/z*.js and {nonegate: true}
    ✓ should match /a/cb with **/z*.js
    ✓ should match /a/cb with **/z*.js and {dot: true}
    ✓ should match /a/cb with **/z*.js and {nonegate: true}
    ✓ should match /a/bb with **/z*.js
    ✓ should match /a/bb with **/z*.js and {dot: true}
    ✓ should match /a/bb with **/z*.js and {nonegate: true}
    ✓ should match /a/b/c with **/z*.js
    ✓ should match /a/b/c with **/z*.js and {dot: true}
    ✓ should match /a/b/c with **/z*.js and {nonegate: true}
    ✓ should match /a/b/c/ with **/z*.js
    ✓ should match /a/b/c/ with **/z*.js and {dot: true}
    ✓ should match /a/b/c/ with **/z*.js and {nonegate: true}
    ✓ should match /a/b/c/d with **/z*.js
    ✓ should match /a/b/c/d with **/z*.js and {dot: true}
    ✓ should match /a/b/c/d with **/z*.js and {nonegate: true}
    ✓ should match /a/b/c/d/ with **/z*.js
    ✓ should match /a/b/c/d/ with **/z*.js and {dot: true}
    ✓ should match /a/b/c/d/ with **/z*.js and {nonegate: true}
    ✓ should match . with **/z*.js
    ✓ should match . with **/z*.js and {dot: true}
    ✓ should match . with **/z*.js and {nonegate: true}
    ✓ should match ./ with **/z*.js
    ✓ should match ./ with **/z*.js and {dot: true}
    ✓ should match ./ with **/z*.js and {nonegate: true}
    ✓ should match .. with **/z*.js
    ✓ should match .. with **/z*.js and {dot: true}
    ✓ should match .. with **/z*.js and {nonegate: true}
    ✓ should match ../c with **/z*.js
    ✓ should match ../c with **/z*.js and {dot: true}
    ✓ should match ../c with **/z*.js and {nonegate: true}
    ✓ should match ../c with **/z*.js
    ✓ should match ../c with **/z*.js and {dot: true}
    ✓ should match ../c with **/z*.js and {nonegate: true}
    ✓ should match ./../c with **/z*.js
    ✓ should match ./../c with **/z*.js and {dot: true}
    ✓ should match ./../c with **/z*.js and {nonegate: true}
    ✓ should match ./a/../c with **/z*.js
    ✓ should match ./a/../c with **/z*.js and {dot: true}
    ✓ should match ./a/../c with **/z*.js and {nonegate: true}
    ✓ should match /.. with **/z*.js
    ✓ should match /.. with **/z*.js and {dot: true}
    ✓ should match /.. with **/z*.js and {nonegate: true}
    ✓ should match /../c with **/z*.js
    ✓ should match /../c with **/z*.js and {dot: true}
    ✓ should match /../c with **/z*.js and {nonegate: true}
    ✓ should match /../.c with **/z*.js
    ✓ should match /../.c with **/z*.js and {dot: true}
    ✓ should match /../.c with **/z*.js and {nonegate: true}
    ✓ should match /../.c/ with **/z*.js
    ✓ should match /../.c/ with **/z*.js and {dot: true}
    ✓ should match /../.c/ with **/z*.js and {nonegate: true}
    ✓ should match /a/../c with **/z*.js
    ✓ should match /a/../c with **/z*.js and {dot: true}
    ✓ should match /a/../c with **/z*.js and {nonegate: true}
    ✓ should match a/../c with **/z*.js
    ✓ should match a/../c with **/z*.js and {dot: true}
    ✓ should match a/../c with **/z*.js and {nonegate: true}
    ✓ should match ../.b/.c with **/z*.js
    ✓ should match ../.b/.c with **/z*.js and {dot: true}
    ✓ should match ../.b/.c with **/z*.js and {nonegate: true}
    ✓ should match ../b/.c with **/z*.js
    ✓ should match ../b/.c with **/z*.js and {dot: true}
    ✓ should match ../b/.c with **/z*.js and {nonegate: true}
    ✓ should match ./.b/.c with **/z*.js
    ✓ should match ./.b/.c with **/z*.js and {dot: true}
    ✓ should match ./.b/.c with **/z*.js and {nonegate: true}
    ✓ should match ./b/.c with **/z*.js
    ✓ should match ./b/.c with **/z*.js and {dot: true}
    ✓ should match ./b/.c with **/z*.js and {nonegate: true}
    ✓ should match .b with **/z*.js
    ✓ should match .b with **/z*.js and {dot: true}
    ✓ should match .b with **/z*.js and {nonegate: true}
    ✓ should match .b.c with **/z*.js
    ✓ should match .b.c with **/z*.js and {dot: true}
    ✓ should match .b.c with **/z*.js and {nonegate: true}
    ✓ should match .b.c/ with **/z*.js
    ✓ should match .b.c/ with **/z*.js and {dot: true}
    ✓ should match .b.c/ with **/z*.js and {nonegate: true}
    ✓ should match .b/ with **/z*.js
    ✓ should match .b/ with **/z*.js and {dot: true}
    ✓ should match .b/ with **/z*.js and {nonegate: true}
    ✓ should match .b/.c with **/z*.js
    ✓ should match .b/.c with **/z*.js and {dot: true}
    ✓ should match .b/.c with **/z*.js and {nonegate: true}
    ✓ should match .b/c with **/z*.js
    ✓ should match .b/c with **/z*.js and {dot: true}
    ✓ should match .b/c with **/z*.js and {nonegate: true}
    ✓ should match b/.c with **/z*.js
    ✓ should match b/.c with **/z*.js and {dot: true}
    ✓ should match b/.c with **/z*.js and {nonegate: true}
    ✓ should match b/.c/ with **/z*.js
    ✓ should match b/.c/ with **/z*.js and {dot: true}
    ✓ should match b/.c/ with **/z*.js and {nonegate: true}
    ✓ should match a/+b/c with **/z*.js
    ✓ should match a/+b/c with **/z*.js and {dot: true}
    ✓ should match a/+b/c with **/z*.js and {nonegate: true}
    ✓ should match +a/+b/c with **/z*.js
    ✓ should match +a/+b/c with **/z*.js and {dot: true}
    ✓ should match +a/+b/c with **/z*.js and {nonegate: true}
    ✓ should match a (foo) with **/z*.js
    ✓ should match a (foo) with **/z*.js and {dot: true}
    ✓ should match a (foo) with **/z*.js and {nonegate: true}
    ✓ should match a (foo)/(bar) with **/z*.js
    ✓ should match a (foo)/(bar) with **/z*.js and {dot: true}
    ✓ should match a (foo)/(bar) with **/z*.js and {nonegate: true}
    ✓ should match a/b/c (1) with **/z*.js
    ✓ should match a/b/c (1) with **/z*.js and {dot: true}
    ✓ should match a/b/c (1) with **/z*.js and {nonegate: true}
    ✓ should match a/b (2)/c (1) with **/z*.js
    ✓ should match a/b (2)/c (1) with **/z*.js and {dot: true}
    ✓ should match a/b (2)/c (1) with **/z*.js and {nonegate: true}
    ✓ should match a/b/c [def] with **/z*.js
    ✓ should match a/b/c [def] with **/z*.js and {dot: true}
    ✓ should match a/b/c [def] with **/z*.js and {nonegate: true}
    ✓ should match a with *.js
    ✓ should match a with *.js and {dot: true}
    ✓ should match a with *.js and {nonegate: true}
    ✓ should match a.md with *.js
    ✓ should match a.md with *.js and {dot: true}
    ✓ should match a.md with *.js and {nonegate: true}
    ✓ should match a.js with *.js
    ✓ should match a.js with *.js and {dot: true}
    ✓ should match a.js with *.js and {nonegate: true}
    ✓ should match a/ with *.js
    ✓ should match a/ with *.js and {dot: true}
    ✓ should match a/ with *.js and {nonegate: true}
    ✓ should match a/b with *.js
    ✓ should match a/b with *.js and {dot: true}
    ✓ should match a/b with *.js and {nonegate: true}
    ✓ should match a/b/.c.md with *.js
    ✓ should match a/b/.c.md with *.js and {dot: true}
    ✓ should match a/b/.c.md with *.js and {nonegate: true}
    ✓ should match a/b/c with *.js
    ✓ should match a/b/c with *.js and {dot: true}
    ✓ should match a/b/c with *.js and {nonegate: true}
    ✓ should match a/b/c.md with *.js
    ✓ should match a/b/c.md with *.js and {dot: true}
    ✓ should match a/b/c.md with *.js and {nonegate: true}
    ✓ should match a/b/c/ with *.js
    ✓ should match a/b/c/ with *.js and {dot: true}
    ✓ should match a/b/c/ with *.js and {nonegate: true}
    ✓ should match a/b/c/d with *.js
    ✓ should match a/b/c/d with *.js and {dot: true}
    ✓ should match a/b/c/d with *.js and {nonegate: true}
    ✓ should match a/b/c/d/ with *.js
    ✓ should match a/b/c/d/ with *.js and {dot: true}
    ✓ should match a/b/c/d/ with *.js and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with *.js
    ✓ should match a/b/c/d/e/f/z.js with *.js and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with *.js and {nonegate: true}
    ✓ should match a/b/c/z.js with *.js
    ✓ should match a/b/c/z.js with *.js and {dot: true}
    ✓ should match a/b/c/z.js with *.js and {nonegate: true}
    ✓ should match a/bb with *.js
    ✓ should match a/bb with *.js and {dot: true}
    ✓ should match a/bb with *.js and {nonegate: true}
    ✓ should match a/cb with *.js
    ✓ should match a/cb with *.js and {dot: true}
    ✓ should match a/cb with *.js and {nonegate: true}
    ✓ should match abbbz with *.js
    ✓ should match abbbz with *.js and {dot: true}
    ✓ should match abbbz with *.js and {nonegate: true}
    ✓ should match abc with *.js
    ✓ should match abc with *.js and {dot: true}
    ✓ should match abc with *.js and {nonegate: true}
    ✓ should match abd with *.js
    ✓ should match abd with *.js and {dot: true}
    ✓ should match abd with *.js and {nonegate: true}
    ✓ should match z.js with *.js
    ✓ should match z.js with *.js and {dot: true}
    ✓ should match z.js with *.js and {nonegate: true}
    ✓ should match za.js with *.js
    ✓ should match za.js with *.js and {dot: true}
    ✓ should match za.js with *.js and {nonegate: true}
    ✓ should match !a.js with *.js
    ✓ should match !a.js with *.js and {dot: true}
    ✓ should match !a.js with *.js and {nonegate: true}
    ✓ should match !a/b with *.js
    ✓ should match !a/b with *.js and {dot: true}
    ✓ should match !a/b with *.js and {nonegate: true}
    ✓ should match !a/b/ with *.js
    ✓ should match !a/b/ with *.js and {dot: true}
    ✓ should match !a/b/ with *.js and {nonegate: true}
    ✓ should match !a/b/c with *.js
    ✓ should match !a/b/c with *.js and {dot: true}
    ✓ should match !a/b/c with *.js and {nonegate: true}
    ✓ should match !a/b/c/ with *.js
    ✓ should match !a/b/c/ with *.js and {dot: true}
    ✓ should match !a/b/c/ with *.js and {nonegate: true}
    ✓ should match !a/!b with *.js
    ✓ should match !a/!b with *.js and {dot: true}
    ✓ should match !a/!b with *.js and {nonegate: true}
    ✓ should match !a/!b/c with *.js
    ✓ should match !a/!b/c with *.js and {dot: true}
    ✓ should match !a/!b/c with *.js and {nonegate: true}
    ✓ should match !a/!b/c/d with *.js
    ✓ should match !a/!b/c/d with *.js and {dot: true}
    ✓ should match !a/!b/c/d with *.js and {nonegate: true}
    ✓ should match !a/b/.c.md with *.js
    ✓ should match !a/b/.c.md with *.js and {dot: true}
    ✓ should match !a/b/.c.md with *.js and {nonegate: true}
    ✓ should match /a/ with *.js
    ✓ should match /a/ with *.js and {dot: true}
    ✓ should match /a/ with *.js and {nonegate: true}
    ✓ should match /a/b with *.js
    ✓ should match /a/b with *.js and {dot: true}
    ✓ should match /a/b with *.js and {nonegate: true}
    ✓ should match /a/cb with *.js
    ✓ should match /a/cb with *.js and {dot: true}
    ✓ should match /a/cb with *.js and {nonegate: true}
    ✓ should match /a/bb with *.js
    ✓ should match /a/bb with *.js and {dot: true}
    ✓ should match /a/bb with *.js and {nonegate: true}
    ✓ should match /a/b/c with *.js
    ✓ should match /a/b/c with *.js and {dot: true}
    ✓ should match /a/b/c with *.js and {nonegate: true}
    ✓ should match /a/b/c/ with *.js
    ✓ should match /a/b/c/ with *.js and {dot: true}
    ✓ should match /a/b/c/ with *.js and {nonegate: true}
    ✓ should match /a/b/c/d with *.js
    ✓ should match /a/b/c/d with *.js and {dot: true}
    ✓ should match /a/b/c/d with *.js and {nonegate: true}
    ✓ should match /a/b/c/d/ with *.js
    ✓ should match /a/b/c/d/ with *.js and {dot: true}
    ✓ should match /a/b/c/d/ with *.js and {nonegate: true}
    ✓ should match . with *.js
    ✓ should match . with *.js and {dot: true}
    ✓ should match . with *.js and {nonegate: true}
    ✓ should match ./ with *.js
    ✓ should match ./ with *.js and {dot: true}
    ✓ should match ./ with *.js and {nonegate: true}
    ✓ should match .. with *.js
    ✓ should match .. with *.js and {dot: true}
    ✓ should match .. with *.js and {nonegate: true}
    ✓ should match ../c with *.js
    ✓ should match ../c with *.js and {dot: true}
    ✓ should match ../c with *.js and {nonegate: true}
    ✓ should match ../c with *.js
    ✓ should match ../c with *.js and {dot: true}
    ✓ should match ../c with *.js and {nonegate: true}
    ✓ should match ./../c with *.js
    ✓ should match ./../c with *.js and {dot: true}
    ✓ should match ./../c with *.js and {nonegate: true}
    ✓ should match ./a/../c with *.js
    ✓ should match ./a/../c with *.js and {dot: true}
    ✓ should match ./a/../c with *.js and {nonegate: true}
    ✓ should match /.. with *.js
    ✓ should match /.. with *.js and {dot: true}
    ✓ should match /.. with *.js and {nonegate: true}
    ✓ should match /../c with *.js
    ✓ should match /../c with *.js and {dot: true}
    ✓ should match /../c with *.js and {nonegate: true}
    ✓ should match /../.c with *.js
    ✓ should match /../.c with *.js and {dot: true}
    ✓ should match /../.c with *.js and {nonegate: true}
    ✓ should match /../.c/ with *.js
    ✓ should match /../.c/ with *.js and {dot: true}
    ✓ should match /../.c/ with *.js and {nonegate: true}
    ✓ should match /a/../c with *.js
    ✓ should match /a/../c with *.js and {dot: true}
    ✓ should match /a/../c with *.js and {nonegate: true}
    ✓ should match a/../c with *.js
    ✓ should match a/../c with *.js and {dot: true}
    ✓ should match a/../c with *.js and {nonegate: true}
    ✓ should match ../.b/.c with *.js
    ✓ should match ../.b/.c with *.js and {dot: true}
    ✓ should match ../.b/.c with *.js and {nonegate: true}
    ✓ should match ../b/.c with *.js
    ✓ should match ../b/.c with *.js and {dot: true}
    ✓ should match ../b/.c with *.js and {nonegate: true}
    ✓ should match ./.b/.c with *.js
    ✓ should match ./.b/.c with *.js and {dot: true}
    ✓ should match ./.b/.c with *.js and {nonegate: true}
    ✓ should match ./b/.c with *.js
    ✓ should match ./b/.c with *.js and {dot: true}
    ✓ should match ./b/.c with *.js and {nonegate: true}
    ✓ should match .b with *.js
    ✓ should match .b with *.js and {dot: true}
    ✓ should match .b with *.js and {nonegate: true}
    ✓ should match .b.c with *.js
    ✓ should match .b.c with *.js and {dot: true}
    ✓ should match .b.c with *.js and {nonegate: true}
    ✓ should match .b.c/ with *.js
    ✓ should match .b.c/ with *.js and {dot: true}
    ✓ should match .b.c/ with *.js and {nonegate: true}
    ✓ should match .b/ with *.js
    ✓ should match .b/ with *.js and {dot: true}
    ✓ should match .b/ with *.js and {nonegate: true}
    ✓ should match .b/.c with *.js
    ✓ should match .b/.c with *.js and {dot: true}
    ✓ should match .b/.c with *.js and {nonegate: true}
    ✓ should match .b/c with *.js
    ✓ should match .b/c with *.js and {dot: true}
    ✓ should match .b/c with *.js and {nonegate: true}
    ✓ should match b/.c with *.js
    ✓ should match b/.c with *.js and {dot: true}
    ✓ should match b/.c with *.js and {nonegate: true}
    ✓ should match b/.c/ with *.js
    ✓ should match b/.c/ with *.js and {dot: true}
    ✓ should match b/.c/ with *.js and {nonegate: true}
    ✓ should match a/+b/c with *.js
    ✓ should match a/+b/c with *.js and {dot: true}
    ✓ should match a/+b/c with *.js and {nonegate: true}
    ✓ should match +a/+b/c with *.js
    ✓ should match +a/+b/c with *.js and {dot: true}
    ✓ should match +a/+b/c with *.js and {nonegate: true}
    ✓ should match a (foo) with *.js
    ✓ should match a (foo) with *.js and {dot: true}
    ✓ should match a (foo) with *.js and {nonegate: true}
    ✓ should match a (foo)/(bar) with *.js
    ✓ should match a (foo)/(bar) with *.js and {dot: true}
    ✓ should match a (foo)/(bar) with *.js and {nonegate: true}
    ✓ should match a/b/c (1) with *.js
    ✓ should match a/b/c (1) with *.js and {dot: true}
    ✓ should match a/b/c (1) with *.js and {nonegate: true}
    ✓ should match a/b (2)/c (1) with *.js
    ✓ should match a/b (2)/c (1) with *.js and {dot: true}
    ✓ should match a/b (2)/c (1) with *.js and {nonegate: true}
    ✓ should match a/b/c [def] with *.js
    ✓ should match a/b/c [def] with *.js and {dot: true}
    ✓ should match a/b/c [def] with *.js and {nonegate: true}
    ✓ should match a with */
    ✓ should match a with */ and {dot: true}
    ✓ should match a with */ and {nonegate: true}
    ✓ should match a.md with */
    ✓ should match a.md with */ and {dot: true}
    ✓ should match a.md with */ and {nonegate: true}
    ✓ should match a.js with */
    ✓ should match a.js with */ and {dot: true}
    ✓ should match a.js with */ and {nonegate: true}
    ✓ should match a/ with */
    ✓ should match a/ with */ and {dot: true}
    ✓ should match a/ with */ and {nonegate: true}
    ✓ should match a/b with */
    ✓ should match a/b with */ and {dot: true}
    ✓ should match a/b with */ and {nonegate: true}
    ✓ should match a/b/.c.md with */
    ✓ should match a/b/.c.md with */ and {dot: true}
    ✓ should match a/b/.c.md with */ and {nonegate: true}
    ✓ should match a/b/c with */
    ✓ should match a/b/c with */ and {dot: true}
    ✓ should match a/b/c with */ and {nonegate: true}
    ✓ should match a/b/c.md with */
    ✓ should match a/b/c.md with */ and {dot: true}
    ✓ should match a/b/c.md with */ and {nonegate: true}
    ✓ should match a/b/c/ with */
    ✓ should match a/b/c/ with */ and {dot: true}
    ✓ should match a/b/c/ with */ and {nonegate: true}
    ✓ should match a/b/c/d with */
    ✓ should match a/b/c/d with */ and {dot: true}
    ✓ should match a/b/c/d with */ and {nonegate: true}
    ✓ should match a/b/c/d/ with */
    ✓ should match a/b/c/d/ with */ and {dot: true}
    ✓ should match a/b/c/d/ with */ and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with */
    ✓ should match a/b/c/d/e/f/z.js with */ and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with */ and {nonegate: true}
    ✓ should match a/b/c/z.js with */
    ✓ should match a/b/c/z.js with */ and {dot: true}
    ✓ should match a/b/c/z.js with */ and {nonegate: true}
    ✓ should match a/bb with */
    ✓ should match a/bb with */ and {dot: true}
    ✓ should match a/bb with */ and {nonegate: true}
    ✓ should match a/cb with */
    ✓ should match a/cb with */ and {dot: true}
    ✓ should match a/cb with */ and {nonegate: true}
    ✓ should match abbbz with */
    ✓ should match abbbz with */ and {dot: true}
    ✓ should match abbbz with */ and {nonegate: true}
    ✓ should match abc with */
    ✓ should match abc with */ and {dot: true}
    ✓ should match abc with */ and {nonegate: true}
    ✓ should match abd with */
    ✓ should match abd with */ and {dot: true}
    ✓ should match abd with */ and {nonegate: true}
    ✓ should match z.js with */
    ✓ should match z.js with */ and {dot: true}
    ✓ should match z.js with */ and {nonegate: true}
    ✓ should match za.js with */
    ✓ should match za.js with */ and {dot: true}
    ✓ should match za.js with */ and {nonegate: true}
    ✓ should match !a.js with */
    ✓ should match !a.js with */ and {dot: true}
    ✓ should match !a.js with */ and {nonegate: true}
    ✓ should match !a/b with */
    ✓ should match !a/b with */ and {dot: true}
    ✓ should match !a/b with */ and {nonegate: true}
    ✓ should match !a/b/ with */
    ✓ should match !a/b/ with */ and {dot: true}
    ✓ should match !a/b/ with */ and {nonegate: true}
    ✓ should match !a/b/c with */
    ✓ should match !a/b/c with */ and {dot: true}
    ✓ should match !a/b/c with */ and {nonegate: true}
    ✓ should match !a/b/c/ with */
    ✓ should match !a/b/c/ with */ and {dot: true}
    ✓ should match !a/b/c/ with */ and {nonegate: true}
    ✓ should match !a/!b with */
    ✓ should match !a/!b with */ and {dot: true}
    ✓ should match !a/!b with */ and {nonegate: true}
    ✓ should match !a/!b/c with */
    ✓ should match !a/!b/c with */ and {dot: true}
    ✓ should match !a/!b/c with */ and {nonegate: true}
    ✓ should match !a/!b/c/d with */
    ✓ should match !a/!b/c/d with */ and {dot: true}
    ✓ should match !a/!b/c/d with */ and {nonegate: true}
    ✓ should match !a/b/.c.md with */
    ✓ should match !a/b/.c.md with */ and {dot: true}
    ✓ should match !a/b/.c.md with */ and {nonegate: true}
    ✓ should match /a/ with */
    ✓ should match /a/ with */ and {dot: true}
    ✓ should match /a/ with */ and {nonegate: true}
    ✓ should match /a/b with */
    ✓ should match /a/b with */ and {dot: true}
    ✓ should match /a/b with */ and {nonegate: true}
    ✓ should match /a/cb with */
    ✓ should match /a/cb with */ and {dot: true}
    ✓ should match /a/cb with */ and {nonegate: true}
    ✓ should match /a/bb with */
    ✓ should match /a/bb with */ and {dot: true}
    ✓ should match /a/bb with */ and {nonegate: true}
    ✓ should match /a/b/c with */
    ✓ should match /a/b/c with */ and {dot: true}
    ✓ should match /a/b/c with */ and {nonegate: true}
    ✓ should match /a/b/c/ with */
    ✓ should match /a/b/c/ with */ and {dot: true}
    ✓ should match /a/b/c/ with */ and {nonegate: true}
    ✓ should match /a/b/c/d with */
    ✓ should match /a/b/c/d with */ and {dot: true}
    ✓ should match /a/b/c/d with */ and {nonegate: true}
    ✓ should match /a/b/c/d/ with */
    ✓ should match /a/b/c/d/ with */ and {dot: true}
    ✓ should match /a/b/c/d/ with */ and {nonegate: true}
    ✓ should match . with */
    ✓ should match . with */ and {dot: true}
    ✓ should match . with */ and {nonegate: true}
    ✓ should match ./ with */
    ✓ should match ./ with */ and {dot: true}
    ✓ should match ./ with */ and {nonegate: true}
    ✓ should match .. with */
    ✓ should match .. with */ and {dot: true}
    ✓ should match .. with */ and {nonegate: true}
    ✓ should match ../c with */
    ✓ should match ../c with */ and {dot: true}
    ✓ should match ../c with */ and {nonegate: true}
    ✓ should match ../c with */
    ✓ should match ../c with */ and {dot: true}
    ✓ should match ../c with */ and {nonegate: true}
    ✓ should match ./../c with */
    ✓ should match ./../c with */ and {dot: true}
    ✓ should match ./../c with */ and {nonegate: true}
    ✓ should match ./a/../c with */
    ✓ should match ./a/../c with */ and {dot: true}
    ✓ should match ./a/../c with */ and {nonegate: true}
    ✓ should match /.. with */
    ✓ should match /.. with */ and {dot: true}
    ✓ should match /.. with */ and {nonegate: true}
    ✓ should match /../c with */
    ✓ should match /../c with */ and {dot: true}
    ✓ should match /../c with */ and {nonegate: true}
    ✓ should match /../.c with */
    ✓ should match /../.c with */ and {dot: true}
    ✓ should match /../.c with */ and {nonegate: true}
    ✓ should match /../.c/ with */
    ✓ should match /../.c/ with */ and {dot: true}
    ✓ should match /../.c/ with */ and {nonegate: true}
    ✓ should match /a/../c with */
    ✓ should match /a/../c with */ and {dot: true}
    ✓ should match /a/../c with */ and {nonegate: true}
    ✓ should match a/../c with */
    ✓ should match a/../c with */ and {dot: true}
    ✓ should match a/../c with */ and {nonegate: true}
    ✓ should match ../.b/.c with */
    ✓ should match ../.b/.c with */ and {dot: true}
    ✓ should match ../.b/.c with */ and {nonegate: true}
    ✓ should match ../b/.c with */
    ✓ should match ../b/.c with */ and {dot: true}
    ✓ should match ../b/.c with */ and {nonegate: true}
    ✓ should match ./.b/.c with */
    ✓ should match ./.b/.c with */ and {dot: true}
    ✓ should match ./.b/.c with */ and {nonegate: true}
    ✓ should match ./b/.c with */
    ✓ should match ./b/.c with */ and {dot: true}
    ✓ should match ./b/.c with */ and {nonegate: true}
    ✓ should match .b with */
    ✓ should match .b with */ and {dot: true}
    ✓ should match .b with */ and {nonegate: true}
    ✓ should match .b.c with */
    ✓ should match .b.c with */ and {dot: true}
    ✓ should match .b.c with */ and {nonegate: true}
    ✓ should match .b.c/ with */
    ✓ should match .b.c/ with */ and {dot: true}
    ✓ should match .b.c/ with */ and {nonegate: true}
    ✓ should match .b/ with */
    ✓ should match .b/ with */ and {dot: true}
    ✓ should match .b/ with */ and {nonegate: true}
    ✓ should match .b/.c with */
    ✓ should match .b/.c with */ and {dot: true}
    ✓ should match .b/.c with */ and {nonegate: true}
    ✓ should match .b/c with */
    ✓ should match .b/c with */ and {dot: true}
    ✓ should match .b/c with */ and {nonegate: true}
    ✓ should match b/.c with */
    ✓ should match b/.c with */ and {dot: true}
    ✓ should match b/.c with */ and {nonegate: true}
    ✓ should match b/.c/ with */
    ✓ should match b/.c/ with */ and {dot: true}
    ✓ should match b/.c/ with */ and {nonegate: true}
    ✓ should match a/+b/c with */
    ✓ should match a/+b/c with */ and {dot: true}
    ✓ should match a/+b/c with */ and {nonegate: true}
    ✓ should match +a/+b/c with */
    ✓ should match +a/+b/c with */ and {dot: true}
    ✓ should match +a/+b/c with */ and {nonegate: true}
    ✓ should match a (foo) with */
    ✓ should match a (foo) with */ and {dot: true}
    ✓ should match a (foo) with */ and {nonegate: true}
    ✓ should match a (foo)/(bar) with */
    ✓ should match a (foo)/(bar) with */ and {dot: true}
    ✓ should match a (foo)/(bar) with */ and {nonegate: true}
    ✓ should match a/b/c (1) with */
    ✓ should match a/b/c (1) with */ and {dot: true}
    ✓ should match a/b/c (1) with */ and {nonegate: true}
    ✓ should match a/b (2)/c (1) with */
    ✓ should match a/b (2)/c (1) with */ and {dot: true}
    ✓ should match a/b (2)/c (1) with */ and {nonegate: true}
    ✓ should match a/b/c [def] with */
    ✓ should match a/b/c [def] with */ and {dot: true}
    ✓ should match a/b/c [def] with */ and {nonegate: true}
    ✓ should match a with */*
    ✓ should match a with */* and {dot: true}
    ✓ should match a with */* and {nonegate: true}
    ✓ should match a.md with */*
    ✓ should match a.md with */* and {dot: true}
    ✓ should match a.md with */* and {nonegate: true}
    ✓ should match a.js with */*
    ✓ should match a.js with */* and {dot: true}
    ✓ should match a.js with */* and {nonegate: true}
    ✓ should match a/ with */*
    ✓ should match a/ with */* and {dot: true}
    ✓ should match a/ with */* and {nonegate: true}
    ✓ should match a/b with */*
    ✓ should match a/b with */* and {dot: true}
    ✓ should match a/b with */* and {nonegate: true}
    ✓ should match a/b/.c.md with */*
    ✓ should match a/b/.c.md with */* and {dot: true}
    ✓ should match a/b/.c.md with */* and {nonegate: true}
    ✓ should match a/b/c with */*
    ✓ should match a/b/c with */* and {dot: true}
    ✓ should match a/b/c with */* and {nonegate: true}
    ✓ should match a/b/c.md with */*
    ✓ should match a/b/c.md with */* and {dot: true}
    ✓ should match a/b/c.md with */* and {nonegate: true}
    ✓ should match a/b/c/ with */*
    ✓ should match a/b/c/ with */* and {dot: true}
    ✓ should match a/b/c/ with */* and {nonegate: true}
    ✓ should match a/b/c/d with */*
    ✓ should match a/b/c/d with */* and {dot: true}
    ✓ should match a/b/c/d with */* and {nonegate: true}
    ✓ should match a/b/c/d/ with */*
    ✓ should match a/b/c/d/ with */* and {dot: true}
    ✓ should match a/b/c/d/ with */* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with */*
    ✓ should match a/b/c/d/e/f/z.js with */* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with */* and {nonegate: true}
    ✓ should match a/b/c/z.js with */*
    ✓ should match a/b/c/z.js with */* and {dot: true}
    ✓ should match a/b/c/z.js with */* and {nonegate: true}
    ✓ should match a/bb with */*
    ✓ should match a/bb with */* and {dot: true}
    ✓ should match a/bb with */* and {nonegate: true}
    ✓ should match a/cb with */*
    ✓ should match a/cb with */* and {dot: true}
    ✓ should match a/cb with */* and {nonegate: true}
    ✓ should match abbbz with */*
    ✓ should match abbbz with */* and {dot: true}
    ✓ should match abbbz with */* and {nonegate: true}
    ✓ should match abc with */*
    ✓ should match abc with */* and {dot: true}
    ✓ should match abc with */* and {nonegate: true}
    ✓ should match abd with */*
    ✓ should match abd with */* and {dot: true}
    ✓ should match abd with */* and {nonegate: true}
    ✓ should match z.js with */*
    ✓ should match z.js with */* and {dot: true}
    ✓ should match z.js with */* and {nonegate: true}
    ✓ should match za.js with */*
    ✓ should match za.js with */* and {dot: true}
    ✓ should match za.js with */* and {nonegate: true}
    ✓ should match !a.js with */*
    ✓ should match !a.js with */* and {dot: true}
    ✓ should match !a.js with */* and {nonegate: true}
    ✓ should match !a/b with */*
    ✓ should match !a/b with */* and {dot: true}
    ✓ should match !a/b with */* and {nonegate: true}
    ✓ should match !a/b/ with */*
    ✓ should match !a/b/ with */* and {dot: true}
    ✓ should match !a/b/ with */* and {nonegate: true}
    ✓ should match !a/b/c with */*
    ✓ should match !a/b/c with */* and {dot: true}
    ✓ should match !a/b/c with */* and {nonegate: true}
    ✓ should match !a/b/c/ with */*
    ✓ should match !a/b/c/ with */* and {dot: true}
    ✓ should match !a/b/c/ with */* and {nonegate: true}
    ✓ should match !a/!b with */*
    ✓ should match !a/!b with */* and {dot: true}
    ✓ should match !a/!b with */* and {nonegate: true}
    ✓ should match !a/!b/c with */*
    ✓ should match !a/!b/c with */* and {dot: true}
    ✓ should match !a/!b/c with */* and {nonegate: true}
    ✓ should match !a/!b/c/d with */*
    ✓ should match !a/!b/c/d with */* and {dot: true}
    ✓ should match !a/!b/c/d with */* and {nonegate: true}
    ✓ should match !a/b/.c.md with */*
    ✓ should match !a/b/.c.md with */* and {dot: true}
    ✓ should match !a/b/.c.md with */* and {nonegate: true}
    ✓ should match /a/ with */*
    ✓ should match /a/ with */* and {dot: true}
    ✓ should match /a/ with */* and {nonegate: true}
    ✓ should match /a/b with */*
    ✓ should match /a/b with */* and {dot: true}
    ✓ should match /a/b with */* and {nonegate: true}
    ✓ should match /a/cb with */*
    ✓ should match /a/cb with */* and {dot: true}
    ✓ should match /a/cb with */* and {nonegate: true}
    ✓ should match /a/bb with */*
    ✓ should match /a/bb with */* and {dot: true}
    ✓ should match /a/bb with */* and {nonegate: true}
    ✓ should match /a/b/c with */*
    ✓ should match /a/b/c with */* and {dot: true}
    ✓ should match /a/b/c with */* and {nonegate: true}
    ✓ should match /a/b/c/ with */*
    ✓ should match /a/b/c/ with */* and {dot: true}
    ✓ should match /a/b/c/ with */* and {nonegate: true}
    ✓ should match /a/b/c/d with */*
    ✓ should match /a/b/c/d with */* and {dot: true}
    ✓ should match /a/b/c/d with */* and {nonegate: true}
    ✓ should match /a/b/c/d/ with */*
    ✓ should match /a/b/c/d/ with */* and {dot: true}
    ✓ should match /a/b/c/d/ with */* and {nonegate: true}
    ✓ should match . with */*
    ✓ should match . with */* and {dot: true}
    ✓ should match . with */* and {nonegate: true}
    ✓ should match ./ with */*
    ✓ should match ./ with */* and {dot: true}
    ✓ should match ./ with */* and {nonegate: true}
    ✓ should match .. with */*
    ✓ should match .. with */* and {dot: true}
    ✓ should match .. with */* and {nonegate: true}
    ✓ should match ../c with */*
    ✓ should match ../c with */* and {dot: true}
    ✓ should match ../c with */* and {nonegate: true}
    ✓ should match ../c with */*
    ✓ should match ../c with */* and {dot: true}
    ✓ should match ../c with */* and {nonegate: true}
    ✓ should match ./../c with */*
    ✓ should match ./../c with */* and {dot: true}
    ✓ should match ./../c with */* and {nonegate: true}
    ✓ should match ./a/../c with */*
    ✓ should match ./a/../c with */* and {dot: true}
    ✓ should match ./a/../c with */* and {nonegate: true}
    ✓ should match /.. with */*
    ✓ should match /.. with */* and {dot: true}
    ✓ should match /.. with */* and {nonegate: true}
    ✓ should match /../c with */*
    ✓ should match /../c with */* and {dot: true}
    ✓ should match /../c with */* and {nonegate: true}
    ✓ should match /../.c with */*
    ✓ should match /../.c with */* and {dot: true}
    ✓ should match /../.c with */* and {nonegate: true}
    ✓ should match /../.c/ with */*
    ✓ should match /../.c/ with */* and {dot: true}
    ✓ should match /../.c/ with */* and {nonegate: true}
    ✓ should match /a/../c with */*
    ✓ should match /a/../c with */* and {dot: true}
    ✓ should match /a/../c with */* and {nonegate: true}
    ✓ should match a/../c with */*
    ✓ should match a/../c with */* and {dot: true}
    ✓ should match a/../c with */* and {nonegate: true}
    ✓ should match ../.b/.c with */*
    ✓ should match ../.b/.c with */* and {dot: true}
    ✓ should match ../.b/.c with */* and {nonegate: true}
    ✓ should match ../b/.c with */*
    ✓ should match ../b/.c with */* and {dot: true}
    ✓ should match ../b/.c with */* and {nonegate: true}
    ✓ should match ./.b/.c with */*
    ✓ should match ./.b/.c with */* and {dot: true}
    ✓ should match ./.b/.c with */* and {nonegate: true}
    ✓ should match ./b/.c with */*
    ✓ should match ./b/.c with */* and {dot: true}
    ✓ should match ./b/.c with */* and {nonegate: true}
    ✓ should match .b with */*
    ✓ should match .b with */* and {dot: true}
    ✓ should match .b with */* and {nonegate: true}
    ✓ should match .b.c with */*
    ✓ should match .b.c with */* and {dot: true}
    ✓ should match .b.c with */* and {nonegate: true}
    ✓ should match .b.c/ with */*
    ✓ should match .b.c/ with */* and {dot: true}
    ✓ should match .b.c/ with */* and {nonegate: true}
    ✓ should match .b/ with */*
    ✓ should match .b/ with */* and {dot: true}
    ✓ should match .b/ with */* and {nonegate: true}
    ✓ should match .b/.c with */*
    ✓ should match .b/.c with */* and {dot: true}
    ✓ should match .b/.c with */* and {nonegate: true}
    ✓ should match .b/c with */*
    ✓ should match .b/c with */* and {dot: true}
    ✓ should match .b/c with */* and {nonegate: true}
    ✓ should match b/.c with */*
    ✓ should match b/.c with */* and {dot: true}
    ✓ should match b/.c with */* and {nonegate: true}
    ✓ should match b/.c/ with */*
    ✓ should match b/.c/ with */* and {dot: true}
    ✓ should match b/.c/ with */* and {nonegate: true}
    ✓ should match a/+b/c with */*
    ✓ should match a/+b/c with */* and {dot: true}
    ✓ should match a/+b/c with */* and {nonegate: true}
    ✓ should match +a/+b/c with */*
    ✓ should match +a/+b/c with */* and {dot: true}
    ✓ should match +a/+b/c with */* and {nonegate: true}
    ✓ should match a (foo) with */*
    ✓ should match a (foo) with */* and {dot: true}
    ✓ should match a (foo) with */* and {nonegate: true}
    ✓ should match a (foo)/(bar) with */*
    ✓ should match a (foo)/(bar) with */* and {dot: true}
    ✓ should match a (foo)/(bar) with */* and {nonegate: true}
    ✓ should match a/b/c (1) with */*
    ✓ should match a/b/c (1) with */* and {dot: true}
    ✓ should match a/b/c (1) with */* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with */*
    ✓ should match a/b (2)/c (1) with */* and {dot: true}
    ✓ should match a/b (2)/c (1) with */* and {nonegate: true}
    ✓ should match a/b/c [def] with */*
    ✓ should match a/b/c [def] with */* and {dot: true}
    ✓ should match a/b/c [def] with */* and {nonegate: true}
    ✓ should match a with */*/*
    ✓ should match a with */*/* and {dot: true}
    ✓ should match a with */*/* and {nonegate: true}
    ✓ should match a.md with */*/*
    ✓ should match a.md with */*/* and {dot: true}
    ✓ should match a.md with */*/* and {nonegate: true}
    ✓ should match a.js with */*/*
    ✓ should match a.js with */*/* and {dot: true}
    ✓ should match a.js with */*/* and {nonegate: true}
    ✓ should match a/ with */*/*
    ✓ should match a/ with */*/* and {dot: true}
    ✓ should match a/ with */*/* and {nonegate: true}
    ✓ should match a/b with */*/*
    ✓ should match a/b with */*/* and {dot: true}
    ✓ should match a/b with */*/* and {nonegate: true}
    ✓ should match a/b/.c.md with */*/*
    ✓ should match a/b/.c.md with */*/* and {dot: true}
    ✓ should match a/b/.c.md with */*/* and {nonegate: true}
    ✓ should match a/b/c with */*/*
    ✓ should match a/b/c with */*/* and {dot: true}
    ✓ should match a/b/c with */*/* and {nonegate: true}
    ✓ should match a/b/c.md with */*/*
    ✓ should match a/b/c.md with */*/* and {dot: true}
    ✓ should match a/b/c.md with */*/* and {nonegate: true}
    ✓ should match a/b/c/ with */*/*
    ✓ should match a/b/c/ with */*/* and {dot: true}
    ✓ should match a/b/c/ with */*/* and {nonegate: true}
    ✓ should match a/b/c/d with */*/*
    ✓ should match a/b/c/d with */*/* and {dot: true}
    ✓ should match a/b/c/d with */*/* and {nonegate: true}
    ✓ should match a/b/c/d/ with */*/*
    ✓ should match a/b/c/d/ with */*/* and {dot: true}
    ✓ should match a/b/c/d/ with */*/* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with */*/*
    ✓ should match a/b/c/d/e/f/z.js with */*/* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with */*/* and {nonegate: true}
    ✓ should match a/b/c/z.js with */*/*
    ✓ should match a/b/c/z.js with */*/* and {dot: true}
    ✓ should match a/b/c/z.js with */*/* and {nonegate: true}
    ✓ should match a/bb with */*/*
    ✓ should match a/bb with */*/* and {dot: true}
    ✓ should match a/bb with */*/* and {nonegate: true}
    ✓ should match a/cb with */*/*
    ✓ should match a/cb with */*/* and {dot: true}
    ✓ should match a/cb with */*/* and {nonegate: true}
    ✓ should match abbbz with */*/*
    ✓ should match abbbz with */*/* and {dot: true}
    ✓ should match abbbz with */*/* and {nonegate: true}
    ✓ should match abc with */*/*
    ✓ should match abc with */*/* and {dot: true}
    ✓ should match abc with */*/* and {nonegate: true}
    ✓ should match abd with */*/*
    ✓ should match abd with */*/* and {dot: true}
    ✓ should match abd with */*/* and {nonegate: true}
    ✓ should match z.js with */*/*
    ✓ should match z.js with */*/* and {dot: true}
    ✓ should match z.js with */*/* and {nonegate: true}
    ✓ should match za.js with */*/*
    ✓ should match za.js with */*/* and {dot: true}
    ✓ should match za.js with */*/* and {nonegate: true}
    ✓ should match !a.js with */*/*
    ✓ should match !a.js with */*/* and {dot: true}
    ✓ should match !a.js with */*/* and {nonegate: true}
    ✓ should match !a/b with */*/*
    ✓ should match !a/b with */*/* and {dot: true}
    ✓ should match !a/b with */*/* and {nonegate: true}
    ✓ should match !a/b/ with */*/*
    ✓ should match !a/b/ with */*/* and {dot: true}
    ✓ should match !a/b/ with */*/* and {nonegate: true}
    ✓ should match !a/b/c with */*/*
    ✓ should match !a/b/c with */*/* and {dot: true}
    ✓ should match !a/b/c with */*/* and {nonegate: true}
    ✓ should match !a/b/c/ with */*/*
    ✓ should match !a/b/c/ with */*/* and {dot: true}
    ✓ should match !a/b/c/ with */*/* and {nonegate: true}
    ✓ should match !a/!b with */*/*
    ✓ should match !a/!b with */*/* and {dot: true}
    ✓ should match !a/!b with */*/* and {nonegate: true}
    ✓ should match !a/!b/c with */*/*
    ✓ should match !a/!b/c with */*/* and {dot: true}
    ✓ should match !a/!b/c with */*/* and {nonegate: true}
    ✓ should match !a/!b/c/d with */*/*
    ✓ should match !a/!b/c/d with */*/* and {dot: true}
    ✓ should match !a/!b/c/d with */*/* and {nonegate: true}
    ✓ should match !a/b/.c.md with */*/*
    ✓ should match !a/b/.c.md with */*/* and {dot: true}
    ✓ should match !a/b/.c.md with */*/* and {nonegate: true}
    ✓ should match /a/ with */*/*
    ✓ should match /a/ with */*/* and {dot: true}
    ✓ should match /a/ with */*/* and {nonegate: true}
    ✓ should match /a/b with */*/*
    ✓ should match /a/b with */*/* and {dot: true}
    ✓ should match /a/b with */*/* and {nonegate: true}
    ✓ should match /a/cb with */*/*
    ✓ should match /a/cb with */*/* and {dot: true}
    ✓ should match /a/cb with */*/* and {nonegate: true}
    ✓ should match /a/bb with */*/*
    ✓ should match /a/bb with */*/* and {dot: true}
    ✓ should match /a/bb with */*/* and {nonegate: true}
    ✓ should match /a/b/c with */*/*
    ✓ should match /a/b/c with */*/* and {dot: true}
    ✓ should match /a/b/c with */*/* and {nonegate: true}
    ✓ should match /a/b/c/ with */*/*
    ✓ should match /a/b/c/ with */*/* and {dot: true}
    ✓ should match /a/b/c/ with */*/* and {nonegate: true}
    ✓ should match /a/b/c/d with */*/*
    ✓ should match /a/b/c/d with */*/* and {dot: true}
    ✓ should match /a/b/c/d with */*/* and {nonegate: true}
    ✓ should match /a/b/c/d/ with */*/*
    ✓ should match /a/b/c/d/ with */*/* and {dot: true}
    ✓ should match /a/b/c/d/ with */*/* and {nonegate: true}
    ✓ should match . with */*/*
    ✓ should match . with */*/* and {dot: true}
    ✓ should match . with */*/* and {nonegate: true}
    ✓ should match ./ with */*/*
    ✓ should match ./ with */*/* and {dot: true}
    ✓ should match ./ with */*/* and {nonegate: true}
    ✓ should match .. with */*/*
    ✓ should match .. with */*/* and {dot: true}
    ✓ should match .. with */*/* and {nonegate: true}
    ✓ should match ../c with */*/*
    ✓ should match ../c with */*/* and {dot: true}
    ✓ should match ../c with */*/* and {nonegate: true}
    ✓ should match ../c with */*/*
    ✓ should match ../c with */*/* and {dot: true}
    ✓ should match ../c with */*/* and {nonegate: true}
    ✓ should match ./../c with */*/*
    ✓ should match ./../c with */*/* and {dot: true}
    ✓ should match ./../c with */*/* and {nonegate: true}
    ✓ should match ./a/../c with */*/*
    ✓ should match ./a/../c with */*/* and {dot: true}
    ✓ should match ./a/../c with */*/* and {nonegate: true}
    ✓ should match /.. with */*/*
    ✓ should match /.. with */*/* and {dot: true}
    ✓ should match /.. with */*/* and {nonegate: true}
    ✓ should match /../c with */*/*
    ✓ should match /../c with */*/* and {dot: true}
    ✓ should match /../c with */*/* and {nonegate: true}
    ✓ should match /../.c with */*/*
    ✓ should match /../.c with */*/* and {dot: true}
    ✓ should match /../.c with */*/* and {nonegate: true}
    ✓ should match /../.c/ with */*/*
    ✓ should match /../.c/ with */*/* and {dot: true}
    ✓ should match /../.c/ with */*/* and {nonegate: true}
    ✓ should match /a/../c with */*/*
    ✓ should match /a/../c with */*/* and {dot: true}
    ✓ should match /a/../c with */*/* and {nonegate: true}
    ✓ should match a/../c with */*/*
    ✓ should match a/../c with */*/* and {dot: true}
    ✓ should match a/../c with */*/* and {nonegate: true}
    ✓ should match ../.b/.c with */*/*
    ✓ should match ../.b/.c with */*/* and {dot: true}
    ✓ should match ../.b/.c with */*/* and {nonegate: true}
    ✓ should match ../b/.c with */*/*
    ✓ should match ../b/.c with */*/* and {dot: true}
    ✓ should match ../b/.c with */*/* and {nonegate: true}
    ✓ should match ./.b/.c with */*/*
    ✓ should match ./.b/.c with */*/* and {dot: true}
    ✓ should match ./.b/.c with */*/* and {nonegate: true}
    ✓ should match ./b/.c with */*/*
    ✓ should match ./b/.c with */*/* and {dot: true}
    ✓ should match ./b/.c with */*/* and {nonegate: true}
    ✓ should match .b with */*/*
    ✓ should match .b with */*/* and {dot: true}
    ✓ should match .b with */*/* and {nonegate: true}
    ✓ should match .b.c with */*/*
    ✓ should match .b.c with */*/* and {dot: true}
    ✓ should match .b.c with */*/* and {nonegate: true}
    ✓ should match .b.c/ with */*/*
    ✓ should match .b.c/ with */*/* and {dot: true}
    ✓ should match .b.c/ with */*/* and {nonegate: true}
    ✓ should match .b/ with */*/*
    ✓ should match .b/ with */*/* and {dot: true}
    ✓ should match .b/ with */*/* and {nonegate: true}
    ✓ should match .b/.c with */*/*
    ✓ should match .b/.c with */*/* and {dot: true}
    ✓ should match .b/.c with */*/* and {nonegate: true}
    ✓ should match .b/c with */*/*
    ✓ should match .b/c with */*/* and {dot: true}
    ✓ should match .b/c with */*/* and {nonegate: true}
    ✓ should match b/.c with */*/*
    ✓ should match b/.c with */*/* and {dot: true}
    ✓ should match b/.c with */*/* and {nonegate: true}
    ✓ should match b/.c/ with */*/*
    ✓ should match b/.c/ with */*/* and {dot: true}
    ✓ should match b/.c/ with */*/* and {nonegate: true}
    ✓ should match a/+b/c with */*/*
    ✓ should match a/+b/c with */*/* and {dot: true}
    ✓ should match a/+b/c with */*/* and {nonegate: true}
    ✓ should match +a/+b/c with */*/*
    ✓ should match +a/+b/c with */*/* and {dot: true}
    ✓ should match +a/+b/c with */*/* and {nonegate: true}
    ✓ should match a (foo) with */*/*
    ✓ should match a (foo) with */*/* and {dot: true}
    ✓ should match a (foo) with */*/* and {nonegate: true}
    ✓ should match a (foo)/(bar) with */*/*
    ✓ should match a (foo)/(bar) with */*/* and {dot: true}
    ✓ should match a (foo)/(bar) with */*/* and {nonegate: true}
    ✓ should match a/b/c (1) with */*/*
    ✓ should match a/b/c (1) with */*/* and {dot: true}
    ✓ should match a/b/c (1) with */*/* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with */*/*
    ✓ should match a/b (2)/c (1) with */*/* and {dot: true}
    ✓ should match a/b (2)/c (1) with */*/* and {nonegate: true}
    ✓ should match a/b/c [def] with */*/*
    ✓ should match a/b/c [def] with */*/* and {dot: true}
    ✓ should match a/b/c [def] with */*/* and {nonegate: true}
    ✓ should match a with */*/*/*
    ✓ should match a with */*/*/* and {dot: true}
    ✓ should match a with */*/*/* and {nonegate: true}
    ✓ should match a.md with */*/*/*
    ✓ should match a.md with */*/*/* and {dot: true}
    ✓ should match a.md with */*/*/* and {nonegate: true}
    ✓ should match a.js with */*/*/*
    ✓ should match a.js with */*/*/* and {dot: true}
    ✓ should match a.js with */*/*/* and {nonegate: true}
    ✓ should match a/ with */*/*/*
    ✓ should match a/ with */*/*/* and {dot: true}
    ✓ should match a/ with */*/*/* and {nonegate: true}
    ✓ should match a/b with */*/*/*
    ✓ should match a/b with */*/*/* and {dot: true}
    ✓ should match a/b with */*/*/* and {nonegate: true}
    ✓ should match a/b/.c.md with */*/*/*
    ✓ should match a/b/.c.md with */*/*/* and {dot: true}
    ✓ should match a/b/.c.md with */*/*/* and {nonegate: true}
    ✓ should match a/b/c with */*/*/*
    ✓ should match a/b/c with */*/*/* and {dot: true}
    ✓ should match a/b/c with */*/*/* and {nonegate: true}
    ✓ should match a/b/c.md with */*/*/*
    ✓ should match a/b/c.md with */*/*/* and {dot: true}
    ✓ should match a/b/c.md with */*/*/* and {nonegate: true}
    ✓ should match a/b/c/ with */*/*/*
    ✓ should match a/b/c/ with */*/*/* and {dot: true}
    ✓ should match a/b/c/ with */*/*/* and {nonegate: true}
    ✓ should match a/b/c/d with */*/*/*
    ✓ should match a/b/c/d with */*/*/* and {dot: true}
    ✓ should match a/b/c/d with */*/*/* and {nonegate: true}
    ✓ should match a/b/c/d/ with */*/*/*
    ✓ should match a/b/c/d/ with */*/*/* and {dot: true}
    ✓ should match a/b/c/d/ with */*/*/* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with */*/*/*
    ✓ should match a/b/c/d/e/f/z.js with */*/*/* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with */*/*/* and {nonegate: true}
    ✓ should match a/b/c/z.js with */*/*/*
    ✓ should match a/b/c/z.js with */*/*/* and {dot: true}
    ✓ should match a/b/c/z.js with */*/*/* and {nonegate: true}
    ✓ should match a/bb with */*/*/*
    ✓ should match a/bb with */*/*/* and {dot: true}
    ✓ should match a/bb with */*/*/* and {nonegate: true}
    ✓ should match a/cb with */*/*/*
    ✓ should match a/cb with */*/*/* and {dot: true}
    ✓ should match a/cb with */*/*/* and {nonegate: true}
    ✓ should match abbbz with */*/*/*
    ✓ should match abbbz with */*/*/* and {dot: true}
    ✓ should match abbbz with */*/*/* and {nonegate: true}
    ✓ should match abc with */*/*/*
    ✓ should match abc with */*/*/* and {dot: true}
    ✓ should match abc with */*/*/* and {nonegate: true}
    ✓ should match abd with */*/*/*
    ✓ should match abd with */*/*/* and {dot: true}
    ✓ should match abd with */*/*/* and {nonegate: true}
    ✓ should match z.js with */*/*/*
    ✓ should match z.js with */*/*/* and {dot: true}
    ✓ should match z.js with */*/*/* and {nonegate: true}
    ✓ should match za.js with */*/*/*
    ✓ should match za.js with */*/*/* and {dot: true}
    ✓ should match za.js with */*/*/* and {nonegate: true}
    ✓ should match !a.js with */*/*/*
    ✓ should match !a.js with */*/*/* and {dot: true}
    ✓ should match !a.js with */*/*/* and {nonegate: true}
    ✓ should match !a/b with */*/*/*
    ✓ should match !a/b with */*/*/* and {dot: true}
    ✓ should match !a/b with */*/*/* and {nonegate: true}
    ✓ should match !a/b/ with */*/*/*
    ✓ should match !a/b/ with */*/*/* and {dot: true}
    ✓ should match !a/b/ with */*/*/* and {nonegate: true}
    ✓ should match !a/b/c with */*/*/*
    ✓ should match !a/b/c with */*/*/* and {dot: true}
    ✓ should match !a/b/c with */*/*/* and {nonegate: true}
    ✓ should match !a/b/c/ with */*/*/*
    ✓ should match !a/b/c/ with */*/*/* and {dot: true}
    ✓ should match !a/b/c/ with */*/*/* and {nonegate: true}
    ✓ should match !a/!b with */*/*/*
    ✓ should match !a/!b with */*/*/* and {dot: true}
    ✓ should match !a/!b with */*/*/* and {nonegate: true}
    ✓ should match !a/!b/c with */*/*/*
    ✓ should match !a/!b/c with */*/*/* and {dot: true}
    ✓ should match !a/!b/c with */*/*/* and {nonegate: true}
    ✓ should match !a/!b/c/d with */*/*/*
    ✓ should match !a/!b/c/d with */*/*/* and {dot: true}
    ✓ should match !a/!b/c/d with */*/*/* and {nonegate: true}
    ✓ should match !a/b/.c.md with */*/*/*
    ✓ should match !a/b/.c.md with */*/*/* and {dot: true}
    ✓ should match !a/b/.c.md with */*/*/* and {nonegate: true}
    ✓ should match /a/ with */*/*/*
    ✓ should match /a/ with */*/*/* and {dot: true}
    ✓ should match /a/ with */*/*/* and {nonegate: true}
    ✓ should match /a/b with */*/*/*
    ✓ should match /a/b with */*/*/* and {dot: true}
    ✓ should match /a/b with */*/*/* and {nonegate: true}
    ✓ should match /a/cb with */*/*/*
    ✓ should match /a/cb with */*/*/* and {dot: true}
    ✓ should match /a/cb with */*/*/* and {nonegate: true}
    ✓ should match /a/bb with */*/*/*
    ✓ should match /a/bb with */*/*/* and {dot: true}
    ✓ should match /a/bb with */*/*/* and {nonegate: true}
    ✓ should match /a/b/c with */*/*/*
    ✓ should match /a/b/c with */*/*/* and {dot: true}
    ✓ should match /a/b/c with */*/*/* and {nonegate: true}
    ✓ should match /a/b/c/ with */*/*/*
    ✓ should match /a/b/c/ with */*/*/* and {dot: true}
    ✓ should match /a/b/c/ with */*/*/* and {nonegate: true}
    ✓ should match /a/b/c/d with */*/*/*
    ✓ should match /a/b/c/d with */*/*/* and {dot: true}
    ✓ should match /a/b/c/d with */*/*/* and {nonegate: true}
    ✓ should match /a/b/c/d/ with */*/*/*
    ✓ should match /a/b/c/d/ with */*/*/* and {dot: true}
    ✓ should match /a/b/c/d/ with */*/*/* and {nonegate: true}
    ✓ should match . with */*/*/*
    ✓ should match . with */*/*/* and {dot: true}
    ✓ should match . with */*/*/* and {nonegate: true}
    ✓ should match ./ with */*/*/*
    ✓ should match ./ with */*/*/* and {dot: true}
    ✓ should match ./ with */*/*/* and {nonegate: true}
    ✓ should match .. with */*/*/*
    ✓ should match .. with */*/*/* and {dot: true}
    ✓ should match .. with */*/*/* and {nonegate: true}
    ✓ should match ../c with */*/*/*
    ✓ should match ../c with */*/*/* and {dot: true}
    ✓ should match ../c with */*/*/* and {nonegate: true}
    ✓ should match ../c with */*/*/*
    ✓ should match ../c with */*/*/* and {dot: true}
    ✓ should match ../c with */*/*/* and {nonegate: true}
    ✓ should match ./../c with */*/*/*
    ✓ should match ./../c with */*/*/* and {dot: true}
    ✓ should match ./../c with */*/*/* and {nonegate: true}
    ✓ should match ./a/../c with */*/*/*
    ✓ should match ./a/../c with */*/*/* and {dot: true}
    ✓ should match ./a/../c with */*/*/* and {nonegate: true}
    ✓ should match /.. with */*/*/*
    ✓ should match /.. with */*/*/* and {dot: true}
    ✓ should match /.. with */*/*/* and {nonegate: true}
    ✓ should match /../c with */*/*/*
    ✓ should match /../c with */*/*/* and {dot: true}
    ✓ should match /../c with */*/*/* and {nonegate: true}
    ✓ should match /../.c with */*/*/*
    ✓ should match /../.c with */*/*/* and {dot: true}
    ✓ should match /../.c with */*/*/* and {nonegate: true}
    ✓ should match /../.c/ with */*/*/*
    ✓ should match /../.c/ with */*/*/* and {dot: true}
    ✓ should match /../.c/ with */*/*/* and {nonegate: true}
    ✓ should match /a/../c with */*/*/*
    ✓ should match /a/../c with */*/*/* and {dot: true}
    ✓ should match /a/../c with */*/*/* and {nonegate: true}
    ✓ should match a/../c with */*/*/*
    ✓ should match a/../c with */*/*/* and {dot: true}
    ✓ should match a/../c with */*/*/* and {nonegate: true}
    ✓ should match ../.b/.c with */*/*/*
    ✓ should match ../.b/.c with */*/*/* and {dot: true}
    ✓ should match ../.b/.c with */*/*/* and {nonegate: true}
    ✓ should match ../b/.c with */*/*/*
    ✓ should match ../b/.c with */*/*/* and {dot: true}
    ✓ should match ../b/.c with */*/*/* and {nonegate: true}
    ✓ should match ./.b/.c with */*/*/*
    ✓ should match ./.b/.c with */*/*/* and {dot: true}
    ✓ should match ./.b/.c with */*/*/* and {nonegate: true}
    ✓ should match ./b/.c with */*/*/*
    ✓ should match ./b/.c with */*/*/* and {dot: true}
    ✓ should match ./b/.c with */*/*/* and {nonegate: true}
    ✓ should match .b with */*/*/*
    ✓ should match .b with */*/*/* and {dot: true}
    ✓ should match .b with */*/*/* and {nonegate: true}
    ✓ should match .b.c with */*/*/*
    ✓ should match .b.c with */*/*/* and {dot: true}
    ✓ should match .b.c with */*/*/* and {nonegate: true}
    ✓ should match .b.c/ with */*/*/*
    ✓ should match .b.c/ with */*/*/* and {dot: true}
    ✓ should match .b.c/ with */*/*/* and {nonegate: true}
    ✓ should match .b/ with */*/*/*
    ✓ should match .b/ with */*/*/* and {dot: true}
    ✓ should match .b/ with */*/*/* and {nonegate: true}
    ✓ should match .b/.c with */*/*/*
    ✓ should match .b/.c with */*/*/* and {dot: true}
    ✓ should match .b/.c with */*/*/* and {nonegate: true}
    ✓ should match .b/c with */*/*/*
    ✓ should match .b/c with */*/*/* and {dot: true}
    ✓ should match .b/c with */*/*/* and {nonegate: true}
    ✓ should match b/.c with */*/*/*
    ✓ should match b/.c with */*/*/* and {dot: true}
    ✓ should match b/.c with */*/*/* and {nonegate: true}
    ✓ should match b/.c/ with */*/*/*
    ✓ should match b/.c/ with */*/*/* and {dot: true}
    ✓ should match b/.c/ with */*/*/* and {nonegate: true}
    ✓ should match a/+b/c with */*/*/*
    ✓ should match a/+b/c with */*/*/* and {dot: true}
    ✓ should match a/+b/c with */*/*/* and {nonegate: true}
    ✓ should match +a/+b/c with */*/*/*
    ✓ should match +a/+b/c with */*/*/* and {dot: true}
    ✓ should match +a/+b/c with */*/*/* and {nonegate: true}
    ✓ should match a (foo) with */*/*/*
    ✓ should match a (foo) with */*/*/* and {dot: true}
    ✓ should match a (foo) with */*/*/* and {nonegate: true}
    ✓ should match a (foo)/(bar) with */*/*/*
    ✓ should match a (foo)/(bar) with */*/*/* and {dot: true}
    ✓ should match a (foo)/(bar) with */*/*/* and {nonegate: true}
    ✓ should match a/b/c (1) with */*/*/*
    ✓ should match a/b/c (1) with */*/*/* and {dot: true}
    ✓ should match a/b/c (1) with */*/*/* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with */*/*/*
    ✓ should match a/b (2)/c (1) with */*/*/* and {dot: true}
    ✓ should match a/b (2)/c (1) with */*/*/* and {nonegate: true}
    ✓ should match a/b/c [def] with */*/*/*
    ✓ should match a/b/c [def] with */*/*/* and {dot: true}
    ✓ should match a/b/c [def] with */*/*/* and {nonegate: true}
    ✓ should match a with /*
    ✓ should match a with /* and {dot: true}
    ✓ should match a with /* and {nonegate: true}
    ✓ should match a.md with /*
    ✓ should match a.md with /* and {dot: true}
    ✓ should match a.md with /* and {nonegate: true}
    ✓ should match a.js with /*
    ✓ should match a.js with /* and {dot: true}
    ✓ should match a.js with /* and {nonegate: true}
    ✓ should match a/ with /*
    ✓ should match a/ with /* and {dot: true}
    ✓ should match a/ with /* and {nonegate: true}
    ✓ should match a/b with /*
    ✓ should match a/b with /* and {dot: true}
    ✓ should match a/b with /* and {nonegate: true}
    ✓ should match a/b/.c.md with /*
    ✓ should match a/b/.c.md with /* and {dot: true}
    ✓ should match a/b/.c.md with /* and {nonegate: true}
    ✓ should match a/b/c with /*
    ✓ should match a/b/c with /* and {dot: true}
    ✓ should match a/b/c with /* and {nonegate: true}
    ✓ should match a/b/c.md with /*
    ✓ should match a/b/c.md with /* and {dot: true}
    ✓ should match a/b/c.md with /* and {nonegate: true}
    ✓ should match a/b/c/ with /*
    ✓ should match a/b/c/ with /* and {dot: true}
    ✓ should match a/b/c/ with /* and {nonegate: true}
    ✓ should match a/b/c/d with /*
    ✓ should match a/b/c/d with /* and {dot: true}
    ✓ should match a/b/c/d with /* and {nonegate: true}
    ✓ should match a/b/c/d/ with /*
    ✓ should match a/b/c/d/ with /* and {dot: true}
    ✓ should match a/b/c/d/ with /* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with /*
    ✓ should match a/b/c/d/e/f/z.js with /* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with /* and {nonegate: true}
    ✓ should match a/b/c/z.js with /*
    ✓ should match a/b/c/z.js with /* and {dot: true}
    ✓ should match a/b/c/z.js with /* and {nonegate: true}
    ✓ should match a/bb with /*
    ✓ should match a/bb with /* and {dot: true}
    ✓ should match a/bb with /* and {nonegate: true}
    ✓ should match a/cb with /*
    ✓ should match a/cb with /* and {dot: true}
    ✓ should match a/cb with /* and {nonegate: true}
    ✓ should match abbbz with /*
    ✓ should match abbbz with /* and {dot: true}
    ✓ should match abbbz with /* and {nonegate: true}
    ✓ should match abc with /*
    ✓ should match abc with /* and {dot: true}
    ✓ should match abc with /* and {nonegate: true}
    ✓ should match abd with /*
    ✓ should match abd with /* and {dot: true}
    ✓ should match abd with /* and {nonegate: true}
    ✓ should match z.js with /*
    ✓ should match z.js with /* and {dot: true}
    ✓ should match z.js with /* and {nonegate: true}
    ✓ should match za.js with /*
    ✓ should match za.js with /* and {dot: true}
    ✓ should match za.js with /* and {nonegate: true}
    ✓ should match !a.js with /*
    ✓ should match !a.js with /* and {dot: true}
    ✓ should match !a.js with /* and {nonegate: true}
    ✓ should match !a/b with /*
    ✓ should match !a/b with /* and {dot: true}
    ✓ should match !a/b with /* and {nonegate: true}
    ✓ should match !a/b/ with /*
    ✓ should match !a/b/ with /* and {dot: true}
    ✓ should match !a/b/ with /* and {nonegate: true}
    ✓ should match !a/b/c with /*
    ✓ should match !a/b/c with /* and {dot: true}
    ✓ should match !a/b/c with /* and {nonegate: true}
    ✓ should match !a/b/c/ with /*
    ✓ should match !a/b/c/ with /* and {dot: true}
    ✓ should match !a/b/c/ with /* and {nonegate: true}
    ✓ should match !a/!b with /*
    ✓ should match !a/!b with /* and {dot: true}
    ✓ should match !a/!b with /* and {nonegate: true}
    ✓ should match !a/!b/c with /*
    ✓ should match !a/!b/c with /* and {dot: true}
    ✓ should match !a/!b/c with /* and {nonegate: true}
    ✓ should match !a/!b/c/d with /*
    ✓ should match !a/!b/c/d with /* and {dot: true}
    ✓ should match !a/!b/c/d with /* and {nonegate: true}
    ✓ should match !a/b/.c.md with /*
    ✓ should match !a/b/.c.md with /* and {dot: true}
    ✓ should match !a/b/.c.md with /* and {nonegate: true}
    ✓ should match /a/ with /*
    ✓ should match /a/ with /* and {dot: true}
    ✓ should match /a/ with /* and {nonegate: true}
    ✓ should match /a/b with /*
    ✓ should match /a/b with /* and {dot: true}
    ✓ should match /a/b with /* and {nonegate: true}
    ✓ should match /a/cb with /*
    ✓ should match /a/cb with /* and {dot: true}
    ✓ should match /a/cb with /* and {nonegate: true}
    ✓ should match /a/bb with /*
    ✓ should match /a/bb with /* and {dot: true}
    ✓ should match /a/bb with /* and {nonegate: true}
    ✓ should match /a/b/c with /*
    ✓ should match /a/b/c with /* and {dot: true}
    ✓ should match /a/b/c with /* and {nonegate: true}
    ✓ should match /a/b/c/ with /*
    ✓ should match /a/b/c/ with /* and {dot: true}
    ✓ should match /a/b/c/ with /* and {nonegate: true}
    ✓ should match /a/b/c/d with /*
    ✓ should match /a/b/c/d with /* and {dot: true}
    ✓ should match /a/b/c/d with /* and {nonegate: true}
    ✓ should match /a/b/c/d/ with /*
    ✓ should match /a/b/c/d/ with /* and {dot: true}
    ✓ should match /a/b/c/d/ with /* and {nonegate: true}
    ✓ should match . with /*
    ✓ should match . with /* and {dot: true}
    ✓ should match . with /* and {nonegate: true}
    ✓ should match ./ with /*
    ✓ should match ./ with /* and {dot: true}
    ✓ should match ./ with /* and {nonegate: true}
    ✓ should match .. with /*
    ✓ should match .. with /* and {dot: true}
    ✓ should match .. with /* and {nonegate: true}
    ✓ should match ../c with /*
    ✓ should match ../c with /* and {dot: true}
    ✓ should match ../c with /* and {nonegate: true}
    ✓ should match ../c with /*
    ✓ should match ../c with /* and {dot: true}
    ✓ should match ../c with /* and {nonegate: true}
    ✓ should match ./../c with /*
    ✓ should match ./../c with /* and {dot: true}
    ✓ should match ./../c with /* and {nonegate: true}
    ✓ should match ./a/../c with /*
    ✓ should match ./a/../c with /* and {dot: true}
    ✓ should match ./a/../c with /* and {nonegate: true}
    ✓ should match /.. with /*
    ✓ should match /.. with /* and {dot: true}
    ✓ should match /.. with /* and {nonegate: true}
    ✓ should match /../c with /*
    ✓ should match /../c with /* and {dot: true}
    ✓ should match /../c with /* and {nonegate: true}
    ✓ should match /../.c with /*
    ✓ should match /../.c with /* and {dot: true}
    ✓ should match /../.c with /* and {nonegate: true}
    ✓ should match /../.c/ with /*
    ✓ should match /../.c/ with /* and {dot: true}
    ✓ should match /../.c/ with /* and {nonegate: true}
    ✓ should match /a/../c with /*
    ✓ should match /a/../c with /* and {dot: true}
    ✓ should match /a/../c with /* and {nonegate: true}
    ✓ should match a/../c with /*
    ✓ should match a/../c with /* and {dot: true}
    ✓ should match a/../c with /* and {nonegate: true}
    ✓ should match ../.b/.c with /*
    ✓ should match ../.b/.c with /* and {dot: true}
    ✓ should match ../.b/.c with /* and {nonegate: true}
    ✓ should match ../b/.c with /*
    ✓ should match ../b/.c with /* and {dot: true}
    ✓ should match ../b/.c with /* and {nonegate: true}
    ✓ should match ./.b/.c with /*
    ✓ should match ./.b/.c with /* and {dot: true}
    ✓ should match ./.b/.c with /* and {nonegate: true}
    ✓ should match ./b/.c with /*
    ✓ should match ./b/.c with /* and {dot: true}
    ✓ should match ./b/.c with /* and {nonegate: true}
    ✓ should match .b with /*
    ✓ should match .b with /* and {dot: true}
    ✓ should match .b with /* and {nonegate: true}
    ✓ should match .b.c with /*
    ✓ should match .b.c with /* and {dot: true}
    ✓ should match .b.c with /* and {nonegate: true}
    ✓ should match .b.c/ with /*
    ✓ should match .b.c/ with /* and {dot: true}
    ✓ should match .b.c/ with /* and {nonegate: true}
    ✓ should match .b/ with /*
    ✓ should match .b/ with /* and {dot: true}
    ✓ should match .b/ with /* and {nonegate: true}
    ✓ should match .b/.c with /*
    ✓ should match .b/.c with /* and {dot: true}
    ✓ should match .b/.c with /* and {nonegate: true}
    ✓ should match .b/c with /*
    ✓ should match .b/c with /* and {dot: true}
    ✓ should match .b/c with /* and {nonegate: true}
    ✓ should match b/.c with /*
    ✓ should match b/.c with /* and {dot: true}
    ✓ should match b/.c with /* and {nonegate: true}
    ✓ should match b/.c/ with /*
    ✓ should match b/.c/ with /* and {dot: true}
    ✓ should match b/.c/ with /* and {nonegate: true}
    ✓ should match a/+b/c with /*
    ✓ should match a/+b/c with /* and {dot: true}
    ✓ should match a/+b/c with /* and {nonegate: true}
    ✓ should match +a/+b/c with /*
    ✓ should match +a/+b/c with /* and {dot: true}
    ✓ should match +a/+b/c with /* and {nonegate: true}
    ✓ should match a (foo) with /*
    ✓ should match a (foo) with /* and {dot: true}
    ✓ should match a (foo) with /* and {nonegate: true}
    ✓ should match a (foo)/(bar) with /*
    ✓ should match a (foo)/(bar) with /* and {dot: true}
    ✓ should match a (foo)/(bar) with /* and {nonegate: true}
    ✓ should match a/b/c (1) with /*
    ✓ should match a/b/c (1) with /* and {dot: true}
    ✓ should match a/b/c (1) with /* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with /*
    ✓ should match a/b (2)/c (1) with /* and {dot: true}
    ✓ should match a/b (2)/c (1) with /* and {nonegate: true}
    ✓ should match a/b/c [def] with /*
    ✓ should match a/b/c [def] with /* and {dot: true}
    ✓ should match a/b/c [def] with /* and {nonegate: true}
    ✓ should match a with /**
    ✓ should match a with /** and {dot: true}
    ✓ should match a with /** and {nonegate: true}
    ✓ should match a.md with /**
    ✓ should match a.md with /** and {dot: true}
    ✓ should match a.md with /** and {nonegate: true}
    ✓ should match a.js with /**
    ✓ should match a.js with /** and {dot: true}
    ✓ should match a.js with /** and {nonegate: true}
    ✓ should match a/ with /**
    ✓ should match a/ with /** and {dot: true}
    ✓ should match a/ with /** and {nonegate: true}
    ✓ should match a/b with /**
    ✓ should match a/b with /** and {dot: true}
    ✓ should match a/b with /** and {nonegate: true}
    ✓ should match a/b/.c.md with /**
    ✓ should match a/b/.c.md with /** and {dot: true}
    ✓ should match a/b/.c.md with /** and {nonegate: true}
    ✓ should match a/b/c with /**
    ✓ should match a/b/c with /** and {dot: true}
    ✓ should match a/b/c with /** and {nonegate: true}
    ✓ should match a/b/c.md with /**
    ✓ should match a/b/c.md with /** and {dot: true}
    ✓ should match a/b/c.md with /** and {nonegate: true}
    ✓ should match a/b/c/ with /**
    ✓ should match a/b/c/ with /** and {dot: true}
    ✓ should match a/b/c/ with /** and {nonegate: true}
    ✓ should match a/b/c/d with /**
    ✓ should match a/b/c/d with /** and {dot: true}
    ✓ should match a/b/c/d with /** and {nonegate: true}
    ✓ should match a/b/c/d/ with /**
    ✓ should match a/b/c/d/ with /** and {dot: true}
    ✓ should match a/b/c/d/ with /** and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with /**
    ✓ should match a/b/c/d/e/f/z.js with /** and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with /** and {nonegate: true}
    ✓ should match a/b/c/z.js with /**
    ✓ should match a/b/c/z.js with /** and {dot: true}
    ✓ should match a/b/c/z.js with /** and {nonegate: true}
    ✓ should match a/bb with /**
    ✓ should match a/bb with /** and {dot: true}
    ✓ should match a/bb with /** and {nonegate: true}
    ✓ should match a/cb with /**
    ✓ should match a/cb with /** and {dot: true}
    ✓ should match a/cb with /** and {nonegate: true}
    ✓ should match abbbz with /**
    ✓ should match abbbz with /** and {dot: true}
    ✓ should match abbbz with /** and {nonegate: true}
    ✓ should match abc with /**
    ✓ should match abc with /** and {dot: true}
    ✓ should match abc with /** and {nonegate: true}
    ✓ should match abd with /**
    ✓ should match abd with /** and {dot: true}
    ✓ should match abd with /** and {nonegate: true}
    ✓ should match z.js with /**
    ✓ should match z.js with /** and {dot: true}
    ✓ should match z.js with /** and {nonegate: true}
    ✓ should match za.js with /**
    ✓ should match za.js with /** and {dot: true}
    ✓ should match za.js with /** and {nonegate: true}
    ✓ should match !a.js with /**
    ✓ should match !a.js with /** and {dot: true}
    ✓ should match !a.js with /** and {nonegate: true}
    ✓ should match !a/b with /**
    ✓ should match !a/b with /** and {dot: true}
    ✓ should match !a/b with /** and {nonegate: true}
    ✓ should match !a/b/ with /**
    ✓ should match !a/b/ with /** and {dot: true}
    ✓ should match !a/b/ with /** and {nonegate: true}
    ✓ should match !a/b/c with /**
    ✓ should match !a/b/c with /** and {dot: true}
    ✓ should match !a/b/c with /** and {nonegate: true}
    ✓ should match !a/b/c/ with /**
    ✓ should match !a/b/c/ with /** and {dot: true}
    ✓ should match !a/b/c/ with /** and {nonegate: true}
    ✓ should match !a/!b with /**
    ✓ should match !a/!b with /** and {dot: true}
    ✓ should match !a/!b with /** and {nonegate: true}
    ✓ should match !a/!b/c with /**
    ✓ should match !a/!b/c with /** and {dot: true}
    ✓ should match !a/!b/c with /** and {nonegate: true}
    ✓ should match !a/!b/c/d with /**
    ✓ should match !a/!b/c/d with /** and {dot: true}
    ✓ should match !a/!b/c/d with /** and {nonegate: true}
    ✓ should match !a/b/.c.md with /**
    ✓ should match !a/b/.c.md with /** and {dot: true}
    ✓ should match !a/b/.c.md with /** and {nonegate: true}
    ✓ should match /a/ with /**
    ✓ should match /a/ with /** and {dot: true}
    ✓ should match /a/ with /** and {nonegate: true}
    ✓ should match /a/b with /**
    ✓ should match /a/b with /** and {dot: true}
    ✓ should match /a/b with /** and {nonegate: true}
    ✓ should match /a/cb with /**
    ✓ should match /a/cb with /** and {dot: true}
    ✓ should match /a/cb with /** and {nonegate: true}
    ✓ should match /a/bb with /**
    ✓ should match /a/bb with /** and {dot: true}
    ✓ should match /a/bb with /** and {nonegate: true}
    ✓ should match /a/b/c with /**
    ✓ should match /a/b/c with /** and {dot: true}
    ✓ should match /a/b/c with /** and {nonegate: true}
    ✓ should match /a/b/c/ with /**
    ✓ should match /a/b/c/ with /** and {dot: true}
    ✓ should match /a/b/c/ with /** and {nonegate: true}
    ✓ should match /a/b/c/d with /**
    ✓ should match /a/b/c/d with /** and {dot: true}
    ✓ should match /a/b/c/d with /** and {nonegate: true}
    ✓ should match /a/b/c/d/ with /**
    ✓ should match /a/b/c/d/ with /** and {dot: true}
    ✓ should match /a/b/c/d/ with /** and {nonegate: true}
    ✓ should match . with /**
    ✓ should match . with /** and {dot: true}
    ✓ should match . with /** and {nonegate: true}
    ✓ should match ./ with /**
    ✓ should match ./ with /** and {dot: true}
    ✓ should match ./ with /** and {nonegate: true}
    ✓ should match .. with /**
    ✓ should match .. with /** and {dot: true}
    ✓ should match .. with /** and {nonegate: true}
    ✓ should match ../c with /**
    ✓ should match ../c with /** and {dot: true}
    ✓ should match ../c with /** and {nonegate: true}
    ✓ should match ../c with /**
    ✓ should match ../c with /** and {dot: true}
    ✓ should match ../c with /** and {nonegate: true}
    ✓ should match ./../c with /**
    ✓ should match ./../c with /** and {dot: true}
    ✓ should match ./../c with /** and {nonegate: true}
    ✓ should match ./a/../c with /**
    ✓ should match ./a/../c with /** and {dot: true}
    ✓ should match ./a/../c with /** and {nonegate: true}
    ✓ should match /.. with /**
    ✓ should match /.. with /** and {dot: true}
    ✓ should match /.. with /** and {nonegate: true}
    ✓ should match /../c with /**
    ✓ should match /../c with /** and {dot: true}
    ✓ should match /../c with /** and {nonegate: true}
    ✓ should match /../.c with /**
    ✓ should match /../.c with /** and {dot: true}
    ✓ should match /../.c with /** and {nonegate: true}
    ✓ should match /../.c/ with /**
    ✓ should match /../.c/ with /** and {dot: true}
    ✓ should match /../.c/ with /** and {nonegate: true}
    ✓ should match /a/../c with /**
    ✓ should match /a/../c with /** and {dot: true}
    ✓ should match /a/../c with /** and {nonegate: true}
    ✓ should match a/../c with /**
    ✓ should match a/../c with /** and {dot: true}
    ✓ should match a/../c with /** and {nonegate: true}
    ✓ should match ../.b/.c with /**
    ✓ should match ../.b/.c with /** and {dot: true}
    ✓ should match ../.b/.c with /** and {nonegate: true}
    ✓ should match ../b/.c with /**
    ✓ should match ../b/.c with /** and {dot: true}
    ✓ should match ../b/.c with /** and {nonegate: true}
    ✓ should match ./.b/.c with /**
    ✓ should match ./.b/.c with /** and {dot: true}
    ✓ should match ./.b/.c with /** and {nonegate: true}
    ✓ should match ./b/.c with /**
    ✓ should match ./b/.c with /** and {dot: true}
    ✓ should match ./b/.c with /** and {nonegate: true}
    ✓ should match .b with /**
    ✓ should match .b with /** and {dot: true}
    ✓ should match .b with /** and {nonegate: true}
    ✓ should match .b.c with /**
    ✓ should match .b.c with /** and {dot: true}
    ✓ should match .b.c with /** and {nonegate: true}
    ✓ should match .b.c/ with /**
    ✓ should match .b.c/ with /** and {dot: true}
    ✓ should match .b.c/ with /** and {nonegate: true}
    ✓ should match .b/ with /**
    ✓ should match .b/ with /** and {dot: true}
    ✓ should match .b/ with /** and {nonegate: true}
    ✓ should match .b/.c with /**
    ✓ should match .b/.c with /** and {dot: true}
    ✓ should match .b/.c with /** and {nonegate: true}
    ✓ should match .b/c with /**
    ✓ should match .b/c with /** and {dot: true}
    ✓ should match .b/c with /** and {nonegate: true}
    ✓ should match b/.c with /**
    ✓ should match b/.c with /** and {dot: true}
    ✓ should match b/.c with /** and {nonegate: true}
    ✓ should match b/.c/ with /**
    ✓ should match b/.c/ with /** and {dot: true}
    ✓ should match b/.c/ with /** and {nonegate: true}
    ✓ should match a/+b/c with /**
    ✓ should match a/+b/c with /** and {dot: true}
    ✓ should match a/+b/c with /** and {nonegate: true}
    ✓ should match +a/+b/c with /**
    ✓ should match +a/+b/c with /** and {dot: true}
    ✓ should match +a/+b/c with /** and {nonegate: true}
    ✓ should match a (foo) with /**
    ✓ should match a (foo) with /** and {dot: true}
    ✓ should match a (foo) with /** and {nonegate: true}
    ✓ should match a (foo)/(bar) with /**
    ✓ should match a (foo)/(bar) with /** and {dot: true}
    ✓ should match a (foo)/(bar) with /** and {nonegate: true}
    ✓ should match a/b/c (1) with /**
    ✓ should match a/b/c (1) with /** and {dot: true}
    ✓ should match a/b/c (1) with /** and {nonegate: true}
    ✓ should match a/b (2)/c (1) with /**
    ✓ should match a/b (2)/c (1) with /** and {dot: true}
    ✓ should match a/b (2)/c (1) with /** and {nonegate: true}
    ✓ should match a/b/c [def] with /**
    ✓ should match a/b/c [def] with /** and {dot: true}
    ✓ should match a/b/c [def] with /** and {nonegate: true}
    ✓ should match a with /**/
    ✓ should match a with /**/ and {dot: true}
    ✓ should match a with /**/ and {nonegate: true}
    ✓ should match a.md with /**/
    ✓ should match a.md with /**/ and {dot: true}
    ✓ should match a.md with /**/ and {nonegate: true}
    ✓ should match a.js with /**/
    ✓ should match a.js with /**/ and {dot: true}
    ✓ should match a.js with /**/ and {nonegate: true}
    ✓ should match a/ with /**/
    ✓ should match a/ with /**/ and {dot: true}
    ✓ should match a/ with /**/ and {nonegate: true}
    ✓ should match a/b with /**/
    ✓ should match a/b with /**/ and {dot: true}
    ✓ should match a/b with /**/ and {nonegate: true}
    ✓ should match a/b/.c.md with /**/
    ✓ should match a/b/.c.md with /**/ and {dot: true}
    ✓ should match a/b/.c.md with /**/ and {nonegate: true}
    ✓ should match a/b/c with /**/
    ✓ should match a/b/c with /**/ and {dot: true}
    ✓ should match a/b/c with /**/ and {nonegate: true}
    ✓ should match a/b/c.md with /**/
    ✓ should match a/b/c.md with /**/ and {dot: true}
    ✓ should match a/b/c.md with /**/ and {nonegate: true}
    ✓ should match a/b/c/ with /**/
    ✓ should match a/b/c/ with /**/ and {dot: true}
    ✓ should match a/b/c/ with /**/ and {nonegate: true}
    ✓ should match a/b/c/d with /**/
    ✓ should match a/b/c/d with /**/ and {dot: true}
    ✓ should match a/b/c/d with /**/ and {nonegate: true}
    ✓ should match a/b/c/d/ with /**/
    ✓ should match a/b/c/d/ with /**/ and {dot: true}
    ✓ should match a/b/c/d/ with /**/ and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with /**/
    ✓ should match a/b/c/d/e/f/z.js with /**/ and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with /**/ and {nonegate: true}
    ✓ should match a/b/c/z.js with /**/
    ✓ should match a/b/c/z.js with /**/ and {dot: true}
    ✓ should match a/b/c/z.js with /**/ and {nonegate: true}
    ✓ should match a/bb with /**/
    ✓ should match a/bb with /**/ and {dot: true}
    ✓ should match a/bb with /**/ and {nonegate: true}
    ✓ should match a/cb with /**/
    ✓ should match a/cb with /**/ and {dot: true}
    ✓ should match a/cb with /**/ and {nonegate: true}
    ✓ should match abbbz with /**/
    ✓ should match abbbz with /**/ and {dot: true}
    ✓ should match abbbz with /**/ and {nonegate: true}
    ✓ should match abc with /**/
    ✓ should match abc with /**/ and {dot: true}
    ✓ should match abc with /**/ and {nonegate: true}
    ✓ should match abd with /**/
    ✓ should match abd with /**/ and {dot: true}
    ✓ should match abd with /**/ and {nonegate: true}
    ✓ should match z.js with /**/
    ✓ should match z.js with /**/ and {dot: true}
    ✓ should match z.js with /**/ and {nonegate: true}
    ✓ should match za.js with /**/
    ✓ should match za.js with /**/ and {dot: true}
    ✓ should match za.js with /**/ and {nonegate: true}
    ✓ should match !a.js with /**/
    ✓ should match !a.js with /**/ and {dot: true}
    ✓ should match !a.js with /**/ and {nonegate: true}
    ✓ should match !a/b with /**/
    ✓ should match !a/b with /**/ and {dot: true}
    ✓ should match !a/b with /**/ and {nonegate: true}
    ✓ should match !a/b/ with /**/
    ✓ should match !a/b/ with /**/ and {dot: true}
    ✓ should match !a/b/ with /**/ and {nonegate: true}
    ✓ should match !a/b/c with /**/
    ✓ should match !a/b/c with /**/ and {dot: true}
    ✓ should match !a/b/c with /**/ and {nonegate: true}
    ✓ should match !a/b/c/ with /**/
    ✓ should match !a/b/c/ with /**/ and {dot: true}
    ✓ should match !a/b/c/ with /**/ and {nonegate: true}
    ✓ should match !a/!b with /**/
    ✓ should match !a/!b with /**/ and {dot: true}
    ✓ should match !a/!b with /**/ and {nonegate: true}
    ✓ should match !a/!b/c with /**/
    ✓ should match !a/!b/c with /**/ and {dot: true}
    ✓ should match !a/!b/c with /**/ and {nonegate: true}
    ✓ should match !a/!b/c/d with /**/
    ✓ should match !a/!b/c/d with /**/ and {dot: true}
    ✓ should match !a/!b/c/d with /**/ and {nonegate: true}
    ✓ should match !a/b/.c.md with /**/
    ✓ should match !a/b/.c.md with /**/ and {dot: true}
    ✓ should match !a/b/.c.md with /**/ and {nonegate: true}
    ✓ should match /a/ with /**/
    ✓ should match /a/ with /**/ and {dot: true}
    ✓ should match /a/ with /**/ and {nonegate: true}
    ✓ should match /a/b with /**/
    ✓ should match /a/b with /**/ and {dot: true}
    ✓ should match /a/b with /**/ and {nonegate: true}
    ✓ should match /a/cb with /**/
    ✓ should match /a/cb with /**/ and {dot: true}
    ✓ should match /a/cb with /**/ and {nonegate: true}
    ✓ should match /a/bb with /**/
    ✓ should match /a/bb with /**/ and {dot: true}
    ✓ should match /a/bb with /**/ and {nonegate: true}
    ✓ should match /a/b/c with /**/
    ✓ should match /a/b/c with /**/ and {dot: true}
    ✓ should match /a/b/c with /**/ and {nonegate: true}
    ✓ should match /a/b/c/ with /**/
    ✓ should match /a/b/c/ with /**/ and {dot: true}
    ✓ should match /a/b/c/ with /**/ and {nonegate: true}
    ✓ should match /a/b/c/d with /**/
    ✓ should match /a/b/c/d with /**/ and {dot: true}
    ✓ should match /a/b/c/d with /**/ and {nonegate: true}
    ✓ should match /a/b/c/d/ with /**/
    ✓ should match /a/b/c/d/ with /**/ and {dot: true}
    ✓ should match /a/b/c/d/ with /**/ and {nonegate: true}
    ✓ should match . with /**/
    ✓ should match . with /**/ and {dot: true}
    ✓ should match . with /**/ and {nonegate: true}
    ✓ should match ./ with /**/
    ✓ should match ./ with /**/ and {dot: true}
    ✓ should match ./ with /**/ and {nonegate: true}
    ✓ should match .. with /**/
    ✓ should match .. with /**/ and {dot: true}
    ✓ should match .. with /**/ and {nonegate: true}
    ✓ should match ../c with /**/
    ✓ should match ../c with /**/ and {dot: true}
    ✓ should match ../c with /**/ and {nonegate: true}
    ✓ should match ../c with /**/
    ✓ should match ../c with /**/ and {dot: true}
    ✓ should match ../c with /**/ and {nonegate: true}
    ✓ should match ./../c with /**/
    ✓ should match ./../c with /**/ and {dot: true}
    ✓ should match ./../c with /**/ and {nonegate: true}
    ✓ should match ./a/../c with /**/
    ✓ should match ./a/../c with /**/ and {dot: true}
    ✓ should match ./a/../c with /**/ and {nonegate: true}
    ✓ should match /.. with /**/
    ✓ should match /.. with /**/ and {dot: true}
    ✓ should match /.. with /**/ and {nonegate: true}
    ✓ should match /../c with /**/
    ✓ should match /../c with /**/ and {dot: true}
    ✓ should match /../c with /**/ and {nonegate: true}
    ✓ should match /../.c with /**/
    ✓ should match /../.c with /**/ and {dot: true}
    ✓ should match /../.c with /**/ and {nonegate: true}
    ✓ should match /../.c/ with /**/
    ✓ should match /../.c/ with /**/ and {dot: true}
    ✓ should match /../.c/ with /**/ and {nonegate: true}
    ✓ should match /a/../c with /**/
    ✓ should match /a/../c with /**/ and {dot: true}
    ✓ should match /a/../c with /**/ and {nonegate: true}
    ✓ should match a/../c with /**/
    ✓ should match a/../c with /**/ and {dot: true}
    ✓ should match a/../c with /**/ and {nonegate: true}
    ✓ should match ../.b/.c with /**/
    ✓ should match ../.b/.c with /**/ and {dot: true}
    ✓ should match ../.b/.c with /**/ and {nonegate: true}
    ✓ should match ../b/.c with /**/
    ✓ should match ../b/.c with /**/ and {dot: true}
    ✓ should match ../b/.c with /**/ and {nonegate: true}
    ✓ should match ./.b/.c with /**/
    ✓ should match ./.b/.c with /**/ and {dot: true}
    ✓ should match ./.b/.c with /**/ and {nonegate: true}
    ✓ should match ./b/.c with /**/
    ✓ should match ./b/.c with /**/ and {dot: true}
    ✓ should match ./b/.c with /**/ and {nonegate: true}
    ✓ should match .b with /**/
    ✓ should match .b with /**/ and {dot: true}
    ✓ should match .b with /**/ and {nonegate: true}
    ✓ should match .b.c with /**/
    ✓ should match .b.c with /**/ and {dot: true}
    ✓ should match .b.c with /**/ and {nonegate: true}
    ✓ should match .b.c/ with /**/
    ✓ should match .b.c/ with /**/ and {dot: true}
    ✓ should match .b.c/ with /**/ and {nonegate: true}
    ✓ should match .b/ with /**/
    ✓ should match .b/ with /**/ and {dot: true}
    ✓ should match .b/ with /**/ and {nonegate: true}
    ✓ should match .b/.c with /**/
    ✓ should match .b/.c with /**/ and {dot: true}
    ✓ should match .b/.c with /**/ and {nonegate: true}
    ✓ should match .b/c with /**/
    ✓ should match .b/c with /**/ and {dot: true}
    ✓ should match .b/c with /**/ and {nonegate: true}
    ✓ should match b/.c with /**/
    ✓ should match b/.c with /**/ and {dot: true}
    ✓ should match b/.c with /**/ and {nonegate: true}
    ✓ should match b/.c/ with /**/
    ✓ should match b/.c/ with /**/ and {dot: true}
    ✓ should match b/.c/ with /**/ and {nonegate: true}
    ✓ should match a/+b/c with /**/
    ✓ should match a/+b/c with /**/ and {dot: true}
    ✓ should match a/+b/c with /**/ and {nonegate: true}
    ✓ should match +a/+b/c with /**/
    ✓ should match +a/+b/c with /**/ and {dot: true}
    ✓ should match +a/+b/c with /**/ and {nonegate: true}
    ✓ should match a (foo) with /**/
    ✓ should match a (foo) with /**/ and {dot: true}
    ✓ should match a (foo) with /**/ and {nonegate: true}
    ✓ should match a (foo)/(bar) with /**/
    ✓ should match a (foo)/(bar) with /**/ and {dot: true}
    ✓ should match a (foo)/(bar) with /**/ and {nonegate: true}
    ✓ should match a/b/c (1) with /**/
    ✓ should match a/b/c (1) with /**/ and {dot: true}
    ✓ should match a/b/c (1) with /**/ and {nonegate: true}
    ✓ should match a/b (2)/c (1) with /**/
    ✓ should match a/b (2)/c (1) with /**/ and {dot: true}
    ✓ should match a/b (2)/c (1) with /**/ and {nonegate: true}
    ✓ should match a/b/c [def] with /**/
    ✓ should match a/b/c [def] with /**/ and {dot: true}
    ✓ should match a/b/c [def] with /**/ and {nonegate: true}
    ✓ should match a with /**/*
    ✓ should match a with /**/* and {dot: true}
    ✓ should match a with /**/* and {nonegate: true}
    ✓ should match a.md with /**/*
    ✓ should match a.md with /**/* and {dot: true}
    ✓ should match a.md with /**/* and {nonegate: true}
    ✓ should match a.js with /**/*
    ✓ should match a.js with /**/* and {dot: true}
    ✓ should match a.js with /**/* and {nonegate: true}
    ✓ should match a/ with /**/*
    ✓ should match a/ with /**/* and {dot: true}
    ✓ should match a/ with /**/* and {nonegate: true}
    ✓ should match a/b with /**/*
    ✓ should match a/b with /**/* and {dot: true}
    ✓ should match a/b with /**/* and {nonegate: true}
    ✓ should match a/b/.c.md with /**/*
    ✓ should match a/b/.c.md with /**/* and {dot: true}
    ✓ should match a/b/.c.md with /**/* and {nonegate: true}
    ✓ should match a/b/c with /**/*
    ✓ should match a/b/c with /**/* and {dot: true}
    ✓ should match a/b/c with /**/* and {nonegate: true}
    ✓ should match a/b/c.md with /**/*
    ✓ should match a/b/c.md with /**/* and {dot: true}
    ✓ should match a/b/c.md with /**/* and {nonegate: true}
    ✓ should match a/b/c/ with /**/*
    ✓ should match a/b/c/ with /**/* and {dot: true}
    ✓ should match a/b/c/ with /**/* and {nonegate: true}
    ✓ should match a/b/c/d with /**/*
    ✓ should match a/b/c/d with /**/* and {dot: true}
    ✓ should match a/b/c/d with /**/* and {nonegate: true}
    ✓ should match a/b/c/d/ with /**/*
    ✓ should match a/b/c/d/ with /**/* and {dot: true}
    ✓ should match a/b/c/d/ with /**/* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with /**/*
    ✓ should match a/b/c/d/e/f/z.js with /**/* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with /**/* and {nonegate: true}
    ✓ should match a/b/c/z.js with /**/*
    ✓ should match a/b/c/z.js with /**/* and {dot: true}
    ✓ should match a/b/c/z.js with /**/* and {nonegate: true}
    ✓ should match a/bb with /**/*
    ✓ should match a/bb with /**/* and {dot: true}
    ✓ should match a/bb with /**/* and {nonegate: true}
    ✓ should match a/cb with /**/*
    ✓ should match a/cb with /**/* and {dot: true}
    ✓ should match a/cb with /**/* and {nonegate: true}
    ✓ should match abbbz with /**/*
    ✓ should match abbbz with /**/* and {dot: true}
    ✓ should match abbbz with /**/* and {nonegate: true}
    ✓ should match abc with /**/*
    ✓ should match abc with /**/* and {dot: true}
    ✓ should match abc with /**/* and {nonegate: true}
    ✓ should match abd with /**/*
    ✓ should match abd with /**/* and {dot: true}
    ✓ should match abd with /**/* and {nonegate: true}
    ✓ should match z.js with /**/*
    ✓ should match z.js with /**/* and {dot: true}
    ✓ should match z.js with /**/* and {nonegate: true}
    ✓ should match za.js with /**/*
    ✓ should match za.js with /**/* and {dot: true}
    ✓ should match za.js with /**/* and {nonegate: true}
    ✓ should match !a.js with /**/*
    ✓ should match !a.js with /**/* and {dot: true}
    ✓ should match !a.js with /**/* and {nonegate: true}
    ✓ should match !a/b with /**/*
    ✓ should match !a/b with /**/* and {dot: true}
    ✓ should match !a/b with /**/* and {nonegate: true}
    ✓ should match !a/b/ with /**/*
    ✓ should match !a/b/ with /**/* and {dot: true}
    ✓ should match !a/b/ with /**/* and {nonegate: true}
    ✓ should match !a/b/c with /**/*
    ✓ should match !a/b/c with /**/* and {dot: true}
    ✓ should match !a/b/c with /**/* and {nonegate: true}
    ✓ should match !a/b/c/ with /**/*
    ✓ should match !a/b/c/ with /**/* and {dot: true}
    ✓ should match !a/b/c/ with /**/* and {nonegate: true}
    ✓ should match !a/!b with /**/*
    ✓ should match !a/!b with /**/* and {dot: true}
    ✓ should match !a/!b with /**/* and {nonegate: true}
    ✓ should match !a/!b/c with /**/*
    ✓ should match !a/!b/c with /**/* and {dot: true}
    ✓ should match !a/!b/c with /**/* and {nonegate: true}
    ✓ should match !a/!b/c/d with /**/*
    ✓ should match !a/!b/c/d with /**/* and {dot: true}
    ✓ should match !a/!b/c/d with /**/* and {nonegate: true}
    ✓ should match !a/b/.c.md with /**/*
    ✓ should match !a/b/.c.md with /**/* and {dot: true}
    ✓ should match !a/b/.c.md with /**/* and {nonegate: true}
    ✓ should match /a/ with /**/*
    ✓ should match /a/ with /**/* and {dot: true}
    ✓ should match /a/ with /**/* and {nonegate: true}
    ✓ should match /a/b with /**/*
    ✓ should match /a/b with /**/* and {dot: true}
    ✓ should match /a/b with /**/* and {nonegate: true}
    ✓ should match /a/cb with /**/*
    ✓ should match /a/cb with /**/* and {dot: true}
    ✓ should match /a/cb with /**/* and {nonegate: true}
    ✓ should match /a/bb with /**/*
    ✓ should match /a/bb with /**/* and {dot: true}
    ✓ should match /a/bb with /**/* and {nonegate: true}
    ✓ should match /a/b/c with /**/*
    ✓ should match /a/b/c with /**/* and {dot: true}
    ✓ should match /a/b/c with /**/* and {nonegate: true}
    ✓ should match /a/b/c/ with /**/*
    ✓ should match /a/b/c/ with /**/* and {dot: true}
    ✓ should match /a/b/c/ with /**/* and {nonegate: true}
    ✓ should match /a/b/c/d with /**/*
    ✓ should match /a/b/c/d with /**/* and {dot: true}
    ✓ should match /a/b/c/d with /**/* and {nonegate: true}
    ✓ should match /a/b/c/d/ with /**/*
    ✓ should match /a/b/c/d/ with /**/* and {dot: true}
    ✓ should match /a/b/c/d/ with /**/* and {nonegate: true}
    ✓ should match . with /**/*
    ✓ should match . with /**/* and {dot: true}
    ✓ should match . with /**/* and {nonegate: true}
    ✓ should match ./ with /**/*
    ✓ should match ./ with /**/* and {dot: true}
    ✓ should match ./ with /**/* and {nonegate: true}
    ✓ should match .. with /**/*
    ✓ should match .. with /**/* and {dot: true}
    ✓ should match .. with /**/* and {nonegate: true}
    ✓ should match ../c with /**/*
    ✓ should match ../c with /**/* and {dot: true}
    ✓ should match ../c with /**/* and {nonegate: true}
    ✓ should match ../c with /**/*
    ✓ should match ../c with /**/* and {dot: true}
    ✓ should match ../c with /**/* and {nonegate: true}
    ✓ should match ./../c with /**/*
    ✓ should match ./../c with /**/* and {dot: true}
    ✓ should match ./../c with /**/* and {nonegate: true}
    ✓ should match ./a/../c with /**/*
    ✓ should match ./a/../c with /**/* and {dot: true}
    ✓ should match ./a/../c with /**/* and {nonegate: true}
    ✓ should match /.. with /**/*
    ✓ should match /.. with /**/* and {dot: true}
    ✓ should match /.. with /**/* and {nonegate: true}
    ✓ should match /../c with /**/*
    ✓ should match /../c with /**/* and {dot: true}
    ✓ should match /../c with /**/* and {nonegate: true}
    ✓ should match /../.c with /**/*
    ✓ should match /../.c with /**/* and {dot: true}
    ✓ should match /../.c with /**/* and {nonegate: true}
    ✓ should match /../.c/ with /**/*
    ✓ should match /../.c/ with /**/* and {dot: true}
    ✓ should match /../.c/ with /**/* and {nonegate: true}
    ✓ should match /a/../c with /**/*
    ✓ should match /a/../c with /**/* and {dot: true}
    ✓ should match /a/../c with /**/* and {nonegate: true}
    ✓ should match a/../c with /**/*
    ✓ should match a/../c with /**/* and {dot: true}
    ✓ should match a/../c with /**/* and {nonegate: true}
    ✓ should match ../.b/.c with /**/*
    ✓ should match ../.b/.c with /**/* and {dot: true}
    ✓ should match ../.b/.c with /**/* and {nonegate: true}
    ✓ should match ../b/.c with /**/*
    ✓ should match ../b/.c with /**/* and {dot: true}
    ✓ should match ../b/.c with /**/* and {nonegate: true}
    ✓ should match ./.b/.c with /**/*
    ✓ should match ./.b/.c with /**/* and {dot: true}
    ✓ should match ./.b/.c with /**/* and {nonegate: true}
    ✓ should match ./b/.c with /**/*
    ✓ should match ./b/.c with /**/* and {dot: true}
    ✓ should match ./b/.c with /**/* and {nonegate: true}
    ✓ should match .b with /**/*
    ✓ should match .b with /**/* and {dot: true}
    ✓ should match .b with /**/* and {nonegate: true}
    ✓ should match .b.c with /**/*
    ✓ should match .b.c with /**/* and {dot: true}
    ✓ should match .b.c with /**/* and {nonegate: true}
    ✓ should match .b.c/ with /**/*
    ✓ should match .b.c/ with /**/* and {dot: true}
    ✓ should match .b.c/ with /**/* and {nonegate: true}
    ✓ should match .b/ with /**/*
    ✓ should match .b/ with /**/* and {dot: true}
    ✓ should match .b/ with /**/* and {nonegate: true}
    ✓ should match .b/.c with /**/*
    ✓ should match .b/.c with /**/* and {dot: true}
    ✓ should match .b/.c with /**/* and {nonegate: true}
    ✓ should match .b/c with /**/*
    ✓ should match .b/c with /**/* and {dot: true}
    ✓ should match .b/c with /**/* and {nonegate: true}
    ✓ should match b/.c with /**/*
    ✓ should match b/.c with /**/* and {dot: true}
    ✓ should match b/.c with /**/* and {nonegate: true}
    ✓ should match b/.c/ with /**/*
    ✓ should match b/.c/ with /**/* and {dot: true}
    ✓ should match b/.c/ with /**/* and {nonegate: true}
    ✓ should match a/+b/c with /**/*
    ✓ should match a/+b/c with /**/* and {dot: true}
    ✓ should match a/+b/c with /**/* and {nonegate: true}
    ✓ should match +a/+b/c with /**/*
    ✓ should match +a/+b/c with /**/* and {dot: true}
    ✓ should match +a/+b/c with /**/* and {nonegate: true}
    ✓ should match a (foo) with /**/*
    ✓ should match a (foo) with /**/* and {dot: true}
    ✓ should match a (foo) with /**/* and {nonegate: true}
    ✓ should match a (foo)/(bar) with /**/*
    ✓ should match a (foo)/(bar) with /**/* and {dot: true}
    ✓ should match a (foo)/(bar) with /**/* and {nonegate: true}
    ✓ should match a/b/c (1) with /**/*
    ✓ should match a/b/c (1) with /**/* and {dot: true}
    ✓ should match a/b/c (1) with /**/* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with /**/*
    ✓ should match a/b (2)/c (1) with /**/* and {dot: true}
    ✓ should match a/b (2)/c (1) with /**/* and {nonegate: true}
    ✓ should match a/b/c [def] with /**/*
    ✓ should match a/b/c [def] with /**/* and {dot: true}
    ✓ should match a/b/c [def] with /**/* and {nonegate: true}
    ✓ should match a with /*/
    ✓ should match a with /*/ and {dot: true}
    ✓ should match a with /*/ and {nonegate: true}
    ✓ should match a.md with /*/
    ✓ should match a.md with /*/ and {dot: true}
    ✓ should match a.md with /*/ and {nonegate: true}
    ✓ should match a.js with /*/
    ✓ should match a.js with /*/ and {dot: true}
    ✓ should match a.js with /*/ and {nonegate: true}
    ✓ should match a/ with /*/
    ✓ should match a/ with /*/ and {dot: true}
    ✓ should match a/ with /*/ and {nonegate: true}
    ✓ should match a/b with /*/
    ✓ should match a/b with /*/ and {dot: true}
    ✓ should match a/b with /*/ and {nonegate: true}
    ✓ should match a/b/.c.md with /*/
    ✓ should match a/b/.c.md with /*/ and {dot: true}
    ✓ should match a/b/.c.md with /*/ and {nonegate: true}
    ✓ should match a/b/c with /*/
    ✓ should match a/b/c with /*/ and {dot: true}
    ✓ should match a/b/c with /*/ and {nonegate: true}
    ✓ should match a/b/c.md with /*/
    ✓ should match a/b/c.md with /*/ and {dot: true}
    ✓ should match a/b/c.md with /*/ and {nonegate: true}
    ✓ should match a/b/c/ with /*/
    ✓ should match a/b/c/ with /*/ and {dot: true}
    ✓ should match a/b/c/ with /*/ and {nonegate: true}
    ✓ should match a/b/c/d with /*/
    ✓ should match a/b/c/d with /*/ and {dot: true}
    ✓ should match a/b/c/d with /*/ and {nonegate: true}
    ✓ should match a/b/c/d/ with /*/
    ✓ should match a/b/c/d/ with /*/ and {dot: true}
    ✓ should match a/b/c/d/ with /*/ and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with /*/
    ✓ should match a/b/c/d/e/f/z.js with /*/ and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with /*/ and {nonegate: true}
    ✓ should match a/b/c/z.js with /*/
    ✓ should match a/b/c/z.js with /*/ and {dot: true}
    ✓ should match a/b/c/z.js with /*/ and {nonegate: true}
    ✓ should match a/bb with /*/
    ✓ should match a/bb with /*/ and {dot: true}
    ✓ should match a/bb with /*/ and {nonegate: true}
    ✓ should match a/cb with /*/
    ✓ should match a/cb with /*/ and {dot: true}
    ✓ should match a/cb with /*/ and {nonegate: true}
    ✓ should match abbbz with /*/
    ✓ should match abbbz with /*/ and {dot: true}
    ✓ should match abbbz with /*/ and {nonegate: true}
    ✓ should match abc with /*/
    ✓ should match abc with /*/ and {dot: true}
    ✓ should match abc with /*/ and {nonegate: true}
    ✓ should match abd with /*/
    ✓ should match abd with /*/ and {dot: true}
    ✓ should match abd with /*/ and {nonegate: true}
    ✓ should match z.js with /*/
    ✓ should match z.js with /*/ and {dot: true}
    ✓ should match z.js with /*/ and {nonegate: true}
    ✓ should match za.js with /*/
    ✓ should match za.js with /*/ and {dot: true}
    ✓ should match za.js with /*/ and {nonegate: true}
    ✓ should match !a.js with /*/
    ✓ should match !a.js with /*/ and {dot: true}
    ✓ should match !a.js with /*/ and {nonegate: true}
    ✓ should match !a/b with /*/
    ✓ should match !a/b with /*/ and {dot: true}
    ✓ should match !a/b with /*/ and {nonegate: true}
    ✓ should match !a/b/ with /*/
    ✓ should match !a/b/ with /*/ and {dot: true}
    ✓ should match !a/b/ with /*/ and {nonegate: true}
    ✓ should match !a/b/c with /*/
    ✓ should match !a/b/c with /*/ and {dot: true}
    ✓ should match !a/b/c with /*/ and {nonegate: true}
    ✓ should match !a/b/c/ with /*/
    ✓ should match !a/b/c/ with /*/ and {dot: true}
    ✓ should match !a/b/c/ with /*/ and {nonegate: true}
    ✓ should match !a/!b with /*/
    ✓ should match !a/!b with /*/ and {dot: true}
    ✓ should match !a/!b with /*/ and {nonegate: true}
    ✓ should match !a/!b/c with /*/
    ✓ should match !a/!b/c with /*/ and {dot: true}
    ✓ should match !a/!b/c with /*/ and {nonegate: true}
    ✓ should match !a/!b/c/d with /*/
    ✓ should match !a/!b/c/d with /*/ and {dot: true}
    ✓ should match !a/!b/c/d with /*/ and {nonegate: true}
    ✓ should match !a/b/.c.md with /*/
    ✓ should match !a/b/.c.md with /*/ and {dot: true}
    ✓ should match !a/b/.c.md with /*/ and {nonegate: true}
    ✓ should match /a/ with /*/
    ✓ should match /a/ with /*/ and {dot: true}
    ✓ should match /a/ with /*/ and {nonegate: true}
    ✓ should match /a/b with /*/
    ✓ should match /a/b with /*/ and {dot: true}
    ✓ should match /a/b with /*/ and {nonegate: true}
    ✓ should match /a/cb with /*/
    ✓ should match /a/cb with /*/ and {dot: true}
    ✓ should match /a/cb with /*/ and {nonegate: true}
    ✓ should match /a/bb with /*/
    ✓ should match /a/bb with /*/ and {dot: true}
    ✓ should match /a/bb with /*/ and {nonegate: true}
    ✓ should match /a/b/c with /*/
    ✓ should match /a/b/c with /*/ and {dot: true}
    ✓ should match /a/b/c with /*/ and {nonegate: true}
    ✓ should match /a/b/c/ with /*/
    ✓ should match /a/b/c/ with /*/ and {dot: true}
    ✓ should match /a/b/c/ with /*/ and {nonegate: true}
    ✓ should match /a/b/c/d with /*/
    ✓ should match /a/b/c/d with /*/ and {dot: true}
    ✓ should match /a/b/c/d with /*/ and {nonegate: true}
    ✓ should match /a/b/c/d/ with /*/
    ✓ should match /a/b/c/d/ with /*/ and {dot: true}
    ✓ should match /a/b/c/d/ with /*/ and {nonegate: true}
    ✓ should match . with /*/
    ✓ should match . with /*/ and {dot: true}
    ✓ should match . with /*/ and {nonegate: true}
    ✓ should match ./ with /*/
    ✓ should match ./ with /*/ and {dot: true}
    ✓ should match ./ with /*/ and {nonegate: true}
    ✓ should match .. with /*/
    ✓ should match .. with /*/ and {dot: true}
    ✓ should match .. with /*/ and {nonegate: true}
    ✓ should match ../c with /*/
    ✓ should match ../c with /*/ and {dot: true}
    ✓ should match ../c with /*/ and {nonegate: true}
    ✓ should match ../c with /*/
    ✓ should match ../c with /*/ and {dot: true}
    ✓ should match ../c with /*/ and {nonegate: true}
    ✓ should match ./../c with /*/
    ✓ should match ./../c with /*/ and {dot: true}
    ✓ should match ./../c with /*/ and {nonegate: true}
    ✓ should match ./a/../c with /*/
    ✓ should match ./a/../c with /*/ and {dot: true}
    ✓ should match ./a/../c with /*/ and {nonegate: true}
    ✓ should match /.. with /*/
    ✓ should match /.. with /*/ and {dot: true}
    ✓ should match /.. with /*/ and {nonegate: true}
    ✓ should match /../c with /*/
    ✓ should match /../c with /*/ and {dot: true}
    ✓ should match /../c with /*/ and {nonegate: true}
    ✓ should match /../.c with /*/
    ✓ should match /../.c with /*/ and {dot: true}
    ✓ should match /../.c with /*/ and {nonegate: true}
    ✓ should match /../.c/ with /*/
    ✓ should match /../.c/ with /*/ and {dot: true}
    ✓ should match /../.c/ with /*/ and {nonegate: true}
    ✓ should match /a/../c with /*/
    ✓ should match /a/../c with /*/ and {dot: true}
    ✓ should match /a/../c with /*/ and {nonegate: true}
    ✓ should match a/../c with /*/
    ✓ should match a/../c with /*/ and {dot: true}
    ✓ should match a/../c with /*/ and {nonegate: true}
    ✓ should match ../.b/.c with /*/
    ✓ should match ../.b/.c with /*/ and {dot: true}
    ✓ should match ../.b/.c with /*/ and {nonegate: true}
    ✓ should match ../b/.c with /*/
    ✓ should match ../b/.c with /*/ and {dot: true}
    ✓ should match ../b/.c with /*/ and {nonegate: true}
    ✓ should match ./.b/.c with /*/
    ✓ should match ./.b/.c with /*/ and {dot: true}
    ✓ should match ./.b/.c with /*/ and {nonegate: true}
    ✓ should match ./b/.c with /*/
    ✓ should match ./b/.c with /*/ and {dot: true}
    ✓ should match ./b/.c with /*/ and {nonegate: true}
    ✓ should match .b with /*/
    ✓ should match .b with /*/ and {dot: true}
    ✓ should match .b with /*/ and {nonegate: true}
    ✓ should match .b.c with /*/
    ✓ should match .b.c with /*/ and {dot: true}
    ✓ should match .b.c with /*/ and {nonegate: true}
    ✓ should match .b.c/ with /*/
    ✓ should match .b.c/ with /*/ and {dot: true}
    ✓ should match .b.c/ with /*/ and {nonegate: true}
    ✓ should match .b/ with /*/
    ✓ should match .b/ with /*/ and {dot: true}
    ✓ should match .b/ with /*/ and {nonegate: true}
    ✓ should match .b/.c with /*/
    ✓ should match .b/.c with /*/ and {dot: true}
    ✓ should match .b/.c with /*/ and {nonegate: true}
    ✓ should match .b/c with /*/
    ✓ should match .b/c with /*/ and {dot: true}
    ✓ should match .b/c with /*/ and {nonegate: true}
    ✓ should match b/.c with /*/
    ✓ should match b/.c with /*/ and {dot: true}
    ✓ should match b/.c with /*/ and {nonegate: true}
    ✓ should match b/.c/ with /*/
    ✓ should match b/.c/ with /*/ and {dot: true}
    ✓ should match b/.c/ with /*/ and {nonegate: true}
    ✓ should match a/+b/c with /*/
    ✓ should match a/+b/c with /*/ and {dot: true}
    ✓ should match a/+b/c with /*/ and {nonegate: true}
    ✓ should match +a/+b/c with /*/
    ✓ should match +a/+b/c with /*/ and {dot: true}
    ✓ should match +a/+b/c with /*/ and {nonegate: true}
    ✓ should match a (foo) with /*/
    ✓ should match a (foo) with /*/ and {dot: true}
    ✓ should match a (foo) with /*/ and {nonegate: true}
    ✓ should match a (foo)/(bar) with /*/
    ✓ should match a (foo)/(bar) with /*/ and {dot: true}
    ✓ should match a (foo)/(bar) with /*/ and {nonegate: true}
    ✓ should match a/b/c (1) with /*/
    ✓ should match a/b/c (1) with /*/ and {dot: true}
    ✓ should match a/b/c (1) with /*/ and {nonegate: true}
    ✓ should match a/b (2)/c (1) with /*/
    ✓ should match a/b (2)/c (1) with /*/ and {dot: true}
    ✓ should match a/b (2)/c (1) with /*/ and {nonegate: true}
    ✓ should match a/b/c [def] with /*/
    ✓ should match a/b/c [def] with /*/ and {dot: true}
    ✓ should match a/b/c [def] with /*/ and {nonegate: true}
    ✓ should match a with /*/*
    ✓ should match a with /*/* and {dot: true}
    ✓ should match a with /*/* and {nonegate: true}
    ✓ should match a.md with /*/*
    ✓ should match a.md with /*/* and {dot: true}
    ✓ should match a.md with /*/* and {nonegate: true}
    ✓ should match a.js with /*/*
    ✓ should match a.js with /*/* and {dot: true}
    ✓ should match a.js with /*/* and {nonegate: true}
    ✓ should match a/ with /*/*
    ✓ should match a/ with /*/* and {dot: true}
    ✓ should match a/ with /*/* and {nonegate: true}
    ✓ should match a/b with /*/*
    ✓ should match a/b with /*/* and {dot: true}
    ✓ should match a/b with /*/* and {nonegate: true}
    ✓ should match a/b/.c.md with /*/*
    ✓ should match a/b/.c.md with /*/* and {dot: true}
    ✓ should match a/b/.c.md with /*/* and {nonegate: true}
    ✓ should match a/b/c with /*/*
    ✓ should match a/b/c with /*/* and {dot: true}
    ✓ should match a/b/c with /*/* and {nonegate: true}
    ✓ should match a/b/c.md with /*/*
    ✓ should match a/b/c.md with /*/* and {dot: true}
    ✓ should match a/b/c.md with /*/* and {nonegate: true}
    ✓ should match a/b/c/ with /*/*
    ✓ should match a/b/c/ with /*/* and {dot: true}
    ✓ should match a/b/c/ with /*/* and {nonegate: true}
    ✓ should match a/b/c/d with /*/*
    ✓ should match a/b/c/d with /*/* and {dot: true}
    ✓ should match a/b/c/d with /*/* and {nonegate: true}
    ✓ should match a/b/c/d/ with /*/*
    ✓ should match a/b/c/d/ with /*/* and {dot: true}
    ✓ should match a/b/c/d/ with /*/* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with /*/*
    ✓ should match a/b/c/d/e/f/z.js with /*/* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with /*/* and {nonegate: true}
    ✓ should match a/b/c/z.js with /*/*
    ✓ should match a/b/c/z.js with /*/* and {dot: true}
    ✓ should match a/b/c/z.js with /*/* and {nonegate: true}
    ✓ should match a/bb with /*/*
    ✓ should match a/bb with /*/* and {dot: true}
    ✓ should match a/bb with /*/* and {nonegate: true}
    ✓ should match a/cb with /*/*
    ✓ should match a/cb with /*/* and {dot: true}
    ✓ should match a/cb with /*/* and {nonegate: true}
    ✓ should match abbbz with /*/*
    ✓ should match abbbz with /*/* and {dot: true}
    ✓ should match abbbz with /*/* and {nonegate: true}
    ✓ should match abc with /*/*
    ✓ should match abc with /*/* and {dot: true}
    ✓ should match abc with /*/* and {nonegate: true}
    ✓ should match abd with /*/*
    ✓ should match abd with /*/* and {dot: true}
    ✓ should match abd with /*/* and {nonegate: true}
    ✓ should match z.js with /*/*
    ✓ should match z.js with /*/* and {dot: true}
    ✓ should match z.js with /*/* and {nonegate: true}
    ✓ should match za.js with /*/*
    ✓ should match za.js with /*/* and {dot: true}
    ✓ should match za.js with /*/* and {nonegate: true}
    ✓ should match !a.js with /*/*
    ✓ should match !a.js with /*/* and {dot: true}
    ✓ should match !a.js with /*/* and {nonegate: true}
    ✓ should match !a/b with /*/*
    ✓ should match !a/b with /*/* and {dot: true}
    ✓ should match !a/b with /*/* and {nonegate: true}
    ✓ should match !a/b/ with /*/*
    ✓ should match !a/b/ with /*/* and {dot: true}
    ✓ should match !a/b/ with /*/* and {nonegate: true}
    ✓ should match !a/b/c with /*/*
    ✓ should match !a/b/c with /*/* and {dot: true}
    ✓ should match !a/b/c with /*/* and {nonegate: true}
    ✓ should match !a/b/c/ with /*/*
    ✓ should match !a/b/c/ with /*/* and {dot: true}
    ✓ should match !a/b/c/ with /*/* and {nonegate: true}
    ✓ should match !a/!b with /*/*
    ✓ should match !a/!b with /*/* and {dot: true}
    ✓ should match !a/!b with /*/* and {nonegate: true}
    ✓ should match !a/!b/c with /*/*
    ✓ should match !a/!b/c with /*/* and {dot: true}
    ✓ should match !a/!b/c with /*/* and {nonegate: true}
    ✓ should match !a/!b/c/d with /*/*
    ✓ should match !a/!b/c/d with /*/* and {dot: true}
    ✓ should match !a/!b/c/d with /*/* and {nonegate: true}
    ✓ should match !a/b/.c.md with /*/*
    ✓ should match !a/b/.c.md with /*/* and {dot: true}
    ✓ should match !a/b/.c.md with /*/* and {nonegate: true}
    ✓ should match /a/ with /*/*
    ✓ should match /a/ with /*/* and {dot: true}
    ✓ should match /a/ with /*/* and {nonegate: true}
    ✓ should match /a/b with /*/*
    ✓ should match /a/b with /*/* and {dot: true}
    ✓ should match /a/b with /*/* and {nonegate: true}
    ✓ should match /a/cb with /*/*
    ✓ should match /a/cb with /*/* and {dot: true}
    ✓ should match /a/cb with /*/* and {nonegate: true}
    ✓ should match /a/bb with /*/*
    ✓ should match /a/bb with /*/* and {dot: true}
    ✓ should match /a/bb with /*/* and {nonegate: true}
    ✓ should match /a/b/c with /*/*
    ✓ should match /a/b/c with /*/* and {dot: true}
    ✓ should match /a/b/c with /*/* and {nonegate: true}
    ✓ should match /a/b/c/ with /*/*
    ✓ should match /a/b/c/ with /*/* and {dot: true}
    ✓ should match /a/b/c/ with /*/* and {nonegate: true}
    ✓ should match /a/b/c/d with /*/*
    ✓ should match /a/b/c/d with /*/* and {dot: true}
    ✓ should match /a/b/c/d with /*/* and {nonegate: true}
    ✓ should match /a/b/c/d/ with /*/*
    ✓ should match /a/b/c/d/ with /*/* and {dot: true}
    ✓ should match /a/b/c/d/ with /*/* and {nonegate: true}
    ✓ should match . with /*/*
    ✓ should match . with /*/* and {dot: true}
    ✓ should match . with /*/* and {nonegate: true}
    ✓ should match ./ with /*/*
    ✓ should match ./ with /*/* and {dot: true}
    ✓ should match ./ with /*/* and {nonegate: true}
    ✓ should match .. with /*/*
    ✓ should match .. with /*/* and {dot: true}
    ✓ should match .. with /*/* and {nonegate: true}
    ✓ should match ../c with /*/*
    ✓ should match ../c with /*/* and {dot: true}
    ✓ should match ../c with /*/* and {nonegate: true}
    ✓ should match ../c with /*/*
    ✓ should match ../c with /*/* and {dot: true}
    ✓ should match ../c with /*/* and {nonegate: true}
    ✓ should match ./../c with /*/*
    ✓ should match ./../c with /*/* and {dot: true}
    ✓ should match ./../c with /*/* and {nonegate: true}
    ✓ should match ./a/../c with /*/*
    ✓ should match ./a/../c with /*/* and {dot: true}
    ✓ should match ./a/../c with /*/* and {nonegate: true}
    ✓ should match /.. with /*/*
    ✓ should match /.. with /*/* and {dot: true}
    ✓ should match /.. with /*/* and {nonegate: true}
    ✓ should match /../c with /*/*
    ✓ should match /../c with /*/* and {dot: true}
    ✓ should match /../c with /*/* and {nonegate: true}
    ✓ should match /../.c with /*/*
    ✓ should match /../.c with /*/* and {dot: true}
    ✓ should match /../.c with /*/* and {nonegate: true}
    ✓ should match /../.c/ with /*/*
    ✓ should match /../.c/ with /*/* and {dot: true}
    ✓ should match /../.c/ with /*/* and {nonegate: true}
    ✓ should match /a/../c with /*/*
    ✓ should match /a/../c with /*/* and {dot: true}
    ✓ should match /a/../c with /*/* and {nonegate: true}
    ✓ should match a/../c with /*/*
    ✓ should match a/../c with /*/* and {dot: true}
    ✓ should match a/../c with /*/* and {nonegate: true}
    ✓ should match ../.b/.c with /*/*
    ✓ should match ../.b/.c with /*/* and {dot: true}
    ✓ should match ../.b/.c with /*/* and {nonegate: true}
    ✓ should match ../b/.c with /*/*
    ✓ should match ../b/.c with /*/* and {dot: true}
    ✓ should match ../b/.c with /*/* and {nonegate: true}
    ✓ should match ./.b/.c with /*/*
    ✓ should match ./.b/.c with /*/* and {dot: true}
    ✓ should match ./.b/.c with /*/* and {nonegate: true}
    ✓ should match ./b/.c with /*/*
    ✓ should match ./b/.c with /*/* and {dot: true}
    ✓ should match ./b/.c with /*/* and {nonegate: true}
    ✓ should match .b with /*/*
    ✓ should match .b with /*/* and {dot: true}
    ✓ should match .b with /*/* and {nonegate: true}
    ✓ should match .b.c with /*/*
    ✓ should match .b.c with /*/* and {dot: true}
    ✓ should match .b.c with /*/* and {nonegate: true}
    ✓ should match .b.c/ with /*/*
    ✓ should match .b.c/ with /*/* and {dot: true}
    ✓ should match .b.c/ with /*/* and {nonegate: true}
    ✓ should match .b/ with /*/*
    ✓ should match .b/ with /*/* and {dot: true}
    ✓ should match .b/ with /*/* and {nonegate: true}
    ✓ should match .b/.c with /*/*
    ✓ should match .b/.c with /*/* and {dot: true}
    ✓ should match .b/.c with /*/* and {nonegate: true}
    ✓ should match .b/c with /*/*
    ✓ should match .b/c with /*/* and {dot: true}
    ✓ should match .b/c with /*/* and {nonegate: true}
    ✓ should match b/.c with /*/*
    ✓ should match b/.c with /*/* and {dot: true}
    ✓ should match b/.c with /*/* and {nonegate: true}
    ✓ should match b/.c/ with /*/*
    ✓ should match b/.c/ with /*/* and {dot: true}
    ✓ should match b/.c/ with /*/* and {nonegate: true}
    ✓ should match a/+b/c with /*/*
    ✓ should match a/+b/c with /*/* and {dot: true}
    ✓ should match a/+b/c with /*/* and {nonegate: true}
    ✓ should match +a/+b/c with /*/*
    ✓ should match +a/+b/c with /*/* and {dot: true}
    ✓ should match +a/+b/c with /*/* and {nonegate: true}
    ✓ should match a (foo) with /*/*
    ✓ should match a (foo) with /*/* and {dot: true}
    ✓ should match a (foo) with /*/* and {nonegate: true}
    ✓ should match a (foo)/(bar) with /*/*
    ✓ should match a (foo)/(bar) with /*/* and {dot: true}
    ✓ should match a (foo)/(bar) with /*/* and {nonegate: true}
    ✓ should match a/b/c (1) with /*/*
    ✓ should match a/b/c (1) with /*/* and {dot: true}
    ✓ should match a/b/c (1) with /*/* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with /*/*
    ✓ should match a/b (2)/c (1) with /*/* and {dot: true}
    ✓ should match a/b (2)/c (1) with /*/* and {nonegate: true}
    ✓ should match a/b/c [def] with /*/*
    ✓ should match a/b/c [def] with /*/* and {dot: true}
    ✓ should match a/b/c [def] with /*/* and {nonegate: true}
    ✓ should match a with /*/**/
    ✓ should match a with /*/**/ and {dot: true}
    ✓ should match a with /*/**/ and {nonegate: true}
    ✓ should match a.md with /*/**/
    ✓ should match a.md with /*/**/ and {dot: true}
    ✓ should match a.md with /*/**/ and {nonegate: true}
    ✓ should match a.js with /*/**/
    ✓ should match a.js with /*/**/ and {dot: true}
    ✓ should match a.js with /*/**/ and {nonegate: true}
    ✓ should match a/ with /*/**/
    ✓ should match a/ with /*/**/ and {dot: true}
    ✓ should match a/ with /*/**/ and {nonegate: true}
    ✓ should match a/b with /*/**/
    ✓ should match a/b with /*/**/ and {dot: true}
    ✓ should match a/b with /*/**/ and {nonegate: true}
    ✓ should match a/b/.c.md with /*/**/
    ✓ should match a/b/.c.md with /*/**/ and {dot: true}
    ✓ should match a/b/.c.md with /*/**/ and {nonegate: true}
    ✓ should match a/b/c with /*/**/
    ✓ should match a/b/c with /*/**/ and {dot: true}
    ✓ should match a/b/c with /*/**/ and {nonegate: true}
    ✓ should match a/b/c.md with /*/**/
    ✓ should match a/b/c.md with /*/**/ and {dot: true}
    ✓ should match a/b/c.md with /*/**/ and {nonegate: true}
    ✓ should match a/b/c/ with /*/**/
    ✓ should match a/b/c/ with /*/**/ and {dot: true}
    ✓ should match a/b/c/ with /*/**/ and {nonegate: true}
    ✓ should match a/b/c/d with /*/**/
    ✓ should match a/b/c/d with /*/**/ and {dot: true}
    ✓ should match a/b/c/d with /*/**/ and {nonegate: true}
    ✓ should match a/b/c/d/ with /*/**/
    ✓ should match a/b/c/d/ with /*/**/ and {dot: true}
    ✓ should match a/b/c/d/ with /*/**/ and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with /*/**/
    ✓ should match a/b/c/d/e/f/z.js with /*/**/ and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with /*/**/ and {nonegate: true}
    ✓ should match a/b/c/z.js with /*/**/
    ✓ should match a/b/c/z.js with /*/**/ and {dot: true}
    ✓ should match a/b/c/z.js with /*/**/ and {nonegate: true}
    ✓ should match a/bb with /*/**/
    ✓ should match a/bb with /*/**/ and {dot: true}
    ✓ should match a/bb with /*/**/ and {nonegate: true}
    ✓ should match a/cb with /*/**/
    ✓ should match a/cb with /*/**/ and {dot: true}
    ✓ should match a/cb with /*/**/ and {nonegate: true}
    ✓ should match abbbz with /*/**/
    ✓ should match abbbz with /*/**/ and {dot: true}
    ✓ should match abbbz with /*/**/ and {nonegate: true}
    ✓ should match abc with /*/**/
    ✓ should match abc with /*/**/ and {dot: true}
    ✓ should match abc with /*/**/ and {nonegate: true}
    ✓ should match abd with /*/**/
    ✓ should match abd with /*/**/ and {dot: true}
    ✓ should match abd with /*/**/ and {nonegate: true}
    ✓ should match z.js with /*/**/
    ✓ should match z.js with /*/**/ and {dot: true}
    ✓ should match z.js with /*/**/ and {nonegate: true}
    ✓ should match za.js with /*/**/
    ✓ should match za.js with /*/**/ and {dot: true}
    ✓ should match za.js with /*/**/ and {nonegate: true}
    ✓ should match !a.js with /*/**/
    ✓ should match !a.js with /*/**/ and {dot: true}
    ✓ should match !a.js with /*/**/ and {nonegate: true}
    ✓ should match !a/b with /*/**/
    ✓ should match !a/b with /*/**/ and {dot: true}
    ✓ should match !a/b with /*/**/ and {nonegate: true}
    ✓ should match !a/b/ with /*/**/
    ✓ should match !a/b/ with /*/**/ and {dot: true}
    ✓ should match !a/b/ with /*/**/ and {nonegate: true}
    ✓ should match !a/b/c with /*/**/
    ✓ should match !a/b/c with /*/**/ and {dot: true}
    ✓ should match !a/b/c with /*/**/ and {nonegate: true}
    ✓ should match !a/b/c/ with /*/**/
    ✓ should match !a/b/c/ with /*/**/ and {dot: true}
    ✓ should match !a/b/c/ with /*/**/ and {nonegate: true}
    ✓ should match !a/!b with /*/**/
    ✓ should match !a/!b with /*/**/ and {dot: true}
    ✓ should match !a/!b with /*/**/ and {nonegate: true}
    ✓ should match !a/!b/c with /*/**/
    ✓ should match !a/!b/c with /*/**/ and {dot: true}
    ✓ should match !a/!b/c with /*/**/ and {nonegate: true}
    ✓ should match !a/!b/c/d with /*/**/
    ✓ should match !a/!b/c/d with /*/**/ and {dot: true}
    ✓ should match !a/!b/c/d with /*/**/ and {nonegate: true}
    ✓ should match !a/b/.c.md with /*/**/
    ✓ should match !a/b/.c.md with /*/**/ and {dot: true}
    ✓ should match !a/b/.c.md with /*/**/ and {nonegate: true}
    ✓ should match /a/ with /*/**/
    ✓ should match /a/ with /*/**/ and {dot: true}
    ✓ should match /a/ with /*/**/ and {nonegate: true}
    ✓ should match /a/b with /*/**/
    ✓ should match /a/b with /*/**/ and {dot: true}
    ✓ should match /a/b with /*/**/ and {nonegate: true}
    ✓ should match /a/cb with /*/**/
    ✓ should match /a/cb with /*/**/ and {dot: true}
    ✓ should match /a/cb with /*/**/ and {nonegate: true}
    ✓ should match /a/bb with /*/**/
    ✓ should match /a/bb with /*/**/ and {dot: true}
    ✓ should match /a/bb with /*/**/ and {nonegate: true}
    ✓ should match /a/b/c with /*/**/
    ✓ should match /a/b/c with /*/**/ and {dot: true}
    ✓ should match /a/b/c with /*/**/ and {nonegate: true}
    ✓ should match /a/b/c/ with /*/**/
    ✓ should match /a/b/c/ with /*/**/ and {dot: true}
    ✓ should match /a/b/c/ with /*/**/ and {nonegate: true}
    ✓ should match /a/b/c/d with /*/**/
    ✓ should match /a/b/c/d with /*/**/ and {dot: true}
    ✓ should match /a/b/c/d with /*/**/ and {nonegate: true}
    ✓ should match /a/b/c/d/ with /*/**/
    ✓ should match /a/b/c/d/ with /*/**/ and {dot: true}
    ✓ should match /a/b/c/d/ with /*/**/ and {nonegate: true}
    ✓ should match . with /*/**/
    ✓ should match . with /*/**/ and {dot: true}
    ✓ should match . with /*/**/ and {nonegate: true}
    ✓ should match ./ with /*/**/
    ✓ should match ./ with /*/**/ and {dot: true}
    ✓ should match ./ with /*/**/ and {nonegate: true}
    ✓ should match .. with /*/**/
    ✓ should match .. with /*/**/ and {dot: true}
    ✓ should match .. with /*/**/ and {nonegate: true}
    ✓ should match ../c with /*/**/
    ✓ should match ../c with /*/**/ and {dot: true}
    ✓ should match ../c with /*/**/ and {nonegate: true}
    ✓ should match ../c with /*/**/
    ✓ should match ../c with /*/**/ and {dot: true}
    ✓ should match ../c with /*/**/ and {nonegate: true}
    ✓ should match ./../c with /*/**/
    ✓ should match ./../c with /*/**/ and {dot: true}
    ✓ should match ./../c with /*/**/ and {nonegate: true}
    ✓ should match ./a/../c with /*/**/
    ✓ should match ./a/../c with /*/**/ and {dot: true}
    ✓ should match ./a/../c with /*/**/ and {nonegate: true}
    ✓ should match /.. with /*/**/
    ✓ should match /.. with /*/**/ and {dot: true}
    ✓ should match /.. with /*/**/ and {nonegate: true}
    ✓ should match /../c with /*/**/
    ✓ should match /../c with /*/**/ and {dot: true}
    ✓ should match /../c with /*/**/ and {nonegate: true}
    ✓ should match /../.c with /*/**/
    ✓ should match /../.c with /*/**/ and {dot: true}
    ✓ should match /../.c with /*/**/ and {nonegate: true}
    ✓ should match /../.c/ with /*/**/
    ✓ should match /../.c/ with /*/**/ and {dot: true}
    ✓ should match /../.c/ with /*/**/ and {nonegate: true}
    ✓ should match /a/../c with /*/**/
    ✓ should match /a/../c with /*/**/ and {dot: true}
    ✓ should match /a/../c with /*/**/ and {nonegate: true}
    ✓ should match a/../c with /*/**/
    ✓ should match a/../c with /*/**/ and {dot: true}
    ✓ should match a/../c with /*/**/ and {nonegate: true}
    ✓ should match ../.b/.c with /*/**/
    ✓ should match ../.b/.c with /*/**/ and {dot: true}
    ✓ should match ../.b/.c with /*/**/ and {nonegate: true}
    ✓ should match ../b/.c with /*/**/
    ✓ should match ../b/.c with /*/**/ and {dot: true}
    ✓ should match ../b/.c with /*/**/ and {nonegate: true}
    ✓ should match ./.b/.c with /*/**/
    ✓ should match ./.b/.c with /*/**/ and {dot: true}
    ✓ should match ./.b/.c with /*/**/ and {nonegate: true}
    ✓ should match ./b/.c with /*/**/
    ✓ should match ./b/.c with /*/**/ and {dot: true}
    ✓ should match ./b/.c with /*/**/ and {nonegate: true}
    ✓ should match .b with /*/**/
    ✓ should match .b with /*/**/ and {dot: true}
    ✓ should match .b with /*/**/ and {nonegate: true}
    ✓ should match .b.c with /*/**/
    ✓ should match .b.c with /*/**/ and {dot: true}
    ✓ should match .b.c with /*/**/ and {nonegate: true}
    ✓ should match .b.c/ with /*/**/
    ✓ should match .b.c/ with /*/**/ and {dot: true}
    ✓ should match .b.c/ with /*/**/ and {nonegate: true}
    ✓ should match .b/ with /*/**/
    ✓ should match .b/ with /*/**/ and {dot: true}
    ✓ should match .b/ with /*/**/ and {nonegate: true}
    ✓ should match .b/.c with /*/**/
    ✓ should match .b/.c with /*/**/ and {dot: true}
    ✓ should match .b/.c with /*/**/ and {nonegate: true}
    ✓ should match .b/c with /*/**/
    ✓ should match .b/c with /*/**/ and {dot: true}
    ✓ should match .b/c with /*/**/ and {nonegate: true}
    ✓ should match b/.c with /*/**/
    ✓ should match b/.c with /*/**/ and {dot: true}
    ✓ should match b/.c with /*/**/ and {nonegate: true}
    ✓ should match b/.c/ with /*/**/
    ✓ should match b/.c/ with /*/**/ and {dot: true}
    ✓ should match b/.c/ with /*/**/ and {nonegate: true}
    ✓ should match a/+b/c with /*/**/
    ✓ should match a/+b/c with /*/**/ and {dot: true}
    ✓ should match a/+b/c with /*/**/ and {nonegate: true}
    ✓ should match +a/+b/c with /*/**/
    ✓ should match +a/+b/c with /*/**/ and {dot: true}
    ✓ should match +a/+b/c with /*/**/ and {nonegate: true}
    ✓ should match a (foo) with /*/**/
    ✓ should match a (foo) with /*/**/ and {dot: true}
    ✓ should match a (foo) with /*/**/ and {nonegate: true}
    ✓ should match a (foo)/(bar) with /*/**/
    ✓ should match a (foo)/(bar) with /*/**/ and {dot: true}
    ✓ should match a (foo)/(bar) with /*/**/ and {nonegate: true}
    ✓ should match a/b/c (1) with /*/**/
    ✓ should match a/b/c (1) with /*/**/ and {dot: true}
    ✓ should match a/b/c (1) with /*/**/ and {nonegate: true}
    ✓ should match a/b (2)/c (1) with /*/**/
    ✓ should match a/b (2)/c (1) with /*/**/ and {dot: true}
    ✓ should match a/b (2)/c (1) with /*/**/ and {nonegate: true}
    ✓ should match a/b/c [def] with /*/**/
    ✓ should match a/b/c [def] with /*/**/ and {dot: true}
    ✓ should match a/b/c [def] with /*/**/ and {nonegate: true}
    ✓ should match a with /*/**/*
    ✓ should match a with /*/**/* and {dot: true}
    ✓ should match a with /*/**/* and {nonegate: true}
    ✓ should match a.md with /*/**/*
    ✓ should match a.md with /*/**/* and {dot: true}
    ✓ should match a.md with /*/**/* and {nonegate: true}
    ✓ should match a.js with /*/**/*
    ✓ should match a.js with /*/**/* and {dot: true}
    ✓ should match a.js with /*/**/* and {nonegate: true}
    ✓ should match a/ with /*/**/*
    ✓ should match a/ with /*/**/* and {dot: true}
    ✓ should match a/ with /*/**/* and {nonegate: true}
    ✓ should match a/b with /*/**/*
    ✓ should match a/b with /*/**/* and {dot: true}
    ✓ should match a/b with /*/**/* and {nonegate: true}
    ✓ should match a/b/.c.md with /*/**/*
    ✓ should match a/b/.c.md with /*/**/* and {dot: true}
    ✓ should match a/b/.c.md with /*/**/* and {nonegate: true}
    ✓ should match a/b/c with /*/**/*
    ✓ should match a/b/c with /*/**/* and {dot: true}
    ✓ should match a/b/c with /*/**/* and {nonegate: true}
    ✓ should match a/b/c.md with /*/**/*
    ✓ should match a/b/c.md with /*/**/* and {dot: true}
    ✓ should match a/b/c.md with /*/**/* and {nonegate: true}
    ✓ should match a/b/c/ with /*/**/*
    ✓ should match a/b/c/ with /*/**/* and {dot: true}
    ✓ should match a/b/c/ with /*/**/* and {nonegate: true}
    ✓ should match a/b/c/d with /*/**/*
    ✓ should match a/b/c/d with /*/**/* and {dot: true}
    ✓ should match a/b/c/d with /*/**/* and {nonegate: true}
    ✓ should match a/b/c/d/ with /*/**/*
    ✓ should match a/b/c/d/ with /*/**/* and {dot: true}
    ✓ should match a/b/c/d/ with /*/**/* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with /*/**/*
    ✓ should match a/b/c/d/e/f/z.js with /*/**/* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with /*/**/* and {nonegate: true}
    ✓ should match a/b/c/z.js with /*/**/*
    ✓ should match a/b/c/z.js with /*/**/* and {dot: true}
    ✓ should match a/b/c/z.js with /*/**/* and {nonegate: true}
    ✓ should match a/bb with /*/**/*
    ✓ should match a/bb with /*/**/* and {dot: true}
    ✓ should match a/bb with /*/**/* and {nonegate: true}
    ✓ should match a/cb with /*/**/*
    ✓ should match a/cb with /*/**/* and {dot: true}
    ✓ should match a/cb with /*/**/* and {nonegate: true}
    ✓ should match abbbz with /*/**/*
    ✓ should match abbbz with /*/**/* and {dot: true}
    ✓ should match abbbz with /*/**/* and {nonegate: true}
    ✓ should match abc with /*/**/*
    ✓ should match abc with /*/**/* and {dot: true}
    ✓ should match abc with /*/**/* and {nonegate: true}
    ✓ should match abd with /*/**/*
    ✓ should match abd with /*/**/* and {dot: true}
    ✓ should match abd with /*/**/* and {nonegate: true}
    ✓ should match z.js with /*/**/*
    ✓ should match z.js with /*/**/* and {dot: true}
    ✓ should match z.js with /*/**/* and {nonegate: true}
    ✓ should match za.js with /*/**/*
    ✓ should match za.js with /*/**/* and {dot: true}
    ✓ should match za.js with /*/**/* and {nonegate: true}
    ✓ should match !a.js with /*/**/*
    ✓ should match !a.js with /*/**/* and {dot: true}
    ✓ should match !a.js with /*/**/* and {nonegate: true}
    ✓ should match !a/b with /*/**/*
    ✓ should match !a/b with /*/**/* and {dot: true}
    ✓ should match !a/b with /*/**/* and {nonegate: true}
    ✓ should match !a/b/ with /*/**/*
    ✓ should match !a/b/ with /*/**/* and {dot: true}
    ✓ should match !a/b/ with /*/**/* and {nonegate: true}
    ✓ should match !a/b/c with /*/**/*
    ✓ should match !a/b/c with /*/**/* and {dot: true}
    ✓ should match !a/b/c with /*/**/* and {nonegate: true}
    ✓ should match !a/b/c/ with /*/**/*
    ✓ should match !a/b/c/ with /*/**/* and {dot: true}
    ✓ should match !a/b/c/ with /*/**/* and {nonegate: true}
    ✓ should match !a/!b with /*/**/*
    ✓ should match !a/!b with /*/**/* and {dot: true}
    ✓ should match !a/!b with /*/**/* and {nonegate: true}
    ✓ should match !a/!b/c with /*/**/*
    ✓ should match !a/!b/c with /*/**/* and {dot: true}
    ✓ should match !a/!b/c with /*/**/* and {nonegate: true}
    ✓ should match !a/!b/c/d with /*/**/*
    ✓ should match !a/!b/c/d with /*/**/* and {dot: true}
    ✓ should match !a/!b/c/d with /*/**/* and {nonegate: true}
    ✓ should match !a/b/.c.md with /*/**/*
    ✓ should match !a/b/.c.md with /*/**/* and {dot: true}
    ✓ should match !a/b/.c.md with /*/**/* and {nonegate: true}
    ✓ should match /a/ with /*/**/*
    ✓ should match /a/ with /*/**/* and {dot: true}
    ✓ should match /a/ with /*/**/* and {nonegate: true}
    ✓ should match /a/b with /*/**/*
    ✓ should match /a/b with /*/**/* and {dot: true}
    ✓ should match /a/b with /*/**/* and {nonegate: true}
    ✓ should match /a/cb with /*/**/*
    ✓ should match /a/cb with /*/**/* and {dot: true}
    ✓ should match /a/cb with /*/**/* and {nonegate: true}
    ✓ should match /a/bb with /*/**/*
    ✓ should match /a/bb with /*/**/* and {dot: true}
    ✓ should match /a/bb with /*/**/* and {nonegate: true}
    ✓ should match /a/b/c with /*/**/*
    ✓ should match /a/b/c with /*/**/* and {dot: true}
    ✓ should match /a/b/c with /*/**/* and {nonegate: true}
    ✓ should match /a/b/c/ with /*/**/*
    ✓ should match /a/b/c/ with /*/**/* and {dot: true}
    ✓ should match /a/b/c/ with /*/**/* and {nonegate: true}
    ✓ should match /a/b/c/d with /*/**/*
    ✓ should match /a/b/c/d with /*/**/* and {dot: true}
    ✓ should match /a/b/c/d with /*/**/* and {nonegate: true}
    ✓ should match /a/b/c/d/ with /*/**/*
    ✓ should match /a/b/c/d/ with /*/**/* and {dot: true}
    ✓ should match /a/b/c/d/ with /*/**/* and {nonegate: true}
    ✓ should match . with /*/**/*
    ✓ should match . with /*/**/* and {dot: true}
    ✓ should match . with /*/**/* and {nonegate: true}
    ✓ should match ./ with /*/**/*
    ✓ should match ./ with /*/**/* and {dot: true}
    ✓ should match ./ with /*/**/* and {nonegate: true}
    ✓ should match .. with /*/**/*
    ✓ should match .. with /*/**/* and {dot: true}
    ✓ should match .. with /*/**/* and {nonegate: true}
    ✓ should match ../c with /*/**/*
    ✓ should match ../c with /*/**/* and {dot: true}
    ✓ should match ../c with /*/**/* and {nonegate: true}
    ✓ should match ../c with /*/**/*
    ✓ should match ../c with /*/**/* and {dot: true}
    ✓ should match ../c with /*/**/* and {nonegate: true}
    ✓ should match ./../c with /*/**/*
    ✓ should match ./../c with /*/**/* and {dot: true}
    ✓ should match ./../c with /*/**/* and {nonegate: true}
    ✓ should match ./a/../c with /*/**/*
    ✓ should match ./a/../c with /*/**/* and {dot: true}
    ✓ should match ./a/../c with /*/**/* and {nonegate: true}
    ✓ should match /.. with /*/**/*
    ✓ should match /.. with /*/**/* and {dot: true}
    ✓ should match /.. with /*/**/* and {nonegate: true}
    ✓ should match /../c with /*/**/*
    ✓ should match /../c with /*/**/* and {dot: true}
    ✓ should match /../c with /*/**/* and {nonegate: true}
    ✓ should match /../.c with /*/**/*
    ✓ should match /../.c with /*/**/* and {dot: true}
    ✓ should match /../.c with /*/**/* and {nonegate: true}
    ✓ should match /../.c/ with /*/**/*
    ✓ should match /../.c/ with /*/**/* and {dot: true}
    ✓ should match /../.c/ with /*/**/* and {nonegate: true}
    ✓ should match /a/../c with /*/**/*
    ✓ should match /a/../c with /*/**/* and {dot: true}
    ✓ should match /a/../c with /*/**/* and {nonegate: true}
    ✓ should match a/../c with /*/**/*
    ✓ should match a/../c with /*/**/* and {dot: true}
    ✓ should match a/../c with /*/**/* and {nonegate: true}
    ✓ should match ../.b/.c with /*/**/*
    ✓ should match ../.b/.c with /*/**/* and {dot: true}
    ✓ should match ../.b/.c with /*/**/* and {nonegate: true}
    ✓ should match ../b/.c with /*/**/*
    ✓ should match ../b/.c with /*/**/* and {dot: true}
    ✓ should match ../b/.c with /*/**/* and {nonegate: true}
    ✓ should match ./.b/.c with /*/**/*
    ✓ should match ./.b/.c with /*/**/* and {dot: true}
    ✓ should match ./.b/.c with /*/**/* and {nonegate: true}
    ✓ should match ./b/.c with /*/**/*
    ✓ should match ./b/.c with /*/**/* and {dot: true}
    ✓ should match ./b/.c with /*/**/* and {nonegate: true}
    ✓ should match .b with /*/**/*
    ✓ should match .b with /*/**/* and {dot: true}
    ✓ should match .b with /*/**/* and {nonegate: true}
    ✓ should match .b.c with /*/**/*
    ✓ should match .b.c with /*/**/* and {dot: true}
    ✓ should match .b.c with /*/**/* and {nonegate: true}
    ✓ should match .b.c/ with /*/**/*
    ✓ should match .b.c/ with /*/**/* and {dot: true}
    ✓ should match .b.c/ with /*/**/* and {nonegate: true}
    ✓ should match .b/ with /*/**/*
    ✓ should match .b/ with /*/**/* and {dot: true}
    ✓ should match .b/ with /*/**/* and {nonegate: true}
    ✓ should match .b/.c with /*/**/*
    ✓ should match .b/.c with /*/**/* and {dot: true}
    ✓ should match .b/.c with /*/**/* and {nonegate: true}
    ✓ should match .b/c with /*/**/*
    ✓ should match .b/c with /*/**/* and {dot: true}
    ✓ should match .b/c with /*/**/* and {nonegate: true}
    ✓ should match b/.c with /*/**/*
    ✓ should match b/.c with /*/**/* and {dot: true}
    ✓ should match b/.c with /*/**/* and {nonegate: true}
    ✓ should match b/.c/ with /*/**/*
    ✓ should match b/.c/ with /*/**/* and {dot: true}
    ✓ should match b/.c/ with /*/**/* and {nonegate: true}
    ✓ should match a/+b/c with /*/**/*
    ✓ should match a/+b/c with /*/**/* and {dot: true}
    ✓ should match a/+b/c with /*/**/* and {nonegate: true}
    ✓ should match +a/+b/c with /*/**/*
    ✓ should match +a/+b/c with /*/**/* and {dot: true}
    ✓ should match +a/+b/c with /*/**/* and {nonegate: true}
    ✓ should match a (foo) with /*/**/*
    ✓ should match a (foo) with /*/**/* and {dot: true}
    ✓ should match a (foo) with /*/**/* and {nonegate: true}
    ✓ should match a (foo)/(bar) with /*/**/*
    ✓ should match a (foo)/(bar) with /*/**/* and {dot: true}
    ✓ should match a (foo)/(bar) with /*/**/* and {nonegate: true}
    ✓ should match a/b/c (1) with /*/**/*
    ✓ should match a/b/c (1) with /*/**/* and {dot: true}
    ✓ should match a/b/c (1) with /*/**/* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with /*/**/*
    ✓ should match a/b (2)/c (1) with /*/**/* and {dot: true}
    ✓ should match a/b (2)/c (1) with /*/**/* and {nonegate: true}
    ✓ should match a/b/c [def] with /*/**/*
    ✓ should match a/b/c [def] with /*/**/* and {dot: true}
    ✓ should match a/b/c [def] with /*/**/* and {nonegate: true}
    ✓ should match a with /*/*/
    ✓ should match a with /*/*/ and {dot: true}
    ✓ should match a with /*/*/ and {nonegate: true}
    ✓ should match a.md with /*/*/
    ✓ should match a.md with /*/*/ and {dot: true}
    ✓ should match a.md with /*/*/ and {nonegate: true}
    ✓ should match a.js with /*/*/
    ✓ should match a.js with /*/*/ and {dot: true}
    ✓ should match a.js with /*/*/ and {nonegate: true}
    ✓ should match a/ with /*/*/
    ✓ should match a/ with /*/*/ and {dot: true}
    ✓ should match a/ with /*/*/ and {nonegate: true}
    ✓ should match a/b with /*/*/
    ✓ should match a/b with /*/*/ and {dot: true}
    ✓ should match a/b with /*/*/ and {nonegate: true}
    ✓ should match a/b/.c.md with /*/*/
    ✓ should match a/b/.c.md with /*/*/ and {dot: true}
    ✓ should match a/b/.c.md with /*/*/ and {nonegate: true}
    ✓ should match a/b/c with /*/*/
    ✓ should match a/b/c with /*/*/ and {dot: true}
    ✓ should match a/b/c with /*/*/ and {nonegate: true}
    ✓ should match a/b/c.md with /*/*/
    ✓ should match a/b/c.md with /*/*/ and {dot: true}
    ✓ should match a/b/c.md with /*/*/ and {nonegate: true}
    ✓ should match a/b/c/ with /*/*/
    ✓ should match a/b/c/ with /*/*/ and {dot: true}
    ✓ should match a/b/c/ with /*/*/ and {nonegate: true}
    ✓ should match a/b/c/d with /*/*/
    ✓ should match a/b/c/d with /*/*/ and {dot: true}
    ✓ should match a/b/c/d with /*/*/ and {nonegate: true}
    ✓ should match a/b/c/d/ with /*/*/
    ✓ should match a/b/c/d/ with /*/*/ and {dot: true}
    ✓ should match a/b/c/d/ with /*/*/ and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with /*/*/
    ✓ should match a/b/c/d/e/f/z.js with /*/*/ and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with /*/*/ and {nonegate: true}
    ✓ should match a/b/c/z.js with /*/*/
    ✓ should match a/b/c/z.js with /*/*/ and {dot: true}
    ✓ should match a/b/c/z.js with /*/*/ and {nonegate: true}
    ✓ should match a/bb with /*/*/
    ✓ should match a/bb with /*/*/ and {dot: true}
    ✓ should match a/bb with /*/*/ and {nonegate: true}
    ✓ should match a/cb with /*/*/
    ✓ should match a/cb with /*/*/ and {dot: true}
    ✓ should match a/cb with /*/*/ and {nonegate: true}
    ✓ should match abbbz with /*/*/
    ✓ should match abbbz with /*/*/ and {dot: true}
    ✓ should match abbbz with /*/*/ and {nonegate: true}
    ✓ should match abc with /*/*/
    ✓ should match abc with /*/*/ and {dot: true}
    ✓ should match abc with /*/*/ and {nonegate: true}
    ✓ should match abd with /*/*/
    ✓ should match abd with /*/*/ and {dot: true}
    ✓ should match abd with /*/*/ and {nonegate: true}
    ✓ should match z.js with /*/*/
    ✓ should match z.js with /*/*/ and {dot: true}
    ✓ should match z.js with /*/*/ and {nonegate: true}
    ✓ should match za.js with /*/*/
    ✓ should match za.js with /*/*/ and {dot: true}
    ✓ should match za.js with /*/*/ and {nonegate: true}
    ✓ should match !a.js with /*/*/
    ✓ should match !a.js with /*/*/ and {dot: true}
    ✓ should match !a.js with /*/*/ and {nonegate: true}
    ✓ should match !a/b with /*/*/
    ✓ should match !a/b with /*/*/ and {dot: true}
    ✓ should match !a/b with /*/*/ and {nonegate: true}
    ✓ should match !a/b/ with /*/*/
    ✓ should match !a/b/ with /*/*/ and {dot: true}
    ✓ should match !a/b/ with /*/*/ and {nonegate: true}
    ✓ should match !a/b/c with /*/*/
    ✓ should match !a/b/c with /*/*/ and {dot: true}
    ✓ should match !a/b/c with /*/*/ and {nonegate: true}
    ✓ should match !a/b/c/ with /*/*/
    ✓ should match !a/b/c/ with /*/*/ and {dot: true}
    ✓ should match !a/b/c/ with /*/*/ and {nonegate: true}
    ✓ should match !a/!b with /*/*/
    ✓ should match !a/!b with /*/*/ and {dot: true}
    ✓ should match !a/!b with /*/*/ and {nonegate: true}
    ✓ should match !a/!b/c with /*/*/
    ✓ should match !a/!b/c with /*/*/ and {dot: true}
    ✓ should match !a/!b/c with /*/*/ and {nonegate: true}
    ✓ should match !a/!b/c/d with /*/*/
    ✓ should match !a/!b/c/d with /*/*/ and {dot: true}
    ✓ should match !a/!b/c/d with /*/*/ and {nonegate: true}
    ✓ should match !a/b/.c.md with /*/*/
    ✓ should match !a/b/.c.md with /*/*/ and {dot: true}
    ✓ should match !a/b/.c.md with /*/*/ and {nonegate: true}
    ✓ should match /a/ with /*/*/
    ✓ should match /a/ with /*/*/ and {dot: true}
    ✓ should match /a/ with /*/*/ and {nonegate: true}
    ✓ should match /a/b with /*/*/
    ✓ should match /a/b with /*/*/ and {dot: true}
    ✓ should match /a/b with /*/*/ and {nonegate: true}
    ✓ should match /a/cb with /*/*/
    ✓ should match /a/cb with /*/*/ and {dot: true}
    ✓ should match /a/cb with /*/*/ and {nonegate: true}
    ✓ should match /a/bb with /*/*/
    ✓ should match /a/bb with /*/*/ and {dot: true}
    ✓ should match /a/bb with /*/*/ and {nonegate: true}
    ✓ should match /a/b/c with /*/*/
    ✓ should match /a/b/c with /*/*/ and {dot: true}
    ✓ should match /a/b/c with /*/*/ and {nonegate: true}
    ✓ should match /a/b/c/ with /*/*/
    ✓ should match /a/b/c/ with /*/*/ and {dot: true}
    ✓ should match /a/b/c/ with /*/*/ and {nonegate: true}
    ✓ should match /a/b/c/d with /*/*/
    ✓ should match /a/b/c/d with /*/*/ and {dot: true}
    ✓ should match /a/b/c/d with /*/*/ and {nonegate: true}
    ✓ should match /a/b/c/d/ with /*/*/
    ✓ should match /a/b/c/d/ with /*/*/ and {dot: true}
    ✓ should match /a/b/c/d/ with /*/*/ and {nonegate: true}
    ✓ should match . with /*/*/
    ✓ should match . with /*/*/ and {dot: true}
    ✓ should match . with /*/*/ and {nonegate: true}
    ✓ should match ./ with /*/*/
    ✓ should match ./ with /*/*/ and {dot: true}
    ✓ should match ./ with /*/*/ and {nonegate: true}
    ✓ should match .. with /*/*/
    ✓ should match .. with /*/*/ and {dot: true}
    ✓ should match .. with /*/*/ and {nonegate: true}
    ✓ should match ../c with /*/*/
    ✓ should match ../c with /*/*/ and {dot: true}
    ✓ should match ../c with /*/*/ and {nonegate: true}
    ✓ should match ../c with /*/*/
    ✓ should match ../c with /*/*/ and {dot: true}
    ✓ should match ../c with /*/*/ and {nonegate: true}
    ✓ should match ./../c with /*/*/
    ✓ should match ./../c with /*/*/ and {dot: true}
    ✓ should match ./../c with /*/*/ and {nonegate: true}
    ✓ should match ./a/../c with /*/*/
    ✓ should match ./a/../c with /*/*/ and {dot: true}
    ✓ should match ./a/../c with /*/*/ and {nonegate: true}
    ✓ should match /.. with /*/*/
    ✓ should match /.. with /*/*/ and {dot: true}
    ✓ should match /.. with /*/*/ and {nonegate: true}
    ✓ should match /../c with /*/*/
    ✓ should match /../c with /*/*/ and {dot: true}
    ✓ should match /../c with /*/*/ and {nonegate: true}
    ✓ should match /../.c with /*/*/
    ✓ should match /../.c with /*/*/ and {dot: true}
    ✓ should match /../.c with /*/*/ and {nonegate: true}
    ✓ should match /../.c/ with /*/*/
    ✓ should match /../.c/ with /*/*/ and {dot: true}
    ✓ should match /../.c/ with /*/*/ and {nonegate: true}
    ✓ should match /a/../c with /*/*/
    ✓ should match /a/../c with /*/*/ and {dot: true}
    ✓ should match /a/../c with /*/*/ and {nonegate: true}
    ✓ should match a/../c with /*/*/
    ✓ should match a/../c with /*/*/ and {dot: true}
    ✓ should match a/../c with /*/*/ and {nonegate: true}
    ✓ should match ../.b/.c with /*/*/
    ✓ should match ../.b/.c with /*/*/ and {dot: true}
    ✓ should match ../.b/.c with /*/*/ and {nonegate: true}
    ✓ should match ../b/.c with /*/*/
    ✓ should match ../b/.c with /*/*/ and {dot: true}
    ✓ should match ../b/.c with /*/*/ and {nonegate: true}
    ✓ should match ./.b/.c with /*/*/
    ✓ should match ./.b/.c with /*/*/ and {dot: true}
    ✓ should match ./.b/.c with /*/*/ and {nonegate: true}
    ✓ should match ./b/.c with /*/*/
    ✓ should match ./b/.c with /*/*/ and {dot: true}
    ✓ should match ./b/.c with /*/*/ and {nonegate: true}
    ✓ should match .b with /*/*/
    ✓ should match .b with /*/*/ and {dot: true}
    ✓ should match .b with /*/*/ and {nonegate: true}
    ✓ should match .b.c with /*/*/
    ✓ should match .b.c with /*/*/ and {dot: true}
    ✓ should match .b.c with /*/*/ and {nonegate: true}
    ✓ should match .b.c/ with /*/*/
    ✓ should match .b.c/ with /*/*/ and {dot: true}
    ✓ should match .b.c/ with /*/*/ and {nonegate: true}
    ✓ should match .b/ with /*/*/
    ✓ should match .b/ with /*/*/ and {dot: true}
    ✓ should match .b/ with /*/*/ and {nonegate: true}
    ✓ should match .b/.c with /*/*/
    ✓ should match .b/.c with /*/*/ and {dot: true}
    ✓ should match .b/.c with /*/*/ and {nonegate: true}
    ✓ should match .b/c with /*/*/
    ✓ should match .b/c with /*/*/ and {dot: true}
    ✓ should match .b/c with /*/*/ and {nonegate: true}
    ✓ should match b/.c with /*/*/
    ✓ should match b/.c with /*/*/ and {dot: true}
    ✓ should match b/.c with /*/*/ and {nonegate: true}
    ✓ should match b/.c/ with /*/*/
    ✓ should match b/.c/ with /*/*/ and {dot: true}
    ✓ should match b/.c/ with /*/*/ and {nonegate: true}
    ✓ should match a/+b/c with /*/*/
    ✓ should match a/+b/c with /*/*/ and {dot: true}
    ✓ should match a/+b/c with /*/*/ and {nonegate: true}
    ✓ should match +a/+b/c with /*/*/
    ✓ should match +a/+b/c with /*/*/ and {dot: true}
    ✓ should match +a/+b/c with /*/*/ and {nonegate: true}
    ✓ should match a (foo) with /*/*/
    ✓ should match a (foo) with /*/*/ and {dot: true}
    ✓ should match a (foo) with /*/*/ and {nonegate: true}
    ✓ should match a (foo)/(bar) with /*/*/
    ✓ should match a (foo)/(bar) with /*/*/ and {dot: true}
    ✓ should match a (foo)/(bar) with /*/*/ and {nonegate: true}
    ✓ should match a/b/c (1) with /*/*/
    ✓ should match a/b/c (1) with /*/*/ and {dot: true}
    ✓ should match a/b/c (1) with /*/*/ and {nonegate: true}
    ✓ should match a/b (2)/c (1) with /*/*/
    ✓ should match a/b (2)/c (1) with /*/*/ and {dot: true}
    ✓ should match a/b (2)/c (1) with /*/*/ and {nonegate: true}
    ✓ should match a/b/c [def] with /*/*/
    ✓ should match a/b/c [def] with /*/*/ and {dot: true}
    ✓ should match a/b/c [def] with /*/*/ and {nonegate: true}
    ✓ should match a with /*/*/*
    ✓ should match a with /*/*/* and {dot: true}
    ✓ should match a with /*/*/* and {nonegate: true}
    ✓ should match a.md with /*/*/*
    ✓ should match a.md with /*/*/* and {dot: true}
    ✓ should match a.md with /*/*/* and {nonegate: true}
    ✓ should match a.js with /*/*/*
    ✓ should match a.js with /*/*/* and {dot: true}
    ✓ should match a.js with /*/*/* and {nonegate: true}
    ✓ should match a/ with /*/*/*
    ✓ should match a/ with /*/*/* and {dot: true}
    ✓ should match a/ with /*/*/* and {nonegate: true}
    ✓ should match a/b with /*/*/*
    ✓ should match a/b with /*/*/* and {dot: true}
    ✓ should match a/b with /*/*/* and {nonegate: true}
    ✓ should match a/b/.c.md with /*/*/*
    ✓ should match a/b/.c.md with /*/*/* and {dot: true}
    ✓ should match a/b/.c.md with /*/*/* and {nonegate: true}
    ✓ should match a/b/c with /*/*/*
    ✓ should match a/b/c with /*/*/* and {dot: true}
    ✓ should match a/b/c with /*/*/* and {nonegate: true}
    ✓ should match a/b/c.md with /*/*/*
    ✓ should match a/b/c.md with /*/*/* and {dot: true}
    ✓ should match a/b/c.md with /*/*/* and {nonegate: true}
    ✓ should match a/b/c/ with /*/*/*
    ✓ should match a/b/c/ with /*/*/* and {dot: true}
    ✓ should match a/b/c/ with /*/*/* and {nonegate: true}
    ✓ should match a/b/c/d with /*/*/*
    ✓ should match a/b/c/d with /*/*/* and {dot: true}
    ✓ should match a/b/c/d with /*/*/* and {nonegate: true}
    ✓ should match a/b/c/d/ with /*/*/*
    ✓ should match a/b/c/d/ with /*/*/* and {dot: true}
    ✓ should match a/b/c/d/ with /*/*/* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with /*/*/*
    ✓ should match a/b/c/d/e/f/z.js with /*/*/* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with /*/*/* and {nonegate: true}
    ✓ should match a/b/c/z.js with /*/*/*
    ✓ should match a/b/c/z.js with /*/*/* and {dot: true}
    ✓ should match a/b/c/z.js with /*/*/* and {nonegate: true}
    ✓ should match a/bb with /*/*/*
    ✓ should match a/bb with /*/*/* and {dot: true}
    ✓ should match a/bb with /*/*/* and {nonegate: true}
    ✓ should match a/cb with /*/*/*
    ✓ should match a/cb with /*/*/* and {dot: true}
    ✓ should match a/cb with /*/*/* and {nonegate: true}
    ✓ should match abbbz with /*/*/*
    ✓ should match abbbz with /*/*/* and {dot: true}
    ✓ should match abbbz with /*/*/* and {nonegate: true}
    ✓ should match abc with /*/*/*
    ✓ should match abc with /*/*/* and {dot: true}
    ✓ should match abc with /*/*/* and {nonegate: true}
    ✓ should match abd with /*/*/*
    ✓ should match abd with /*/*/* and {dot: true}
    ✓ should match abd with /*/*/* and {nonegate: true}
    ✓ should match z.js with /*/*/*
    ✓ should match z.js with /*/*/* and {dot: true}
    ✓ should match z.js with /*/*/* and {nonegate: true}
    ✓ should match za.js with /*/*/*
    ✓ should match za.js with /*/*/* and {dot: true}
    ✓ should match za.js with /*/*/* and {nonegate: true}
    ✓ should match !a.js with /*/*/*
    ✓ should match !a.js with /*/*/* and {dot: true}
    ✓ should match !a.js with /*/*/* and {nonegate: true}
    ✓ should match !a/b with /*/*/*
    ✓ should match !a/b with /*/*/* and {dot: true}
    ✓ should match !a/b with /*/*/* and {nonegate: true}
    ✓ should match !a/b/ with /*/*/*
    ✓ should match !a/b/ with /*/*/* and {dot: true}
    ✓ should match !a/b/ with /*/*/* and {nonegate: true}
    ✓ should match !a/b/c with /*/*/*
    ✓ should match !a/b/c with /*/*/* and {dot: true}
    ✓ should match !a/b/c with /*/*/* and {nonegate: true}
    ✓ should match !a/b/c/ with /*/*/*
    ✓ should match !a/b/c/ with /*/*/* and {dot: true}
    ✓ should match !a/b/c/ with /*/*/* and {nonegate: true}
    ✓ should match !a/!b with /*/*/*
    ✓ should match !a/!b with /*/*/* and {dot: true}
    ✓ should match !a/!b with /*/*/* and {nonegate: true}
    ✓ should match !a/!b/c with /*/*/*
    ✓ should match !a/!b/c with /*/*/* and {dot: true}
    ✓ should match !a/!b/c with /*/*/* and {nonegate: true}
    ✓ should match !a/!b/c/d with /*/*/*
    ✓ should match !a/!b/c/d with /*/*/* and {dot: true}
    ✓ should match !a/!b/c/d with /*/*/* and {nonegate: true}
    ✓ should match !a/b/.c.md with /*/*/*
    ✓ should match !a/b/.c.md with /*/*/* and {dot: true}
    ✓ should match !a/b/.c.md with /*/*/* and {nonegate: true}
    ✓ should match /a/ with /*/*/*
    ✓ should match /a/ with /*/*/* and {dot: true}
    ✓ should match /a/ with /*/*/* and {nonegate: true}
    ✓ should match /a/b with /*/*/*
    ✓ should match /a/b with /*/*/* and {dot: true}
    ✓ should match /a/b with /*/*/* and {nonegate: true}
    ✓ should match /a/cb with /*/*/*
    ✓ should match /a/cb with /*/*/* and {dot: true}
    ✓ should match /a/cb with /*/*/* and {nonegate: true}
    ✓ should match /a/bb with /*/*/*
    ✓ should match /a/bb with /*/*/* and {dot: true}
    ✓ should match /a/bb with /*/*/* and {nonegate: true}
    ✓ should match /a/b/c with /*/*/*
    ✓ should match /a/b/c with /*/*/* and {dot: true}
    ✓ should match /a/b/c with /*/*/* and {nonegate: true}
    ✓ should match /a/b/c/ with /*/*/*
    ✓ should match /a/b/c/ with /*/*/* and {dot: true}
    ✓ should match /a/b/c/ with /*/*/* and {nonegate: true}
    ✓ should match /a/b/c/d with /*/*/*
    ✓ should match /a/b/c/d with /*/*/* and {dot: true}
    ✓ should match /a/b/c/d with /*/*/* and {nonegate: true}
    ✓ should match /a/b/c/d/ with /*/*/*
    ✓ should match /a/b/c/d/ with /*/*/* and {dot: true}
    ✓ should match /a/b/c/d/ with /*/*/* and {nonegate: true}
    ✓ should match . with /*/*/*
    ✓ should match . with /*/*/* and {dot: true}
    ✓ should match . with /*/*/* and {nonegate: true}
    ✓ should match ./ with /*/*/*
    ✓ should match ./ with /*/*/* and {dot: true}
    ✓ should match ./ with /*/*/* and {nonegate: true}
    ✓ should match .. with /*/*/*
    ✓ should match .. with /*/*/* and {dot: true}
    ✓ should match .. with /*/*/* and {nonegate: true}
    ✓ should match ../c with /*/*/*
    ✓ should match ../c with /*/*/* and {dot: true}
    ✓ should match ../c with /*/*/* and {nonegate: true}
    ✓ should match ../c with /*/*/*
    ✓ should match ../c with /*/*/* and {dot: true}
    ✓ should match ../c with /*/*/* and {nonegate: true}
    ✓ should match ./../c with /*/*/*
    ✓ should match ./../c with /*/*/* and {dot: true}
    ✓ should match ./../c with /*/*/* and {nonegate: true}
    ✓ should match ./a/../c with /*/*/*
    ✓ should match ./a/../c with /*/*/* and {dot: true}
    ✓ should match ./a/../c with /*/*/* and {nonegate: true}
    ✓ should match /.. with /*/*/*
    ✓ should match /.. with /*/*/* and {dot: true}
    ✓ should match /.. with /*/*/* and {nonegate: true}
    ✓ should match /../c with /*/*/*
    ✓ should match /../c with /*/*/* and {dot: true}
    ✓ should match /../c with /*/*/* and {nonegate: true}
    ✓ should match /../.c with /*/*/*
    ✓ should match /../.c with /*/*/* and {dot: true}
    ✓ should match /../.c with /*/*/* and {nonegate: true}
    ✓ should match /../.c/ with /*/*/*
    ✓ should match /../.c/ with /*/*/* and {dot: true}
    ✓ should match /../.c/ with /*/*/* and {nonegate: true}
    ✓ should match /a/../c with /*/*/*
    ✓ should match /a/../c with /*/*/* and {dot: true}
    ✓ should match /a/../c with /*/*/* and {nonegate: true}
    ✓ should match a/../c with /*/*/*
    ✓ should match a/../c with /*/*/* and {dot: true}
    ✓ should match a/../c with /*/*/* and {nonegate: true}
    ✓ should match ../.b/.c with /*/*/*
    ✓ should match ../.b/.c with /*/*/* and {dot: true}
    ✓ should match ../.b/.c with /*/*/* and {nonegate: true}
    ✓ should match ../b/.c with /*/*/*
    ✓ should match ../b/.c with /*/*/* and {dot: true}
    ✓ should match ../b/.c with /*/*/* and {nonegate: true}
    ✓ should match ./.b/.c with /*/*/*
    ✓ should match ./.b/.c with /*/*/* and {dot: true}
    ✓ should match ./.b/.c with /*/*/* and {nonegate: true}
    ✓ should match ./b/.c with /*/*/*
    ✓ should match ./b/.c with /*/*/* and {dot: true}
    ✓ should match ./b/.c with /*/*/* and {nonegate: true}
    ✓ should match .b with /*/*/*
    ✓ should match .b with /*/*/* and {dot: true}
    ✓ should match .b with /*/*/* and {nonegate: true}
    ✓ should match .b.c with /*/*/*
    ✓ should match .b.c with /*/*/* and {dot: true}
    ✓ should match .b.c with /*/*/* and {nonegate: true}
    ✓ should match .b.c/ with /*/*/*
    ✓ should match .b.c/ with /*/*/* and {dot: true}
    ✓ should match .b.c/ with /*/*/* and {nonegate: true}
    ✓ should match .b/ with /*/*/*
    ✓ should match .b/ with /*/*/* and {dot: true}
    ✓ should match .b/ with /*/*/* and {nonegate: true}
    ✓ should match .b/.c with /*/*/*
    ✓ should match .b/.c with /*/*/* and {dot: true}
    ✓ should match .b/.c with /*/*/* and {nonegate: true}
    ✓ should match .b/c with /*/*/*
    ✓ should match .b/c with /*/*/* and {dot: true}
    ✓ should match .b/c with /*/*/* and {nonegate: true}
    ✓ should match b/.c with /*/*/*
    ✓ should match b/.c with /*/*/* and {dot: true}
    ✓ should match b/.c with /*/*/* and {nonegate: true}
    ✓ should match b/.c/ with /*/*/*
    ✓ should match b/.c/ with /*/*/* and {dot: true}
    ✓ should match b/.c/ with /*/*/* and {nonegate: true}
    ✓ should match a/+b/c with /*/*/*
    ✓ should match a/+b/c with /*/*/* and {dot: true}
    ✓ should match a/+b/c with /*/*/* and {nonegate: true}
    ✓ should match +a/+b/c with /*/*/*
    ✓ should match +a/+b/c with /*/*/* and {dot: true}
    ✓ should match +a/+b/c with /*/*/* and {nonegate: true}
    ✓ should match a (foo) with /*/*/*
    ✓ should match a (foo) with /*/*/* and {dot: true}
    ✓ should match a (foo) with /*/*/* and {nonegate: true}
    ✓ should match a (foo)/(bar) with /*/*/*
    ✓ should match a (foo)/(bar) with /*/*/* and {dot: true}
    ✓ should match a (foo)/(bar) with /*/*/* and {nonegate: true}
    ✓ should match a/b/c (1) with /*/*/*
    ✓ should match a/b/c (1) with /*/*/* and {dot: true}
    ✓ should match a/b/c (1) with /*/*/* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with /*/*/*
    ✓ should match a/b (2)/c (1) with /*/*/* and {dot: true}
    ✓ should match a/b (2)/c (1) with /*/*/* and {nonegate: true}
    ✓ should match a/b/c [def] with /*/*/*
    ✓ should match a/b/c [def] with /*/*/* and {dot: true}
    ✓ should match a/b/c [def] with /*/*/* and {nonegate: true}
    ✓ should match a with /*/*/*/*
    ✓ should match a with /*/*/*/* and {dot: true}
    ✓ should match a with /*/*/*/* and {nonegate: true}
    ✓ should match a.md with /*/*/*/*
    ✓ should match a.md with /*/*/*/* and {dot: true}
    ✓ should match a.md with /*/*/*/* and {nonegate: true}
    ✓ should match a.js with /*/*/*/*
    ✓ should match a.js with /*/*/*/* and {dot: true}
    ✓ should match a.js with /*/*/*/* and {nonegate: true}
    ✓ should match a/ with /*/*/*/*
    ✓ should match a/ with /*/*/*/* and {dot: true}
    ✓ should match a/ with /*/*/*/* and {nonegate: true}
    ✓ should match a/b with /*/*/*/*
    ✓ should match a/b with /*/*/*/* and {dot: true}
    ✓ should match a/b with /*/*/*/* and {nonegate: true}
    ✓ should match a/b/.c.md with /*/*/*/*
    ✓ should match a/b/.c.md with /*/*/*/* and {dot: true}
    ✓ should match a/b/.c.md with /*/*/*/* and {nonegate: true}
    ✓ should match a/b/c with /*/*/*/*
    ✓ should match a/b/c with /*/*/*/* and {dot: true}
    ✓ should match a/b/c with /*/*/*/* and {nonegate: true}
    ✓ should match a/b/c.md with /*/*/*/*
    ✓ should match a/b/c.md with /*/*/*/* and {dot: true}
    ✓ should match a/b/c.md with /*/*/*/* and {nonegate: true}
    ✓ should match a/b/c/ with /*/*/*/*
    ✓ should match a/b/c/ with /*/*/*/* and {dot: true}
    ✓ should match a/b/c/ with /*/*/*/* and {nonegate: true}
    ✓ should match a/b/c/d with /*/*/*/*
    ✓ should match a/b/c/d with /*/*/*/* and {dot: true}
    ✓ should match a/b/c/d with /*/*/*/* and {nonegate: true}
    ✓ should match a/b/c/d/ with /*/*/*/*
    ✓ should match a/b/c/d/ with /*/*/*/* and {dot: true}
    ✓ should match a/b/c/d/ with /*/*/*/* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with /*/*/*/*
    ✓ should match a/b/c/d/e/f/z.js with /*/*/*/* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with /*/*/*/* and {nonegate: true}
    ✓ should match a/b/c/z.js with /*/*/*/*
    ✓ should match a/b/c/z.js with /*/*/*/* and {dot: true}
    ✓ should match a/b/c/z.js with /*/*/*/* and {nonegate: true}
    ✓ should match a/bb with /*/*/*/*
    ✓ should match a/bb with /*/*/*/* and {dot: true}
    ✓ should match a/bb with /*/*/*/* and {nonegate: true}
    ✓ should match a/cb with /*/*/*/*
    ✓ should match a/cb with /*/*/*/* and {dot: true}
    ✓ should match a/cb with /*/*/*/* and {nonegate: true}
    ✓ should match abbbz with /*/*/*/*
    ✓ should match abbbz with /*/*/*/* and {dot: true}
    ✓ should match abbbz with /*/*/*/* and {nonegate: true}
    ✓ should match abc with /*/*/*/*
    ✓ should match abc with /*/*/*/* and {dot: true}
    ✓ should match abc with /*/*/*/* and {nonegate: true}
    ✓ should match abd with /*/*/*/*
    ✓ should match abd with /*/*/*/* and {dot: true}
    ✓ should match abd with /*/*/*/* and {nonegate: true}
    ✓ should match z.js with /*/*/*/*
    ✓ should match z.js with /*/*/*/* and {dot: true}
    ✓ should match z.js with /*/*/*/* and {nonegate: true}
    ✓ should match za.js with /*/*/*/*
    ✓ should match za.js with /*/*/*/* and {dot: true}
    ✓ should match za.js with /*/*/*/* and {nonegate: true}
    ✓ should match !a.js with /*/*/*/*
    ✓ should match !a.js with /*/*/*/* and {dot: true}
    ✓ should match !a.js with /*/*/*/* and {nonegate: true}
    ✓ should match !a/b with /*/*/*/*
    ✓ should match !a/b with /*/*/*/* and {dot: true}
    ✓ should match !a/b with /*/*/*/* and {nonegate: true}
    ✓ should match !a/b/ with /*/*/*/*
    ✓ should match !a/b/ with /*/*/*/* and {dot: true}
    ✓ should match !a/b/ with /*/*/*/* and {nonegate: true}
    ✓ should match !a/b/c with /*/*/*/*
    ✓ should match !a/b/c with /*/*/*/* and {dot: true}
    ✓ should match !a/b/c with /*/*/*/* and {nonegate: true}
    ✓ should match !a/b/c/ with /*/*/*/*
    ✓ should match !a/b/c/ with /*/*/*/* and {dot: true}
    ✓ should match !a/b/c/ with /*/*/*/* and {nonegate: true}
    ✓ should match !a/!b with /*/*/*/*
    ✓ should match !a/!b with /*/*/*/* and {dot: true}
    ✓ should match !a/!b with /*/*/*/* and {nonegate: true}
    ✓ should match !a/!b/c with /*/*/*/*
    ✓ should match !a/!b/c with /*/*/*/* and {dot: true}
    ✓ should match !a/!b/c with /*/*/*/* and {nonegate: true}
    ✓ should match !a/!b/c/d with /*/*/*/*
    ✓ should match !a/!b/c/d with /*/*/*/* and {dot: true}
    ✓ should match !a/!b/c/d with /*/*/*/* and {nonegate: true}
    ✓ should match !a/b/.c.md with /*/*/*/*
    ✓ should match !a/b/.c.md with /*/*/*/* and {dot: true}
    ✓ should match !a/b/.c.md with /*/*/*/* and {nonegate: true}
    ✓ should match /a/ with /*/*/*/*
    ✓ should match /a/ with /*/*/*/* and {dot: true}
    ✓ should match /a/ with /*/*/*/* and {nonegate: true}
    ✓ should match /a/b with /*/*/*/*
    ✓ should match /a/b with /*/*/*/* and {dot: true}
    ✓ should match /a/b with /*/*/*/* and {nonegate: true}
    ✓ should match /a/cb with /*/*/*/*
    ✓ should match /a/cb with /*/*/*/* and {dot: true}
    ✓ should match /a/cb with /*/*/*/* and {nonegate: true}
    ✓ should match /a/bb with /*/*/*/*
    ✓ should match /a/bb with /*/*/*/* and {dot: true}
    ✓ should match /a/bb with /*/*/*/* and {nonegate: true}
    ✓ should match /a/b/c with /*/*/*/*
    ✓ should match /a/b/c with /*/*/*/* and {dot: true}
    ✓ should match /a/b/c with /*/*/*/* and {nonegate: true}
    ✓ should match /a/b/c/ with /*/*/*/*
    ✓ should match /a/b/c/ with /*/*/*/* and {dot: true}
    ✓ should match /a/b/c/ with /*/*/*/* and {nonegate: true}
    ✓ should match /a/b/c/d with /*/*/*/*
    ✓ should match /a/b/c/d with /*/*/*/* and {dot: true}
    ✓ should match /a/b/c/d with /*/*/*/* and {nonegate: true}
    ✓ should match /a/b/c/d/ with /*/*/*/*
    ✓ should match /a/b/c/d/ with /*/*/*/* and {dot: true}
    ✓ should match /a/b/c/d/ with /*/*/*/* and {nonegate: true}
    ✓ should match . with /*/*/*/*
    ✓ should match . with /*/*/*/* and {dot: true}
    ✓ should match . with /*/*/*/* and {nonegate: true}
    ✓ should match ./ with /*/*/*/*
    ✓ should match ./ with /*/*/*/* and {dot: true}
    ✓ should match ./ with /*/*/*/* and {nonegate: true}
    ✓ should match .. with /*/*/*/*
    ✓ should match .. with /*/*/*/* and {dot: true}
    ✓ should match .. with /*/*/*/* and {nonegate: true}
    ✓ should match ../c with /*/*/*/*
    ✓ should match ../c with /*/*/*/* and {dot: true}
    ✓ should match ../c with /*/*/*/* and {nonegate: true}
    ✓ should match ../c with /*/*/*/*
    ✓ should match ../c with /*/*/*/* and {dot: true}
    ✓ should match ../c with /*/*/*/* and {nonegate: true}
    ✓ should match ./../c with /*/*/*/*
    ✓ should match ./../c with /*/*/*/* and {dot: true}
    ✓ should match ./../c with /*/*/*/* and {nonegate: true}
    ✓ should match ./a/../c with /*/*/*/*
    ✓ should match ./a/../c with /*/*/*/* and {dot: true}
    ✓ should match ./a/../c with /*/*/*/* and {nonegate: true}
    ✓ should match /.. with /*/*/*/*
    ✓ should match /.. with /*/*/*/* and {dot: true}
    ✓ should match /.. with /*/*/*/* and {nonegate: true}
    ✓ should match /../c with /*/*/*/*
    ✓ should match /../c with /*/*/*/* and {dot: true}
    ✓ should match /../c with /*/*/*/* and {nonegate: true}
    ✓ should match /../.c with /*/*/*/*
    ✓ should match /../.c with /*/*/*/* and {dot: true}
    ✓ should match /../.c with /*/*/*/* and {nonegate: true}
    ✓ should match /../.c/ with /*/*/*/*
    ✓ should match /../.c/ with /*/*/*/* and {dot: true}
    ✓ should match /../.c/ with /*/*/*/* and {nonegate: true}
    ✓ should match /a/../c with /*/*/*/*
    ✓ should match /a/../c with /*/*/*/* and {dot: true}
    ✓ should match /a/../c with /*/*/*/* and {nonegate: true}
    ✓ should match a/../c with /*/*/*/*
    ✓ should match a/../c with /*/*/*/* and {dot: true}
    ✓ should match a/../c with /*/*/*/* and {nonegate: true}
    ✓ should match ../.b/.c with /*/*/*/*
    ✓ should match ../.b/.c with /*/*/*/* and {dot: true}
    ✓ should match ../.b/.c with /*/*/*/* and {nonegate: true}
    ✓ should match ../b/.c with /*/*/*/*
    ✓ should match ../b/.c with /*/*/*/* and {dot: true}
    ✓ should match ../b/.c with /*/*/*/* and {nonegate: true}
    ✓ should match ./.b/.c with /*/*/*/*
    ✓ should match ./.b/.c with /*/*/*/* and {dot: true}
    ✓ should match ./.b/.c with /*/*/*/* and {nonegate: true}
    ✓ should match ./b/.c with /*/*/*/*
    ✓ should match ./b/.c with /*/*/*/* and {dot: true}
    ✓ should match ./b/.c with /*/*/*/* and {nonegate: true}
    ✓ should match .b with /*/*/*/*
    ✓ should match .b with /*/*/*/* and {dot: true}
    ✓ should match .b with /*/*/*/* and {nonegate: true}
    ✓ should match .b.c with /*/*/*/*
    ✓ should match .b.c with /*/*/*/* and {dot: true}
    ✓ should match .b.c with /*/*/*/* and {nonegate: true}
    ✓ should match .b.c/ with /*/*/*/*
    ✓ should match .b.c/ with /*/*/*/* and {dot: true}
    ✓ should match .b.c/ with /*/*/*/* and {nonegate: true}
    ✓ should match .b/ with /*/*/*/*
    ✓ should match .b/ with /*/*/*/* and {dot: true}
    ✓ should match .b/ with /*/*/*/* and {nonegate: true}
    ✓ should match .b/.c with /*/*/*/*
    ✓ should match .b/.c with /*/*/*/* and {dot: true}
    ✓ should match .b/.c with /*/*/*/* and {nonegate: true}
    ✓ should match .b/c with /*/*/*/*
    ✓ should match .b/c with /*/*/*/* and {dot: true}
    ✓ should match .b/c with /*/*/*/* and {nonegate: true}
    ✓ should match b/.c with /*/*/*/*
    ✓ should match b/.c with /*/*/*/* and {dot: true}
    ✓ should match b/.c with /*/*/*/* and {nonegate: true}
    ✓ should match b/.c/ with /*/*/*/*
    ✓ should match b/.c/ with /*/*/*/* and {dot: true}
    ✓ should match b/.c/ with /*/*/*/* and {nonegate: true}
    ✓ should match a/+b/c with /*/*/*/*
    ✓ should match a/+b/c with /*/*/*/* and {dot: true}
    ✓ should match a/+b/c with /*/*/*/* and {nonegate: true}
    ✓ should match +a/+b/c with /*/*/*/*
    ✓ should match +a/+b/c with /*/*/*/* and {dot: true}
    ✓ should match +a/+b/c with /*/*/*/* and {nonegate: true}
    ✓ should match a (foo) with /*/*/*/*
    ✓ should match a (foo) with /*/*/*/* and {dot: true}
    ✓ should match a (foo) with /*/*/*/* and {nonegate: true}
    ✓ should match a (foo)/(bar) with /*/*/*/*
    ✓ should match a (foo)/(bar) with /*/*/*/* and {dot: true}
    ✓ should match a (foo)/(bar) with /*/*/*/* and {nonegate: true}
    ✓ should match a/b/c (1) with /*/*/*/*
    ✓ should match a/b/c (1) with /*/*/*/* and {dot: true}
    ✓ should match a/b/c (1) with /*/*/*/* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with /*/*/*/*
    ✓ should match a/b (2)/c (1) with /*/*/*/* and {dot: true}
    ✓ should match a/b (2)/c (1) with /*/*/*/* and {nonegate: true}
    ✓ should match a/b/c [def] with /*/*/*/*
    ✓ should match a/b/c [def] with /*/*/*/* and {dot: true}
    ✓ should match a/b/c [def] with /*/*/*/* and {nonegate: true}
    ✓ should match a with /*/*/*/*/
    ✓ should match a with /*/*/*/*/ and {dot: true}
    ✓ should match a with /*/*/*/*/ and {nonegate: true}
    ✓ should match a.md with /*/*/*/*/
    ✓ should match a.md with /*/*/*/*/ and {dot: true}
    ✓ should match a.md with /*/*/*/*/ and {nonegate: true}
    ✓ should match a.js with /*/*/*/*/
    ✓ should match a.js with /*/*/*/*/ and {dot: true}
    ✓ should match a.js with /*/*/*/*/ and {nonegate: true}
    ✓ should match a/ with /*/*/*/*/
    ✓ should match a/ with /*/*/*/*/ and {dot: true}
    ✓ should match a/ with /*/*/*/*/ and {nonegate: true}
    ✓ should match a/b with /*/*/*/*/
    ✓ should match a/b with /*/*/*/*/ and {dot: true}
    ✓ should match a/b with /*/*/*/*/ and {nonegate: true}
    ✓ should match a/b/.c.md with /*/*/*/*/
    ✓ should match a/b/.c.md with /*/*/*/*/ and {dot: true}
    ✓ should match a/b/.c.md with /*/*/*/*/ and {nonegate: true}
    ✓ should match a/b/c with /*/*/*/*/
    ✓ should match a/b/c with /*/*/*/*/ and {dot: true}
    ✓ should match a/b/c with /*/*/*/*/ and {nonegate: true}
    ✓ should match a/b/c.md with /*/*/*/*/
    ✓ should match a/b/c.md with /*/*/*/*/ and {dot: true}
    ✓ should match a/b/c.md with /*/*/*/*/ and {nonegate: true}
    ✓ should match a/b/c/ with /*/*/*/*/
    ✓ should match a/b/c/ with /*/*/*/*/ and {dot: true}
    ✓ should match a/b/c/ with /*/*/*/*/ and {nonegate: true}
    ✓ should match a/b/c/d with /*/*/*/*/
    ✓ should match a/b/c/d with /*/*/*/*/ and {dot: true}
    ✓ should match a/b/c/d with /*/*/*/*/ and {nonegate: true}
    ✓ should match a/b/c/d/ with /*/*/*/*/
    ✓ should match a/b/c/d/ with /*/*/*/*/ and {dot: true}
    ✓ should match a/b/c/d/ with /*/*/*/*/ and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with /*/*/*/*/
    ✓ should match a/b/c/d/e/f/z.js with /*/*/*/*/ and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with /*/*/*/*/ and {nonegate: true}
    ✓ should match a/b/c/z.js with /*/*/*/*/
    ✓ should match a/b/c/z.js with /*/*/*/*/ and {dot: true}
    ✓ should match a/b/c/z.js with /*/*/*/*/ and {nonegate: true}
    ✓ should match a/bb with /*/*/*/*/
    ✓ should match a/bb with /*/*/*/*/ and {dot: true}
    ✓ should match a/bb with /*/*/*/*/ and {nonegate: true}
    ✓ should match a/cb with /*/*/*/*/
    ✓ should match a/cb with /*/*/*/*/ and {dot: true}
    ✓ should match a/cb with /*/*/*/*/ and {nonegate: true}
    ✓ should match abbbz with /*/*/*/*/
    ✓ should match abbbz with /*/*/*/*/ and {dot: true}
    ✓ should match abbbz with /*/*/*/*/ and {nonegate: true}
    ✓ should match abc with /*/*/*/*/
    ✓ should match abc with /*/*/*/*/ and {dot: true}
    ✓ should match abc with /*/*/*/*/ and {nonegate: true}
    ✓ should match abd with /*/*/*/*/
    ✓ should match abd with /*/*/*/*/ and {dot: true}
    ✓ should match abd with /*/*/*/*/ and {nonegate: true}
    ✓ should match z.js with /*/*/*/*/
    ✓ should match z.js with /*/*/*/*/ and {dot: true}
    ✓ should match z.js with /*/*/*/*/ and {nonegate: true}
    ✓ should match za.js with /*/*/*/*/
    ✓ should match za.js with /*/*/*/*/ and {dot: true}
    ✓ should match za.js with /*/*/*/*/ and {nonegate: true}
    ✓ should match !a.js with /*/*/*/*/
    ✓ should match !a.js with /*/*/*/*/ and {dot: true}
    ✓ should match !a.js with /*/*/*/*/ and {nonegate: true}
    ✓ should match !a/b with /*/*/*/*/
    ✓ should match !a/b with /*/*/*/*/ and {dot: true}
    ✓ should match !a/b with /*/*/*/*/ and {nonegate: true}
    ✓ should match !a/b/ with /*/*/*/*/
    ✓ should match !a/b/ with /*/*/*/*/ and {dot: true}
    ✓ should match !a/b/ with /*/*/*/*/ and {nonegate: true}
    ✓ should match !a/b/c with /*/*/*/*/
    ✓ should match !a/b/c with /*/*/*/*/ and {dot: true}
    ✓ should match !a/b/c with /*/*/*/*/ and {nonegate: true}
    ✓ should match !a/b/c/ with /*/*/*/*/
    ✓ should match !a/b/c/ with /*/*/*/*/ and {dot: true}
    ✓ should match !a/b/c/ with /*/*/*/*/ and {nonegate: true}
    ✓ should match !a/!b with /*/*/*/*/
    ✓ should match !a/!b with /*/*/*/*/ and {dot: true}
    ✓ should match !a/!b with /*/*/*/*/ and {nonegate: true}
    ✓ should match !a/!b/c with /*/*/*/*/
    ✓ should match !a/!b/c with /*/*/*/*/ and {dot: true}
    ✓ should match !a/!b/c with /*/*/*/*/ and {nonegate: true}
    ✓ should match !a/!b/c/d with /*/*/*/*/
    ✓ should match !a/!b/c/d with /*/*/*/*/ and {dot: true}
    ✓ should match !a/!b/c/d with /*/*/*/*/ and {nonegate: true}
    ✓ should match !a/b/.c.md with /*/*/*/*/
    ✓ should match !a/b/.c.md with /*/*/*/*/ and {dot: true}
    ✓ should match !a/b/.c.md with /*/*/*/*/ and {nonegate: true}
    ✓ should match /a/ with /*/*/*/*/
    ✓ should match /a/ with /*/*/*/*/ and {dot: true}
    ✓ should match /a/ with /*/*/*/*/ and {nonegate: true}
    ✓ should match /a/b with /*/*/*/*/
    ✓ should match /a/b with /*/*/*/*/ and {dot: true}
    ✓ should match /a/b with /*/*/*/*/ and {nonegate: true}
    ✓ should match /a/cb with /*/*/*/*/
    ✓ should match /a/cb with /*/*/*/*/ and {dot: true}
    ✓ should match /a/cb with /*/*/*/*/ and {nonegate: true}
    ✓ should match /a/bb with /*/*/*/*/
    ✓ should match /a/bb with /*/*/*/*/ and {dot: true}
    ✓ should match /a/bb with /*/*/*/*/ and {nonegate: true}
    ✓ should match /a/b/c with /*/*/*/*/
    ✓ should match /a/b/c with /*/*/*/*/ and {dot: true}
    ✓ should match /a/b/c with /*/*/*/*/ and {nonegate: true}
    ✓ should match /a/b/c/ with /*/*/*/*/
    ✓ should match /a/b/c/ with /*/*/*/*/ and {dot: true}
    ✓ should match /a/b/c/ with /*/*/*/*/ and {nonegate: true}
    ✓ should match /a/b/c/d with /*/*/*/*/
    ✓ should match /a/b/c/d with /*/*/*/*/ and {dot: true}
    ✓ should match /a/b/c/d with /*/*/*/*/ and {nonegate: true}
    ✓ should match /a/b/c/d/ with /*/*/*/*/
    ✓ should match /a/b/c/d/ with /*/*/*/*/ and {dot: true}
    ✓ should match /a/b/c/d/ with /*/*/*/*/ and {nonegate: true}
    ✓ should match . with /*/*/*/*/
    ✓ should match . with /*/*/*/*/ and {dot: true}
    ✓ should match . with /*/*/*/*/ and {nonegate: true}
    ✓ should match ./ with /*/*/*/*/
    ✓ should match ./ with /*/*/*/*/ and {dot: true}
    ✓ should match ./ with /*/*/*/*/ and {nonegate: true}
    ✓ should match .. with /*/*/*/*/
    ✓ should match .. with /*/*/*/*/ and {dot: true}
    ✓ should match .. with /*/*/*/*/ and {nonegate: true}
    ✓ should match ../c with /*/*/*/*/
    ✓ should match ../c with /*/*/*/*/ and {dot: true}
    ✓ should match ../c with /*/*/*/*/ and {nonegate: true}
    ✓ should match ../c with /*/*/*/*/
    ✓ should match ../c with /*/*/*/*/ and {dot: true}
    ✓ should match ../c with /*/*/*/*/ and {nonegate: true}
    ✓ should match ./../c with /*/*/*/*/
    ✓ should match ./../c with /*/*/*/*/ and {dot: true}
    ✓ should match ./../c with /*/*/*/*/ and {nonegate: true}
    ✓ should match ./a/../c with /*/*/*/*/
    ✓ should match ./a/../c with /*/*/*/*/ and {dot: true}
    ✓ should match ./a/../c with /*/*/*/*/ and {nonegate: true}
    ✓ should match /.. with /*/*/*/*/
    ✓ should match /.. with /*/*/*/*/ and {dot: true}
    ✓ should match /.. with /*/*/*/*/ and {nonegate: true}
    ✓ should match /../c with /*/*/*/*/
    ✓ should match /../c with /*/*/*/*/ and {dot: true}
    ✓ should match /../c with /*/*/*/*/ and {nonegate: true}
    ✓ should match /../.c with /*/*/*/*/
    ✓ should match /../.c with /*/*/*/*/ and {dot: true}
    ✓ should match /../.c with /*/*/*/*/ and {nonegate: true}
    ✓ should match /../.c/ with /*/*/*/*/
    ✓ should match /../.c/ with /*/*/*/*/ and {dot: true}
    ✓ should match /../.c/ with /*/*/*/*/ and {nonegate: true}
    ✓ should match /a/../c with /*/*/*/*/
    ✓ should match /a/../c with /*/*/*/*/ and {dot: true}
    ✓ should match /a/../c with /*/*/*/*/ and {nonegate: true}
    ✓ should match a/../c with /*/*/*/*/
    ✓ should match a/../c with /*/*/*/*/ and {dot: true}
    ✓ should match a/../c with /*/*/*/*/ and {nonegate: true}
    ✓ should match ../.b/.c with /*/*/*/*/
    ✓ should match ../.b/.c with /*/*/*/*/ and {dot: true}
    ✓ should match ../.b/.c with /*/*/*/*/ and {nonegate: true}
    ✓ should match ../b/.c with /*/*/*/*/
    ✓ should match ../b/.c with /*/*/*/*/ and {dot: true}
    ✓ should match ../b/.c with /*/*/*/*/ and {nonegate: true}
    ✓ should match ./.b/.c with /*/*/*/*/
    ✓ should match ./.b/.c with /*/*/*/*/ and {dot: true}
    ✓ should match ./.b/.c with /*/*/*/*/ and {nonegate: true}
    ✓ should match ./b/.c with /*/*/*/*/
    ✓ should match ./b/.c with /*/*/*/*/ and {dot: true}
    ✓ should match ./b/.c with /*/*/*/*/ and {nonegate: true}
    ✓ should match .b with /*/*/*/*/
    ✓ should match .b with /*/*/*/*/ and {dot: true}
    ✓ should match .b with /*/*/*/*/ and {nonegate: true}
    ✓ should match .b.c with /*/*/*/*/
    ✓ should match .b.c with /*/*/*/*/ and {dot: true}
    ✓ should match .b.c with /*/*/*/*/ and {nonegate: true}
    ✓ should match .b.c/ with /*/*/*/*/
    ✓ should match .b.c/ with /*/*/*/*/ and {dot: true}
    ✓ should match .b.c/ with /*/*/*/*/ and {nonegate: true}
    ✓ should match .b/ with /*/*/*/*/
    ✓ should match .b/ with /*/*/*/*/ and {dot: true}
    ✓ should match .b/ with /*/*/*/*/ and {nonegate: true}
    ✓ should match .b/.c with /*/*/*/*/
    ✓ should match .b/.c with /*/*/*/*/ and {dot: true}
    ✓ should match .b/.c with /*/*/*/*/ and {nonegate: true}
    ✓ should match .b/c with /*/*/*/*/
    ✓ should match .b/c with /*/*/*/*/ and {dot: true}
    ✓ should match .b/c with /*/*/*/*/ and {nonegate: true}
    ✓ should match b/.c with /*/*/*/*/
    ✓ should match b/.c with /*/*/*/*/ and {dot: true}
    ✓ should match b/.c with /*/*/*/*/ and {nonegate: true}
    ✓ should match b/.c/ with /*/*/*/*/
    ✓ should match b/.c/ with /*/*/*/*/ and {dot: true}
    ✓ should match b/.c/ with /*/*/*/*/ and {nonegate: true}
    ✓ should match a/+b/c with /*/*/*/*/
    ✓ should match a/+b/c with /*/*/*/*/ and {dot: true}
    ✓ should match a/+b/c with /*/*/*/*/ and {nonegate: true}
    ✓ should match +a/+b/c with /*/*/*/*/
    ✓ should match +a/+b/c with /*/*/*/*/ and {dot: true}
    ✓ should match +a/+b/c with /*/*/*/*/ and {nonegate: true}
    ✓ should match a (foo) with /*/*/*/*/
    ✓ should match a (foo) with /*/*/*/*/ and {dot: true}
    ✓ should match a (foo) with /*/*/*/*/ and {nonegate: true}
    ✓ should match a (foo)/(bar) with /*/*/*/*/
    ✓ should match a (foo)/(bar) with /*/*/*/*/ and {dot: true}
    ✓ should match a (foo)/(bar) with /*/*/*/*/ and {nonegate: true}
    ✓ should match a/b/c (1) with /*/*/*/*/
    ✓ should match a/b/c (1) with /*/*/*/*/ and {dot: true}
    ✓ should match a/b/c (1) with /*/*/*/*/ and {nonegate: true}
    ✓ should match a/b (2)/c (1) with /*/*/*/*/
    ✓ should match a/b (2)/c (1) with /*/*/*/*/ and {dot: true}
    ✓ should match a/b (2)/c (1) with /*/*/*/*/ and {nonegate: true}
    ✓ should match a/b/c [def] with /*/*/*/*/
    ✓ should match a/b/c [def] with /*/*/*/*/ and {dot: true}
    ✓ should match a/b/c [def] with /*/*/*/*/ and {nonegate: true}
    ✓ should match a with ?
    ✓ should match a with ? and {dot: true}
    ✓ should match a with ? and {nonegate: true}
    ✓ should match a.md with ?
    ✓ should match a.md with ? and {dot: true}
    ✓ should match a.md with ? and {nonegate: true}
    ✓ should match a.js with ?
    ✓ should match a.js with ? and {dot: true}
    ✓ should match a.js with ? and {nonegate: true}
    ✓ should match a/ with ?
    ✓ should match a/ with ? and {dot: true}
    ✓ should match a/ with ? and {nonegate: true}
    ✓ should match a/b with ?
    ✓ should match a/b with ? and {dot: true}
    ✓ should match a/b with ? and {nonegate: true}
    ✓ should match a/b/.c.md with ?
    ✓ should match a/b/.c.md with ? and {dot: true}
    ✓ should match a/b/.c.md with ? and {nonegate: true}
    ✓ should match a/b/c with ?
    ✓ should match a/b/c with ? and {dot: true}
    ✓ should match a/b/c with ? and {nonegate: true}
    ✓ should match a/b/c.md with ?
    ✓ should match a/b/c.md with ? and {dot: true}
    ✓ should match a/b/c.md with ? and {nonegate: true}
    ✓ should match a/b/c/ with ?
    ✓ should match a/b/c/ with ? and {dot: true}
    ✓ should match a/b/c/ with ? and {nonegate: true}
    ✓ should match a/b/c/d with ?
    ✓ should match a/b/c/d with ? and {dot: true}
    ✓ should match a/b/c/d with ? and {nonegate: true}
    ✓ should match a/b/c/d/ with ?
    ✓ should match a/b/c/d/ with ? and {dot: true}
    ✓ should match a/b/c/d/ with ? and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with ?
    ✓ should match a/b/c/d/e/f/z.js with ? and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with ? and {nonegate: true}
    ✓ should match a/b/c/z.js with ?
    ✓ should match a/b/c/z.js with ? and {dot: true}
    ✓ should match a/b/c/z.js with ? and {nonegate: true}
    ✓ should match a/bb with ?
    ✓ should match a/bb with ? and {dot: true}
    ✓ should match a/bb with ? and {nonegate: true}
    ✓ should match a/cb with ?
    ✓ should match a/cb with ? and {dot: true}
    ✓ should match a/cb with ? and {nonegate: true}
    ✓ should match abbbz with ?
    ✓ should match abbbz with ? and {dot: true}
    ✓ should match abbbz with ? and {nonegate: true}
    ✓ should match abc with ?
    ✓ should match abc with ? and {dot: true}
    ✓ should match abc with ? and {nonegate: true}
    ✓ should match abd with ?
    ✓ should match abd with ? and {dot: true}
    ✓ should match abd with ? and {nonegate: true}
    ✓ should match z.js with ?
    ✓ should match z.js with ? and {dot: true}
    ✓ should match z.js with ? and {nonegate: true}
    ✓ should match za.js with ?
    ✓ should match za.js with ? and {dot: true}
    ✓ should match za.js with ? and {nonegate: true}
    ✓ should match !a.js with ?
    ✓ should match !a.js with ? and {dot: true}
    ✓ should match !a.js with ? and {nonegate: true}
    ✓ should match !a/b with ?
    ✓ should match !a/b with ? and {dot: true}
    ✓ should match !a/b with ? and {nonegate: true}
    ✓ should match !a/b/ with ?
    ✓ should match !a/b/ with ? and {dot: true}
    ✓ should match !a/b/ with ? and {nonegate: true}
    ✓ should match !a/b/c with ?
    ✓ should match !a/b/c with ? and {dot: true}
    ✓ should match !a/b/c with ? and {nonegate: true}
    ✓ should match !a/b/c/ with ?
    ✓ should match !a/b/c/ with ? and {dot: true}
    ✓ should match !a/b/c/ with ? and {nonegate: true}
    ✓ should match !a/!b with ?
    ✓ should match !a/!b with ? and {dot: true}
    ✓ should match !a/!b with ? and {nonegate: true}
    ✓ should match !a/!b/c with ?
    ✓ should match !a/!b/c with ? and {dot: true}
    ✓ should match !a/!b/c with ? and {nonegate: true}
    ✓ should match !a/!b/c/d with ?
    ✓ should match !a/!b/c/d with ? and {dot: true}
    ✓ should match !a/!b/c/d with ? and {nonegate: true}
    ✓ should match !a/b/.c.md with ?
    ✓ should match !a/b/.c.md with ? and {dot: true}
    ✓ should match !a/b/.c.md with ? and {nonegate: true}
    ✓ should match /a/ with ?
    ✓ should match /a/ with ? and {dot: true}
    ✓ should match /a/ with ? and {nonegate: true}
    ✓ should match /a/b with ?
    ✓ should match /a/b with ? and {dot: true}
    ✓ should match /a/b with ? and {nonegate: true}
    ✓ should match /a/cb with ?
    ✓ should match /a/cb with ? and {dot: true}
    ✓ should match /a/cb with ? and {nonegate: true}
    ✓ should match /a/bb with ?
    ✓ should match /a/bb with ? and {dot: true}
    ✓ should match /a/bb with ? and {nonegate: true}
    ✓ should match /a/b/c with ?
    ✓ should match /a/b/c with ? and {dot: true}
    ✓ should match /a/b/c with ? and {nonegate: true}
    ✓ should match /a/b/c/ with ?
    ✓ should match /a/b/c/ with ? and {dot: true}
    ✓ should match /a/b/c/ with ? and {nonegate: true}
    ✓ should match /a/b/c/d with ?
    ✓ should match /a/b/c/d with ? and {dot: true}
    ✓ should match /a/b/c/d with ? and {nonegate: true}
    ✓ should match /a/b/c/d/ with ?
    ✓ should match /a/b/c/d/ with ? and {dot: true}
    ✓ should match /a/b/c/d/ with ? and {nonegate: true}
    ✓ should match . with ?
    ✓ should match . with ? and {dot: true}
    ✓ should match . with ? and {nonegate: true}
    ✓ should match ./ with ?
    ✓ should match ./ with ? and {dot: true}
    ✓ should match ./ with ? and {nonegate: true}
    ✓ should match .. with ?
    ✓ should match .. with ? and {dot: true}
    ✓ should match .. with ? and {nonegate: true}
    ✓ should match ../c with ?
    ✓ should match ../c with ? and {dot: true}
    ✓ should match ../c with ? and {nonegate: true}
    ✓ should match ../c with ?
    ✓ should match ../c with ? and {dot: true}
    ✓ should match ../c with ? and {nonegate: true}
    ✓ should match ./../c with ?
    ✓ should match ./../c with ? and {dot: true}
    ✓ should match ./../c with ? and {nonegate: true}
    ✓ should match ./a/../c with ?
    ✓ should match ./a/../c with ? and {dot: true}
    ✓ should match ./a/../c with ? and {nonegate: true}
    ✓ should match /.. with ?
    ✓ should match /.. with ? and {dot: true}
    ✓ should match /.. with ? and {nonegate: true}
    ✓ should match /../c with ?
    ✓ should match /../c with ? and {dot: true}
    ✓ should match /../c with ? and {nonegate: true}
    ✓ should match /../.c with ?
    ✓ should match /../.c with ? and {dot: true}
    ✓ should match /../.c with ? and {nonegate: true}
    ✓ should match /../.c/ with ?
    ✓ should match /../.c/ with ? and {dot: true}
    ✓ should match /../.c/ with ? and {nonegate: true}
    ✓ should match /a/../c with ?
    ✓ should match /a/../c with ? and {dot: true}
    ✓ should match /a/../c with ? and {nonegate: true}
    ✓ should match a/../c with ?
    ✓ should match a/../c with ? and {dot: true}
    ✓ should match a/../c with ? and {nonegate: true}
    ✓ should match ../.b/.c with ?
    ✓ should match ../.b/.c with ? and {dot: true}
    ✓ should match ../.b/.c with ? and {nonegate: true}
    ✓ should match ../b/.c with ?
    ✓ should match ../b/.c with ? and {dot: true}
    ✓ should match ../b/.c with ? and {nonegate: true}
    ✓ should match ./.b/.c with ?
    ✓ should match ./.b/.c with ? and {dot: true}
    ✓ should match ./.b/.c with ? and {nonegate: true}
    ✓ should match ./b/.c with ?
    ✓ should match ./b/.c with ? and {dot: true}
    ✓ should match ./b/.c with ? and {nonegate: true}
    ✓ should match .b with ?
    ✓ should match .b with ? and {dot: true}
    ✓ should match .b with ? and {nonegate: true}
    ✓ should match .b.c with ?
    ✓ should match .b.c with ? and {dot: true}
    ✓ should match .b.c with ? and {nonegate: true}
    ✓ should match .b.c/ with ?
    ✓ should match .b.c/ with ? and {dot: true}
    ✓ should match .b.c/ with ? and {nonegate: true}
    ✓ should match .b/ with ?
    ✓ should match .b/ with ? and {dot: true}
    ✓ should match .b/ with ? and {nonegate: true}
    ✓ should match .b/.c with ?
    ✓ should match .b/.c with ? and {dot: true}
    ✓ should match .b/.c with ? and {nonegate: true}
    ✓ should match .b/c with ?
    ✓ should match .b/c with ? and {dot: true}
    ✓ should match .b/c with ? and {nonegate: true}
    ✓ should match b/.c with ?
    ✓ should match b/.c with ? and {dot: true}
    ✓ should match b/.c with ? and {nonegate: true}
    ✓ should match b/.c/ with ?
    ✓ should match b/.c/ with ? and {dot: true}
    ✓ should match b/.c/ with ? and {nonegate: true}
    ✓ should match a/+b/c with ?
    ✓ should match a/+b/c with ? and {dot: true}
    ✓ should match a/+b/c with ? and {nonegate: true}
    ✓ should match +a/+b/c with ?
    ✓ should match +a/+b/c with ? and {dot: true}
    ✓ should match +a/+b/c with ? and {nonegate: true}
    ✓ should match a (foo) with ?
    ✓ should match a (foo) with ? and {dot: true}
    ✓ should match a (foo) with ? and {nonegate: true}
    ✓ should match a (foo)/(bar) with ?
    ✓ should match a (foo)/(bar) with ? and {dot: true}
    ✓ should match a (foo)/(bar) with ? and {nonegate: true}
    ✓ should match a/b/c (1) with ?
    ✓ should match a/b/c (1) with ? and {dot: true}
    ✓ should match a/b/c (1) with ? and {nonegate: true}
    ✓ should match a/b (2)/c (1) with ?
    ✓ should match a/b (2)/c (1) with ? and {dot: true}
    ✓ should match a/b (2)/c (1) with ? and {nonegate: true}
    ✓ should match a/b/c [def] with ?
    ✓ should match a/b/c [def] with ? and {dot: true}
    ✓ should match a/b/c [def] with ? and {nonegate: true}
    ✓ should match a with ?*?******?
    ✓ should match a with ?*?******? and {dot: true}
    ✓ should match a with ?*?******? and {nonegate: true}
    ✓ should match a.md with ?*?******?
    ✓ should match a.md with ?*?******? and {dot: true}
    ✓ should match a.md with ?*?******? and {nonegate: true}
    ✓ should match a.js with ?*?******?
    ✓ should match a.js with ?*?******? and {dot: true}
    ✓ should match a.js with ?*?******? and {nonegate: true}
    ✓ should match a/ with ?*?******?
    ✓ should match a/ with ?*?******? and {dot: true}
    ✓ should match a/ with ?*?******? and {nonegate: true}
    ✓ should match a/b with ?*?******?
    ✓ should match a/b with ?*?******? and {dot: true}
    ✓ should match a/b with ?*?******? and {nonegate: true}
    ✓ should match a/b/.c.md with ?*?******?
    ✓ should match a/b/.c.md with ?*?******? and {dot: true}
    ✓ should match a/b/.c.md with ?*?******? and {nonegate: true}
    ✓ should match a/b/c with ?*?******?
    ✓ should match a/b/c with ?*?******? and {dot: true}
    ✓ should match a/b/c with ?*?******? and {nonegate: true}
    ✓ should match a/b/c.md with ?*?******?
    ✓ should match a/b/c.md with ?*?******? and {dot: true}
    ✓ should match a/b/c.md with ?*?******? and {nonegate: true}
    ✓ should match a/b/c/ with ?*?******?
    ✓ should match a/b/c/ with ?*?******? and {dot: true}
    ✓ should match a/b/c/ with ?*?******? and {nonegate: true}
    ✓ should match a/b/c/d with ?*?******?
    ✓ should match a/b/c/d with ?*?******? and {dot: true}
    ✓ should match a/b/c/d with ?*?******? and {nonegate: true}
    ✓ should match a/b/c/d/ with ?*?******?
    ✓ should match a/b/c/d/ with ?*?******? and {dot: true}
    ✓ should match a/b/c/d/ with ?*?******? and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with ?*?******?
    ✓ should match a/b/c/d/e/f/z.js with ?*?******? and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with ?*?******? and {nonegate: true}
    ✓ should match a/b/c/z.js with ?*?******?
    ✓ should match a/b/c/z.js with ?*?******? and {dot: true}
    ✓ should match a/b/c/z.js with ?*?******? and {nonegate: true}
    ✓ should match a/bb with ?*?******?
    ✓ should match a/bb with ?*?******? and {dot: true}
    ✓ should match a/bb with ?*?******? and {nonegate: true}
    ✓ should match a/cb with ?*?******?
    ✓ should match a/cb with ?*?******? and {dot: true}
    ✓ should match a/cb with ?*?******? and {nonegate: true}
    ✓ should match abbbz with ?*?******?
    ✓ should match abbbz with ?*?******? and {dot: true}
    ✓ should match abbbz with ?*?******? and {nonegate: true}
    ✓ should match abc with ?*?******?
    ✓ should match abc with ?*?******? and {dot: true}
    ✓ should match abc with ?*?******? and {nonegate: true}
    ✓ should match abd with ?*?******?
    ✓ should match abd with ?*?******? and {dot: true}
    ✓ should match abd with ?*?******? and {nonegate: true}
    ✓ should match z.js with ?*?******?
    ✓ should match z.js with ?*?******? and {dot: true}
    ✓ should match z.js with ?*?******? and {nonegate: true}
    ✓ should match za.js with ?*?******?
    ✓ should match za.js with ?*?******? and {dot: true}
    ✓ should match za.js with ?*?******? and {nonegate: true}
    ✓ should match !a.js with ?*?******?
    ✓ should match !a.js with ?*?******? and {dot: true}
    ✓ should match !a.js with ?*?******? and {nonegate: true}
    ✓ should match !a/b with ?*?******?
    ✓ should match !a/b with ?*?******? and {dot: true}
    ✓ should match !a/b with ?*?******? and {nonegate: true}
    ✓ should match !a/b/ with ?*?******?
    ✓ should match !a/b/ with ?*?******? and {dot: true}
    ✓ should match !a/b/ with ?*?******? and {nonegate: true}
    ✓ should match !a/b/c with ?*?******?
    ✓ should match !a/b/c with ?*?******? and {dot: true}
    ✓ should match !a/b/c with ?*?******? and {nonegate: true}
    ✓ should match !a/b/c/ with ?*?******?
    ✓ should match !a/b/c/ with ?*?******? and {dot: true}
    ✓ should match !a/b/c/ with ?*?******? and {nonegate: true}
    ✓ should match !a/!b with ?*?******?
    ✓ should match !a/!b with ?*?******? and {dot: true}
    ✓ should match !a/!b with ?*?******? and {nonegate: true}
    ✓ should match !a/!b/c with ?*?******?
    ✓ should match !a/!b/c with ?*?******? and {dot: true}
    ✓ should match !a/!b/c with ?*?******? and {nonegate: true}
    ✓ should match !a/!b/c/d with ?*?******?
    ✓ should match !a/!b/c/d with ?*?******? and {dot: true}
    ✓ should match !a/!b/c/d with ?*?******? and {nonegate: true}
    ✓ should match !a/b/.c.md with ?*?******?
    ✓ should match !a/b/.c.md with ?*?******? and {dot: true}
    ✓ should match !a/b/.c.md with ?*?******? and {nonegate: true}
    ✓ should match /a/ with ?*?******?
    ✓ should match /a/ with ?*?******? and {dot: true}
    ✓ should match /a/ with ?*?******? and {nonegate: true}
    ✓ should match /a/b with ?*?******?
    ✓ should match /a/b with ?*?******? and {dot: true}
    ✓ should match /a/b with ?*?******? and {nonegate: true}
    ✓ should match /a/cb with ?*?******?
    ✓ should match /a/cb with ?*?******? and {dot: true}
    ✓ should match /a/cb with ?*?******? and {nonegate: true}
    ✓ should match /a/bb with ?*?******?
    ✓ should match /a/bb with ?*?******? and {dot: true}
    ✓ should match /a/bb with ?*?******? and {nonegate: true}
    ✓ should match /a/b/c with ?*?******?
    ✓ should match /a/b/c with ?*?******? and {dot: true}
    ✓ should match /a/b/c with ?*?******? and {nonegate: true}
    ✓ should match /a/b/c/ with ?*?******?
    ✓ should match /a/b/c/ with ?*?******? and {dot: true}
    ✓ should match /a/b/c/ with ?*?******? and {nonegate: true}
    ✓ should match /a/b/c/d with ?*?******?
    ✓ should match /a/b/c/d with ?*?******? and {dot: true}
    ✓ should match /a/b/c/d with ?*?******? and {nonegate: true}
    ✓ should match /a/b/c/d/ with ?*?******?
    ✓ should match /a/b/c/d/ with ?*?******? and {dot: true}
    ✓ should match /a/b/c/d/ with ?*?******? and {nonegate: true}
    ✓ should match . with ?*?******?
    ✓ should match . with ?*?******? and {dot: true}
    ✓ should match . with ?*?******? and {nonegate: true}
    ✓ should match ./ with ?*?******?
    ✓ should match ./ with ?*?******? and {dot: true}
    ✓ should match ./ with ?*?******? and {nonegate: true}
    ✓ should match .. with ?*?******?
    ✓ should match .. with ?*?******? and {dot: true}
    ✓ should match .. with ?*?******? and {nonegate: true}
    ✓ should match ../c with ?*?******?
    ✓ should match ../c with ?*?******? and {dot: true}
    ✓ should match ../c with ?*?******? and {nonegate: true}
    ✓ should match ../c with ?*?******?
    ✓ should match ../c with ?*?******? and {dot: true}
    ✓ should match ../c with ?*?******? and {nonegate: true}
    ✓ should match ./../c with ?*?******?
    ✓ should match ./../c with ?*?******? and {dot: true}
    ✓ should match ./../c with ?*?******? and {nonegate: true}
    ✓ should match ./a/../c with ?*?******?
    ✓ should match ./a/../c with ?*?******? and {dot: true}
    ✓ should match ./a/../c with ?*?******? and {nonegate: true}
    ✓ should match /.. with ?*?******?
    ✓ should match /.. with ?*?******? and {dot: true}
    ✓ should match /.. with ?*?******? and {nonegate: true}
    ✓ should match /../c with ?*?******?
    ✓ should match /../c with ?*?******? and {dot: true}
    ✓ should match /../c with ?*?******? and {nonegate: true}
    ✓ should match /../.c with ?*?******?
    ✓ should match /../.c with ?*?******? and {dot: true}
    ✓ should match /../.c with ?*?******? and {nonegate: true}
    ✓ should match /../.c/ with ?*?******?
    ✓ should match /../.c/ with ?*?******? and {dot: true}
    ✓ should match /../.c/ with ?*?******? and {nonegate: true}
    ✓ should match /a/../c with ?*?******?
    ✓ should match /a/../c with ?*?******? and {dot: true}
    ✓ should match /a/../c with ?*?******? and {nonegate: true}
    ✓ should match a/../c with ?*?******?
    ✓ should match a/../c with ?*?******? and {dot: true}
    ✓ should match a/../c with ?*?******? and {nonegate: true}
    ✓ should match ../.b/.c with ?*?******?
    ✓ should match ../.b/.c with ?*?******? and {dot: true}
    ✓ should match ../.b/.c with ?*?******? and {nonegate: true}
    ✓ should match ../b/.c with ?*?******?
    ✓ should match ../b/.c with ?*?******? and {dot: true}
    ✓ should match ../b/.c with ?*?******? and {nonegate: true}
    ✓ should match ./.b/.c with ?*?******?
    ✓ should match ./.b/.c with ?*?******? and {dot: true}
    ✓ should match ./.b/.c with ?*?******? and {nonegate: true}
    ✓ should match ./b/.c with ?*?******?
    ✓ should match ./b/.c with ?*?******? and {dot: true}
    ✓ should match ./b/.c with ?*?******? and {nonegate: true}
    ✓ should match .b with ?*?******?
    ✓ should match .b with ?*?******? and {dot: true}
    ✓ should match .b with ?*?******? and {nonegate: true}
    ✓ should match .b.c with ?*?******?
    ✓ should match .b.c with ?*?******? and {dot: true}
    ✓ should match .b.c with ?*?******? and {nonegate: true}
    ✓ should match .b.c/ with ?*?******?
    ✓ should match .b.c/ with ?*?******? and {dot: true}
    ✓ should match .b.c/ with ?*?******? and {nonegate: true}
    ✓ should match .b/ with ?*?******?
    ✓ should match .b/ with ?*?******? and {dot: true}
    ✓ should match .b/ with ?*?******? and {nonegate: true}
    ✓ should match .b/.c with ?*?******?
    ✓ should match .b/.c with ?*?******? and {dot: true}
    ✓ should match .b/.c with ?*?******? and {nonegate: true}
    ✓ should match .b/c with ?*?******?
    ✓ should match .b/c with ?*?******? and {dot: true}
    ✓ should match .b/c with ?*?******? and {nonegate: true}
    ✓ should match b/.c with ?*?******?
    ✓ should match b/.c with ?*?******? and {dot: true}
    ✓ should match b/.c with ?*?******? and {nonegate: true}
    ✓ should match b/.c/ with ?*?******?
    ✓ should match b/.c/ with ?*?******? and {dot: true}
    ✓ should match b/.c/ with ?*?******? and {nonegate: true}
    ✓ should match a/+b/c with ?*?******?
    ✓ should match a/+b/c with ?*?******? and {dot: true}
    ✓ should match a/+b/c with ?*?******? and {nonegate: true}
    ✓ should match +a/+b/c with ?*?******?
    ✓ should match +a/+b/c with ?*?******? and {dot: true}
    ✓ should match +a/+b/c with ?*?******? and {nonegate: true}
    ✓ should match a (foo) with ?*?******?
    ✓ should match a (foo) with ?*?******? and {dot: true}
    ✓ should match a (foo) with ?*?******? and {nonegate: true}
    ✓ should match a (foo)/(bar) with ?*?******?
    ✓ should match a (foo)/(bar) with ?*?******? and {dot: true}
    ✓ should match a (foo)/(bar) with ?*?******? and {nonegate: true}
    ✓ should match a/b/c (1) with ?*?******?
    ✓ should match a/b/c (1) with ?*?******? and {dot: true}
    ✓ should match a/b/c (1) with ?*?******? and {nonegate: true}
    ✓ should match a/b (2)/c (1) with ?*?******?
    ✓ should match a/b (2)/c (1) with ?*?******? and {dot: true}
    ✓ should match a/b (2)/c (1) with ?*?******? and {nonegate: true}
    ✓ should match a/b/c [def] with ?*?******?
    ✓ should match a/b/c [def] with ?*?******? and {dot: true}
    ✓ should match a/b/c [def] with ?*?******? and {nonegate: true}
    ✓ should match a with ?*?***?
    ✓ should match a with ?*?***? and {dot: true}
    ✓ should match a with ?*?***? and {nonegate: true}
    ✓ should match a.md with ?*?***?
    ✓ should match a.md with ?*?***? and {dot: true}
    ✓ should match a.md with ?*?***? and {nonegate: true}
    ✓ should match a.js with ?*?***?
    ✓ should match a.js with ?*?***? and {dot: true}
    ✓ should match a.js with ?*?***? and {nonegate: true}
    ✓ should match a/ with ?*?***?
    ✓ should match a/ with ?*?***? and {dot: true}
    ✓ should match a/ with ?*?***? and {nonegate: true}
    ✓ should match a/b with ?*?***?
    ✓ should match a/b with ?*?***? and {dot: true}
    ✓ should match a/b with ?*?***? and {nonegate: true}
    ✓ should match a/b/.c.md with ?*?***?
    ✓ should match a/b/.c.md with ?*?***? and {dot: true}
    ✓ should match a/b/.c.md with ?*?***? and {nonegate: true}
    ✓ should match a/b/c with ?*?***?
    ✓ should match a/b/c with ?*?***? and {dot: true}
    ✓ should match a/b/c with ?*?***? and {nonegate: true}
    ✓ should match a/b/c.md with ?*?***?
    ✓ should match a/b/c.md with ?*?***? and {dot: true}
    ✓ should match a/b/c.md with ?*?***? and {nonegate: true}
    ✓ should match a/b/c/ with ?*?***?
    ✓ should match a/b/c/ with ?*?***? and {dot: true}
    ✓ should match a/b/c/ with ?*?***? and {nonegate: true}
    ✓ should match a/b/c/d with ?*?***?
    ✓ should match a/b/c/d with ?*?***? and {dot: true}
    ✓ should match a/b/c/d with ?*?***? and {nonegate: true}
    ✓ should match a/b/c/d/ with ?*?***?
    ✓ should match a/b/c/d/ with ?*?***? and {dot: true}
    ✓ should match a/b/c/d/ with ?*?***? and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with ?*?***?
    ✓ should match a/b/c/d/e/f/z.js with ?*?***? and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with ?*?***? and {nonegate: true}
    ✓ should match a/b/c/z.js with ?*?***?
    ✓ should match a/b/c/z.js with ?*?***? and {dot: true}
    ✓ should match a/b/c/z.js with ?*?***? and {nonegate: true}
    ✓ should match a/bb with ?*?***?
    ✓ should match a/bb with ?*?***? and {dot: true}
    ✓ should match a/bb with ?*?***? and {nonegate: true}
    ✓ should match a/cb with ?*?***?
    ✓ should match a/cb with ?*?***? and {dot: true}
    ✓ should match a/cb with ?*?***? and {nonegate: true}
    ✓ should match abbbz with ?*?***?
    ✓ should match abbbz with ?*?***? and {dot: true}
    ✓ should match abbbz with ?*?***? and {nonegate: true}
    ✓ should match abc with ?*?***?
    ✓ should match abc with ?*?***? and {dot: true}
    ✓ should match abc with ?*?***? and {nonegate: true}
    ✓ should match abd with ?*?***?
    ✓ should match abd with ?*?***? and {dot: true}
    ✓ should match abd with ?*?***? and {nonegate: true}
    ✓ should match z.js with ?*?***?
    ✓ should match z.js with ?*?***? and {dot: true}
    ✓ should match z.js with ?*?***? and {nonegate: true}
    ✓ should match za.js with ?*?***?
    ✓ should match za.js with ?*?***? and {dot: true}
    ✓ should match za.js with ?*?***? and {nonegate: true}
    ✓ should match !a.js with ?*?***?
    ✓ should match !a.js with ?*?***? and {dot: true}
    ✓ should match !a.js with ?*?***? and {nonegate: true}
    ✓ should match !a/b with ?*?***?
    ✓ should match !a/b with ?*?***? and {dot: true}
    ✓ should match !a/b with ?*?***? and {nonegate: true}
    ✓ should match !a/b/ with ?*?***?
    ✓ should match !a/b/ with ?*?***? and {dot: true}
    ✓ should match !a/b/ with ?*?***? and {nonegate: true}
    ✓ should match !a/b/c with ?*?***?
    ✓ should match !a/b/c with ?*?***? and {dot: true}
    ✓ should match !a/b/c with ?*?***? and {nonegate: true}
    ✓ should match !a/b/c/ with ?*?***?
    ✓ should match !a/b/c/ with ?*?***? and {dot: true}
    ✓ should match !a/b/c/ with ?*?***? and {nonegate: true}
    ✓ should match !a/!b with ?*?***?
    ✓ should match !a/!b with ?*?***? and {dot: true}
    ✓ should match !a/!b with ?*?***? and {nonegate: true}
    ✓ should match !a/!b/c with ?*?***?
    ✓ should match !a/!b/c with ?*?***? and {dot: true}
    ✓ should match !a/!b/c with ?*?***? and {nonegate: true}
    ✓ should match !a/!b/c/d with ?*?***?
    ✓ should match !a/!b/c/d with ?*?***? and {dot: true}
    ✓ should match !a/!b/c/d with ?*?***? and {nonegate: true}
    ✓ should match !a/b/.c.md with ?*?***?
    ✓ should match !a/b/.c.md with ?*?***? and {dot: true}
    ✓ should match !a/b/.c.md with ?*?***? and {nonegate: true}
    ✓ should match /a/ with ?*?***?
    ✓ should match /a/ with ?*?***? and {dot: true}
    ✓ should match /a/ with ?*?***? and {nonegate: true}
    ✓ should match /a/b with ?*?***?
    ✓ should match /a/b with ?*?***? and {dot: true}
    ✓ should match /a/b with ?*?***? and {nonegate: true}
    ✓ should match /a/cb with ?*?***?
    ✓ should match /a/cb with ?*?***? and {dot: true}
    ✓ should match /a/cb with ?*?***? and {nonegate: true}
    ✓ should match /a/bb with ?*?***?
    ✓ should match /a/bb with ?*?***? and {dot: true}
    ✓ should match /a/bb with ?*?***? and {nonegate: true}
    ✓ should match /a/b/c with ?*?***?
    ✓ should match /a/b/c with ?*?***? and {dot: true}
    ✓ should match /a/b/c with ?*?***? and {nonegate: true}
    ✓ should match /a/b/c/ with ?*?***?
    ✓ should match /a/b/c/ with ?*?***? and {dot: true}
    ✓ should match /a/b/c/ with ?*?***? and {nonegate: true}
    ✓ should match /a/b/c/d with ?*?***?
    ✓ should match /a/b/c/d with ?*?***? and {dot: true}
    ✓ should match /a/b/c/d with ?*?***? and {nonegate: true}
    ✓ should match /a/b/c/d/ with ?*?***?
    ✓ should match /a/b/c/d/ with ?*?***? and {dot: true}
    ✓ should match /a/b/c/d/ with ?*?***? and {nonegate: true}
    ✓ should match . with ?*?***?
    ✓ should match . with ?*?***? and {dot: true}
    ✓ should match . with ?*?***? and {nonegate: true}
    ✓ should match ./ with ?*?***?
    ✓ should match ./ with ?*?***? and {dot: true}
    ✓ should match ./ with ?*?***? and {nonegate: true}
    ✓ should match .. with ?*?***?
    ✓ should match .. with ?*?***? and {dot: true}
    ✓ should match .. with ?*?***? and {nonegate: true}
    ✓ should match ../c with ?*?***?
    ✓ should match ../c with ?*?***? and {dot: true}
    ✓ should match ../c with ?*?***? and {nonegate: true}
    ✓ should match ../c with ?*?***?
    ✓ should match ../c with ?*?***? and {dot: true}
    ✓ should match ../c with ?*?***? and {nonegate: true}
    ✓ should match ./../c with ?*?***?
    ✓ should match ./../c with ?*?***? and {dot: true}
    ✓ should match ./../c with ?*?***? and {nonegate: true}
    ✓ should match ./a/../c with ?*?***?
    ✓ should match ./a/../c with ?*?***? and {dot: true}
    ✓ should match ./a/../c with ?*?***? and {nonegate: true}
    ✓ should match /.. with ?*?***?
    ✓ should match /.. with ?*?***? and {dot: true}
    ✓ should match /.. with ?*?***? and {nonegate: true}
    ✓ should match /../c with ?*?***?
    ✓ should match /../c with ?*?***? and {dot: true}
    ✓ should match /../c with ?*?***? and {nonegate: true}
    ✓ should match /../.c with ?*?***?
    ✓ should match /../.c with ?*?***? and {dot: true}
    ✓ should match /../.c with ?*?***? and {nonegate: true}
    ✓ should match /../.c/ with ?*?***?
    ✓ should match /../.c/ with ?*?***? and {dot: true}
    ✓ should match /../.c/ with ?*?***? and {nonegate: true}
    ✓ should match /a/../c with ?*?***?
    ✓ should match /a/../c with ?*?***? and {dot: true}
    ✓ should match /a/../c with ?*?***? and {nonegate: true}
    ✓ should match a/../c with ?*?***?
    ✓ should match a/../c with ?*?***? and {dot: true}
    ✓ should match a/../c with ?*?***? and {nonegate: true}
    ✓ should match ../.b/.c with ?*?***?
    ✓ should match ../.b/.c with ?*?***? and {dot: true}
    ✓ should match ../.b/.c with ?*?***? and {nonegate: true}
    ✓ should match ../b/.c with ?*?***?
    ✓ should match ../b/.c with ?*?***? and {dot: true}
    ✓ should match ../b/.c with ?*?***? and {nonegate: true}
    ✓ should match ./.b/.c with ?*?***?
    ✓ should match ./.b/.c with ?*?***? and {dot: true}
    ✓ should match ./.b/.c with ?*?***? and {nonegate: true}
    ✓ should match ./b/.c with ?*?***?
    ✓ should match ./b/.c with ?*?***? and {dot: true}
    ✓ should match ./b/.c with ?*?***? and {nonegate: true}
    ✓ should match .b with ?*?***?
    ✓ should match .b with ?*?***? and {dot: true}
    ✓ should match .b with ?*?***? and {nonegate: true}
    ✓ should match .b.c with ?*?***?
    ✓ should match .b.c with ?*?***? and {dot: true}
    ✓ should match .b.c with ?*?***? and {nonegate: true}
    ✓ should match .b.c/ with ?*?***?
    ✓ should match .b.c/ with ?*?***? and {dot: true}
    ✓ should match .b.c/ with ?*?***? and {nonegate: true}
    ✓ should match .b/ with ?*?***?
    ✓ should match .b/ with ?*?***? and {dot: true}
    ✓ should match .b/ with ?*?***? and {nonegate: true}
    ✓ should match .b/.c with ?*?***?
    ✓ should match .b/.c with ?*?***? and {dot: true}
    ✓ should match .b/.c with ?*?***? and {nonegate: true}
    ✓ should match .b/c with ?*?***?
    ✓ should match .b/c with ?*?***? and {dot: true}
    ✓ should match .b/c with ?*?***? and {nonegate: true}
    ✓ should match b/.c with ?*?***?
    ✓ should match b/.c with ?*?***? and {dot: true}
    ✓ should match b/.c with ?*?***? and {nonegate: true}
    ✓ should match b/.c/ with ?*?***?
    ✓ should match b/.c/ with ?*?***? and {dot: true}
    ✓ should match b/.c/ with ?*?***? and {nonegate: true}
    ✓ should match a/+b/c with ?*?***?
    ✓ should match a/+b/c with ?*?***? and {dot: true}
    ✓ should match a/+b/c with ?*?***? and {nonegate: true}
    ✓ should match +a/+b/c with ?*?***?
    ✓ should match +a/+b/c with ?*?***? and {dot: true}
    ✓ should match +a/+b/c with ?*?***? and {nonegate: true}
    ✓ should match a (foo) with ?*?***?
    ✓ should match a (foo) with ?*?***? and {dot: true}
    ✓ should match a (foo) with ?*?***? and {nonegate: true}
    ✓ should match a (foo)/(bar) with ?*?***?
    ✓ should match a (foo)/(bar) with ?*?***? and {dot: true}
    ✓ should match a (foo)/(bar) with ?*?***? and {nonegate: true}
    ✓ should match a/b/c (1) with ?*?***?
    ✓ should match a/b/c (1) with ?*?***? and {dot: true}
    ✓ should match a/b/c (1) with ?*?***? and {nonegate: true}
    ✓ should match a/b (2)/c (1) with ?*?***?
    ✓ should match a/b (2)/c (1) with ?*?***? and {dot: true}
    ✓ should match a/b (2)/c (1) with ?*?***? and {nonegate: true}
    ✓ should match a/b/c [def] with ?*?***?
    ✓ should match a/b/c [def] with ?*?***? and {dot: true}
    ✓ should match a/b/c [def] with ?*?***? and {nonegate: true}
    ✓ should match a with ?*?***?***????
    ✓ should match a with ?*?***?***???? and {dot: true}
    ✓ should match a with ?*?***?***???? and {nonegate: true}
    ✓ should match a.md with ?*?***?***????
    ✓ should match a.md with ?*?***?***???? and {dot: true}
    ✓ should match a.md with ?*?***?***???? and {nonegate: true}
    ✓ should match a.js with ?*?***?***????
    ✓ should match a.js with ?*?***?***???? and {dot: true}
    ✓ should match a.js with ?*?***?***???? and {nonegate: true}
    ✓ should match a/ with ?*?***?***????
    ✓ should match a/ with ?*?***?***???? and {dot: true}
    ✓ should match a/ with ?*?***?***???? and {nonegate: true}
    ✓ should match a/b with ?*?***?***????
    ✓ should match a/b with ?*?***?***???? and {dot: true}
    ✓ should match a/b with ?*?***?***???? and {nonegate: true}
    ✓ should match a/b/.c.md with ?*?***?***????
    ✓ should match a/b/.c.md with ?*?***?***???? and {dot: true}
    ✓ should match a/b/.c.md with ?*?***?***???? and {nonegate: true}
    ✓ should match a/b/c with ?*?***?***????
    ✓ should match a/b/c with ?*?***?***???? and {dot: true}
    ✓ should match a/b/c with ?*?***?***???? and {nonegate: true}
    ✓ should match a/b/c.md with ?*?***?***????
    ✓ should match a/b/c.md with ?*?***?***???? and {dot: true}
    ✓ should match a/b/c.md with ?*?***?***???? and {nonegate: true}
    ✓ should match a/b/c/ with ?*?***?***????
    ✓ should match a/b/c/ with ?*?***?***???? and {dot: true}
    ✓ should match a/b/c/ with ?*?***?***???? and {nonegate: true}
    ✓ should match a/b/c/d with ?*?***?***????
    ✓ should match a/b/c/d with ?*?***?***???? and {dot: true}
    ✓ should match a/b/c/d with ?*?***?***???? and {nonegate: true}
    ✓ should match a/b/c/d/ with ?*?***?***????
    ✓ should match a/b/c/d/ with ?*?***?***???? and {dot: true}
    ✓ should match a/b/c/d/ with ?*?***?***???? and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with ?*?***?***????
    ✓ should match a/b/c/d/e/f/z.js with ?*?***?***???? and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with ?*?***?***???? and {nonegate: true}
    ✓ should match a/b/c/z.js with ?*?***?***????
    ✓ should match a/b/c/z.js with ?*?***?***???? and {dot: true}
    ✓ should match a/b/c/z.js with ?*?***?***???? and {nonegate: true}
    ✓ should match a/bb with ?*?***?***????
    ✓ should match a/bb with ?*?***?***???? and {dot: true}
    ✓ should match a/bb with ?*?***?***???? and {nonegate: true}
    ✓ should match a/cb with ?*?***?***????
    ✓ should match a/cb with ?*?***?***???? and {dot: true}
    ✓ should match a/cb with ?*?***?***???? and {nonegate: true}
    ✓ should match abbbz with ?*?***?***????
    ✓ should match abbbz with ?*?***?***???? and {dot: true}
    ✓ should match abbbz with ?*?***?***???? and {nonegate: true}
    ✓ should match abc with ?*?***?***????
    ✓ should match abc with ?*?***?***???? and {dot: true}
    ✓ should match abc with ?*?***?***???? and {nonegate: true}
    ✓ should match abd with ?*?***?***????
    ✓ should match abd with ?*?***?***???? and {dot: true}
    ✓ should match abd with ?*?***?***???? and {nonegate: true}
    ✓ should match z.js with ?*?***?***????
    ✓ should match z.js with ?*?***?***???? and {dot: true}
    ✓ should match z.js with ?*?***?***???? and {nonegate: true}
    ✓ should match za.js with ?*?***?***????
    ✓ should match za.js with ?*?***?***???? and {dot: true}
    ✓ should match za.js with ?*?***?***???? and {nonegate: true}
    ✓ should match !a.js with ?*?***?***????
    ✓ should match !a.js with ?*?***?***???? and {dot: true}
    ✓ should match !a.js with ?*?***?***???? and {nonegate: true}
    ✓ should match !a/b with ?*?***?***????
    ✓ should match !a/b with ?*?***?***???? and {dot: true}
    ✓ should match !a/b with ?*?***?***???? and {nonegate: true}
    ✓ should match !a/b/ with ?*?***?***????
    ✓ should match !a/b/ with ?*?***?***???? and {dot: true}
    ✓ should match !a/b/ with ?*?***?***???? and {nonegate: true}
    ✓ should match !a/b/c with ?*?***?***????
    ✓ should match !a/b/c with ?*?***?***???? and {dot: true}
    ✓ should match !a/b/c with ?*?***?***???? and {nonegate: true}
    ✓ should match !a/b/c/ with ?*?***?***????
    ✓ should match !a/b/c/ with ?*?***?***???? and {dot: true}
    ✓ should match !a/b/c/ with ?*?***?***???? and {nonegate: true}
    ✓ should match !a/!b with ?*?***?***????
    ✓ should match !a/!b with ?*?***?***???? and {dot: true}
    ✓ should match !a/!b with ?*?***?***???? and {nonegate: true}
    ✓ should match !a/!b/c with ?*?***?***????
    ✓ should match !a/!b/c with ?*?***?***???? and {dot: true}
    ✓ should match !a/!b/c with ?*?***?***???? and {nonegate: true}
    ✓ should match !a/!b/c/d with ?*?***?***????
    ✓ should match !a/!b/c/d with ?*?***?***???? and {dot: true}
    ✓ should match !a/!b/c/d with ?*?***?***???? and {nonegate: true}
    ✓ should match !a/b/.c.md with ?*?***?***????
    ✓ should match !a/b/.c.md with ?*?***?***???? and {dot: true}
    ✓ should match !a/b/.c.md with ?*?***?***???? and {nonegate: true}
    ✓ should match /a/ with ?*?***?***????
    ✓ should match /a/ with ?*?***?***???? and {dot: true}
    ✓ should match /a/ with ?*?***?***???? and {nonegate: true}
    ✓ should match /a/b with ?*?***?***????
    ✓ should match /a/b with ?*?***?***???? and {dot: true}
    ✓ should match /a/b with ?*?***?***???? and {nonegate: true}
    ✓ should match /a/cb with ?*?***?***????
    ✓ should match /a/cb with ?*?***?***???? and {dot: true}
    ✓ should match /a/cb with ?*?***?***???? and {nonegate: true}
    ✓ should match /a/bb with ?*?***?***????
    ✓ should match /a/bb with ?*?***?***???? and {dot: true}
    ✓ should match /a/bb with ?*?***?***???? and {nonegate: true}
    ✓ should match /a/b/c with ?*?***?***????
    ✓ should match /a/b/c with ?*?***?***???? and {dot: true}
    ✓ should match /a/b/c with ?*?***?***???? and {nonegate: true}
    ✓ should match /a/b/c/ with ?*?***?***????
    ✓ should match /a/b/c/ with ?*?***?***???? and {dot: true}
    ✓ should match /a/b/c/ with ?*?***?***???? and {nonegate: true}
    ✓ should match /a/b/c/d with ?*?***?***????
    ✓ should match /a/b/c/d with ?*?***?***???? and {dot: true}
    ✓ should match /a/b/c/d with ?*?***?***???? and {nonegate: true}
    ✓ should match /a/b/c/d/ with ?*?***?***????
    ✓ should match /a/b/c/d/ with ?*?***?***???? and {dot: true}
    ✓ should match /a/b/c/d/ with ?*?***?***???? and {nonegate: true}
    ✓ should match . with ?*?***?***????
    ✓ should match . with ?*?***?***???? and {dot: true}
    ✓ should match . with ?*?***?***???? and {nonegate: true}
    ✓ should match ./ with ?*?***?***????
    ✓ should match ./ with ?*?***?***???? and {dot: true}
    ✓ should match ./ with ?*?***?***???? and {nonegate: true}
    ✓ should match .. with ?*?***?***????
    ✓ should match .. with ?*?***?***???? and {dot: true}
    ✓ should match .. with ?*?***?***???? and {nonegate: true}
    ✓ should match ../c with ?*?***?***????
    ✓ should match ../c with ?*?***?***???? and {dot: true}
    ✓ should match ../c with ?*?***?***???? and {nonegate: true}
    ✓ should match ../c with ?*?***?***????
    ✓ should match ../c with ?*?***?***???? and {dot: true}
    ✓ should match ../c with ?*?***?***???? and {nonegate: true}
    ✓ should match ./../c with ?*?***?***????
    ✓ should match ./../c with ?*?***?***???? and {dot: true}
    ✓ should match ./../c with ?*?***?***???? and {nonegate: true}
    ✓ should match ./a/../c with ?*?***?***????
    ✓ should match ./a/../c with ?*?***?***???? and {dot: true}
    ✓ should match ./a/../c with ?*?***?***???? and {nonegate: true}
    ✓ should match /.. with ?*?***?***????
    ✓ should match /.. with ?*?***?***???? and {dot: true}
    ✓ should match /.. with ?*?***?***???? and {nonegate: true}
    ✓ should match /../c with ?*?***?***????
    ✓ should match /../c with ?*?***?***???? and {dot: true}
    ✓ should match /../c with ?*?***?***???? and {nonegate: true}
    ✓ should match /../.c with ?*?***?***????
    ✓ should match /../.c with ?*?***?***???? and {dot: true}
    ✓ should match /../.c with ?*?***?***???? and {nonegate: true}
    ✓ should match /../.c/ with ?*?***?***????
    ✓ should match /../.c/ with ?*?***?***???? and {dot: true}
    ✓ should match /../.c/ with ?*?***?***???? and {nonegate: true}
    ✓ should match /a/../c with ?*?***?***????
    ✓ should match /a/../c with ?*?***?***???? and {dot: true}
    ✓ should match /a/../c with ?*?***?***???? and {nonegate: true}
    ✓ should match a/../c with ?*?***?***????
    ✓ should match a/../c with ?*?***?***???? and {dot: true}
    ✓ should match a/../c with ?*?***?***???? and {nonegate: true}
    ✓ should match ../.b/.c with ?*?***?***????
    ✓ should match ../.b/.c with ?*?***?***???? and {dot: true}
    ✓ should match ../.b/.c with ?*?***?***???? and {nonegate: true}
    ✓ should match ../b/.c with ?*?***?***????
    ✓ should match ../b/.c with ?*?***?***???? and {dot: true}
    ✓ should match ../b/.c with ?*?***?***???? and {nonegate: true}
    ✓ should match ./.b/.c with ?*?***?***????
    ✓ should match ./.b/.c with ?*?***?***???? and {dot: true}
    ✓ should match ./.b/.c with ?*?***?***???? and {nonegate: true}
    ✓ should match ./b/.c with ?*?***?***????
    ✓ should match ./b/.c with ?*?***?***???? and {dot: true}
    ✓ should match ./b/.c with ?*?***?***???? and {nonegate: true}
    ✓ should match .b with ?*?***?***????
    ✓ should match .b with ?*?***?***???? and {dot: true}
    ✓ should match .b with ?*?***?***???? and {nonegate: true}
    ✓ should match .b.c with ?*?***?***????
    ✓ should match .b.c with ?*?***?***???? and {dot: true}
    ✓ should match .b.c with ?*?***?***???? and {nonegate: true}
    ✓ should match .b.c/ with ?*?***?***????
    ✓ should match .b.c/ with ?*?***?***???? and {dot: true}
    ✓ should match .b.c/ with ?*?***?***???? and {nonegate: true}
    ✓ should match .b/ with ?*?***?***????
    ✓ should match .b/ with ?*?***?***???? and {dot: true}
    ✓ should match .b/ with ?*?***?***???? and {nonegate: true}
    ✓ should match .b/.c with ?*?***?***????
    ✓ should match .b/.c with ?*?***?***???? and {dot: true}
    ✓ should match .b/.c with ?*?***?***???? and {nonegate: true}
    ✓ should match .b/c with ?*?***?***????
    ✓ should match .b/c with ?*?***?***???? and {dot: true}
    ✓ should match .b/c with ?*?***?***???? and {nonegate: true}
    ✓ should match b/.c with ?*?***?***????
    ✓ should match b/.c with ?*?***?***???? and {dot: true}
    ✓ should match b/.c with ?*?***?***???? and {nonegate: true}
    ✓ should match b/.c/ with ?*?***?***????
    ✓ should match b/.c/ with ?*?***?***???? and {dot: true}
    ✓ should match b/.c/ with ?*?***?***???? and {nonegate: true}
    ✓ should match a/+b/c with ?*?***?***????
    ✓ should match a/+b/c with ?*?***?***???? and {dot: true}
    ✓ should match a/+b/c with ?*?***?***???? and {nonegate: true}
    ✓ should match +a/+b/c with ?*?***?***????
    ✓ should match +a/+b/c with ?*?***?***???? and {dot: true}
    ✓ should match +a/+b/c with ?*?***?***???? and {nonegate: true}
    ✓ should match a (foo) with ?*?***?***????
    ✓ should match a (foo) with ?*?***?***???? and {dot: true}
    ✓ should match a (foo) with ?*?***?***???? and {nonegate: true}
    ✓ should match a (foo)/(bar) with ?*?***?***????
    ✓ should match a (foo)/(bar) with ?*?***?***???? and {dot: true}
    ✓ should match a (foo)/(bar) with ?*?***?***???? and {nonegate: true}
    ✓ should match a/b/c (1) with ?*?***?***????
    ✓ should match a/b/c (1) with ?*?***?***???? and {dot: true}
    ✓ should match a/b/c (1) with ?*?***?***???? and {nonegate: true}
    ✓ should match a/b (2)/c (1) with ?*?***?***????
    ✓ should match a/b (2)/c (1) with ?*?***?***???? and {dot: true}
    ✓ should match a/b (2)/c (1) with ?*?***?***???? and {nonegate: true}
    ✓ should match a/b/c [def] with ?*?***?***????
    ✓ should match a/b/c [def] with ?*?***?***???? and {dot: true}
    ✓ should match a/b/c [def] with ?*?***?***???? and {nonegate: true}
    ✓ should match a with ?*?*?
    ✓ should match a with ?*?*? and {dot: true}
    ✓ should match a with ?*?*? and {nonegate: true}
    ✓ should match a.md with ?*?*?
    ✓ should match a.md with ?*?*? and {dot: true}
    ✓ should match a.md with ?*?*? and {nonegate: true}
    ✓ should match a.js with ?*?*?
    ✓ should match a.js with ?*?*? and {dot: true}
    ✓ should match a.js with ?*?*? and {nonegate: true}
    ✓ should match a/ with ?*?*?
    ✓ should match a/ with ?*?*? and {dot: true}
    ✓ should match a/ with ?*?*? and {nonegate: true}
    ✓ should match a/b with ?*?*?
    ✓ should match a/b with ?*?*? and {dot: true}
    ✓ should match a/b with ?*?*? and {nonegate: true}
    ✓ should match a/b/.c.md with ?*?*?
    ✓ should match a/b/.c.md with ?*?*? and {dot: true}
    ✓ should match a/b/.c.md with ?*?*? and {nonegate: true}
    ✓ should match a/b/c with ?*?*?
    ✓ should match a/b/c with ?*?*? and {dot: true}
    ✓ should match a/b/c with ?*?*? and {nonegate: true}
    ✓ should match a/b/c.md with ?*?*?
    ✓ should match a/b/c.md with ?*?*? and {dot: true}
    ✓ should match a/b/c.md with ?*?*? and {nonegate: true}
    ✓ should match a/b/c/ with ?*?*?
    ✓ should match a/b/c/ with ?*?*? and {dot: true}
    ✓ should match a/b/c/ with ?*?*? and {nonegate: true}
    ✓ should match a/b/c/d with ?*?*?
    ✓ should match a/b/c/d with ?*?*? and {dot: true}
    ✓ should match a/b/c/d with ?*?*? and {nonegate: true}
    ✓ should match a/b/c/d/ with ?*?*?
    ✓ should match a/b/c/d/ with ?*?*? and {dot: true}
    ✓ should match a/b/c/d/ with ?*?*? and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with ?*?*?
    ✓ should match a/b/c/d/e/f/z.js with ?*?*? and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with ?*?*? and {nonegate: true}
    ✓ should match a/b/c/z.js with ?*?*?
    ✓ should match a/b/c/z.js with ?*?*? and {dot: true}
    ✓ should match a/b/c/z.js with ?*?*? and {nonegate: true}
    ✓ should match a/bb with ?*?*?
    ✓ should match a/bb with ?*?*? and {dot: true}
    ✓ should match a/bb with ?*?*? and {nonegate: true}
    ✓ should match a/cb with ?*?*?
    ✓ should match a/cb with ?*?*? and {dot: true}
    ✓ should match a/cb with ?*?*? and {nonegate: true}
    ✓ should match abbbz with ?*?*?
    ✓ should match abbbz with ?*?*? and {dot: true}
    ✓ should match abbbz with ?*?*? and {nonegate: true}
    ✓ should match abc with ?*?*?
    ✓ should match abc with ?*?*? and {dot: true}
    ✓ should match abc with ?*?*? and {nonegate: true}
    ✓ should match abd with ?*?*?
    ✓ should match abd with ?*?*? and {dot: true}
    ✓ should match abd with ?*?*? and {nonegate: true}
    ✓ should match z.js with ?*?*?
    ✓ should match z.js with ?*?*? and {dot: true}
    ✓ should match z.js with ?*?*? and {nonegate: true}
    ✓ should match za.js with ?*?*?
    ✓ should match za.js with ?*?*? and {dot: true}
    ✓ should match za.js with ?*?*? and {nonegate: true}
    ✓ should match !a.js with ?*?*?
    ✓ should match !a.js with ?*?*? and {dot: true}
    ✓ should match !a.js with ?*?*? and {nonegate: true}
    ✓ should match !a/b with ?*?*?
    ✓ should match !a/b with ?*?*? and {dot: true}
    ✓ should match !a/b with ?*?*? and {nonegate: true}
    ✓ should match !a/b/ with ?*?*?
    ✓ should match !a/b/ with ?*?*? and {dot: true}
    ✓ should match !a/b/ with ?*?*? and {nonegate: true}
    ✓ should match !a/b/c with ?*?*?
    ✓ should match !a/b/c with ?*?*? and {dot: true}
    ✓ should match !a/b/c with ?*?*? and {nonegate: true}
    ✓ should match !a/b/c/ with ?*?*?
    ✓ should match !a/b/c/ with ?*?*? and {dot: true}
    ✓ should match !a/b/c/ with ?*?*? and {nonegate: true}
    ✓ should match !a/!b with ?*?*?
    ✓ should match !a/!b with ?*?*? and {dot: true}
    ✓ should match !a/!b with ?*?*? and {nonegate: true}
    ✓ should match !a/!b/c with ?*?*?
    ✓ should match !a/!b/c with ?*?*? and {dot: true}
    ✓ should match !a/!b/c with ?*?*? and {nonegate: true}
    ✓ should match !a/!b/c/d with ?*?*?
    ✓ should match !a/!b/c/d with ?*?*? and {dot: true}
    ✓ should match !a/!b/c/d with ?*?*? and {nonegate: true}
    ✓ should match !a/b/.c.md with ?*?*?
    ✓ should match !a/b/.c.md with ?*?*? and {dot: true}
    ✓ should match !a/b/.c.md with ?*?*? and {nonegate: true}
    ✓ should match /a/ with ?*?*?
    ✓ should match /a/ with ?*?*? and {dot: true}
    ✓ should match /a/ with ?*?*? and {nonegate: true}
    ✓ should match /a/b with ?*?*?
    ✓ should match /a/b with ?*?*? and {dot: true}
    ✓ should match /a/b with ?*?*? and {nonegate: true}
    ✓ should match /a/cb with ?*?*?
    ✓ should match /a/cb with ?*?*? and {dot: true}
    ✓ should match /a/cb with ?*?*? and {nonegate: true}
    ✓ should match /a/bb with ?*?*?
    ✓ should match /a/bb with ?*?*? and {dot: true}
    ✓ should match /a/bb with ?*?*? and {nonegate: true}
    ✓ should match /a/b/c with ?*?*?
    ✓ should match /a/b/c with ?*?*? and {dot: true}
    ✓ should match /a/b/c with ?*?*? and {nonegate: true}
    ✓ should match /a/b/c/ with ?*?*?
    ✓ should match /a/b/c/ with ?*?*? and {dot: true}
    ✓ should match /a/b/c/ with ?*?*? and {nonegate: true}
    ✓ should match /a/b/c/d with ?*?*?
    ✓ should match /a/b/c/d with ?*?*? and {dot: true}
    ✓ should match /a/b/c/d with ?*?*? and {nonegate: true}
    ✓ should match /a/b/c/d/ with ?*?*?
    ✓ should match /a/b/c/d/ with ?*?*? and {dot: true}
    ✓ should match /a/b/c/d/ with ?*?*? and {nonegate: true}
    ✓ should match . with ?*?*?
    ✓ should match . with ?*?*? and {dot: true}
    ✓ should match . with ?*?*? and {nonegate: true}
    ✓ should match ./ with ?*?*?
    ✓ should match ./ with ?*?*? and {dot: true}
    ✓ should match ./ with ?*?*? and {nonegate: true}
    ✓ should match .. with ?*?*?
    ✓ should match .. with ?*?*? and {dot: true}
    ✓ should match .. with ?*?*? and {nonegate: true}
    ✓ should match ../c with ?*?*?
    ✓ should match ../c with ?*?*? and {dot: true}
    ✓ should match ../c with ?*?*? and {nonegate: true}
    ✓ should match ../c with ?*?*?
    ✓ should match ../c with ?*?*? and {dot: true}
    ✓ should match ../c with ?*?*? and {nonegate: true}
    ✓ should match ./../c with ?*?*?
    ✓ should match ./../c with ?*?*? and {dot: true}
    ✓ should match ./../c with ?*?*? and {nonegate: true}
    ✓ should match ./a/../c with ?*?*?
    ✓ should match ./a/../c with ?*?*? and {dot: true}
    ✓ should match ./a/../c with ?*?*? and {nonegate: true}
    ✓ should match /.. with ?*?*?
    ✓ should match /.. with ?*?*? and {dot: true}
    ✓ should match /.. with ?*?*? and {nonegate: true}
    ✓ should match /../c with ?*?*?
    ✓ should match /../c with ?*?*? and {dot: true}
    ✓ should match /../c with ?*?*? and {nonegate: true}
    ✓ should match /../.c with ?*?*?
    ✓ should match /../.c with ?*?*? and {dot: true}
    ✓ should match /../.c with ?*?*? and {nonegate: true}
    ✓ should match /../.c/ with ?*?*?
    ✓ should match /../.c/ with ?*?*? and {dot: true}
    ✓ should match /../.c/ with ?*?*? and {nonegate: true}
    ✓ should match /a/../c with ?*?*?
    ✓ should match /a/../c with ?*?*? and {dot: true}
    ✓ should match /a/../c with ?*?*? and {nonegate: true}
    ✓ should match a/../c with ?*?*?
    ✓ should match a/../c with ?*?*? and {dot: true}
    ✓ should match a/../c with ?*?*? and {nonegate: true}
    ✓ should match ../.b/.c with ?*?*?
    ✓ should match ../.b/.c with ?*?*? and {dot: true}
    ✓ should match ../.b/.c with ?*?*? and {nonegate: true}
    ✓ should match ../b/.c with ?*?*?
    ✓ should match ../b/.c with ?*?*? and {dot: true}
    ✓ should match ../b/.c with ?*?*? and {nonegate: true}
    ✓ should match ./.b/.c with ?*?*?
    ✓ should match ./.b/.c with ?*?*? and {dot: true}
    ✓ should match ./.b/.c with ?*?*? and {nonegate: true}
    ✓ should match ./b/.c with ?*?*?
    ✓ should match ./b/.c with ?*?*? and {dot: true}
    ✓ should match ./b/.c with ?*?*? and {nonegate: true}
    ✓ should match .b with ?*?*?
    ✓ should match .b with ?*?*? and {dot: true}
    ✓ should match .b with ?*?*? and {nonegate: true}
    ✓ should match .b.c with ?*?*?
    ✓ should match .b.c with ?*?*? and {dot: true}
    ✓ should match .b.c with ?*?*? and {nonegate: true}
    ✓ should match .b.c/ with ?*?*?
    ✓ should match .b.c/ with ?*?*? and {dot: true}
    ✓ should match .b.c/ with ?*?*? and {nonegate: true}
    ✓ should match .b/ with ?*?*?
    ✓ should match .b/ with ?*?*? and {dot: true}
    ✓ should match .b/ with ?*?*? and {nonegate: true}
    ✓ should match .b/.c with ?*?*?
    ✓ should match .b/.c with ?*?*? and {dot: true}
    ✓ should match .b/.c with ?*?*? and {nonegate: true}
    ✓ should match .b/c with ?*?*?
    ✓ should match .b/c with ?*?*? and {dot: true}
    ✓ should match .b/c with ?*?*? and {nonegate: true}
    ✓ should match b/.c with ?*?*?
    ✓ should match b/.c with ?*?*? and {dot: true}
    ✓ should match b/.c with ?*?*? and {nonegate: true}
    ✓ should match b/.c/ with ?*?*?
    ✓ should match b/.c/ with ?*?*? and {dot: true}
    ✓ should match b/.c/ with ?*?*? and {nonegate: true}
    ✓ should match a/+b/c with ?*?*?
    ✓ should match a/+b/c with ?*?*? and {dot: true}
    ✓ should match a/+b/c with ?*?*? and {nonegate: true}
    ✓ should match +a/+b/c with ?*?*?
    ✓ should match +a/+b/c with ?*?*? and {dot: true}
    ✓ should match +a/+b/c with ?*?*? and {nonegate: true}
    ✓ should match a (foo) with ?*?*?
    ✓ should match a (foo) with ?*?*? and {dot: true}
    ✓ should match a (foo) with ?*?*? and {nonegate: true}
    ✓ should match a (foo)/(bar) with ?*?*?
    ✓ should match a (foo)/(bar) with ?*?*? and {dot: true}
    ✓ should match a (foo)/(bar) with ?*?*? and {nonegate: true}
    ✓ should match a/b/c (1) with ?*?*?
    ✓ should match a/b/c (1) with ?*?*? and {dot: true}
    ✓ should match a/b/c (1) with ?*?*? and {nonegate: true}
    ✓ should match a/b (2)/c (1) with ?*?*?
    ✓ should match a/b (2)/c (1) with ?*?*? and {dot: true}
    ✓ should match a/b (2)/c (1) with ?*?*? and {nonegate: true}
    ✓ should match a/b/c [def] with ?*?*?
    ✓ should match a/b/c [def] with ?*?*? and {dot: true}
    ✓ should match a/b/c [def] with ?*?*? and {nonegate: true}
    ✓ should match a with ?/
    ✓ should match a with ?/ and {dot: true}
    ✓ should match a with ?/ and {nonegate: true}
    ✓ should match a.md with ?/
    ✓ should match a.md with ?/ and {dot: true}
    ✓ should match a.md with ?/ and {nonegate: true}
    ✓ should match a.js with ?/
    ✓ should match a.js with ?/ and {dot: true}
    ✓ should match a.js with ?/ and {nonegate: true}
    ✓ should match a/ with ?/
    ✓ should match a/ with ?/ and {dot: true}
    ✓ should match a/ with ?/ and {nonegate: true}
    ✓ should match a/b with ?/
    ✓ should match a/b with ?/ and {dot: true}
    ✓ should match a/b with ?/ and {nonegate: true}
    ✓ should match a/b/.c.md with ?/
    ✓ should match a/b/.c.md with ?/ and {dot: true}
    ✓ should match a/b/.c.md with ?/ and {nonegate: true}
    ✓ should match a/b/c with ?/
    ✓ should match a/b/c with ?/ and {dot: true}
    ✓ should match a/b/c with ?/ and {nonegate: true}
    ✓ should match a/b/c.md with ?/
    ✓ should match a/b/c.md with ?/ and {dot: true}
    ✓ should match a/b/c.md with ?/ and {nonegate: true}
    ✓ should match a/b/c/ with ?/
    ✓ should match a/b/c/ with ?/ and {dot: true}
    ✓ should match a/b/c/ with ?/ and {nonegate: true}
    ✓ should match a/b/c/d with ?/
    ✓ should match a/b/c/d with ?/ and {dot: true}
    ✓ should match a/b/c/d with ?/ and {nonegate: true}
    ✓ should match a/b/c/d/ with ?/
    ✓ should match a/b/c/d/ with ?/ and {dot: true}
    ✓ should match a/b/c/d/ with ?/ and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with ?/
    ✓ should match a/b/c/d/e/f/z.js with ?/ and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with ?/ and {nonegate: true}
    ✓ should match a/b/c/z.js with ?/
    ✓ should match a/b/c/z.js with ?/ and {dot: true}
    ✓ should match a/b/c/z.js with ?/ and {nonegate: true}
    ✓ should match a/bb with ?/
    ✓ should match a/bb with ?/ and {dot: true}
    ✓ should match a/bb with ?/ and {nonegate: true}
    ✓ should match a/cb with ?/
    ✓ should match a/cb with ?/ and {dot: true}
    ✓ should match a/cb with ?/ and {nonegate: true}
    ✓ should match abbbz with ?/
    ✓ should match abbbz with ?/ and {dot: true}
    ✓ should match abbbz with ?/ and {nonegate: true}
    ✓ should match abc with ?/
    ✓ should match abc with ?/ and {dot: true}
    ✓ should match abc with ?/ and {nonegate: true}
    ✓ should match abd with ?/
    ✓ should match abd with ?/ and {dot: true}
    ✓ should match abd with ?/ and {nonegate: true}
    ✓ should match z.js with ?/
    ✓ should match z.js with ?/ and {dot: true}
    ✓ should match z.js with ?/ and {nonegate: true}
    ✓ should match za.js with ?/
    ✓ should match za.js with ?/ and {dot: true}
    ✓ should match za.js with ?/ and {nonegate: true}
    ✓ should match !a.js with ?/
    ✓ should match !a.js with ?/ and {dot: true}
    ✓ should match !a.js with ?/ and {nonegate: true}
    ✓ should match !a/b with ?/
    ✓ should match !a/b with ?/ and {dot: true}
    ✓ should match !a/b with ?/ and {nonegate: true}
    ✓ should match !a/b/ with ?/
    ✓ should match !a/b/ with ?/ and {dot: true}
    ✓ should match !a/b/ with ?/ and {nonegate: true}
    ✓ should match !a/b/c with ?/
    ✓ should match !a/b/c with ?/ and {dot: true}
    ✓ should match !a/b/c with ?/ and {nonegate: true}
    ✓ should match !a/b/c/ with ?/
    ✓ should match !a/b/c/ with ?/ and {dot: true}
    ✓ should match !a/b/c/ with ?/ and {nonegate: true}
    ✓ should match !a/!b with ?/
    ✓ should match !a/!b with ?/ and {dot: true}
    ✓ should match !a/!b with ?/ and {nonegate: true}
    ✓ should match !a/!b/c with ?/
    ✓ should match !a/!b/c with ?/ and {dot: true}
    ✓ should match !a/!b/c with ?/ and {nonegate: true}
    ✓ should match !a/!b/c/d with ?/
    ✓ should match !a/!b/c/d with ?/ and {dot: true}
    ✓ should match !a/!b/c/d with ?/ and {nonegate: true}
    ✓ should match !a/b/.c.md with ?/
    ✓ should match !a/b/.c.md with ?/ and {dot: true}
    ✓ should match !a/b/.c.md with ?/ and {nonegate: true}
    ✓ should match /a/ with ?/
    ✓ should match /a/ with ?/ and {dot: true}
    ✓ should match /a/ with ?/ and {nonegate: true}
    ✓ should match /a/b with ?/
    ✓ should match /a/b with ?/ and {dot: true}
    ✓ should match /a/b with ?/ and {nonegate: true}
    ✓ should match /a/cb with ?/
    ✓ should match /a/cb with ?/ and {dot: true}
    ✓ should match /a/cb with ?/ and {nonegate: true}
    ✓ should match /a/bb with ?/
    ✓ should match /a/bb with ?/ and {dot: true}
    ✓ should match /a/bb with ?/ and {nonegate: true}
    ✓ should match /a/b/c with ?/
    ✓ should match /a/b/c with ?/ and {dot: true}
    ✓ should match /a/b/c with ?/ and {nonegate: true}
    ✓ should match /a/b/c/ with ?/
    ✓ should match /a/b/c/ with ?/ and {dot: true}
    ✓ should match /a/b/c/ with ?/ and {nonegate: true}
    ✓ should match /a/b/c/d with ?/
    ✓ should match /a/b/c/d with ?/ and {dot: true}
    ✓ should match /a/b/c/d with ?/ and {nonegate: true}
    ✓ should match /a/b/c/d/ with ?/
    ✓ should match /a/b/c/d/ with ?/ and {dot: true}
    ✓ should match /a/b/c/d/ with ?/ and {nonegate: true}
    ✓ should match . with ?/
    ✓ should match . with ?/ and {dot: true}
    ✓ should match . with ?/ and {nonegate: true}
    ✓ should match ./ with ?/
    ✓ should match ./ with ?/ and {dot: true}
    ✓ should match ./ with ?/ and {nonegate: true}
    ✓ should match .. with ?/
    ✓ should match .. with ?/ and {dot: true}
    ✓ should match .. with ?/ and {nonegate: true}
    ✓ should match ../c with ?/
    ✓ should match ../c with ?/ and {dot: true}
    ✓ should match ../c with ?/ and {nonegate: true}
    ✓ should match ../c with ?/
    ✓ should match ../c with ?/ and {dot: true}
    ✓ should match ../c with ?/ and {nonegate: true}
    ✓ should match ./../c with ?/
    ✓ should match ./../c with ?/ and {dot: true}
    ✓ should match ./../c with ?/ and {nonegate: true}
    ✓ should match ./a/../c with ?/
    ✓ should match ./a/../c with ?/ and {dot: true}
    ✓ should match ./a/../c with ?/ and {nonegate: true}
    ✓ should match /.. with ?/
    ✓ should match /.. with ?/ and {dot: true}
    ✓ should match /.. with ?/ and {nonegate: true}
    ✓ should match /../c with ?/
    ✓ should match /../c with ?/ and {dot: true}
    ✓ should match /../c with ?/ and {nonegate: true}
    ✓ should match /../.c with ?/
    ✓ should match /../.c with ?/ and {dot: true}
    ✓ should match /../.c with ?/ and {nonegate: true}
    ✓ should match /../.c/ with ?/
    ✓ should match /../.c/ with ?/ and {dot: true}
    ✓ should match /../.c/ with ?/ and {nonegate: true}
    ✓ should match /a/../c with ?/
    ✓ should match /a/../c with ?/ and {dot: true}
    ✓ should match /a/../c with ?/ and {nonegate: true}
    ✓ should match a/../c with ?/
    ✓ should match a/../c with ?/ and {dot: true}
    ✓ should match a/../c with ?/ and {nonegate: true}
    ✓ should match ../.b/.c with ?/
    ✓ should match ../.b/.c with ?/ and {dot: true}
    ✓ should match ../.b/.c with ?/ and {nonegate: true}
    ✓ should match ../b/.c with ?/
    ✓ should match ../b/.c with ?/ and {dot: true}
    ✓ should match ../b/.c with ?/ and {nonegate: true}
    ✓ should match ./.b/.c with ?/
    ✓ should match ./.b/.c with ?/ and {dot: true}
    ✓ should match ./.b/.c with ?/ and {nonegate: true}
    ✓ should match ./b/.c with ?/
    ✓ should match ./b/.c with ?/ and {dot: true}
    ✓ should match ./b/.c with ?/ and {nonegate: true}
    ✓ should match .b with ?/
    ✓ should match .b with ?/ and {dot: true}
    ✓ should match .b with ?/ and {nonegate: true}
    ✓ should match .b.c with ?/
    ✓ should match .b.c with ?/ and {dot: true}
    ✓ should match .b.c with ?/ and {nonegate: true}
    ✓ should match .b.c/ with ?/
    ✓ should match .b.c/ with ?/ and {dot: true}
    ✓ should match .b.c/ with ?/ and {nonegate: true}
    ✓ should match .b/ with ?/
    ✓ should match .b/ with ?/ and {dot: true}
    ✓ should match .b/ with ?/ and {nonegate: true}
    ✓ should match .b/.c with ?/
    ✓ should match .b/.c with ?/ and {dot: true}
    ✓ should match .b/.c with ?/ and {nonegate: true}
    ✓ should match .b/c with ?/
    ✓ should match .b/c with ?/ and {dot: true}
    ✓ should match .b/c with ?/ and {nonegate: true}
    ✓ should match b/.c with ?/
    ✓ should match b/.c with ?/ and {dot: true}
    ✓ should match b/.c with ?/ and {nonegate: true}
    ✓ should match b/.c/ with ?/
    ✓ should match b/.c/ with ?/ and {dot: true}
    ✓ should match b/.c/ with ?/ and {nonegate: true}
    ✓ should match a/+b/c with ?/
    ✓ should match a/+b/c with ?/ and {dot: true}
    ✓ should match a/+b/c with ?/ and {nonegate: true}
    ✓ should match +a/+b/c with ?/
    ✓ should match +a/+b/c with ?/ and {dot: true}
    ✓ should match +a/+b/c with ?/ and {nonegate: true}
    ✓ should match a (foo) with ?/
    ✓ should match a (foo) with ?/ and {dot: true}
    ✓ should match a (foo) with ?/ and {nonegate: true}
    ✓ should match a (foo)/(bar) with ?/
    ✓ should match a (foo)/(bar) with ?/ and {dot: true}
    ✓ should match a (foo)/(bar) with ?/ and {nonegate: true}
    ✓ should match a/b/c (1) with ?/
    ✓ should match a/b/c (1) with ?/ and {dot: true}
    ✓ should match a/b/c (1) with ?/ and {nonegate: true}
    ✓ should match a/b (2)/c (1) with ?/
    ✓ should match a/b (2)/c (1) with ?/ and {dot: true}
    ✓ should match a/b (2)/c (1) with ?/ and {nonegate: true}
    ✓ should match a/b/c [def] with ?/
    ✓ should match a/b/c [def] with ?/ and {dot: true}
    ✓ should match a/b/c [def] with ?/ and {nonegate: true}
    ✓ should match a with ?/.?
    ✓ should match a with ?/.? and {dot: true}
    ✓ should match a with ?/.? and {nonegate: true}
    ✓ should match a.md with ?/.?
    ✓ should match a.md with ?/.? and {dot: true}
    ✓ should match a.md with ?/.? and {nonegate: true}
    ✓ should match a.js with ?/.?
    ✓ should match a.js with ?/.? and {dot: true}
    ✓ should match a.js with ?/.? and {nonegate: true}
    ✓ should match a/ with ?/.?
    ✓ should match a/ with ?/.? and {dot: true}
    ✓ should match a/ with ?/.? and {nonegate: true}
    ✓ should match a/b with ?/.?
    ✓ should match a/b with ?/.? and {dot: true}
    ✓ should match a/b with ?/.? and {nonegate: true}
    ✓ should match a/b/.c.md with ?/.?
    ✓ should match a/b/.c.md with ?/.? and {dot: true}
    ✓ should match a/b/.c.md with ?/.? and {nonegate: true}
    ✓ should match a/b/c with ?/.?
    ✓ should match a/b/c with ?/.? and {dot: true}
    ✓ should match a/b/c with ?/.? and {nonegate: true}
    ✓ should match a/b/c.md with ?/.?
    ✓ should match a/b/c.md with ?/.? and {dot: true}
    ✓ should match a/b/c.md with ?/.? and {nonegate: true}
    ✓ should match a/b/c/ with ?/.?
    ✓ should match a/b/c/ with ?/.? and {dot: true}
    ✓ should match a/b/c/ with ?/.? and {nonegate: true}
    ✓ should match a/b/c/d with ?/.?
    ✓ should match a/b/c/d with ?/.? and {dot: true}
    ✓ should match a/b/c/d with ?/.? and {nonegate: true}
    ✓ should match a/b/c/d/ with ?/.?
    ✓ should match a/b/c/d/ with ?/.? and {dot: true}
    ✓ should match a/b/c/d/ with ?/.? and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with ?/.?
    ✓ should match a/b/c/d/e/f/z.js with ?/.? and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with ?/.? and {nonegate: true}
    ✓ should match a/b/c/z.js with ?/.?
    ✓ should match a/b/c/z.js with ?/.? and {dot: true}
    ✓ should match a/b/c/z.js with ?/.? and {nonegate: true}
    ✓ should match a/bb with ?/.?
    ✓ should match a/bb with ?/.? and {dot: true}
    ✓ should match a/bb with ?/.? and {nonegate: true}
    ✓ should match a/cb with ?/.?
    ✓ should match a/cb with ?/.? and {dot: true}
    ✓ should match a/cb with ?/.? and {nonegate: true}
    ✓ should match abbbz with ?/.?
    ✓ should match abbbz with ?/.? and {dot: true}
    ✓ should match abbbz with ?/.? and {nonegate: true}
    ✓ should match abc with ?/.?
    ✓ should match abc with ?/.? and {dot: true}
    ✓ should match abc with ?/.? and {nonegate: true}
    ✓ should match abd with ?/.?
    ✓ should match abd with ?/.? and {dot: true}
    ✓ should match abd with ?/.? and {nonegate: true}
    ✓ should match z.js with ?/.?
    ✓ should match z.js with ?/.? and {dot: true}
    ✓ should match z.js with ?/.? and {nonegate: true}
    ✓ should match za.js with ?/.?
    ✓ should match za.js with ?/.? and {dot: true}
    ✓ should match za.js with ?/.? and {nonegate: true}
    ✓ should match !a.js with ?/.?
    ✓ should match !a.js with ?/.? and {dot: true}
    ✓ should match !a.js with ?/.? and {nonegate: true}
    ✓ should match !a/b with ?/.?
    ✓ should match !a/b with ?/.? and {dot: true}
    ✓ should match !a/b with ?/.? and {nonegate: true}
    ✓ should match !a/b/ with ?/.?
    ✓ should match !a/b/ with ?/.? and {dot: true}
    ✓ should match !a/b/ with ?/.? and {nonegate: true}
    ✓ should match !a/b/c with ?/.?
    ✓ should match !a/b/c with ?/.? and {dot: true}
    ✓ should match !a/b/c with ?/.? and {nonegate: true}
    ✓ should match !a/b/c/ with ?/.?
    ✓ should match !a/b/c/ with ?/.? and {dot: true}
    ✓ should match !a/b/c/ with ?/.? and {nonegate: true}
    ✓ should match !a/!b with ?/.?
    ✓ should match !a/!b with ?/.? and {dot: true}
    ✓ should match !a/!b with ?/.? and {nonegate: true}
    ✓ should match !a/!b/c with ?/.?
    ✓ should match !a/!b/c with ?/.? and {dot: true}
    ✓ should match !a/!b/c with ?/.? and {nonegate: true}
    ✓ should match !a/!b/c/d with ?/.?
    ✓ should match !a/!b/c/d with ?/.? and {dot: true}
    ✓ should match !a/!b/c/d with ?/.? and {nonegate: true}
    ✓ should match !a/b/.c.md with ?/.?
    ✓ should match !a/b/.c.md with ?/.? and {dot: true}
    ✓ should match !a/b/.c.md with ?/.? and {nonegate: true}
    ✓ should match /a/ with ?/.?
    ✓ should match /a/ with ?/.? and {dot: true}
    ✓ should match /a/ with ?/.? and {nonegate: true}
    ✓ should match /a/b with ?/.?
    ✓ should match /a/b with ?/.? and {dot: true}
    ✓ should match /a/b with ?/.? and {nonegate: true}
    ✓ should match /a/cb with ?/.?
    ✓ should match /a/cb with ?/.? and {dot: true}
    ✓ should match /a/cb with ?/.? and {nonegate: true}
    ✓ should match /a/bb with ?/.?
    ✓ should match /a/bb with ?/.? and {dot: true}
    ✓ should match /a/bb with ?/.? and {nonegate: true}
    ✓ should match /a/b/c with ?/.?
    ✓ should match /a/b/c with ?/.? and {dot: true}
    ✓ should match /a/b/c with ?/.? and {nonegate: true}
    ✓ should match /a/b/c/ with ?/.?
    ✓ should match /a/b/c/ with ?/.? and {dot: true}
    ✓ should match /a/b/c/ with ?/.? and {nonegate: true}
    ✓ should match /a/b/c/d with ?/.?
    ✓ should match /a/b/c/d with ?/.? and {dot: true}
    ✓ should match /a/b/c/d with ?/.? and {nonegate: true}
    ✓ should match /a/b/c/d/ with ?/.?
    ✓ should match /a/b/c/d/ with ?/.? and {dot: true}
    ✓ should match /a/b/c/d/ with ?/.? and {nonegate: true}
    ✓ should match . with ?/.?
    ✓ should match . with ?/.? and {dot: true}
    ✓ should match . with ?/.? and {nonegate: true}
    ✓ should match ./ with ?/.?
    ✓ should match ./ with ?/.? and {dot: true}
    ✓ should match ./ with ?/.? and {nonegate: true}
    ✓ should match .. with ?/.?
    ✓ should match .. with ?/.? and {dot: true}
    ✓ should match .. with ?/.? and {nonegate: true}
    ✓ should match ../c with ?/.?
    ✓ should match ../c with ?/.? and {dot: true}
    ✓ should match ../c with ?/.? and {nonegate: true}
    ✓ should match ../c with ?/.?
    ✓ should match ../c with ?/.? and {dot: true}
    ✓ should match ../c with ?/.? and {nonegate: true}
    ✓ should match ./../c with ?/.?
    ✓ should match ./../c with ?/.? and {dot: true}
    ✓ should match ./../c with ?/.? and {nonegate: true}
    ✓ should match ./a/../c with ?/.?
    ✓ should match ./a/../c with ?/.? and {dot: true}
    ✓ should match ./a/../c with ?/.? and {nonegate: true}
    ✓ should match /.. with ?/.?
    ✓ should match /.. with ?/.? and {dot: true}
    ✓ should match /.. with ?/.? and {nonegate: true}
    ✓ should match /../c with ?/.?
    ✓ should match /../c with ?/.? and {dot: true}
    ✓ should match /../c with ?/.? and {nonegate: true}
    ✓ should match /../.c with ?/.?
    ✓ should match /../.c with ?/.? and {dot: true}
    ✓ should match /../.c with ?/.? and {nonegate: true}
    ✓ should match /../.c/ with ?/.?
    ✓ should match /../.c/ with ?/.? and {dot: true}
    ✓ should match /../.c/ with ?/.? and {nonegate: true}
    ✓ should match /a/../c with ?/.?
    ✓ should match /a/../c with ?/.? and {dot: true}
    ✓ should match /a/../c with ?/.? and {nonegate: true}
    ✓ should match a/../c with ?/.?
    ✓ should match a/../c with ?/.? and {dot: true}
    ✓ should match a/../c with ?/.? and {nonegate: true}
    ✓ should match ../.b/.c with ?/.?
    ✓ should match ../.b/.c with ?/.? and {dot: true}
    ✓ should match ../.b/.c with ?/.? and {nonegate: true}
    ✓ should match ../b/.c with ?/.?
    ✓ should match ../b/.c with ?/.? and {dot: true}
    ✓ should match ../b/.c with ?/.? and {nonegate: true}
    ✓ should match ./.b/.c with ?/.?
    ✓ should match ./.b/.c with ?/.? and {dot: true}
    ✓ should match ./.b/.c with ?/.? and {nonegate: true}
    ✓ should match ./b/.c with ?/.?
    ✓ should match ./b/.c with ?/.? and {dot: true}
    ✓ should match ./b/.c with ?/.? and {nonegate: true}
    ✓ should match .b with ?/.?
    ✓ should match .b with ?/.? and {dot: true}
    ✓ should match .b with ?/.? and {nonegate: true}
    ✓ should match .b.c with ?/.?
    ✓ should match .b.c with ?/.? and {dot: true}
    ✓ should match .b.c with ?/.? and {nonegate: true}
    ✓ should match .b.c/ with ?/.?
    ✓ should match .b.c/ with ?/.? and {dot: true}
    ✓ should match .b.c/ with ?/.? and {nonegate: true}
    ✓ should match .b/ with ?/.?
    ✓ should match .b/ with ?/.? and {dot: true}
    ✓ should match .b/ with ?/.? and {nonegate: true}
    ✓ should match .b/.c with ?/.?
    ✓ should match .b/.c with ?/.? and {dot: true}
    ✓ should match .b/.c with ?/.? and {nonegate: true}
    ✓ should match .b/c with ?/.?
    ✓ should match .b/c with ?/.? and {dot: true}
    ✓ should match .b/c with ?/.? and {nonegate: true}
    ✓ should match b/.c with ?/.?
    ✓ should match b/.c with ?/.? and {dot: true}
    ✓ should match b/.c with ?/.? and {nonegate: true}
    ✓ should match b/.c/ with ?/.?
    ✓ should match b/.c/ with ?/.? and {dot: true}
    ✓ should match b/.c/ with ?/.? and {nonegate: true}
    ✓ should match a/+b/c with ?/.?
    ✓ should match a/+b/c with ?/.? and {dot: true}
    ✓ should match a/+b/c with ?/.? and {nonegate: true}
    ✓ should match +a/+b/c with ?/.?
    ✓ should match +a/+b/c with ?/.? and {dot: true}
    ✓ should match +a/+b/c with ?/.? and {nonegate: true}
    ✓ should match a (foo) with ?/.?
    ✓ should match a (foo) with ?/.? and {dot: true}
    ✓ should match a (foo) with ?/.? and {nonegate: true}
    ✓ should match a (foo)/(bar) with ?/.?
    ✓ should match a (foo)/(bar) with ?/.? and {dot: true}
    ✓ should match a (foo)/(bar) with ?/.? and {nonegate: true}
    ✓ should match a/b/c (1) with ?/.?
    ✓ should match a/b/c (1) with ?/.? and {dot: true}
    ✓ should match a/b/c (1) with ?/.? and {nonegate: true}
    ✓ should match a/b (2)/c (1) with ?/.?
    ✓ should match a/b (2)/c (1) with ?/.? and {dot: true}
    ✓ should match a/b (2)/c (1) with ?/.? and {nonegate: true}
    ✓ should match a/b/c [def] with ?/.?
    ✓ should match a/b/c [def] with ?/.? and {dot: true}
    ✓ should match a/b/c [def] with ?/.? and {nonegate: true}
    ✓ should match a with ?/.?*
    ✓ should match a with ?/.?* and {dot: true}
    ✓ should match a with ?/.?* and {nonegate: true}
    ✓ should match a.md with ?/.?*
    ✓ should match a.md with ?/.?* and {dot: true}
    ✓ should match a.md with ?/.?* and {nonegate: true}
    ✓ should match a.js with ?/.?*
    ✓ should match a.js with ?/.?* and {dot: true}
    ✓ should match a.js with ?/.?* and {nonegate: true}
    ✓ should match a/ with ?/.?*
    ✓ should match a/ with ?/.?* and {dot: true}
    ✓ should match a/ with ?/.?* and {nonegate: true}
    ✓ should match a/b with ?/.?*
    ✓ should match a/b with ?/.?* and {dot: true}
    ✓ should match a/b with ?/.?* and {nonegate: true}
    ✓ should match a/b/.c.md with ?/.?*
    ✓ should match a/b/.c.md with ?/.?* and {dot: true}
    ✓ should match a/b/.c.md with ?/.?* and {nonegate: true}
    ✓ should match a/b/c with ?/.?*
    ✓ should match a/b/c with ?/.?* and {dot: true}
    ✓ should match a/b/c with ?/.?* and {nonegate: true}
    ✓ should match a/b/c.md with ?/.?*
    ✓ should match a/b/c.md with ?/.?* and {dot: true}
    ✓ should match a/b/c.md with ?/.?* and {nonegate: true}
    ✓ should match a/b/c/ with ?/.?*
    ✓ should match a/b/c/ with ?/.?* and {dot: true}
    ✓ should match a/b/c/ with ?/.?* and {nonegate: true}
    ✓ should match a/b/c/d with ?/.?*
    ✓ should match a/b/c/d with ?/.?* and {dot: true}
    ✓ should match a/b/c/d with ?/.?* and {nonegate: true}
    ✓ should match a/b/c/d/ with ?/.?*
    ✓ should match a/b/c/d/ with ?/.?* and {dot: true}
    ✓ should match a/b/c/d/ with ?/.?* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with ?/.?*
    ✓ should match a/b/c/d/e/f/z.js with ?/.?* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with ?/.?* and {nonegate: true}
    ✓ should match a/b/c/z.js with ?/.?*
    ✓ should match a/b/c/z.js with ?/.?* and {dot: true}
    ✓ should match a/b/c/z.js with ?/.?* and {nonegate: true}
    ✓ should match a/bb with ?/.?*
    ✓ should match a/bb with ?/.?* and {dot: true}
    ✓ should match a/bb with ?/.?* and {nonegate: true}
    ✓ should match a/cb with ?/.?*
    ✓ should match a/cb with ?/.?* and {dot: true}
    ✓ should match a/cb with ?/.?* and {nonegate: true}
    ✓ should match abbbz with ?/.?*
    ✓ should match abbbz with ?/.?* and {dot: true}
    ✓ should match abbbz with ?/.?* and {nonegate: true}
    ✓ should match abc with ?/.?*
    ✓ should match abc with ?/.?* and {dot: true}
    ✓ should match abc with ?/.?* and {nonegate: true}
    ✓ should match abd with ?/.?*
    ✓ should match abd with ?/.?* and {dot: true}
    ✓ should match abd with ?/.?* and {nonegate: true}
    ✓ should match z.js with ?/.?*
    ✓ should match z.js with ?/.?* and {dot: true}
    ✓ should match z.js with ?/.?* and {nonegate: true}
    ✓ should match za.js with ?/.?*
    ✓ should match za.js with ?/.?* and {dot: true}
    ✓ should match za.js with ?/.?* and {nonegate: true}
    ✓ should match !a.js with ?/.?*
    ✓ should match !a.js with ?/.?* and {dot: true}
    ✓ should match !a.js with ?/.?* and {nonegate: true}
    ✓ should match !a/b with ?/.?*
    ✓ should match !a/b with ?/.?* and {dot: true}
    ✓ should match !a/b with ?/.?* and {nonegate: true}
    ✓ should match !a/b/ with ?/.?*
    ✓ should match !a/b/ with ?/.?* and {dot: true}
    ✓ should match !a/b/ with ?/.?* and {nonegate: true}
    ✓ should match !a/b/c with ?/.?*
    ✓ should match !a/b/c with ?/.?* and {dot: true}
    ✓ should match !a/b/c with ?/.?* and {nonegate: true}
    ✓ should match !a/b/c/ with ?/.?*
    ✓ should match !a/b/c/ with ?/.?* and {dot: true}
    ✓ should match !a/b/c/ with ?/.?* and {nonegate: true}
    ✓ should match !a/!b with ?/.?*
    ✓ should match !a/!b with ?/.?* and {dot: true}
    ✓ should match !a/!b with ?/.?* and {nonegate: true}
    ✓ should match !a/!b/c with ?/.?*
    ✓ should match !a/!b/c with ?/.?* and {dot: true}
    ✓ should match !a/!b/c with ?/.?* and {nonegate: true}
    ✓ should match !a/!b/c/d with ?/.?*
    ✓ should match !a/!b/c/d with ?/.?* and {dot: true}
    ✓ should match !a/!b/c/d with ?/.?* and {nonegate: true}
    ✓ should match !a/b/.c.md with ?/.?*
    ✓ should match !a/b/.c.md with ?/.?* and {dot: true}
    ✓ should match !a/b/.c.md with ?/.?* and {nonegate: true}
    ✓ should match /a/ with ?/.?*
    ✓ should match /a/ with ?/.?* and {dot: true}
    ✓ should match /a/ with ?/.?* and {nonegate: true}
    ✓ should match /a/b with ?/.?*
    ✓ should match /a/b with ?/.?* and {dot: true}
    ✓ should match /a/b with ?/.?* and {nonegate: true}
    ✓ should match /a/cb with ?/.?*
    ✓ should match /a/cb with ?/.?* and {dot: true}
    ✓ should match /a/cb with ?/.?* and {nonegate: true}
    ✓ should match /a/bb with ?/.?*
    ✓ should match /a/bb with ?/.?* and {dot: true}
    ✓ should match /a/bb with ?/.?* and {nonegate: true}
    ✓ should match /a/b/c with ?/.?*
    ✓ should match /a/b/c with ?/.?* and {dot: true}
    ✓ should match /a/b/c with ?/.?* and {nonegate: true}
    ✓ should match /a/b/c/ with ?/.?*
    ✓ should match /a/b/c/ with ?/.?* and {dot: true}
    ✓ should match /a/b/c/ with ?/.?* and {nonegate: true}
    ✓ should match /a/b/c/d with ?/.?*
    ✓ should match /a/b/c/d with ?/.?* and {dot: true}
    ✓ should match /a/b/c/d with ?/.?* and {nonegate: true}
    ✓ should match /a/b/c/d/ with ?/.?*
    ✓ should match /a/b/c/d/ with ?/.?* and {dot: true}
    ✓ should match /a/b/c/d/ with ?/.?* and {nonegate: true}
    ✓ should match . with ?/.?*
    ✓ should match . with ?/.?* and {dot: true}
    ✓ should match . with ?/.?* and {nonegate: true}
    ✓ should match ./ with ?/.?*
    ✓ should match ./ with ?/.?* and {dot: true}
    ✓ should match ./ with ?/.?* and {nonegate: true}
    ✓ should match .. with ?/.?*
    ✓ should match .. with ?/.?* and {dot: true}
    ✓ should match .. with ?/.?* and {nonegate: true}
    ✓ should match ../c with ?/.?*
    ✓ should match ../c with ?/.?* and {dot: true}
    ✓ should match ../c with ?/.?* and {nonegate: true}
    ✓ should match ../c with ?/.?*
    ✓ should match ../c with ?/.?* and {dot: true}
    ✓ should match ../c with ?/.?* and {nonegate: true}
    ✓ should match ./../c with ?/.?*
    ✓ should match ./../c with ?/.?* and {dot: true}
    ✓ should match ./../c with ?/.?* and {nonegate: true}
    ✓ should match ./a/../c with ?/.?*
    ✓ should match ./a/../c with ?/.?* and {dot: true}
    ✓ should match ./a/../c with ?/.?* and {nonegate: true}
    ✓ should match /.. with ?/.?*
    ✓ should match /.. with ?/.?* and {dot: true}
    ✓ should match /.. with ?/.?* and {nonegate: true}
    ✓ should match /../c with ?/.?*
    ✓ should match /../c with ?/.?* and {dot: true}
    ✓ should match /../c with ?/.?* and {nonegate: true}
    ✓ should match /../.c with ?/.?*
    ✓ should match /../.c with ?/.?* and {dot: true}
    ✓ should match /../.c with ?/.?* and {nonegate: true}
    ✓ should match /../.c/ with ?/.?*
    ✓ should match /../.c/ with ?/.?* and {dot: true}
    ✓ should match /../.c/ with ?/.?* and {nonegate: true}
    ✓ should match /a/../c with ?/.?*
    ✓ should match /a/../c with ?/.?* and {dot: true}
    ✓ should match /a/../c with ?/.?* and {nonegate: true}
    ✓ should match a/../c with ?/.?*
    ✓ should match a/../c with ?/.?* and {dot: true}
    ✓ should match a/../c with ?/.?* and {nonegate: true}
    ✓ should match ../.b/.c with ?/.?*
    ✓ should match ../.b/.c with ?/.?* and {dot: true}
    ✓ should match ../.b/.c with ?/.?* and {nonegate: true}
    ✓ should match ../b/.c with ?/.?*
    ✓ should match ../b/.c with ?/.?* and {dot: true}
    ✓ should match ../b/.c with ?/.?* and {nonegate: true}
    ✓ should match ./.b/.c with ?/.?*
    ✓ should match ./.b/.c with ?/.?* and {dot: true}
    ✓ should match ./.b/.c with ?/.?* and {nonegate: true}
    ✓ should match ./b/.c with ?/.?*
    ✓ should match ./b/.c with ?/.?* and {dot: true}
    ✓ should match ./b/.c with ?/.?* and {nonegate: true}
    ✓ should match .b with ?/.?*
    ✓ should match .b with ?/.?* and {dot: true}
    ✓ should match .b with ?/.?* and {nonegate: true}
    ✓ should match .b.c with ?/.?*
    ✓ should match .b.c with ?/.?* and {dot: true}
    ✓ should match .b.c with ?/.?* and {nonegate: true}
    ✓ should match .b.c/ with ?/.?*
    ✓ should match .b.c/ with ?/.?* and {dot: true}
    ✓ should match .b.c/ with ?/.?* and {nonegate: true}
    ✓ should match .b/ with ?/.?*
    ✓ should match .b/ with ?/.?* and {dot: true}
    ✓ should match .b/ with ?/.?* and {nonegate: true}
    ✓ should match .b/.c with ?/.?*
    ✓ should match .b/.c with ?/.?* and {dot: true}
    ✓ should match .b/.c with ?/.?* and {nonegate: true}
    ✓ should match .b/c with ?/.?*
    ✓ should match .b/c with ?/.?* and {dot: true}
    ✓ should match .b/c with ?/.?* and {nonegate: true}
    ✓ should match b/.c with ?/.?*
    ✓ should match b/.c with ?/.?* and {dot: true}
    ✓ should match b/.c with ?/.?* and {nonegate: true}
    ✓ should match b/.c/ with ?/.?*
    ✓ should match b/.c/ with ?/.?* and {dot: true}
    ✓ should match b/.c/ with ?/.?* and {nonegate: true}
    ✓ should match a/+b/c with ?/.?*
    ✓ should match a/+b/c with ?/.?* and {dot: true}
    ✓ should match a/+b/c with ?/.?* and {nonegate: true}
    ✓ should match +a/+b/c with ?/.?*
    ✓ should match +a/+b/c with ?/.?* and {dot: true}
    ✓ should match +a/+b/c with ?/.?* and {nonegate: true}
    ✓ should match a (foo) with ?/.?*
    ✓ should match a (foo) with ?/.?* and {dot: true}
    ✓ should match a (foo) with ?/.?* and {nonegate: true}
    ✓ should match a (foo)/(bar) with ?/.?*
    ✓ should match a (foo)/(bar) with ?/.?* and {dot: true}
    ✓ should match a (foo)/(bar) with ?/.?* and {nonegate: true}
    ✓ should match a/b/c (1) with ?/.?*
    ✓ should match a/b/c (1) with ?/.?* and {dot: true}
    ✓ should match a/b/c (1) with ?/.?* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with ?/.?*
    ✓ should match a/b (2)/c (1) with ?/.?* and {dot: true}
    ✓ should match a/b (2)/c (1) with ?/.?* and {nonegate: true}
    ✓ should match a/b/c [def] with ?/.?*
    ✓ should match a/b/c [def] with ?/.?* and {dot: true}
    ✓ should match a/b/c [def] with ?/.?* and {nonegate: true}
    ✓ should match a with ?/?
    ✓ should match a with ?/? and {dot: true}
    ✓ should match a with ?/? and {nonegate: true}
    ✓ should match a.md with ?/?
    ✓ should match a.md with ?/? and {dot: true}
    ✓ should match a.md with ?/? and {nonegate: true}
    ✓ should match a.js with ?/?
    ✓ should match a.js with ?/? and {dot: true}
    ✓ should match a.js with ?/? and {nonegate: true}
    ✓ should match a/ with ?/?
    ✓ should match a/ with ?/? and {dot: true}
    ✓ should match a/ with ?/? and {nonegate: true}
    ✓ should match a/b with ?/?
    ✓ should match a/b with ?/? and {dot: true}
    ✓ should match a/b with ?/? and {nonegate: true}
    ✓ should match a/b/.c.md with ?/?
    ✓ should match a/b/.c.md with ?/? and {dot: true}
    ✓ should match a/b/.c.md with ?/? and {nonegate: true}
    ✓ should match a/b/c with ?/?
    ✓ should match a/b/c with ?/? and {dot: true}
    ✓ should match a/b/c with ?/? and {nonegate: true}
    ✓ should match a/b/c.md with ?/?
    ✓ should match a/b/c.md with ?/? and {dot: true}
    ✓ should match a/b/c.md with ?/? and {nonegate: true}
    ✓ should match a/b/c/ with ?/?
    ✓ should match a/b/c/ with ?/? and {dot: true}
    ✓ should match a/b/c/ with ?/? and {nonegate: true}
    ✓ should match a/b/c/d with ?/?
    ✓ should match a/b/c/d with ?/? and {dot: true}
    ✓ should match a/b/c/d with ?/? and {nonegate: true}
    ✓ should match a/b/c/d/ with ?/?
    ✓ should match a/b/c/d/ with ?/? and {dot: true}
    ✓ should match a/b/c/d/ with ?/? and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with ?/?
    ✓ should match a/b/c/d/e/f/z.js with ?/? and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with ?/? and {nonegate: true}
    ✓ should match a/b/c/z.js with ?/?
    ✓ should match a/b/c/z.js with ?/? and {dot: true}
    ✓ should match a/b/c/z.js with ?/? and {nonegate: true}
    ✓ should match a/bb with ?/?
    ✓ should match a/bb with ?/? and {dot: true}
    ✓ should match a/bb with ?/? and {nonegate: true}
    ✓ should match a/cb with ?/?
    ✓ should match a/cb with ?/? and {dot: true}
    ✓ should match a/cb with ?/? and {nonegate: true}
    ✓ should match abbbz with ?/?
    ✓ should match abbbz with ?/? and {dot: true}
    ✓ should match abbbz with ?/? and {nonegate: true}
    ✓ should match abc with ?/?
    ✓ should match abc with ?/? and {dot: true}
    ✓ should match abc with ?/? and {nonegate: true}
    ✓ should match abd with ?/?
    ✓ should match abd with ?/? and {dot: true}
    ✓ should match abd with ?/? and {nonegate: true}
    ✓ should match z.js with ?/?
    ✓ should match z.js with ?/? and {dot: true}
    ✓ should match z.js with ?/? and {nonegate: true}
    ✓ should match za.js with ?/?
    ✓ should match za.js with ?/? and {dot: true}
    ✓ should match za.js with ?/? and {nonegate: true}
    ✓ should match !a.js with ?/?
    ✓ should match !a.js with ?/? and {dot: true}
    ✓ should match !a.js with ?/? and {nonegate: true}
    ✓ should match !a/b with ?/?
    ✓ should match !a/b with ?/? and {dot: true}
    ✓ should match !a/b with ?/? and {nonegate: true}
    ✓ should match !a/b/ with ?/?
    ✓ should match !a/b/ with ?/? and {dot: true}
    ✓ should match !a/b/ with ?/? and {nonegate: true}
    ✓ should match !a/b/c with ?/?
    ✓ should match !a/b/c with ?/? and {dot: true}
    ✓ should match !a/b/c with ?/? and {nonegate: true}
    ✓ should match !a/b/c/ with ?/?
    ✓ should match !a/b/c/ with ?/? and {dot: true}
    ✓ should match !a/b/c/ with ?/? and {nonegate: true}
    ✓ should match !a/!b with ?/?
    ✓ should match !a/!b with ?/? and {dot: true}
    ✓ should match !a/!b with ?/? and {nonegate: true}
    ✓ should match !a/!b/c with ?/?
    ✓ should match !a/!b/c with ?/? and {dot: true}
    ✓ should match !a/!b/c with ?/? and {nonegate: true}
    ✓ should match !a/!b/c/d with ?/?
    ✓ should match !a/!b/c/d with ?/? and {dot: true}
    ✓ should match !a/!b/c/d with ?/? and {nonegate: true}
    ✓ should match !a/b/.c.md with ?/?
    ✓ should match !a/b/.c.md with ?/? and {dot: true}
    ✓ should match !a/b/.c.md with ?/? and {nonegate: true}
    ✓ should match /a/ with ?/?
    ✓ should match /a/ with ?/? and {dot: true}
    ✓ should match /a/ with ?/? and {nonegate: true}
    ✓ should match /a/b with ?/?
    ✓ should match /a/b with ?/? and {dot: true}
    ✓ should match /a/b with ?/? and {nonegate: true}
    ✓ should match /a/cb with ?/?
    ✓ should match /a/cb with ?/? and {dot: true}
    ✓ should match /a/cb with ?/? and {nonegate: true}
    ✓ should match /a/bb with ?/?
    ✓ should match /a/bb with ?/? and {dot: true}
    ✓ should match /a/bb with ?/? and {nonegate: true}
    ✓ should match /a/b/c with ?/?
    ✓ should match /a/b/c with ?/? and {dot: true}
    ✓ should match /a/b/c with ?/? and {nonegate: true}
    ✓ should match /a/b/c/ with ?/?
    ✓ should match /a/b/c/ with ?/? and {dot: true}
    ✓ should match /a/b/c/ with ?/? and {nonegate: true}
    ✓ should match /a/b/c/d with ?/?
    ✓ should match /a/b/c/d with ?/? and {dot: true}
    ✓ should match /a/b/c/d with ?/? and {nonegate: true}
    ✓ should match /a/b/c/d/ with ?/?
    ✓ should match /a/b/c/d/ with ?/? and {dot: true}
    ✓ should match /a/b/c/d/ with ?/? and {nonegate: true}
    ✓ should match . with ?/?
    ✓ should match . with ?/? and {dot: true}
    ✓ should match . with ?/? and {nonegate: true}
    ✓ should match ./ with ?/?
    ✓ should match ./ with ?/? and {dot: true}
    ✓ should match ./ with ?/? and {nonegate: true}
    ✓ should match .. with ?/?
    ✓ should match .. with ?/? and {dot: true}
    ✓ should match .. with ?/? and {nonegate: true}
    ✓ should match ../c with ?/?
    ✓ should match ../c with ?/? and {dot: true}
    ✓ should match ../c with ?/? and {nonegate: true}
    ✓ should match ../c with ?/?
    ✓ should match ../c with ?/? and {dot: true}
    ✓ should match ../c with ?/? and {nonegate: true}
    ✓ should match ./../c with ?/?
    ✓ should match ./../c with ?/? and {dot: true}
    ✓ should match ./../c with ?/? and {nonegate: true}
    ✓ should match ./a/../c with ?/?
    ✓ should match ./a/../c with ?/? and {dot: true}
    ✓ should match ./a/../c with ?/? and {nonegate: true}
    ✓ should match /.. with ?/?
    ✓ should match /.. with ?/? and {dot: true}
    ✓ should match /.. with ?/? and {nonegate: true}
    ✓ should match /../c with ?/?
    ✓ should match /../c with ?/? and {dot: true}
    ✓ should match /../c with ?/? and {nonegate: true}
    ✓ should match /../.c with ?/?
    ✓ should match /../.c with ?/? and {dot: true}
    ✓ should match /../.c with ?/? and {nonegate: true}
    ✓ should match /../.c/ with ?/?
    ✓ should match /../.c/ with ?/? and {dot: true}
    ✓ should match /../.c/ with ?/? and {nonegate: true}
    ✓ should match /a/../c with ?/?
    ✓ should match /a/../c with ?/? and {dot: true}
    ✓ should match /a/../c with ?/? and {nonegate: true}
    ✓ should match a/../c with ?/?
    ✓ should match a/../c with ?/? and {dot: true}
    ✓ should match a/../c with ?/? and {nonegate: true}
    ✓ should match ../.b/.c with ?/?
    ✓ should match ../.b/.c with ?/? and {dot: true}
    ✓ should match ../.b/.c with ?/? and {nonegate: true}
    ✓ should match ../b/.c with ?/?
    ✓ should match ../b/.c with ?/? and {dot: true}
    ✓ should match ../b/.c with ?/? and {nonegate: true}
    ✓ should match ./.b/.c with ?/?
    ✓ should match ./.b/.c with ?/? and {dot: true}
    ✓ should match ./.b/.c with ?/? and {nonegate: true}
    ✓ should match ./b/.c with ?/?
    ✓ should match ./b/.c with ?/? and {dot: true}
    ✓ should match ./b/.c with ?/? and {nonegate: true}
    ✓ should match .b with ?/?
    ✓ should match .b with ?/? and {dot: true}
    ✓ should match .b with ?/? and {nonegate: true}
    ✓ should match .b.c with ?/?
    ✓ should match .b.c with ?/? and {dot: true}
    ✓ should match .b.c with ?/? and {nonegate: true}
    ✓ should match .b.c/ with ?/?
    ✓ should match .b.c/ with ?/? and {dot: true}
    ✓ should match .b.c/ with ?/? and {nonegate: true}
    ✓ should match .b/ with ?/?
    ✓ should match .b/ with ?/? and {dot: true}
    ✓ should match .b/ with ?/? and {nonegate: true}
    ✓ should match .b/.c with ?/?
    ✓ should match .b/.c with ?/? and {dot: true}
    ✓ should match .b/.c with ?/? and {nonegate: true}
    ✓ should match .b/c with ?/?
    ✓ should match .b/c with ?/? and {dot: true}
    ✓ should match .b/c with ?/? and {nonegate: true}
    ✓ should match b/.c with ?/?
    ✓ should match b/.c with ?/? and {dot: true}
    ✓ should match b/.c with ?/? and {nonegate: true}
    ✓ should match b/.c/ with ?/?
    ✓ should match b/.c/ with ?/? and {dot: true}
    ✓ should match b/.c/ with ?/? and {nonegate: true}
    ✓ should match a/+b/c with ?/?
    ✓ should match a/+b/c with ?/? and {dot: true}
    ✓ should match a/+b/c with ?/? and {nonegate: true}
    ✓ should match +a/+b/c with ?/?
    ✓ should match +a/+b/c with ?/? and {dot: true}
    ✓ should match +a/+b/c with ?/? and {nonegate: true}
    ✓ should match a (foo) with ?/?
    ✓ should match a (foo) with ?/? and {dot: true}
    ✓ should match a (foo) with ?/? and {nonegate: true}
    ✓ should match a (foo)/(bar) with ?/?
    ✓ should match a (foo)/(bar) with ?/? and {dot: true}
    ✓ should match a (foo)/(bar) with ?/? and {nonegate: true}
    ✓ should match a/b/c (1) with ?/?
    ✓ should match a/b/c (1) with ?/? and {dot: true}
    ✓ should match a/b/c (1) with ?/? and {nonegate: true}
    ✓ should match a/b (2)/c (1) with ?/?
    ✓ should match a/b (2)/c (1) with ?/? and {dot: true}
    ✓ should match a/b (2)/c (1) with ?/? and {nonegate: true}
    ✓ should match a/b/c [def] with ?/?
    ✓ should match a/b/c [def] with ?/? and {dot: true}
    ✓ should match a/b/c [def] with ?/? and {nonegate: true}
    ✓ should match a with ?/?/?
    ✓ should match a with ?/?/? and {dot: true}
    ✓ should match a with ?/?/? and {nonegate: true}
    ✓ should match a.md with ?/?/?
    ✓ should match a.md with ?/?/? and {dot: true}
    ✓ should match a.md with ?/?/? and {nonegate: true}
    ✓ should match a.js with ?/?/?
    ✓ should match a.js with ?/?/? and {dot: true}
    ✓ should match a.js with ?/?/? and {nonegate: true}
    ✓ should match a/ with ?/?/?
    ✓ should match a/ with ?/?/? and {dot: true}
    ✓ should match a/ with ?/?/? and {nonegate: true}
    ✓ should match a/b with ?/?/?
    ✓ should match a/b with ?/?/? and {dot: true}
    ✓ should match a/b with ?/?/? and {nonegate: true}
    ✓ should match a/b/.c.md with ?/?/?
    ✓ should match a/b/.c.md with ?/?/? and {dot: true}
    ✓ should match a/b/.c.md with ?/?/? and {nonegate: true}
    ✓ should match a/b/c with ?/?/?
    ✓ should match a/b/c with ?/?/? and {dot: true}
    ✓ should match a/b/c with ?/?/? and {nonegate: true}
    ✓ should match a/b/c.md with ?/?/?
    ✓ should match a/b/c.md with ?/?/? and {dot: true}
    ✓ should match a/b/c.md with ?/?/? and {nonegate: true}
    ✓ should match a/b/c/ with ?/?/?
    ✓ should match a/b/c/ with ?/?/? and {dot: true}
    ✓ should match a/b/c/ with ?/?/? and {nonegate: true}
    ✓ should match a/b/c/d with ?/?/?
    ✓ should match a/b/c/d with ?/?/? and {dot: true}
    ✓ should match a/b/c/d with ?/?/? and {nonegate: true}
    ✓ should match a/b/c/d/ with ?/?/?
    ✓ should match a/b/c/d/ with ?/?/? and {dot: true}
    ✓ should match a/b/c/d/ with ?/?/? and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with ?/?/?
    ✓ should match a/b/c/d/e/f/z.js with ?/?/? and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with ?/?/? and {nonegate: true}
    ✓ should match a/b/c/z.js with ?/?/?
    ✓ should match a/b/c/z.js with ?/?/? and {dot: true}
    ✓ should match a/b/c/z.js with ?/?/? and {nonegate: true}
    ✓ should match a/bb with ?/?/?
    ✓ should match a/bb with ?/?/? and {dot: true}
    ✓ should match a/bb with ?/?/? and {nonegate: true}
    ✓ should match a/cb with ?/?/?
    ✓ should match a/cb with ?/?/? and {dot: true}
    ✓ should match a/cb with ?/?/? and {nonegate: true}
    ✓ should match abbbz with ?/?/?
    ✓ should match abbbz with ?/?/? and {dot: true}
    ✓ should match abbbz with ?/?/? and {nonegate: true}
    ✓ should match abc with ?/?/?
    ✓ should match abc with ?/?/? and {dot: true}
    ✓ should match abc with ?/?/? and {nonegate: true}
    ✓ should match abd with ?/?/?
    ✓ should match abd with ?/?/? and {dot: true}
    ✓ should match abd with ?/?/? and {nonegate: true}
    ✓ should match z.js with ?/?/?
    ✓ should match z.js with ?/?/? and {dot: true}
    ✓ should match z.js with ?/?/? and {nonegate: true}
    ✓ should match za.js with ?/?/?
    ✓ should match za.js with ?/?/? and {dot: true}
    ✓ should match za.js with ?/?/? and {nonegate: true}
    ✓ should match !a.js with ?/?/?
    ✓ should match !a.js with ?/?/? and {dot: true}
    ✓ should match !a.js with ?/?/? and {nonegate: true}
    ✓ should match !a/b with ?/?/?
    ✓ should match !a/b with ?/?/? and {dot: true}
    ✓ should match !a/b with ?/?/? and {nonegate: true}
    ✓ should match !a/b/ with ?/?/?
    ✓ should match !a/b/ with ?/?/? and {dot: true}
    ✓ should match !a/b/ with ?/?/? and {nonegate: true}
    ✓ should match !a/b/c with ?/?/?
    ✓ should match !a/b/c with ?/?/? and {dot: true}
    ✓ should match !a/b/c with ?/?/? and {nonegate: true}
    ✓ should match !a/b/c/ with ?/?/?
    ✓ should match !a/b/c/ with ?/?/? and {dot: true}
    ✓ should match !a/b/c/ with ?/?/? and {nonegate: true}
    ✓ should match !a/!b with ?/?/?
    ✓ should match !a/!b with ?/?/? and {dot: true}
    ✓ should match !a/!b with ?/?/? and {nonegate: true}
    ✓ should match !a/!b/c with ?/?/?
    ✓ should match !a/!b/c with ?/?/? and {dot: true}
    ✓ should match !a/!b/c with ?/?/? and {nonegate: true}
    ✓ should match !a/!b/c/d with ?/?/?
    ✓ should match !a/!b/c/d with ?/?/? and {dot: true}
    ✓ should match !a/!b/c/d with ?/?/? and {nonegate: true}
    ✓ should match !a/b/.c.md with ?/?/?
    ✓ should match !a/b/.c.md with ?/?/? and {dot: true}
    ✓ should match !a/b/.c.md with ?/?/? and {nonegate: true}
    ✓ should match /a/ with ?/?/?
    ✓ should match /a/ with ?/?/? and {dot: true}
    ✓ should match /a/ with ?/?/? and {nonegate: true}
    ✓ should match /a/b with ?/?/?
    ✓ should match /a/b with ?/?/? and {dot: true}
    ✓ should match /a/b with ?/?/? and {nonegate: true}
    ✓ should match /a/cb with ?/?/?
    ✓ should match /a/cb with ?/?/? and {dot: true}
    ✓ should match /a/cb with ?/?/? and {nonegate: true}
    ✓ should match /a/bb with ?/?/?
    ✓ should match /a/bb with ?/?/? and {dot: true}
    ✓ should match /a/bb with ?/?/? and {nonegate: true}
    ✓ should match /a/b/c with ?/?/?
    ✓ should match /a/b/c with ?/?/? and {dot: true}
    ✓ should match /a/b/c with ?/?/? and {nonegate: true}
    ✓ should match /a/b/c/ with ?/?/?
    ✓ should match /a/b/c/ with ?/?/? and {dot: true}
    ✓ should match /a/b/c/ with ?/?/? and {nonegate: true}
    ✓ should match /a/b/c/d with ?/?/?
    ✓ should match /a/b/c/d with ?/?/? and {dot: true}
    ✓ should match /a/b/c/d with ?/?/? and {nonegate: true}
    ✓ should match /a/b/c/d/ with ?/?/?
    ✓ should match /a/b/c/d/ with ?/?/? and {dot: true}
    ✓ should match /a/b/c/d/ with ?/?/? and {nonegate: true}
    ✓ should match . with ?/?/?
    ✓ should match . with ?/?/? and {dot: true}
    ✓ should match . with ?/?/? and {nonegate: true}
    ✓ should match ./ with ?/?/?
    ✓ should match ./ with ?/?/? and {dot: true}
    ✓ should match ./ with ?/?/? and {nonegate: true}
    ✓ should match .. with ?/?/?
    ✓ should match .. with ?/?/? and {dot: true}
    ✓ should match .. with ?/?/? and {nonegate: true}
    ✓ should match ../c with ?/?/?
    ✓ should match ../c with ?/?/? and {dot: true}
    ✓ should match ../c with ?/?/? and {nonegate: true}
    ✓ should match ../c with ?/?/?
    ✓ should match ../c with ?/?/? and {dot: true}
    ✓ should match ../c with ?/?/? and {nonegate: true}
    ✓ should match ./../c with ?/?/?
    ✓ should match ./../c with ?/?/? and {dot: true}
    ✓ should match ./../c with ?/?/? and {nonegate: true}
    ✓ should match ./a/../c with ?/?/?
    ✓ should match ./a/../c with ?/?/? and {dot: true}
    ✓ should match ./a/../c with ?/?/? and {nonegate: true}
    ✓ should match /.. with ?/?/?
    ✓ should match /.. with ?/?/? and {dot: true}
    ✓ should match /.. with ?/?/? and {nonegate: true}
    ✓ should match /../c with ?/?/?
    ✓ should match /../c with ?/?/? and {dot: true}
    ✓ should match /../c with ?/?/? and {nonegate: true}
    ✓ should match /../.c with ?/?/?
    ✓ should match /../.c with ?/?/? and {dot: true}
    ✓ should match /../.c with ?/?/? and {nonegate: true}
    ✓ should match /../.c/ with ?/?/?
    ✓ should match /../.c/ with ?/?/? and {dot: true}
    ✓ should match /../.c/ with ?/?/? and {nonegate: true}
    ✓ should match /a/../c with ?/?/?
    ✓ should match /a/../c with ?/?/? and {dot: true}
    ✓ should match /a/../c with ?/?/? and {nonegate: true}
    ✓ should match a/../c with ?/?/?
    ✓ should match a/../c with ?/?/? and {dot: true}
    ✓ should match a/../c with ?/?/? and {nonegate: true}
    ✓ should match ../.b/.c with ?/?/?
    ✓ should match ../.b/.c with ?/?/? and {dot: true}
    ✓ should match ../.b/.c with ?/?/? and {nonegate: true}
    ✓ should match ../b/.c with ?/?/?
    ✓ should match ../b/.c with ?/?/? and {dot: true}
    ✓ should match ../b/.c with ?/?/? and {nonegate: true}
    ✓ should match ./.b/.c with ?/?/?
    ✓ should match ./.b/.c with ?/?/? and {dot: true}
    ✓ should match ./.b/.c with ?/?/? and {nonegate: true}
    ✓ should match ./b/.c with ?/?/?
    ✓ should match ./b/.c with ?/?/? and {dot: true}
    ✓ should match ./b/.c with ?/?/? and {nonegate: true}
    ✓ should match .b with ?/?/?
    ✓ should match .b with ?/?/? and {dot: true}
    ✓ should match .b with ?/?/? and {nonegate: true}
    ✓ should match .b.c with ?/?/?
    ✓ should match .b.c with ?/?/? and {dot: true}
    ✓ should match .b.c with ?/?/? and {nonegate: true}
    ✓ should match .b.c/ with ?/?/?
    ✓ should match .b.c/ with ?/?/? and {dot: true}
    ✓ should match .b.c/ with ?/?/? and {nonegate: true}
    ✓ should match .b/ with ?/?/?
    ✓ should match .b/ with ?/?/? and {dot: true}
    ✓ should match .b/ with ?/?/? and {nonegate: true}
    ✓ should match .b/.c with ?/?/?
    ✓ should match .b/.c with ?/?/? and {dot: true}
    ✓ should match .b/.c with ?/?/? and {nonegate: true}
    ✓ should match .b/c with ?/?/?
    ✓ should match .b/c with ?/?/? and {dot: true}
    ✓ should match .b/c with ?/?/? and {nonegate: true}
    ✓ should match b/.c with ?/?/?
    ✓ should match b/.c with ?/?/? and {dot: true}
    ✓ should match b/.c with ?/?/? and {nonegate: true}
    ✓ should match b/.c/ with ?/?/?
    ✓ should match b/.c/ with ?/?/? and {dot: true}
    ✓ should match b/.c/ with ?/?/? and {nonegate: true}
    ✓ should match a/+b/c with ?/?/?
    ✓ should match a/+b/c with ?/?/? and {dot: true}
    ✓ should match a/+b/c with ?/?/? and {nonegate: true}
    ✓ should match +a/+b/c with ?/?/?
    ✓ should match +a/+b/c with ?/?/? and {dot: true}
    ✓ should match +a/+b/c with ?/?/? and {nonegate: true}
    ✓ should match a (foo) with ?/?/?
    ✓ should match a (foo) with ?/?/? and {dot: true}
    ✓ should match a (foo) with ?/?/? and {nonegate: true}
    ✓ should match a (foo)/(bar) with ?/?/?
    ✓ should match a (foo)/(bar) with ?/?/? and {dot: true}
    ✓ should match a (foo)/(bar) with ?/?/? and {nonegate: true}
    ✓ should match a/b/c (1) with ?/?/?
    ✓ should match a/b/c (1) with ?/?/? and {dot: true}
    ✓ should match a/b/c (1) with ?/?/? and {nonegate: true}
    ✓ should match a/b (2)/c (1) with ?/?/?
    ✓ should match a/b (2)/c (1) with ?/?/? and {dot: true}
    ✓ should match a/b (2)/c (1) with ?/?/? and {nonegate: true}
    ✓ should match a/b/c [def] with ?/?/?
    ✓ should match a/b/c [def] with ?/?/? and {dot: true}
    ✓ should match a/b/c [def] with ?/?/? and {nonegate: true}
    ✓ should match a with ??
    ✓ should match a with ?? and {dot: true}
    ✓ should match a with ?? and {nonegate: true}
    ✓ should match a.md with ??
    ✓ should match a.md with ?? and {dot: true}
    ✓ should match a.md with ?? and {nonegate: true}
    ✓ should match a.js with ??
    ✓ should match a.js with ?? and {dot: true}
    ✓ should match a.js with ?? and {nonegate: true}
    ✓ should match a/ with ??
    ✓ should match a/ with ?? and {dot: true}
    ✓ should match a/ with ?? and {nonegate: true}
    ✓ should match a/b with ??
    ✓ should match a/b with ?? and {dot: true}
    ✓ should match a/b with ?? and {nonegate: true}
    ✓ should match a/b/.c.md with ??
    ✓ should match a/b/.c.md with ?? and {dot: true}
    ✓ should match a/b/.c.md with ?? and {nonegate: true}
    ✓ should match a/b/c with ??
    ✓ should match a/b/c with ?? and {dot: true}
    ✓ should match a/b/c with ?? and {nonegate: true}
    ✓ should match a/b/c.md with ??
    ✓ should match a/b/c.md with ?? and {dot: true}
    ✓ should match a/b/c.md with ?? and {nonegate: true}
    ✓ should match a/b/c/ with ??
    ✓ should match a/b/c/ with ?? and {dot: true}
    ✓ should match a/b/c/ with ?? and {nonegate: true}
    ✓ should match a/b/c/d with ??
    ✓ should match a/b/c/d with ?? and {dot: true}
    ✓ should match a/b/c/d with ?? and {nonegate: true}
    ✓ should match a/b/c/d/ with ??
    ✓ should match a/b/c/d/ with ?? and {dot: true}
    ✓ should match a/b/c/d/ with ?? and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with ??
    ✓ should match a/b/c/d/e/f/z.js with ?? and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with ?? and {nonegate: true}
    ✓ should match a/b/c/z.js with ??
    ✓ should match a/b/c/z.js with ?? and {dot: true}
    ✓ should match a/b/c/z.js with ?? and {nonegate: true}
    ✓ should match a/bb with ??
    ✓ should match a/bb with ?? and {dot: true}
    ✓ should match a/bb with ?? and {nonegate: true}
    ✓ should match a/cb with ??
    ✓ should match a/cb with ?? and {dot: true}
    ✓ should match a/cb with ?? and {nonegate: true}
    ✓ should match abbbz with ??
    ✓ should match abbbz with ?? and {dot: true}
    ✓ should match abbbz with ?? and {nonegate: true}
    ✓ should match abc with ??
    ✓ should match abc with ?? and {dot: true}
    ✓ should match abc with ?? and {nonegate: true}
    ✓ should match abd with ??
    ✓ should match abd with ?? and {dot: true}
    ✓ should match abd with ?? and {nonegate: true}
    ✓ should match z.js with ??
    ✓ should match z.js with ?? and {dot: true}
    ✓ should match z.js with ?? and {nonegate: true}
    ✓ should match za.js with ??
    ✓ should match za.js with ?? and {dot: true}
    ✓ should match za.js with ?? and {nonegate: true}
    ✓ should match !a.js with ??
    ✓ should match !a.js with ?? and {dot: true}
    ✓ should match !a.js with ?? and {nonegate: true}
    ✓ should match !a/b with ??
    ✓ should match !a/b with ?? and {dot: true}
    ✓ should match !a/b with ?? and {nonegate: true}
    ✓ should match !a/b/ with ??
    ✓ should match !a/b/ with ?? and {dot: true}
    ✓ should match !a/b/ with ?? and {nonegate: true}
    ✓ should match !a/b/c with ??
    ✓ should match !a/b/c with ?? and {dot: true}
    ✓ should match !a/b/c with ?? and {nonegate: true}
    ✓ should match !a/b/c/ with ??
    ✓ should match !a/b/c/ with ?? and {dot: true}
    ✓ should match !a/b/c/ with ?? and {nonegate: true}
    ✓ should match !a/!b with ??
    ✓ should match !a/!b with ?? and {dot: true}
    ✓ should match !a/!b with ?? and {nonegate: true}
    ✓ should match !a/!b/c with ??
    ✓ should match !a/!b/c with ?? and {dot: true}
    ✓ should match !a/!b/c with ?? and {nonegate: true}
    ✓ should match !a/!b/c/d with ??
    ✓ should match !a/!b/c/d with ?? and {dot: true}
    ✓ should match !a/!b/c/d with ?? and {nonegate: true}
    ✓ should match !a/b/.c.md with ??
    ✓ should match !a/b/.c.md with ?? and {dot: true}
    ✓ should match !a/b/.c.md with ?? and {nonegate: true}
    ✓ should match /a/ with ??
    ✓ should match /a/ with ?? and {dot: true}
    ✓ should match /a/ with ?? and {nonegate: true}
    ✓ should match /a/b with ??
    ✓ should match /a/b with ?? and {dot: true}
    ✓ should match /a/b with ?? and {nonegate: true}
    ✓ should match /a/cb with ??
    ✓ should match /a/cb with ?? and {dot: true}
    ✓ should match /a/cb with ?? and {nonegate: true}
    ✓ should match /a/bb with ??
    ✓ should match /a/bb with ?? and {dot: true}
    ✓ should match /a/bb with ?? and {nonegate: true}
    ✓ should match /a/b/c with ??
    ✓ should match /a/b/c with ?? and {dot: true}
    ✓ should match /a/b/c with ?? and {nonegate: true}
    ✓ should match /a/b/c/ with ??
    ✓ should match /a/b/c/ with ?? and {dot: true}
    ✓ should match /a/b/c/ with ?? and {nonegate: true}
    ✓ should match /a/b/c/d with ??
    ✓ should match /a/b/c/d with ?? and {dot: true}
    ✓ should match /a/b/c/d with ?? and {nonegate: true}
    ✓ should match /a/b/c/d/ with ??
    ✓ should match /a/b/c/d/ with ?? and {dot: true}
    ✓ should match /a/b/c/d/ with ?? and {nonegate: true}
    ✓ should match . with ??
    ✓ should match . with ?? and {dot: true}
    ✓ should match . with ?? and {nonegate: true}
    ✓ should match ./ with ??
    ✓ should match ./ with ?? and {dot: true}
    ✓ should match ./ with ?? and {nonegate: true}
    ✓ should match .. with ??
    ✓ should match .. with ?? and {dot: true}
    ✓ should match .. with ?? and {nonegate: true}
    ✓ should match ../c with ??
    ✓ should match ../c with ?? and {dot: true}
    ✓ should match ../c with ?? and {nonegate: true}
    ✓ should match ../c with ??
    ✓ should match ../c with ?? and {dot: true}
    ✓ should match ../c with ?? and {nonegate: true}
    ✓ should match ./../c with ??
    ✓ should match ./../c with ?? and {dot: true}
    ✓ should match ./../c with ?? and {nonegate: true}
    ✓ should match ./a/../c with ??
    ✓ should match ./a/../c with ?? and {dot: true}
    ✓ should match ./a/../c with ?? and {nonegate: true}
    ✓ should match /.. with ??
    ✓ should match /.. with ?? and {dot: true}
    ✓ should match /.. with ?? and {nonegate: true}
    ✓ should match /../c with ??
    ✓ should match /../c with ?? and {dot: true}
    ✓ should match /../c with ?? and {nonegate: true}
    ✓ should match /../.c with ??
    ✓ should match /../.c with ?? and {dot: true}
    ✓ should match /../.c with ?? and {nonegate: true}
    ✓ should match /../.c/ with ??
    ✓ should match /../.c/ with ?? and {dot: true}
    ✓ should match /../.c/ with ?? and {nonegate: true}
    ✓ should match /a/../c with ??
    ✓ should match /a/../c with ?? and {dot: true}
    ✓ should match /a/../c with ?? and {nonegate: true}
    ✓ should match a/../c with ??
    ✓ should match a/../c with ?? and {dot: true}
    ✓ should match a/../c with ?? and {nonegate: true}
    ✓ should match ../.b/.c with ??
    ✓ should match ../.b/.c with ?? and {dot: true}
    ✓ should match ../.b/.c with ?? and {nonegate: true}
    ✓ should match ../b/.c with ??
    ✓ should match ../b/.c with ?? and {dot: true}
    ✓ should match ../b/.c with ?? and {nonegate: true}
    ✓ should match ./.b/.c with ??
    ✓ should match ./.b/.c with ?? and {dot: true}
    ✓ should match ./.b/.c with ?? and {nonegate: true}
    ✓ should match ./b/.c with ??
    ✓ should match ./b/.c with ?? and {dot: true}
    ✓ should match ./b/.c with ?? and {nonegate: true}
    ✓ should match .b with ??
    ✓ should match .b with ?? and {dot: true}
    ✓ should match .b with ?? and {nonegate: true}
    ✓ should match .b.c with ??
    ✓ should match .b.c with ?? and {dot: true}
    ✓ should match .b.c with ?? and {nonegate: true}
    ✓ should match .b.c/ with ??
    ✓ should match .b.c/ with ?? and {dot: true}
    ✓ should match .b.c/ with ?? and {nonegate: true}
    ✓ should match .b/ with ??
    ✓ should match .b/ with ?? and {dot: true}
    ✓ should match .b/ with ?? and {nonegate: true}
    ✓ should match .b/.c with ??
    ✓ should match .b/.c with ?? and {dot: true}
    ✓ should match .b/.c with ?? and {nonegate: true}
    ✓ should match .b/c with ??
    ✓ should match .b/c with ?? and {dot: true}
    ✓ should match .b/c with ?? and {nonegate: true}
    ✓ should match b/.c with ??
    ✓ should match b/.c with ?? and {dot: true}
    ✓ should match b/.c with ?? and {nonegate: true}
    ✓ should match b/.c/ with ??
    ✓ should match b/.c/ with ?? and {dot: true}
    ✓ should match b/.c/ with ?? and {nonegate: true}
    ✓ should match a/+b/c with ??
    ✓ should match a/+b/c with ?? and {dot: true}
    ✓ should match a/+b/c with ?? and {nonegate: true}
    ✓ should match +a/+b/c with ??
    ✓ should match +a/+b/c with ?? and {dot: true}
    ✓ should match +a/+b/c with ?? and {nonegate: true}
    ✓ should match a (foo) with ??
    ✓ should match a (foo) with ?? and {dot: true}
    ✓ should match a (foo) with ?? and {nonegate: true}
    ✓ should match a (foo)/(bar) with ??
    ✓ should match a (foo)/(bar) with ?? and {dot: true}
    ✓ should match a (foo)/(bar) with ?? and {nonegate: true}
    ✓ should match a/b/c (1) with ??
    ✓ should match a/b/c (1) with ?? and {dot: true}
    ✓ should match a/b/c (1) with ?? and {nonegate: true}
    ✓ should match a/b (2)/c (1) with ??
    ✓ should match a/b (2)/c (1) with ?? and {dot: true}
    ✓ should match a/b (2)/c (1) with ?? and {nonegate: true}
    ✓ should match a/b/c [def] with ??
    ✓ should match a/b/c [def] with ?? and {dot: true}
    ✓ should match a/b/c [def] with ?? and {nonegate: true}
    ✓ should match a with ??/??
    ✓ should match a with ??/?? and {dot: true}
    ✓ should match a with ??/?? and {nonegate: true}
    ✓ should match a.md with ??/??
    ✓ should match a.md with ??/?? and {dot: true}
    ✓ should match a.md with ??/?? and {nonegate: true}
    ✓ should match a.js with ??/??
    ✓ should match a.js with ??/?? and {dot: true}
    ✓ should match a.js with ??/?? and {nonegate: true}
    ✓ should match a/ with ??/??
    ✓ should match a/ with ??/?? and {dot: true}
    ✓ should match a/ with ??/?? and {nonegate: true}
    ✓ should match a/b with ??/??
    ✓ should match a/b with ??/?? and {dot: true}
    ✓ should match a/b with ??/?? and {nonegate: true}
    ✓ should match a/b/.c.md with ??/??
    ✓ should match a/b/.c.md with ??/?? and {dot: true}
    ✓ should match a/b/.c.md with ??/?? and {nonegate: true}
    ✓ should match a/b/c with ??/??
    ✓ should match a/b/c with ??/?? and {dot: true}
    ✓ should match a/b/c with ??/?? and {nonegate: true}
    ✓ should match a/b/c.md with ??/??
    ✓ should match a/b/c.md with ??/?? and {dot: true}
    ✓ should match a/b/c.md with ??/?? and {nonegate: true}
    ✓ should match a/b/c/ with ??/??
    ✓ should match a/b/c/ with ??/?? and {dot: true}
    ✓ should match a/b/c/ with ??/?? and {nonegate: true}
    ✓ should match a/b/c/d with ??/??
    ✓ should match a/b/c/d with ??/?? and {dot: true}
    ✓ should match a/b/c/d with ??/?? and {nonegate: true}
    ✓ should match a/b/c/d/ with ??/??
    ✓ should match a/b/c/d/ with ??/?? and {dot: true}
    ✓ should match a/b/c/d/ with ??/?? and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with ??/??
    ✓ should match a/b/c/d/e/f/z.js with ??/?? and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with ??/?? and {nonegate: true}
    ✓ should match a/b/c/z.js with ??/??
    ✓ should match a/b/c/z.js with ??/?? and {dot: true}
    ✓ should match a/b/c/z.js with ??/?? and {nonegate: true}
    ✓ should match a/bb with ??/??
    ✓ should match a/bb with ??/?? and {dot: true}
    ✓ should match a/bb with ??/?? and {nonegate: true}
    ✓ should match a/cb with ??/??
    ✓ should match a/cb with ??/?? and {dot: true}
    ✓ should match a/cb with ??/?? and {nonegate: true}
    ✓ should match abbbz with ??/??
    ✓ should match abbbz with ??/?? and {dot: true}
    ✓ should match abbbz with ??/?? and {nonegate: true}
    ✓ should match abc with ??/??
    ✓ should match abc with ??/?? and {dot: true}
    ✓ should match abc with ??/?? and {nonegate: true}
    ✓ should match abd with ??/??
    ✓ should match abd with ??/?? and {dot: true}
    ✓ should match abd with ??/?? and {nonegate: true}
    ✓ should match z.js with ??/??
    ✓ should match z.js with ??/?? and {dot: true}
    ✓ should match z.js with ??/?? and {nonegate: true}
    ✓ should match za.js with ??/??
    ✓ should match za.js with ??/?? and {dot: true}
    ✓ should match za.js with ??/?? and {nonegate: true}
    ✓ should match !a.js with ??/??
    ✓ should match !a.js with ??/?? and {dot: true}
    ✓ should match !a.js with ??/?? and {nonegate: true}
    ✓ should match !a/b with ??/??
    ✓ should match !a/b with ??/?? and {dot: true}
    ✓ should match !a/b with ??/?? and {nonegate: true}
    ✓ should match !a/b/ with ??/??
    ✓ should match !a/b/ with ??/?? and {dot: true}
    ✓ should match !a/b/ with ??/?? and {nonegate: true}
    ✓ should match !a/b/c with ??/??
    ✓ should match !a/b/c with ??/?? and {dot: true}
    ✓ should match !a/b/c with ??/?? and {nonegate: true}
    ✓ should match !a/b/c/ with ??/??
    ✓ should match !a/b/c/ with ??/?? and {dot: true}
    ✓ should match !a/b/c/ with ??/?? and {nonegate: true}
    ✓ should match !a/!b with ??/??
    ✓ should match !a/!b with ??/?? and {dot: true}
    ✓ should match !a/!b with ??/?? and {nonegate: true}
    ✓ should match !a/!b/c with ??/??
    ✓ should match !a/!b/c with ??/?? and {dot: true}
    ✓ should match !a/!b/c with ??/?? and {nonegate: true}
    ✓ should match !a/!b/c/d with ??/??
    ✓ should match !a/!b/c/d with ??/?? and {dot: true}
    ✓ should match !a/!b/c/d with ??/?? and {nonegate: true}
    ✓ should match !a/b/.c.md with ??/??
    ✓ should match !a/b/.c.md with ??/?? and {dot: true}
    ✓ should match !a/b/.c.md with ??/?? and {nonegate: true}
    ✓ should match /a/ with ??/??
    ✓ should match /a/ with ??/?? and {dot: true}
    ✓ should match /a/ with ??/?? and {nonegate: true}
    ✓ should match /a/b with ??/??
    ✓ should match /a/b with ??/?? and {dot: true}
    ✓ should match /a/b with ??/?? and {nonegate: true}
    ✓ should match /a/cb with ??/??
    ✓ should match /a/cb with ??/?? and {dot: true}
    ✓ should match /a/cb with ??/?? and {nonegate: true}
    ✓ should match /a/bb with ??/??
    ✓ should match /a/bb with ??/?? and {dot: true}
    ✓ should match /a/bb with ??/?? and {nonegate: true}
    ✓ should match /a/b/c with ??/??
    ✓ should match /a/b/c with ??/?? and {dot: true}
    ✓ should match /a/b/c with ??/?? and {nonegate: true}
    ✓ should match /a/b/c/ with ??/??
    ✓ should match /a/b/c/ with ??/?? and {dot: true}
    ✓ should match /a/b/c/ with ??/?? and {nonegate: true}
    ✓ should match /a/b/c/d with ??/??
    ✓ should match /a/b/c/d with ??/?? and {dot: true}
    ✓ should match /a/b/c/d with ??/?? and {nonegate: true}
    ✓ should match /a/b/c/d/ with ??/??
    ✓ should match /a/b/c/d/ with ??/?? and {dot: true}
    ✓ should match /a/b/c/d/ with ??/?? and {nonegate: true}
    ✓ should match . with ??/??
    ✓ should match . with ??/?? and {dot: true}
    ✓ should match . with ??/?? and {nonegate: true}
    ✓ should match ./ with ??/??
    ✓ should match ./ with ??/?? and {dot: true}
    ✓ should match ./ with ??/?? and {nonegate: true}
    ✓ should match .. with ??/??
    ✓ should match .. with ??/?? and {dot: true}
    ✓ should match .. with ??/?? and {nonegate: true}
    ✓ should match ../c with ??/??
    ✓ should match ../c with ??/?? and {dot: true}
    ✓ should match ../c with ??/?? and {nonegate: true}
    ✓ should match ../c with ??/??
    ✓ should match ../c with ??/?? and {dot: true}
    ✓ should match ../c with ??/?? and {nonegate: true}
    ✓ should match ./../c with ??/??
    ✓ should match ./../c with ??/?? and {dot: true}
    ✓ should match ./../c with ??/?? and {nonegate: true}
    ✓ should match ./a/../c with ??/??
    ✓ should match ./a/../c with ??/?? and {dot: true}
    ✓ should match ./a/../c with ??/?? and {nonegate: true}
    ✓ should match /.. with ??/??
    ✓ should match /.. with ??/?? and {dot: true}
    ✓ should match /.. with ??/?? and {nonegate: true}
    ✓ should match /../c with ??/??
    ✓ should match /../c with ??/?? and {dot: true}
    ✓ should match /../c with ??/?? and {nonegate: true}
    ✓ should match /../.c with ??/??
    ✓ should match /../.c with ??/?? and {dot: true}
    ✓ should match /../.c with ??/?? and {nonegate: true}
    ✓ should match /../.c/ with ??/??
    ✓ should match /../.c/ with ??/?? and {dot: true}
    ✓ should match /../.c/ with ??/?? and {nonegate: true}
    ✓ should match /a/../c with ??/??
    ✓ should match /a/../c with ??/?? and {dot: true}
    ✓ should match /a/../c with ??/?? and {nonegate: true}
    ✓ should match a/../c with ??/??
    ✓ should match a/../c with ??/?? and {dot: true}
    ✓ should match a/../c with ??/?? and {nonegate: true}
    ✓ should match ../.b/.c with ??/??
    ✓ should match ../.b/.c with ??/?? and {dot: true}
    ✓ should match ../.b/.c with ??/?? and {nonegate: true}
    ✓ should match ../b/.c with ??/??
    ✓ should match ../b/.c with ??/?? and {dot: true}
    ✓ should match ../b/.c with ??/?? and {nonegate: true}
    ✓ should match ./.b/.c with ??/??
    ✓ should match ./.b/.c with ??/?? and {dot: true}
    ✓ should match ./.b/.c with ??/?? and {nonegate: true}
    ✓ should match ./b/.c with ??/??
    ✓ should match ./b/.c with ??/?? and {dot: true}
    ✓ should match ./b/.c with ??/?? and {nonegate: true}
    ✓ should match .b with ??/??
    ✓ should match .b with ??/?? and {dot: true}
    ✓ should match .b with ??/?? and {nonegate: true}
    ✓ should match .b.c with ??/??
    ✓ should match .b.c with ??/?? and {dot: true}
    ✓ should match .b.c with ??/?? and {nonegate: true}
    ✓ should match .b.c/ with ??/??
    ✓ should match .b.c/ with ??/?? and {dot: true}
    ✓ should match .b.c/ with ??/?? and {nonegate: true}
    ✓ should match .b/ with ??/??
    ✓ should match .b/ with ??/?? and {dot: true}
    ✓ should match .b/ with ??/?? and {nonegate: true}
    ✓ should match .b/.c with ??/??
    ✓ should match .b/.c with ??/?? and {dot: true}
    ✓ should match .b/.c with ??/?? and {nonegate: true}
    ✓ should match .b/c with ??/??
    ✓ should match .b/c with ??/?? and {dot: true}
    ✓ should match .b/c with ??/?? and {nonegate: true}
    ✓ should match b/.c with ??/??
    ✓ should match b/.c with ??/?? and {dot: true}
    ✓ should match b/.c with ??/?? and {nonegate: true}
    ✓ should match b/.c/ with ??/??
    ✓ should match b/.c/ with ??/?? and {dot: true}
    ✓ should match b/.c/ with ??/?? and {nonegate: true}
    ✓ should match a/+b/c with ??/??
    ✓ should match a/+b/c with ??/?? and {dot: true}
    ✓ should match a/+b/c with ??/?? and {nonegate: true}
    ✓ should match +a/+b/c with ??/??
    ✓ should match +a/+b/c with ??/?? and {dot: true}
    ✓ should match +a/+b/c with ??/?? and {nonegate: true}
    ✓ should match a (foo) with ??/??
    ✓ should match a (foo) with ??/?? and {dot: true}
    ✓ should match a (foo) with ??/?? and {nonegate: true}
    ✓ should match a (foo)/(bar) with ??/??
    ✓ should match a (foo)/(bar) with ??/?? and {dot: true}
    ✓ should match a (foo)/(bar) with ??/?? and {nonegate: true}
    ✓ should match a/b/c (1) with ??/??
    ✓ should match a/b/c (1) with ??/?? and {dot: true}
    ✓ should match a/b/c (1) with ??/?? and {nonegate: true}
    ✓ should match a/b (2)/c (1) with ??/??
    ✓ should match a/b (2)/c (1) with ??/?? and {dot: true}
    ✓ should match a/b (2)/c (1) with ??/?? and {nonegate: true}
    ✓ should match a/b/c [def] with ??/??
    ✓ should match a/b/c [def] with ??/?? and {dot: true}
    ✓ should match a/b/c [def] with ??/?? and {nonegate: true}
    ✓ should match a with ???
    ✓ should match a with ??? and {dot: true}
    ✓ should match a with ??? and {nonegate: true}
    ✓ should match a.md with ???
    ✓ should match a.md with ??? and {dot: true}
    ✓ should match a.md with ??? and {nonegate: true}
    ✓ should match a.js with ???
    ✓ should match a.js with ??? and {dot: true}
    ✓ should match a.js with ??? and {nonegate: true}
    ✓ should match a/ with ???
    ✓ should match a/ with ??? and {dot: true}
    ✓ should match a/ with ??? and {nonegate: true}
    ✓ should match a/b with ???
    ✓ should match a/b with ??? and {dot: true}
    ✓ should match a/b with ??? and {nonegate: true}
    ✓ should match a/b/.c.md with ???
    ✓ should match a/b/.c.md with ??? and {dot: true}
    ✓ should match a/b/.c.md with ??? and {nonegate: true}
    ✓ should match a/b/c with ???
    ✓ should match a/b/c with ??? and {dot: true}
    ✓ should match a/b/c with ??? and {nonegate: true}
    ✓ should match a/b/c.md with ???
    ✓ should match a/b/c.md with ??? and {dot: true}
    ✓ should match a/b/c.md with ??? and {nonegate: true}
    ✓ should match a/b/c/ with ???
    ✓ should match a/b/c/ with ??? and {dot: true}
    ✓ should match a/b/c/ with ??? and {nonegate: true}
    ✓ should match a/b/c/d with ???
    ✓ should match a/b/c/d with ??? and {dot: true}
    ✓ should match a/b/c/d with ??? and {nonegate: true}
    ✓ should match a/b/c/d/ with ???
    ✓ should match a/b/c/d/ with ??? and {dot: true}
    ✓ should match a/b/c/d/ with ??? and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with ???
    ✓ should match a/b/c/d/e/f/z.js with ??? and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with ??? and {nonegate: true}
    ✓ should match a/b/c/z.js with ???
    ✓ should match a/b/c/z.js with ??? and {dot: true}
    ✓ should match a/b/c/z.js with ??? and {nonegate: true}
    ✓ should match a/bb with ???
    ✓ should match a/bb with ??? and {dot: true}
    ✓ should match a/bb with ??? and {nonegate: true}
    ✓ should match a/cb with ???
    ✓ should match a/cb with ??? and {dot: true}
    ✓ should match a/cb with ??? and {nonegate: true}
    ✓ should match abbbz with ???
    ✓ should match abbbz with ??? and {dot: true}
    ✓ should match abbbz with ??? and {nonegate: true}
    ✓ should match abc with ???
    ✓ should match abc with ??? and {dot: true}
    ✓ should match abc with ??? and {nonegate: true}
    ✓ should match abd with ???
    ✓ should match abd with ??? and {dot: true}
    ✓ should match abd with ??? and {nonegate: true}
    ✓ should match z.js with ???
    ✓ should match z.js with ??? and {dot: true}
    ✓ should match z.js with ??? and {nonegate: true}
    ✓ should match za.js with ???
    ✓ should match za.js with ??? and {dot: true}
    ✓ should match za.js with ??? and {nonegate: true}
    ✓ should match !a.js with ???
    ✓ should match !a.js with ??? and {dot: true}
    ✓ should match !a.js with ??? and {nonegate: true}
    ✓ should match !a/b with ???
    ✓ should match !a/b with ??? and {dot: true}
    ✓ should match !a/b with ??? and {nonegate: true}
    ✓ should match !a/b/ with ???
    ✓ should match !a/b/ with ??? and {dot: true}
    ✓ should match !a/b/ with ??? and {nonegate: true}
    ✓ should match !a/b/c with ???
    ✓ should match !a/b/c with ??? and {dot: true}
    ✓ should match !a/b/c with ??? and {nonegate: true}
    ✓ should match !a/b/c/ with ???
    ✓ should match !a/b/c/ with ??? and {dot: true}
    ✓ should match !a/b/c/ with ??? and {nonegate: true}
    ✓ should match !a/!b with ???
    ✓ should match !a/!b with ??? and {dot: true}
    ✓ should match !a/!b with ??? and {nonegate: true}
    ✓ should match !a/!b/c with ???
    ✓ should match !a/!b/c with ??? and {dot: true}
    ✓ should match !a/!b/c with ??? and {nonegate: true}
    ✓ should match !a/!b/c/d with ???
    ✓ should match !a/!b/c/d with ??? and {dot: true}
    ✓ should match !a/!b/c/d with ??? and {nonegate: true}
    ✓ should match !a/b/.c.md with ???
    ✓ should match !a/b/.c.md with ??? and {dot: true}
    ✓ should match !a/b/.c.md with ??? and {nonegate: true}
    ✓ should match /a/ with ???
    ✓ should match /a/ with ??? and {dot: true}
    ✓ should match /a/ with ??? and {nonegate: true}
    ✓ should match /a/b with ???
    ✓ should match /a/b with ??? and {dot: true}
    ✓ should match /a/b with ??? and {nonegate: true}
    ✓ should match /a/cb with ???
    ✓ should match /a/cb with ??? and {dot: true}
    ✓ should match /a/cb with ??? and {nonegate: true}
    ✓ should match /a/bb with ???
    ✓ should match /a/bb with ??? and {dot: true}
    ✓ should match /a/bb with ??? and {nonegate: true}
    ✓ should match /a/b/c with ???
    ✓ should match /a/b/c with ??? and {dot: true}
    ✓ should match /a/b/c with ??? and {nonegate: true}
    ✓ should match /a/b/c/ with ???
    ✓ should match /a/b/c/ with ??? and {dot: true}
    ✓ should match /a/b/c/ with ??? and {nonegate: true}
    ✓ should match /a/b/c/d with ???
    ✓ should match /a/b/c/d with ??? and {dot: true}
    ✓ should match /a/b/c/d with ??? and {nonegate: true}
    ✓ should match /a/b/c/d/ with ???
    ✓ should match /a/b/c/d/ with ??? and {dot: true}
    ✓ should match /a/b/c/d/ with ??? and {nonegate: true}
    ✓ should match . with ???
    ✓ should match . with ??? and {dot: true}
    ✓ should match . with ??? and {nonegate: true}
    ✓ should match ./ with ???
    ✓ should match ./ with ??? and {dot: true}
    ✓ should match ./ with ??? and {nonegate: true}
    ✓ should match .. with ???
    ✓ should match .. with ??? and {dot: true}
    ✓ should match .. with ??? and {nonegate: true}
    ✓ should match ../c with ???
    ✓ should match ../c with ??? and {dot: true}
    ✓ should match ../c with ??? and {nonegate: true}
    ✓ should match ../c with ???
    ✓ should match ../c with ??? and {dot: true}
    ✓ should match ../c with ??? and {nonegate: true}
    ✓ should match ./../c with ???
    ✓ should match ./../c with ??? and {dot: true}
    ✓ should match ./../c with ??? and {nonegate: true}
    ✓ should match ./a/../c with ???
    ✓ should match ./a/../c with ??? and {dot: true}
    ✓ should match ./a/../c with ??? and {nonegate: true}
    ✓ should match /.. with ???
    ✓ should match /.. with ??? and {dot: true}
    ✓ should match /.. with ??? and {nonegate: true}
    ✓ should match /../c with ???
    ✓ should match /../c with ??? and {dot: true}
    ✓ should match /../c with ??? and {nonegate: true}
    ✓ should match /../.c with ???
    ✓ should match /../.c with ??? and {dot: true}
    ✓ should match /../.c with ??? and {nonegate: true}
    ✓ should match /../.c/ with ???
    ✓ should match /../.c/ with ??? and {dot: true}
    ✓ should match /../.c/ with ??? and {nonegate: true}
    ✓ should match /a/../c with ???
    ✓ should match /a/../c with ??? and {dot: true}
    ✓ should match /a/../c with ??? and {nonegate: true}
    ✓ should match a/../c with ???
    ✓ should match a/../c with ??? and {dot: true}
    ✓ should match a/../c with ??? and {nonegate: true}
    ✓ should match ../.b/.c with ???
    ✓ should match ../.b/.c with ??? and {dot: true}
    ✓ should match ../.b/.c with ??? and {nonegate: true}
    ✓ should match ../b/.c with ???
    ✓ should match ../b/.c with ??? and {dot: true}
    ✓ should match ../b/.c with ??? and {nonegate: true}
    ✓ should match ./.b/.c with ???
    ✓ should match ./.b/.c with ??? and {dot: true}
    ✓ should match ./.b/.c with ??? and {nonegate: true}
    ✓ should match ./b/.c with ???
    ✓ should match ./b/.c with ??? and {dot: true}
    ✓ should match ./b/.c with ??? and {nonegate: true}
    ✓ should match .b with ???
    ✓ should match .b with ??? and {dot: true}
    ✓ should match .b with ??? and {nonegate: true}
    ✓ should match .b.c with ???
    ✓ should match .b.c with ??? and {dot: true}
    ✓ should match .b.c with ??? and {nonegate: true}
    ✓ should match .b.c/ with ???
    ✓ should match .b.c/ with ??? and {dot: true}
    ✓ should match .b.c/ with ??? and {nonegate: true}
    ✓ should match .b/ with ???
    ✓ should match .b/ with ??? and {dot: true}
    ✓ should match .b/ with ??? and {nonegate: true}
    ✓ should match .b/.c with ???
    ✓ should match .b/.c with ??? and {dot: true}
    ✓ should match .b/.c with ??? and {nonegate: true}
    ✓ should match .b/c with ???
    ✓ should match .b/c with ??? and {dot: true}
    ✓ should match .b/c with ??? and {nonegate: true}
    ✓ should match b/.c with ???
    ✓ should match b/.c with ??? and {dot: true}
    ✓ should match b/.c with ??? and {nonegate: true}
    ✓ should match b/.c/ with ???
    ✓ should match b/.c/ with ??? and {dot: true}
    ✓ should match b/.c/ with ??? and {nonegate: true}
    ✓ should match a/+b/c with ???
    ✓ should match a/+b/c with ??? and {dot: true}
    ✓ should match a/+b/c with ??? and {nonegate: true}
    ✓ should match +a/+b/c with ???
    ✓ should match +a/+b/c with ??? and {dot: true}
    ✓ should match +a/+b/c with ??? and {nonegate: true}
    ✓ should match a (foo) with ???
    ✓ should match a (foo) with ??? and {dot: true}
    ✓ should match a (foo) with ??? and {nonegate: true}
    ✓ should match a (foo)/(bar) with ???
    ✓ should match a (foo)/(bar) with ??? and {dot: true}
    ✓ should match a (foo)/(bar) with ??? and {nonegate: true}
    ✓ should match a/b/c (1) with ???
    ✓ should match a/b/c (1) with ??? and {dot: true}
    ✓ should match a/b/c (1) with ??? and {nonegate: true}
    ✓ should match a/b (2)/c (1) with ???
    ✓ should match a/b (2)/c (1) with ??? and {dot: true}
    ✓ should match a/b (2)/c (1) with ??? and {nonegate: true}
    ✓ should match a/b/c [def] with ???
    ✓ should match a/b/c [def] with ??? and {dot: true}
    ✓ should match a/b/c [def] with ??? and {nonegate: true}
    ✓ should match a with ????
    ✓ should match a with ???? and {dot: true}
    ✓ should match a with ???? and {nonegate: true}
    ✓ should match a.md with ????
    ✓ should match a.md with ???? and {dot: true}
    ✓ should match a.md with ???? and {nonegate: true}
    ✓ should match a.js with ????
    ✓ should match a.js with ???? and {dot: true}
    ✓ should match a.js with ???? and {nonegate: true}
    ✓ should match a/ with ????
    ✓ should match a/ with ???? and {dot: true}
    ✓ should match a/ with ???? and {nonegate: true}
    ✓ should match a/b with ????
    ✓ should match a/b with ???? and {dot: true}
    ✓ should match a/b with ???? and {nonegate: true}
    ✓ should match a/b/.c.md with ????
    ✓ should match a/b/.c.md with ???? and {dot: true}
    ✓ should match a/b/.c.md with ???? and {nonegate: true}
    ✓ should match a/b/c with ????
    ✓ should match a/b/c with ???? and {dot: true}
    ✓ should match a/b/c with ???? and {nonegate: true}
    ✓ should match a/b/c.md with ????
    ✓ should match a/b/c.md with ???? and {dot: true}
    ✓ should match a/b/c.md with ???? and {nonegate: true}
    ✓ should match a/b/c/ with ????
    ✓ should match a/b/c/ with ???? and {dot: true}
    ✓ should match a/b/c/ with ???? and {nonegate: true}
    ✓ should match a/b/c/d with ????
    ✓ should match a/b/c/d with ???? and {dot: true}
    ✓ should match a/b/c/d with ???? and {nonegate: true}
    ✓ should match a/b/c/d/ with ????
    ✓ should match a/b/c/d/ with ???? and {dot: true}
    ✓ should match a/b/c/d/ with ???? and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with ????
    ✓ should match a/b/c/d/e/f/z.js with ???? and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with ???? and {nonegate: true}
    ✓ should match a/b/c/z.js with ????
    ✓ should match a/b/c/z.js with ???? and {dot: true}
    ✓ should match a/b/c/z.js with ???? and {nonegate: true}
    ✓ should match a/bb with ????
    ✓ should match a/bb with ???? and {dot: true}
    ✓ should match a/bb with ???? and {nonegate: true}
    ✓ should match a/cb with ????
    ✓ should match a/cb with ???? and {dot: true}
    ✓ should match a/cb with ???? and {nonegate: true}
    ✓ should match abbbz with ????
    ✓ should match abbbz with ???? and {dot: true}
    ✓ should match abbbz with ???? and {nonegate: true}
    ✓ should match abc with ????
    ✓ should match abc with ???? and {dot: true}
    ✓ should match abc with ???? and {nonegate: true}
    ✓ should match abd with ????
    ✓ should match abd with ???? and {dot: true}
    ✓ should match abd with ???? and {nonegate: true}
    ✓ should match z.js with ????
    ✓ should match z.js with ???? and {dot: true}
    ✓ should match z.js with ???? and {nonegate: true}
    ✓ should match za.js with ????
    ✓ should match za.js with ???? and {dot: true}
    ✓ should match za.js with ???? and {nonegate: true}
    ✓ should match !a.js with ????
    ✓ should match !a.js with ???? and {dot: true}
    ✓ should match !a.js with ???? and {nonegate: true}
    ✓ should match !a/b with ????
    ✓ should match !a/b with ???? and {dot: true}
    ✓ should match !a/b with ???? and {nonegate: true}
    ✓ should match !a/b/ with ????
    ✓ should match !a/b/ with ???? and {dot: true}
    ✓ should match !a/b/ with ???? and {nonegate: true}
    ✓ should match !a/b/c with ????
    ✓ should match !a/b/c with ???? and {dot: true}
    ✓ should match !a/b/c with ???? and {nonegate: true}
    ✓ should match !a/b/c/ with ????
    ✓ should match !a/b/c/ with ???? and {dot: true}
    ✓ should match !a/b/c/ with ???? and {nonegate: true}
    ✓ should match !a/!b with ????
    ✓ should match !a/!b with ???? and {dot: true}
    ✓ should match !a/!b with ???? and {nonegate: true}
    ✓ should match !a/!b/c with ????
    ✓ should match !a/!b/c with ???? and {dot: true}
    ✓ should match !a/!b/c with ???? and {nonegate: true}
    ✓ should match !a/!b/c/d with ????
    ✓ should match !a/!b/c/d with ???? and {dot: true}
    ✓ should match !a/!b/c/d with ???? and {nonegate: true}
    ✓ should match !a/b/.c.md with ????
    ✓ should match !a/b/.c.md with ???? and {dot: true}
    ✓ should match !a/b/.c.md with ???? and {nonegate: true}
    ✓ should match /a/ with ????
    ✓ should match /a/ with ???? and {dot: true}
    ✓ should match /a/ with ???? and {nonegate: true}
    ✓ should match /a/b with ????
    ✓ should match /a/b with ???? and {dot: true}
    ✓ should match /a/b with ???? and {nonegate: true}
    ✓ should match /a/cb with ????
    ✓ should match /a/cb with ???? and {dot: true}
    ✓ should match /a/cb with ???? and {nonegate: true}
    ✓ should match /a/bb with ????
    ✓ should match /a/bb with ???? and {dot: true}
    ✓ should match /a/bb with ???? and {nonegate: true}
    ✓ should match /a/b/c with ????
    ✓ should match /a/b/c with ???? and {dot: true}
    ✓ should match /a/b/c with ???? and {nonegate: true}
    ✓ should match /a/b/c/ with ????
    ✓ should match /a/b/c/ with ???? and {dot: true}
    ✓ should match /a/b/c/ with ???? and {nonegate: true}
    ✓ should match /a/b/c/d with ????
    ✓ should match /a/b/c/d with ???? and {dot: true}
    ✓ should match /a/b/c/d with ???? and {nonegate: true}
    ✓ should match /a/b/c/d/ with ????
    ✓ should match /a/b/c/d/ with ???? and {dot: true}
    ✓ should match /a/b/c/d/ with ???? and {nonegate: true}
    ✓ should match . with ????
    ✓ should match . with ???? and {dot: true}
    ✓ should match . with ???? and {nonegate: true}
    ✓ should match ./ with ????
    ✓ should match ./ with ???? and {dot: true}
    ✓ should match ./ with ???? and {nonegate: true}
    ✓ should match .. with ????
    ✓ should match .. with ???? and {dot: true}
    ✓ should match .. with ???? and {nonegate: true}
    ✓ should match ../c with ????
    ✓ should match ../c with ???? and {dot: true}
    ✓ should match ../c with ???? and {nonegate: true}
    ✓ should match ../c with ????
    ✓ should match ../c with ???? and {dot: true}
    ✓ should match ../c with ???? and {nonegate: true}
    ✓ should match ./../c with ????
    ✓ should match ./../c with ???? and {dot: true}
    ✓ should match ./../c with ???? and {nonegate: true}
    ✓ should match ./a/../c with ????
    ✓ should match ./a/../c with ???? and {dot: true}
    ✓ should match ./a/../c with ???? and {nonegate: true}
    ✓ should match /.. with ????
    ✓ should match /.. with ???? and {dot: true}
    ✓ should match /.. with ???? and {nonegate: true}
    ✓ should match /../c with ????
    ✓ should match /../c with ???? and {dot: true}
    ✓ should match /../c with ???? and {nonegate: true}
    ✓ should match /../.c with ????
    ✓ should match /../.c with ???? and {dot: true}
    ✓ should match /../.c with ???? and {nonegate: true}
    ✓ should match /../.c/ with ????
    ✓ should match /../.c/ with ???? and {dot: true}
    ✓ should match /../.c/ with ???? and {nonegate: true}
    ✓ should match /a/../c with ????
    ✓ should match /a/../c with ???? and {dot: true}
    ✓ should match /a/../c with ???? and {nonegate: true}
    ✓ should match a/../c with ????
    ✓ should match a/../c with ???? and {dot: true}
    ✓ should match a/../c with ???? and {nonegate: true}
    ✓ should match ../.b/.c with ????
    ✓ should match ../.b/.c with ???? and {dot: true}
    ✓ should match ../.b/.c with ???? and {nonegate: true}
    ✓ should match ../b/.c with ????
    ✓ should match ../b/.c with ???? and {dot: true}
    ✓ should match ../b/.c with ???? and {nonegate: true}
    ✓ should match ./.b/.c with ????
    ✓ should match ./.b/.c with ???? and {dot: true}
    ✓ should match ./.b/.c with ???? and {nonegate: true}
    ✓ should match ./b/.c with ????
    ✓ should match ./b/.c with ???? and {dot: true}
    ✓ should match ./b/.c with ???? and {nonegate: true}
    ✓ should match .b with ????
    ✓ should match .b with ???? and {dot: true}
    ✓ should match .b with ???? and {nonegate: true}
    ✓ should match .b.c with ????
    ✓ should match .b.c with ???? and {dot: true}
    ✓ should match .b.c with ???? and {nonegate: true}
    ✓ should match .b.c/ with ????
    ✓ should match .b.c/ with ???? and {dot: true}
    ✓ should match .b.c/ with ???? and {nonegate: true}
    ✓ should match .b/ with ????
    ✓ should match .b/ with ???? and {dot: true}
    ✓ should match .b/ with ???? and {nonegate: true}
    ✓ should match .b/.c with ????
    ✓ should match .b/.c with ???? and {dot: true}
    ✓ should match .b/.c with ???? and {nonegate: true}
    ✓ should match .b/c with ????
    ✓ should match .b/c with ???? and {dot: true}
    ✓ should match .b/c with ???? and {nonegate: true}
    ✓ should match b/.c with ????
    ✓ should match b/.c with ???? and {dot: true}
    ✓ should match b/.c with ???? and {nonegate: true}
    ✓ should match b/.c/ with ????
    ✓ should match b/.c/ with ???? and {dot: true}
    ✓ should match b/.c/ with ???? and {nonegate: true}
    ✓ should match a/+b/c with ????
    ✓ should match a/+b/c with ???? and {dot: true}
    ✓ should match a/+b/c with ???? and {nonegate: true}
    ✓ should match +a/+b/c with ????
    ✓ should match +a/+b/c with ???? and {dot: true}
    ✓ should match +a/+b/c with ???? and {nonegate: true}
    ✓ should match a (foo) with ????
    ✓ should match a (foo) with ???? and {dot: true}
    ✓ should match a (foo) with ???? and {nonegate: true}
    ✓ should match a (foo)/(bar) with ????
    ✓ should match a (foo)/(bar) with ???? and {dot: true}
    ✓ should match a (foo)/(bar) with ???? and {nonegate: true}
    ✓ should match a/b/c (1) with ????
    ✓ should match a/b/c (1) with ???? and {dot: true}
    ✓ should match a/b/c (1) with ???? and {nonegate: true}
    ✓ should match a/b (2)/c (1) with ????
    ✓ should match a/b (2)/c (1) with ???? and {dot: true}
    ✓ should match a/b (2)/c (1) with ???? and {nonegate: true}
    ✓ should match a/b/c [def] with ????
    ✓ should match a/b/c [def] with ???? and {dot: true}
    ✓ should match a/b/c [def] with ???? and {nonegate: true}
    ✓ should match a with a/*
    ✓ should match a with a/* and {dot: true}
    ✓ should match a with a/* and {nonegate: true}
    ✓ should match a.md with a/*
    ✓ should match a.md with a/* and {dot: true}
    ✓ should match a.md with a/* and {nonegate: true}
    ✓ should match a.js with a/*
    ✓ should match a.js with a/* and {dot: true}
    ✓ should match a.js with a/* and {nonegate: true}
    ✓ should match a/ with a/*
    ✓ should match a/ with a/* and {dot: true}
    ✓ should match a/ with a/* and {nonegate: true}
    ✓ should match a/b with a/*
    ✓ should match a/b with a/* and {dot: true}
    ✓ should match a/b with a/* and {nonegate: true}
    ✓ should match a/b/.c.md with a/*
    ✓ should match a/b/.c.md with a/* and {dot: true}
    ✓ should match a/b/.c.md with a/* and {nonegate: true}
    ✓ should match a/b/c with a/*
    ✓ should match a/b/c with a/* and {dot: true}
    ✓ should match a/b/c with a/* and {nonegate: true}
    ✓ should match a/b/c.md with a/*
    ✓ should match a/b/c.md with a/* and {dot: true}
    ✓ should match a/b/c.md with a/* and {nonegate: true}
    ✓ should match a/b/c/ with a/*
    ✓ should match a/b/c/ with a/* and {dot: true}
    ✓ should match a/b/c/ with a/* and {nonegate: true}
    ✓ should match a/b/c/d with a/*
    ✓ should match a/b/c/d with a/* and {dot: true}
    ✓ should match a/b/c/d with a/* and {nonegate: true}
    ✓ should match a/b/c/d/ with a/*
    ✓ should match a/b/c/d/ with a/* and {dot: true}
    ✓ should match a/b/c/d/ with a/* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with a/*
    ✓ should match a/b/c/d/e/f/z.js with a/* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with a/* and {nonegate: true}
    ✓ should match a/b/c/z.js with a/*
    ✓ should match a/b/c/z.js with a/* and {dot: true}
    ✓ should match a/b/c/z.js with a/* and {nonegate: true}
    ✓ should match a/bb with a/*
    ✓ should match a/bb with a/* and {dot: true}
    ✓ should match a/bb with a/* and {nonegate: true}
    ✓ should match a/cb with a/*
    ✓ should match a/cb with a/* and {dot: true}
    ✓ should match a/cb with a/* and {nonegate: true}
    ✓ should match abbbz with a/*
    ✓ should match abbbz with a/* and {dot: true}
    ✓ should match abbbz with a/* and {nonegate: true}
    ✓ should match abc with a/*
    ✓ should match abc with a/* and {dot: true}
    ✓ should match abc with a/* and {nonegate: true}
    ✓ should match abd with a/*
    ✓ should match abd with a/* and {dot: true}
    ✓ should match abd with a/* and {nonegate: true}
    ✓ should match z.js with a/*
    ✓ should match z.js with a/* and {dot: true}
    ✓ should match z.js with a/* and {nonegate: true}
    ✓ should match za.js with a/*
    ✓ should match za.js with a/* and {dot: true}
    ✓ should match za.js with a/* and {nonegate: true}
    ✓ should match !a.js with a/*
    ✓ should match !a.js with a/* and {dot: true}
    ✓ should match !a.js with a/* and {nonegate: true}
    ✓ should match !a/b with a/*
    ✓ should match !a/b with a/* and {dot: true}
    ✓ should match !a/b with a/* and {nonegate: true}
    ✓ should match !a/b/ with a/*
    ✓ should match !a/b/ with a/* and {dot: true}
    ✓ should match !a/b/ with a/* and {nonegate: true}
    ✓ should match !a/b/c with a/*
    ✓ should match !a/b/c with a/* and {dot: true}
    ✓ should match !a/b/c with a/* and {nonegate: true}
    ✓ should match !a/b/c/ with a/*
    ✓ should match !a/b/c/ with a/* and {dot: true}
    ✓ should match !a/b/c/ with a/* and {nonegate: true}
    ✓ should match !a/!b with a/*
    ✓ should match !a/!b with a/* and {dot: true}
    ✓ should match !a/!b with a/* and {nonegate: true}
    ✓ should match !a/!b/c with a/*
    ✓ should match !a/!b/c with a/* and {dot: true}
    ✓ should match !a/!b/c with a/* and {nonegate: true}
    ✓ should match !a/!b/c/d with a/*
    ✓ should match !a/!b/c/d with a/* and {dot: true}
    ✓ should match !a/!b/c/d with a/* and {nonegate: true}
    ✓ should match !a/b/.c.md with a/*
    ✓ should match !a/b/.c.md with a/* and {dot: true}
    ✓ should match !a/b/.c.md with a/* and {nonegate: true}
    ✓ should match /a/ with a/*
    ✓ should match /a/ with a/* and {dot: true}
    ✓ should match /a/ with a/* and {nonegate: true}
    ✓ should match /a/b with a/*
    ✓ should match /a/b with a/* and {dot: true}
    ✓ should match /a/b with a/* and {nonegate: true}
    ✓ should match /a/cb with a/*
    ✓ should match /a/cb with a/* and {dot: true}
    ✓ should match /a/cb with a/* and {nonegate: true}
    ✓ should match /a/bb with a/*
    ✓ should match /a/bb with a/* and {dot: true}
    ✓ should match /a/bb with a/* and {nonegate: true}
    ✓ should match /a/b/c with a/*
    ✓ should match /a/b/c with a/* and {dot: true}
    ✓ should match /a/b/c with a/* and {nonegate: true}
    ✓ should match /a/b/c/ with a/*
    ✓ should match /a/b/c/ with a/* and {dot: true}
    ✓ should match /a/b/c/ with a/* and {nonegate: true}
    ✓ should match /a/b/c/d with a/*
    ✓ should match /a/b/c/d with a/* and {dot: true}
    ✓ should match /a/b/c/d with a/* and {nonegate: true}
    ✓ should match /a/b/c/d/ with a/*
    ✓ should match /a/b/c/d/ with a/* and {dot: true}
    ✓ should match /a/b/c/d/ with a/* and {nonegate: true}
    ✓ should match . with a/*
    ✓ should match . with a/* and {dot: true}
    ✓ should match . with a/* and {nonegate: true}
    ✓ should match ./ with a/*
    ✓ should match ./ with a/* and {dot: true}
    ✓ should match ./ with a/* and {nonegate: true}
    ✓ should match .. with a/*
    ✓ should match .. with a/* and {dot: true}
    ✓ should match .. with a/* and {nonegate: true}
    ✓ should match ../c with a/*
    ✓ should match ../c with a/* and {dot: true}
    ✓ should match ../c with a/* and {nonegate: true}
    ✓ should match ../c with a/*
    ✓ should match ../c with a/* and {dot: true}
    ✓ should match ../c with a/* and {nonegate: true}
    ✓ should match ./../c with a/*
    ✓ should match ./../c with a/* and {dot: true}
    ✓ should match ./../c with a/* and {nonegate: true}
    ✓ should match ./a/../c with a/*
    ✓ should match ./a/../c with a/* and {dot: true}
    ✓ should match ./a/../c with a/* and {nonegate: true}
    ✓ should match /.. with a/*
    ✓ should match /.. with a/* and {dot: true}
    ✓ should match /.. with a/* and {nonegate: true}
    ✓ should match /../c with a/*
    ✓ should match /../c with a/* and {dot: true}
    ✓ should match /../c with a/* and {nonegate: true}
    ✓ should match /../.c with a/*
    ✓ should match /../.c with a/* and {dot: true}
    ✓ should match /../.c with a/* and {nonegate: true}
    ✓ should match /../.c/ with a/*
    ✓ should match /../.c/ with a/* and {dot: true}
    ✓ should match /../.c/ with a/* and {nonegate: true}
    ✓ should match /a/../c with a/*
    ✓ should match /a/../c with a/* and {dot: true}
    ✓ should match /a/../c with a/* and {nonegate: true}
    ✓ should match a/../c with a/*
    ✓ should match a/../c with a/* and {dot: true}
    ✓ should match a/../c with a/* and {nonegate: true}
    ✓ should match ../.b/.c with a/*
    ✓ should match ../.b/.c with a/* and {dot: true}
    ✓ should match ../.b/.c with a/* and {nonegate: true}
    ✓ should match ../b/.c with a/*
    ✓ should match ../b/.c with a/* and {dot: true}
    ✓ should match ../b/.c with a/* and {nonegate: true}
    ✓ should match ./.b/.c with a/*
    ✓ should match ./.b/.c with a/* and {dot: true}
    ✓ should match ./.b/.c with a/* and {nonegate: true}
    ✓ should match ./b/.c with a/*
    ✓ should match ./b/.c with a/* and {dot: true}
    ✓ should match ./b/.c with a/* and {nonegate: true}
    ✓ should match .b with a/*
    ✓ should match .b with a/* and {dot: true}
    ✓ should match .b with a/* and {nonegate: true}
    ✓ should match .b.c with a/*
    ✓ should match .b.c with a/* and {dot: true}
    ✓ should match .b.c with a/* and {nonegate: true}
    ✓ should match .b.c/ with a/*
    ✓ should match .b.c/ with a/* and {dot: true}
    ✓ should match .b.c/ with a/* and {nonegate: true}
    ✓ should match .b/ with a/*
    ✓ should match .b/ with a/* and {dot: true}
    ✓ should match .b/ with a/* and {nonegate: true}
    ✓ should match .b/.c with a/*
    ✓ should match .b/.c with a/* and {dot: true}
    ✓ should match .b/.c with a/* and {nonegate: true}
    ✓ should match .b/c with a/*
    ✓ should match .b/c with a/* and {dot: true}
    ✓ should match .b/c with a/* and {nonegate: true}
    ✓ should match b/.c with a/*
    ✓ should match b/.c with a/* and {dot: true}
    ✓ should match b/.c with a/* and {nonegate: true}
    ✓ should match b/.c/ with a/*
    ✓ should match b/.c/ with a/* and {dot: true}
    ✓ should match b/.c/ with a/* and {nonegate: true}
    ✓ should match a/+b/c with a/*
    ✓ should match a/+b/c with a/* and {dot: true}
    ✓ should match a/+b/c with a/* and {nonegate: true}
    ✓ should match +a/+b/c with a/*
    ✓ should match +a/+b/c with a/* and {dot: true}
    ✓ should match +a/+b/c with a/* and {nonegate: true}
    ✓ should match a (foo) with a/*
    ✓ should match a (foo) with a/* and {dot: true}
    ✓ should match a (foo) with a/* and {nonegate: true}
    ✓ should match a (foo)/(bar) with a/*
    ✓ should match a (foo)/(bar) with a/* and {dot: true}
    ✓ should match a (foo)/(bar) with a/* and {nonegate: true}
    ✓ should match a/b/c (1) with a/*
    ✓ should match a/b/c (1) with a/* and {dot: true}
    ✓ should match a/b/c (1) with a/* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with a/*
    ✓ should match a/b (2)/c (1) with a/* and {dot: true}
    ✓ should match a/b (2)/c (1) with a/* and {nonegate: true}
    ✓ should match a/b/c [def] with a/*
    ✓ should match a/b/c [def] with a/* and {dot: true}
    ✓ should match a/b/c [def] with a/* and {nonegate: true}
    ✓ should match a with a/*/
    ✓ should match a with a/*/ and {dot: true}
    ✓ should match a with a/*/ and {nonegate: true}
    ✓ should match a.md with a/*/
    ✓ should match a.md with a/*/ and {dot: true}
    ✓ should match a.md with a/*/ and {nonegate: true}
    ✓ should match a.js with a/*/
    ✓ should match a.js with a/*/ and {dot: true}
    ✓ should match a.js with a/*/ and {nonegate: true}
    ✓ should match a/ with a/*/
    ✓ should match a/ with a/*/ and {dot: true}
    ✓ should match a/ with a/*/ and {nonegate: true}
    ✓ should match a/b with a/*/
    ✓ should match a/b with a/*/ and {dot: true}
    ✓ should match a/b with a/*/ and {nonegate: true}
    ✓ should match a/b/.c.md with a/*/
    ✓ should match a/b/.c.md with a/*/ and {dot: true}
    ✓ should match a/b/.c.md with a/*/ and {nonegate: true}
    ✓ should match a/b/c with a/*/
    ✓ should match a/b/c with a/*/ and {dot: true}
    ✓ should match a/b/c with a/*/ and {nonegate: true}
    ✓ should match a/b/c.md with a/*/
    ✓ should match a/b/c.md with a/*/ and {dot: true}
    ✓ should match a/b/c.md with a/*/ and {nonegate: true}
    ✓ should match a/b/c/ with a/*/
    ✓ should match a/b/c/ with a/*/ and {dot: true}
    ✓ should match a/b/c/ with a/*/ and {nonegate: true}
    ✓ should match a/b/c/d with a/*/
    ✓ should match a/b/c/d with a/*/ and {dot: true}
    ✓ should match a/b/c/d with a/*/ and {nonegate: true}
    ✓ should match a/b/c/d/ with a/*/
    ✓ should match a/b/c/d/ with a/*/ and {dot: true}
    ✓ should match a/b/c/d/ with a/*/ and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with a/*/
    ✓ should match a/b/c/d/e/f/z.js with a/*/ and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with a/*/ and {nonegate: true}
    ✓ should match a/b/c/z.js with a/*/
    ✓ should match a/b/c/z.js with a/*/ and {dot: true}
    ✓ should match a/b/c/z.js with a/*/ and {nonegate: true}
    ✓ should match a/bb with a/*/
    ✓ should match a/bb with a/*/ and {dot: true}
    ✓ should match a/bb with a/*/ and {nonegate: true}
    ✓ should match a/cb with a/*/
    ✓ should match a/cb with a/*/ and {dot: true}
    ✓ should match a/cb with a/*/ and {nonegate: true}
    ✓ should match abbbz with a/*/
    ✓ should match abbbz with a/*/ and {dot: true}
    ✓ should match abbbz with a/*/ and {nonegate: true}
    ✓ should match abc with a/*/
    ✓ should match abc with a/*/ and {dot: true}
    ✓ should match abc with a/*/ and {nonegate: true}
    ✓ should match abd with a/*/
    ✓ should match abd with a/*/ and {dot: true}
    ✓ should match abd with a/*/ and {nonegate: true}
    ✓ should match z.js with a/*/
    ✓ should match z.js with a/*/ and {dot: true}
    ✓ should match z.js with a/*/ and {nonegate: true}
    ✓ should match za.js with a/*/
    ✓ should match za.js with a/*/ and {dot: true}
    ✓ should match za.js with a/*/ and {nonegate: true}
    ✓ should match !a.js with a/*/
    ✓ should match !a.js with a/*/ and {dot: true}
    ✓ should match !a.js with a/*/ and {nonegate: true}
    ✓ should match !a/b with a/*/
    ✓ should match !a/b with a/*/ and {dot: true}
    ✓ should match !a/b with a/*/ and {nonegate: true}
    ✓ should match !a/b/ with a/*/
    ✓ should match !a/b/ with a/*/ and {dot: true}
    ✓ should match !a/b/ with a/*/ and {nonegate: true}
    ✓ should match !a/b/c with a/*/
    ✓ should match !a/b/c with a/*/ and {dot: true}
    ✓ should match !a/b/c with a/*/ and {nonegate: true}
    ✓ should match !a/b/c/ with a/*/
    ✓ should match !a/b/c/ with a/*/ and {dot: true}
    ✓ should match !a/b/c/ with a/*/ and {nonegate: true}
    ✓ should match !a/!b with a/*/
    ✓ should match !a/!b with a/*/ and {dot: true}
    ✓ should match !a/!b with a/*/ and {nonegate: true}
    ✓ should match !a/!b/c with a/*/
    ✓ should match !a/!b/c with a/*/ and {dot: true}
    ✓ should match !a/!b/c with a/*/ and {nonegate: true}
    ✓ should match !a/!b/c/d with a/*/
    ✓ should match !a/!b/c/d with a/*/ and {dot: true}
    ✓ should match !a/!b/c/d with a/*/ and {nonegate: true}
    ✓ should match !a/b/.c.md with a/*/
    ✓ should match !a/b/.c.md with a/*/ and {dot: true}
    ✓ should match !a/b/.c.md with a/*/ and {nonegate: true}
    ✓ should match /a/ with a/*/
    ✓ should match /a/ with a/*/ and {dot: true}
    ✓ should match /a/ with a/*/ and {nonegate: true}
    ✓ should match /a/b with a/*/
    ✓ should match /a/b with a/*/ and {dot: true}
    ✓ should match /a/b with a/*/ and {nonegate: true}
    ✓ should match /a/cb with a/*/
    ✓ should match /a/cb with a/*/ and {dot: true}
    ✓ should match /a/cb with a/*/ and {nonegate: true}
    ✓ should match /a/bb with a/*/
    ✓ should match /a/bb with a/*/ and {dot: true}
    ✓ should match /a/bb with a/*/ and {nonegate: true}
    ✓ should match /a/b/c with a/*/
    ✓ should match /a/b/c with a/*/ and {dot: true}
    ✓ should match /a/b/c with a/*/ and {nonegate: true}
    ✓ should match /a/b/c/ with a/*/
    ✓ should match /a/b/c/ with a/*/ and {dot: true}
    ✓ should match /a/b/c/ with a/*/ and {nonegate: true}
    ✓ should match /a/b/c/d with a/*/
    ✓ should match /a/b/c/d with a/*/ and {dot: true}
    ✓ should match /a/b/c/d with a/*/ and {nonegate: true}
    ✓ should match /a/b/c/d/ with a/*/
    ✓ should match /a/b/c/d/ with a/*/ and {dot: true}
    ✓ should match /a/b/c/d/ with a/*/ and {nonegate: true}
    ✓ should match . with a/*/
    ✓ should match . with a/*/ and {dot: true}
    ✓ should match . with a/*/ and {nonegate: true}
    ✓ should match ./ with a/*/
    ✓ should match ./ with a/*/ and {dot: true}
    ✓ should match ./ with a/*/ and {nonegate: true}
    ✓ should match .. with a/*/
    ✓ should match .. with a/*/ and {dot: true}
    ✓ should match .. with a/*/ and {nonegate: true}
    ✓ should match ../c with a/*/
    ✓ should match ../c with a/*/ and {dot: true}
    ✓ should match ../c with a/*/ and {nonegate: true}
    ✓ should match ../c with a/*/
    ✓ should match ../c with a/*/ and {dot: true}
    ✓ should match ../c with a/*/ and {nonegate: true}
    ✓ should match ./../c with a/*/
    ✓ should match ./../c with a/*/ and {dot: true}
    ✓ should match ./../c with a/*/ and {nonegate: true}
    ✓ should match ./a/../c with a/*/
    ✓ should match ./a/../c with a/*/ and {dot: true}
    ✓ should match ./a/../c with a/*/ and {nonegate: true}
    ✓ should match /.. with a/*/
    ✓ should match /.. with a/*/ and {dot: true}
    ✓ should match /.. with a/*/ and {nonegate: true}
    ✓ should match /../c with a/*/
    ✓ should match /../c with a/*/ and {dot: true}
    ✓ should match /../c with a/*/ and {nonegate: true}
    ✓ should match /../.c with a/*/
    ✓ should match /../.c with a/*/ and {dot: true}
    ✓ should match /../.c with a/*/ and {nonegate: true}
    ✓ should match /../.c/ with a/*/
    ✓ should match /../.c/ with a/*/ and {dot: true}
    ✓ should match /../.c/ with a/*/ and {nonegate: true}
    ✓ should match /a/../c with a/*/
    ✓ should match /a/../c with a/*/ and {dot: true}
    ✓ should match /a/../c with a/*/ and {nonegate: true}
    ✓ should match a/../c with a/*/
    ✓ should match a/../c with a/*/ and {dot: true}
    ✓ should match a/../c with a/*/ and {nonegate: true}
    ✓ should match ../.b/.c with a/*/
    ✓ should match ../.b/.c with a/*/ and {dot: true}
    ✓ should match ../.b/.c with a/*/ and {nonegate: true}
    ✓ should match ../b/.c with a/*/
    ✓ should match ../b/.c with a/*/ and {dot: true}
    ✓ should match ../b/.c with a/*/ and {nonegate: true}
    ✓ should match ./.b/.c with a/*/
    ✓ should match ./.b/.c with a/*/ and {dot: true}
    ✓ should match ./.b/.c with a/*/ and {nonegate: true}
    ✓ should match ./b/.c with a/*/
    ✓ should match ./b/.c with a/*/ and {dot: true}
    ✓ should match ./b/.c with a/*/ and {nonegate: true}
    ✓ should match .b with a/*/
    ✓ should match .b with a/*/ and {dot: true}
    ✓ should match .b with a/*/ and {nonegate: true}
    ✓ should match .b.c with a/*/
    ✓ should match .b.c with a/*/ and {dot: true}
    ✓ should match .b.c with a/*/ and {nonegate: true}
    ✓ should match .b.c/ with a/*/
    ✓ should match .b.c/ with a/*/ and {dot: true}
    ✓ should match .b.c/ with a/*/ and {nonegate: true}
    ✓ should match .b/ with a/*/
    ✓ should match .b/ with a/*/ and {dot: true}
    ✓ should match .b/ with a/*/ and {nonegate: true}
    ✓ should match .b/.c with a/*/
    ✓ should match .b/.c with a/*/ and {dot: true}
    ✓ should match .b/.c with a/*/ and {nonegate: true}
    ✓ should match .b/c with a/*/
    ✓ should match .b/c with a/*/ and {dot: true}
    ✓ should match .b/c with a/*/ and {nonegate: true}
    ✓ should match b/.c with a/*/
    ✓ should match b/.c with a/*/ and {dot: true}
    ✓ should match b/.c with a/*/ and {nonegate: true}
    ✓ should match b/.c/ with a/*/
    ✓ should match b/.c/ with a/*/ and {dot: true}
    ✓ should match b/.c/ with a/*/ and {nonegate: true}
    ✓ should match a/+b/c with a/*/
    ✓ should match a/+b/c with a/*/ and {dot: true}
    ✓ should match a/+b/c with a/*/ and {nonegate: true}
    ✓ should match +a/+b/c with a/*/
    ✓ should match +a/+b/c with a/*/ and {dot: true}
    ✓ should match +a/+b/c with a/*/ and {nonegate: true}
    ✓ should match a (foo) with a/*/
    ✓ should match a (foo) with a/*/ and {dot: true}
    ✓ should match a (foo) with a/*/ and {nonegate: true}
    ✓ should match a (foo)/(bar) with a/*/
    ✓ should match a (foo)/(bar) with a/*/ and {dot: true}
    ✓ should match a (foo)/(bar) with a/*/ and {nonegate: true}
    ✓ should match a/b/c (1) with a/*/
    ✓ should match a/b/c (1) with a/*/ and {dot: true}
    ✓ should match a/b/c (1) with a/*/ and {nonegate: true}
    ✓ should match a/b (2)/c (1) with a/*/
    ✓ should match a/b (2)/c (1) with a/*/ and {dot: true}
    ✓ should match a/b (2)/c (1) with a/*/ and {nonegate: true}
    ✓ should match a/b/c [def] with a/*/
    ✓ should match a/b/c [def] with a/*/ and {dot: true}
    ✓ should match a/b/c [def] with a/*/ and {nonegate: true}
    ✓ should match a with a/b/*
    ✓ should match a with a/b/* and {dot: true}
    ✓ should match a with a/b/* and {nonegate: true}
    ✓ should match a.md with a/b/*
    ✓ should match a.md with a/b/* and {dot: true}
    ✓ should match a.md with a/b/* and {nonegate: true}
    ✓ should match a.js with a/b/*
    ✓ should match a.js with a/b/* and {dot: true}
    ✓ should match a.js with a/b/* and {nonegate: true}
    ✓ should match a/ with a/b/*
    ✓ should match a/ with a/b/* and {dot: true}
    ✓ should match a/ with a/b/* and {nonegate: true}
    ✓ should match a/b with a/b/*
    ✓ should match a/b with a/b/* and {dot: true}
    ✓ should match a/b with a/b/* and {nonegate: true}
    ✓ should match a/b/.c.md with a/b/*
    ✓ should match a/b/.c.md with a/b/* and {dot: true}
    ✓ should match a/b/.c.md with a/b/* and {nonegate: true}
    ✓ should match a/b/c with a/b/*
    ✓ should match a/b/c with a/b/* and {dot: true}
    ✓ should match a/b/c with a/b/* and {nonegate: true}
    ✓ should match a/b/c.md with a/b/*
    ✓ should match a/b/c.md with a/b/* and {dot: true}
    ✓ should match a/b/c.md with a/b/* and {nonegate: true}
    ✓ should match a/b/c/ with a/b/*
    ✓ should match a/b/c/ with a/b/* and {dot: true}
    ✓ should match a/b/c/ with a/b/* and {nonegate: true}
    ✓ should match a/b/c/d with a/b/*
    ✓ should match a/b/c/d with a/b/* and {dot: true}
    ✓ should match a/b/c/d with a/b/* and {nonegate: true}
    ✓ should match a/b/c/d/ with a/b/*
    ✓ should match a/b/c/d/ with a/b/* and {dot: true}
    ✓ should match a/b/c/d/ with a/b/* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with a/b/*
    ✓ should match a/b/c/d/e/f/z.js with a/b/* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with a/b/* and {nonegate: true}
    ✓ should match a/b/c/z.js with a/b/*
    ✓ should match a/b/c/z.js with a/b/* and {dot: true}
    ✓ should match a/b/c/z.js with a/b/* and {nonegate: true}
    ✓ should match a/bb with a/b/*
    ✓ should match a/bb with a/b/* and {dot: true}
    ✓ should match a/bb with a/b/* and {nonegate: true}
    ✓ should match a/cb with a/b/*
    ✓ should match a/cb with a/b/* and {dot: true}
    ✓ should match a/cb with a/b/* and {nonegate: true}
    ✓ should match abbbz with a/b/*
    ✓ should match abbbz with a/b/* and {dot: true}
    ✓ should match abbbz with a/b/* and {nonegate: true}
    ✓ should match abc with a/b/*
    ✓ should match abc with a/b/* and {dot: true}
    ✓ should match abc with a/b/* and {nonegate: true}
    ✓ should match abd with a/b/*
    ✓ should match abd with a/b/* and {dot: true}
    ✓ should match abd with a/b/* and {nonegate: true}
    ✓ should match z.js with a/b/*
    ✓ should match z.js with a/b/* and {dot: true}
    ✓ should match z.js with a/b/* and {nonegate: true}
    ✓ should match za.js with a/b/*
    ✓ should match za.js with a/b/* and {dot: true}
    ✓ should match za.js with a/b/* and {nonegate: true}
    ✓ should match !a.js with a/b/*
    ✓ should match !a.js with a/b/* and {dot: true}
    ✓ should match !a.js with a/b/* and {nonegate: true}
    ✓ should match !a/b with a/b/*
    ✓ should match !a/b with a/b/* and {dot: true}
    ✓ should match !a/b with a/b/* and {nonegate: true}
    ✓ should match !a/b/ with a/b/*
    ✓ should match !a/b/ with a/b/* and {dot: true}
    ✓ should match !a/b/ with a/b/* and {nonegate: true}
    ✓ should match !a/b/c with a/b/*
    ✓ should match !a/b/c with a/b/* and {dot: true}
    ✓ should match !a/b/c with a/b/* and {nonegate: true}
    ✓ should match !a/b/c/ with a/b/*
    ✓ should match !a/b/c/ with a/b/* and {dot: true}
    ✓ should match !a/b/c/ with a/b/* and {nonegate: true}
    ✓ should match !a/!b with a/b/*
    ✓ should match !a/!b with a/b/* and {dot: true}
    ✓ should match !a/!b with a/b/* and {nonegate: true}
    ✓ should match !a/!b/c with a/b/*
    ✓ should match !a/!b/c with a/b/* and {dot: true}
    ✓ should match !a/!b/c with a/b/* and {nonegate: true}
    ✓ should match !a/!b/c/d with a/b/*
    ✓ should match !a/!b/c/d with a/b/* and {dot: true}
    ✓ should match !a/!b/c/d with a/b/* and {nonegate: true}
    ✓ should match !a/b/.c.md with a/b/*
    ✓ should match !a/b/.c.md with a/b/* and {dot: true}
    ✓ should match !a/b/.c.md with a/b/* and {nonegate: true}
    ✓ should match /a/ with a/b/*
    ✓ should match /a/ with a/b/* and {dot: true}
    ✓ should match /a/ with a/b/* and {nonegate: true}
    ✓ should match /a/b with a/b/*
    ✓ should match /a/b with a/b/* and {dot: true}
    ✓ should match /a/b with a/b/* and {nonegate: true}
    ✓ should match /a/cb with a/b/*
    ✓ should match /a/cb with a/b/* and {dot: true}
    ✓ should match /a/cb with a/b/* and {nonegate: true}
    ✓ should match /a/bb with a/b/*
    ✓ should match /a/bb with a/b/* and {dot: true}
    ✓ should match /a/bb with a/b/* and {nonegate: true}
    ✓ should match /a/b/c with a/b/*
    ✓ should match /a/b/c with a/b/* and {dot: true}
    ✓ should match /a/b/c with a/b/* and {nonegate: true}
    ✓ should match /a/b/c/ with a/b/*
    ✓ should match /a/b/c/ with a/b/* and {dot: true}
    ✓ should match /a/b/c/ with a/b/* and {nonegate: true}
    ✓ should match /a/b/c/d with a/b/*
    ✓ should match /a/b/c/d with a/b/* and {dot: true}
    ✓ should match /a/b/c/d with a/b/* and {nonegate: true}
    ✓ should match /a/b/c/d/ with a/b/*
    ✓ should match /a/b/c/d/ with a/b/* and {dot: true}
    ✓ should match /a/b/c/d/ with a/b/* and {nonegate: true}
    ✓ should match . with a/b/*
    ✓ should match . with a/b/* and {dot: true}
    ✓ should match . with a/b/* and {nonegate: true}
    ✓ should match ./ with a/b/*
    ✓ should match ./ with a/b/* and {dot: true}
    ✓ should match ./ with a/b/* and {nonegate: true}
    ✓ should match .. with a/b/*
    ✓ should match .. with a/b/* and {dot: true}
    ✓ should match .. with a/b/* and {nonegate: true}
    ✓ should match ../c with a/b/*
    ✓ should match ../c with a/b/* and {dot: true}
    ✓ should match ../c with a/b/* and {nonegate: true}
    ✓ should match ../c with a/b/*
    ✓ should match ../c with a/b/* and {dot: true}
    ✓ should match ../c with a/b/* and {nonegate: true}
    ✓ should match ./../c with a/b/*
    ✓ should match ./../c with a/b/* and {dot: true}
    ✓ should match ./../c with a/b/* and {nonegate: true}
    ✓ should match ./a/../c with a/b/*
    ✓ should match ./a/../c with a/b/* and {dot: true}
    ✓ should match ./a/../c with a/b/* and {nonegate: true}
    ✓ should match /.. with a/b/*
    ✓ should match /.. with a/b/* and {dot: true}
    ✓ should match /.. with a/b/* and {nonegate: true}
    ✓ should match /../c with a/b/*
    ✓ should match /../c with a/b/* and {dot: true}
    ✓ should match /../c with a/b/* and {nonegate: true}
    ✓ should match /../.c with a/b/*
    ✓ should match /../.c with a/b/* and {dot: true}
    ✓ should match /../.c with a/b/* and {nonegate: true}
    ✓ should match /../.c/ with a/b/*
    ✓ should match /../.c/ with a/b/* and {dot: true}
    ✓ should match /../.c/ with a/b/* and {nonegate: true}
    ✓ should match /a/../c with a/b/*
    ✓ should match /a/../c with a/b/* and {dot: true}
    ✓ should match /a/../c with a/b/* and {nonegate: true}
    ✓ should match a/../c with a/b/*
    ✓ should match a/../c with a/b/* and {dot: true}
    ✓ should match a/../c with a/b/* and {nonegate: true}
    ✓ should match ../.b/.c with a/b/*
    ✓ should match ../.b/.c with a/b/* and {dot: true}
    ✓ should match ../.b/.c with a/b/* and {nonegate: true}
    ✓ should match ../b/.c with a/b/*
    ✓ should match ../b/.c with a/b/* and {dot: true}
    ✓ should match ../b/.c with a/b/* and {nonegate: true}
    ✓ should match ./.b/.c with a/b/*
    ✓ should match ./.b/.c with a/b/* and {dot: true}
    ✓ should match ./.b/.c with a/b/* and {nonegate: true}
    ✓ should match ./b/.c with a/b/*
    ✓ should match ./b/.c with a/b/* and {dot: true}
    ✓ should match ./b/.c with a/b/* and {nonegate: true}
    ✓ should match .b with a/b/*
    ✓ should match .b with a/b/* and {dot: true}
    ✓ should match .b with a/b/* and {nonegate: true}
    ✓ should match .b.c with a/b/*
    ✓ should match .b.c with a/b/* and {dot: true}
    ✓ should match .b.c with a/b/* and {nonegate: true}
    ✓ should match .b.c/ with a/b/*
    ✓ should match .b.c/ with a/b/* and {dot: true}
    ✓ should match .b.c/ with a/b/* and {nonegate: true}
    ✓ should match .b/ with a/b/*
    ✓ should match .b/ with a/b/* and {dot: true}
    ✓ should match .b/ with a/b/* and {nonegate: true}
    ✓ should match .b/.c with a/b/*
    ✓ should match .b/.c with a/b/* and {dot: true}
    ✓ should match .b/.c with a/b/* and {nonegate: true}
    ✓ should match .b/c with a/b/*
    ✓ should match .b/c with a/b/* and {dot: true}
    ✓ should match .b/c with a/b/* and {nonegate: true}
    ✓ should match b/.c with a/b/*
    ✓ should match b/.c with a/b/* and {dot: true}
    ✓ should match b/.c with a/b/* and {nonegate: true}
    ✓ should match b/.c/ with a/b/*
    ✓ should match b/.c/ with a/b/* and {dot: true}
    ✓ should match b/.c/ with a/b/* and {nonegate: true}
    ✓ should match a/+b/c with a/b/*
    ✓ should match a/+b/c with a/b/* and {dot: true}
    ✓ should match a/+b/c with a/b/* and {nonegate: true}
    ✓ should match +a/+b/c with a/b/*
    ✓ should match +a/+b/c with a/b/* and {dot: true}
    ✓ should match +a/+b/c with a/b/* and {nonegate: true}
    ✓ should match a (foo) with a/b/*
    ✓ should match a (foo) with a/b/* and {dot: true}
    ✓ should match a (foo) with a/b/* and {nonegate: true}
    ✓ should match a (foo)/(bar) with a/b/*
    ✓ should match a (foo)/(bar) with a/b/* and {dot: true}
    ✓ should match a (foo)/(bar) with a/b/* and {nonegate: true}
    ✓ should match a/b/c (1) with a/b/*
    ✓ should match a/b/c (1) with a/b/* and {dot: true}
    ✓ should match a/b/c (1) with a/b/* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with a/b/*
    ✓ should match a/b (2)/c (1) with a/b/* and {dot: true}
    ✓ should match a/b (2)/c (1) with a/b/* and {nonegate: true}
    ✓ should match a/b/c [def] with a/b/*
    ✓ should match a/b/c [def] with a/b/* and {dot: true}
    ✓ should match a/b/c [def] with a/b/* and {nonegate: true}
    ✓ should match a with a/**/
    ✓ should match a with a/**/ and {dot: true}
    ✓ should match a with a/**/ and {nonegate: true}
    ✓ should match a.md with a/**/
    ✓ should match a.md with a/**/ and {dot: true}
    ✓ should match a.md with a/**/ and {nonegate: true}
    ✓ should match a.js with a/**/
    ✓ should match a.js with a/**/ and {dot: true}
    ✓ should match a.js with a/**/ and {nonegate: true}
    ✓ should match a/ with a/**/
    ✓ should match a/ with a/**/ and {dot: true}
    ✓ should match a/ with a/**/ and {nonegate: true}
    ✓ should match a/b with a/**/
    ✓ should match a/b with a/**/ and {dot: true}
    ✓ should match a/b with a/**/ and {nonegate: true}
    ✓ should match a/b/.c.md with a/**/
    ✓ should match a/b/.c.md with a/**/ and {dot: true}
    ✓ should match a/b/.c.md with a/**/ and {nonegate: true}
    ✓ should match a/b/c with a/**/
    ✓ should match a/b/c with a/**/ and {dot: true}
    ✓ should match a/b/c with a/**/ and {nonegate: true}
    ✓ should match a/b/c.md with a/**/
    ✓ should match a/b/c.md with a/**/ and {dot: true}
    ✓ should match a/b/c.md with a/**/ and {nonegate: true}
    ✓ should match a/b/c/ with a/**/
    ✓ should match a/b/c/ with a/**/ and {dot: true}
    ✓ should match a/b/c/ with a/**/ and {nonegate: true}
    ✓ should match a/b/c/d with a/**/
    ✓ should match a/b/c/d with a/**/ and {dot: true}
    ✓ should match a/b/c/d with a/**/ and {nonegate: true}
    ✓ should match a/b/c/d/ with a/**/
    ✓ should match a/b/c/d/ with a/**/ and {dot: true}
    ✓ should match a/b/c/d/ with a/**/ and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with a/**/
    ✓ should match a/b/c/d/e/f/z.js with a/**/ and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with a/**/ and {nonegate: true}
    ✓ should match a/b/c/z.js with a/**/
    ✓ should match a/b/c/z.js with a/**/ and {dot: true}
    ✓ should match a/b/c/z.js with a/**/ and {nonegate: true}
    ✓ should match a/bb with a/**/
    ✓ should match a/bb with a/**/ and {dot: true}
    ✓ should match a/bb with a/**/ and {nonegate: true}
    ✓ should match a/cb with a/**/
    ✓ should match a/cb with a/**/ and {dot: true}
    ✓ should match a/cb with a/**/ and {nonegate: true}
    ✓ should match abbbz with a/**/
    ✓ should match abbbz with a/**/ and {dot: true}
    ✓ should match abbbz with a/**/ and {nonegate: true}
    ✓ should match abc with a/**/
    ✓ should match abc with a/**/ and {dot: true}
    ✓ should match abc with a/**/ and {nonegate: true}
    ✓ should match abd with a/**/
    ✓ should match abd with a/**/ and {dot: true}
    ✓ should match abd with a/**/ and {nonegate: true}
    ✓ should match z.js with a/**/
    ✓ should match z.js with a/**/ and {dot: true}
    ✓ should match z.js with a/**/ and {nonegate: true}
    ✓ should match za.js with a/**/
    ✓ should match za.js with a/**/ and {dot: true}
    ✓ should match za.js with a/**/ and {nonegate: true}
    ✓ should match !a.js with a/**/
    ✓ should match !a.js with a/**/ and {dot: true}
    ✓ should match !a.js with a/**/ and {nonegate: true}
    ✓ should match !a/b with a/**/
    ✓ should match !a/b with a/**/ and {dot: true}
    ✓ should match !a/b with a/**/ and {nonegate: true}
    ✓ should match !a/b/ with a/**/
    ✓ should match !a/b/ with a/**/ and {dot: true}
    ✓ should match !a/b/ with a/**/ and {nonegate: true}
    ✓ should match !a/b/c with a/**/
    ✓ should match !a/b/c with a/**/ and {dot: true}
    ✓ should match !a/b/c with a/**/ and {nonegate: true}
    ✓ should match !a/b/c/ with a/**/
    ✓ should match !a/b/c/ with a/**/ and {dot: true}
    ✓ should match !a/b/c/ with a/**/ and {nonegate: true}
    ✓ should match !a/!b with a/**/
    ✓ should match !a/!b with a/**/ and {dot: true}
    ✓ should match !a/!b with a/**/ and {nonegate: true}
    ✓ should match !a/!b/c with a/**/
    ✓ should match !a/!b/c with a/**/ and {dot: true}
    ✓ should match !a/!b/c with a/**/ and {nonegate: true}
    ✓ should match !a/!b/c/d with a/**/
    ✓ should match !a/!b/c/d with a/**/ and {dot: true}
    ✓ should match !a/!b/c/d with a/**/ and {nonegate: true}
    ✓ should match !a/b/.c.md with a/**/
    ✓ should match !a/b/.c.md with a/**/ and {dot: true}
    ✓ should match !a/b/.c.md with a/**/ and {nonegate: true}
    ✓ should match /a/ with a/**/
    ✓ should match /a/ with a/**/ and {dot: true}
    ✓ should match /a/ with a/**/ and {nonegate: true}
    ✓ should match /a/b with a/**/
    ✓ should match /a/b with a/**/ and {dot: true}
    ✓ should match /a/b with a/**/ and {nonegate: true}
    ✓ should match /a/cb with a/**/
    ✓ should match /a/cb with a/**/ and {dot: true}
    ✓ should match /a/cb with a/**/ and {nonegate: true}
    ✓ should match /a/bb with a/**/
    ✓ should match /a/bb with a/**/ and {dot: true}
    ✓ should match /a/bb with a/**/ and {nonegate: true}
    ✓ should match /a/b/c with a/**/
    ✓ should match /a/b/c with a/**/ and {dot: true}
    ✓ should match /a/b/c with a/**/ and {nonegate: true}
    ✓ should match /a/b/c/ with a/**/
    ✓ should match /a/b/c/ with a/**/ and {dot: true}
    ✓ should match /a/b/c/ with a/**/ and {nonegate: true}
    ✓ should match /a/b/c/d with a/**/
    ✓ should match /a/b/c/d with a/**/ and {dot: true}
    ✓ should match /a/b/c/d with a/**/ and {nonegate: true}
    ✓ should match /a/b/c/d/ with a/**/
    ✓ should match /a/b/c/d/ with a/**/ and {dot: true}
    ✓ should match /a/b/c/d/ with a/**/ and {nonegate: true}
    ✓ should match . with a/**/
    ✓ should match . with a/**/ and {dot: true}
    ✓ should match . with a/**/ and {nonegate: true}
    ✓ should match ./ with a/**/
    ✓ should match ./ with a/**/ and {dot: true}
    ✓ should match ./ with a/**/ and {nonegate: true}
    ✓ should match .. with a/**/
    ✓ should match .. with a/**/ and {dot: true}
    ✓ should match .. with a/**/ and {nonegate: true}
    ✓ should match ../c with a/**/
    ✓ should match ../c with a/**/ and {dot: true}
    ✓ should match ../c with a/**/ and {nonegate: true}
    ✓ should match ../c with a/**/
    ✓ should match ../c with a/**/ and {dot: true}
    ✓ should match ../c with a/**/ and {nonegate: true}
    ✓ should match ./../c with a/**/
    ✓ should match ./../c with a/**/ and {dot: true}
    ✓ should match ./../c with a/**/ and {nonegate: true}
    ✓ should match ./a/../c with a/**/
    ✓ should match ./a/../c with a/**/ and {dot: true}
    ✓ should match ./a/../c with a/**/ and {nonegate: true}
    ✓ should match /.. with a/**/
    ✓ should match /.. with a/**/ and {dot: true}
    ✓ should match /.. with a/**/ and {nonegate: true}
    ✓ should match /../c with a/**/
    ✓ should match /../c with a/**/ and {dot: true}
    ✓ should match /../c with a/**/ and {nonegate: true}
    ✓ should match /../.c with a/**/
    ✓ should match /../.c with a/**/ and {dot: true}
    ✓ should match /../.c with a/**/ and {nonegate: true}
    ✓ should match /../.c/ with a/**/
    ✓ should match /../.c/ with a/**/ and {dot: true}
    ✓ should match /../.c/ with a/**/ and {nonegate: true}
    ✓ should match /a/../c with a/**/
    ✓ should match /a/../c with a/**/ and {dot: true}
    ✓ should match /a/../c with a/**/ and {nonegate: true}
    ✓ should match a/../c with a/**/
    ✓ should match a/../c with a/**/ and {dot: true}
    ✓ should match a/../c with a/**/ and {nonegate: true}
    ✓ should match ../.b/.c with a/**/
    ✓ should match ../.b/.c with a/**/ and {dot: true}
    ✓ should match ../.b/.c with a/**/ and {nonegate: true}
    ✓ should match ../b/.c with a/**/
    ✓ should match ../b/.c with a/**/ and {dot: true}
    ✓ should match ../b/.c with a/**/ and {nonegate: true}
    ✓ should match ./.b/.c with a/**/
    ✓ should match ./.b/.c with a/**/ and {dot: true}
    ✓ should match ./.b/.c with a/**/ and {nonegate: true}
    ✓ should match ./b/.c with a/**/
    ✓ should match ./b/.c with a/**/ and {dot: true}
    ✓ should match ./b/.c with a/**/ and {nonegate: true}
    ✓ should match .b with a/**/
    ✓ should match .b with a/**/ and {dot: true}
    ✓ should match .b with a/**/ and {nonegate: true}
    ✓ should match .b.c with a/**/
    ✓ should match .b.c with a/**/ and {dot: true}
    ✓ should match .b.c with a/**/ and {nonegate: true}
    ✓ should match .b.c/ with a/**/
    ✓ should match .b.c/ with a/**/ and {dot: true}
    ✓ should match .b.c/ with a/**/ and {nonegate: true}
    ✓ should match .b/ with a/**/
    ✓ should match .b/ with a/**/ and {dot: true}
    ✓ should match .b/ with a/**/ and {nonegate: true}
    ✓ should match .b/.c with a/**/
    ✓ should match .b/.c with a/**/ and {dot: true}
    ✓ should match .b/.c with a/**/ and {nonegate: true}
    ✓ should match .b/c with a/**/
    ✓ should match .b/c with a/**/ and {dot: true}
    ✓ should match .b/c with a/**/ and {nonegate: true}
    ✓ should match b/.c with a/**/
    ✓ should match b/.c with a/**/ and {dot: true}
    ✓ should match b/.c with a/**/ and {nonegate: true}
    ✓ should match b/.c/ with a/**/
    ✓ should match b/.c/ with a/**/ and {dot: true}
    ✓ should match b/.c/ with a/**/ and {nonegate: true}
    ✓ should match a/+b/c with a/**/
    ✓ should match a/+b/c with a/**/ and {dot: true}
    ✓ should match a/+b/c with a/**/ and {nonegate: true}
    ✓ should match +a/+b/c with a/**/
    ✓ should match +a/+b/c with a/**/ and {dot: true}
    ✓ should match +a/+b/c with a/**/ and {nonegate: true}
    ✓ should match a (foo) with a/**/
    ✓ should match a (foo) with a/**/ and {dot: true}
    ✓ should match a (foo) with a/**/ and {nonegate: true}
    ✓ should match a (foo)/(bar) with a/**/
    ✓ should match a (foo)/(bar) with a/**/ and {dot: true}
    ✓ should match a (foo)/(bar) with a/**/ and {nonegate: true}
    ✓ should match a/b/c (1) with a/**/
    ✓ should match a/b/c (1) with a/**/ and {dot: true}
    ✓ should match a/b/c (1) with a/**/ and {nonegate: true}
    ✓ should match a/b (2)/c (1) with a/**/
    ✓ should match a/b (2)/c (1) with a/**/ and {dot: true}
    ✓ should match a/b (2)/c (1) with a/**/ and {nonegate: true}
    ✓ should match a/b/c [def] with a/**/
    ✓ should match a/b/c [def] with a/**/ and {dot: true}
    ✓ should match a/b/c [def] with a/**/ and {nonegate: true}
    ✓ should match a with a/**/b
    ✓ should match a with a/**/b and {dot: true}
    ✓ should match a with a/**/b and {nonegate: true}
    ✓ should match a.md with a/**/b
    ✓ should match a.md with a/**/b and {dot: true}
    ✓ should match a.md with a/**/b and {nonegate: true}
    ✓ should match a.js with a/**/b
    ✓ should match a.js with a/**/b and {dot: true}
    ✓ should match a.js with a/**/b and {nonegate: true}
    ✓ should match a/ with a/**/b
    ✓ should match a/ with a/**/b and {dot: true}
    ✓ should match a/ with a/**/b and {nonegate: true}
    ✓ should match a/b with a/**/b
    ✓ should match a/b with a/**/b and {dot: true}
    ✓ should match a/b with a/**/b and {nonegate: true}
    ✓ should match a/b/.c.md with a/**/b
    ✓ should match a/b/.c.md with a/**/b and {dot: true}
    ✓ should match a/b/.c.md with a/**/b and {nonegate: true}
    ✓ should match a/b/c with a/**/b
    ✓ should match a/b/c with a/**/b and {dot: true}
    ✓ should match a/b/c with a/**/b and {nonegate: true}
    ✓ should match a/b/c.md with a/**/b
    ✓ should match a/b/c.md with a/**/b and {dot: true}
    ✓ should match a/b/c.md with a/**/b and {nonegate: true}
    ✓ should match a/b/c/ with a/**/b
    ✓ should match a/b/c/ with a/**/b and {dot: true}
    ✓ should match a/b/c/ with a/**/b and {nonegate: true}
    ✓ should match a/b/c/d with a/**/b
    ✓ should match a/b/c/d with a/**/b and {dot: true}
    ✓ should match a/b/c/d with a/**/b and {nonegate: true}
    ✓ should match a/b/c/d/ with a/**/b
    ✓ should match a/b/c/d/ with a/**/b and {dot: true}
    ✓ should match a/b/c/d/ with a/**/b and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with a/**/b
    ✓ should match a/b/c/d/e/f/z.js with a/**/b and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with a/**/b and {nonegate: true}
    ✓ should match a/b/c/z.js with a/**/b
    ✓ should match a/b/c/z.js with a/**/b and {dot: true}
    ✓ should match a/b/c/z.js with a/**/b and {nonegate: true}
    ✓ should match a/bb with a/**/b
    ✓ should match a/bb with a/**/b and {dot: true}
    ✓ should match a/bb with a/**/b and {nonegate: true}
    ✓ should match a/cb with a/**/b
    ✓ should match a/cb with a/**/b and {dot: true}
    ✓ should match a/cb with a/**/b and {nonegate: true}
    ✓ should match abbbz with a/**/b
    ✓ should match abbbz with a/**/b and {dot: true}
    ✓ should match abbbz with a/**/b and {nonegate: true}
    ✓ should match abc with a/**/b
    ✓ should match abc with a/**/b and {dot: true}
    ✓ should match abc with a/**/b and {nonegate: true}
    ✓ should match abd with a/**/b
    ✓ should match abd with a/**/b and {dot: true}
    ✓ should match abd with a/**/b and {nonegate: true}
    ✓ should match z.js with a/**/b
    ✓ should match z.js with a/**/b and {dot: true}
    ✓ should match z.js with a/**/b and {nonegate: true}
    ✓ should match za.js with a/**/b
    ✓ should match za.js with a/**/b and {dot: true}
    ✓ should match za.js with a/**/b and {nonegate: true}
    ✓ should match !a.js with a/**/b
    ✓ should match !a.js with a/**/b and {dot: true}
    ✓ should match !a.js with a/**/b and {nonegate: true}
    ✓ should match !a/b with a/**/b
    ✓ should match !a/b with a/**/b and {dot: true}
    ✓ should match !a/b with a/**/b and {nonegate: true}
    ✓ should match !a/b/ with a/**/b
    ✓ should match !a/b/ with a/**/b and {dot: true}
    ✓ should match !a/b/ with a/**/b and {nonegate: true}
    ✓ should match !a/b/c with a/**/b
    ✓ should match !a/b/c with a/**/b and {dot: true}
    ✓ should match !a/b/c with a/**/b and {nonegate: true}
    ✓ should match !a/b/c/ with a/**/b
    ✓ should match !a/b/c/ with a/**/b and {dot: true}
    ✓ should match !a/b/c/ with a/**/b and {nonegate: true}
    ✓ should match !a/!b with a/**/b
    ✓ should match !a/!b with a/**/b and {dot: true}
    ✓ should match !a/!b with a/**/b and {nonegate: true}
    ✓ should match !a/!b/c with a/**/b
    ✓ should match !a/!b/c with a/**/b and {dot: true}
    ✓ should match !a/!b/c with a/**/b and {nonegate: true}
    ✓ should match !a/!b/c/d with a/**/b
    ✓ should match !a/!b/c/d with a/**/b and {dot: true}
    ✓ should match !a/!b/c/d with a/**/b and {nonegate: true}
    ✓ should match !a/b/.c.md with a/**/b
    ✓ should match !a/b/.c.md with a/**/b and {dot: true}
    ✓ should match !a/b/.c.md with a/**/b and {nonegate: true}
    ✓ should match /a/ with a/**/b
    ✓ should match /a/ with a/**/b and {dot: true}
    ✓ should match /a/ with a/**/b and {nonegate: true}
    ✓ should match /a/b with a/**/b
    ✓ should match /a/b with a/**/b and {dot: true}
    ✓ should match /a/b with a/**/b and {nonegate: true}
    ✓ should match /a/cb with a/**/b
    ✓ should match /a/cb with a/**/b and {dot: true}
    ✓ should match /a/cb with a/**/b and {nonegate: true}
    ✓ should match /a/bb with a/**/b
    ✓ should match /a/bb with a/**/b and {dot: true}
    ✓ should match /a/bb with a/**/b and {nonegate: true}
    ✓ should match /a/b/c with a/**/b
    ✓ should match /a/b/c with a/**/b and {dot: true}
    ✓ should match /a/b/c with a/**/b and {nonegate: true}
    ✓ should match /a/b/c/ with a/**/b
    ✓ should match /a/b/c/ with a/**/b and {dot: true}
    ✓ should match /a/b/c/ with a/**/b and {nonegate: true}
    ✓ should match /a/b/c/d with a/**/b
    ✓ should match /a/b/c/d with a/**/b and {dot: true}
    ✓ should match /a/b/c/d with a/**/b and {nonegate: true}
    ✓ should match /a/b/c/d/ with a/**/b
    ✓ should match /a/b/c/d/ with a/**/b and {dot: true}
    ✓ should match /a/b/c/d/ with a/**/b and {nonegate: true}
    ✓ should match . with a/**/b
    ✓ should match . with a/**/b and {dot: true}
    ✓ should match . with a/**/b and {nonegate: true}
    ✓ should match ./ with a/**/b
    ✓ should match ./ with a/**/b and {dot: true}
    ✓ should match ./ with a/**/b and {nonegate: true}
    ✓ should match .. with a/**/b
    ✓ should match .. with a/**/b and {dot: true}
    ✓ should match .. with a/**/b and {nonegate: true}
    ✓ should match ../c with a/**/b
    ✓ should match ../c with a/**/b and {dot: true}
    ✓ should match ../c with a/**/b and {nonegate: true}
    ✓ should match ../c with a/**/b
    ✓ should match ../c with a/**/b and {dot: true}
    ✓ should match ../c with a/**/b and {nonegate: true}
    ✓ should match ./../c with a/**/b
    ✓ should match ./../c with a/**/b and {dot: true}
    ✓ should match ./../c with a/**/b and {nonegate: true}
    ✓ should match ./a/../c with a/**/b
    ✓ should match ./a/../c with a/**/b and {dot: true}
    ✓ should match ./a/../c with a/**/b and {nonegate: true}
    ✓ should match /.. with a/**/b
    ✓ should match /.. with a/**/b and {dot: true}
    ✓ should match /.. with a/**/b and {nonegate: true}
    ✓ should match /../c with a/**/b
    ✓ should match /../c with a/**/b and {dot: true}
    ✓ should match /../c with a/**/b and {nonegate: true}
    ✓ should match /../.c with a/**/b
    ✓ should match /../.c with a/**/b and {dot: true}
    ✓ should match /../.c with a/**/b and {nonegate: true}
    ✓ should match /../.c/ with a/**/b
    ✓ should match /../.c/ with a/**/b and {dot: true}
    ✓ should match /../.c/ with a/**/b and {nonegate: true}
    ✓ should match /a/../c with a/**/b
    ✓ should match /a/../c with a/**/b and {dot: true}
    ✓ should match /a/../c with a/**/b and {nonegate: true}
    ✓ should match a/../c with a/**/b
    ✓ should match a/../c with a/**/b and {dot: true}
    ✓ should match a/../c with a/**/b and {nonegate: true}
    ✓ should match ../.b/.c with a/**/b
    ✓ should match ../.b/.c with a/**/b and {dot: true}
    ✓ should match ../.b/.c with a/**/b and {nonegate: true}
    ✓ should match ../b/.c with a/**/b
    ✓ should match ../b/.c with a/**/b and {dot: true}
    ✓ should match ../b/.c with a/**/b and {nonegate: true}
    ✓ should match ./.b/.c with a/**/b
    ✓ should match ./.b/.c with a/**/b and {dot: true}
    ✓ should match ./.b/.c with a/**/b and {nonegate: true}
    ✓ should match ./b/.c with a/**/b
    ✓ should match ./b/.c with a/**/b and {dot: true}
    ✓ should match ./b/.c with a/**/b and {nonegate: true}
    ✓ should match .b with a/**/b
    ✓ should match .b with a/**/b and {dot: true}
    ✓ should match .b with a/**/b and {nonegate: true}
    ✓ should match .b.c with a/**/b
    ✓ should match .b.c with a/**/b and {dot: true}
    ✓ should match .b.c with a/**/b and {nonegate: true}
    ✓ should match .b.c/ with a/**/b
    ✓ should match .b.c/ with a/**/b and {dot: true}
    ✓ should match .b.c/ with a/**/b and {nonegate: true}
    ✓ should match .b/ with a/**/b
    ✓ should match .b/ with a/**/b and {dot: true}
    ✓ should match .b/ with a/**/b and {nonegate: true}
    ✓ should match .b/.c with a/**/b
    ✓ should match .b/.c with a/**/b and {dot: true}
    ✓ should match .b/.c with a/**/b and {nonegate: true}
    ✓ should match .b/c with a/**/b
    ✓ should match .b/c with a/**/b and {dot: true}
    ✓ should match .b/c with a/**/b and {nonegate: true}
    ✓ should match b/.c with a/**/b
    ✓ should match b/.c with a/**/b and {dot: true}
    ✓ should match b/.c with a/**/b and {nonegate: true}
    ✓ should match b/.c/ with a/**/b
    ✓ should match b/.c/ with a/**/b and {dot: true}
    ✓ should match b/.c/ with a/**/b and {nonegate: true}
    ✓ should match a/+b/c with a/**/b
    ✓ should match a/+b/c with a/**/b and {dot: true}
    ✓ should match a/+b/c with a/**/b and {nonegate: true}
    ✓ should match +a/+b/c with a/**/b
    ✓ should match +a/+b/c with a/**/b and {dot: true}
    ✓ should match +a/+b/c with a/**/b and {nonegate: true}
    ✓ should match a (foo) with a/**/b
    ✓ should match a (foo) with a/**/b and {dot: true}
    ✓ should match a (foo) with a/**/b and {nonegate: true}
    ✓ should match a (foo)/(bar) with a/**/b
    ✓ should match a (foo)/(bar) with a/**/b and {dot: true}
    ✓ should match a (foo)/(bar) with a/**/b and {nonegate: true}
    ✓ should match a/b/c (1) with a/**/b
    ✓ should match a/b/c (1) with a/**/b and {dot: true}
    ✓ should match a/b/c (1) with a/**/b and {nonegate: true}
    ✓ should match a/b (2)/c (1) with a/**/b
    ✓ should match a/b (2)/c (1) with a/**/b and {dot: true}
    ✓ should match a/b (2)/c (1) with a/**/b and {nonegate: true}
    ✓ should match a/b/c [def] with a/**/b
    ✓ should match a/b/c [def] with a/**/b and {dot: true}
    ✓ should match a/b/c [def] with a/**/b and {nonegate: true}
    ✓ should match a with a/**b
    ✓ should match a with a/**b and {dot: true}
    ✓ should match a with a/**b and {nonegate: true}
    ✓ should match a.md with a/**b
    ✓ should match a.md with a/**b and {dot: true}
    ✓ should match a.md with a/**b and {nonegate: true}
    ✓ should match a.js with a/**b
    ✓ should match a.js with a/**b and {dot: true}
    ✓ should match a.js with a/**b and {nonegate: true}
    ✓ should match a/ with a/**b
    ✓ should match a/ with a/**b and {dot: true}
    ✓ should match a/ with a/**b and {nonegate: true}
    ✓ should match a/b with a/**b
    ✓ should match a/b with a/**b and {dot: true}
    ✓ should match a/b with a/**b and {nonegate: true}
    ✓ should match a/b/.c.md with a/**b
    ✓ should match a/b/.c.md with a/**b and {dot: true}
    ✓ should match a/b/.c.md with a/**b and {nonegate: true}
    ✓ should match a/b/c with a/**b
    ✓ should match a/b/c with a/**b and {dot: true}
    ✓ should match a/b/c with a/**b and {nonegate: true}
    ✓ should match a/b/c.md with a/**b
    ✓ should match a/b/c.md with a/**b and {dot: true}
    ✓ should match a/b/c.md with a/**b and {nonegate: true}
    ✓ should match a/b/c/ with a/**b
    ✓ should match a/b/c/ with a/**b and {dot: true}
    ✓ should match a/b/c/ with a/**b and {nonegate: true}
    ✓ should match a/b/c/d with a/**b
    ✓ should match a/b/c/d with a/**b and {dot: true}
    ✓ should match a/b/c/d with a/**b and {nonegate: true}
    ✓ should match a/b/c/d/ with a/**b
    ✓ should match a/b/c/d/ with a/**b and {dot: true}
    ✓ should match a/b/c/d/ with a/**b and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with a/**b
    ✓ should match a/b/c/d/e/f/z.js with a/**b and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with a/**b and {nonegate: true}
    ✓ should match a/b/c/z.js with a/**b
    ✓ should match a/b/c/z.js with a/**b and {dot: true}
    ✓ should match a/b/c/z.js with a/**b and {nonegate: true}
    ✓ should match a/bb with a/**b
    ✓ should match a/bb with a/**b and {dot: true}
    ✓ should match a/bb with a/**b and {nonegate: true}
    ✓ should match a/cb with a/**b
    ✓ should match a/cb with a/**b and {dot: true}
    ✓ should match a/cb with a/**b and {nonegate: true}
    ✓ should match abbbz with a/**b
    ✓ should match abbbz with a/**b and {dot: true}
    ✓ should match abbbz with a/**b and {nonegate: true}
    ✓ should match abc with a/**b
    ✓ should match abc with a/**b and {dot: true}
    ✓ should match abc with a/**b and {nonegate: true}
    ✓ should match abd with a/**b
    ✓ should match abd with a/**b and {dot: true}
    ✓ should match abd with a/**b and {nonegate: true}
    ✓ should match z.js with a/**b
    ✓ should match z.js with a/**b and {dot: true}
    ✓ should match z.js with a/**b and {nonegate: true}
    ✓ should match za.js with a/**b
    ✓ should match za.js with a/**b and {dot: true}
    ✓ should match za.js with a/**b and {nonegate: true}
    ✓ should match !a.js with a/**b
    ✓ should match !a.js with a/**b and {dot: true}
    ✓ should match !a.js with a/**b and {nonegate: true}
    ✓ should match !a/b with a/**b
    ✓ should match !a/b with a/**b and {dot: true}
    ✓ should match !a/b with a/**b and {nonegate: true}
    ✓ should match !a/b/ with a/**b
    ✓ should match !a/b/ with a/**b and {dot: true}
    ✓ should match !a/b/ with a/**b and {nonegate: true}
    ✓ should match !a/b/c with a/**b
    ✓ should match !a/b/c with a/**b and {dot: true}
    ✓ should match !a/b/c with a/**b and {nonegate: true}
    ✓ should match !a/b/c/ with a/**b
    ✓ should match !a/b/c/ with a/**b and {dot: true}
    ✓ should match !a/b/c/ with a/**b and {nonegate: true}
    ✓ should match !a/!b with a/**b
    ✓ should match !a/!b with a/**b and {dot: true}
    ✓ should match !a/!b with a/**b and {nonegate: true}
    ✓ should match !a/!b/c with a/**b
    ✓ should match !a/!b/c with a/**b and {dot: true}
    ✓ should match !a/!b/c with a/**b and {nonegate: true}
    ✓ should match !a/!b/c/d with a/**b
    ✓ should match !a/!b/c/d with a/**b and {dot: true}
    ✓ should match !a/!b/c/d with a/**b and {nonegate: true}
    ✓ should match !a/b/.c.md with a/**b
    ✓ should match !a/b/.c.md with a/**b and {dot: true}
    ✓ should match !a/b/.c.md with a/**b and {nonegate: true}
    ✓ should match /a/ with a/**b
    ✓ should match /a/ with a/**b and {dot: true}
    ✓ should match /a/ with a/**b and {nonegate: true}
    ✓ should match /a/b with a/**b
    ✓ should match /a/b with a/**b and {dot: true}
    ✓ should match /a/b with a/**b and {nonegate: true}
    ✓ should match /a/cb with a/**b
    ✓ should match /a/cb with a/**b and {dot: true}
    ✓ should match /a/cb with a/**b and {nonegate: true}
    ✓ should match /a/bb with a/**b
    ✓ should match /a/bb with a/**b and {dot: true}
    ✓ should match /a/bb with a/**b and {nonegate: true}
    ✓ should match /a/b/c with a/**b
    ✓ should match /a/b/c with a/**b and {dot: true}
    ✓ should match /a/b/c with a/**b and {nonegate: true}
    ✓ should match /a/b/c/ with a/**b
    ✓ should match /a/b/c/ with a/**b and {dot: true}
    ✓ should match /a/b/c/ with a/**b and {nonegate: true}
    ✓ should match /a/b/c/d with a/**b
    ✓ should match /a/b/c/d with a/**b and {dot: true}
    ✓ should match /a/b/c/d with a/**b and {nonegate: true}
    ✓ should match /a/b/c/d/ with a/**b
    ✓ should match /a/b/c/d/ with a/**b and {dot: true}
    ✓ should match /a/b/c/d/ with a/**b and {nonegate: true}
    ✓ should match . with a/**b
    ✓ should match . with a/**b and {dot: true}
    ✓ should match . with a/**b and {nonegate: true}
    ✓ should match ./ with a/**b
    ✓ should match ./ with a/**b and {dot: true}
    ✓ should match ./ with a/**b and {nonegate: true}
    ✓ should match .. with a/**b
    ✓ should match .. with a/**b and {dot: true}
    ✓ should match .. with a/**b and {nonegate: true}
    ✓ should match ../c with a/**b
    ✓ should match ../c with a/**b and {dot: true}
    ✓ should match ../c with a/**b and {nonegate: true}
    ✓ should match ../c with a/**b
    ✓ should match ../c with a/**b and {dot: true}
    ✓ should match ../c with a/**b and {nonegate: true}
    ✓ should match ./../c with a/**b
    ✓ should match ./../c with a/**b and {dot: true}
    ✓ should match ./../c with a/**b and {nonegate: true}
    ✓ should match ./a/../c with a/**b
    ✓ should match ./a/../c with a/**b and {dot: true}
    ✓ should match ./a/../c with a/**b and {nonegate: true}
    ✓ should match /.. with a/**b
    ✓ should match /.. with a/**b and {dot: true}
    ✓ should match /.. with a/**b and {nonegate: true}
    ✓ should match /../c with a/**b
    ✓ should match /../c with a/**b and {dot: true}
    ✓ should match /../c with a/**b and {nonegate: true}
    ✓ should match /../.c with a/**b
    ✓ should match /../.c with a/**b and {dot: true}
    ✓ should match /../.c with a/**b and {nonegate: true}
    ✓ should match /../.c/ with a/**b
    ✓ should match /../.c/ with a/**b and {dot: true}
    ✓ should match /../.c/ with a/**b and {nonegate: true}
    ✓ should match /a/../c with a/**b
    ✓ should match /a/../c with a/**b and {dot: true}
    ✓ should match /a/../c with a/**b and {nonegate: true}
    ✓ should match a/../c with a/**b
    ✓ should match a/../c with a/**b and {dot: true}
    ✓ should match a/../c with a/**b and {nonegate: true}
    ✓ should match ../.b/.c with a/**b
    ✓ should match ../.b/.c with a/**b and {dot: true}
    ✓ should match ../.b/.c with a/**b and {nonegate: true}
    ✓ should match ../b/.c with a/**b
    ✓ should match ../b/.c with a/**b and {dot: true}
    ✓ should match ../b/.c with a/**b and {nonegate: true}
    ✓ should match ./.b/.c with a/**b
    ✓ should match ./.b/.c with a/**b and {dot: true}
    ✓ should match ./.b/.c with a/**b and {nonegate: true}
    ✓ should match ./b/.c with a/**b
    ✓ should match ./b/.c with a/**b and {dot: true}
    ✓ should match ./b/.c with a/**b and {nonegate: true}
    ✓ should match .b with a/**b
    ✓ should match .b with a/**b and {dot: true}
    ✓ should match .b with a/**b and {nonegate: true}
    ✓ should match .b.c with a/**b
    ✓ should match .b.c with a/**b and {dot: true}
    ✓ should match .b.c with a/**b and {nonegate: true}
    ✓ should match .b.c/ with a/**b
    ✓ should match .b.c/ with a/**b and {dot: true}
    ✓ should match .b.c/ with a/**b and {nonegate: true}
    ✓ should match .b/ with a/**b
    ✓ should match .b/ with a/**b and {dot: true}
    ✓ should match .b/ with a/**b and {nonegate: true}
    ✓ should match .b/.c with a/**b
    ✓ should match .b/.c with a/**b and {dot: true}
    ✓ should match .b/.c with a/**b and {nonegate: true}
    ✓ should match .b/c with a/**b
    ✓ should match .b/c with a/**b and {dot: true}
    ✓ should match .b/c with a/**b and {nonegate: true}
    ✓ should match b/.c with a/**b
    ✓ should match b/.c with a/**b and {dot: true}
    ✓ should match b/.c with a/**b and {nonegate: true}
    ✓ should match b/.c/ with a/**b
    ✓ should match b/.c/ with a/**b and {dot: true}
    ✓ should match b/.c/ with a/**b and {nonegate: true}
    ✓ should match a/+b/c with a/**b
    ✓ should match a/+b/c with a/**b and {dot: true}
    ✓ should match a/+b/c with a/**b and {nonegate: true}
    ✓ should match +a/+b/c with a/**b
    ✓ should match +a/+b/c with a/**b and {dot: true}
    ✓ should match +a/+b/c with a/**b and {nonegate: true}
    ✓ should match a (foo) with a/**b
    ✓ should match a (foo) with a/**b and {dot: true}
    ✓ should match a (foo) with a/**b and {nonegate: true}
    ✓ should match a (foo)/(bar) with a/**b
    ✓ should match a (foo)/(bar) with a/**b and {dot: true}
    ✓ should match a (foo)/(bar) with a/**b and {nonegate: true}
    ✓ should match a/b/c (1) with a/**b
    ✓ should match a/b/c (1) with a/**b and {dot: true}
    ✓ should match a/b/c (1) with a/**b and {nonegate: true}
    ✓ should match a/b (2)/c (1) with a/**b
    ✓ should match a/b (2)/c (1) with a/**b and {dot: true}
    ✓ should match a/b (2)/c (1) with a/**b and {nonegate: true}
    ✓ should match a/b/c [def] with a/**b
    ✓ should match a/b/c [def] with a/**b and {dot: true}
    ✓ should match a/b/c [def] with a/**b and {nonegate: true}
    ✓ should match a with a/*/
    ✓ should match a with a/*/ and {dot: true}
    ✓ should match a with a/*/ and {nonegate: true}
    ✓ should match a.md with a/*/
    ✓ should match a.md with a/*/ and {dot: true}
    ✓ should match a.md with a/*/ and {nonegate: true}
    ✓ should match a.js with a/*/
    ✓ should match a.js with a/*/ and {dot: true}
    ✓ should match a.js with a/*/ and {nonegate: true}
    ✓ should match a/ with a/*/
    ✓ should match a/ with a/*/ and {dot: true}
    ✓ should match a/ with a/*/ and {nonegate: true}
    ✓ should match a/b with a/*/
    ✓ should match a/b with a/*/ and {dot: true}
    ✓ should match a/b with a/*/ and {nonegate: true}
    ✓ should match a/b/.c.md with a/*/
    ✓ should match a/b/.c.md with a/*/ and {dot: true}
    ✓ should match a/b/.c.md with a/*/ and {nonegate: true}
    ✓ should match a/b/c with a/*/
    ✓ should match a/b/c with a/*/ and {dot: true}
    ✓ should match a/b/c with a/*/ and {nonegate: true}
    ✓ should match a/b/c.md with a/*/
    ✓ should match a/b/c.md with a/*/ and {dot: true}
    ✓ should match a/b/c.md with a/*/ and {nonegate: true}
    ✓ should match a/b/c/ with a/*/
    ✓ should match a/b/c/ with a/*/ and {dot: true}
    ✓ should match a/b/c/ with a/*/ and {nonegate: true}
    ✓ should match a/b/c/d with a/*/
    ✓ should match a/b/c/d with a/*/ and {dot: true}
    ✓ should match a/b/c/d with a/*/ and {nonegate: true}
    ✓ should match a/b/c/d/ with a/*/
    ✓ should match a/b/c/d/ with a/*/ and {dot: true}
    ✓ should match a/b/c/d/ with a/*/ and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with a/*/
    ✓ should match a/b/c/d/e/f/z.js with a/*/ and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with a/*/ and {nonegate: true}
    ✓ should match a/b/c/z.js with a/*/
    ✓ should match a/b/c/z.js with a/*/ and {dot: true}
    ✓ should match a/b/c/z.js with a/*/ and {nonegate: true}
    ✓ should match a/bb with a/*/
    ✓ should match a/bb with a/*/ and {dot: true}
    ✓ should match a/bb with a/*/ and {nonegate: true}
    ✓ should match a/cb with a/*/
    ✓ should match a/cb with a/*/ and {dot: true}
    ✓ should match a/cb with a/*/ and {nonegate: true}
    ✓ should match abbbz with a/*/
    ✓ should match abbbz with a/*/ and {dot: true}
    ✓ should match abbbz with a/*/ and {nonegate: true}
    ✓ should match abc with a/*/
    ✓ should match abc with a/*/ and {dot: true}
    ✓ should match abc with a/*/ and {nonegate: true}
    ✓ should match abd with a/*/
    ✓ should match abd with a/*/ and {dot: true}
    ✓ should match abd with a/*/ and {nonegate: true}
    ✓ should match z.js with a/*/
    ✓ should match z.js with a/*/ and {dot: true}
    ✓ should match z.js with a/*/ and {nonegate: true}
    ✓ should match za.js with a/*/
    ✓ should match za.js with a/*/ and {dot: true}
    ✓ should match za.js with a/*/ and {nonegate: true}
    ✓ should match !a.js with a/*/
    ✓ should match !a.js with a/*/ and {dot: true}
    ✓ should match !a.js with a/*/ and {nonegate: true}
    ✓ should match !a/b with a/*/
    ✓ should match !a/b with a/*/ and {dot: true}
    ✓ should match !a/b with a/*/ and {nonegate: true}
    ✓ should match !a/b/ with a/*/
    ✓ should match !a/b/ with a/*/ and {dot: true}
    ✓ should match !a/b/ with a/*/ and {nonegate: true}
    ✓ should match !a/b/c with a/*/
    ✓ should match !a/b/c with a/*/ and {dot: true}
    ✓ should match !a/b/c with a/*/ and {nonegate: true}
    ✓ should match !a/b/c/ with a/*/
    ✓ should match !a/b/c/ with a/*/ and {dot: true}
    ✓ should match !a/b/c/ with a/*/ and {nonegate: true}
    ✓ should match !a/!b with a/*/
    ✓ should match !a/!b with a/*/ and {dot: true}
    ✓ should match !a/!b with a/*/ and {nonegate: true}
    ✓ should match !a/!b/c with a/*/
    ✓ should match !a/!b/c with a/*/ and {dot: true}
    ✓ should match !a/!b/c with a/*/ and {nonegate: true}
    ✓ should match !a/!b/c/d with a/*/
    ✓ should match !a/!b/c/d with a/*/ and {dot: true}
    ✓ should match !a/!b/c/d with a/*/ and {nonegate: true}
    ✓ should match !a/b/.c.md with a/*/
    ✓ should match !a/b/.c.md with a/*/ and {dot: true}
    ✓ should match !a/b/.c.md with a/*/ and {nonegate: true}
    ✓ should match /a/ with a/*/
    ✓ should match /a/ with a/*/ and {dot: true}
    ✓ should match /a/ with a/*/ and {nonegate: true}
    ✓ should match /a/b with a/*/
    ✓ should match /a/b with a/*/ and {dot: true}
    ✓ should match /a/b with a/*/ and {nonegate: true}
    ✓ should match /a/cb with a/*/
    ✓ should match /a/cb with a/*/ and {dot: true}
    ✓ should match /a/cb with a/*/ and {nonegate: true}
    ✓ should match /a/bb with a/*/
    ✓ should match /a/bb with a/*/ and {dot: true}
    ✓ should match /a/bb with a/*/ and {nonegate: true}
    ✓ should match /a/b/c with a/*/
    ✓ should match /a/b/c with a/*/ and {dot: true}
    ✓ should match /a/b/c with a/*/ and {nonegate: true}
    ✓ should match /a/b/c/ with a/*/
    ✓ should match /a/b/c/ with a/*/ and {dot: true}
    ✓ should match /a/b/c/ with a/*/ and {nonegate: true}
    ✓ should match /a/b/c/d with a/*/
    ✓ should match /a/b/c/d with a/*/ and {dot: true}
    ✓ should match /a/b/c/d with a/*/ and {nonegate: true}
    ✓ should match /a/b/c/d/ with a/*/
    ✓ should match /a/b/c/d/ with a/*/ and {dot: true}
    ✓ should match /a/b/c/d/ with a/*/ and {nonegate: true}
    ✓ should match . with a/*/
    ✓ should match . with a/*/ and {dot: true}
    ✓ should match . with a/*/ and {nonegate: true}
    ✓ should match ./ with a/*/
    ✓ should match ./ with a/*/ and {dot: true}
    ✓ should match ./ with a/*/ and {nonegate: true}
    ✓ should match .. with a/*/
    ✓ should match .. with a/*/ and {dot: true}
    ✓ should match .. with a/*/ and {nonegate: true}
    ✓ should match ../c with a/*/
    ✓ should match ../c with a/*/ and {dot: true}
    ✓ should match ../c with a/*/ and {nonegate: true}
    ✓ should match ../c with a/*/
    ✓ should match ../c with a/*/ and {dot: true}
    ✓ should match ../c with a/*/ and {nonegate: true}
    ✓ should match ./../c with a/*/
    ✓ should match ./../c with a/*/ and {dot: true}
    ✓ should match ./../c with a/*/ and {nonegate: true}
    ✓ should match ./a/../c with a/*/
    ✓ should match ./a/../c with a/*/ and {dot: true}
    ✓ should match ./a/../c with a/*/ and {nonegate: true}
    ✓ should match /.. with a/*/
    ✓ should match /.. with a/*/ and {dot: true}
    ✓ should match /.. with a/*/ and {nonegate: true}
    ✓ should match /../c with a/*/
    ✓ should match /../c with a/*/ and {dot: true}
    ✓ should match /../c with a/*/ and {nonegate: true}
    ✓ should match /../.c with a/*/
    ✓ should match /../.c with a/*/ and {dot: true}
    ✓ should match /../.c with a/*/ and {nonegate: true}
    ✓ should match /../.c/ with a/*/
    ✓ should match /../.c/ with a/*/ and {dot: true}
    ✓ should match /../.c/ with a/*/ and {nonegate: true}
    ✓ should match /a/../c with a/*/
    ✓ should match /a/../c with a/*/ and {dot: true}
    ✓ should match /a/../c with a/*/ and {nonegate: true}
    ✓ should match a/../c with a/*/
    ✓ should match a/../c with a/*/ and {dot: true}
    ✓ should match a/../c with a/*/ and {nonegate: true}
    ✓ should match ../.b/.c with a/*/
    ✓ should match ../.b/.c with a/*/ and {dot: true}
    ✓ should match ../.b/.c with a/*/ and {nonegate: true}
    ✓ should match ../b/.c with a/*/
    ✓ should match ../b/.c with a/*/ and {dot: true}
    ✓ should match ../b/.c with a/*/ and {nonegate: true}
    ✓ should match ./.b/.c with a/*/
    ✓ should match ./.b/.c with a/*/ and {dot: true}
    ✓ should match ./.b/.c with a/*/ and {nonegate: true}
    ✓ should match ./b/.c with a/*/
    ✓ should match ./b/.c with a/*/ and {dot: true}
    ✓ should match ./b/.c with a/*/ and {nonegate: true}
    ✓ should match .b with a/*/
    ✓ should match .b with a/*/ and {dot: true}
    ✓ should match .b with a/*/ and {nonegate: true}
    ✓ should match .b.c with a/*/
    ✓ should match .b.c with a/*/ and {dot: true}
    ✓ should match .b.c with a/*/ and {nonegate: true}
    ✓ should match .b.c/ with a/*/
    ✓ should match .b.c/ with a/*/ and {dot: true}
    ✓ should match .b.c/ with a/*/ and {nonegate: true}
    ✓ should match .b/ with a/*/
    ✓ should match .b/ with a/*/ and {dot: true}
    ✓ should match .b/ with a/*/ and {nonegate: true}
    ✓ should match .b/.c with a/*/
    ✓ should match .b/.c with a/*/ and {dot: true}
    ✓ should match .b/.c with a/*/ and {nonegate: true}
    ✓ should match .b/c with a/*/
    ✓ should match .b/c with a/*/ and {dot: true}
    ✓ should match .b/c with a/*/ and {nonegate: true}
    ✓ should match b/.c with a/*/
    ✓ should match b/.c with a/*/ and {dot: true}
    ✓ should match b/.c with a/*/ and {nonegate: true}
    ✓ should match b/.c/ with a/*/
    ✓ should match b/.c/ with a/*/ and {dot: true}
    ✓ should match b/.c/ with a/*/ and {nonegate: true}
    ✓ should match a/+b/c with a/*/
    ✓ should match a/+b/c with a/*/ and {dot: true}
    ✓ should match a/+b/c with a/*/ and {nonegate: true}
    ✓ should match +a/+b/c with a/*/
    ✓ should match +a/+b/c with a/*/ and {dot: true}
    ✓ should match +a/+b/c with a/*/ and {nonegate: true}
    ✓ should match a (foo) with a/*/
    ✓ should match a (foo) with a/*/ and {dot: true}
    ✓ should match a (foo) with a/*/ and {nonegate: true}
    ✓ should match a (foo)/(bar) with a/*/
    ✓ should match a (foo)/(bar) with a/*/ and {dot: true}
    ✓ should match a (foo)/(bar) with a/*/ and {nonegate: true}
    ✓ should match a/b/c (1) with a/*/
    ✓ should match a/b/c (1) with a/*/ and {dot: true}
    ✓ should match a/b/c (1) with a/*/ and {nonegate: true}
    ✓ should match a/b (2)/c (1) with a/*/
    ✓ should match a/b (2)/c (1) with a/*/ and {dot: true}
    ✓ should match a/b (2)/c (1) with a/*/ and {nonegate: true}
    ✓ should match a/b/c [def] with a/*/
    ✓ should match a/b/c [def] with a/*/ and {dot: true}
    ✓ should match a/b/c [def] with a/*/ and {nonegate: true}
    ✓ should match a with a/*?b
    ✓ should match a with a/*?b and {dot: true}
    ✓ should match a with a/*?b and {nonegate: true}
    ✓ should match a.md with a/*?b
    ✓ should match a.md with a/*?b and {dot: true}
    ✓ should match a.md with a/*?b and {nonegate: true}
    ✓ should match a.js with a/*?b
    ✓ should match a.js with a/*?b and {dot: true}
    ✓ should match a.js with a/*?b and {nonegate: true}
    ✓ should match a/ with a/*?b
    ✓ should match a/ with a/*?b and {dot: true}
    ✓ should match a/ with a/*?b and {nonegate: true}
    ✓ should match a/b with a/*?b
    ✓ should match a/b with a/*?b and {dot: true}
    ✓ should match a/b with a/*?b and {nonegate: true}
    ✓ should match a/b/.c.md with a/*?b
    ✓ should match a/b/.c.md with a/*?b and {dot: true}
    ✓ should match a/b/.c.md with a/*?b and {nonegate: true}
    ✓ should match a/b/c with a/*?b
    ✓ should match a/b/c with a/*?b and {dot: true}
    ✓ should match a/b/c with a/*?b and {nonegate: true}
    ✓ should match a/b/c.md with a/*?b
    ✓ should match a/b/c.md with a/*?b and {dot: true}
    ✓ should match a/b/c.md with a/*?b and {nonegate: true}
    ✓ should match a/b/c/ with a/*?b
    ✓ should match a/b/c/ with a/*?b and {dot: true}
    ✓ should match a/b/c/ with a/*?b and {nonegate: true}
    ✓ should match a/b/c/d with a/*?b
    ✓ should match a/b/c/d with a/*?b and {dot: true}
    ✓ should match a/b/c/d with a/*?b and {nonegate: true}
    ✓ should match a/b/c/d/ with a/*?b
    ✓ should match a/b/c/d/ with a/*?b and {dot: true}
    ✓ should match a/b/c/d/ with a/*?b and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with a/*?b
    ✓ should match a/b/c/d/e/f/z.js with a/*?b and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with a/*?b and {nonegate: true}
    ✓ should match a/b/c/z.js with a/*?b
    ✓ should match a/b/c/z.js with a/*?b and {dot: true}
    ✓ should match a/b/c/z.js with a/*?b and {nonegate: true}
    ✓ should match a/bb with a/*?b
    ✓ should match a/bb with a/*?b and {dot: true}
    ✓ should match a/bb with a/*?b and {nonegate: true}
    ✓ should match a/cb with a/*?b
    ✓ should match a/cb with a/*?b and {dot: true}
    ✓ should match a/cb with a/*?b and {nonegate: true}
    ✓ should match abbbz with a/*?b
    ✓ should match abbbz with a/*?b and {dot: true}
    ✓ should match abbbz with a/*?b and {nonegate: true}
    ✓ should match abc with a/*?b
    ✓ should match abc with a/*?b and {dot: true}
    ✓ should match abc with a/*?b and {nonegate: true}
    ✓ should match abd with a/*?b
    ✓ should match abd with a/*?b and {dot: true}
    ✓ should match abd with a/*?b and {nonegate: true}
    ✓ should match z.js with a/*?b
    ✓ should match z.js with a/*?b and {dot: true}
    ✓ should match z.js with a/*?b and {nonegate: true}
    ✓ should match za.js with a/*?b
    ✓ should match za.js with a/*?b and {dot: true}
    ✓ should match za.js with a/*?b and {nonegate: true}
    ✓ should match !a.js with a/*?b
    ✓ should match !a.js with a/*?b and {dot: true}
    ✓ should match !a.js with a/*?b and {nonegate: true}
    ✓ should match !a/b with a/*?b
    ✓ should match !a/b with a/*?b and {dot: true}
    ✓ should match !a/b with a/*?b and {nonegate: true}
    ✓ should match !a/b/ with a/*?b
    ✓ should match !a/b/ with a/*?b and {dot: true}
    ✓ should match !a/b/ with a/*?b and {nonegate: true}
    ✓ should match !a/b/c with a/*?b
    ✓ should match !a/b/c with a/*?b and {dot: true}
    ✓ should match !a/b/c with a/*?b and {nonegate: true}
    ✓ should match !a/b/c/ with a/*?b
    ✓ should match !a/b/c/ with a/*?b and {dot: true}
    ✓ should match !a/b/c/ with a/*?b and {nonegate: true}
    ✓ should match !a/!b with a/*?b
    ✓ should match !a/!b with a/*?b and {dot: true}
    ✓ should match !a/!b with a/*?b and {nonegate: true}
    ✓ should match !a/!b/c with a/*?b
    ✓ should match !a/!b/c with a/*?b and {dot: true}
    ✓ should match !a/!b/c with a/*?b and {nonegate: true}
    ✓ should match !a/!b/c/d with a/*?b
    ✓ should match !a/!b/c/d with a/*?b and {dot: true}
    ✓ should match !a/!b/c/d with a/*?b and {nonegate: true}
    ✓ should match !a/b/.c.md with a/*?b
    ✓ should match !a/b/.c.md with a/*?b and {dot: true}
    ✓ should match !a/b/.c.md with a/*?b and {nonegate: true}
    ✓ should match /a/ with a/*?b
    ✓ should match /a/ with a/*?b and {dot: true}
    ✓ should match /a/ with a/*?b and {nonegate: true}
    ✓ should match /a/b with a/*?b
    ✓ should match /a/b with a/*?b and {dot: true}
    ✓ should match /a/b with a/*?b and {nonegate: true}
    ✓ should match /a/cb with a/*?b
    ✓ should match /a/cb with a/*?b and {dot: true}
    ✓ should match /a/cb with a/*?b and {nonegate: true}
    ✓ should match /a/bb with a/*?b
    ✓ should match /a/bb with a/*?b and {dot: true}
    ✓ should match /a/bb with a/*?b and {nonegate: true}
    ✓ should match /a/b/c with a/*?b
    ✓ should match /a/b/c with a/*?b and {dot: true}
    ✓ should match /a/b/c with a/*?b and {nonegate: true}
    ✓ should match /a/b/c/ with a/*?b
    ✓ should match /a/b/c/ with a/*?b and {dot: true}
    ✓ should match /a/b/c/ with a/*?b and {nonegate: true}
    ✓ should match /a/b/c/d with a/*?b
    ✓ should match /a/b/c/d with a/*?b and {dot: true}
    ✓ should match /a/b/c/d with a/*?b and {nonegate: true}
    ✓ should match /a/b/c/d/ with a/*?b
    ✓ should match /a/b/c/d/ with a/*?b and {dot: true}
    ✓ should match /a/b/c/d/ with a/*?b and {nonegate: true}
    ✓ should match . with a/*?b
    ✓ should match . with a/*?b and {dot: true}
    ✓ should match . with a/*?b and {nonegate: true}
    ✓ should match ./ with a/*?b
    ✓ should match ./ with a/*?b and {dot: true}
    ✓ should match ./ with a/*?b and {nonegate: true}
    ✓ should match .. with a/*?b
    ✓ should match .. with a/*?b and {dot: true}
    ✓ should match .. with a/*?b and {nonegate: true}
    ✓ should match ../c with a/*?b
    ✓ should match ../c with a/*?b and {dot: true}
    ✓ should match ../c with a/*?b and {nonegate: true}
    ✓ should match ../c with a/*?b
    ✓ should match ../c with a/*?b and {dot: true}
    ✓ should match ../c with a/*?b and {nonegate: true}
    ✓ should match ./../c with a/*?b
    ✓ should match ./../c with a/*?b and {dot: true}
    ✓ should match ./../c with a/*?b and {nonegate: true}
    ✓ should match ./a/../c with a/*?b
    ✓ should match ./a/../c with a/*?b and {dot: true}
    ✓ should match ./a/../c with a/*?b and {nonegate: true}
    ✓ should match /.. with a/*?b
    ✓ should match /.. with a/*?b and {dot: true}
    ✓ should match /.. with a/*?b and {nonegate: true}
    ✓ should match /../c with a/*?b
    ✓ should match /../c with a/*?b and {dot: true}
    ✓ should match /../c with a/*?b and {nonegate: true}
    ✓ should match /../.c with a/*?b
    ✓ should match /../.c with a/*?b and {dot: true}
    ✓ should match /../.c with a/*?b and {nonegate: true}
    ✓ should match /../.c/ with a/*?b
    ✓ should match /../.c/ with a/*?b and {dot: true}
    ✓ should match /../.c/ with a/*?b and {nonegate: true}
    ✓ should match /a/../c with a/*?b
    ✓ should match /a/../c with a/*?b and {dot: true}
    ✓ should match /a/../c with a/*?b and {nonegate: true}
    ✓ should match a/../c with a/*?b
    ✓ should match a/../c with a/*?b and {dot: true}
    ✓ should match a/../c with a/*?b and {nonegate: true}
    ✓ should match ../.b/.c with a/*?b
    ✓ should match ../.b/.c with a/*?b and {dot: true}
    ✓ should match ../.b/.c with a/*?b and {nonegate: true}
    ✓ should match ../b/.c with a/*?b
    ✓ should match ../b/.c with a/*?b and {dot: true}
    ✓ should match ../b/.c with a/*?b and {nonegate: true}
    ✓ should match ./.b/.c with a/*?b
    ✓ should match ./.b/.c with a/*?b and {dot: true}
    ✓ should match ./.b/.c with a/*?b and {nonegate: true}
    ✓ should match ./b/.c with a/*?b
    ✓ should match ./b/.c with a/*?b and {dot: true}
    ✓ should match ./b/.c with a/*?b and {nonegate: true}
    ✓ should match .b with a/*?b
    ✓ should match .b with a/*?b and {dot: true}
    ✓ should match .b with a/*?b and {nonegate: true}
    ✓ should match .b.c with a/*?b
    ✓ should match .b.c with a/*?b and {dot: true}
    ✓ should match .b.c with a/*?b and {nonegate: true}
    ✓ should match .b.c/ with a/*?b
    ✓ should match .b.c/ with a/*?b and {dot: true}
    ✓ should match .b.c/ with a/*?b and {nonegate: true}
    ✓ should match .b/ with a/*?b
    ✓ should match .b/ with a/*?b and {dot: true}
    ✓ should match .b/ with a/*?b and {nonegate: true}
    ✓ should match .b/.c with a/*?b
    ✓ should match .b/.c with a/*?b and {dot: true}
    ✓ should match .b/.c with a/*?b and {nonegate: true}
    ✓ should match .b/c with a/*?b
    ✓ should match .b/c with a/*?b and {dot: true}
    ✓ should match .b/c with a/*?b and {nonegate: true}
    ✓ should match b/.c with a/*?b
    ✓ should match b/.c with a/*?b and {dot: true}
    ✓ should match b/.c with a/*?b and {nonegate: true}
    ✓ should match b/.c/ with a/*?b
    ✓ should match b/.c/ with a/*?b and {dot: true}
    ✓ should match b/.c/ with a/*?b and {nonegate: true}
    ✓ should match a/+b/c with a/*?b
    ✓ should match a/+b/c with a/*?b and {dot: true}
    ✓ should match a/+b/c with a/*?b and {nonegate: true}
    ✓ should match +a/+b/c with a/*?b
    ✓ should match +a/+b/c with a/*?b and {dot: true}
    ✓ should match +a/+b/c with a/*?b and {nonegate: true}
    ✓ should match a (foo) with a/*?b
    ✓ should match a (foo) with a/*?b and {dot: true}
    ✓ should match a (foo) with a/*?b and {nonegate: true}
    ✓ should match a (foo)/(bar) with a/*?b
    ✓ should match a (foo)/(bar) with a/*?b and {dot: true}
    ✓ should match a (foo)/(bar) with a/*?b and {nonegate: true}
    ✓ should match a/b/c (1) with a/*?b
    ✓ should match a/b/c (1) with a/*?b and {dot: true}
    ✓ should match a/b/c (1) with a/*?b and {nonegate: true}
    ✓ should match a/b (2)/c (1) with a/*?b
    ✓ should match a/b (2)/c (1) with a/*?b and {dot: true}
    ✓ should match a/b (2)/c (1) with a/*?b and {nonegate: true}
    ✓ should match a/b/c [def] with a/*?b
    ✓ should match a/b/c [def] with a/*?b and {dot: true}
    ✓ should match a/b/c [def] with a/*?b and {nonegate: true}
    ✓ should match a with a/?
    ✓ should match a with a/? and {dot: true}
    ✓ should match a with a/? and {nonegate: true}
    ✓ should match a.md with a/?
    ✓ should match a.md with a/? and {dot: true}
    ✓ should match a.md with a/? and {nonegate: true}
    ✓ should match a.js with a/?
    ✓ should match a.js with a/? and {dot: true}
    ✓ should match a.js with a/? and {nonegate: true}
    ✓ should match a/ with a/?
    ✓ should match a/ with a/? and {dot: true}
    ✓ should match a/ with a/? and {nonegate: true}
    ✓ should match a/b with a/?
    ✓ should match a/b with a/? and {dot: true}
    ✓ should match a/b with a/? and {nonegate: true}
    ✓ should match a/b/.c.md with a/?
    ✓ should match a/b/.c.md with a/? and {dot: true}
    ✓ should match a/b/.c.md with a/? and {nonegate: true}
    ✓ should match a/b/c with a/?
    ✓ should match a/b/c with a/? and {dot: true}
    ✓ should match a/b/c with a/? and {nonegate: true}
    ✓ should match a/b/c.md with a/?
    ✓ should match a/b/c.md with a/? and {dot: true}
    ✓ should match a/b/c.md with a/? and {nonegate: true}
    ✓ should match a/b/c/ with a/?
    ✓ should match a/b/c/ with a/? and {dot: true}
    ✓ should match a/b/c/ with a/? and {nonegate: true}
    ✓ should match a/b/c/d with a/?
    ✓ should match a/b/c/d with a/? and {dot: true}
    ✓ should match a/b/c/d with a/? and {nonegate: true}
    ✓ should match a/b/c/d/ with a/?
    ✓ should match a/b/c/d/ with a/? and {dot: true}
    ✓ should match a/b/c/d/ with a/? and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with a/?
    ✓ should match a/b/c/d/e/f/z.js with a/? and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with a/? and {nonegate: true}
    ✓ should match a/b/c/z.js with a/?
    ✓ should match a/b/c/z.js with a/? and {dot: true}
    ✓ should match a/b/c/z.js with a/? and {nonegate: true}
    ✓ should match a/bb with a/?
    ✓ should match a/bb with a/? and {dot: true}
    ✓ should match a/bb with a/? and {nonegate: true}
    ✓ should match a/cb with a/?
    ✓ should match a/cb with a/? and {dot: true}
    ✓ should match a/cb with a/? and {nonegate: true}
    ✓ should match abbbz with a/?
    ✓ should match abbbz with a/? and {dot: true}
    ✓ should match abbbz with a/? and {nonegate: true}
    ✓ should match abc with a/?
    ✓ should match abc with a/? and {dot: true}
    ✓ should match abc with a/? and {nonegate: true}
    ✓ should match abd with a/?
    ✓ should match abd with a/? and {dot: true}
    ✓ should match abd with a/? and {nonegate: true}
    ✓ should match z.js with a/?
    ✓ should match z.js with a/? and {dot: true}
    ✓ should match z.js with a/? and {nonegate: true}
    ✓ should match za.js with a/?
    ✓ should match za.js with a/? and {dot: true}
    ✓ should match za.js with a/? and {nonegate: true}
    ✓ should match !a.js with a/?
    ✓ should match !a.js with a/? and {dot: true}
    ✓ should match !a.js with a/? and {nonegate: true}
    ✓ should match !a/b with a/?
    ✓ should match !a/b with a/? and {dot: true}
    ✓ should match !a/b with a/? and {nonegate: true}
    ✓ should match !a/b/ with a/?
    ✓ should match !a/b/ with a/? and {dot: true}
    ✓ should match !a/b/ with a/? and {nonegate: true}
    ✓ should match !a/b/c with a/?
    ✓ should match !a/b/c with a/? and {dot: true}
    ✓ should match !a/b/c with a/? and {nonegate: true}
    ✓ should match !a/b/c/ with a/?
    ✓ should match !a/b/c/ with a/? and {dot: true}
    ✓ should match !a/b/c/ with a/? and {nonegate: true}
    ✓ should match !a/!b with a/?
    ✓ should match !a/!b with a/? and {dot: true}
    ✓ should match !a/!b with a/? and {nonegate: true}
    ✓ should match !a/!b/c with a/?
    ✓ should match !a/!b/c with a/? and {dot: true}
    ✓ should match !a/!b/c with a/? and {nonegate: true}
    ✓ should match !a/!b/c/d with a/?
    ✓ should match !a/!b/c/d with a/? and {dot: true}
    ✓ should match !a/!b/c/d with a/? and {nonegate: true}
    ✓ should match !a/b/.c.md with a/?
    ✓ should match !a/b/.c.md with a/? and {dot: true}
    ✓ should match !a/b/.c.md with a/? and {nonegate: true}
    ✓ should match /a/ with a/?
    ✓ should match /a/ with a/? and {dot: true}
    ✓ should match /a/ with a/? and {nonegate: true}
    ✓ should match /a/b with a/?
    ✓ should match /a/b with a/? and {dot: true}
    ✓ should match /a/b with a/? and {nonegate: true}
    ✓ should match /a/cb with a/?
    ✓ should match /a/cb with a/? and {dot: true}
    ✓ should match /a/cb with a/? and {nonegate: true}
    ✓ should match /a/bb with a/?
    ✓ should match /a/bb with a/? and {dot: true}
    ✓ should match /a/bb with a/? and {nonegate: true}
    ✓ should match /a/b/c with a/?
    ✓ should match /a/b/c with a/? and {dot: true}
    ✓ should match /a/b/c with a/? and {nonegate: true}
    ✓ should match /a/b/c/ with a/?
    ✓ should match /a/b/c/ with a/? and {dot: true}
    ✓ should match /a/b/c/ with a/? and {nonegate: true}
    ✓ should match /a/b/c/d with a/?
    ✓ should match /a/b/c/d with a/? and {dot: true}
    ✓ should match /a/b/c/d with a/? and {nonegate: true}
    ✓ should match /a/b/c/d/ with a/?
    ✓ should match /a/b/c/d/ with a/? and {dot: true}
    ✓ should match /a/b/c/d/ with a/? and {nonegate: true}
    ✓ should match . with a/?
    ✓ should match . with a/? and {dot: true}
    ✓ should match . with a/? and {nonegate: true}
    ✓ should match ./ with a/?
    ✓ should match ./ with a/? and {dot: true}
    ✓ should match ./ with a/? and {nonegate: true}
    ✓ should match .. with a/?
    ✓ should match .. with a/? and {dot: true}
    ✓ should match .. with a/? and {nonegate: true}
    ✓ should match ../c with a/?
    ✓ should match ../c with a/? and {dot: true}
    ✓ should match ../c with a/? and {nonegate: true}
    ✓ should match ../c with a/?
    ✓ should match ../c with a/? and {dot: true}
    ✓ should match ../c with a/? and {nonegate: true}
    ✓ should match ./../c with a/?
    ✓ should match ./../c with a/? and {dot: true}
    ✓ should match ./../c with a/? and {nonegate: true}
    ✓ should match ./a/../c with a/?
    ✓ should match ./a/../c with a/? and {dot: true}
    ✓ should match ./a/../c with a/? and {nonegate: true}
    ✓ should match /.. with a/?
    ✓ should match /.. with a/? and {dot: true}
    ✓ should match /.. with a/? and {nonegate: true}
    ✓ should match /../c with a/?
    ✓ should match /../c with a/? and {dot: true}
    ✓ should match /../c with a/? and {nonegate: true}
    ✓ should match /../.c with a/?
    ✓ should match /../.c with a/? and {dot: true}
    ✓ should match /../.c with a/? and {nonegate: true}
    ✓ should match /../.c/ with a/?
    ✓ should match /../.c/ with a/? and {dot: true}
    ✓ should match /../.c/ with a/? and {nonegate: true}
    ✓ should match /a/../c with a/?
    ✓ should match /a/../c with a/? and {dot: true}
    ✓ should match /a/../c with a/? and {nonegate: true}
    ✓ should match a/../c with a/?
    ✓ should match a/../c with a/? and {dot: true}
    ✓ should match a/../c with a/? and {nonegate: true}
    ✓ should match ../.b/.c with a/?
    ✓ should match ../.b/.c with a/? and {dot: true}
    ✓ should match ../.b/.c with a/? and {nonegate: true}
    ✓ should match ../b/.c with a/?
    ✓ should match ../b/.c with a/? and {dot: true}
    ✓ should match ../b/.c with a/? and {nonegate: true}
    ✓ should match ./.b/.c with a/?
    ✓ should match ./.b/.c with a/? and {dot: true}
    ✓ should match ./.b/.c with a/? and {nonegate: true}
    ✓ should match ./b/.c with a/?
    ✓ should match ./b/.c with a/? and {dot: true}
    ✓ should match ./b/.c with a/? and {nonegate: true}
    ✓ should match .b with a/?
    ✓ should match .b with a/? and {dot: true}
    ✓ should match .b with a/? and {nonegate: true}
    ✓ should match .b.c with a/?
    ✓ should match .b.c with a/? and {dot: true}
    ✓ should match .b.c with a/? and {nonegate: true}
    ✓ should match .b.c/ with a/?
    ✓ should match .b.c/ with a/? and {dot: true}
    ✓ should match .b.c/ with a/? and {nonegate: true}
    ✓ should match .b/ with a/?
    ✓ should match .b/ with a/? and {dot: true}
    ✓ should match .b/ with a/? and {nonegate: true}
    ✓ should match .b/.c with a/?
    ✓ should match .b/.c with a/? and {dot: true}
    ✓ should match .b/.c with a/? and {nonegate: true}
    ✓ should match .b/c with a/?
    ✓ should match .b/c with a/? and {dot: true}
    ✓ should match .b/c with a/? and {nonegate: true}
    ✓ should match b/.c with a/?
    ✓ should match b/.c with a/? and {dot: true}
    ✓ should match b/.c with a/? and {nonegate: true}
    ✓ should match b/.c/ with a/?
    ✓ should match b/.c/ with a/? and {dot: true}
    ✓ should match b/.c/ with a/? and {nonegate: true}
    ✓ should match a/+b/c with a/?
    ✓ should match a/+b/c with a/? and {dot: true}
    ✓ should match a/+b/c with a/? and {nonegate: true}
    ✓ should match +a/+b/c with a/?
    ✓ should match +a/+b/c with a/? and {dot: true}
    ✓ should match +a/+b/c with a/? and {nonegate: true}
    ✓ should match a (foo) with a/?
    ✓ should match a (foo) with a/? and {dot: true}
    ✓ should match a (foo) with a/? and {nonegate: true}
    ✓ should match a (foo)/(bar) with a/?
    ✓ should match a (foo)/(bar) with a/? and {dot: true}
    ✓ should match a (foo)/(bar) with a/? and {nonegate: true}
    ✓ should match a/b/c (1) with a/?
    ✓ should match a/b/c (1) with a/? and {dot: true}
    ✓ should match a/b/c (1) with a/? and {nonegate: true}
    ✓ should match a/b (2)/c (1) with a/?
    ✓ should match a/b (2)/c (1) with a/? and {dot: true}
    ✓ should match a/b (2)/c (1) with a/? and {nonegate: true}
    ✓ should match a/b/c [def] with a/?
    ✓ should match a/b/c [def] with a/? and {dot: true}
    ✓ should match a/b/c [def] with a/? and {nonegate: true}
    ✓ should match a with a/?*b
    ✓ should match a with a/?*b and {dot: true}
    ✓ should match a with a/?*b and {nonegate: true}
    ✓ should match a.md with a/?*b
    ✓ should match a.md with a/?*b and {dot: true}
    ✓ should match a.md with a/?*b and {nonegate: true}
    ✓ should match a.js with a/?*b
    ✓ should match a.js with a/?*b and {dot: true}
    ✓ should match a.js with a/?*b and {nonegate: true}
    ✓ should match a/ with a/?*b
    ✓ should match a/ with a/?*b and {dot: true}
    ✓ should match a/ with a/?*b and {nonegate: true}
    ✓ should match a/b with a/?*b
    ✓ should match a/b with a/?*b and {dot: true}
    ✓ should match a/b with a/?*b and {nonegate: true}
    ✓ should match a/b/.c.md with a/?*b
    ✓ should match a/b/.c.md with a/?*b and {dot: true}
    ✓ should match a/b/.c.md with a/?*b and {nonegate: true}
    ✓ should match a/b/c with a/?*b
    ✓ should match a/b/c with a/?*b and {dot: true}
    ✓ should match a/b/c with a/?*b and {nonegate: true}
    ✓ should match a/b/c.md with a/?*b
    ✓ should match a/b/c.md with a/?*b and {dot: true}
    ✓ should match a/b/c.md with a/?*b and {nonegate: true}
    ✓ should match a/b/c/ with a/?*b
    ✓ should match a/b/c/ with a/?*b and {dot: true}
    ✓ should match a/b/c/ with a/?*b and {nonegate: true}
    ✓ should match a/b/c/d with a/?*b
    ✓ should match a/b/c/d with a/?*b and {dot: true}
    ✓ should match a/b/c/d with a/?*b and {nonegate: true}
    ✓ should match a/b/c/d/ with a/?*b
    ✓ should match a/b/c/d/ with a/?*b and {dot: true}
    ✓ should match a/b/c/d/ with a/?*b and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with a/?*b
    ✓ should match a/b/c/d/e/f/z.js with a/?*b and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with a/?*b and {nonegate: true}
    ✓ should match a/b/c/z.js with a/?*b
    ✓ should match a/b/c/z.js with a/?*b and {dot: true}
    ✓ should match a/b/c/z.js with a/?*b and {nonegate: true}
    ✓ should match a/bb with a/?*b
    ✓ should match a/bb with a/?*b and {dot: true}
    ✓ should match a/bb with a/?*b and {nonegate: true}
    ✓ should match a/cb with a/?*b
    ✓ should match a/cb with a/?*b and {dot: true}
    ✓ should match a/cb with a/?*b and {nonegate: true}
    ✓ should match abbbz with a/?*b
    ✓ should match abbbz with a/?*b and {dot: true}
    ✓ should match abbbz with a/?*b and {nonegate: true}
    ✓ should match abc with a/?*b
    ✓ should match abc with a/?*b and {dot: true}
    ✓ should match abc with a/?*b and {nonegate: true}
    ✓ should match abd with a/?*b
    ✓ should match abd with a/?*b and {dot: true}
    ✓ should match abd with a/?*b and {nonegate: true}
    ✓ should match z.js with a/?*b
    ✓ should match z.js with a/?*b and {dot: true}
    ✓ should match z.js with a/?*b and {nonegate: true}
    ✓ should match za.js with a/?*b
    ✓ should match za.js with a/?*b and {dot: true}
    ✓ should match za.js with a/?*b and {nonegate: true}
    ✓ should match !a.js with a/?*b
    ✓ should match !a.js with a/?*b and {dot: true}
    ✓ should match !a.js with a/?*b and {nonegate: true}
    ✓ should match !a/b with a/?*b
    ✓ should match !a/b with a/?*b and {dot: true}
    ✓ should match !a/b with a/?*b and {nonegate: true}
    ✓ should match !a/b/ with a/?*b
    ✓ should match !a/b/ with a/?*b and {dot: true}
    ✓ should match !a/b/ with a/?*b and {nonegate: true}
    ✓ should match !a/b/c with a/?*b
    ✓ should match !a/b/c with a/?*b and {dot: true}
    ✓ should match !a/b/c with a/?*b and {nonegate: true}
    ✓ should match !a/b/c/ with a/?*b
    ✓ should match !a/b/c/ with a/?*b and {dot: true}
    ✓ should match !a/b/c/ with a/?*b and {nonegate: true}
    ✓ should match !a/!b with a/?*b
    ✓ should match !a/!b with a/?*b and {dot: true}
    ✓ should match !a/!b with a/?*b and {nonegate: true}
    ✓ should match !a/!b/c with a/?*b
    ✓ should match !a/!b/c with a/?*b and {dot: true}
    ✓ should match !a/!b/c with a/?*b and {nonegate: true}
    ✓ should match !a/!b/c/d with a/?*b
    ✓ should match !a/!b/c/d with a/?*b and {dot: true}
    ✓ should match !a/!b/c/d with a/?*b and {nonegate: true}
    ✓ should match !a/b/.c.md with a/?*b
    ✓ should match !a/b/.c.md with a/?*b and {dot: true}
    ✓ should match !a/b/.c.md with a/?*b and {nonegate: true}
    ✓ should match /a/ with a/?*b
    ✓ should match /a/ with a/?*b and {dot: true}
    ✓ should match /a/ with a/?*b and {nonegate: true}
    ✓ should match /a/b with a/?*b
    ✓ should match /a/b with a/?*b and {dot: true}
    ✓ should match /a/b with a/?*b and {nonegate: true}
    ✓ should match /a/cb with a/?*b
    ✓ should match /a/cb with a/?*b and {dot: true}
    ✓ should match /a/cb with a/?*b and {nonegate: true}
    ✓ should match /a/bb with a/?*b
    ✓ should match /a/bb with a/?*b and {dot: true}
    ✓ should match /a/bb with a/?*b and {nonegate: true}
    ✓ should match /a/b/c with a/?*b
    ✓ should match /a/b/c with a/?*b and {dot: true}
    ✓ should match /a/b/c with a/?*b and {nonegate: true}
    ✓ should match /a/b/c/ with a/?*b
    ✓ should match /a/b/c/ with a/?*b and {dot: true}
    ✓ should match /a/b/c/ with a/?*b and {nonegate: true}
    ✓ should match /a/b/c/d with a/?*b
    ✓ should match /a/b/c/d with a/?*b and {dot: true}
    ✓ should match /a/b/c/d with a/?*b and {nonegate: true}
    ✓ should match /a/b/c/d/ with a/?*b
    ✓ should match /a/b/c/d/ with a/?*b and {dot: true}
    ✓ should match /a/b/c/d/ with a/?*b and {nonegate: true}
    ✓ should match . with a/?*b
    ✓ should match . with a/?*b and {dot: true}
    ✓ should match . with a/?*b and {nonegate: true}
    ✓ should match ./ with a/?*b
    ✓ should match ./ with a/?*b and {dot: true}
    ✓ should match ./ with a/?*b and {nonegate: true}
    ✓ should match .. with a/?*b
    ✓ should match .. with a/?*b and {dot: true}
    ✓ should match .. with a/?*b and {nonegate: true}
    ✓ should match ../c with a/?*b
    ✓ should match ../c with a/?*b and {dot: true}
    ✓ should match ../c with a/?*b and {nonegate: true}
    ✓ should match ../c with a/?*b
    ✓ should match ../c with a/?*b and {dot: true}
    ✓ should match ../c with a/?*b and {nonegate: true}
    ✓ should match ./../c with a/?*b
    ✓ should match ./../c with a/?*b and {dot: true}
    ✓ should match ./../c with a/?*b and {nonegate: true}
    ✓ should match ./a/../c with a/?*b
    ✓ should match ./a/../c with a/?*b and {dot: true}
    ✓ should match ./a/../c with a/?*b and {nonegate: true}
    ✓ should match /.. with a/?*b
    ✓ should match /.. with a/?*b and {dot: true}
    ✓ should match /.. with a/?*b and {nonegate: true}
    ✓ should match /../c with a/?*b
    ✓ should match /../c with a/?*b and {dot: true}
    ✓ should match /../c with a/?*b and {nonegate: true}
    ✓ should match /../.c with a/?*b
    ✓ should match /../.c with a/?*b and {dot: true}
    ✓ should match /../.c with a/?*b and {nonegate: true}
    ✓ should match /../.c/ with a/?*b
    ✓ should match /../.c/ with a/?*b and {dot: true}
    ✓ should match /../.c/ with a/?*b and {nonegate: true}
    ✓ should match /a/../c with a/?*b
    ✓ should match /a/../c with a/?*b and {dot: true}
    ✓ should match /a/../c with a/?*b and {nonegate: true}
    ✓ should match a/../c with a/?*b
    ✓ should match a/../c with a/?*b and {dot: true}
    ✓ should match a/../c with a/?*b and {nonegate: true}
    ✓ should match ../.b/.c with a/?*b
    ✓ should match ../.b/.c with a/?*b and {dot: true}
    ✓ should match ../.b/.c with a/?*b and {nonegate: true}
    ✓ should match ../b/.c with a/?*b
    ✓ should match ../b/.c with a/?*b and {dot: true}
    ✓ should match ../b/.c with a/?*b and {nonegate: true}
    ✓ should match ./.b/.c with a/?*b
    ✓ should match ./.b/.c with a/?*b and {dot: true}
    ✓ should match ./.b/.c with a/?*b and {nonegate: true}
    ✓ should match ./b/.c with a/?*b
    ✓ should match ./b/.c with a/?*b and {dot: true}
    ✓ should match ./b/.c with a/?*b and {nonegate: true}
    ✓ should match .b with a/?*b
    ✓ should match .b with a/?*b and {dot: true}
    ✓ should match .b with a/?*b and {nonegate: true}
    ✓ should match .b.c with a/?*b
    ✓ should match .b.c with a/?*b and {dot: true}
    ✓ should match .b.c with a/?*b and {nonegate: true}
    ✓ should match .b.c/ with a/?*b
    ✓ should match .b.c/ with a/?*b and {dot: true}
    ✓ should match .b.c/ with a/?*b and {nonegate: true}
    ✓ should match .b/ with a/?*b
    ✓ should match .b/ with a/?*b and {dot: true}
    ✓ should match .b/ with a/?*b and {nonegate: true}
    ✓ should match .b/.c with a/?*b
    ✓ should match .b/.c with a/?*b and {dot: true}
    ✓ should match .b/.c with a/?*b and {nonegate: true}
    ✓ should match .b/c with a/?*b
    ✓ should match .b/c with a/?*b and {dot: true}
    ✓ should match .b/c with a/?*b and {nonegate: true}
    ✓ should match b/.c with a/?*b
    ✓ should match b/.c with a/?*b and {dot: true}
    ✓ should match b/.c with a/?*b and {nonegate: true}
    ✓ should match b/.c/ with a/?*b
    ✓ should match b/.c/ with a/?*b and {dot: true}
    ✓ should match b/.c/ with a/?*b and {nonegate: true}
    ✓ should match a/+b/c with a/?*b
    ✓ should match a/+b/c with a/?*b and {dot: true}
    ✓ should match a/+b/c with a/?*b and {nonegate: true}
    ✓ should match +a/+b/c with a/?*b
    ✓ should match +a/+b/c with a/?*b and {dot: true}
    ✓ should match +a/+b/c with a/?*b and {nonegate: true}
    ✓ should match a (foo) with a/?*b
    ✓ should match a (foo) with a/?*b and {dot: true}
    ✓ should match a (foo) with a/?*b and {nonegate: true}
    ✓ should match a (foo)/(bar) with a/?*b
    ✓ should match a (foo)/(bar) with a/?*b and {dot: true}
    ✓ should match a (foo)/(bar) with a/?*b and {nonegate: true}
    ✓ should match a/b/c (1) with a/?*b
    ✓ should match a/b/c (1) with a/?*b and {dot: true}
    ✓ should match a/b/c (1) with a/?*b and {nonegate: true}
    ✓ should match a/b (2)/c (1) with a/?*b
    ✓ should match a/b (2)/c (1) with a/?*b and {dot: true}
    ✓ should match a/b (2)/c (1) with a/?*b and {nonegate: true}
    ✓ should match a/b/c [def] with a/?*b
    ✓ should match a/b/c [def] with a/?*b and {dot: true}
    ✓ should match a/b/c [def] with a/?*b and {nonegate: true}
    ✓ should match a with a/??b
    ✓ should match a with a/??b and {dot: true}
    ✓ should match a with a/??b and {nonegate: true}
    ✓ should match a.md with a/??b
    ✓ should match a.md with a/??b and {dot: true}
    ✓ should match a.md with a/??b and {nonegate: true}
    ✓ should match a.js with a/??b
    ✓ should match a.js with a/??b and {dot: true}
    ✓ should match a.js with a/??b and {nonegate: true}
    ✓ should match a/ with a/??b
    ✓ should match a/ with a/??b and {dot: true}
    ✓ should match a/ with a/??b and {nonegate: true}
    ✓ should match a/b with a/??b
    ✓ should match a/b with a/??b and {dot: true}
    ✓ should match a/b with a/??b and {nonegate: true}
    ✓ should match a/b/.c.md with a/??b
    ✓ should match a/b/.c.md with a/??b and {dot: true}
    ✓ should match a/b/.c.md with a/??b and {nonegate: true}
    ✓ should match a/b/c with a/??b
    ✓ should match a/b/c with a/??b and {dot: true}
    ✓ should match a/b/c with a/??b and {nonegate: true}
    ✓ should match a/b/c.md with a/??b
    ✓ should match a/b/c.md with a/??b and {dot: true}
    ✓ should match a/b/c.md with a/??b and {nonegate: true}
    ✓ should match a/b/c/ with a/??b
    ✓ should match a/b/c/ with a/??b and {dot: true}
    ✓ should match a/b/c/ with a/??b and {nonegate: true}
    ✓ should match a/b/c/d with a/??b
    ✓ should match a/b/c/d with a/??b and {dot: true}
    ✓ should match a/b/c/d with a/??b and {nonegate: true}
    ✓ should match a/b/c/d/ with a/??b
    ✓ should match a/b/c/d/ with a/??b and {dot: true}
    ✓ should match a/b/c/d/ with a/??b and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with a/??b
    ✓ should match a/b/c/d/e/f/z.js with a/??b and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with a/??b and {nonegate: true}
    ✓ should match a/b/c/z.js with a/??b
    ✓ should match a/b/c/z.js with a/??b and {dot: true}
    ✓ should match a/b/c/z.js with a/??b and {nonegate: true}
    ✓ should match a/bb with a/??b
    ✓ should match a/bb with a/??b and {dot: true}
    ✓ should match a/bb with a/??b and {nonegate: true}
    ✓ should match a/cb with a/??b
    ✓ should match a/cb with a/??b and {dot: true}
    ✓ should match a/cb with a/??b and {nonegate: true}
    ✓ should match abbbz with a/??b
    ✓ should match abbbz with a/??b and {dot: true}
    ✓ should match abbbz with a/??b and {nonegate: true}
    ✓ should match abc with a/??b
    ✓ should match abc with a/??b and {dot: true}
    ✓ should match abc with a/??b and {nonegate: true}
    ✓ should match abd with a/??b
    ✓ should match abd with a/??b and {dot: true}
    ✓ should match abd with a/??b and {nonegate: true}
    ✓ should match z.js with a/??b
    ✓ should match z.js with a/??b and {dot: true}
    ✓ should match z.js with a/??b and {nonegate: true}
    ✓ should match za.js with a/??b
    ✓ should match za.js with a/??b and {dot: true}
    ✓ should match za.js with a/??b and {nonegate: true}
    ✓ should match !a.js with a/??b
    ✓ should match !a.js with a/??b and {dot: true}
    ✓ should match !a.js with a/??b and {nonegate: true}
    ✓ should match !a/b with a/??b
    ✓ should match !a/b with a/??b and {dot: true}
    ✓ should match !a/b with a/??b and {nonegate: true}
    ✓ should match !a/b/ with a/??b
    ✓ should match !a/b/ with a/??b and {dot: true}
    ✓ should match !a/b/ with a/??b and {nonegate: true}
    ✓ should match !a/b/c with a/??b
    ✓ should match !a/b/c with a/??b and {dot: true}
    ✓ should match !a/b/c with a/??b and {nonegate: true}
    ✓ should match !a/b/c/ with a/??b
    ✓ should match !a/b/c/ with a/??b and {dot: true}
    ✓ should match !a/b/c/ with a/??b and {nonegate: true}
    ✓ should match !a/!b with a/??b
    ✓ should match !a/!b with a/??b and {dot: true}
    ✓ should match !a/!b with a/??b and {nonegate: true}
    ✓ should match !a/!b/c with a/??b
    ✓ should match !a/!b/c with a/??b and {dot: true}
    ✓ should match !a/!b/c with a/??b and {nonegate: true}
    ✓ should match !a/!b/c/d with a/??b
    ✓ should match !a/!b/c/d with a/??b and {dot: true}
    ✓ should match !a/!b/c/d with a/??b and {nonegate: true}
    ✓ should match !a/b/.c.md with a/??b
    ✓ should match !a/b/.c.md with a/??b and {dot: true}
    ✓ should match !a/b/.c.md with a/??b and {nonegate: true}
    ✓ should match /a/ with a/??b
    ✓ should match /a/ with a/??b and {dot: true}
    ✓ should match /a/ with a/??b and {nonegate: true}
    ✓ should match /a/b with a/??b
    ✓ should match /a/b with a/??b and {dot: true}
    ✓ should match /a/b with a/??b and {nonegate: true}
    ✓ should match /a/cb with a/??b
    ✓ should match /a/cb with a/??b and {dot: true}
    ✓ should match /a/cb with a/??b and {nonegate: true}
    ✓ should match /a/bb with a/??b
    ✓ should match /a/bb with a/??b and {dot: true}
    ✓ should match /a/bb with a/??b and {nonegate: true}
    ✓ should match /a/b/c with a/??b
    ✓ should match /a/b/c with a/??b and {dot: true}
    ✓ should match /a/b/c with a/??b and {nonegate: true}
    ✓ should match /a/b/c/ with a/??b
    ✓ should match /a/b/c/ with a/??b and {dot: true}
    ✓ should match /a/b/c/ with a/??b and {nonegate: true}
    ✓ should match /a/b/c/d with a/??b
    ✓ should match /a/b/c/d with a/??b and {dot: true}
    ✓ should match /a/b/c/d with a/??b and {nonegate: true}
    ✓ should match /a/b/c/d/ with a/??b
    ✓ should match /a/b/c/d/ with a/??b and {dot: true}
    ✓ should match /a/b/c/d/ with a/??b and {nonegate: true}
    ✓ should match . with a/??b
    ✓ should match . with a/??b and {dot: true}
    ✓ should match . with a/??b and {nonegate: true}
    ✓ should match ./ with a/??b
    ✓ should match ./ with a/??b and {dot: true}
    ✓ should match ./ with a/??b and {nonegate: true}
    ✓ should match .. with a/??b
    ✓ should match .. with a/??b and {dot: true}
    ✓ should match .. with a/??b and {nonegate: true}
    ✓ should match ../c with a/??b
    ✓ should match ../c with a/??b and {dot: true}
    ✓ should match ../c with a/??b and {nonegate: true}
    ✓ should match ../c with a/??b
    ✓ should match ../c with a/??b and {dot: true}
    ✓ should match ../c with a/??b and {nonegate: true}
    ✓ should match ./../c with a/??b
    ✓ should match ./../c with a/??b and {dot: true}
    ✓ should match ./../c with a/??b and {nonegate: true}
    ✓ should match ./a/../c with a/??b
    ✓ should match ./a/../c with a/??b and {dot: true}
    ✓ should match ./a/../c with a/??b and {nonegate: true}
    ✓ should match /.. with a/??b
    ✓ should match /.. with a/??b and {dot: true}
    ✓ should match /.. with a/??b and {nonegate: true}
    ✓ should match /../c with a/??b
    ✓ should match /../c with a/??b and {dot: true}
    ✓ should match /../c with a/??b and {nonegate: true}
    ✓ should match /../.c with a/??b
    ✓ should match /../.c with a/??b and {dot: true}
    ✓ should match /../.c with a/??b and {nonegate: true}
    ✓ should match /../.c/ with a/??b
    ✓ should match /../.c/ with a/??b and {dot: true}
    ✓ should match /../.c/ with a/??b and {nonegate: true}
    ✓ should match /a/../c with a/??b
    ✓ should match /a/../c with a/??b and {dot: true}
    ✓ should match /a/../c with a/??b and {nonegate: true}
    ✓ should match a/../c with a/??b
    ✓ should match a/../c with a/??b and {dot: true}
    ✓ should match a/../c with a/??b and {nonegate: true}
    ✓ should match ../.b/.c with a/??b
    ✓ should match ../.b/.c with a/??b and {dot: true}
    ✓ should match ../.b/.c with a/??b and {nonegate: true}
    ✓ should match ../b/.c with a/??b
    ✓ should match ../b/.c with a/??b and {dot: true}
    ✓ should match ../b/.c with a/??b and {nonegate: true}
    ✓ should match ./.b/.c with a/??b
    ✓ should match ./.b/.c with a/??b and {dot: true}
    ✓ should match ./.b/.c with a/??b and {nonegate: true}
    ✓ should match ./b/.c with a/??b
    ✓ should match ./b/.c with a/??b and {dot: true}
    ✓ should match ./b/.c with a/??b and {nonegate: true}
    ✓ should match .b with a/??b
    ✓ should match .b with a/??b and {dot: true}
    ✓ should match .b with a/??b and {nonegate: true}
    ✓ should match .b.c with a/??b
    ✓ should match .b.c with a/??b and {dot: true}
    ✓ should match .b.c with a/??b and {nonegate: true}
    ✓ should match .b.c/ with a/??b
    ✓ should match .b.c/ with a/??b and {dot: true}
    ✓ should match .b.c/ with a/??b and {nonegate: true}
    ✓ should match .b/ with a/??b
    ✓ should match .b/ with a/??b and {dot: true}
    ✓ should match .b/ with a/??b and {nonegate: true}
    ✓ should match .b/.c with a/??b
    ✓ should match .b/.c with a/??b and {dot: true}
    ✓ should match .b/.c with a/??b and {nonegate: true}
    ✓ should match .b/c with a/??b
    ✓ should match .b/c with a/??b and {dot: true}
    ✓ should match .b/c with a/??b and {nonegate: true}
    ✓ should match b/.c with a/??b
    ✓ should match b/.c with a/??b and {dot: true}
    ✓ should match b/.c with a/??b and {nonegate: true}
    ✓ should match b/.c/ with a/??b
    ✓ should match b/.c/ with a/??b and {dot: true}
    ✓ should match b/.c/ with a/??b and {nonegate: true}
    ✓ should match a/+b/c with a/??b
    ✓ should match a/+b/c with a/??b and {dot: true}
    ✓ should match a/+b/c with a/??b and {nonegate: true}
    ✓ should match +a/+b/c with a/??b
    ✓ should match +a/+b/c with a/??b and {dot: true}
    ✓ should match +a/+b/c with a/??b and {nonegate: true}
    ✓ should match a (foo) with a/??b
    ✓ should match a (foo) with a/??b and {dot: true}
    ✓ should match a (foo) with a/??b and {nonegate: true}
    ✓ should match a (foo)/(bar) with a/??b
    ✓ should match a (foo)/(bar) with a/??b and {dot: true}
    ✓ should match a (foo)/(bar) with a/??b and {nonegate: true}
    ✓ should match a/b/c (1) with a/??b
    ✓ should match a/b/c (1) with a/??b and {dot: true}
    ✓ should match a/b/c (1) with a/??b and {nonegate: true}
    ✓ should match a/b (2)/c (1) with a/??b
    ✓ should match a/b (2)/c (1) with a/??b and {dot: true}
    ✓ should match a/b (2)/c (1) with a/??b and {nonegate: true}
    ✓ should match a/b/c [def] with a/??b
    ✓ should match a/b/c [def] with a/??b and {dot: true}
    ✓ should match a/b/c [def] with a/??b and {nonegate: true}
    ✓ should match a with a/?b
    ✓ should match a with a/?b and {dot: true}
    ✓ should match a with a/?b and {nonegate: true}
    ✓ should match a.md with a/?b
    ✓ should match a.md with a/?b and {dot: true}
    ✓ should match a.md with a/?b and {nonegate: true}
    ✓ should match a.js with a/?b
    ✓ should match a.js with a/?b and {dot: true}
    ✓ should match a.js with a/?b and {nonegate: true}
    ✓ should match a/ with a/?b
    ✓ should match a/ with a/?b and {dot: true}
    ✓ should match a/ with a/?b and {nonegate: true}
    ✓ should match a/b with a/?b
    ✓ should match a/b with a/?b and {dot: true}
    ✓ should match a/b with a/?b and {nonegate: true}
    ✓ should match a/b/.c.md with a/?b
    ✓ should match a/b/.c.md with a/?b and {dot: true}
    ✓ should match a/b/.c.md with a/?b and {nonegate: true}
    ✓ should match a/b/c with a/?b
    ✓ should match a/b/c with a/?b and {dot: true}
    ✓ should match a/b/c with a/?b and {nonegate: true}
    ✓ should match a/b/c.md with a/?b
    ✓ should match a/b/c.md with a/?b and {dot: true}
    ✓ should match a/b/c.md with a/?b and {nonegate: true}
    ✓ should match a/b/c/ with a/?b
    ✓ should match a/b/c/ with a/?b and {dot: true}
    ✓ should match a/b/c/ with a/?b and {nonegate: true}
    ✓ should match a/b/c/d with a/?b
    ✓ should match a/b/c/d with a/?b and {dot: true}
    ✓ should match a/b/c/d with a/?b and {nonegate: true}
    ✓ should match a/b/c/d/ with a/?b
    ✓ should match a/b/c/d/ with a/?b and {dot: true}
    ✓ should match a/b/c/d/ with a/?b and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with a/?b
    ✓ should match a/b/c/d/e/f/z.js with a/?b and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with a/?b and {nonegate: true}
    ✓ should match a/b/c/z.js with a/?b
    ✓ should match a/b/c/z.js with a/?b and {dot: true}
    ✓ should match a/b/c/z.js with a/?b and {nonegate: true}
    ✓ should match a/bb with a/?b
    ✓ should match a/bb with a/?b and {dot: true}
    ✓ should match a/bb with a/?b and {nonegate: true}
    ✓ should match a/cb with a/?b
    ✓ should match a/cb with a/?b and {dot: true}
    ✓ should match a/cb with a/?b and {nonegate: true}
    ✓ should match abbbz with a/?b
    ✓ should match abbbz with a/?b and {dot: true}
    ✓ should match abbbz with a/?b and {nonegate: true}
    ✓ should match abc with a/?b
    ✓ should match abc with a/?b and {dot: true}
    ✓ should match abc with a/?b and {nonegate: true}
    ✓ should match abd with a/?b
    ✓ should match abd with a/?b and {dot: true}
    ✓ should match abd with a/?b and {nonegate: true}
    ✓ should match z.js with a/?b
    ✓ should match z.js with a/?b and {dot: true}
    ✓ should match z.js with a/?b and {nonegate: true}
    ✓ should match za.js with a/?b
    ✓ should match za.js with a/?b and {dot: true}
    ✓ should match za.js with a/?b and {nonegate: true}
    ✓ should match !a.js with a/?b
    ✓ should match !a.js with a/?b and {dot: true}
    ✓ should match !a.js with a/?b and {nonegate: true}
    ✓ should match !a/b with a/?b
    ✓ should match !a/b with a/?b and {dot: true}
    ✓ should match !a/b with a/?b and {nonegate: true}
    ✓ should match !a/b/ with a/?b
    ✓ should match !a/b/ with a/?b and {dot: true}
    ✓ should match !a/b/ with a/?b and {nonegate: true}
    ✓ should match !a/b/c with a/?b
    ✓ should match !a/b/c with a/?b and {dot: true}
    ✓ should match !a/b/c with a/?b and {nonegate: true}
    ✓ should match !a/b/c/ with a/?b
    ✓ should match !a/b/c/ with a/?b and {dot: true}
    ✓ should match !a/b/c/ with a/?b and {nonegate: true}
    ✓ should match !a/!b with a/?b
    ✓ should match !a/!b with a/?b and {dot: true}
    ✓ should match !a/!b with a/?b and {nonegate: true}
    ✓ should match !a/!b/c with a/?b
    ✓ should match !a/!b/c with a/?b and {dot: true}
    ✓ should match !a/!b/c with a/?b and {nonegate: true}
    ✓ should match !a/!b/c/d with a/?b
    ✓ should match !a/!b/c/d with a/?b and {dot: true}
    ✓ should match !a/!b/c/d with a/?b and {nonegate: true}
    ✓ should match !a/b/.c.md with a/?b
    ✓ should match !a/b/.c.md with a/?b and {dot: true}
    ✓ should match !a/b/.c.md with a/?b and {nonegate: true}
    ✓ should match /a/ with a/?b
    ✓ should match /a/ with a/?b and {dot: true}
    ✓ should match /a/ with a/?b and {nonegate: true}
    ✓ should match /a/b with a/?b
    ✓ should match /a/b with a/?b and {dot: true}
    ✓ should match /a/b with a/?b and {nonegate: true}
    ✓ should match /a/cb with a/?b
    ✓ should match /a/cb with a/?b and {dot: true}
    ✓ should match /a/cb with a/?b and {nonegate: true}
    ✓ should match /a/bb with a/?b
    ✓ should match /a/bb with a/?b and {dot: true}
    ✓ should match /a/bb with a/?b and {nonegate: true}
    ✓ should match /a/b/c with a/?b
    ✓ should match /a/b/c with a/?b and {dot: true}
    ✓ should match /a/b/c with a/?b and {nonegate: true}
    ✓ should match /a/b/c/ with a/?b
    ✓ should match /a/b/c/ with a/?b and {dot: true}
    ✓ should match /a/b/c/ with a/?b and {nonegate: true}
    ✓ should match /a/b/c/d with a/?b
    ✓ should match /a/b/c/d with a/?b and {dot: true}
    ✓ should match /a/b/c/d with a/?b and {nonegate: true}
    ✓ should match /a/b/c/d/ with a/?b
    ✓ should match /a/b/c/d/ with a/?b and {dot: true}
    ✓ should match /a/b/c/d/ with a/?b and {nonegate: true}
    ✓ should match . with a/?b
    ✓ should match . with a/?b and {dot: true}
    ✓ should match . with a/?b and {nonegate: true}
    ✓ should match ./ with a/?b
    ✓ should match ./ with a/?b and {dot: true}
    ✓ should match ./ with a/?b and {nonegate: true}
    ✓ should match .. with a/?b
    ✓ should match .. with a/?b and {dot: true}
    ✓ should match .. with a/?b and {nonegate: true}
    ✓ should match ../c with a/?b
    ✓ should match ../c with a/?b and {dot: true}
    ✓ should match ../c with a/?b and {nonegate: true}
    ✓ should match ../c with a/?b
    ✓ should match ../c with a/?b and {dot: true}
    ✓ should match ../c with a/?b and {nonegate: true}
    ✓ should match ./../c with a/?b
    ✓ should match ./../c with a/?b and {dot: true}
    ✓ should match ./../c with a/?b and {nonegate: true}
    ✓ should match ./a/../c with a/?b
    ✓ should match ./a/../c with a/?b and {dot: true}
    ✓ should match ./a/../c with a/?b and {nonegate: true}
    ✓ should match /.. with a/?b
    ✓ should match /.. with a/?b and {dot: true}
    ✓ should match /.. with a/?b and {nonegate: true}
    ✓ should match /../c with a/?b
    ✓ should match /../c with a/?b and {dot: true}
    ✓ should match /../c with a/?b and {nonegate: true}
    ✓ should match /../.c with a/?b
    ✓ should match /../.c with a/?b and {dot: true}
    ✓ should match /../.c with a/?b and {nonegate: true}
    ✓ should match /../.c/ with a/?b
    ✓ should match /../.c/ with a/?b and {dot: true}
    ✓ should match /../.c/ with a/?b and {nonegate: true}
    ✓ should match /a/../c with a/?b
    ✓ should match /a/../c with a/?b and {dot: true}
    ✓ should match /a/../c with a/?b and {nonegate: true}
    ✓ should match a/../c with a/?b
    ✓ should match a/../c with a/?b and {dot: true}
    ✓ should match a/../c with a/?b and {nonegate: true}
    ✓ should match ../.b/.c with a/?b
    ✓ should match ../.b/.c with a/?b and {dot: true}
    ✓ should match ../.b/.c with a/?b and {nonegate: true}
    ✓ should match ../b/.c with a/?b
    ✓ should match ../b/.c with a/?b and {dot: true}
    ✓ should match ../b/.c with a/?b and {nonegate: true}
    ✓ should match ./.b/.c with a/?b
    ✓ should match ./.b/.c with a/?b and {dot: true}
    ✓ should match ./.b/.c with a/?b and {nonegate: true}
    ✓ should match ./b/.c with a/?b
    ✓ should match ./b/.c with a/?b and {dot: true}
    ✓ should match ./b/.c with a/?b and {nonegate: true}
    ✓ should match .b with a/?b
    ✓ should match .b with a/?b and {dot: true}
    ✓ should match .b with a/?b and {nonegate: true}
    ✓ should match .b.c with a/?b
    ✓ should match .b.c with a/?b and {dot: true}
    ✓ should match .b.c with a/?b and {nonegate: true}
    ✓ should match .b.c/ with a/?b
    ✓ should match .b.c/ with a/?b and {dot: true}
    ✓ should match .b.c/ with a/?b and {nonegate: true}
    ✓ should match .b/ with a/?b
    ✓ should match .b/ with a/?b and {dot: true}
    ✓ should match .b/ with a/?b and {nonegate: true}
    ✓ should match .b/.c with a/?b
    ✓ should match .b/.c with a/?b and {dot: true}
    ✓ should match .b/.c with a/?b and {nonegate: true}
    ✓ should match .b/c with a/?b
    ✓ should match .b/c with a/?b and {dot: true}
    ✓ should match .b/c with a/?b and {nonegate: true}
    ✓ should match b/.c with a/?b
    ✓ should match b/.c with a/?b and {dot: true}
    ✓ should match b/.c with a/?b and {nonegate: true}
    ✓ should match b/.c/ with a/?b
    ✓ should match b/.c/ with a/?b and {dot: true}
    ✓ should match b/.c/ with a/?b and {nonegate: true}
    ✓ should match a/+b/c with a/?b
    ✓ should match a/+b/c with a/?b and {dot: true}
    ✓ should match a/+b/c with a/?b and {nonegate: true}
    ✓ should match +a/+b/c with a/?b
    ✓ should match +a/+b/c with a/?b and {dot: true}
    ✓ should match +a/+b/c with a/?b and {nonegate: true}
    ✓ should match a (foo) with a/?b
    ✓ should match a (foo) with a/?b and {dot: true}
    ✓ should match a (foo) with a/?b and {nonegate: true}
    ✓ should match a (foo)/(bar) with a/?b
    ✓ should match a (foo)/(bar) with a/?b and {dot: true}
    ✓ should match a (foo)/(bar) with a/?b and {nonegate: true}
    ✓ should match a/b/c (1) with a/?b
    ✓ should match a/b/c (1) with a/?b and {dot: true}
    ✓ should match a/b/c (1) with a/?b and {nonegate: true}
    ✓ should match a/b (2)/c (1) with a/?b
    ✓ should match a/b (2)/c (1) with a/?b and {dot: true}
    ✓ should match a/b (2)/c (1) with a/?b and {nonegate: true}
    ✓ should match a/b/c [def] with a/?b
    ✓ should match a/b/c [def] with a/?b and {dot: true}
    ✓ should match a/b/c [def] with a/?b and {nonegate: true}
    ✓ should match a with a/b
    ✓ should match a with a/b and {dot: true}
    ✓ should match a with a/b and {nonegate: true}
    ✓ should match a.md with a/b
    ✓ should match a.md with a/b and {dot: true}
    ✓ should match a.md with a/b and {nonegate: true}
    ✓ should match a.js with a/b
    ✓ should match a.js with a/b and {dot: true}
    ✓ should match a.js with a/b and {nonegate: true}
    ✓ should match a/ with a/b
    ✓ should match a/ with a/b and {dot: true}
    ✓ should match a/ with a/b and {nonegate: true}
    ✓ should match a/b with a/b
    ✓ should match a/b with a/b and {dot: true}
    ✓ should match a/b with a/b and {nonegate: true}
    ✓ should match a/b/.c.md with a/b
    ✓ should match a/b/.c.md with a/b and {dot: true}
    ✓ should match a/b/.c.md with a/b and {nonegate: true}
    ✓ should match a/b/c with a/b
    ✓ should match a/b/c with a/b and {dot: true}
    ✓ should match a/b/c with a/b and {nonegate: true}
    ✓ should match a/b/c.md with a/b
    ✓ should match a/b/c.md with a/b and {dot: true}
    ✓ should match a/b/c.md with a/b and {nonegate: true}
    ✓ should match a/b/c/ with a/b
    ✓ should match a/b/c/ with a/b and {dot: true}
    ✓ should match a/b/c/ with a/b and {nonegate: true}
    ✓ should match a/b/c/d with a/b
    ✓ should match a/b/c/d with a/b and {dot: true}
    ✓ should match a/b/c/d with a/b and {nonegate: true}
    ✓ should match a/b/c/d/ with a/b
    ✓ should match a/b/c/d/ with a/b and {dot: true}
    ✓ should match a/b/c/d/ with a/b and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with a/b
    ✓ should match a/b/c/d/e/f/z.js with a/b and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with a/b and {nonegate: true}
    ✓ should match a/b/c/z.js with a/b
    ✓ should match a/b/c/z.js with a/b and {dot: true}
    ✓ should match a/b/c/z.js with a/b and {nonegate: true}
    ✓ should match a/bb with a/b
    ✓ should match a/bb with a/b and {dot: true}
    ✓ should match a/bb with a/b and {nonegate: true}
    ✓ should match a/cb with a/b
    ✓ should match a/cb with a/b and {dot: true}
    ✓ should match a/cb with a/b and {nonegate: true}
    ✓ should match abbbz with a/b
    ✓ should match abbbz with a/b and {dot: true}
    ✓ should match abbbz with a/b and {nonegate: true}
    ✓ should match abc with a/b
    ✓ should match abc with a/b and {dot: true}
    ✓ should match abc with a/b and {nonegate: true}
    ✓ should match abd with a/b
    ✓ should match abd with a/b and {dot: true}
    ✓ should match abd with a/b and {nonegate: true}
    ✓ should match z.js with a/b
    ✓ should match z.js with a/b and {dot: true}
    ✓ should match z.js with a/b and {nonegate: true}
    ✓ should match za.js with a/b
    ✓ should match za.js with a/b and {dot: true}
    ✓ should match za.js with a/b and {nonegate: true}
    ✓ should match !a.js with a/b
    ✓ should match !a.js with a/b and {dot: true}
    ✓ should match !a.js with a/b and {nonegate: true}
    ✓ should match !a/b with a/b
    ✓ should match !a/b with a/b and {dot: true}
    ✓ should match !a/b with a/b and {nonegate: true}
    ✓ should match !a/b/ with a/b
    ✓ should match !a/b/ with a/b and {dot: true}
    ✓ should match !a/b/ with a/b and {nonegate: true}
    ✓ should match !a/b/c with a/b
    ✓ should match !a/b/c with a/b and {dot: true}
    ✓ should match !a/b/c with a/b and {nonegate: true}
    ✓ should match !a/b/c/ with a/b
    ✓ should match !a/b/c/ with a/b and {dot: true}
    ✓ should match !a/b/c/ with a/b and {nonegate: true}
    ✓ should match !a/!b with a/b
    ✓ should match !a/!b with a/b and {dot: true}
    ✓ should match !a/!b with a/b and {nonegate: true}
    ✓ should match !a/!b/c with a/b
    ✓ should match !a/!b/c with a/b and {dot: true}
    ✓ should match !a/!b/c with a/b and {nonegate: true}
    ✓ should match !a/!b/c/d with a/b
    ✓ should match !a/!b/c/d with a/b and {dot: true}
    ✓ should match !a/!b/c/d with a/b and {nonegate: true}
    ✓ should match !a/b/.c.md with a/b
    ✓ should match !a/b/.c.md with a/b and {dot: true}
    ✓ should match !a/b/.c.md with a/b and {nonegate: true}
    ✓ should match /a/ with a/b
    ✓ should match /a/ with a/b and {dot: true}
    ✓ should match /a/ with a/b and {nonegate: true}
    ✓ should match /a/b with a/b
    ✓ should match /a/b with a/b and {dot: true}
    ✓ should match /a/b with a/b and {nonegate: true}
    ✓ should match /a/cb with a/b
    ✓ should match /a/cb with a/b and {dot: true}
    ✓ should match /a/cb with a/b and {nonegate: true}
    ✓ should match /a/bb with a/b
    ✓ should match /a/bb with a/b and {dot: true}
    ✓ should match /a/bb with a/b and {nonegate: true}
    ✓ should match /a/b/c with a/b
    ✓ should match /a/b/c with a/b and {dot: true}
    ✓ should match /a/b/c with a/b and {nonegate: true}
    ✓ should match /a/b/c/ with a/b
    ✓ should match /a/b/c/ with a/b and {dot: true}
    ✓ should match /a/b/c/ with a/b and {nonegate: true}
    ✓ should match /a/b/c/d with a/b
    ✓ should match /a/b/c/d with a/b and {dot: true}
    ✓ should match /a/b/c/d with a/b and {nonegate: true}
    ✓ should match /a/b/c/d/ with a/b
    ✓ should match /a/b/c/d/ with a/b and {dot: true}
    ✓ should match /a/b/c/d/ with a/b and {nonegate: true}
    ✓ should match . with a/b
    ✓ should match . with a/b and {dot: true}
    ✓ should match . with a/b and {nonegate: true}
    ✓ should match ./ with a/b
    ✓ should match ./ with a/b and {dot: true}
    ✓ should match ./ with a/b and {nonegate: true}
    ✓ should match .. with a/b
    ✓ should match .. with a/b and {dot: true}
    ✓ should match .. with a/b and {nonegate: true}
    ✓ should match ../c with a/b
    ✓ should match ../c with a/b and {dot: true}
    ✓ should match ../c with a/b and {nonegate: true}
    ✓ should match ../c with a/b
    ✓ should match ../c with a/b and {dot: true}
    ✓ should match ../c with a/b and {nonegate: true}
    ✓ should match ./../c with a/b
    ✓ should match ./../c with a/b and {dot: true}
    ✓ should match ./../c with a/b and {nonegate: true}
    ✓ should match ./a/../c with a/b
    ✓ should match ./a/../c with a/b and {dot: true}
    ✓ should match ./a/../c with a/b and {nonegate: true}
    ✓ should match /.. with a/b
    ✓ should match /.. with a/b and {dot: true}
    ✓ should match /.. with a/b and {nonegate: true}
    ✓ should match /../c with a/b
    ✓ should match /../c with a/b and {dot: true}
    ✓ should match /../c with a/b and {nonegate: true}
    ✓ should match /../.c with a/b
    ✓ should match /../.c with a/b and {dot: true}
    ✓ should match /../.c with a/b and {nonegate: true}
    ✓ should match /../.c/ with a/b
    ✓ should match /../.c/ with a/b and {dot: true}
    ✓ should match /../.c/ with a/b and {nonegate: true}
    ✓ should match /a/../c with a/b
    ✓ should match /a/../c with a/b and {dot: true}
    ✓ should match /a/../c with a/b and {nonegate: true}
    ✓ should match a/../c with a/b
    ✓ should match a/../c with a/b and {dot: true}
    ✓ should match a/../c with a/b and {nonegate: true}
    ✓ should match ../.b/.c with a/b
    ✓ should match ../.b/.c with a/b and {dot: true}
    ✓ should match ../.b/.c with a/b and {nonegate: true}
    ✓ should match ../b/.c with a/b
    ✓ should match ../b/.c with a/b and {dot: true}
    ✓ should match ../b/.c with a/b and {nonegate: true}
    ✓ should match ./.b/.c with a/b
    ✓ should match ./.b/.c with a/b and {dot: true}
    ✓ should match ./.b/.c with a/b and {nonegate: true}
    ✓ should match ./b/.c with a/b
    ✓ should match ./b/.c with a/b and {dot: true}
    ✓ should match ./b/.c with a/b and {nonegate: true}
    ✓ should match .b with a/b
    ✓ should match .b with a/b and {dot: true}
    ✓ should match .b with a/b and {nonegate: true}
    ✓ should match .b.c with a/b
    ✓ should match .b.c with a/b and {dot: true}
    ✓ should match .b.c with a/b and {nonegate: true}
    ✓ should match .b.c/ with a/b
    ✓ should match .b.c/ with a/b and {dot: true}
    ✓ should match .b.c/ with a/b and {nonegate: true}
    ✓ should match .b/ with a/b
    ✓ should match .b/ with a/b and {dot: true}
    ✓ should match .b/ with a/b and {nonegate: true}
    ✓ should match .b/.c with a/b
    ✓ should match .b/.c with a/b and {dot: true}
    ✓ should match .b/.c with a/b and {nonegate: true}
    ✓ should match .b/c with a/b
    ✓ should match .b/c with a/b and {dot: true}
    ✓ should match .b/c with a/b and {nonegate: true}
    ✓ should match b/.c with a/b
    ✓ should match b/.c with a/b and {dot: true}
    ✓ should match b/.c with a/b and {nonegate: true}
    ✓ should match b/.c/ with a/b
    ✓ should match b/.c/ with a/b and {dot: true}
    ✓ should match b/.c/ with a/b and {nonegate: true}
    ✓ should match a/+b/c with a/b
    ✓ should match a/+b/c with a/b and {dot: true}
    ✓ should match a/+b/c with a/b and {nonegate: true}
    ✓ should match +a/+b/c with a/b
    ✓ should match +a/+b/c with a/b and {dot: true}
    ✓ should match +a/+b/c with a/b and {nonegate: true}
    ✓ should match a (foo) with a/b
    ✓ should match a (foo) with a/b and {dot: true}
    ✓ should match a (foo) with a/b and {nonegate: true}
    ✓ should match a (foo)/(bar) with a/b
    ✓ should match a (foo)/(bar) with a/b and {dot: true}
    ✓ should match a (foo)/(bar) with a/b and {nonegate: true}
    ✓ should match a/b/c (1) with a/b
    ✓ should match a/b/c (1) with a/b and {dot: true}
    ✓ should match a/b/c (1) with a/b and {nonegate: true}
    ✓ should match a/b (2)/c (1) with a/b
    ✓ should match a/b (2)/c (1) with a/b and {dot: true}
    ✓ should match a/b (2)/c (1) with a/b and {nonegate: true}
    ✓ should match a/b/c [def] with a/b
    ✓ should match a/b/c [def] with a/b and {dot: true}
    ✓ should match a/b/c [def] with a/b and {nonegate: true}
    ✓ should match a with a/b*
    ✓ should match a with a/b* and {dot: true}
    ✓ should match a with a/b* and {nonegate: true}
    ✓ should match a.md with a/b*
    ✓ should match a.md with a/b* and {dot: true}
    ✓ should match a.md with a/b* and {nonegate: true}
    ✓ should match a.js with a/b*
    ✓ should match a.js with a/b* and {dot: true}
    ✓ should match a.js with a/b* and {nonegate: true}
    ✓ should match a/ with a/b*
    ✓ should match a/ with a/b* and {dot: true}
    ✓ should match a/ with a/b* and {nonegate: true}
    ✓ should match a/b with a/b*
    ✓ should match a/b with a/b* and {dot: true}
    ✓ should match a/b with a/b* and {nonegate: true}
    ✓ should match a/b/.c.md with a/b*
    ✓ should match a/b/.c.md with a/b* and {dot: true}
    ✓ should match a/b/.c.md with a/b* and {nonegate: true}
    ✓ should match a/b/c with a/b*
    ✓ should match a/b/c with a/b* and {dot: true}
    ✓ should match a/b/c with a/b* and {nonegate: true}
    ✓ should match a/b/c.md with a/b*
    ✓ should match a/b/c.md with a/b* and {dot: true}
    ✓ should match a/b/c.md with a/b* and {nonegate: true}
    ✓ should match a/b/c/ with a/b*
    ✓ should match a/b/c/ with a/b* and {dot: true}
    ✓ should match a/b/c/ with a/b* and {nonegate: true}
    ✓ should match a/b/c/d with a/b*
    ✓ should match a/b/c/d with a/b* and {dot: true}
    ✓ should match a/b/c/d with a/b* and {nonegate: true}
    ✓ should match a/b/c/d/ with a/b*
    ✓ should match a/b/c/d/ with a/b* and {dot: true}
    ✓ should match a/b/c/d/ with a/b* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with a/b*
    ✓ should match a/b/c/d/e/f/z.js with a/b* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with a/b* and {nonegate: true}
    ✓ should match a/b/c/z.js with a/b*
    ✓ should match a/b/c/z.js with a/b* and {dot: true}
    ✓ should match a/b/c/z.js with a/b* and {nonegate: true}
    ✓ should match a/bb with a/b*
    ✓ should match a/bb with a/b* and {dot: true}
    ✓ should match a/bb with a/b* and {nonegate: true}
    ✓ should match a/cb with a/b*
    ✓ should match a/cb with a/b* and {dot: true}
    ✓ should match a/cb with a/b* and {nonegate: true}
    ✓ should match abbbz with a/b*
    ✓ should match abbbz with a/b* and {dot: true}
    ✓ should match abbbz with a/b* and {nonegate: true}
    ✓ should match abc with a/b*
    ✓ should match abc with a/b* and {dot: true}
    ✓ should match abc with a/b* and {nonegate: true}
    ✓ should match abd with a/b*
    ✓ should match abd with a/b* and {dot: true}
    ✓ should match abd with a/b* and {nonegate: true}
    ✓ should match z.js with a/b*
    ✓ should match z.js with a/b* and {dot: true}
    ✓ should match z.js with a/b* and {nonegate: true}
    ✓ should match za.js with a/b*
    ✓ should match za.js with a/b* and {dot: true}
    ✓ should match za.js with a/b* and {nonegate: true}
    ✓ should match !a.js with a/b*
    ✓ should match !a.js with a/b* and {dot: true}
    ✓ should match !a.js with a/b* and {nonegate: true}
    ✓ should match !a/b with a/b*
    ✓ should match !a/b with a/b* and {dot: true}
    ✓ should match !a/b with a/b* and {nonegate: true}
    ✓ should match !a/b/ with a/b*
    ✓ should match !a/b/ with a/b* and {dot: true}
    ✓ should match !a/b/ with a/b* and {nonegate: true}
    ✓ should match !a/b/c with a/b*
    ✓ should match !a/b/c with a/b* and {dot: true}
    ✓ should match !a/b/c with a/b* and {nonegate: true}
    ✓ should match !a/b/c/ with a/b*
    ✓ should match !a/b/c/ with a/b* and {dot: true}
    ✓ should match !a/b/c/ with a/b* and {nonegate: true}
    ✓ should match !a/!b with a/b*
    ✓ should match !a/!b with a/b* and {dot: true}
    ✓ should match !a/!b with a/b* and {nonegate: true}
    ✓ should match !a/!b/c with a/b*
    ✓ should match !a/!b/c with a/b* and {dot: true}
    ✓ should match !a/!b/c with a/b* and {nonegate: true}
    ✓ should match !a/!b/c/d with a/b*
    ✓ should match !a/!b/c/d with a/b* and {dot: true}
    ✓ should match !a/!b/c/d with a/b* and {nonegate: true}
    ✓ should match !a/b/.c.md with a/b*
    ✓ should match !a/b/.c.md with a/b* and {dot: true}
    ✓ should match !a/b/.c.md with a/b* and {nonegate: true}
    ✓ should match /a/ with a/b*
    ✓ should match /a/ with a/b* and {dot: true}
    ✓ should match /a/ with a/b* and {nonegate: true}
    ✓ should match /a/b with a/b*
    ✓ should match /a/b with a/b* and {dot: true}
    ✓ should match /a/b with a/b* and {nonegate: true}
    ✓ should match /a/cb with a/b*
    ✓ should match /a/cb with a/b* and {dot: true}
    ✓ should match /a/cb with a/b* and {nonegate: true}
    ✓ should match /a/bb with a/b*
    ✓ should match /a/bb with a/b* and {dot: true}
    ✓ should match /a/bb with a/b* and {nonegate: true}
    ✓ should match /a/b/c with a/b*
    ✓ should match /a/b/c with a/b* and {dot: true}
    ✓ should match /a/b/c with a/b* and {nonegate: true}
    ✓ should match /a/b/c/ with a/b*
    ✓ should match /a/b/c/ with a/b* and {dot: true}
    ✓ should match /a/b/c/ with a/b* and {nonegate: true}
    ✓ should match /a/b/c/d with a/b*
    ✓ should match /a/b/c/d with a/b* and {dot: true}
    ✓ should match /a/b/c/d with a/b* and {nonegate: true}
    ✓ should match /a/b/c/d/ with a/b*
    ✓ should match /a/b/c/d/ with a/b* and {dot: true}
    ✓ should match /a/b/c/d/ with a/b* and {nonegate: true}
    ✓ should match . with a/b*
    ✓ should match . with a/b* and {dot: true}
    ✓ should match . with a/b* and {nonegate: true}
    ✓ should match ./ with a/b*
    ✓ should match ./ with a/b* and {dot: true}
    ✓ should match ./ with a/b* and {nonegate: true}
    ✓ should match .. with a/b*
    ✓ should match .. with a/b* and {dot: true}
    ✓ should match .. with a/b* and {nonegate: true}
    ✓ should match ../c with a/b*
    ✓ should match ../c with a/b* and {dot: true}
    ✓ should match ../c with a/b* and {nonegate: true}
    ✓ should match ../c with a/b*
    ✓ should match ../c with a/b* and {dot: true}
    ✓ should match ../c with a/b* and {nonegate: true}
    ✓ should match ./../c with a/b*
    ✓ should match ./../c with a/b* and {dot: true}
    ✓ should match ./../c with a/b* and {nonegate: true}
    ✓ should match ./a/../c with a/b*
    ✓ should match ./a/../c with a/b* and {dot: true}
    ✓ should match ./a/../c with a/b* and {nonegate: true}
    ✓ should match /.. with a/b*
    ✓ should match /.. with a/b* and {dot: true}
    ✓ should match /.. with a/b* and {nonegate: true}
    ✓ should match /../c with a/b*
    ✓ should match /../c with a/b* and {dot: true}
    ✓ should match /../c with a/b* and {nonegate: true}
    ✓ should match /../.c with a/b*
    ✓ should match /../.c with a/b* and {dot: true}
    ✓ should match /../.c with a/b* and {nonegate: true}
    ✓ should match /../.c/ with a/b*
    ✓ should match /../.c/ with a/b* and {dot: true}
    ✓ should match /../.c/ with a/b* and {nonegate: true}
    ✓ should match /a/../c with a/b*
    ✓ should match /a/../c with a/b* and {dot: true}
    ✓ should match /a/../c with a/b* and {nonegate: true}
    ✓ should match a/../c with a/b*
    ✓ should match a/../c with a/b* and {dot: true}
    ✓ should match a/../c with a/b* and {nonegate: true}
    ✓ should match ../.b/.c with a/b*
    ✓ should match ../.b/.c with a/b* and {dot: true}
    ✓ should match ../.b/.c with a/b* and {nonegate: true}
    ✓ should match ../b/.c with a/b*
    ✓ should match ../b/.c with a/b* and {dot: true}
    ✓ should match ../b/.c with a/b* and {nonegate: true}
    ✓ should match ./.b/.c with a/b*
    ✓ should match ./.b/.c with a/b* and {dot: true}
    ✓ should match ./.b/.c with a/b* and {nonegate: true}
    ✓ should match ./b/.c with a/b*
    ✓ should match ./b/.c with a/b* and {dot: true}
    ✓ should match ./b/.c with a/b* and {nonegate: true}
    ✓ should match .b with a/b*
    ✓ should match .b with a/b* and {dot: true}
    ✓ should match .b with a/b* and {nonegate: true}
    ✓ should match .b.c with a/b*
    ✓ should match .b.c with a/b* and {dot: true}
    ✓ should match .b.c with a/b* and {nonegate: true}
    ✓ should match .b.c/ with a/b*
    ✓ should match .b.c/ with a/b* and {dot: true}
    ✓ should match .b.c/ with a/b* and {nonegate: true}
    ✓ should match .b/ with a/b*
    ✓ should match .b/ with a/b* and {dot: true}
    ✓ should match .b/ with a/b* and {nonegate: true}
    ✓ should match .b/.c with a/b*
    ✓ should match .b/.c with a/b* and {dot: true}
    ✓ should match .b/.c with a/b* and {nonegate: true}
    ✓ should match .b/c with a/b*
    ✓ should match .b/c with a/b* and {dot: true}
    ✓ should match .b/c with a/b* and {nonegate: true}
    ✓ should match b/.c with a/b*
    ✓ should match b/.c with a/b* and {dot: true}
    ✓ should match b/.c with a/b* and {nonegate: true}
    ✓ should match b/.c/ with a/b*
    ✓ should match b/.c/ with a/b* and {dot: true}
    ✓ should match b/.c/ with a/b* and {nonegate: true}
    ✓ should match a/+b/c with a/b*
    ✓ should match a/+b/c with a/b* and {dot: true}
    ✓ should match a/+b/c with a/b* and {nonegate: true}
    ✓ should match +a/+b/c with a/b*
    ✓ should match +a/+b/c with a/b* and {dot: true}
    ✓ should match +a/+b/c with a/b* and {nonegate: true}
    ✓ should match a (foo) with a/b*
    ✓ should match a (foo) with a/b* and {dot: true}
    ✓ should match a (foo) with a/b* and {nonegate: true}
    ✓ should match a (foo)/(bar) with a/b*
    ✓ should match a (foo)/(bar) with a/b* and {dot: true}
    ✓ should match a (foo)/(bar) with a/b* and {nonegate: true}
    ✓ should match a/b/c (1) with a/b*
    ✓ should match a/b/c (1) with a/b* and {dot: true}
    ✓ should match a/b/c (1) with a/b* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with a/b*
    ✓ should match a/b (2)/c (1) with a/b* and {dot: true}
    ✓ should match a/b (2)/c (1) with a/b* and {nonegate: true}
    ✓ should match a/b/c [def] with a/b*
    ✓ should match a/b/c [def] with a/b* and {dot: true}
    ✓ should match a/b/c [def] with a/b* and {nonegate: true}
    ✓ should match a with a/b/*
    ✓ should match a with a/b/* and {dot: true}
    ✓ should match a with a/b/* and {nonegate: true}
    ✓ should match a.md with a/b/*
    ✓ should match a.md with a/b/* and {dot: true}
    ✓ should match a.md with a/b/* and {nonegate: true}
    ✓ should match a.js with a/b/*
    ✓ should match a.js with a/b/* and {dot: true}
    ✓ should match a.js with a/b/* and {nonegate: true}
    ✓ should match a/ with a/b/*
    ✓ should match a/ with a/b/* and {dot: true}
    ✓ should match a/ with a/b/* and {nonegate: true}
    ✓ should match a/b with a/b/*
    ✓ should match a/b with a/b/* and {dot: true}
    ✓ should match a/b with a/b/* and {nonegate: true}
    ✓ should match a/b/.c.md with a/b/*
    ✓ should match a/b/.c.md with a/b/* and {dot: true}
    ✓ should match a/b/.c.md with a/b/* and {nonegate: true}
    ✓ should match a/b/c with a/b/*
    ✓ should match a/b/c with a/b/* and {dot: true}
    ✓ should match a/b/c with a/b/* and {nonegate: true}
    ✓ should match a/b/c.md with a/b/*
    ✓ should match a/b/c.md with a/b/* and {dot: true}
    ✓ should match a/b/c.md with a/b/* and {nonegate: true}
    ✓ should match a/b/c/ with a/b/*
    ✓ should match a/b/c/ with a/b/* and {dot: true}
    ✓ should match a/b/c/ with a/b/* and {nonegate: true}
    ✓ should match a/b/c/d with a/b/*
    ✓ should match a/b/c/d with a/b/* and {dot: true}
    ✓ should match a/b/c/d with a/b/* and {nonegate: true}
    ✓ should match a/b/c/d/ with a/b/*
    ✓ should match a/b/c/d/ with a/b/* and {dot: true}
    ✓ should match a/b/c/d/ with a/b/* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with a/b/*
    ✓ should match a/b/c/d/e/f/z.js with a/b/* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with a/b/* and {nonegate: true}
    ✓ should match a/b/c/z.js with a/b/*
    ✓ should match a/b/c/z.js with a/b/* and {dot: true}
    ✓ should match a/b/c/z.js with a/b/* and {nonegate: true}
    ✓ should match a/bb with a/b/*
    ✓ should match a/bb with a/b/* and {dot: true}
    ✓ should match a/bb with a/b/* and {nonegate: true}
    ✓ should match a/cb with a/b/*
    ✓ should match a/cb with a/b/* and {dot: true}
    ✓ should match a/cb with a/b/* and {nonegate: true}
    ✓ should match abbbz with a/b/*
    ✓ should match abbbz with a/b/* and {dot: true}
    ✓ should match abbbz with a/b/* and {nonegate: true}
    ✓ should match abc with a/b/*
    ✓ should match abc with a/b/* and {dot: true}
    ✓ should match abc with a/b/* and {nonegate: true}
    ✓ should match abd with a/b/*
    ✓ should match abd with a/b/* and {dot: true}
    ✓ should match abd with a/b/* and {nonegate: true}
    ✓ should match z.js with a/b/*
    ✓ should match z.js with a/b/* and {dot: true}
    ✓ should match z.js with a/b/* and {nonegate: true}
    ✓ should match za.js with a/b/*
    ✓ should match za.js with a/b/* and {dot: true}
    ✓ should match za.js with a/b/* and {nonegate: true}
    ✓ should match !a.js with a/b/*
    ✓ should match !a.js with a/b/* and {dot: true}
    ✓ should match !a.js with a/b/* and {nonegate: true}
    ✓ should match !a/b with a/b/*
    ✓ should match !a/b with a/b/* and {dot: true}
    ✓ should match !a/b with a/b/* and {nonegate: true}
    ✓ should match !a/b/ with a/b/*
    ✓ should match !a/b/ with a/b/* and {dot: true}
    ✓ should match !a/b/ with a/b/* and {nonegate: true}
    ✓ should match !a/b/c with a/b/*
    ✓ should match !a/b/c with a/b/* and {dot: true}
    ✓ should match !a/b/c with a/b/* and {nonegate: true}
    ✓ should match !a/b/c/ with a/b/*
    ✓ should match !a/b/c/ with a/b/* and {dot: true}
    ✓ should match !a/b/c/ with a/b/* and {nonegate: true}
    ✓ should match !a/!b with a/b/*
    ✓ should match !a/!b with a/b/* and {dot: true}
    ✓ should match !a/!b with a/b/* and {nonegate: true}
    ✓ should match !a/!b/c with a/b/*
    ✓ should match !a/!b/c with a/b/* and {dot: true}
    ✓ should match !a/!b/c with a/b/* and {nonegate: true}
    ✓ should match !a/!b/c/d with a/b/*
    ✓ should match !a/!b/c/d with a/b/* and {dot: true}
    ✓ should match !a/!b/c/d with a/b/* and {nonegate: true}
    ✓ should match !a/b/.c.md with a/b/*
    ✓ should match !a/b/.c.md with a/b/* and {dot: true}
    ✓ should match !a/b/.c.md with a/b/* and {nonegate: true}
    ✓ should match /a/ with a/b/*
    ✓ should match /a/ with a/b/* and {dot: true}
    ✓ should match /a/ with a/b/* and {nonegate: true}
    ✓ should match /a/b with a/b/*
    ✓ should match /a/b with a/b/* and {dot: true}
    ✓ should match /a/b with a/b/* and {nonegate: true}
    ✓ should match /a/cb with a/b/*
    ✓ should match /a/cb with a/b/* and {dot: true}
    ✓ should match /a/cb with a/b/* and {nonegate: true}
    ✓ should match /a/bb with a/b/*
    ✓ should match /a/bb with a/b/* and {dot: true}
    ✓ should match /a/bb with a/b/* and {nonegate: true}
    ✓ should match /a/b/c with a/b/*
    ✓ should match /a/b/c with a/b/* and {dot: true}
    ✓ should match /a/b/c with a/b/* and {nonegate: true}
    ✓ should match /a/b/c/ with a/b/*
    ✓ should match /a/b/c/ with a/b/* and {dot: true}
    ✓ should match /a/b/c/ with a/b/* and {nonegate: true}
    ✓ should match /a/b/c/d with a/b/*
    ✓ should match /a/b/c/d with a/b/* and {dot: true}
    ✓ should match /a/b/c/d with a/b/* and {nonegate: true}
    ✓ should match /a/b/c/d/ with a/b/*
    ✓ should match /a/b/c/d/ with a/b/* and {dot: true}
    ✓ should match /a/b/c/d/ with a/b/* and {nonegate: true}
    ✓ should match . with a/b/*
    ✓ should match . with a/b/* and {dot: true}
    ✓ should match . with a/b/* and {nonegate: true}
    ✓ should match ./ with a/b/*
    ✓ should match ./ with a/b/* and {dot: true}
    ✓ should match ./ with a/b/* and {nonegate: true}
    ✓ should match .. with a/b/*
    ✓ should match .. with a/b/* and {dot: true}
    ✓ should match .. with a/b/* and {nonegate: true}
    ✓ should match ../c with a/b/*
    ✓ should match ../c with a/b/* and {dot: true}
    ✓ should match ../c with a/b/* and {nonegate: true}
    ✓ should match ../c with a/b/*
    ✓ should match ../c with a/b/* and {dot: true}
    ✓ should match ../c with a/b/* and {nonegate: true}
    ✓ should match ./../c with a/b/*
    ✓ should match ./../c with a/b/* and {dot: true}
    ✓ should match ./../c with a/b/* and {nonegate: true}
    ✓ should match ./a/../c with a/b/*
    ✓ should match ./a/../c with a/b/* and {dot: true}
    ✓ should match ./a/../c with a/b/* and {nonegate: true}
    ✓ should match /.. with a/b/*
    ✓ should match /.. with a/b/* and {dot: true}
    ✓ should match /.. with a/b/* and {nonegate: true}
    ✓ should match /../c with a/b/*
    ✓ should match /../c with a/b/* and {dot: true}
    ✓ should match /../c with a/b/* and {nonegate: true}
    ✓ should match /../.c with a/b/*
    ✓ should match /../.c with a/b/* and {dot: true}
    ✓ should match /../.c with a/b/* and {nonegate: true}
    ✓ should match /../.c/ with a/b/*
    ✓ should match /../.c/ with a/b/* and {dot: true}
    ✓ should match /../.c/ with a/b/* and {nonegate: true}
    ✓ should match /a/../c with a/b/*
    ✓ should match /a/../c with a/b/* and {dot: true}
    ✓ should match /a/../c with a/b/* and {nonegate: true}
    ✓ should match a/../c with a/b/*
    ✓ should match a/../c with a/b/* and {dot: true}
    ✓ should match a/../c with a/b/* and {nonegate: true}
    ✓ should match ../.b/.c with a/b/*
    ✓ should match ../.b/.c with a/b/* and {dot: true}
    ✓ should match ../.b/.c with a/b/* and {nonegate: true}
    ✓ should match ../b/.c with a/b/*
    ✓ should match ../b/.c with a/b/* and {dot: true}
    ✓ should match ../b/.c with a/b/* and {nonegate: true}
    ✓ should match ./.b/.c with a/b/*
    ✓ should match ./.b/.c with a/b/* and {dot: true}
    ✓ should match ./.b/.c with a/b/* and {nonegate: true}
    ✓ should match ./b/.c with a/b/*
    ✓ should match ./b/.c with a/b/* and {dot: true}
    ✓ should match ./b/.c with a/b/* and {nonegate: true}
    ✓ should match .b with a/b/*
    ✓ should match .b with a/b/* and {dot: true}
    ✓ should match .b with a/b/* and {nonegate: true}
    ✓ should match .b.c with a/b/*
    ✓ should match .b.c with a/b/* and {dot: true}
    ✓ should match .b.c with a/b/* and {nonegate: true}
    ✓ should match .b.c/ with a/b/*
    ✓ should match .b.c/ with a/b/* and {dot: true}
    ✓ should match .b.c/ with a/b/* and {nonegate: true}
    ✓ should match .b/ with a/b/*
    ✓ should match .b/ with a/b/* and {dot: true}
    ✓ should match .b/ with a/b/* and {nonegate: true}
    ✓ should match .b/.c with a/b/*
    ✓ should match .b/.c with a/b/* and {dot: true}
    ✓ should match .b/.c with a/b/* and {nonegate: true}
    ✓ should match .b/c with a/b/*
    ✓ should match .b/c with a/b/* and {dot: true}
    ✓ should match .b/c with a/b/* and {nonegate: true}
    ✓ should match b/.c with a/b/*
    ✓ should match b/.c with a/b/* and {dot: true}
    ✓ should match b/.c with a/b/* and {nonegate: true}
    ✓ should match b/.c/ with a/b/*
    ✓ should match b/.c/ with a/b/* and {dot: true}
    ✓ should match b/.c/ with a/b/* and {nonegate: true}
    ✓ should match a/+b/c with a/b/*
    ✓ should match a/+b/c with a/b/* and {dot: true}
    ✓ should match a/+b/c with a/b/* and {nonegate: true}
    ✓ should match +a/+b/c with a/b/*
    ✓ should match +a/+b/c with a/b/* and {dot: true}
    ✓ should match +a/+b/c with a/b/* and {nonegate: true}
    ✓ should match a (foo) with a/b/*
    ✓ should match a (foo) with a/b/* and {dot: true}
    ✓ should match a (foo) with a/b/* and {nonegate: true}
    ✓ should match a (foo)/(bar) with a/b/*
    ✓ should match a (foo)/(bar) with a/b/* and {dot: true}
    ✓ should match a (foo)/(bar) with a/b/* and {nonegate: true}
    ✓ should match a/b/c (1) with a/b/*
    ✓ should match a/b/c (1) with a/b/* and {dot: true}
    ✓ should match a/b/c (1) with a/b/* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with a/b/*
    ✓ should match a/b (2)/c (1) with a/b/* and {dot: true}
    ✓ should match a/b (2)/c (1) with a/b/* and {nonegate: true}
    ✓ should match a/b/c [def] with a/b/*
    ✓ should match a/b/c [def] with a/b/* and {dot: true}
    ✓ should match a/b/c [def] with a/b/* and {nonegate: true}
    ✓ should match a with a/b/c
    ✓ should match a with a/b/c and {dot: true}
    ✓ should match a with a/b/c and {nonegate: true}
    ✓ should match a.md with a/b/c
    ✓ should match a.md with a/b/c and {dot: true}
    ✓ should match a.md with a/b/c and {nonegate: true}
    ✓ should match a.js with a/b/c
    ✓ should match a.js with a/b/c and {dot: true}
    ✓ should match a.js with a/b/c and {nonegate: true}
    ✓ should match a/ with a/b/c
    ✓ should match a/ with a/b/c and {dot: true}
    ✓ should match a/ with a/b/c and {nonegate: true}
    ✓ should match a/b with a/b/c
    ✓ should match a/b with a/b/c and {dot: true}
    ✓ should match a/b with a/b/c and {nonegate: true}
    ✓ should match a/b/.c.md with a/b/c
    ✓ should match a/b/.c.md with a/b/c and {dot: true}
    ✓ should match a/b/.c.md with a/b/c and {nonegate: true}
    ✓ should match a/b/c with a/b/c
    ✓ should match a/b/c with a/b/c and {dot: true}
    ✓ should match a/b/c with a/b/c and {nonegate: true}
    ✓ should match a/b/c.md with a/b/c
    ✓ should match a/b/c.md with a/b/c and {dot: true}
    ✓ should match a/b/c.md with a/b/c and {nonegate: true}
    ✓ should match a/b/c/ with a/b/c
    ✓ should match a/b/c/ with a/b/c and {dot: true}
    ✓ should match a/b/c/ with a/b/c and {nonegate: true}
    ✓ should match a/b/c/d with a/b/c
    ✓ should match a/b/c/d with a/b/c and {dot: true}
    ✓ should match a/b/c/d with a/b/c and {nonegate: true}
    ✓ should match a/b/c/d/ with a/b/c
    ✓ should match a/b/c/d/ with a/b/c and {dot: true}
    ✓ should match a/b/c/d/ with a/b/c and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with a/b/c
    ✓ should match a/b/c/d/e/f/z.js with a/b/c and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with a/b/c and {nonegate: true}
    ✓ should match a/b/c/z.js with a/b/c
    ✓ should match a/b/c/z.js with a/b/c and {dot: true}
    ✓ should match a/b/c/z.js with a/b/c and {nonegate: true}
    ✓ should match a/bb with a/b/c
    ✓ should match a/bb with a/b/c and {dot: true}
    ✓ should match a/bb with a/b/c and {nonegate: true}
    ✓ should match a/cb with a/b/c
    ✓ should match a/cb with a/b/c and {dot: true}
    ✓ should match a/cb with a/b/c and {nonegate: true}
    ✓ should match abbbz with a/b/c
    ✓ should match abbbz with a/b/c and {dot: true}
    ✓ should match abbbz with a/b/c and {nonegate: true}
    ✓ should match abc with a/b/c
    ✓ should match abc with a/b/c and {dot: true}
    ✓ should match abc with a/b/c and {nonegate: true}
    ✓ should match abd with a/b/c
    ✓ should match abd with a/b/c and {dot: true}
    ✓ should match abd with a/b/c and {nonegate: true}
    ✓ should match z.js with a/b/c
    ✓ should match z.js with a/b/c and {dot: true}
    ✓ should match z.js with a/b/c and {nonegate: true}
    ✓ should match za.js with a/b/c
    ✓ should match za.js with a/b/c and {dot: true}
    ✓ should match za.js with a/b/c and {nonegate: true}
    ✓ should match !a.js with a/b/c
    ✓ should match !a.js with a/b/c and {dot: true}
    ✓ should match !a.js with a/b/c and {nonegate: true}
    ✓ should match !a/b with a/b/c
    ✓ should match !a/b with a/b/c and {dot: true}
    ✓ should match !a/b with a/b/c and {nonegate: true}
    ✓ should match !a/b/ with a/b/c
    ✓ should match !a/b/ with a/b/c and {dot: true}
    ✓ should match !a/b/ with a/b/c and {nonegate: true}
    ✓ should match !a/b/c with a/b/c
    ✓ should match !a/b/c with a/b/c and {dot: true}
    ✓ should match !a/b/c with a/b/c and {nonegate: true}
    ✓ should match !a/b/c/ with a/b/c
    ✓ should match !a/b/c/ with a/b/c and {dot: true}
    ✓ should match !a/b/c/ with a/b/c and {nonegate: true}
    ✓ should match !a/!b with a/b/c
    ✓ should match !a/!b with a/b/c and {dot: true}
    ✓ should match !a/!b with a/b/c and {nonegate: true}
    ✓ should match !a/!b/c with a/b/c
    ✓ should match !a/!b/c with a/b/c and {dot: true}
    ✓ should match !a/!b/c with a/b/c and {nonegate: true}
    ✓ should match !a/!b/c/d with a/b/c
    ✓ should match !a/!b/c/d with a/b/c and {dot: true}
    ✓ should match !a/!b/c/d with a/b/c and {nonegate: true}
    ✓ should match !a/b/.c.md with a/b/c
    ✓ should match !a/b/.c.md with a/b/c and {dot: true}
    ✓ should match !a/b/.c.md with a/b/c and {nonegate: true}
    ✓ should match /a/ with a/b/c
    ✓ should match /a/ with a/b/c and {dot: true}
    ✓ should match /a/ with a/b/c and {nonegate: true}
    ✓ should match /a/b with a/b/c
    ✓ should match /a/b with a/b/c and {dot: true}
    ✓ should match /a/b with a/b/c and {nonegate: true}
    ✓ should match /a/cb with a/b/c
    ✓ should match /a/cb with a/b/c and {dot: true}
    ✓ should match /a/cb with a/b/c and {nonegate: true}
    ✓ should match /a/bb with a/b/c
    ✓ should match /a/bb with a/b/c and {dot: true}
    ✓ should match /a/bb with a/b/c and {nonegate: true}
    ✓ should match /a/b/c with a/b/c
    ✓ should match /a/b/c with a/b/c and {dot: true}
    ✓ should match /a/b/c with a/b/c and {nonegate: true}
    ✓ should match /a/b/c/ with a/b/c
    ✓ should match /a/b/c/ with a/b/c and {dot: true}
    ✓ should match /a/b/c/ with a/b/c and {nonegate: true}
    ✓ should match /a/b/c/d with a/b/c
    ✓ should match /a/b/c/d with a/b/c and {dot: true}
    ✓ should match /a/b/c/d with a/b/c and {nonegate: true}
    ✓ should match /a/b/c/d/ with a/b/c
    ✓ should match /a/b/c/d/ with a/b/c and {dot: true}
    ✓ should match /a/b/c/d/ with a/b/c and {nonegate: true}
    ✓ should match . with a/b/c
    ✓ should match . with a/b/c and {dot: true}
    ✓ should match . with a/b/c and {nonegate: true}
    ✓ should match ./ with a/b/c
    ✓ should match ./ with a/b/c and {dot: true}
    ✓ should match ./ with a/b/c and {nonegate: true}
    ✓ should match .. with a/b/c
    ✓ should match .. with a/b/c and {dot: true}
    ✓ should match .. with a/b/c and {nonegate: true}
    ✓ should match ../c with a/b/c
    ✓ should match ../c with a/b/c and {dot: true}
    ✓ should match ../c with a/b/c and {nonegate: true}
    ✓ should match ../c with a/b/c
    ✓ should match ../c with a/b/c and {dot: true}
    ✓ should match ../c with a/b/c and {nonegate: true}
    ✓ should match ./../c with a/b/c
    ✓ should match ./../c with a/b/c and {dot: true}
    ✓ should match ./../c with a/b/c and {nonegate: true}
    ✓ should match ./a/../c with a/b/c
    ✓ should match ./a/../c with a/b/c and {dot: true}
    ✓ should match ./a/../c with a/b/c and {nonegate: true}
    ✓ should match /.. with a/b/c
    ✓ should match /.. with a/b/c and {dot: true}
    ✓ should match /.. with a/b/c and {nonegate: true}
    ✓ should match /../c with a/b/c
    ✓ should match /../c with a/b/c and {dot: true}
    ✓ should match /../c with a/b/c and {nonegate: true}
    ✓ should match /../.c with a/b/c
    ✓ should match /../.c with a/b/c and {dot: true}
    ✓ should match /../.c with a/b/c and {nonegate: true}
    ✓ should match /../.c/ with a/b/c
    ✓ should match /../.c/ with a/b/c and {dot: true}
    ✓ should match /../.c/ with a/b/c and {nonegate: true}
    ✓ should match /a/../c with a/b/c
    ✓ should match /a/../c with a/b/c and {dot: true}
    ✓ should match /a/../c with a/b/c and {nonegate: true}
    ✓ should match a/../c with a/b/c
    ✓ should match a/../c with a/b/c and {dot: true}
    ✓ should match a/../c with a/b/c and {nonegate: true}
    ✓ should match ../.b/.c with a/b/c
    ✓ should match ../.b/.c with a/b/c and {dot: true}
    ✓ should match ../.b/.c with a/b/c and {nonegate: true}
    ✓ should match ../b/.c with a/b/c
    ✓ should match ../b/.c with a/b/c and {dot: true}
    ✓ should match ../b/.c with a/b/c and {nonegate: true}
    ✓ should match ./.b/.c with a/b/c
    ✓ should match ./.b/.c with a/b/c and {dot: true}
    ✓ should match ./.b/.c with a/b/c and {nonegate: true}
    ✓ should match ./b/.c with a/b/c
    ✓ should match ./b/.c with a/b/c and {dot: true}
    ✓ should match ./b/.c with a/b/c and {nonegate: true}
    ✓ should match .b with a/b/c
    ✓ should match .b with a/b/c and {dot: true}
    ✓ should match .b with a/b/c and {nonegate: true}
    ✓ should match .b.c with a/b/c
    ✓ should match .b.c with a/b/c and {dot: true}
    ✓ should match .b.c with a/b/c and {nonegate: true}
    ✓ should match .b.c/ with a/b/c
    ✓ should match .b.c/ with a/b/c and {dot: true}
    ✓ should match .b.c/ with a/b/c and {nonegate: true}
    ✓ should match .b/ with a/b/c
    ✓ should match .b/ with a/b/c and {dot: true}
    ✓ should match .b/ with a/b/c and {nonegate: true}
    ✓ should match .b/.c with a/b/c
    ✓ should match .b/.c with a/b/c and {dot: true}
    ✓ should match .b/.c with a/b/c and {nonegate: true}
    ✓ should match .b/c with a/b/c
    ✓ should match .b/c with a/b/c and {dot: true}
    ✓ should match .b/c with a/b/c and {nonegate: true}
    ✓ should match b/.c with a/b/c
    ✓ should match b/.c with a/b/c and {dot: true}
    ✓ should match b/.c with a/b/c and {nonegate: true}
    ✓ should match b/.c/ with a/b/c
    ✓ should match b/.c/ with a/b/c and {dot: true}
    ✓ should match b/.c/ with a/b/c and {nonegate: true}
    ✓ should match a/+b/c with a/b/c
    ✓ should match a/+b/c with a/b/c and {dot: true}
    ✓ should match a/+b/c with a/b/c and {nonegate: true}
    ✓ should match +a/+b/c with a/b/c
    ✓ should match +a/+b/c with a/b/c and {dot: true}
    ✓ should match +a/+b/c with a/b/c and {nonegate: true}
    ✓ should match a (foo) with a/b/c
    ✓ should match a (foo) with a/b/c and {dot: true}
    ✓ should match a (foo) with a/b/c and {nonegate: true}
    ✓ should match a (foo)/(bar) with a/b/c
    ✓ should match a (foo)/(bar) with a/b/c and {dot: true}
    ✓ should match a (foo)/(bar) with a/b/c and {nonegate: true}
    ✓ should match a/b/c (1) with a/b/c
    ✓ should match a/b/c (1) with a/b/c and {dot: true}
    ✓ should match a/b/c (1) with a/b/c and {nonegate: true}
    ✓ should match a/b (2)/c (1) with a/b/c
    ✓ should match a/b (2)/c (1) with a/b/c and {dot: true}
    ✓ should match a/b (2)/c (1) with a/b/c and {nonegate: true}
    ✓ should match a/b/c [def] with a/b/c
    ✓ should match a/b/c [def] with a/b/c and {dot: true}
    ✓ should match a/b/c [def] with a/b/c and {nonegate: true}
    ✓ should match a with a/b/c/*
    ✓ should match a with a/b/c/* and {dot: true}
    ✓ should match a with a/b/c/* and {nonegate: true}
    ✓ should match a.md with a/b/c/*
    ✓ should match a.md with a/b/c/* and {dot: true}
    ✓ should match a.md with a/b/c/* and {nonegate: true}
    ✓ should match a.js with a/b/c/*
    ✓ should match a.js with a/b/c/* and {dot: true}
    ✓ should match a.js with a/b/c/* and {nonegate: true}
    ✓ should match a/ with a/b/c/*
    ✓ should match a/ with a/b/c/* and {dot: true}
    ✓ should match a/ with a/b/c/* and {nonegate: true}
    ✓ should match a/b with a/b/c/*
    ✓ should match a/b with a/b/c/* and {dot: true}
    ✓ should match a/b with a/b/c/* and {nonegate: true}
    ✓ should match a/b/.c.md with a/b/c/*
    ✓ should match a/b/.c.md with a/b/c/* and {dot: true}
    ✓ should match a/b/.c.md with a/b/c/* and {nonegate: true}
    ✓ should match a/b/c with a/b/c/*
    ✓ should match a/b/c with a/b/c/* and {dot: true}
    ✓ should match a/b/c with a/b/c/* and {nonegate: true}
    ✓ should match a/b/c.md with a/b/c/*
    ✓ should match a/b/c.md with a/b/c/* and {dot: true}
    ✓ should match a/b/c.md with a/b/c/* and {nonegate: true}
    ✓ should match a/b/c/ with a/b/c/*
    ✓ should match a/b/c/ with a/b/c/* and {dot: true}
    ✓ should match a/b/c/ with a/b/c/* and {nonegate: true}
    ✓ should match a/b/c/d with a/b/c/*
    ✓ should match a/b/c/d with a/b/c/* and {dot: true}
    ✓ should match a/b/c/d with a/b/c/* and {nonegate: true}
    ✓ should match a/b/c/d/ with a/b/c/*
    ✓ should match a/b/c/d/ with a/b/c/* and {dot: true}
    ✓ should match a/b/c/d/ with a/b/c/* and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with a/b/c/*
    ✓ should match a/b/c/d/e/f/z.js with a/b/c/* and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with a/b/c/* and {nonegate: true}
    ✓ should match a/b/c/z.js with a/b/c/*
    ✓ should match a/b/c/z.js with a/b/c/* and {dot: true}
    ✓ should match a/b/c/z.js with a/b/c/* and {nonegate: true}
    ✓ should match a/bb with a/b/c/*
    ✓ should match a/bb with a/b/c/* and {dot: true}
    ✓ should match a/bb with a/b/c/* and {nonegate: true}
    ✓ should match a/cb with a/b/c/*
    ✓ should match a/cb with a/b/c/* and {dot: true}
    ✓ should match a/cb with a/b/c/* and {nonegate: true}
    ✓ should match abbbz with a/b/c/*
    ✓ should match abbbz with a/b/c/* and {dot: true}
    ✓ should match abbbz with a/b/c/* and {nonegate: true}
    ✓ should match abc with a/b/c/*
    ✓ should match abc with a/b/c/* and {dot: true}
    ✓ should match abc with a/b/c/* and {nonegate: true}
    ✓ should match abd with a/b/c/*
    ✓ should match abd with a/b/c/* and {dot: true}
    ✓ should match abd with a/b/c/* and {nonegate: true}
    ✓ should match z.js with a/b/c/*
    ✓ should match z.js with a/b/c/* and {dot: true}
    ✓ should match z.js with a/b/c/* and {nonegate: true}
    ✓ should match za.js with a/b/c/*
    ✓ should match za.js with a/b/c/* and {dot: true}
    ✓ should match za.js with a/b/c/* and {nonegate: true}
    ✓ should match !a.js with a/b/c/*
    ✓ should match !a.js with a/b/c/* and {dot: true}
    ✓ should match !a.js with a/b/c/* and {nonegate: true}
    ✓ should match !a/b with a/b/c/*
    ✓ should match !a/b with a/b/c/* and {dot: true}
    ✓ should match !a/b with a/b/c/* and {nonegate: true}
    ✓ should match !a/b/ with a/b/c/*
    ✓ should match !a/b/ with a/b/c/* and {dot: true}
    ✓ should match !a/b/ with a/b/c/* and {nonegate: true}
    ✓ should match !a/b/c with a/b/c/*
    ✓ should match !a/b/c with a/b/c/* and {dot: true}
    ✓ should match !a/b/c with a/b/c/* and {nonegate: true}
    ✓ should match !a/b/c/ with a/b/c/*
    ✓ should match !a/b/c/ with a/b/c/* and {dot: true}
    ✓ should match !a/b/c/ with a/b/c/* and {nonegate: true}
    ✓ should match !a/!b with a/b/c/*
    ✓ should match !a/!b with a/b/c/* and {dot: true}
    ✓ should match !a/!b with a/b/c/* and {nonegate: true}
    ✓ should match !a/!b/c with a/b/c/*
    ✓ should match !a/!b/c with a/b/c/* and {dot: true}
    ✓ should match !a/!b/c with a/b/c/* and {nonegate: true}
    ✓ should match !a/!b/c/d with a/b/c/*
    ✓ should match !a/!b/c/d with a/b/c/* and {dot: true}
    ✓ should match !a/!b/c/d with a/b/c/* and {nonegate: true}
    ✓ should match !a/b/.c.md with a/b/c/*
    ✓ should match !a/b/.c.md with a/b/c/* and {dot: true}
    ✓ should match !a/b/.c.md with a/b/c/* and {nonegate: true}
    ✓ should match /a/ with a/b/c/*
    ✓ should match /a/ with a/b/c/* and {dot: true}
    ✓ should match /a/ with a/b/c/* and {nonegate: true}
    ✓ should match /a/b with a/b/c/*
    ✓ should match /a/b with a/b/c/* and {dot: true}
    ✓ should match /a/b with a/b/c/* and {nonegate: true}
    ✓ should match /a/cb with a/b/c/*
    ✓ should match /a/cb with a/b/c/* and {dot: true}
    ✓ should match /a/cb with a/b/c/* and {nonegate: true}
    ✓ should match /a/bb with a/b/c/*
    ✓ should match /a/bb with a/b/c/* and {dot: true}
    ✓ should match /a/bb with a/b/c/* and {nonegate: true}
    ✓ should match /a/b/c with a/b/c/*
    ✓ should match /a/b/c with a/b/c/* and {dot: true}
    ✓ should match /a/b/c with a/b/c/* and {nonegate: true}
    ✓ should match /a/b/c/ with a/b/c/*
    ✓ should match /a/b/c/ with a/b/c/* and {dot: true}
    ✓ should match /a/b/c/ with a/b/c/* and {nonegate: true}
    ✓ should match /a/b/c/d with a/b/c/*
    ✓ should match /a/b/c/d with a/b/c/* and {dot: true}
    ✓ should match /a/b/c/d with a/b/c/* and {nonegate: true}
    ✓ should match /a/b/c/d/ with a/b/c/*
    ✓ should match /a/b/c/d/ with a/b/c/* and {dot: true}
    ✓ should match /a/b/c/d/ with a/b/c/* and {nonegate: true}
    ✓ should match . with a/b/c/*
    ✓ should match . with a/b/c/* and {dot: true}
    ✓ should match . with a/b/c/* and {nonegate: true}
    ✓ should match ./ with a/b/c/*
    ✓ should match ./ with a/b/c/* and {dot: true}
    ✓ should match ./ with a/b/c/* and {nonegate: true}
    ✓ should match .. with a/b/c/*
    ✓ should match .. with a/b/c/* and {dot: true}
    ✓ should match .. with a/b/c/* and {nonegate: true}
    ✓ should match ../c with a/b/c/*
    ✓ should match ../c with a/b/c/* and {dot: true}
    ✓ should match ../c with a/b/c/* and {nonegate: true}
    ✓ should match ../c with a/b/c/*
    ✓ should match ../c with a/b/c/* and {dot: true}
    ✓ should match ../c with a/b/c/* and {nonegate: true}
    ✓ should match ./../c with a/b/c/*
    ✓ should match ./../c with a/b/c/* and {dot: true}
    ✓ should match ./../c with a/b/c/* and {nonegate: true}
    ✓ should match ./a/../c with a/b/c/*
    ✓ should match ./a/../c with a/b/c/* and {dot: true}
    ✓ should match ./a/../c with a/b/c/* and {nonegate: true}
    ✓ should match /.. with a/b/c/*
    ✓ should match /.. with a/b/c/* and {dot: true}
    ✓ should match /.. with a/b/c/* and {nonegate: true}
    ✓ should match /../c with a/b/c/*
    ✓ should match /../c with a/b/c/* and {dot: true}
    ✓ should match /../c with a/b/c/* and {nonegate: true}
    ✓ should match /../.c with a/b/c/*
    ✓ should match /../.c with a/b/c/* and {dot: true}
    ✓ should match /../.c with a/b/c/* and {nonegate: true}
    ✓ should match /../.c/ with a/b/c/*
    ✓ should match /../.c/ with a/b/c/* and {dot: true}
    ✓ should match /../.c/ with a/b/c/* and {nonegate: true}
    ✓ should match /a/../c with a/b/c/*
    ✓ should match /a/../c with a/b/c/* and {dot: true}
    ✓ should match /a/../c with a/b/c/* and {nonegate: true}
    ✓ should match a/../c with a/b/c/*
    ✓ should match a/../c with a/b/c/* and {dot: true}
    ✓ should match a/../c with a/b/c/* and {nonegate: true}
    ✓ should match ../.b/.c with a/b/c/*
    ✓ should match ../.b/.c with a/b/c/* and {dot: true}
    ✓ should match ../.b/.c with a/b/c/* and {nonegate: true}
    ✓ should match ../b/.c with a/b/c/*
    ✓ should match ../b/.c with a/b/c/* and {dot: true}
    ✓ should match ../b/.c with a/b/c/* and {nonegate: true}
    ✓ should match ./.b/.c with a/b/c/*
    ✓ should match ./.b/.c with a/b/c/* and {dot: true}
    ✓ should match ./.b/.c with a/b/c/* and {nonegate: true}
    ✓ should match ./b/.c with a/b/c/*
    ✓ should match ./b/.c with a/b/c/* and {dot: true}
    ✓ should match ./b/.c with a/b/c/* and {nonegate: true}
    ✓ should match .b with a/b/c/*
    ✓ should match .b with a/b/c/* and {dot: true}
    ✓ should match .b with a/b/c/* and {nonegate: true}
    ✓ should match .b.c with a/b/c/*
    ✓ should match .b.c with a/b/c/* and {dot: true}
    ✓ should match .b.c with a/b/c/* and {nonegate: true}
    ✓ should match .b.c/ with a/b/c/*
    ✓ should match .b.c/ with a/b/c/* and {dot: true}
    ✓ should match .b.c/ with a/b/c/* and {nonegate: true}
    ✓ should match .b/ with a/b/c/*
    ✓ should match .b/ with a/b/c/* and {dot: true}
    ✓ should match .b/ with a/b/c/* and {nonegate: true}
    ✓ should match .b/.c with a/b/c/*
    ✓ should match .b/.c with a/b/c/* and {dot: true}
    ✓ should match .b/.c with a/b/c/* and {nonegate: true}
    ✓ should match .b/c with a/b/c/*
    ✓ should match .b/c with a/b/c/* and {dot: true}
    ✓ should match .b/c with a/b/c/* and {nonegate: true}
    ✓ should match b/.c with a/b/c/*
    ✓ should match b/.c with a/b/c/* and {dot: true}
    ✓ should match b/.c with a/b/c/* and {nonegate: true}
    ✓ should match b/.c/ with a/b/c/*
    ✓ should match b/.c/ with a/b/c/* and {dot: true}
    ✓ should match b/.c/ with a/b/c/* and {nonegate: true}
    ✓ should match a/+b/c with a/b/c/*
    ✓ should match a/+b/c with a/b/c/* and {dot: true}
    ✓ should match a/+b/c with a/b/c/* and {nonegate: true}
    ✓ should match +a/+b/c with a/b/c/*
    ✓ should match +a/+b/c with a/b/c/* and {dot: true}
    ✓ should match +a/+b/c with a/b/c/* and {nonegate: true}
    ✓ should match a (foo) with a/b/c/*
    ✓ should match a (foo) with a/b/c/* and {dot: true}
    ✓ should match a (foo) with a/b/c/* and {nonegate: true}
    ✓ should match a (foo)/(bar) with a/b/c/*
    ✓ should match a (foo)/(bar) with a/b/c/* and {dot: true}
    ✓ should match a (foo)/(bar) with a/b/c/* and {nonegate: true}
    ✓ should match a/b/c (1) with a/b/c/*
    ✓ should match a/b/c (1) with a/b/c/* and {dot: true}
    ✓ should match a/b/c (1) with a/b/c/* and {nonegate: true}
    ✓ should match a/b (2)/c (1) with a/b/c/*
    ✓ should match a/b (2)/c (1) with a/b/c/* and {dot: true}
    ✓ should match a/b (2)/c (1) with a/b/c/* and {nonegate: true}
    ✓ should match a/b/c [def] with a/b/c/*
    ✓ should match a/b/c [def] with a/b/c/* and {dot: true}
    ✓ should match a/b/c [def] with a/b/c/* and {nonegate: true}
    ✓ should match a with a/b/c/**/*.js
    ✓ should match a with a/b/c/**/*.js and {dot: true}
    ✓ should match a with a/b/c/**/*.js and {nonegate: true}
    ✓ should match a.md with a/b/c/**/*.js
    ✓ should match a.md with a/b/c/**/*.js and {dot: true}
    ✓ should match a.md with a/b/c/**/*.js and {nonegate: true}
    ✓ should match a.js with a/b/c/**/*.js
    ✓ should match a.js with a/b/c/**/*.js and {dot: true}
    ✓ should match a.js with a/b/c/**/*.js and {nonegate: true}
    ✓ should match a/ with a/b/c/**/*.js
    ✓ should match a/ with a/b/c/**/*.js and {dot: true}
    ✓ should match a/ with a/b/c/**/*.js and {nonegate: true}
    ✓ should match a/b with a/b/c/**/*.js
    ✓ should match a/b with a/b/c/**/*.js and {dot: true}
    ✓ should match a/b with a/b/c/**/*.js and {nonegate: true}
    ✓ should match a/b/.c.md with a/b/c/**/*.js
    ✓ should match a/b/.c.md with a/b/c/**/*.js and {dot: true}
    ✓ should match a/b/.c.md with a/b/c/**/*.js and {nonegate: true}
    ✓ should match a/b/c with a/b/c/**/*.js
    ✓ should match a/b/c with a/b/c/**/*.js and {dot: true}
    ✓ should match a/b/c with a/b/c/**/*.js and {nonegate: true}
    ✓ should match a/b/c.md with a/b/c/**/*.js
    ✓ should match a/b/c.md with a/b/c/**/*.js and {dot: true}
    ✓ should match a/b/c.md with a/b/c/**/*.js and {nonegate: true}
    ✓ should match a/b/c/ with a/b/c/**/*.js
    ✓ should match a/b/c/ with a/b/c/**/*.js and {dot: true}
    ✓ should match a/b/c/ with a/b/c/**/*.js and {nonegate: true}
    ✓ should match a/b/c/d with a/b/c/**/*.js
    ✓ should match a/b/c/d with a/b/c/**/*.js and {dot: true}
    ✓ should match a/b/c/d with a/b/c/**/*.js and {nonegate: true}
    ✓ should match a/b/c/d/ with a/b/c/**/*.js
    ✓ should match a/b/c/d/ with a/b/c/**/*.js and {dot: true}
    ✓ should match a/b/c/d/ with a/b/c/**/*.js and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with a/b/c/**/*.js
    ✓ should match a/b/c/d/e/f/z.js with a/b/c/**/*.js and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with a/b/c/**/*.js and {nonegate: true}
    ✓ should match a/b/c/z.js with a/b/c/**/*.js
    ✓ should match a/b/c/z.js with a/b/c/**/*.js and {dot: true}
    ✓ should match a/b/c/z.js with a/b/c/**/*.js and {nonegate: true}
    ✓ should match a/bb with a/b/c/**/*.js
    ✓ should match a/bb with a/b/c/**/*.js and {dot: true}
    ✓ should match a/bb with a/b/c/**/*.js and {nonegate: true}
    ✓ should match a/cb with a/b/c/**/*.js
    ✓ should match a/cb with a/b/c/**/*.js and {dot: true}
    ✓ should match a/cb with a/b/c/**/*.js and {nonegate: true}
    ✓ should match abbbz with a/b/c/**/*.js
    ✓ should match abbbz with a/b/c/**/*.js and {dot: true}
    ✓ should match abbbz with a/b/c/**/*.js and {nonegate: true}
    ✓ should match abc with a/b/c/**/*.js
    ✓ should match abc with a/b/c/**/*.js and {dot: true}
    ✓ should match abc with a/b/c/**/*.js and {nonegate: true}
    ✓ should match abd with a/b/c/**/*.js
    ✓ should match abd with a/b/c/**/*.js and {dot: true}
    ✓ should match abd with a/b/c/**/*.js and {nonegate: true}
    ✓ should match z.js with a/b/c/**/*.js
    ✓ should match z.js with a/b/c/**/*.js and {dot: true}
    ✓ should match z.js with a/b/c/**/*.js and {nonegate: true}
    ✓ should match za.js with a/b/c/**/*.js
    ✓ should match za.js with a/b/c/**/*.js and {dot: true}
    ✓ should match za.js with a/b/c/**/*.js and {nonegate: true}
    ✓ should match !a.js with a/b/c/**/*.js
    ✓ should match !a.js with a/b/c/**/*.js and {dot: true}
    ✓ should match !a.js with a/b/c/**/*.js and {nonegate: true}
    ✓ should match !a/b with a/b/c/**/*.js
    ✓ should match !a/b with a/b/c/**/*.js and {dot: true}
    ✓ should match !a/b with a/b/c/**/*.js and {nonegate: true}
    ✓ should match !a/b/ with a/b/c/**/*.js
    ✓ should match !a/b/ with a/b/c/**/*.js and {dot: true}
    ✓ should match !a/b/ with a/b/c/**/*.js and {nonegate: true}
    ✓ should match !a/b/c with a/b/c/**/*.js
    ✓ should match !a/b/c with a/b/c/**/*.js and {dot: true}
    ✓ should match !a/b/c with a/b/c/**/*.js and {nonegate: true}
    ✓ should match !a/b/c/ with a/b/c/**/*.js
    ✓ should match !a/b/c/ with a/b/c/**/*.js and {dot: true}
    ✓ should match !a/b/c/ with a/b/c/**/*.js and {nonegate: true}
    ✓ should match !a/!b with a/b/c/**/*.js
    ✓ should match !a/!b with a/b/c/**/*.js and {dot: true}
    ✓ should match !a/!b with a/b/c/**/*.js and {nonegate: true}
    ✓ should match !a/!b/c with a/b/c/**/*.js
    ✓ should match !a/!b/c with a/b/c/**/*.js and {dot: true}
    ✓ should match !a/!b/c with a/b/c/**/*.js and {nonegate: true}
    ✓ should match !a/!b/c/d with a/b/c/**/*.js
    ✓ should match !a/!b/c/d with a/b/c/**/*.js and {dot: true}
    ✓ should match !a/!b/c/d with a/b/c/**/*.js and {nonegate: true}
    ✓ should match !a/b/.c.md with a/b/c/**/*.js
    ✓ should match !a/b/.c.md with a/b/c/**/*.js and {dot: true}
    ✓ should match !a/b/.c.md with a/b/c/**/*.js and {nonegate: true}
    ✓ should match /a/ with a/b/c/**/*.js
    ✓ should match /a/ with a/b/c/**/*.js and {dot: true}
    ✓ should match /a/ with a/b/c/**/*.js and {nonegate: true}
    ✓ should match /a/b with a/b/c/**/*.js
    ✓ should match /a/b with a/b/c/**/*.js and {dot: true}
    ✓ should match /a/b with a/b/c/**/*.js and {nonegate: true}
    ✓ should match /a/cb with a/b/c/**/*.js
    ✓ should match /a/cb with a/b/c/**/*.js and {dot: true}
    ✓ should match /a/cb with a/b/c/**/*.js and {nonegate: true}
    ✓ should match /a/bb with a/b/c/**/*.js
    ✓ should match /a/bb with a/b/c/**/*.js and {dot: true}
    ✓ should match /a/bb with a/b/c/**/*.js and {nonegate: true}
    ✓ should match /a/b/c with a/b/c/**/*.js
    ✓ should match /a/b/c with a/b/c/**/*.js and {dot: true}
    ✓ should match /a/b/c with a/b/c/**/*.js and {nonegate: true}
    ✓ should match /a/b/c/ with a/b/c/**/*.js
    ✓ should match /a/b/c/ with a/b/c/**/*.js and {dot: true}
    ✓ should match /a/b/c/ with a/b/c/**/*.js and {nonegate: true}
    ✓ should match /a/b/c/d with a/b/c/**/*.js
    ✓ should match /a/b/c/d with a/b/c/**/*.js and {dot: true}
    ✓ should match /a/b/c/d with a/b/c/**/*.js and {nonegate: true}
    ✓ should match /a/b/c/d/ with a/b/c/**/*.js
    ✓ should match /a/b/c/d/ with a/b/c/**/*.js and {dot: true}
    ✓ should match /a/b/c/d/ with a/b/c/**/*.js and {nonegate: true}
    ✓ should match . with a/b/c/**/*.js
    ✓ should match . with a/b/c/**/*.js and {dot: true}
    ✓ should match . with a/b/c/**/*.js and {nonegate: true}
    ✓ should match ./ with a/b/c/**/*.js
    ✓ should match ./ with a/b/c/**/*.js and {dot: true}
    ✓ should match ./ with a/b/c/**/*.js and {nonegate: true}
    ✓ should match .. with a/b/c/**/*.js
    ✓ should match .. with a/b/c/**/*.js and {dot: true}
    ✓ should match .. with a/b/c/**/*.js and {nonegate: true}
    ✓ should match ../c with a/b/c/**/*.js
    ✓ should match ../c with a/b/c/**/*.js and {dot: true}
    ✓ should match ../c with a/b/c/**/*.js and {nonegate: true}
    ✓ should match ../c with a/b/c/**/*.js
    ✓ should match ../c with a/b/c/**/*.js and {dot: true}
    ✓ should match ../c with a/b/c/**/*.js and {nonegate: true}
    ✓ should match ./../c with a/b/c/**/*.js
    ✓ should match ./../c with a/b/c/**/*.js and {dot: true}
    ✓ should match ./../c with a/b/c/**/*.js and {nonegate: true}
    ✓ should match ./a/../c with a/b/c/**/*.js
    ✓ should match ./a/../c with a/b/c/**/*.js and {dot: true}
    ✓ should match ./a/../c with a/b/c/**/*.js and {nonegate: true}
    ✓ should match /.. with a/b/c/**/*.js
    ✓ should match /.. with a/b/c/**/*.js and {dot: true}
    ✓ should match /.. with a/b/c/**/*.js and {nonegate: true}
    ✓ should match /../c with a/b/c/**/*.js
    ✓ should match /../c with a/b/c/**/*.js and {dot: true}
    ✓ should match /../c with a/b/c/**/*.js and {nonegate: true}
    ✓ should match /../.c with a/b/c/**/*.js
    ✓ should match /../.c with a/b/c/**/*.js and {dot: true}
    ✓ should match /../.c with a/b/c/**/*.js and {nonegate: true}
    ✓ should match /../.c/ with a/b/c/**/*.js
    ✓ should match /../.c/ with a/b/c/**/*.js and {dot: true}
    ✓ should match /../.c/ with a/b/c/**/*.js and {nonegate: true}
    ✓ should match /a/../c with a/b/c/**/*.js
    ✓ should match /a/../c with a/b/c/**/*.js and {dot: true}
    ✓ should match /a/../c with a/b/c/**/*.js and {nonegate: true}
    ✓ should match a/../c with a/b/c/**/*.js
    ✓ should match a/../c with a/b/c/**/*.js and {dot: true}
    ✓ should match a/../c with a/b/c/**/*.js and {nonegate: true}
    ✓ should match ../.b/.c with a/b/c/**/*.js
    ✓ should match ../.b/.c with a/b/c/**/*.js and {dot: true}
    ✓ should match ../.b/.c with a/b/c/**/*.js and {nonegate: true}
    ✓ should match ../b/.c with a/b/c/**/*.js
    ✓ should match ../b/.c with a/b/c/**/*.js and {dot: true}
    ✓ should match ../b/.c with a/b/c/**/*.js and {nonegate: true}
    ✓ should match ./.b/.c with a/b/c/**/*.js
    ✓ should match ./.b/.c with a/b/c/**/*.js and {dot: true}
    ✓ should match ./.b/.c with a/b/c/**/*.js and {nonegate: true}
    ✓ should match ./b/.c with a/b/c/**/*.js
    ✓ should match ./b/.c with a/b/c/**/*.js and {dot: true}
    ✓ should match ./b/.c with a/b/c/**/*.js and {nonegate: true}
    ✓ should match .b with a/b/c/**/*.js
    ✓ should match .b with a/b/c/**/*.js and {dot: true}
    ✓ should match .b with a/b/c/**/*.js and {nonegate: true}
    ✓ should match .b.c with a/b/c/**/*.js
    ✓ should match .b.c with a/b/c/**/*.js and {dot: true}
    ✓ should match .b.c with a/b/c/**/*.js and {nonegate: true}
    ✓ should match .b.c/ with a/b/c/**/*.js
    ✓ should match .b.c/ with a/b/c/**/*.js and {dot: true}
    ✓ should match .b.c/ with a/b/c/**/*.js and {nonegate: true}
    ✓ should match .b/ with a/b/c/**/*.js
    ✓ should match .b/ with a/b/c/**/*.js and {dot: true}
    ✓ should match .b/ with a/b/c/**/*.js and {nonegate: true}
    ✓ should match .b/.c with a/b/c/**/*.js
    ✓ should match .b/.c with a/b/c/**/*.js and {dot: true}
    ✓ should match .b/.c with a/b/c/**/*.js and {nonegate: true}
    ✓ should match .b/c with a/b/c/**/*.js
    ✓ should match .b/c with a/b/c/**/*.js and {dot: true}
    ✓ should match .b/c with a/b/c/**/*.js and {nonegate: true}
    ✓ should match b/.c with a/b/c/**/*.js
    ✓ should match b/.c with a/b/c/**/*.js and {dot: true}
    ✓ should match b/.c with a/b/c/**/*.js and {nonegate: true}
    ✓ should match b/.c/ with a/b/c/**/*.js
    ✓ should match b/.c/ with a/b/c/**/*.js and {dot: true}
    ✓ should match b/.c/ with a/b/c/**/*.js and {nonegate: true}
    ✓ should match a/+b/c with a/b/c/**/*.js
    ✓ should match a/+b/c with a/b/c/**/*.js and {dot: true}
    ✓ should match a/+b/c with a/b/c/**/*.js and {nonegate: true}
    ✓ should match +a/+b/c with a/b/c/**/*.js
    ✓ should match +a/+b/c with a/b/c/**/*.js and {dot: true}
    ✓ should match +a/+b/c with a/b/c/**/*.js and {nonegate: true}
    ✓ should match a (foo) with a/b/c/**/*.js
    ✓ should match a (foo) with a/b/c/**/*.js and {dot: true}
    ✓ should match a (foo) with a/b/c/**/*.js and {nonegate: true}
    ✓ should match a (foo)/(bar) with a/b/c/**/*.js
    ✓ should match a (foo)/(bar) with a/b/c/**/*.js and {dot: true}
    ✓ should match a (foo)/(bar) with a/b/c/**/*.js and {nonegate: true}
    ✓ should match a/b/c (1) with a/b/c/**/*.js
    ✓ should match a/b/c (1) with a/b/c/**/*.js and {dot: true}
    ✓ should match a/b/c (1) with a/b/c/**/*.js and {nonegate: true}
    ✓ should match a/b (2)/c (1) with a/b/c/**/*.js
    ✓ should match a/b (2)/c (1) with a/b/c/**/*.js and {dot: true}
    ✓ should match a/b (2)/c (1) with a/b/c/**/*.js and {nonegate: true}
    ✓ should match a/b/c [def] with a/b/c/**/*.js
    ✓ should match a/b/c [def] with a/b/c/**/*.js and {dot: true}
    ✓ should match a/b/c [def] with a/b/c/**/*.js and {nonegate: true}
    ✓ should match a with a/b/c/*.js
    ✓ should match a with a/b/c/*.js and {dot: true}
    ✓ should match a with a/b/c/*.js and {nonegate: true}
    ✓ should match a.md with a/b/c/*.js
    ✓ should match a.md with a/b/c/*.js and {dot: true}
    ✓ should match a.md with a/b/c/*.js and {nonegate: true}
    ✓ should match a.js with a/b/c/*.js
    ✓ should match a.js with a/b/c/*.js and {dot: true}
    ✓ should match a.js with a/b/c/*.js and {nonegate: true}
    ✓ should match a/ with a/b/c/*.js
    ✓ should match a/ with a/b/c/*.js and {dot: true}
    ✓ should match a/ with a/b/c/*.js and {nonegate: true}
    ✓ should match a/b with a/b/c/*.js
    ✓ should match a/b with a/b/c/*.js and {dot: true}
    ✓ should match a/b with a/b/c/*.js and {nonegate: true}
    ✓ should match a/b/.c.md with a/b/c/*.js
    ✓ should match a/b/.c.md with a/b/c/*.js and {dot: true}
    ✓ should match a/b/.c.md with a/b/c/*.js and {nonegate: true}
    ✓ should match a/b/c with a/b/c/*.js
    ✓ should match a/b/c with a/b/c/*.js and {dot: true}
    ✓ should match a/b/c with a/b/c/*.js and {nonegate: true}
    ✓ should match a/b/c.md with a/b/c/*.js
    ✓ should match a/b/c.md with a/b/c/*.js and {dot: true}
    ✓ should match a/b/c.md with a/b/c/*.js and {nonegate: true}
    ✓ should match a/b/c/ with a/b/c/*.js
    ✓ should match a/b/c/ with a/b/c/*.js and {dot: true}
    ✓ should match a/b/c/ with a/b/c/*.js and {nonegate: true}
    ✓ should match a/b/c/d with a/b/c/*.js
    ✓ should match a/b/c/d with a/b/c/*.js and {dot: true}
    ✓ should match a/b/c/d with a/b/c/*.js and {nonegate: true}
    ✓ should match a/b/c/d/ with a/b/c/*.js
    ✓ should match a/b/c/d/ with a/b/c/*.js and {dot: true}
    ✓ should match a/b/c/d/ with a/b/c/*.js and {nonegate: true}
    ✓ should match a/b/c/d/e/f/z.js with a/b/c/*.js
    ✓ should match a/b/c/d/e/f/z.js with a/b/c/*.js and {dot: true}
    ✓ should match a/b/c/d/e/f/z.js with a/b/c/*.js and {nonegate: true}
    ✓ should match a/b/c/z.js with a/b/c/*.js
    ✓ should match a/b/c/z.js with a/b/c/*.js and {dot: true}
    ✓ should match a/b/c/z.js with a/b/c/*.js and {nonegate: true}
    ✓ should match a/bb with a/b/c/*.js
    ✓ should match a/bb with a/b/c/*.js and {dot: true}
    ✓ should match a/bb with a/b/c/*.js and {nonegate: true}
    ✓ should match a/cb with a/b/c/*.js
    ✓ should match a/cb with a/b/c/*.js and {dot: true}
    ✓ should match a/cb with a/b/c/*.js and {nonegate: true}
    ✓ should match abbbz with a/b/c/*.js
    ✓ should match abbbz with a/b/c/*.js and {dot: true}
    ✓ should match abbbz with a/b/c/*.js and {nonegate: true}
    ✓ should match abc with a/b/c/*.js
    ✓ should match abc with a/b/c/*.js and {dot: true}
    ✓ should match abc with a/b/c/*.js and {nonegate: true}
    ✓ should match abd with a/b/c/*.js
    ✓ should match abd with a/b/c/*.js and {dot: true}
    ✓ should match abd with a/b/c/*.js and {nonegate: true}
    ✓ should match z.js with a/b/c/*.js
    ✓ should match z.js with a/b/c/*.js and {dot: true}
    ✓ should match z.js with a/b/c/*.js and {nonegate: true}
    ✓ should match za.js with a/b/c/*.js
    ✓ should match za.js with a/b/c/*.js and {dot: true}
    ✓ should match za.js with a/b/c/*.js and {nonegate: true}
    ✓ should match !a.js with a/b/c/*.js
    ✓ should match !a.js with a/b/c/*.js and {dot: true}
    ✓ should match !a.js with a/b/c/*.js and {nonegate: true}
    ✓ should match !a/b with a/b/c/*.js
    ✓ should match !a/b with a/b/c/*.js and {dot: true}
    ✓ should match !a/b with a/b/c/*.js and {nonegate: true}
    ✓ should match !a/b/ with a/b/c/*.js
    ✓ should match !a/b/ with a/b/c/*.js and {dot: true}
    ✓ should match !a/b/ with a/b/c/*.js and {nonegate: true}
    ✓ should match !a/b/c with a/b/c/*.js
    ✓ should match !a/b/c with a/b/c/*.js and {dot: true}
    ✓ should match !a/b/c with a/b/c/*.js and {nonegate: true}
    ✓ should match !a/b/c/ with a/b/c/*.js
    ✓ should match !a/b/c/ with a/b/c/*.js and {dot: true}
    ✓ should match !a/b/c/ with a/b/c/*.js and {nonegate: true}
    ✓ should match !a/!b with a/b/c/*.js
    ✓ should match !a/!b with a/b/c/*.js and {dot: true}
    ✓ should match !a/!b with a/b/c/*.js and {nonegate: true}
    ✓ should match !a/!b/c with a/b/c/*.js
    ✓ should match !a/!b/c with a/b/c/*.js and {dot: true}
    ✓ should match !a/!b/c with a/b/c/*.js and {nonegate: true}
    ✓ should match !a/!b/c/d with a/b/c/*.js
    ✓ should match !a/!b/c/d with a/b/c/*.js and {dot: true}
    ✓ should match !a/!b/c/d with a/b/c/*.js and {nonegate: true}
    ✓ should match !a/b/.c.md with a/b/c/*.js
    ✓ should match !a/b/.c.md with a/b/c/*.js and {dot: true}
    ✓ should match !a/b/.c.md with a/b/c/*.js and {nonegate: true}
    ✓ should match /a/ with a/b/c/*.js
    ✓ should match /a/ with a/b/c/*.js and {dot: true}
    ✓ should match /a/ with a/b/c/*.js and {nonegate: true}
    ✓ should match /a/b with a/b/c/*.js
    ✓ should match /a/b with a/b/c/*.js and {dot: true}
    ✓ should match /a/b with a/b/c/*.js and {nonegate: true}
    ✓ should match /a/cb with a/b/c/*.js
    ✓ should match /a/cb with a/b/c/*.js and {dot: true}
    ✓ should match /a/cb with a/b/c/*.js and {nonegate: true}
    ✓ should match /a/bb with a/b/c/*.js
    ✓ should match /a/bb with a/b/c/*.js and {dot: true}
    ✓ should match /a/bb with a/b/c/*.js and {nonegate: true}
    ✓ should match /a/b/c with a/b/c/*.js
    ✓ should match /a/b/c with a/b/c/*.js and {dot: true}
    ✓ should match /a/b/c with a/b/c/*.js and {nonegate: true}
    ✓ should match /a/b/c/ with a/b/c/*.js
    ✓ should match /a/b/c/ with a/b/c/*.js and {dot: true}
    ✓ should match /a/b/c/ with a/b/c/*.js and {nonegate: true}
    ✓ should match /a/b/c/d with a/b/c/*.js
    ✓ should match /a/b/c/d with a/b/c/*.js and {dot: true}
    ✓ should match /a/b/c/d with a/b/c/*.js and {nonegate: true}
    ✓ should match /a/b/c/d/ with a/b/c/*.js
    ✓ should match /a/b/c/d/ with a/b/c/*.js and {dot: true}
    ✓ should match /a/b/c/d/ with a/b/c/*.js and {nonegate: true}
    ✓ should match . with a/b/c/*.js
    ✓ should match . with a/b/c/*.js and {dot: true}
    ✓ should match . with a/b/c/*.js and {nonegate: true}
    ✓ should match ./ with a/b/c/*.js
    ✓ should match ./ with a/b/c/*.js and {dot: true}
    ✓ should match ./ with a/b/c/*.js and {nonegate: true}
    ✓ should match .. with a/b/c/*.js
    ✓ should match .. with a/b/c/*.js and {dot: true}
    ✓ should match .. with a/b/c/*.js and {nonegate: true}
    ✓ should match ../c with a/b/c/*.js
    ✓ should match ../c with a/b/c/*.js and {dot: true}
    ✓ should match ../c with a/b/c/*.js and {nonegate: true}
    ✓ should match ../c with a/b/c/*.js
    ✓ should match ../c with a/b/c/*.js and {dot: true}
    ✓ should match ../c with a/b/c/*.js and {nonegate: true}
    ✓ should match ./../c with a/b/c/*.js
    ✓ should match ./../c with a/b/c/*.js and {dot: true}
    ✓ should match ./../c with a/b/c/*.js and {nonegate: true}
    ✓ should match ./a/../c with a/b/c/*.js
    ✓ should match ./a/../c with a/b/c/*.js and {dot: true}
    ✓ should match ./a/../c with a/b/c/*.js and {nonegate: true}
    ✓ should match /.. with a/b/c/*.js
    ✓ should match /.. with a/b/c/*.js and {dot: true}
    ✓ should match /.. with a/b/c/*.js and {nonegate: true}
    ✓ should match /../c with a/b/c/*.js
    ✓ should match /../c with a/b/c/*.js and {dot: true}
    ✓ should match /../c with a/b/c/*.js and {nonegate: true}
    ✓ should match /../.c with a/b/c/*.js
    ✓ should match /../.c with a/b/c/*.js and {dot: true}
    ✓ should match /../.c with a/b/c/*.js and {nonegate: true}
    ✓ should match /../.c/ with a/b/c/*.js
    ✓ should match /../.c/ with a/b/c/*.js and {dot: true}
    ✓ should match /../.c/ with a/b/c/*.js and {nonegate: true}
    ✓ should match /a/../c with a/b/c/*.js
    ✓ should match /a/../c with a/b/c/*.js and {dot: true}
    ✓ should match /a/../c with a/b/c/*.js and {nonegate: true}
    ✓ should match a/../c with a/b/c/*.js
    ✓ should match a/../c with a/b/c/*.js and {dot: true}
    ✓ should match a/../c with a/b/c/*.js and {nonegate: true}
    ✓ should match ../.b/.c with a/b/c/*.js
    ✓ should match ../.b/.c with a/b/c/*.js and {dot: true}
    ✓ should match ../.b/.c with a/b/c/*.js and {nonegate: true}
    ✓ should match ../b/.c with a/b/c/*.js
    ✓ should match ../b/.c with a/b/c/*.js and {dot: true}
    ✓ should match ../b/.c with a/b/c/*.js and {nonegate: true}
    ✓ should match ./.b/.c with a/b/c/*.js
    ✓ should match ./.b/.c with a/b/c/*.js and {dot: true}
    ✓ should match ./.b/.c with a/b/c/*.js and {nonegate: true}
    ✓ should match ./b/.c with a/b/c/*.js
    ✓ should match ./b/.c with a/b/c/*.js and {dot: true}
    ✓ should match ./b/.c with a/b/c/*.js and {nonegate: true}
    ✓ should match .b with a/b/c/*.js
    ✓ should match .b with a/b/c/*.js and {dot: true}
    ✓ should match .b with a/b/c/*.js and {nonegate: true}
    ✓ should match .b.c with a/b/c/*.js
    ✓ should match .b.c with a/b/c/*.js and {dot: true}
    ✓ should match .b.c with a/b/c/*.js and {nonegate: true}
    ✓ should match .b.c/ with a/b/c/*.js
    ✓ should match .b.c/ with a/b/c/*.js and {dot: true}
    ✓ should match .b.c/ with a/b/c/*.js and {nonegate: true}
    ✓ should match .b/ with a/b/c/*.js
    ✓ should match .b/ with a/b/c/*.js and {dot: true}
    ✓ should match .b/ with a/b/c/*.js and {nonegate: true}
    ✓ should match .b/.c with a/b/c/*.js
    ✓ should match .b/.c with a/b/c/*.js and {dot: true}
    ✓ should match .b/.c with a/b/c/*.js and {nonegate: true}
    ✓ should match .b/c with a/b/c/*.js
    ✓ should match .b/c with a/b/c/*.js and {dot: true}
    ✓ should match .b/c with a/b/c/*.js and {nonegate: true}
    ✓ should match b/.c with a/b/c/*.js
    ✓ should match b/.c with a/b/c/*.js and {dot: true}
    ✓ should match b/.c with a/b/c/*.js and {nonegate: true}
    ✓ should match b/.c/ with a/b/c/*.js
    ✓ should match b/.c/ with a/b/c/*.js and {dot: true}
    ✓ should match b/.c/ with a/b/c/*.js and {nonegate: true}
    ✓ should match a/+b/c with a/b/c/*.js
    ✓ should match a/+b/c with a/b/c/*.js and {dot: true}
    ✓ should match a/+b/c with a/b/c/*.js and {nonegate: true}
    ✓ should match +a/+b/c with a/b/c/*.js
    ✓ should match +a/+b/c with a/b/c/*.js and {dot: true}
    ✓ should match +a/+b/c with a/b/c/*.js and {nonegate: true}
    ✓ should match a (foo) with a/b/c/*.js
    ✓ should match a (foo) with a/b/c/*.js and {dot: true}
    ✓ should match a (foo) with a/b/c/*.js and {nonegate: true}
    ✓ should match a (foo)/(bar) with a/b/c/*.js
    ✓ should match a (foo)/(bar) with a/b/c/*.js and {dot: true}
    ✓ should match a (foo)/(bar) with a/b/c/*.js and {nonegate: true}
    ✓ should match a/b/c (1) with a/b/c/*.js
    ✓ should match a/b/c (1) with a/b/c/*.js and {dot: true}
    ✓ should match a/b/c (1) with a/b/c/*.js and {nonegate: true}
    ✓ should match a/b (2)/c (1) with a/b/c/*.js
    ✓ should match a/b (2)/c (1) with a/b/c/*.js and {dot: true}
    ✓ should match a/b (2)/c (1) with a/b/c/*.js and {nonegate: true}
    ✓ should match a/b/c [def] with a/b/c/*.js
    ✓ should match a/b/c [def] with a/b/c/*.js and {dot: true}
    ✓ should match a/b/c [def] with a/b/c/*.js and {nonegate: true}

  dotfiles
    file name matching
      ✓ should not match a dot when the dot is not explicitly defined
      ✓ should not match leading dots with question marks
      ✓ should match with double dots
      ✓ should not match a dot when the dot is not explicitly defined
      ✓ should match a dot when the dot is explicitly defined
    multiple directories
      ✓ should not match a dot when the dot is not explicitly defined
    options.dot
      ✓ should match dotfiles when `options.dot` is true
      ✓ should match dotfiles when `.dot` and `.matchBase` both defined
      ✓ should not match dotfiles when `options.dot` is false
      ✓ should not match dotfiles when `.dot` is false and `.matchBase` is true
      ✓ should not match dotfiles when `.dot` is not defined and a dot is not in the glob pattern

  globstars
    ✓ should support globstars (**)
    ✓ should support multiple globstars in one pattern
    ✓ should match dotfiles
    ✓ should match file extensions:
    ✓ should respect trailing slashes on paterns
    ✓ should match slashes
    ✓ should match literal globstars when escaped
    ✓ should work consistently with `makeRe` and matcher functions

  issue-related tests
    ✓ issue micromatch#110
    ✓ issue #111
    ✓ issue #15
    ✓ issue #23
    ✓ issue #24
    ✓ should only match nested directories when `**` is the only thing in a segment
    ✓ issue #63

  handling of potential regex exploits
    ✓ should support long escape sequences
    ✓ should throw an error when the pattern is too long

  basic tests

  http://www.bashcookbook.com/bashinfo/source/bash-1.14.7/tests/glob-test
    ✓ 0: h
    ✓ 1: a*
    ✓ 2: X*

  allow null glob expansion
    ✓ 3: a
    ✓ 4: X*

  nanomatch has same results as Bash. Minimatch does this differently
    ✓ 5: n
    ✓ 6: \*
    ✓ 7: \**
    ✓ 8: \*\*
    ✓ 9: b*/
    ✓ 10: c*
    ✓ 11: **
    ✓ 12: \.\./*/
    ✓ 13: s/\..*//

  legendary larry crashes bashes
    ✓ 14: l
    ✓ 15: /^root:/{s/^[^:]*:[^:]*:([^:]*).*$/\1/
    ✓ 16: /^root:/{s/^[^:]*:[^:]*:([^:]*).*$//

  character classes
    ✓ 17: c
    ✓ 18: [a-c]b*
    ✓ 19: [a-y]*[^c]
    ✓ 20: a*[^c]
    ✓ 21: undefined
    ✓ 22: a[X-]b
    ✓ 23: undefined
    ✓ 24: [^a-c]*
    ✓ 25: undefined

  trailing slashes
    ✓ 26: t
    ✓ 27: a*b/*
    ✓ 28: a*?/*
    ✓ 29: a\*b/*
    ✓ 30: a\*?/*
    ✓ 31: *\\!*
    ✓ 32: *\!*
    ✓ 33: *.\*
    ✓ 34: a[b]c
    ✓ 35: a[\b]c
    ✓ 36: a[\\b]c
    ✓ 37: a?c
    ✓ 38: a\*c
    ✓ 39: 

  http://www.opensource.apple.com/source/bash/bash-23/bash/tests/glob-test
    ✓ 40: h
    ✓ 41: undefined
    ✓ 42: */man*/bash.*
    ✓ 43: man/man1/bash.1
    ✓ 44: a***c
    ✓ 45: a*****?c
    ✓ 46: ?*****??
    ✓ 47: *****??
    ✓ 48: ?*****?c
    ✓ 49: ?***?****c
    ✓ 50: ?***?****?
    ✓ 51: ?***?****
    ✓ 52: *******c
    ✓ 53: *******?
    ✓ 54: a*cd**?**??k
    ✓ 55: a**?**cd**?**??k
    ✓ 56: a**?**cd**?**??k***
    ✓ 57: a**?**cd**?**??***k
    ✓ 58: a**?**cd**?**??***k**
    ✓ 59: a****c**?**??*****
    ✓ 60: [-abc]
    ✓ 61: [abc-]
    ✓ 62: [[]
    ✓ 63: [
    ✓ 64: [*

  a right bracket shall lose its special meaning and represent itself in a bracket expression if it occurs first in the list.  -- POSIX.2 2.8.3.2
    ✓ 65: a
    ✓ 66: []]
    ✓ 67: []-]
    ✓ 68: [a-z]
    ✓ 69: ??**********?****?
    ✓ 70: ??**********?****c
    ✓ 71: ?************c****?****
    ✓ 72: *c*?**
    ✓ 73: a*****c*?**
    ✓ 74: a********???*******
    ✓ 75: []
    ✓ 76: [abc

  nocase tests
    ✓ 77: n
    ✓ 78: XYZ
    ✓ 79: ab*
    ✓ 80: [ia]?[ck]

  braces: onestar/twostar
    ✓ 81: b
    ✓ 82: {/*,*}

  dots should not match unless requested
    ✓ 83: d
    ✓ 84: **
    ✓ 85: undefined
    ✓ 86: a/*/b
    ✓ 87: a/*/b
    ✓ 88: a/.*/b
    ✓ 89: a/.*/b
    ✓ 90: **
    ✓ 91: [!a*
    ✓ 92: a?b
    ✓ 93: a?b

  negation tests
    ✓ 94: n
    ✓ 95: undefined
    ✓ 96: !a*
    ✓ 97: !a*
    ✓ 98: a*
    ✓ 99: !\!a*
    ✓ 100: undefined

  https://github.com/isaacs/minimatch/issues/5
    ✓ 101: h
    ✓ 102: undefined
    ✓ 103: **/.x/**

  https://github.com/isaacs/minimatch/issues/59
    ✓ 104: h
    ✓ 105: [z-a]
    ✓ 106: a/[2015-03-10T00:23:08.647Z]/z
    ✓ 107: [a-0][a-Ā]

  minimatch parity:
    backslashes
      ✓ should match literal backslashes
    minimatch issues (as of 12/7/2016)
      ✓ https://github.com/isaacs/minimatch/issues/29
      ✓ https://github.com/isaacs/minimatch/issues/30
      ✓ https://github.com/isaacs/minimatch/issues/50
      ✓ https://github.com/isaacs/minimatch/issues/67 (should work consistently with `makeRe` and matcher functions)
      ✓ https://github.com/isaacs/minimatch/issues/78
      ✓ https://github.com/isaacs/minimatch/issues/82

  dotglob:
    ✓ "a/b/.x" should not match "**/.x/**"
    ✓ ".x" should not match "**/.x/**"
    ✓ ".x/" should match "**/.x/**"
    ✓ ".x/a" should match "**/.x/**"
    ✓ ".x/a/b" should match "**/.x/**"
    ✓ ".x/.x" should not match "**/.x/**"
    ✓ "a/.x" should not match "**/.x/**"
    ✓ "a/b/.x/c" should match "**/.x/**"
    ✓ "a/b/.x/c/d" should match "**/.x/**"
    ✓ "a/b/.x/c/d/e" should match "**/.x/**"
    ✓ "a/b/.x/" should match "**/.x/**"
    ✓ "a/.x/b" should match "**/.x/**"
    ✓ "a/.x/b/.x/c" should not match "**/.x/**"
    ✓ ".bashrc" should not match "?bashrc"
    ✓ ".bar.baz/" should match ".*.*"
    ✓ ".bar.baz" should match ".*.*"

  glob:
    ✓ "a/b/.x" should not match "**/.x/**"
    ✓ ".x" should not match "**/.x/**"
    ✓ ".x/" should match "**/.x/**"
    ✓ ".x/a" should match "**/.x/**"
    ✓ ".x/a/b" should match "**/.x/**"
    ✓ ".x/.x" should not match "**/.x/**"
    ✓ "a/.x" should not match "**/.x/**"
    ✓ "a/b/.x/c" should match "**/.x/**"
    ✓ "a/b/.x/c/d" should match "**/.x/**"
    ✓ "a/b/.x/c/d/e" should match "**/.x/**"
    ✓ "a/b/.x/" should match "**/.x/**"
    ✓ "a/.x/b" should match "**/.x/**"
    ✓ "a/.x/b/.x/c" should not match "**/.x/**"
    ✓ "a/c/b" should match "a/*/b"
    ✓ "a/.d/b" should not match "a/*/b"
    ✓ "a/./b" should not match "a/*/b"
    ✓ "a/../b" should not match "a/*/b"
    ✓ "ab" should match "ab**"
    ✓ "abcdef" should match "ab**"
    ✓ "abef" should match "ab**"
    ✓ "abcfef" should match "ab**"
    ✓ "ab" should not match "ab***ef"
    ✓ "abcdef" should match "ab***ef"
    ✓ "abef" should match "ab***ef"
    ✓ "abcfef" should match "ab***ef"
    ✓ ".bashrc" should not match "?bashrc"
    ✓ "abbc" should not match "ab?bc"
    ✓ "abc" should not match "ab?bc"
    ✓ "a.a" should match "[a-d]*.[a-b]"
    ✓ "a.b" should match "[a-d]*.[a-b]"
    ✓ "c.a" should match "[a-d]*.[a-b]"
    ✓ "a.a.a" should match "[a-d]*.[a-b]"
    ✓ "a.a.a" should match "[a-d]*.[a-b]*.[a-b]"
    ✓ "a.a" should match "*.[a-b]"
    ✓ "a.b" should match "*.[a-b]"
    ✓ "a.a.a" should match "*.[a-b]"
    ✓ "c.a" should match "*.[a-b]"
    ✓ "d.a.d" should not match "*.[a-b]"
    ✓ "a.bb" should not match "*.[a-b]"
    ✓ "a.ccc" should not match "*.[a-b]"
    ✓ "c.ccc" should not match "*.[a-b]"
    ✓ "a.a" should match "*.[a-b]*"
    ✓ "a.b" should match "*.[a-b]*"
    ✓ "a.a.a" should match "*.[a-b]*"
    ✓ "c.a" should match "*.[a-b]*"
    ✓ "d.a.d" should match "*.[a-b]*"
    ✓ "d.a.d" should not match "*.[a-b]*.[a-b]*"
    ✓ "d.a.d" should match "*.[a-d]*.[a-d]*"
    ✓ "a.bb" should match "*.[a-b]*"
    ✓ "a.ccc" should not match "*.[a-b]*"
    ✓ "c.ccc" should not match "*.[a-b]*"
    ✓ "a.a" should match "*[a-b].[a-b]*"
    ✓ "a.b" should match "*[a-b].[a-b]*"
    ✓ "a.a.a" should match "*[a-b].[a-b]*"
    ✓ "c.a" should not match "*[a-b].[a-b]*"
    ✓ "d.a.d" should not match "*[a-b].[a-b]*"
    ✓ "a.bb" should match "*[a-b].[a-b]*"
    ✓ "a.ccc" should not match "*[a-b].[a-b]*"
    ✓ "c.ccc" should not match "*[a-b].[a-b]*"
    ✓ "abd" should match "[a-y]*[^c]"
    ✓ "abe" should match "[a-y]*[^c]"
    ✓ "bb" should match "[a-y]*[^c]"
    ✓ "bcd" should match "[a-y]*[^c]"
    ✓ "ca" should match "[a-y]*[^c]"
    ✓ "cb" should match "[a-y]*[^c]"
    ✓ "dd" should match "[a-y]*[^c]"
    ✓ "de" should match "[a-y]*[^c]"
    ✓ "bdir/" should match "[a-y]*[^c]"
    ✓ "abd" should match "**/*"

  globstar:
    ✓ "a.js" should match "**/*.js"
    ✓ "a/a.js" should match "**/*.js"
    ✓ "a/a/b.js" should match "**/*.js"
    ✓ "a/b/z.js" should match "a/b/**/*.js"
    ✓ "a/b/c/z.js" should match "a/b/**/*.js"
    ✓ "foo.md" should match "**/*.md"
    ✓ "foo/bar.md" should match "**/*.md"
    ✓ "foo/bar" should match "foo/**/bar"
    ✓ "foo/bar" should match "foo/**bar"
    ✓ "ab/a/d" should match "**/*"
    ✓ "ab/b" should match "**/*"
    ✓ "a/b/c/d/a.js" should match "**/*"
    ✓ "a/b/c.js" should match "**/*"
    ✓ "a/b/c.txt" should match "**/*"
    ✓ "a/b/.js/c.txt" should not match "**/*"
    ✓ "a.js" should match "**/*"
    ✓ "za.js" should match "**/*"
    ✓ "ab" should match "**/*"
    ✓ "a.b" should match "**/*"
    ✓ "foo/" should match "foo/**/"
    ✓ "foo/bar" should not match "foo/**/"
    ✓ "foo/bazbar" should not match "foo/**/"
    ✓ "foo/barbar" should not match "foo/**/"
    ✓ "foo/bar/baz/qux" should not match "foo/**/"
    ✓ "foo/bar/baz/qux/" should match "foo/**/"

  negation
    ✓ should negate files with extensions:
    ✓ should only treat leading exclamation as special
    ✓ should support negated globs ("*")
    ✓ should support negated globstars ("**")
    ✓ should negate dotfiles:
    ✓ should negate files in the immediate directory:
    ✓ should support any number of leading exclamations
    ✓ should not give special meaning to non-leading exclamations
    ✓ should negate files in any directory:

  options
    options.ignore
      ✓ should filter out ignored patterns
      ✓ should work with dotfiles
      ✓ should "un-ignore" values when a negation pattern is passed
    options.matchBase
      ✓ should match the basename of file paths when `options.matchBase` is true
      ✓ should support `options.basename` as an alternative to `matchBase`
    options.flags
      ✓ should be case-sensitive by default
      ✓ should not be case-sensitive when `i` is set on `options.flags`
    options.nocase
      ✓ should not be case-sensitive when `options.nocase` is true
      ✓ should not double-set `i` when both `nocase` and the `i` flag are set
    options.nodupes
      ✓ should remove duplicate elements from the result array:
      ✓ should not remove duplicates
    options.noglobstar
      ✓ should regard double stars as single stars
    options.unescape
      ✓ should remove backslashes in glob patterns:
    options.nonull
      ✓ should return the pattern when no matches are found
    options.nonegate
      ✓ should support the `nonegate` option:
    options.unixify
      ✓ should unixify file paths
      ✓ should unixify absolute paths
    options.dot
      when `dot` or `dotfile` is NOT true:
        ✓ should not match dotfiles by default:
        ✓ should match dotfiles when a leading dot is defined in the path:
        ✓ should use negation patterns on dotfiles:
      when `dot` or `dotfile` is true:
        ✓ should match dotfiles when there is a leading dot:
        ✓ should match dotfiles when there is not a leading dot:
        ✓ should use negation patterns on dotfiles:
        ✓ should match dotfiles when `options.dot` is true:
    windows
      ✓ should unixify file paths
      ✓ should unixify absolute paths
    normalize
      ✓ should normalize leading `./`
      ✓ should match leading `./`

  qmarks and stars
    ✓ should correctly handle question marks in globs
    ✓ should match one character per question mark
    ✓ should match multiple groups of question marks
    ✓ should support regex capture groups
    ✓ should use qmarks with other special characters
    ✓ question marks should not match slashes
    ✓ question marks should match arbitrary dots
    ✓ question marks should not match leading dots
    ✓ question marks should match leading dots when options.dot is true
    ✓ question marks should match characters preceding a dot

  ranges
    ✓ should support valid regex ranges
    ✓ should support valid regex ranges with glob negation patterns
    ✓ should support valid regex ranges with negation patterns

  special characters
    regex
      ✓ should match common regex characters
    spaces:
      ✓ should match spaces
    $ dollar signs:
      ✓ should treat dollar signs as literal
    ^ caret
      ✓ should treat caret as literal:
    slashes
      ✓ should match forward slashes
      ✓ should match backslashes
    colons and drive letters
      ✓ should treat common URL characters as literals
    [ab] - brackets:
      ✓ should support regex character classes:
      ✓ should handle brackets
      ✓ should handle unclosed brackets
    (a|b) - logical OR:
      ✓ should support regex logical OR:

  stars
    ✓ should match one directory level with a single star (*)
    ✓ should match one or more characters
    ✓ should match one or zero characters
    ✓ should respect trailing slashes on paterns
    ✓ should match a literal star when escaped
    ✓ should match leading `./`

  nanomatch
    ✓ should export a function

  utils
    .combineDupes
      ✓ should combine duplicate patterns in the given string
      ✓ should take an array of patterns
      ✓ should take an array of patterns
    .hasSpecialChars
      ✓ should return true when the pattern has wildcards
      ✓ should return true when the pattern has extglob characters
      ✓ should return true for plus
      ✓ should return false for dots
      ✓ should return true for dots at the beginning of a string
      ✓ should return true for dots following a slash


  36185 passing (4s)

I am package node-archiver .....

> archiver@5.3.1 test
> mocha --reporter dot

I am package node-argon2 .....

> argon2@0.30.3 test
> c8 mocha test/test.js

I am package node-crc32-stream .....

> crc32-stream@4.0.2 test
> mocha --reporter dot

I am package node-deep-equal .....

> deep-equal@2.2.0 pretest
> npm run lint


> deep-equal@2.2.0 lint
> eslint --ext=js,mjs .


/data/js-variants/multee/VariantsPureDep/node-deep-equal/variant_files/node-deep-equal/test/cmp.js
  12:61  warning  new Buffer() is deprecated. Use Buffer.from(), Buffer.alloc(), or Buffer.allocUnsafe() instead  no-buffer-constructor

✖ 1 problem (0 errors, 1 warning)


> deep-equal@2.2.0 test
> npm run tests-only


> deep-equal@2.2.0 tests-only
> nyc tape 'test/**/*.js'


=============================== Coverage summary ===============================
Statements   : 0% ( 0/241 )
Branches     : 0% ( 0/241 )
Functions    : 0% ( 0/12 )
Lines        : 0% ( 0/212 )
================================================================================
-----------|----------|----------|----------|----------|----------------|
File       |  % Stmts | % Branch |  % Funcs |  % Lines |Uncovered Lines |
-----------|----------|----------|----------|----------|----------------|
All files  |        0 |        0 |        0 |        0 |                |
 assert.js |        0 |      100 |      100 |        0 |              3 |
 index.js  |        0 |        0 |        0 |        0 |... 381,384,385 |
-----------|----------|----------|----------|----------|----------------|
I am package node-gcm .....

> node-gcm@1.0.5 test
> mocha test/**/*Spec.js



  UNIT Message
    constructor
      ✔ can be instantiated with no state
      ✔ should call new on constructor if user does not
      ✔ should create an message with properties passed in
      ✔ should only set properties passed into constructor
    addData()
      ✔ should add properties to the message data object given a key and value
      ✔ should only set values on data object, not top level message
      ✔ should set the data property to the object passed in
      ✔ should overwrite data object when an object is passed in
      ✔ should not overwrite data if not passed an object
      ✔ should not overwrite data if passed an empty object
      - should do something if not called properly
    addDataWithKeyValue()
      ✔ should add properties to the message data object given a key and value
      ✔ should only set values on data object, not top level message
      - should do something if not called properly
    addDataWithObject()
      ✔ should set the data property to the object passed in
      ✔ should overwrite data object when an object is passed in
      ✔ should not overwrite data if not passed an object
      ✔ should not overwrite data if passed an empty object
    addNotification()
      ✔ should add attribute on notification object if pass key and value
      ✔ should set the notification property to the object passed in
    toJson()
      ✔ should return well-formed data for GCM if it is valid
      ✔ should return well-formed data for GCM if it describes a notification
      ✔ should ignore non-standard fields when serializing

  UNIT Sender
    constructor
      ✔ should call new on constructor if user does not
      ✔ should create a Sender with key and options passed in
      - should do something if not passed a valid key
    sendNoRetry()
      ✔ should set proxy, maxSockets, timeout and/or strictSSL of req object if passed into constructor
      ✔ should not override internal request params if passed into constructor (except timeout/uri)
      ✔ should not override internal request headers if passed into constructor
      ✔ should allow extending request headers if passed into constructor
      ✔ should allow override for "uri" if passed into constructor via options
      ✔ should default "uri" to FCM send uri if not overridden
      ✔ should not set strictSSL of req object if not passed into constructor
      ✔ should set the API key of req object if passed in API key
      ✔ should send a JSON object as the body of the request
      ✔ should set properties of body with message properties
      ✔ should set the registration_ids to reg tokens implicitly passed in
      ✔ should set the registration_ids to reg tokens explicitly passed in
      ✔ should set the registration_ids to reg tokens explicitly passed in
      ✔ should set the to field if a single reg (or other) token is passed in
      ✔ should set the to field if a single reg token is passed in as a string
      ✔ should set the to field if a single reg token is passed inside the recipient array
      ✔ should set the to field if a single reg token is passed inside the registrationTokens array
      ✔ should set the to field if a single reg token is passed inside the registrationIDs array
      ✔ should set the to field if a topic is passed in
      ✔ should set the to field if a to recipient is passed in
      ✔ should set the condition field if multiple topics are passed in
      ✔ should pass an error into callback if recipient is an empty object
      ✔ should pass an error into callback if recipient keys are invalid
      ✔ should pass an error into callback if provided more than one recipient key
      ✔ should pass an error into callback if registrationIds is not an array
      ✔ should pass an error into callback if registrationTokens is not an array
      ✔ should pass an error into callback if to is not a string
      ✔ should pass an error into callback if topic is not a string
      ✔ should pass an error into callback if notificationKey is not a string
      ✔ should pass an error into callback if to is empty
      ✔ should pass an error into callback if topic is empty
      ✔ should pass an error into callback if notificationKey is empty
      ✔ should pass an error into callback if no recipient provided
      ✔ should pass an error into callback if request returns an error
      ✔ should return the status code as an error if returned a 500
      ✔ should return the status code as an error if returned a 401
      ✔ should return the status code as an error if returned a 400
      ✔ should pass an error into the callback if resBody cannot be parsed
      ✔ should pass in parsed resBody into callback on success
    send()
Firing send
      ✔ should pass reg tokens to sendNoRetry, even if it is an empty array
Firing send
      ✔ should pass reg tokens to sendNoRetry, even if it is an empty object
Firing send
      ✔ should pass reg tokens to sendNoRetry, even if some keys are invalid
Firing send
      ✔ should pass the message and the regToken to sendNoRetry on call
Firing send
      ✔ should pass the message and the regTokens to sendNoRetry on call
Firing send
      ✔ should pass the response into callback if successful for token
Firing send
      ✔ should pass the response into callback if successful for tokens
Firing send
      ✔ should pass the error into callback if failure and no retry for token
Firing send
      ✔ should pass the error into callback if failure and no retry for tokens
Firing send
Firing send
      ✔ should retry number of times passed into call and do exponential backoff (1002ms)
Firing send
Firing send
Firing send
      ✔ should retry if not all regTokens were successfully sent (302ms)
Firing send
Firing send
Firing send
      ✔ should retry if some regTokens were failed with InternalServerError (302ms)
Firing send
Firing send
      ✔ should retry all regTokens in event of an error (1002ms)
Firing send
Firing send
      ✔ should update the failures and successes correctly when retrying (1002ms)
Firing send
Firing send
      ✔ should update the failures and successes correctly when retrying for InternalServerError response (1001ms)
Firing send
Firing send
Firing send
Firing send
      ✔ should update the failures and successes correctly when retrying and failing some (702ms)
Firing send
Firing send
Firing send
Firing send
      ✔ should update the failures and successes correctly when retrying and failing some with InternalServerError response (702ms)


  79 passing (6s)
  3 pending

I am package node-gcstats .....

> gc-stats@1.5.0 pretest
> npm run build


> gc-stats@1.5.0 build
> node-pre-gyp build

I am package node-glob-gitignore .....

> glob-gitignore@1.0.14 test
> nyc ava --timeout=10s

----------|----------|----------|----------|----------|-------------------|
File      |  % Stmts | % Branch |  % Funcs |  % Lines | Uncovered Line #s |
----------|----------|----------|----------|----------|-------------------|
All files |        0 |        0 |        0 |        0 |                   |
----------|----------|----------|----------|----------|-------------------|
I am package node-ipinfo .....

> ipinfo@1.5.1 test
> nyc ava

[?25l[?25l[?25l[?25l[?25l[?25l[?25l[?25l[?25l[?25l[?25l[?25l[?25l[?25l[?25l[?25l[?25l[?25l[?25h----------|----------|----------|----------|----------|----------------|
File      |  % Stmts | % Branch |  % Funcs |  % Lines |Uncovered Lines |
----------|----------|----------|----------|----------|----------------|
All files |    71.43 |       68 |      100 |    71.43 |                |
 index.js |    71.43 |       68 |      100 |    71.43 |... 56,57,59,62 |
----------|----------|----------|----------|----------|----------------|
I am package node-jira-client .....

> jira-client@8.2.2 test
> npm run lint && mocha --require @babel/register && npm run docs-build


> jira-client@8.2.2 lint
> eslint ./



  Jira API Tests
    Constructor Tests
      ✔ Constructor functions properly
      ✔ Constructor with no auth credentials
      ✔ Constructor with bearer credentials
      ✔ Constructor with oauth credentials
      ✔ Constructor with timeout
      ✔ Constructor with strictSSL off
      ✔ should allow the user to pass in a certificate authority
    makeRequestHeader Tests
      ✔ makeRequestHeader functions properly in the average case
      ✔ makeRequestHeader functions properly with a different method
    makeUri
      ✔ builds url with pathname and default host, protocol, port, and base api
      ✔ builds url with intermediatePath
      ✔ builds url with globally specified intermediatePath
      ✔ builds url with query string parameters
      ✔ makeWebhookUri functions properly in the average case
      ✔ makeWebhookUri functions with intermediate path
      ✔ makeSprintQueryUri functions properly in the average case
      ✔ makeSprintQueryUri functions properly in the average case
      ✔ makeUri functions properly no port http
      ✔ makeUri functions properly no port https
    doRequest Tests
      ✔ doRequest functions properly in the average case
      ✔ doRequest authenticates properly when specified
      ✔ doRequest times out with specified option
      ✔ doRequest throws an error properly
      ✔ doRequest throws a list of errors properly
      ✔ doRequest does not throw an error on empty response
      ✔ doRequest throws an error when request failed
    Request Functions Tests
      ✔ findIssue hits proper url
      ✔ findIssue hits proper url with expansion
      ✔ findIssue hits proper url with fields
      ✔ findIssue hits proper url with properties
      ✔ findIssue hits proper url with fields and fieldsByKeys
      ✔ downloadAttachment hits proper url with attachment id and filename
      ✔ downloadAttachment hits proper url with attachment id and filename with special characters
      ✔ deleteAttachment hits proper url
      ✔ getUnresolvedIssueCount hits proper url
      ✔ getProject hits proper url
      ✔ createProject hits proper url
      ✔ findRapidView hits proper url
      ✔ getLastSprintForRapidView hits proper url
      ✔ getSprintIssues hits proper url
      ✔ listSprints hits proper url
      ✔ addIssueToSprint hits proper url
      ✔ issueLink hits proper url
      ✔ getRemoteLinks hits proper url
      ✔ createRemoteLink hits proper url
      ✔ getVersion hits proper url
      ✔ getVersions hits proper url
      ✔ getVersions hits proper url with query
      ✔ createVersion hits proper url
      ✔ updateVersion hits proper url
      ✔ deleteVersion hits proper url
      ✔ seachJira hits proper url
      ✔ createUser hits proper url
      ✔ searchUsers hits proper url
      ✔ getUsersInGroup hits proper url
      ✔ getMembersOfGroup hits proper url
      ✔ getUsersIssues hits proper url
      ✔ getUser hits proper url
      ✔ getUsers hits proper url
      ✔ addNewIssue hits proper url
      ✔ getUsersIssues hits proper url
      ✔ addWatcher hits proper url
      ✔ addWatcher sends unquoted string in body
      ✔ getIssueChangelog hits proper url
      ✔ getIssueWatchers hits proper url
      ✔ updateAssignee hits proper url
      ✔ updateAssigneeWithId hits proper url
      ✔ deleteIssue hits proper url
      ✔ updateIssue hits proper url
      ✔ properly creates query params for updateIssue
      ✔ listComponents hits proper url
      ✔ addNewComponent hits proper url
      ✔ updateComponent hits proper url
      ✔ deleteComponent hits proper url
      ✔ deleteComponent hits proper url
      ✔ relatedIssueCounts hits proper url
      ✔ getIssueProperty hits proper url with expansion
      ✔ listPriorities hits proper url
      ✔ listTransitions hits proper url
      ✔ transitionIssue hits proper url
      ✔ listProjects hits proper url
      ✔ addComment hits proper url
      ✔ addCommentAdvanced hits proper url
      ✔ updateComment hits proper url
      ✔ getComments hits proper url
      ✔ getComment hits proper url
      ✔ deleteComment hits proper url
      ✔ addWorklog hits proper url
      ✔ addWorklog hits proper url with adjustEstimate=leave
      ✔ deleteWorklog hits proper url
      ✔ updateWorklog hits proper url
      ✔ deleteIssueLink hits proper url
      ✔ getWorklogs hits proper url
      ✔ getIssueWorklogs hits proper url
      ✔ listIssueTypes hits proper url
      ✔ listIssueLinkTypes hits proper url
      ✔ registerWebhook hits proper url
      ✔ listWebhooks hits proper url
      ✔ getWebhook hits proper url
      ✔ deleteWebhook hits proper url
      ✔ getCurrentUser hits proper url
      ✔ getBacklogForRapidView hits proper url
      ✔ addAttachmentOnIssue hits proper url
      ✔ addAttachmentOnIssue hits proper url
      ✔ issueNotify hits proper url
      ✔ getServerInfo hits proper url
      ✔ moveVersion hits proper url
      ✔ getIssueCreateMetadata hits proper url
      ✔ genericGet hits proper url
      Field APIs Suite Tests
        ✔ createCustomField hits proper url
        ✔ listFields hits proper url
      Field Option APIs Suite Tests
        ✔ createFieldOption hits proper url
        ✔ listFieldOptions hits proper url
        ✔ upsertFieldOption hits proper url
        ✔ getFieldOption hits proper url
        ✔ deleteFieldOption hits proper url
      Dev-Status APIs Suite Tests
        ✔ getDevStatusSummary hits proper url
        ✔ getDevStatusDetail hits proper url - repo
        ✔ getDevStatusDetail hits proper url - pullrequest
      Agile APIs Suite Tests
        ✔ getIssue hits proper url
        ✔ getIssueEstimationForBoard hits proper url
        ✔ estimateIssueForBoard hits proper url
        ✔ rankIssues hits proper url
        ✔ moveToBacklog hits proper url
        ✔ getAllBoards hits proper url
        ✔ getAllBoards hits proper url with project key provided
        ✔ createBoard hits proper url
        ✔ getBoard hits proper url
        ✔ deleteBoard hits proper url
        ✔ getIssuesForBacklog hits proper url
        ✔ getConfiguration hits proper url
        ✔ getIssuesForBoard hits proper url
        ✔ getFilter hits proper url
        ✔ getEpics hits proper url
        ✔ getBoardIssuesForEpic hits proper url
        ✔ getProjects hits proper url
        ✔ getProjectsFull hits proper url
        ✔ getBoardPropertiesKeys hits proper url
        ✔ deleteBoardProperty hits proper url
        ✔ setBoardProperty hits proper url
        ✔ getBoardProperty hits proper url
        ✔ getAllSprints hits proper url
        ✔ getBoardIssuesForSprint hits proper url
        ✔ getAllVersions hits proper url
        ✔ getEpic hits proper url
        ✔ partiallyUpdateEpic hits proper url
        ✔ getIssuesForEpic hits proper url
        ✔ moveIssuesToEpic hits proper url
        ✔ rankEpics hits proper url


  149 passing (92ms)


> jira-client@8.2.2 docs-build
> rm -rf docs && esdoc -c esdoc.json

parse: /data/js-variants/multee/VariantsPureDep/node-jira-client/variant_files/node-jira-client/src/.external-ecmascript.js
parse: /data/js-variants/multee/VariantsPureDep/node-jira-client/variant_files/node-jira-client/src/jira.js
output: /data/js-variants/multee/VariantsPureDep/node-jira-client/variant_files/node-jira-client/docs/lint.json
output: /data/js-variants/multee/VariantsPureDep/node-jira-client/variant_files/node-jira-client/docs/coverage.json
output: /data/js-variants/multee/VariantsPureDep/node-jira-client/variant_files/node-jira-client/docs/badge.svg
resolve: extends chain
resolve: necessary
resolve: ignore
resolve: link
resolve: markdown in description
resolve: test relation
output: /data/js-variants/multee/VariantsPureDep/node-jira-client/variant_files/node-jira-client/docs/identifiers.html
output: /data/js-variants/multee/VariantsPureDep/node-jira-client/variant_files/node-jira-client/docs/index.html
output: /data/js-variants/multee/VariantsPureDep/node-jira-client/variant_files/node-jira-client/docs/class/src/jira.js~JiraApi.html
output: /data/js-variants/multee/VariantsPureDep/node-jira-client/variant_files/node-jira-client/docs/typedef/index.html
output: /data/js-variants/multee/VariantsPureDep/node-jira-client/variant_files/node-jira-client/docs/file/src/jira.js.html
output: /data/js-variants/multee/VariantsPureDep/node-jira-client/variant_files/node-jira-client/docs/css
output: /data/js-variants/multee/VariantsPureDep/node-jira-client/variant_files/node-jira-client/docs/script
output: /data/js-variants/multee/VariantsPureDep/node-jira-client/variant_files/node-jira-client/docs/image
output: /data/js-variants/multee/VariantsPureDep/node-jira-client/variant_files/node-jira-client/docs/script/search_index.js
output: /data/js-variants/multee/VariantsPureDep/node-jira-client/variant_files/node-jira-client/docs/source.html
I am package node-jwk-to-pem .....

> jwk-to-pem@2.0.5 pretest
> npm run check-style


> jwk-to-pem@2.0.5 check-style
> eslint .


> jwk-to-pem@2.0.5 test
> nyc --all --include src -- mocha spec

I am package node-os-monitor .....

> os-monitor@1.2.9 test
> mocha test/**/*.js

I am package node-plex-api .....

> plex-api@5.3.2 test
> npm run test:lint && npm run test:unit


> plex-api@5.3.2 test:lint
> npm run format:exec -- --list-different


> plex-api@5.3.2 format:exec
> prettier --single-quote --print-width=120 --tab-width=4 '{lib,test}/**/*.js' --list-different


> plex-api@5.3.2 test:unit
> mocha test/*-test.js



  Module API
    ✓ should expose constructor
    ✓ should be instance of the PlexAPI
    ✓ should require server host as first constructor parameter
    ✓ first parameter should set host of Plex Media Server
    ✓ should have configurable server port
    ✓ should have configurable options that get sent in every request

  Authenticator
    .initialize()
      ✓ is called on authenticator if method exists when creating PlexAPI instances
      ✓ provides created PlexAPI object as argument
    .authenticate()
      ✓ is called on authenticator when Plex Server responds with 401
      ✓ provides options object and callback as arguments when calling authenticator
      ✓ retries original request with token given from authenticator
      ✓ rejects when providing token and server still responds with 401
    default authenticator
      ✓ uses the plex-api-credentials authenticator when options.username and .password are provided
      ✓ rejects with a missing authenticator error when options.username and .password were missing and Plex Server responds with 401

  deleteQuery()
    ✓ should exist
    ✓ promise should fail when server responds with failure status code
    ✓ promise should succeed when request response status code is 200
    ✓ promise should succeed when request response status code is 204
    ✓ promise should fail when server response status code is 404
    ✓ after delete request server should respond with status code 404
    ✓ should result in a DELETE request
    parameters
      ✓ requires url parameter
      ✓ can accept url parameter as only parameter
      ✓ can accept url parameter as part of a parameter object
      ✓ uses extra headers passed in parameters

  find()
    ✓ should exist
    ✓ should provide all child items found
    ✓ should filter items when given an object of criterias as second parameter
    ✓ should match item attributes by regular expression
    ✓ should provide all Server items found
    ✓ should handle finding all Server items in PMS v1.3 responses
    parameters
      ✓ requires url parameter
      ✓ can accept url parameter as only parameter
      ✓ can accept url parameter as part of a parameter object
      ✓ uses extra headers passed in parameters

  query()
    ✓ resource endpoint should return a buffer

  perform()
    ✓ should exist
    ✓ promise should fail when request response status code is 403
    ✓ promise should fail when server responds with failure status code
    ✓ promise should succeed when request response status code is 200
    ✓ promise should succeed when request response status code is 201
    parameters
      ✓ requires url parameter
      ✓ can accept url parameter as only parameter
      ✓ can accept url parameter as part of a parameter object
      ✓ uses extra headers passed in parameters

  postQuery()
    ✓ should exist
    ✓ promise should fail when server responds with failure status code
    ✓ promise should succeed when request response status code is 200
    ✓ promise should succeed when request response status code is 201
    ✓ should result in a POST request
    parameters
      ✓ requires url parameter
      ✓ can accept url parameter as only parameter
      ✓ can accept url parameter as part of a parameter object
      ✓ uses extra headers passed in parameters

  putQuery()
    ✓ should exist
    ✓ promise should fail when server responds with failure status code
    ✓ promise should succeed when request response status code is 200
    ✓ promise should succeed when request response status code is 201
    ✓ should result in a PUT request
    parameters
      ✓ requires url parameter
      ✓ can accept url parameter as only parameter
      ✓ can accept url parameter as part of a parameter object
      ✓ uses extra headers passed in parameters

  query()
    ✓ should exist
    ✓ promise should fail when server fails
    ✓ promise should succeed when server responds
    ✓ should have response MediaContainer attributes as properties on the resolved result object
    ✓ should have response child Directory items as result._children
    options
      ✓ requires url options
      ✓ can accept url option as only parameter
      ✓ can accept url option as part of an options object
      ✓ uses extra headers passed in options
    Directory URI
      ✓ should provide an uri property
      ✓ should provide an uri property combined of parent URI and the item key attribute
      ✓ should use the key as the uri if the key is a root-relative path
    Server URI
      ✓ should provide an uri property
      ✓ should provide uri property used to control Plex application
    XML responses
      ✓ should convert XML to a JSON object
    response parser
      ✓ allows response parser to be provided upon client instantiation

  timeout error
    ✓ returns error on timeout

  _serverScheme
    ✓ should use http by default
    ✓ should use https when port 443 is specified
    ✓ should use https when the https parameter is true
    ✓ should use http when the https parameter is false, even on port 443


  84 passing (231ms)

I am package node-sparkpost .....

> sparkpost@2.1.4 pretest
> eslint lib/**


> sparkpost@2.1.4 test
> istanbul cover --report lcov --dir test/reports/ _mocha --recursive ./test/spec --grep ./test/**/*.spec.js -- --colors --reporter spec


[0m[0m
[0m  Events Library[0m
[0m    Message Tests[0m
[0m      search Method[0m
      [32m  ✓[0m[90m should call client get method with the appropriate parameters[0m
      [32m  ✓[0m[90m should accept arrays as parameters where appropriate[0m

[0m  Inbound Domains Library[0m
[0m    list Method[0m
    [32m  ✓[0m[90m should call client get method with the appropriate uri[0m
[0m    get Method[0m
    [32m  ✓[0m[90m should call client get method with the appropriate uri[0m
    [32m  ✓[0m[90m should throw an error if domain is missing[0m
[0m    create Method[0m
    [32m  ✓[0m[90m should call client post method with the appropriate uri and payload[0m
    [32m  ✓[0m[90m should throw an error if domain is missing[0m
[0m    delete Method[0m
    [32m  ✓[0m[90m should call client delete method with the appropriate uri[0m
    [32m  ✓[0m[90m should throw an error if domain is missing[0m

[0m  Message Events Library[0m
[0m    search Method[0m
    [32m  ✓[0m[90m should call client get method with the appropriate parameters[0m
    [32m  ✓[0m[90m should accept arrays as parameters where appropriate[0m

[0m  Recipient Lists Library[0m
[0m    list[0m
    [32m  ✓[0m[90m should call client get method with the appropriate uri[0m
[0m    get[0m
    [32m  ✓[0m[90m should call client get method with the appropriate uri[0m
    [32m  ✓[0m[90m should throw an error if id is missing[0m
    [32m  ✓[0m[90m should not throw an error if optional 2nd argument is a function (callback)[0m
    [32m  ✓[0m[90m should allow show_recipients to be set in options[0m
[0m    create[0m
    [32m  ✓[0m[90m should call client post method with the appropriate uri and payload[0m
    [32m  ✓[0m[90m should throw an error if no recipients are provided[0m
    [32m  ✓[0m[90m should allow num_rcpt_errors to be set in options[0m
[0m    update[0m
    [32m  ✓[0m[90m should call client put method with the appropriate uri and payload[0m
    [32m  ✓[0m[90m should throw an error if recipient list is missing[0m
    [32m  ✓[0m[90m should throw an error if id is missing[0m
    [32m  ✓[0m[90m should allow num_rcpt_errors to be set in options[0m
[0m    delete[0m
    [32m  ✓[0m[90m should call client delete method with the appropriate uri[0m
    [32m  ✓[0m[90m should throw an error if id is missing[0m

[0m  Relay Webhooks Library[0m
[0m    list Method[0m
    [32m  ✓[0m[90m should call client get method with the appropriate uri[0m
[0m    get Method[0m
    [32m  ✓[0m[90m should call client get method with the appropriate uri[0m
    [32m  ✓[0m[90m should throw an error if id is missing[0m
[0m    create Method[0m
    [32m  ✓[0m[90m should call client post method with the appropriate uri and payload[0m
    [32m  ✓[0m[90m should throw an error if webhook object is missing[0m
[0m    update Method[0m
    [32m  ✓[0m[90m should call client put method with the appropriate uri and payload[0m
    [32m  ✓[0m[90m should throw an error if webhook.id is missing[0m
    [32m  ✓[0m[90m should throw an error if webhook object is missing[0m
[0m    delete Method[0m
    [32m  ✓[0m[90m should call client delete method with the appropriate uri[0m
    [32m  ✓[0m[90m should throw an error if id is missing[0m

[0m  Sending Domains Library[0m
[0m    list[0m
    [32m  ✓[0m[90m should call client get method with the appropriate uri[0m
[0m    get[0m
    [32m  ✓[0m[90m should call client get method with the appropriate uri[0m
    [32m  ✓[0m[90m should throw an error if domain is missing[0m
[0m    create[0m
    [32m  ✓[0m[90m should call client post method with the appropriate uri and payload[0m
    [32m  ✓[0m[90m should throw an error if create options are missing[0m
[0m    update[0m
    [32m  ✓[0m[90m should call client put method with the appropriate uri and payload[0m
    [32m  ✓[0m[90m should throw an error if update options are missing[0m
    [32m  ✓[0m[90m should throw an error if domain is missing[0m
[0m    delete[0m
    [32m  ✓[0m[90m should call client delete method with the appropriate uri[0m
    [32m  ✓[0m[90m should throw an error if domain is missing[0m
[0m    verify[0m
    [32m  ✓[0m[90m should call client post method with the appropriate uri and payload[0m
    [32m  ✓[0m[90m should throw an error if domain is missing[0m
    [32m  ✓[0m[90m should throw an error if verification options are missing[0m

[0m  SparkPost Library[0m
  [32m  ✓[0m[90m should be a constructor[0m
  [32m  ✓[0m[90m should require an API key[0m
  [32m  ✓[0m[90m should allow an API key to be passed in[0m[33m (48ms)[0m
  [32m  ✓[0m[90m should read an API key from an environment variable[0m
  [32m  ✓[0m[90m should allow an API key passed in to take precedence over an environment variable[0m
  [32m  ✓[0m[90m should take a custom rest endpoint[0m
  [32m  ✓[0m[90m should allow debug to be set in options[0m
  [32m  ✓[0m[90m should allow users to self identify in user-agent[0m
  [32m  ✓[0m[90m should include lib version in user-agent[0m
  [32m  ✓[0m[90m should include Node.JS version in user-agent[0m
[0m    request method[0m
    [32m  ✓[0m[90m should throw an error when no options are passed[0m
    [32m  ✓[0m[90m should make a request to the API[0m
    [32m  ✓[0m[90m should return an error when the request fails[0m
    [32m  ✓[0m[90m should return an error if statusCode not 2XX[0m
    [32m  ✓[0m[90m should return an error if statusCode not 2XX and there is no body[0m
    [32m  ✓[0m[90m should use a full URI if provided[0m
    [32m  ✓[0m[90m should accept gzipped responses[0m
    [32m  ✓[0m[90m should support explicitly disabled gzip option[0m
[0m    get method[0m
    [32m  ✓[0m[90m should deliver a GET + response[0m
    [32m  ✓[0m[90m should return a parsed JSON object[0m
[0m    post method[0m
    [32m  ✓[0m[90m should deliver a POST[0m
    [32m  ✓[0m[90m should return a parsed JSON object[0m
[0m    put method[0m
    [32m  ✓[0m[90m should deliver a PUT/UPDATE[0m
    [32m  ✓[0m[90m should return a parsed JSON object[0m
[0m    delete method[0m
    [32m  ✓[0m[90m should deliver a DELETE[0m
    [32m  ✓[0m[90m should return a parsed JSON object[0m

[0m  Subaccounts Library[0m
[0m    list Method[0m
    [32m  ✓[0m[90m should call client get method with the appropriate uri[0m
[0m    get Method[0m
    [32m  ✓[0m[90m should call client get method with the appropriate uri[0m
    [32m  ✓[0m[90m should throw an error if id is missing[0m
[0m    create Method[0m
    [32m  ✓[0m[90m should call client post method with the appropriate uri and payload[0m
    [32m  ✓[0m[90m should throw an error if subaccount object is missing[0m
[0m    update Method[0m
    [32m  ✓[0m[90m should call client put method with the appropriate uri and payload[0m
    [32m  ✓[0m[90m should throw an error if subaccount id is missing from options[0m
    [32m  ✓[0m[90m should throw an error if subaccount object is missing[0m

[0m  Suppression List Library[0m
[0m    list[0m
    [32m  ✓[0m[90m should call client get method with the appropriate uri[0m
[0m    get[0m
    [32m  ✓[0m[90m should call client get method with the appropriate uri[0m
    [32m  ✓[0m[90m should throw an error if email is missing[0m
[0m    upsert[0m
    [32m  ✓[0m[90m should accept a single list entry[0m
    [32m  ✓[0m[90m should accept an array of list entries[0m
    [32m  ✓[0m[90m should throw an error if recipient is missing[0m
[0m    delete[0m
    [32m  ✓[0m[90m should call client delete method with the appropriate uri[0m
    [32m  ✓[0m[90m should throw an error if email deleteEntry missing[0m

[0m  Templates Library[0m
[0m    list Method[0m
    [32m  ✓[0m[90m should call client get method with the appropriate uri[0m
[0m    get Method[0m
    [32m  ✓[0m[90m should call client get method with the appropriate uri[0m
    [32m  ✓[0m[90m should throw an error if id is missing[0m
    [32m  ✓[0m[90m should allow draft to be set in options[0m
[0m    create Method[0m
    [32m  ✓[0m[90m should call client post method with the appropriate uri and payload[0m
    [32m  ✓[0m[90m should throw an error if template object is missing[0m
[0m    update Method[0m
    [32m  ✓[0m[90m should call client put method with the appropriate uri and payload[0m
    [32m  ✓[0m[90m should throw an error if template id is missing[0m
    [32m  ✓[0m[90m should throw an error if template object is missing[0m
    [32m  ✓[0m[90m should not throw an error if optional 3nd argument is a function (callback)[0m
    [32m  ✓[0m[90m should allow update_published to be set in options[0m
[0m    delete Method[0m
    [32m  ✓[0m[90m should call client delete method with the appropriate uri[0m
    [32m  ✓[0m[90m should throw an error if id is missing[0m
[0m    preview Method[0m
    [32m  ✓[0m[90m should call client post method with the appropriate uri and payload[0m
    [32m  ✓[0m[90m should throw an error if id is missing[0m
    [32m  ✓[0m[90m should not throw an error if optional 2nd argument is a function (callback)[0m
    [32m  ✓[0m[90m should add the draft option to query params[0m

[0m  Transmissions Library[0m
[0m    list Method[0m
    [32m  ✓[0m[90m should call client get method with the appropriate uri[0m
    [32m  ✓[0m[90m should allow campaign_id to be set in options[0m
    [32m  ✓[0m[90m should allow template_id to be set in options[0m
[0m    find Method[0m
    [32m  ✓[0m[90m should call client get method with the appropriate uri[0m
    [32m  ✓[0m[90m should throw an error if id is missing[0m
[0m    send Method[0m
    [32m  ✓[0m[90m should call client post method with the appropriate uri and payload[0m
    [32m  ✓[0m[90m should throw an error if transmission object is missing[0m
    [32m  ✓[0m[90m should allow num_rcpt_errors to be set in options[0m
    [32m  ✓[0m[90m should not throw an error if optional 2nd argument is a function (callback)[0m
    [32m  ✓[0m[90m should leave email_rfc822 content keys intact[0m
    [32m  ✓[0m[90m should allow a list_id and template through[0m
    [32m  ✓[0m[90m should ignore empty bcc and cc[0m
    [32m  ✓[0m[90m should convert cc to the correct recipients and headers[0m
    [32m  ✓[0m[90m should convert bcc to the correct recipients and headers[0m
    [32m  ✓[0m[90m should not modify a transmission using the full cc/bcc syntax[0m

[0m  Webhooks Library[0m
[0m    list Method[0m
    [32m  ✓[0m[90m should call client get method with the appropriate uri[0m
    [32m  ✓[0m[90m should allow timezone to be set in options[0m
[0m    get Method[0m
    [32m  ✓[0m[90m should call client get method with the appropriate uri[0m
    [32m  ✓[0m[90m should throw an error if id is missing[0m
    [32m  ✓[0m[90m should allow timezone to be set in options[0m
[0m    create Method[0m
    [32m  ✓[0m[90m should call client post method with the appropriate uri and payload[0m
    [32m  ✓[0m[90m should throw an error if webhook is missing[0m
[0m    update Method[0m
    [32m  ✓[0m[90m should call client put method with the appropriate uri[0m
    [32m  ✓[0m[90m should throw an error if id is missing[0m
    [32m  ✓[0m[90m should throw an error if webhook is missing[0m
[0m    delete Method[0m
    [32m  ✓[0m[90m should call client delete method with the appropriate uri[0m
    [32m  ✓[0m[90m should throw an error if id is missing[0m
[0m    validate Method[0m
    [32m  ✓[0m[90m should call client post method with the appropriate uri and payload[0m
    [32m  ✓[0m[90m should throw an error if id is missing[0m
    [32m  ✓[0m[90m should throw an error if message is missing[0m
[0m    getBatchStatus Method[0m
    [32m  ✓[0m[90m should call client get method with the appropriate uri[0m
    [32m  ✓[0m[90m should throw an error if id is missing[0m
    [32m  ✓[0m[90m should allow limit to be set in options[0m
[0m    getDocumentation Method[0m
    [32m  ✓[0m[90m should call client get method with the appropriate uri[0m
[0m    getSamples Method[0m
    [32m  ✓[0m[90m should call client get method with the appropriate uri[0m
    [32m  ✓[0m[90m should allow events to be set in options[0m


[92m [0m[32m 143 passing[0m[90m (345ms)[0m


=============================== Coverage summary ===============================
Statements   : 100% ( 422/422 )
Branches     : 99.6% ( 250/251 )
Functions    : 100% ( 82/82 )
Lines        : 100% ( 419/419 )
================================================================================
I am package node-ul .....

> ul@5.2.15 test
> node test

  ➡️ ul
     ⚡ should merge one level objects
     ⚡ should create object clones
     ⚡ should get the correct path to the home directory
     ⚡ should merge more than two objects
     ⚡ should merge objects deeply
     ⚡ should merge arrays
     ⚡ should merge one level objects
I am package node-util .....

> util@0.12.5 test
> node test/node/index.js

I am package node-vault .....

> node-vault@0.9.22 test
> mocha


[0m[0m
[0m  integration[0m
[0m    node-vault[0m
    [31m  1) should initialize a vault server[0m
    [31m  2) should show the current status of the vault server[0m

[0m  node-vault[0m
[0m    module[0m
    [32m  ✓[0m[90m should export a function that returns a new client[0m
    [32m  ✓[0m[90m should set default values for request library[0m
    [32m  ✓[0m[90m should set additional values for request library[0m
    [32m  ✓[0m[90m should disable ssl security based on vault environment variable[0m
[0m    client[0m
[0m      help(path, options)[0m
      [32m  ✓[0m[90m should response help text for any path[0m
      [32m  ✓[0m[90m should handle undefined options[0m
[0m      list(path, requestOptions)[0m
[0m        with default options[0m
        [32m  ✓[0m[90m should list entries at the specific path[0m
[0m        with noCustomVerbs option[0m
        [32m  ✓[0m[90m should list entries at the specific path[0m
[0m      write(path, data, options)[0m
      [32m  ✓[0m[90m should write data to path[0m
      [32m  ✓[0m[90m should handle undefined options[0m
[0m      read(path, options)[0m
      [32m  ✓[0m[90m should read data from path[0m
      [32m  ✓[0m[90m should handle undefined options[0m
[0m      delete(path, options)[0m
      [32m  ✓[0m[90m should delete data from path[0m
      [32m  ✓[0m[90m should handle undefined options[0m
[0m      unwrap(options)[0m
      [32m  ✓[0m[90m should return original response[0m
[0m      handleVaultResponse(response)[0m
      [32m  ✓[0m[90m should return a function that handles errors from vault server[0m
      [32m  ✓[0m[90m should return a Promise with the body if successful[0m
      [32m  ✓[0m[90m should return a Promise with the error if failed[0m
      [32m  ✓[0m[90m should return the status code if no error in the response[0m
      [32m  ✓[0m[90m should not handle response from health route as error[0m
      [32m  ✓[0m[90m should return error if error on request path with health and not sys/health[0m
      [32m  ✓[0m[90m should return a Promise with the error if no response is passed[0m
[0m      generateFunction(name, config)[0m
      [32m  ✓[0m[90m should generate a function with name as defined in config[0m
[0m        generated function[0m
        [32m  ✓[0m[90m should return a promise[0m
        [32m  ✓[0m[90m should handle config without a schema[0m
        [32m  ✓[0m[90m should handle config with schema property[0m
        [32m  ✓[0m[90m should handle invalid arguments via schema property[0m
        [32m  ✓[0m[90m should handle schema with query property[0m
        [32m  ✓[0m[90m should handle schema with request property[0m
[0m          token updates[0m
          [32m  ✓[0m[90m should set vault token based on configuration[0m
          [32m  ✓[0m[90m should not set vault token if not found in response[0m
[0m      request(options)[0m
      [32m  ✓[0m[90m should reject if options are undefined[0m
      [32m  ✓[0m[90m should handle undefined path in options[0m
      [32m  ✓[0m[90m should handle undefined method in options[0m


[92m [0m[32m 34 passing[0m[90m (98ms)[0m
[31m  2 failing[0m

[0m  1) integration
       node-vault
         should initialize a vault server:
[0m[31m     RequestError: Error: connect ECONNREFUSED 127.0.0.1:8200[0m[90m
      at new RequestError (node_modules/request-promise-core/lib/errors.js:14:15)
      at Request.plumbing.callback (node_modules/request-promise-core/lib/plumbing.js:87:29)
      at Request.RP$callback [as _callback] (node_modules/request-promise-core/lib/plumbing.js:46:31)
      at self.callback (node_modules/request/request.js:185:22)
      at Request.emit (node:events:513:28)
      at Request.onRequestError (node_modules/request/request.js:881:8)
      at ClientRequest.emit (node:events:513:28)
      at Socket.socketErrorListener (node:_http_client:481:9)
      at Socket.emit (node:events:513:28)
      at emitErrorNT (node:internal/streams/destroy:157:8)
      at emitErrorCloseNT (node:internal/streams/destroy:122:3)
      at processTicksAndRejections (node:internal/process/task_queues:83:21)
[0m
[0m  2) integration
       node-vault
         should show the current status of the vault server:
[0m[31m     RequestError: Error: connect ECONNREFUSED 127.0.0.1:8200[0m[90m
      at new RequestError (node_modules/request-promise-core/lib/errors.js:14:15)
      at Request.plumbing.callback (node_modules/request-promise-core/lib/plumbing.js:87:29)
      at Request.RP$callback [as _callback] (node_modules/request-promise-core/lib/plumbing.js:46:31)
      at self.callback (node_modules/request/request.js:185:22)
      at Request.emit (node:events:513:28)
      at Request.onRequestError (node_modules/request/request.js:881:8)
      at ClientRequest.emit (node:events:513:28)
      at Socket.socketErrorListener (node:_http_client:481:9)
      at Socket.emit (node:events:513:28)
      at emitErrorNT (node:internal/streams/destroy:157:8)
      at emitErrorCloseNT (node:internal/streams/destroy:122:3)
      at processTicksAndRejections (node:internal/process/task_queues:83:21)
[0m


I am package node-whois .....

> whois@2.14.0 test
> make test

./node_modules/.bin/mocha -u bdd -R spec -t 10000 -s 5000 --require coffeescript/register test.coffee


  #lookup()
    ✔ should work with google.com
    ✔ should work with 50.116.8.109
    ✔ should work with 2001:0db8:11a3:09d7:1f34:8a2e:07a0:765d
    ✔ should honor specified WHOIS server
    ✔ should honor specified WHOIS server with port override
    ✔ should follow specified number of redirects for domain
    ✔ should follow specified number of redirects for IP address
    ✔ should work with verbose option
    ✔ should work with nic.sh
    ✔ should work with nic.io
    ✔ should work with nic.ac
    ✔ should work with nic.tm
    ✔ should work with nic.global
    ✔ should work with srs.net.nz
    ✔ should work with redundant follow
    ✔ should work with küche.de
    ✔ should work with google.co.jp in english
    ✔ should work with registry.pro
    ✔ should fail with google.com due to timeout
    ✔ should succeed with google.com with timeout
    ✔ should work with åre.no
    ✔ should work with nic.digital
    ✔ should work with whois.nic.ai
    ✔ should work with currentzoology.org
    ✔ should work with 148.241.109.161
    ✔ should work with dot.ai
    ✔ should avoid socket BAD_PORT Error and fail with a catchable ECONNRESET with whois.yesnic.com (eigene.io)
Domain Name: GEN.XYZ
Registry Domain ID: D2192414-CNIC
Registrar WHOIS Server: whois.nic.xyz
Registrar URL: https://gen.xyz/
Updated Date: 2022-07-27T22:01:03.0Z
Creation Date: 2014-03-20T12:59:18.0Z
Registry Expiry Date: 2038-01-18T23:59:59.0Z
Registrar: XYZ.com, LLC
Registrar IANA ID: 9999
Domain Status: clientTransferProhibited https://icann.org/epp#clientTransferProhibited
Registrant Organization: Generation.XYZ LLC
Registrant State/Province: CA
Registrant Country: US
Registrant Email: Please query the RDDS service of the Registrar of Record identified in this output for information on how to contact the Registrant, Admin, or Tech contact of the queried domain name.
Admin Email: Please query the RDDS service of the Registrar of Record identified in this output for information on how to contact the Registrant, Admin, or Tech contact of the queried domain name.
Tech Email: Please query the RDDS service of the Registrar of Record identified in this output for information on how to contact the Registrant, Admin, or Tech contact of the queried domain name.
Name Server: GINA.NS.CLOUDFLARE.COM
Name Server: LEE.NS.CLOUDFLARE.COM
DNSSEC: signedDelegation
Billing Email: Please query the RDDS service of the Registrar of Record identified in this output for information on how to contact the Registrant, Admin, or Tech contact of the queried domain name.
Registrar Abuse Contact Email: xyz_abuse@gen.xyz
Registrar Abuse Contact Phone: +1.8009998422
URL of the ICANN Whois Inaccuracy Complaint Form: https://www.icann.org/wicf/
>>> Last update of WHOIS database: 2023-04-12T12:31:25.0Z <<<

For more information on Whois status codes, please visit https://icann.org/epp

>>> IMPORTANT INFORMATION ABOUT THE DEPLOYMENT OF RDAP: please visit
https://www.centralnic.com/support/rdap <<<

The Whois and RDAP services are provided by CentralNic, and contain
information pertaining to Internet domain names registered by our
our customers. By using this service you are agreeing (1) not to use any
information presented here for any purpose other than determining
ownership of domain names, (2) not to store or reproduce this data in
any way, (3) not to use any high-volume, automated, electronic processes
to obtain data from this service. Abuse of this service is monitored and
actions in contravention of these terms will result in being permanently
blacklisted. All data is (c) CentralNic Ltd (https://www.centralnic.com)

Access to the Whois and RDAP services is rate limited. For more
information, visit https://registrar-console.centralnic.com/pub/whois_guidance.

    ✔ should work with gen.xyz


  28 passing (16s)

I am package nodejs-bigquery .....

> @google-cloud/bigquery@6.0.3 pretest
> npm run compile


> @google-cloud/bigquery@6.0.3 precompile
> gts clean

version: 16
Removing build ...
I am package nodejs-dns .....

> @google-cloud/dns@3.0.2 pretest
> npm run compile


> @google-cloud/dns@3.0.2 precompile
> gts clean

version: 16
Removing build ...
I am package nodejs-file-downloader .....

> nodejs-file-downloader@4.10.6 test
> mocha *.test.js

3002


  concurrency tests
    ✔ Should download 500 files, with different names, same directory - at the same time, within a synchronous loop (1678ms)
1000
    ✔ Should download 1000 files, with identical names, same directory - at the same time, within a synchronous loop, and skip 999 (1923ms)

  Main tests
    ✔ Should download a picture and use content-type (248ms)
    ✔ Should get the deduced name
    ✔ Should override the deduced name
    ✔ Should skip same name request
    ✔ Should skip same name request, without config.fileName
    ✔ Should download a file, without a known fileName, and skip the second one
    ✔ Should get NaN in onProgress
    ✔ Should download a picture and overwrite the name
    ✔ Should download into a nested non-existing path
    ✔ Should create a number-appended file
    ✔ Should handle a file without content-length
    ✔ Should handle a file without content-type
    ✔ Should download a picture and get the name from content-disposition 
    ✔ Should download a picture with a querystring after the extension 
    ✔ Should download two pictures, with name appending
    ✔ Should download an image, with shouldBufferResponse
    ✔ Should repeat a request few times and fail
    ✔ Should repeat fail after first attempt, because of shouldStop hook
    ✔ Should fail once and finally fail
    ✔ Should use onResponse to stop download
    ✔ Should use onResponse to continue download
    ✔ Should use shouldCotinue to stop download
    ✔ Should get the underlying responseBody an Error, as JSON
    ✔ Should get the underlying responseBody an Error, as string

  timeout and cancellation tests
    ✔ Should get ERR_REQUEST_CANCELLED error after cancellation, while streaming (3009ms)
    ✔ Should get ERR_REQUEST_CANCELLED error after cancellation, before stream (2004ms)
    ✔ Should get ERR_REQUEST_CANCELLED error after cancellation, while streaming, with shouldBufferResponse (2005ms)
    ✔ Should timeout during stream, twice (3009ms)
    ✔ Should timeout during stream, twice, with shouldBufferResponse (3006ms)
    ✔ Should timeout before response (1505ms)


  32 passing (19s)

I am package nodejs-storage .....

> @google-cloud/storage@6.9.0 pretest
> npm run compile


> @google-cloud/storage@6.9.0 precompile
> gts clean

version: 16
Removing build ...
I am package opentok-node .....

> opentok@2.15.1 test
> npm run test-no-lint && npm run jasmine_node


> opentok@2.15.1 test-no-lint
> mocha ./test/*-test.js



  Callbacks
    registerCallback
      valid responses
        ✔ should return a Callback
        ✔ should fail for missing group
        ✔ should fail for missing event
        ✔ should fail for missing url
      invalid responses
        ✔ should fail for status 400
        ✔ should fail for status 403
        ✔ should fail for status 500
    unregisterCallback
      valid responses
        ✔ should not return an error
        ✔ should return an error for missing id
      invalid responses
        ✔ should fail for status 400
        ✔ should fail for status 403
        ✔ should fail for status 500
    listCallbacks
      valid responses
        ✔ should return a callback list
      invalid responses
        ✔ should fail for status 400
        ✔ should fail for status 403
        ✔ should fail for status 500

  Moderation
    forceDisconnect
      valid responses
        ✔ should not return an error
        ✔ should return an error for empty connection
        ✔ should return an error for empty session
      invalid responses
        ✔ should fail for status 400
        ✔ should fail for status 403
        ✔ should fail for status 404
        ✔ should fail for status 500

  OpenTok
    ✔ should initialize with a valid apiKey and apiSecret
    ✔ should initialize without `new`
    ✔ should not initialize with just an apiKey but no apiSecret
    ✔ should not initialize with incorrect type parameters
    ✔ should cooerce a number for the apiKey

  JWT token
    ✔ should not be expired
    ✔ should have the apiKey set as the issuer
    ✔ should not decode with an invalid secret

  when initialized with an apiUrl
    ✔ exposes the custom apiUrl
    ✔ sends its requests to the set apiUrl

  when initialized with a proxy
    ✔ sends its requests through an http proxy

  when initialized with a timeout
    ✔ sends its requests with a timeout

  when initialized without a timeout
    ✔ sends its requests with 20000 timeout

  when a user agent addendum is needed
    ✔ appends the addendum in a create session request
    - appends the addendum in an archiving request

  when there is too much network latency
    - times out when the request takes longer than the default timeout

  when initialized with bad credentials
    #createSession
      ✔ throws a client error

  #createSession
    ✔ creates a new session
    ✔ creates a media routed session
    ✔ creates a media relayed session even if the media mode is invalid
    ✔ creates a session with manual archive mode
    ✔ creates a session with always archive mode
    ✔ creates a session with manual archive mode even if the archive mode is invalid
    ✔ adds a location hint to the created session
    ✔ complains when the location value is not valid
    ✔ complains when the archive mode is always and the media mode is routed
    ✔ complains when there is no callback function
    ✔ complains when a server error takes place
    ✔ returns a Session that can generate a token
    ✔ should not modify the options object parameter

  #generateToken
    ✔ given a valid session, generates a token
    ✔ assigns a role in the token
    ✔ sets an expiration time for the token
    ✔ sets initial layout class list in the token
    ✔ complains if the sessionId is not valid
    ✔ sets connection data in the token
    ✔ complains if the sessionId is not valid
    ✔ contains a unique nonce
    ✔ does not modify passed in options

  #dial
    ✔ dials a SIP gateway and adds a stream
    ✔ dials a SIP gateway and adds a stream with custom headers
    ✔ dials a SIP gateway and adds a stream with authentication
    ✔ dials a SIP gateway and adds an encrypted media stream
    ✔ dials a SIP gateway and adds a from field
    ✔ dials DTMF signal to every connection in the session
    ✔ dials DTMF signal to specific connection
    ✔ complains if sessionId, token, SIP URI, or callback are missing or invalid
    ✔ does not modify passed in options

  #startBroadcast
    ✔ succeeds given valid parameters
    ✔ results in error if no callback method provided
    ✔ results in error if no session ID provided
    ✔ results in error if no options provided
    ✔ results in error if both dvr and lowLatency is provided for options
    ✔ results in error a response other than 200

  #patchBroadcast
    ✔ patches broadcast given addStream
    ✔ patches broadcast given removeStream
    ✔ fails to patch on emtpy function call
    ✔ fails to patch if no callback is provided

  #stopBroadcast
    ✔ succeeds given valid parameters
    ✔ results in error if no broadcastId provided
    ✔ results in error a response other than 200

  #getBroadcast
    ✔ succeeds given valid parameters
    ✔ results in error if no broadcastId provided
    ✔ results in error if no callback method provided
    ✔ results in error a response other than 200

  #listBroadcasts
    ✔ succeeds given valid parameters
    ✔ succeeds given options as valid parameters
    ✔ results in error if no callback method provided
    ✔ results in error a response other than 200

  #setBroadcastLayout
    ✔ succeeds given valid parameters
    ✔ succeeds given custom layout and stylesheet
    ✔ succeeds given a screenshareType

  #setArchiveLayout
    ✔ succeeds given valid parameters
    ✔ succeeds given custom layout and stylesheet
    ✔ succeeds given a screenshareType

  getStream
    valid responses
      ✔ should not get an error and get valid stream data given valid parameters
      ✔ should return an error if sessionId is null
      ✔ should return an error if streamId is null
      ✔ should return an error if the REST method returns a 404 response code

  muteStreams
    valid responses
      ✔ should not get an error and mute the stream
      ✔ should not get an error and mute all streams
      ✔ should not get an error and disable force mute

  listStreams
    valid responses
      ✔ should not get an error and get valid stream data given valid parameters
      ✔ should return an error if sessionId is null
      ✔ should return an error if the REST method returns a 404 response code

  Session
    ✔ initializes with no options
    when initialized with a media mode
      ✔ has a mediaMode property
      ✔ does not have a location property
    when initialized with just a location option
      ✔ has a location property
      ✔ does not have a mediaMode property
    #generateToken
      ✔ generates tokens
      ✔ assigns a role in the token
      ✔ assigns an expire time in the token
      ✔ assigns an connection data to the token

  Signal
    signalSession
      valid responses
        ✔ should not return an error
        ✔ should return an error if session is null
      invalid responses
        ✔ should fail for status 400
        ✔ should fail for status 403
        ✔ should fail for status 404
        ✔ should fail for status 500
    signalConnection
      valid responses
        ✔ should not return an error
      invalid responses
        ✔ should fail for status 400
        ✔ should fail for status 403
        ✔ should fail for status 404
        ✔ should fail for status 500


  126 passing (378ms)
  2 pending


> opentok@2.15.1 jasmine_node
> jasmine spec/opentok_spec.js

Randomized with seed 59673
Started
......................................


38 specs, 0 failures
Finished in 0.168 seconds
Randomized with seed 59673 (jasmine --random=true --seed=59673)
I am package openwhisk-client-js .....

> openwhisk@3.21.7 test
> npm run lint && npm run test:unit


> openwhisk@3.21.7 lint
> standard


> openwhisk@3.21.7 test:unit
> ava test/unit/*


  ✔ base_operation › should invoke client request for resource
  ✔ base_operation › should invoke client request for resource with identifier
  ✔ base_operation › should invoke client request with user parameters
  ✔ base_operation › should extract available query string parameters
  ✔ base_operation › should return appropriate namespace
  ✔ base_operation › should url encode namespace parameter
  ✔ names › should return default namespace
  ✔ names › should return default namespace from env param
  ✔ names › should parse namespace from resource without explicit ns
  ✔ names › should parse namespace from package resource without explicit ns
  ✔ names › should parse namespace from resource with explicit ns
  ✔ names › should parse namespace from package resource with explicit ns
  ✔ names › should parse namespace from resource with explicit ns and package but missing leading slash
  ✔ names › should throw error parsing namespace with only namespace
  ✔ names › should throw error parsing namespace with only extra paths
  ✔ names › should throw error parsing namespace with missing parts
  ✔ names › should parse id from resource without explicit ns
  ✔ names › should parse id from package resource without explicit ns
  ✔ names › should parse id from resource with explicit ns
  ✔ names › should parse id from package resource with explicit ns
  ✔ names › should parse id from resource with explicit ns and package but missing leading slash
  ✔ names › should throw error parsing id with only namespace
  ✔ names › should throw error parsing id with only extra paths
  ✔ names › should throw error parsing id with missing parts
  ✔ packages › should list all packages without parameters
  ✔ packages › should list all packages with parameters
  ✔ packages › should list all packages with parameter count
  ✔ packages › should retrieve package from string identifier
  ✔ packages › should retrieve package from identifier
  ✔ packages › should retrieve package from packageName identifier
  ✔ packages › should delete package from string identifier
  ✔ packages › should delete package from identifier
  ✔ packages › should throw error trying to invoke package
  ✔ packages › should create a new package using string id
  ✔ packages › should create a new package
  ✔ packages › should create a new package with parameters
  ✔ packages › create a new package with annotations
  ✔ packages › should update an existing package
  ✔ feeds › should be able to delete feed
  ✔ feeds › should be able to delete feed using feedName with params
  ✔ feeds › should be able to create feed
  ✔ feeds › should be able to create trigger ignoring global namespace
  ✔ feeds › should be able to create trigger using global namespace
  ✔ feeds › should be able to create trigger using options namespace
  ✔ feeds › should be able to create trigger ignoring options namespace
  ✔ feeds › should be able to create trigger from full qualified feed
  ✔ feeds › should be able to create feed using feedName with params
  ✔ feeds › should be able to get feed
  ✔ feeds › should be able to update feed
  ✔ feeds › should throw errors without trigger parameter 
  ✔ feeds › should throw errors without id parameter
  ✔ activations › list all activations
  ✔ activations › list all activations with options
  ✔ activations › list all activations with count parameter
  ✔ activations › should retrieve an activation
  ✔ activations › should retrieve an activation passing through user-agent header
  ✔ activations › should retrieve an activation using alt id parameter
  ✔ activations › should retrieve an activation using string id parameter
  ✔ activations › should retrieve an activation logs using string id
  ✔ activations › should retrieve an activation logs
  ✔ activations › should retrieve an activation result using string id
  ✔ activations › should retrieve an activation result
  ✔ activations › should throw when retrieving activation without id
  ✔ namespaces › should list all namespaces
  ✔ namespaces › should list all namespaces, passing through user-agent header
  ✔ namespaces › should list all namespaces, NOT passing through user-agent header (variant 4)
  ✔ namespaces › should list all namespaces, NOT passing through user-agent header (variant 1)
  ✔ namespaces › should list all namespaces, NOT passing through user-agent header (variant 2)
  ✔ namespaces › should list all namespaces, NOT passing through user-agent header (variant 3)
  ✔ namespaces › should list all namespaces, using __OW_USER_AGENT
  ✔ namespaces › should list all namespaces, NOT using __OW_USER_AGENT when noUserAgent true
  ✔ namespaces › should list all namespaces, NOT using __OW_USER_AGENT when user-agent is passed through
  ✔ namespaces › should list all namespaces, NOT using __OW_USER_AGENT or user-agent when noUserAgent is true
  ✔ namespaces › should retrieve namespace entities
  ✔ namespaces › should retrieve namespace entities, passing through user-agent header
  ✔ actions › should list all actions without parameters
  ✔ actions › should list all actions with parameters
  ✔ actions › should list all actions with parameter count
  ✔ actions › should retrieve action from identifier
  ✔ actions › should retrieve action from identifier with code query parameter
  ✔ actions › should retrieve action from string identifier
  ✔ actions › should delete action from identifier
  ✔ actions › should retrieve actionName from identifier
  ✔ actions › should delete action from string identifier
  ✔ actions › should invoke action
  ✔ actions › should invoke action from string identifier
  ✔ actions › should invoke fully qualified action
  ✔ actions › should invoke fully qualified action with package
  ✔ actions › should invoke blocking action with body
  ✔ actions › should invoke blocking action using actionName
  ✔ actions › create a new action
  ✔ actions › create a new action with custom kind
  ✔ actions › create a new action with custom body
  ✔ actions › create a new action with buffer body
  ✔ actions › create a new action with default parameters
  ✔ actions › create a new action with annotations
  ✔ actions › update a action with no parameters
  ✔ actions › create a new action with limits
  ✔ actions › create a new action with concurrency setting
  ✔ actions › create an action without providing an action body
  ✔ actions › create a new action with version parameter
  ✔ actions › create a new sequence action
  ✔ actions › create a new sequence action with additional options
  ✔ actions › creating sequence action with invalid sequence parameter
  ✔ actions › creating sequence action with empty array
  ✔ actions › creating action with both sequence and action parameters
  ✔ actions › should pass through requested User-Agent header
  ✔ actions › should pass through requested User-Agent header even when __OW_USER_AGENT is set
  ✔ actions › should pass through exec.image parameter
  ✔ actions › should pass through exec.image parameter (for all kinds)
  ✔ actions › should not reset kind parameter when passing through exec.image parameter
  ✔ actions › should invoke action to retrieve result without blocking
  ✔ actions › should invoke action to retrieve result
  ✔ actions › should invoke action to retrieve result but request is demoted to async
  ✔ triggers › should list all triggers without parameters
  ✔ triggers › should list all triggers with parameters
  ✔ triggers › should list all triggers with parameter count
  ✔ triggers › should retrieve trigger from identifier
  ✔ triggers › should retrieve trigger from string identifier
  ✔ triggers › should delete trigger from identifier
  ✔ triggers › should delete trigger from string identifier
  ✔ triggers › should retrieve triggerName from identifier
  ✔ triggers › should invoke trigger
  ✔ triggers › should invoke trigger from string identifier
  ✔ triggers › should invoke fully qualified trigger
  ✔ triggers › should invoke fully qualified trigger with package
  ✔ triggers › should invoke trigger with body
  ✔ triggers › should invoke trigger using triggerName
  ✔ triggers › create a new trigger
  ✔ triggers › create a new trigger with custom body
  ✔ triggers › create a new trigger with annotations
  ✔ rules › should list all rules without parameters
  ✔ rules › should list all rules with parameters
  ✔ rules › should list all rules with parameter count
  ✔ rules › should retrieve rule from identifier
  ✔ rules › should retrieve rule from ruleName identifier
  ✔ rules › should retrieve rule from string identifier
  ✔ rules › should delete rule from identifier
  ✔ rules › should delete rule from string identifier
  ✔ rules › should throw error trying to invoke rule
  ✔ rules › create a new rule
  ✔ rules › create a new rule using fully qualified names
  ✔ rules › create a new rule with annotations
  ✔ rules › create a rule without providing a rule name
  ✔ rules › create a rule without providing an action name
  ✔ rules › create a rule without providing a trigger name
  ✔ rules › update existing rule
  ✔ rules › should enable rule
  ✔ rules › should disable rule
  ✔ rules › should parse correct namespace for actions names with no other namespaces
  ✔ rules › should parse correct namespace for actions names with global namespace
  ✔ client › should use default constructor options
  ✔ client › should support explicit constructor options
  ✔ client › apihost and apiversion set
  ✔ client › should support deprecated explicit constructor options
  ✔ client › should use uuid from auth key as space guid if apigw_token present
  ✔ client › should use environment parameters for options if not set explicitly.
  ✔ client › should use options for parameters even if environment parameters are available.
  ✔ client › should throw error when missing API key option.
  ✔ client › should throw error when missing both API and API Host options.
  ✔ client › should handle multiple api parameter formats
  ✔ client › should return path and status code in error message
  ✔ client › should return response error string in error message
  ✔ client › should throw errors for non-HTTP response failures
  ✔ client › should generate auth header from API key
  ✔ client › should generate auth header from 3rd party authHandler plugin
  ✔ client › option headers are respected
  ✔ client › should return default request parameters without options
  ✔ client › should return request parameters with merged options
  ✔ client › should return request parameters transaction id
  ✔ client › should return request parameters with cert and key client options
  ✔ client › should be able to set proxy uri as client options.
  ✔ client › should be able to set http agent using client options.
  ✔ client › should contain x-namespace-id header when namespace in constructor options
  ✔ client › should not contain x-namespace-id header when namespace is not in contructor options
  ✔ client › should return request parameters with explicit api option
  ✔ client › should be able to use env params to set proxy option.
  ✔ client › should handle http request errors (112ms)
  ✔ client › should not retry when no retry config available (109ms)
  ✔ client › should return response (121ms)
  ✔ client › should not retry on success (114ms)
  ✔ resources › should throw errors when missing resource identifier
  ✔ resources › should parse action name from identifier
  ✔ resources › should parse namespace from identifier and options
  ✔ resources › should send HTTP GET request for resource list
  ✔ resources › should send HTTP GET request with id for retrieving resource
  ✔ resources › should send HTTP GET request with string id for retrieving resource
  ✔ resources › should send HTTP POST request with id for invoking resource
  ✔ resources › should send HTTP POST request with string id for invoking resource
  ✔ resources › should send HTTP PUT request with id for creating resource
  ✔ resources › should send HTTP PUT request with string id for creating resource
  ✔ resources › should send HTTP PUT request with id and overwrite for updating resource
  ✔ resources › should send HTTP PUT request with string id and overwrite for updating resource
  ✔ resources › should send HTTP DELETE request with id for removing resource
  ✔ resources › should send HTTP DELETE request with string id for removing resource
  ✔ resources › should send multiple requests for array parameters
  ✔ routes › should retrieve routes from name
  ✔ routes › should retrieve routes from basepath
  ✔ routes › should retrieve routes with apigwToken and name
  ✔ routes › should retrieve routes with apigwToken and basepath
  ✔ routes › get routes with incorrect parameters
  ✔ routes › should override package name for apigateway
  ✔ routes › should list all routes
  ✔ routes › should list all routes with apigwToken
  ✔ routes › should list all routes with parameters including basepath
  ✔ routes › should list all routes with parameters including name
  ✔ routes › list routes providing basepath and name
  ✔ routes › should delete a route with basepath
  ✔ routes › should delete a route with name
  ✔ routes › should delete a route with apigw token
  ✔ routes › should delete a route with parameters
  ✔ routes › delete routes without providing basepath or name
  ✔ routes › delete routes providing basepath and name
  ✔ routes › should create a route
  ✔ routes › should create a route from swagger file
  ✔ routes › should create a route with api name
  ✔ routes › should create a route with apigwToken
  ✔ routes › should create a route with response type
  ✔ routes › should create a route with secure key
  ✔ routes › should create a route with apigwToken and action with package
  ✔ routes › should create a route with apigwToken and action with package & ns
  ✔ routes › should create a route using global ns
  ✔ routes › should create a route using basepath
  ✔ routes › should create a route using fully-qualified action name
  ✔ routes › should create a route using action name with ns
  ✔ routes › should create a route using action name with ns overriding defaults
  ✔ routes › should create a route with path parameters
  ✔ routes › should parse path parameters
  ✔ routes › create routes missing mandatory parameters
  ✔ client › should handle errors even after retries (491ms)
  ✔ client › should support retries on error (543ms)
  ✔ client › should retry with same url + querystring (1.3s)

  232 tests passed

I am package packager .....

> level-packager@6.0.1 test
> standard && hallmark && nyc node test.js

I am package parser-js .....

> @asyncapi/parser@1.17.2 test
> npm run test:browser:cleanup && npm run test:lib && npm run test:parseFromUrl && npm run cover:report && npm run test:browser


> @asyncapi/parser@1.17.2 test:browser:cleanup
> rimraf "test/sample_browser/bundle.js"


> @asyncapi/parser@1.17.2 test:lib
> npm run test:browser:cleanup && nyc --silent --no-clean mocha --exclude "test/browser_test.js" --exclude "test/parseFromUrl_test.js" --recursive


> @asyncapi/parser@1.17.2 test:browser:cleanup
> rimraf "test/sample_browser/bundle.js"



  ✔ should not apply traits (104ms)
  ✔ should apply traits
  ✔ should apply `x-parser-spec-parsed` extension
  ✔ should parse and include examples (117ms)
  ✔ should fail on invalid examples
  asyncapiSchemaFormatParser
    ✔ should throw an error because of invalid schema
    ✔ should not throw error if payload not provided
    ✔ should handle true/false JSON Schemas
    ✔ should deep clone schema into x-parser-original-payload

  validateServerVariables()
    ✔ should successfully validate the server variables
    ✔ should successfully validate if server object not provided
    ✔ should throw error that one of variables is not provided
    ✔ should throw error that variables are not provided if there is no variables object
    ✔ should throw error that variables are not provided even if they are but not matching the name
    ✔ should throw error
    ✔ should successfully validate the server variables that has enum and an example match one of them
    ✔ should successfully validate the server variables has only default and example, no enum
    ✔ should throw error on the server variables has one example and it does not match any of provided enum
    ✔ should throw error on the server variables that has wrong examples but not on the ones that have correct examples

  validateChannel()
    ✔ should successfully validate if channel object not provided
    ✔ should successfully validate channel param
    ✔ should successfully validate channel param for 2 channels
    ✔ should throw error that one of provided channel params is not declared
    ✔ should throw error that one of provided channel params is not declared even if other not provided params have a corresponding parameter object
    ✔ should throw error when there are no parameter objects
    ✔ should throw error
    ✔ should successfully validate channel name without variable
    ✔ should successfully validate channel name is just a single slash (/)
    ✔ should throw error that the provided channel name is invalid
    ✔ should throw error that the provided channel name is invalid when channel name is just a single slash (/)
    ✔ should throw error that channel has invalid name with two query params
    ✔ should throw error that one of the provided channel name is invalid
    ✔ should throw error that both provided channel name is invalid
    ✔ should throw error that single channel definition failed both validations
    ✔ should throw error that both provided channels contain errors
    ✔ should successfully validate channel with servers that are all declared in servers object
    ✔ should throw error that servers list references an unknown server
    ✔ should throw error that servers list references an unknown server in two channels, one is valid

  validateOperationId()
    ✔ should successfully validate operationId
    ✔ should successfully validate if channel object not provided
    ✔ should throw error that operationIds are duplicated and that they duplicate

  validateMessageId()
    ✔ should successfully validate messageId
    ✔ should throw error that messageIds are duplicated and that they duplicate
    ✔ should throw error that messageIds are duplicated and that they duplicate with oneOf
    ✔ should only throw error for message that have defined duplicate messageIds

  validateServerSecurity()
    ✔ should successfully validate server security
    ✔ should successfully validate if server security not provided
    ✔ should successfully validate server security of special security type like oauth2
    ✔ should throw error that server has no security schema provided when components schema object is there but missing proper values
    ✔ should throw error that server has no security schema provided when components schema object is not in the document
    ✔ should throw error that server security is not declared as empty array

  jsonParseBetterErrors
TypeError: Cannot parse an empty array
    at handleJsonNotString (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/lib/json-parse.js:2:1561)
    at module.exports (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/lib/json-parse.js:2:328)
    at /data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/test/json-parse_test.js:14:13
    at testsUtils.checkErrorWrapper (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/test/testsUtils.js:32:11)
    at Context.<anonymous> (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/test/json-parse_test.js:13:11)
    at callFn (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runnable.js:366:21)
    at Test.Runnable.run (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runnable.js:354:5)
    at Runner.runTest (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runner.js:666:10)
    at /data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runner.js:789:12
    at next (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runner.js:581:14)
    at /data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runner.js:591:7
    at next (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runner.js:474:14)
    at Immediate.<anonymous> (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runner.js:559:5)
    at processImmediate (node:internal/timers:466:21)
    ✔ should throw error if passed value is an array
TypeError: Cannot parse [object Map]
    at handleJsonNotString (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/lib/json-parse.js:2:1561)
    at module.exports (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/lib/json-parse.js:2:328)
    at /data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/test/json-parse_test.js:23:13
    at testsUtils.checkErrorWrapper (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/test/testsUtils.js:32:11)
    at Context.<anonymous> (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/test/json-parse_test.js:22:11)
    at callFn (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runnable.js:366:21)
    at Test.Runnable.run (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runnable.js:354:5)
    at Runner.runTest (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runner.js:666:10)
    at /data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runner.js:789:12
    at next (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runner.js:581:14)
    at /data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runner.js:591:7
    at next (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runner.js:474:14)
    at Immediate.<anonymous> (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runner.js:559:5)
    at processImmediate (node:internal/timers:466:21)
    ✔ should throw error if passed value is a Map
TypeError: Cannot parse [object Set]
    at handleJsonNotString (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/lib/json-parse.js:2:1561)
    at module.exports (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/lib/json-parse.js:2:328)
    at /data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/test/json-parse_test.js:33:13
    at testsUtils.checkErrorWrapper (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/test/testsUtils.js:32:11)
    at Context.<anonymous> (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/test/json-parse_test.js:32:11)
    at callFn (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runnable.js:366:21)
    at Test.Runnable.run (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runnable.js:354:5)
    at Runner.runTest (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runner.js:666:10)
    at /data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runner.js:789:12
    at next (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runner.js:581:14)
    at /data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runner.js:591:7
    at next (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runner.js:474:14)
    at Immediate.<anonymous> (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runner.js:559:5)
    at processImmediate (node:internal/timers:466:21)
    ✔ should throw error if passed value is a Set
TypeError: Cannot parse [object WeakMap]
    at handleJsonNotString (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/lib/json-parse.js:2:1561)
    at module.exports (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/lib/json-parse.js:2:328)
    at /data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/test/json-parse_test.js:43:13
    at testsUtils.checkErrorWrapper (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/test/testsUtils.js:32:11)
    at Context.<anonymous> (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/test/json-parse_test.js:42:11)
    at callFn (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runnable.js:366:21)
    at Test.Runnable.run (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runnable.js:354:5)
    at Runner.runTest (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runner.js:666:10)
    at /data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runner.js:789:12
    at next (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runner.js:581:14)
    at /data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runner.js:591:7
    at next (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runner.js:474:14)
    at Immediate.<anonymous> (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runner.js:559:5)
    at processImmediate (node:internal/timers:466:21)
    ✔ should throw error if passed value is a WeakMap
TypeError: Cannot parse [object WeakSet]
    at handleJsonNotString (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/lib/json-parse.js:2:1561)
    at module.exports (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/lib/json-parse.js:2:328)
    at /data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/test/json-parse_test.js:53:13
    at testsUtils.checkErrorWrapper (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/test/testsUtils.js:32:11)
    at Context.<anonymous> (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/test/json-parse_test.js:52:11)
    at callFn (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runnable.js:366:21)
    at Test.Runnable.run (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runnable.js:354:5)
    at Runner.runTest (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runner.js:666:10)
    at /data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runner.js:789:12
    at next (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runner.js:581:14)
    at /data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runner.js:591:7
    at next (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runner.js:474:14)
    at Immediate.<anonymous> (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runner.js:559:5)
    at processImmediate (node:internal/timers:466:21)
    ✔ should throw error if passed value is a WeakSet
TypeError: Cannot parse Symbol(test)
    at handleJsonNotString (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/lib/json-parse.js:2:1561)
    at module.exports (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/lib/json-parse.js:2:328)
    at /data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/test/json-parse_test.js:63:13
    at testsUtils.checkErrorWrapper (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/test/testsUtils.js:32:11)
    at Context.<anonymous> (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/test/json-parse_test.js:62:11)
    at callFn (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runnable.js:366:21)
    at Test.Runnable.run (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runnable.js:354:5)
    at Runner.runTest (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runner.js:666:10)
    at /data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runner.js:789:12
    at next (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runner.js:581:14)
    at /data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runner.js:591:7
    at next (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runner.js:474:14)
    at Immediate.<anonymous> (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runner.js:559:5)
    at processImmediate (node:internal/timers:466:21)
    ✔ should throw error if passed value is a Symbol
TypeError: Cannot parse () => {}
    at handleJsonNotString (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/lib/json-parse.js:2:1561)
    at module.exports (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/lib/json-parse.js:2:328)
    at /data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/test/json-parse_test.js:73:13
    at testsUtils.checkErrorWrapper (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/test/testsUtils.js:32:11)
    at Context.<anonymous> (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/test/json-parse_test.js:72:11)
    at callFn (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runnable.js:366:21)
    at Test.Runnable.run (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runnable.js:354:5)
    at Runner.runTest (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runner.js:666:10)
    at /data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runner.js:789:12
    at next (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runner.js:581:14)
    at /data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runner.js:591:7
    at next (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runner.js:474:14)
    at Immediate.<anonymous> (/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/mocha/lib/runner.js:559:5)
    at processImmediate (node:internal/timers:466:21)
    ✔ should throw error if passed value is a function

  MixinBindings
    #hasBindings()
      ✔ should return a boolean indicating if the object has bindings
    #bindings()
      ✔ should return a map of bindings
      ✔ should return an empty object
    #bindingProtocols()
      ✔ should return an array of protocol names
      ✔ should return an empty array
    #hasBinding()
      ✔ should return a boolean indicating if the bindings object has appropriate binding by name
    #binding()
      ✔ should return a binding object
      ✔ should return a null

  MixinDescription
    #hasDescription()
      ✔ should return a boolean indicating if the object has description
    #description()
      ✔ should return a value
      ✔ should return a null

  MixinExternalDocs
    #hasExternalDocs()
      ✔ should return a boolean indicating if the object has externalDocs
    #externalDocs()
      ✔ should return a externalDocs object
      ✔ should return a null

  MixinSpecificationExtensions
    #hasExtensions()
      ✔ should return a boolean indicating if the object has extensions
    #extensions()
      ✔ should return a object with extensions
      ✔ should return a empty object
    #extensionKeys()
      ✔ should return an array of extension keys
      ✔ should return an empty array
    #extKeys()
      ✔ should return an array of extension keys
      ✔ should return a null
    #hasExtension()
      ✔ should return a boolean indicating if the object has appropriate extension by key
      ✔ should return false key is not prefixed by `x-`
    #extension()
      ✔ should return a value
      ✔ should return an undefined
      ✔ should return null if key is not prefixed by `x-`
    #hasExt()
      ✔ should return a boolean indicating if the object has appropriate extension by key
      ✔ should return false key is not prefixed by `x-`
    #ext()
      ✔ should return a value
      ✔ should return an undefined
      ✔ should return null if key is not prefixed by `x-`

  MixinTags
    #hasTags()
      ✔ should return a boolean indicating if the object has tags
    #tags()
      ✔ should return an array of tag objects
      ✔ should return an empty array
    #tagNames()
      ✔ should return an array of tag names
      ✔ should return an empty array
    #hasTag()
      ✔ should return a boolean indicating if the tags object has appropriate tag by name
    #tag()
      ✔ should return a tag object
      ✔ should return a null

  AsyncAPIDocument
    constructor
      ✔ should not change assigned uids
    assignUidToParameterSchemas()
      ✔ should assign uids to parameters
    assignUidToComponentParameterSchemas()
      ✔ should assign uids to component parameters
    #info()
      ✔ should return an info object
    #id()
      ✔ should return the id string
    #hasServers()
      ✔ should return a boolean indicating if the AsyncAPI document has servers
    #servers()
      ✔ should return a map of server objects
      ✔ should return an empty object if the AsyncAPI document has no defined servers
    #serverNames()
      ✔ should return an array of strings
      ✔ should return an empty array if the AsyncAPI document has no defined servers
    #server()
      ✔ should return a specific server object
      ✔ should return null if a server name is not provided
      ✔ should return null if a server name is not found
    #hasDefaultContentType()
      ✔ should return true if field exists
      ✔ should return false if field does not exist
    #defaultContentType()
      ✔ should return string if field exists
      ✔ should return null if field does not exist
    #hasChannels()
      ✔ should return a boolean indicating if the AsyncAPI document has channels
    #channels()
      ✔ should return a map of channel objects
      ✔ should return an empty object if the AsyncAPI document has no defined channels
    #channelNames()
      ✔ should return an array of strings
      ✔ should return an empty array if the AsyncAPI document has no defined channels
    #channel()
      ✔ should return a specific channel object
      ✔ should return null if a channel name is not provided
      ✔ should return null if a channel name is not found
    #hasComponents()
      ✔ should return a boolean indicating if the AsyncAPI document has components
    #components()
      ✔ should return the components object
    #hasMessages()
      ✔ should return true if there is a message in components but not in channels
      ✔ should return true if there is a message in channels operations but not in components
      ✔ should return false if there are no messages neither in components nor in channels operations
    #allMessages()
      ✔ should return an array with all the messages used in the document and overwrite the message from channel
      ✔ should return an array with all the messages used in the document
    #allSchemas()
      ✔ should return additional items schemas when no items specified
      ✔ should return additional property schemas when no properties are specified
      ✔ should return a map with all the schemas used in the document
      ✔ should return a map with all the nested schemas
    #traverseSchemas()
      ✔ should not include parameter schemas if defined
      ✔ should not include payload schemas if defined
      ✔ should not include header schemas if defined
      ✔ should not include arrays if defined
      ✔ should not include components if defined
      ✔ should not include combined schemas if defined
      ✔ should not include conditional schemas if defined
      ✔ should not include dependencies schemas if defined
      ✔ should not include definitions schemas if defined
      ✔ should include all schemas
    #stringify()
      ✔ should stringify simple document
      ✔ should stringify document with circular references
      ✔ should copy object
    #parse()
      ✔ should parse stringified simple document
      ✔ should not parse invalid document
      ✔ should parse stringified document with circular references
    mixins
      ✔ model should inherit from mixins

  Base
    #json()
      ✔ should return the whole JSON object
      ✔ should return the value of a given key
      ✔ should return the value of a given key, even when this is falsy

  ChannelParameter
    #location()
      ✔ should return a string
    #schema()
      ✔ should return a Schema object
    #mixins
      ✔ model should inherit from mixins

  Channel
    #hasParameters()
      ✔ should return a boolean indicating if the AsyncAPI document has channel parameters
    #parameters()
      ✔ should return a map of ChannelParameter objects
    #parameter()
      ✔ should return a specific ChannelParameter object
    #hasServers()
      ✔ should return a boolean indicating if the channel has a servers list
    #servers()
      ✔ should return an array of String server names if the channel has a servers list
      ✔ should return an empty array if the channel doesn't have servers
    #server()
      ✔ should return null if the channel doesn't have servers
      ✔ should return a specific server String name
      ✔ should return null when index is out of bounds
      ✔ should return null if index is not a number
    #publish()
      ✔ should return a PublishOperation object
    #subscribe()
      ✔ should return a SubscribeOperation object
    #hasPublish()
      ✔ should return true if the channel contains the publish operation
    #hasSubscribe()
      ✔ should return true if the channel contains the publish operation
    #mixins
      ✔ model should inherit from mixins

  Components
    #channels()
      ✔ should return a map of Channel objects
      ✔ should return an empty object if the components field has no defined channels
    #hasChannels()
      ✔ should return a boolean indicating if the components field has channels
    #channel()
      ✔ should return a specific Channel object
      ✔ should return null if a channel name is not provided
      ✔ should return null if a channel name is not found
    #messages()
      ✔ should return a map of Message objects
      ✔ should return an empty object if the components field has no defined messages
    #hasMessages()
      ✔ should return a boolean indicating if the components field has messages
    #message()
      ✔ should return a specific Message object
      ✔ should return null if a message name is not provided
      ✔ should return null if a message name is not found
    #schemas()
      ✔ should return a map of Schema objects
      ✔ should return an empty object if the components field has no defined schemas
    #hasSchemas()
      ✔ should return a boolean indicating if the components field has schemas
    #schema()
      ✔ should return a specific Schema object
      ✔ should return null if a schema name is not provided
      ✔ should return null if a schema name is not found
    #securitySchemes()
      ✔ should return a map of Security Scheme objects
      ✔ should return an empty object if the components field has no defined securitySchemes
    #hasSecuritySchemes()
      ✔ should return a boolean indicating if the components field has securitySchemes
    #securityScheme()
      ✔ should return a specific securityScheme object
      ✔ should return null if a securityScheme name is not provided
      ✔ should return null if a securityScheme name is not found
    #servers()
      ✔ should return a map of Server objects
      ✔ should return an empty object if the components field has no defined servers
    #hasServers()
      ✔ should return a boolean indicating if the components field has servers
    #server()
      ✔ should return a specific Server object
      ✔ should return null if a message name is not provided
      ✔ should return null if a message name is not found
    #parameters()
      ✔ should return a map of ChannelParameter objects
      ✔ should return an empty object if the components field has no defined parameters
    #hasParameters()
      ✔ should return a boolean indicating if the components field has parameters
    #parameter()
      ✔ should return a specific parameter object
      ✔ should return null if a parameter name is not provided
      ✔ should return null if a parameter name is not found
    #correlationIds()
      ✔ should return a map of CorrelationId objects
      ✔ should return an empty object if the components field has no defined correlationIds
    #hasCorrelationIds()
      ✔ should return a boolean indicating if the components field has correlationIds
    #correlationId()
      ✔ should return a specific correlationId object
      ✔ should return null if a correlationId name is not provided
      ✔ should return null if a correlationId name is not found
    #operationTraits()
      ✔ should return a map of OperationTrait objects
      ✔ should return an empty object if the components field has no defined operationTraits
    #hasOperationTraits()
      ✔ should return a boolean indicating if the components field has operationTraits
    #operationTrait()
      ✔ should return a specific operationTrait object
      ✔ should return null if a operationTrait name is not provided
      ✔ should return null if a operationTrait name is not found
    #messageTraits()
      ✔ should return a map of MessageTrait objects
      ✔ should return an empty object if the components field has no defined messageTraits
    #hasMessageTraits()
      ✔ should return a boolean indicating if the components field has messageTraits
    #messageTrait()
      ✔ should return a specific messageTrait object
      ✔ should return null if a messageTrait name is not provided
      ✔ should return null if a messageTrait name is not found
    #mixins
      ✔ model should inherit from mixins
    #serverVariables()
      ✔ should return a map of ServerVariable objects
      ✔ should return an empty object if the components field has no defined serverVariables
    #hasServerVariables()
      ✔ should return a boolean indicating if the components field has serverVariables
    #serverVariable()
      ✔ should return a specific serverVariable object
      ✔ should return null if a serverVariable name is not provided
      ✔ should return null if a serverVariable name is not found

  Contact
    #name()
      ✔ should return a string
    #url()
      ✔ should return a string
    #email()
      ✔ should return a string
    #mixins
      ✔ model should inherit from mixins

  CorrelationId
    #location()
      ✔ should return a string
    #mixins
      ✔ model should inherit from mixins

  ExternalDocs
    #url()
      ✔ should return a string
    #mixins
      ✔ model should inherit from mixins

  Info
    #title()
      ✔ should return a string
    #version()
      ✔ should return a string
    #termsOfService()
      ✔ should return a string
    #license()
      ✔ should return a license object
      ✔ should return null if a license object is not given
    #contact()
      ✔ should return a license object
      ✔ should return null if a contact object is not given
    #mixins
      ✔ model should inherit from mixins

  License
    #name()
      ✔ should return a string
    #url()
      ✔ should return a string
    #mixins
      ✔ model should inherit from mixins

  MessageTrait
    #headers()
      ✔ should return a map of Schema objects
    #header()
      ✔ should return a specific Schema object
    #payload()
      ✔ should NOT have a payload method
    #originalPayload()
      ✔ should NOT have an originalPayload method
    #id()
      ✔ should return a string
    #correlationId()
      ✔ should return a CorrelationId object
    #schemaFormat()
      ✔ should return a string
    #originalSchemaFormat()
      ✔ should NOT have an originalSchemaFormat method
    #contentType()
      ✔ should return a string
    #name()
      ✔ should return a string
    #title()
      ✔ should return a string
    #summary()
      ✔ should return a string
    #examples()
      ✔ should return an array of examples
    #mixins
      ✔ model should inherit from mixins

  MessageTraitable
    #headers()
      ✔ should return a map of Schema objects
    #header()
      ✔ should return a specific Schema object
    #payload()
      ✔ should NOT have a payload method
    #originalPayload()
      ✔ should NOT have an originalPayload method
    #id()
      ✔ should return a string
    #correlationId()
      ✔ should return a CorrelationId object
    #schemaFormat()
      ✔ should return a string
    #originalSchemaFormat()
      ✔ should NOT have an originalSchemaFormat method
    #contentType()
      ✔ should return a string
    #name()
      ✔ should return a string
    #title()
      ✔ should return a string
    #summary()
      ✔ should return a string
    #examples()
      ✔ should return an array of examples
    #mixins
      ✔ model should inherit from mixins

  Message
    #uid()
      ✔ should return a string with the messageId
      ✔ should return a string with the name when messageId is not available
      ✔ should return a string with the x-parser-message-name extension when name and messageId are not available
      ✔ should return a string with the base64 representation of the object when x-parser-message-name extension, name and messageId are not available
    #headers()
      ✔ should return a map of Schema objects
    #header()
      ✔ should return a specific Schema object
    #payload()
      ✔ should return payload as a Schema object
    #originalPayload()
      ✔ should return the original payload
    #correlationId()
      ✔ should return a CorrelationId object
    #schemaFormat()
      ✔ should return a string
    #originalSchemaFormat()
      ✔ should return a string
    #contentType()
      ✔ should return a string
    #name()
      ✔ should return a string
    #title()
      ✔ should return a string
    #summary()
      ✔ should return a string
    #traits()
      ✔ should return a list of traits from traits
      ✔ should return a list of traits from x-parser-original-traits
    #hasTraits()
      ✔ should return true if in traits
      ✔ should return true if in x-parser-original-traits
      ✔ should return false
    #examples()
      ✔ should return an array of examples
    #mixins
      ✔ model should inherit from mixins

  OAuthFlow
    #authorizationUrl()
      ✔ should return a string
    #tokenUrl()
      ✔ should return a string
    #refreshUrl()
      ✔ should return a string
    #scopes()
      ✔ should return a Map of strings
    #mixins
      ✔ model should inherit from mixins

  OperationTrait
    #summary()
      ✔ should return a string
    #id()
      ✔ should return a string
    #messages()
      ✔ should NOT have a messages method
    #message()
      ✔ should NOT have a message method
    #mixins
      ✔ model should inherit from mixins

  OperationTraitable
    #summary()
      ✔ should return a string
    #id()
      ✔ should return a string
    #messages()
      ✔ should NOT have a messages method
    #message()
      ✔ should NOT have a message method
    #mixins
      ✔ model should inherit from mixins

  Operation
    #summary()
      ✔ should return a string
    #traits()
      ✔ should return a list of traits
      ✔ should return a list of traits from x-parser-original-traits
    #hasTraits()
      ✔ should return true
      ✔ should return true if in x-parser-original-traits
      ✔ should return false
    #id()
      ✔ should return a string
    #messages()
      ✔ should return an array of Message objects
      ✔ should return an array of Message objects when using oneOf
    #message()
      ✔ should return null if channel doesn't have a message
      ✔ should return a specific Message object
      ✔ should return a Message object if no index is provided and message is oneOf from one element
      ✔ should return null when index is out of bounds
      ✔ should return null if index is not a number
      ✔ should return message object if no index is provided and message is not oneOf
    #mixins
      ✔ model should inherit from mixins
    #security()
      ✔ should return an array of security requirements objects

  Schema
    #multipleOf()
      ✔ should return a number
    #uid()
      ✔ should return a string
      ✔ should return a string with the value of x-parser-schema-id when $id is not available
    #$id()
      ✔ should return a string
    #maximum()
      ✔ should return a number
    #exclusiveMaximum()
      ✔ should return a number
    #minimum()
      ✔ should return a number
    #exclusiveMinimum()
      ✔ should return a number
    #maxLength()
      ✔ should return a number
    #minLength()
      ✔ should return a number
    #pattern()
      ✔ should return a string
    #maxItems()
      ✔ should return a number
    #minItems()
      ✔ should return a number
    #uniqueItems()
      ✔ should return a boolean
    #maxProperties()
      ✔ should return a number
    #minProperties()
      ✔ should return a number
    #required()
      ✔ should return a number
    #enum()
      ✔ should return a number
    #type()
      ✔ should return a string
      ✔ should return an array of strings
    #allOf()
      ✔ should return an array of Schema objects
    #oneOf()
      ✔ should return an array of Schema objects
    #anyOf()
      ✔ should return an array of Schema objects
    #not()
      ✔ should return a Schema object
      ✔ should return null when not is omitted from the json document
    #items()
      ✔ should return a Schema object
      ✔ should return an array of Schema objects
    #properties()
      ✔ should return a map of Schema objects
    #property()
      ✔ should return a specific Schema object
    #additionalProperties()
      ✔ should return a Schema object
      ✔ should return a boolean
      ✔ should return undefined when not defined
      ✔ should return undefined when null
    #additionalItems()
      ✔ should return a Schema object
      ✔ should return undefined when not defined
      ✔ should return undefined when null
    #patternProperties()
      ✔ should return a map of Schema objects
    #const()
      ✔ should return a number
      ✔ should return null
      ✔ should return an object
      ✔ should return an array
    #contains()
      ✔ should return a Schema object
      ✔ should return null when contains is omitted from the json document
    #dependencies()
      ✔ should return a map with an array value
      ✔ should return a map with a Schema value
      ✔ should return null when dependencies are omitted from the json document
    #propertyNames()
      ✔ should return a Schema object
      ✔ should return null when propertyNames are omitted from the json document
    #if()
      ✔ should return a Schema object
      ✔ should return null when if is omitted from the json document
    #then()
      ✔ should return a Schema object
      ✔ should return null when then is omitted from the json document
    #else()
      ✔ should return a Schema object
      ✔ should return null when else is omitted from the json document
    #format()
      ✔ should return a string
    #contentEncoding()
      ✔ should return a string
    #contentMediaType()
      ✔ should return a string
    #definitions()
      ✔ should return a map of Schema objects
    #title()
      ✔ should return a string
    #default()
      ✔ should return a value
    #deprecated()
      ✔ should return a boolean
    #discriminator()
      ✔ should return a string
    #readOnly()
      ✔ should return a boolean
    #writeOnly()
      ✔ should return a boolean
    #examples()
      ✔ should return an array
    #isBooleanSchema()
      ✔ should return a true when schema is true
      ✔ _json property should equal to true when schema is true
      ✔ should return a true when schema is false
      ✔ _json property should equal to false when schema is false
    #isCircular()
      ✔ should return a true when appropriate extension is injected
      ✔ should return a true when schema has circular reference
    #circularSchema()
      ✔ should return a circular schema
    #circularProps()
      ✔ should return values from appropriate extenion
      ✔ should return empty array if circular properties do not exist
      ✔ should return names of circular properties
    #hasCircularProps()
      ✔ should return true when appropriate extenion is injected
      ✔ should return false when circular properties do not exist
      ✔ should return true when circular properties exist
    #mixins
      ✔ model should inherit from mixins

  SecurityScheme
    #type()
      ✔ should return a string
    #name()
      ✔ should return a string
    #in()
      ✔ should return a string
    #scheme()
      ✔ should return a string
    #bearerFormat()
      ✔ should return a string
    #openIdConnectUrl()
      ✔ should return a string
    #flows()
      ✔ should return a map of OAuthFlow objects
    #mixins
      ✔ model should inherit from mixins

  ServerVariable
    #allowedValues()
      ✔ should return an array of strings
    #hasAllowedValues()
      ✔ should return a true when enum is present
      ✔ should return a false when enum is not present
    #allows()
      ✔ should return true if the value is in the enum
      ✔ should return false if the value is not in the enum
    #defaultValue()
      ✔ should return a string
    #hasDefaultValue()
      ✔ should return true if default is present
      ✔ should return false if the value is not in the enum
    #examples()
      ✔ should return an array of strings
    #mixins
      ✔ model should inherit from mixins

  Server
    #url()
      ✔ should return a string
    #protocol()
      ✔ should return a string
    #protocolVersion()
      ✔ should return a string
    #hasVariables()
      ✔ should return a boolean indicating if a server URL has variables
    #variables()
      ✔ should return a map of ServerVariable objects
    #variable()
      ✔ should return a specific ServerVariable object
    #security()
      ✔ should return an array of security requirements objects
    #mixins
      ✔ model should inherit from mixins

  Tag
    #name()
      ✔ should return a string
    #mixins
      ✔ model should inherit from mixins

  utils
    mix()
      ✔ should create mixed object
      ✔ should throw error if one of mixins is a model reference
      ✔ should throw error if model has method identically like in one of mixins

  parse()
    ✔ should parse YAML
    ✔ should parse AsyncAPI document passed as JS object
    ✔ should parse YAML correctly when no components object
    ✔ should parse 2 AsyncAPI specs in Promise.all() and not fail with resolving references
    ✔ should apply traits to messages even with empty channels object
    ✔ should apply traits to messages used and not used in a channel
    ✔ should fail when asyncapi is not valid
    ✔ should fail when asyncapi is not valid (yaml)
    ✔ should fail when asyncapi is not valid (ref with line break) (yaml)
    ✔ should fail when asyncapi is not valid (json)
    ✔ should fail when it is not possible to convert asyncapi to json
    ✔ should fail when asyncapi is not present
    ✔ should fail when asyncapi version is not supported
    ✔ should fail when asyncapi is not yaml nor json
    ✔ should fail to resolve relative files when options.path is not provided
    ✔ should offer information about YAML line and column where $ref errors are located
    ✔ should offer information about JSON line and column where $ref errors are located
    ✔ should not offer information about JS line and column where $ref errors are located if format is JS
    ✔ should offer information about missing HTTP $refs (429ms)
    ✔ should offer information about missing root $refs (404ms)
    ✔ should offer information about missing local $refs
    ✔ should throw proper error even if issue is inside $refed file of a $refed file
    ✔ should throw error if document is invalid YAML
    ✔ should throw error if document is invalid JSON
    ✔ should throw error if document is null or falsey
    ✔ should throw error if document is not string nor object
    ✔ Should include schemas after circular property
    ✔ should properly mark circular references
    ✔ should throw error that the provided root object has duplicate tags
    ✔ should throw error that the provided operation object has duplicate tags
    ✔ should throw error that the provided operation trait object has duplicate tags
    ✔ should throw error that the provided message object has duplicate tags
    ✔ should throw error that the provided message objects in oneOf has duplicate tags
    ✔ should throw error that the provided message trait object has duplicate tags

  memory usage
    ✔ should use this same instance of validation function in each call (2579ms)

  registerSchemaParser()
    ✔ no errors can be thrown
    ✔ should throw error that required functions are missing
    ✔ should show that for 2.0 default schema format is 2.0 and for 2.1 it is 2.1 and so on

  getBaseUrl()
    ✔ should accept totally valid absolute URL of an AsyncAPI document

  MixinTagsInheritance
    ✔ check if AsyncAPIDocument model has inherited methods from MixinTags

  MixinExternalDocsInheritance
    ✔ check if AsyncAPIDocument model has inherited methods from MixinExternalDocs

  MixinSpecificationExtensionsInheritance
    ✔ check if AsyncAPIDocument model has inherited methods from MixinSpecificationExtensions

  MixinDescriptionInheritance
    ✔ check if ChannelParameter model has inherited methods from MixinDescription

  MixinSpecificationExtensionsInheritance
    ✔ check if ChannelParameter model has inherited methods from MixinSpecificationExtensions

  MixinDescriptionInheritance
    ✔ check if Channel model has inherited methods from MixinDescription

  MixinBindingsInheritance
    ✔ check if Channel model has inherited methods from MixinBindings

  MixinSpecificationExtensionsInheritance
    ✔ check if Channel model has inherited methods from MixinSpecificationExtensions

  MixinSpecificationExtensionsInheritance
    ✔ check if Components model has inherited methods from MixinSpecificationExtensions

  MixinSpecificationExtensionsInheritance
    ✔ check if Contact model has inherited methods from MixinSpecificationExtensions

  MixinDescriptionInheritance
    ✔ check if CorrelationId model has inherited methods from MixinDescription

  MixinSpecificationExtensionsInheritance
    ✔ check if CorrelationId model has inherited methods from MixinSpecificationExtensions

  MixinDescriptionInheritance
    ✔ check if ExternalDocs model has inherited methods from MixinDescription

  MixinSpecificationExtensionsInheritance
    ✔ check if ExternalDocs model has inherited methods from MixinSpecificationExtensions

  MixinDescriptionInheritance
    ✔ check if Info model has inherited methods from MixinDescription

  MixinSpecificationExtensionsInheritance
    ✔ check if Info model has inherited methods from MixinSpecificationExtensions

  MixinSpecificationExtensionsInheritance
    ✔ check if License model has inherited methods from MixinSpecificationExtensions

  MixinDescriptionInheritance
    ✔ check if MessageTrait model has inherited methods from MixinDescription

  MixinExternalDocsInheritance
    ✔ check if MessageTrait model has inherited methods from MixinExternalDocs

  MixinTagsInheritance
    ✔ check if MessageTrait model has inherited methods from MixinTags

  MixinBindingsInheritance
    ✔ check if MessageTrait model has inherited methods from MixinBindings

  MixinSpecificationExtensionsInheritance
    ✔ check if MessageTrait model has inherited methods from MixinSpecificationExtensions

  MixinDescriptionInheritance
    ✔ check if MessageTraitable model has inherited methods from MixinDescription

  MixinExternalDocsInheritance
    ✔ check if MessageTraitable model has inherited methods from MixinExternalDocs

  MixinTagsInheritance
    ✔ check if MessageTraitable model has inherited methods from MixinTags

  MixinBindingsInheritance
    ✔ check if MessageTraitable model has inherited methods from MixinBindings

  MixinSpecificationExtensionsInheritance
    ✔ check if MessageTraitable model has inherited methods from MixinSpecificationExtensions

  MixinDescriptionInheritance
    ✔ check if Message model has inherited methods from MixinDescription

  MixinExternalDocsInheritance
    ✔ check if Message model has inherited methods from MixinExternalDocs

  MixinTagsInheritance
    ✔ check if Message model has inherited methods from MixinTags

  MixinBindingsInheritance
    ✔ check if Message model has inherited methods from MixinBindings

  MixinSpecificationExtensionsInheritance
    ✔ check if Message model has inherited methods from MixinSpecificationExtensions

  MixinSpecificationExtensionsInheritance
    ✔ check if OAuthFlow model has inherited methods from MixinSpecificationExtensions

  MixinDescriptionInheritance
    ✔ check if OperationTrait model has inherited methods from MixinDescription

  MixinExternalDocsInheritance
    ✔ check if OperationTrait model has inherited methods from MixinExternalDocs

  MixinTagsInheritance
    ✔ check if OperationTrait model has inherited methods from MixinTags

  MixinBindingsInheritance
    ✔ check if OperationTrait model has inherited methods from MixinBindings

  MixinSpecificationExtensionsInheritance
    ✔ check if OperationTrait model has inherited methods from MixinSpecificationExtensions

  MixinDescriptionInheritance
    ✔ check if OperationTraitable model has inherited methods from MixinDescription

  MixinExternalDocsInheritance
    ✔ check if OperationTraitable model has inherited methods from MixinExternalDocs

  MixinTagsInheritance
    ✔ check if OperationTraitable model has inherited methods from MixinTags

  MixinBindingsInheritance
    ✔ check if OperationTraitable model has inherited methods from MixinBindings

  MixinSpecificationExtensionsInheritance
    ✔ check if OperationTraitable model has inherited methods from MixinSpecificationExtensions

  MixinDescriptionInheritance
    ✔ check if Operation model has inherited methods from MixinDescription

  MixinExternalDocsInheritance
    ✔ check if Operation model has inherited methods from MixinExternalDocs

  MixinTagsInheritance
    ✔ check if Operation model has inherited methods from MixinTags

  MixinBindingsInheritance
    ✔ check if Operation model has inherited methods from MixinBindings

  MixinSpecificationExtensionsInheritance
    ✔ check if Operation model has inherited methods from MixinSpecificationExtensions

  MixinDescriptionInheritance
    ✔ check if Schema model has inherited methods from MixinDescription

  MixinExternalDocsInheritance
    ✔ check if Schema model has inherited methods from MixinExternalDocs

  MixinSpecificationExtensionsInheritance
    ✔ check if Schema model has inherited methods from MixinSpecificationExtensions

  MixinDescriptionInheritance
    ✔ check if SecurityScheme model has inherited methods from MixinDescription

  MixinSpecificationExtensionsInheritance
    ✔ check if SecurityScheme model has inherited methods from MixinSpecificationExtensions

  MixinDescriptionInheritance
    ✔ check if ServerVariable model has inherited methods from MixinDescription

  MixinSpecificationExtensionsInheritance
    ✔ check if ServerVariable model has inherited methods from MixinSpecificationExtensions

  MixinDescriptionInheritance
    ✔ check if Server model has inherited methods from MixinDescription

  MixinBindingsInheritance
    ✔ check if Server model has inherited methods from MixinBindings

  MixinSpecificationExtensionsInheritance
    ✔ check if Server model has inherited methods from MixinSpecificationExtensions

  MixinTagsInheritance
    ✔ check if Server model has inherited methods from MixinTags

  MixinDescriptionInheritance
    ✔ check if Tag model has inherited methods from MixinDescription

  MixinExternalDocsInheritance
    ✔ check if Tag model has inherited methods from MixinExternalDocs

  MixinSpecificationExtensionsInheritance
    ✔ check if Tag model has inherited methods from MixinSpecificationExtensions


  544 passing (4s)


> @asyncapi/parser@1.17.2 test:parseFromUrl
> nyc --silent --no-clean start-server-and-test "http-server test/sample_browser --cors -s" 8080 "mocha test/parseFromUrl_test.js"

1: starting server using command "http-server test/sample_browser --cors -s"
and when url "[ 'http://localhost:8080' ]" is responding with HTTP status code 200
running tests using command "mocha test/parseFromUrl_test.js"



  parseFromUrl()
    ✔ should parse YAML correctly from URL (127ms)
    ✔ should parse 2 AsyncAPI specs in Promise.all() from URL
    ✔ should fail when url is not absolute and not valid


  3 passing (166ms)


> @asyncapi/parser@1.17.2 cover:report
> nyc report --reporter=text --reporter=html

------------------------------------|---------|----------|---------|---------|--------------------
File                                | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s  
------------------------------------|---------|----------|---------|---------|--------------------
All files                           |   95.88 |    88.25 |   97.39 |   98.19 |                    
 lib                                |   96.22 |    88.52 |   99.28 |   98.76 |                    
  anonymousNaming.js                |     100 |    95.45 |     100 |     100 | 28                 
  asyncapiSchemaFormatParser.js     |     100 |      100 |     100 |     100 |                    
  constants.js                      |     100 |      100 |     100 |     100 |                    
  customValidators.js               |    98.7 |    96.59 |     100 |     100 | 45,193,577,605-609 
  index.js                          |     100 |      100 |     100 |     100 |                    
  iterators.js                      |   94.64 |    88.09 |   95.65 |   99.03 | 243                
  json-parse.js                     |   95.45 |    66.66 |     100 |   95.45 | 41                 
  parser.js                         |   96.69 |     87.3 |     100 |   98.18 | 67,124             
  utils.js                          |   91.27 |    79.79 |     100 |   96.82 | 83-85,94-96        
 lib/errors                         |      95 |    91.66 |   66.66 |   93.33 |                    
  parser-error.js                   |      95 |    91.66 |   66.66 |   93.33 | 60                 
 lib/mixins                         |     100 |      100 |     100 |     100 |                    
  bindings.js                       |     100 |      100 |     100 |     100 |                    
  description.js                    |     100 |      100 |     100 |     100 |                    
  external-docs.js                  |     100 |      100 |     100 |     100 |                    
  specification-extensions.js       |     100 |      100 |     100 |     100 |                    
  tags.js                           |     100 |      100 |     100 |     100 |                    
 lib/models                         |   95.12 |    86.09 |   96.27 |   97.44 |                    
  asyncapi.js                       |   95.83 |    87.09 |   96.77 |   96.58 | 54,274,319,354     
  base.js                           |      80 |       75 |     100 |     100 | 11,21              
  channel-parameter.js              |      90 |       50 |     100 |     100 | 30                 
  channel.js                        |   93.54 |    83.33 |     100 |     100 | 75-83              
  components.js                     |     100 |      100 |     100 |     100 |                    
  contact.js                        |     100 |      100 |     100 |     100 |                    
  correlation-id.js                 |     100 |      100 |     100 |     100 |                    
  external-docs.js                  |     100 |      100 |     100 |     100 |                    
  info.js                           |     100 |      100 |     100 |     100 |                    
  license.js                        |     100 |      100 |     100 |     100 |                    
  message-trait.js                  |     100 |      100 |     100 |     100 |                    
  message-traitable.js              |    92.3 |    66.66 |     100 |     100 | 39-54              
  message.js                        |   93.75 |    81.25 |     100 |     100 | 33,48-55           
  oauth-flow.js                     |     100 |      100 |     100 |     100 |                    
  operation-security-requirement.js |     100 |      100 |     100 |     100 |                    
  operation-trait.js                |     100 |      100 |     100 |     100 |                    
  operation-traitable.js            |     100 |      100 |     100 |     100 |                    
  operation.js                      |   81.08 |    70.96 |   88.88 |   86.95 | 18-21              
  publish-operation.js              |      40 |      100 |       0 |      40 | 15-29              
  schema.js                         |     100 |    96.77 |     100 |     100 | 421,437            
  security-scheme.js                |     100 |      100 |     100 |     100 |                    
  server-security-requirement.js    |     100 |      100 |     100 |     100 |                    
  server-variable.js                |    92.3 |       50 |     100 |     100 | 30                 
  server.js                         |   94.73 |       50 |     100 |     100 | 71                 
  subscribe-operation.js            |      40 |      100 |       0 |      40 | 15-29              
  tag.js                            |     100 |      100 |     100 |     100 |                    
  utils.js                          |     100 |      100 |     100 |     100 |                    
------------------------------------|---------|----------|---------|---------|--------------------

> @asyncapi/parser@1.17.2 test:browser
> npm run test:browser:cleanup && npm run bundle && shx cp "dist/bundle.js" "test/sample_browser/"  && start-server-and-test "http-server test/sample_browser --cors -s" 8080 "mocha --timeout 20000 test/browser_test.js" && npm run test:browser:cleanup


> @asyncapi/parser@1.17.2 test:browser:cleanup
> rimraf "test/sample_browser/bundle.js"


> @asyncapi/parser@1.17.2 bundle
> mkdirp "dist" && browserify "lib/browser.js" | uglifyjs > "dist/bundle.js"

1: starting server using command "http-server test/sample_browser --cors -s"
and when url "[ 'http://localhost:8080' ]" is responding with HTTP status code 200
running tests using command "mocha --timeout 20000 test/browser_test.js"



  Check Parser in the browser
starting browser
    1) "before all" hook for "parsing spec as string should complete successfully"
    2) "after all" hook for "parsing spec from remote should complete successfully"


  0 passing (59ms)
  2 failing

  1) Check Parser in the browser
       "before all" hook for "parsing spec as string should complete successfully":
     Error: Error: Failed to launch the browser process!
/data/js-variants/multee/VariantsPureDep/parser-js/variant_files/parser-js/node_modules/puppeteer/.local-chromium/linux-1036745/chrome-linux/chrome: error while loading shared libraries: libatk-1.0.so.0: cannot open shared object file: No such file or directory


TROUBLESHOOTING: https://github.com/puppeteer/puppeteer/blob/main/docs/troubleshooting.md

      at Context.<anonymous> (test/browser_test.js:23:13)
      at processTicksAndRejections (node:internal/process/task_queues:96:5)

  2) Check Parser in the browser
       "after all" hook for "parsing spec from remote should complete successfully":
     Error: TypeError: Cannot read properties of undefined (reading 'close')
      at Context.<anonymous> (test/browser_test.js:61:13)
      at processImmediate (node:internal/timers:466:21)



I am package party .....

> level-party@5.1.1 test
> standard && hallmark && nyc tape test/*.js

I am package pdfjs .....

> pdfjs@2.4.7 test
> npm run test:pdfs && npm run test:types


> pdfjs@2.4.7 test:pdfs
> node test/index.js

I am package pg-monitor .....

> pg-monitor@2.0.0 test
> jasmine-node test

Exception loading: /data/js-variants/multee/VariantsPureDep/pg-monitor/variant_files/pg-monitor/test/attach.spec.js
TypeError: Cannot read properties of undefined (reading 'on')
    at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/pg-monitor/variant_files/pg-monitor/node_modules/memoizee/lib/configure-map.js:16:13)
    at Module._compile (node:internal/modules/cjs/loader:1126:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
    at Module.load (node:internal/modules/cjs/loader:1004:32)
    at Function.Module._load (node:internal/modules/cjs/loader:839:12)
    at Module.require (node:internal/modules/cjs/loader:1028:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at Object.<anonymous> (/data/js-variants/multee/VariantsPureDep/pg-monitor/variant_files/pg-monitor/node_modules/memoizee/plain.js:6:21)
    at Module._compile (node:internal/modules/cjs/loader:1126:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1180:10)
I am package piscina .....

> piscina@3.3.0 test
> npm run lint && npm run build && npm run test-only


> piscina@3.3.0 lint
> standardx "**/*.{ts,mjs,js,cjs}" | snazzy


> piscina@3.3.0 build
> tsc && gen-esm-wrapper . dist/esm-wrapper.mjs


> piscina@3.3.0 test-only
> tap --ts

[1mSuites:[22m   [0m​[0m0 of 0 completed[0m[0m​[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m0 [0m[0m​[0m[0m​[0mof 0[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m0ms[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[G[1mSuites:[22m   [0m​[0m0 of 1 completed[0m[0m​[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m0 [0m[0m​[0m[0m​[0mof 0[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m130ms[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m [0m[1m[38;2;170;170;170m1ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m0 of 1 completed[0m[0m​[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m0 [0m[0m​[0m[0m​[0mof 0[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m130ms[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m [0m[1m[38;2;170;170;170m12ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m0 of 2 completed[0m[0m​[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m0 [0m[0m​[0m[0m​[0mof 0[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m150ms[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m [0m[1m[38;2;170;170;170m30ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/async-context.ts[0m[37m [0m[1m[38;2;170;170;170m12ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m0 of 2 completed[0m[0m​[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m0 [0m[0m​[0m[0m​[0mof 0[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m150ms[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m [0m[1m[38;2;170;170;170m38ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/async-context.ts[0m[37m [0m[1m[38;2;170;170;170m20ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m0 of 3 completed[0m[0m​[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m0 [0m[0m​[0m[0m​[0mof 0[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m177ms[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m [0m[1m[38;2;170;170;170m47ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/async-context.ts[0m[37m [0m[1m[38;2;170;170;170m29ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m0 of 4 completed[0m[0m​[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m0 [0m[0m​[0m[0m​[0mof 0[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m186ms[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m [0m[1m[38;2;170;170;170m58ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/async-context.ts[0m[37m [0m[1m[38;2;170;170;170m41ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m0 of 5 completed[0m[0m​[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m0 [0m[0m​[0m[0m​[0mof 0[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m198ms[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m [0m[1m[38;2;170;170;170m66ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/async-context.ts[0m[37m [0m[1m[38;2;170;170;170m48ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m0 of 6 completed[0m[0m​[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m0 [0m[0m​[0m[0m​[0mof 0[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m205ms[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m [0m[1m[38;2;170;170;170m77ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/async-context.ts[0m[37m [0m[1m[38;2;170;170;170m60ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m0 of 7 completed[0m[0m​[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m0 [0m[0m​[0m[0m​[0mof 0[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m217ms[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m [0m[1m[38;2;170;170;170m88ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/async-context.ts[0m[37m [0m[1m[38;2;170;170;170m71ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m0 of 8 completed[0m[0m​[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m0 [0m[0m​[0m[0m​[0mof 0[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m228ms[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m [0m[1m[38;2;170;170;170m100ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/async-context.ts[0m[37m [0m[1m[38;2;170;170;170m82ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m0 of 9 completed[0m[0m​[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m0 [0m[0m​[0m[0m​[0mof 0[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m239ms[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m [0m[1m[38;2;170;170;170m107ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/async-context.ts[0m[37m [0m[1m[38;2;170;170;170m89ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m0 of 10 completed[0m[0m​[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m0 [0m[0m​[0m[0m​[0mof 0[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m247ms[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m [0m[1m[38;2;170;170;170m114ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/async-context.ts[0m[37m [0m[1m[38;2;170;170;170m96ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m0 of 11 completed[0m[0m​[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m0 [0m[0m​[0m[0m​[0mof 0[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m254ms[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m [0m[1m[38;2;170;170;170m122ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/async-context.ts[0m[37m [0m[1m[38;2;170;170;170m105ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m0 of 12 completed[0m[0m​[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m0 [0m[0m​[0m[0m​[0mof 0[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m262ms[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m [0m[1m[38;2;170;170;170m128ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/async-context.ts[0m[37m [0m[1m[38;2;170;170;170m110ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m0 of 13 completed[0m[0m​[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m0 [0m[0m​[0m[0m​[0mof 0[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m268ms[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m [0m[1m[38;2;170;170;170m135ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/async-context.ts[0m[37m [0m[1m[38;2;170;170;170m117ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m0 of 14 completed[0m[0m​[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m0 [0m[0m​[0m[0m​[0mof 0[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m274ms[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m [0m[1m[38;2;170;170;170m142ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/async-context.ts[0m[37m [0m[1m[38;2;170;170;170m124ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m0 of 15 completed[0m[0m​[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m0 [0m[0m​[0m[0m​[0mof 0[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m282ms[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m [0m[1m[38;2;170;170;170m151ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/async-context.ts[0m[37m [0m[1m[38;2;170;170;170m133ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m0 of 16 completed[0m[0m​[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m0 [0m[0m​[0m[0m​[0mof 0[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m290ms[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m [0m[1m[38;2;170;170;170m157ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/async-context.ts[0m[37m [0m[1m[38;2;170;170;170m139ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m0 of 17 completed[0m[0m​[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m0 [0m[0m​[0m[0m​[0mof 0[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m296ms[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m [0m[1m[38;2;170;170;170m162ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/async-context.ts[0m[37m [0m[1m[38;2;170;170;170m144ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m0 of 18 completed[0m[0m​[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m0 [0m[0m​[0m[0m​[0mof 0[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m302ms[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m [0m[1m[38;2;170;170;170m167ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/async-context.ts[0m[37m [0m[1m[38;2;170;170;170m150ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m0 of 19 completed[0m[0m​[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m0 [0m[0m​[0m[0m​[0mof 0[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m307ms[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m [0m[1m[38;2;170;170;170m179ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/async-context.ts[0m[37m [0m[1m[38;2;170;170;170m161ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m0 of 19 completed[0m[0m​[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m0 [0m[0m​[0m[0m​[0mof 0[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m319ms[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m [0m[1m[38;2;170;170;170m380ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/async-context.ts[0m[37m [0m[1m[38;2;170;170;170m363ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m0 of 19 completed[0m[0m​[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m0 [0m[0m​[0m[0m​[0mof 0[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m520ms[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m [0m[1m[38;2;170;170;170m580ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/async-context.ts[0m[37m [0m[1m[38;2;170;170;170m563ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m0 of 19 completed[0m[0m​[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m0 [0m[0m​[0m[0m​[0mof 0[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m720ms[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m [0m[1m[38;2;170;170;170m781ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/async-context.ts[0m[37m [0m[1m[38;2;170;170;170m764ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m0 of 19 completed[0m[0m​[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m0 [0m[0m​[0m[0m​[0mof 0[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m921ms[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m [0m[1m[38;2;170;170;170m980ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/async-context.ts[0m[37m [0m[1m[38;2;170;170;170m962ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m0 of 19 completed[0m[0m​[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m0 [0m[0m​[0m[0m​[0mof 0[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m [0m[1m[38;2;170;170;170m1s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/async-context.ts[0m[37m [0m[1m[38;2;170;170;170m1s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m0 of 19 completed[0m[0m​[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m0 [0m[0m​[0m[0m​[0mof 0[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m [0m[1m[38;2;170;170;170m1s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/async-context.ts[0m[37m [0m[1m[38;2;170;170;170m1s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m0 of 19 completed[0m[0m​[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m0 [0m[0m​[0m[0m​[0mof 0[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/async-context.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m0 of 19 completed[0m[0m​[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m0 [0m[0m​[0m[0m​[0mof 0[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/async-context.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m0 of 19 completed[0m[0m​[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m0 [0m[0m​[0m[0m​[0mof 0[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m3s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/async-context.ts[0m[37m [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m0 of 19 completed[0m[0m​[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m0 [0m[0m​[0m[0m​[0mof 0[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m3s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/async-context.ts[0m[37m [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m0 of 19 completed[0m[0m​[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m0 [0m[0m​[0m[0m​[0mof 0[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m4s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/async-context.ts[0m[37m [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m0 of 19 completed[0m[0m​[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m0 [0m[0m​[0m[0m​[0mof 0[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m4s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/async-context.ts[0m[37m[1m 4[22m[32m OK [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m0 of 19 completed[0m[0m​[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m4 passed[0m[0m​[0m, [0m[0m​[0mof 4[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m4s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[38;2;0;0;0m[42m PASS [0m[0m​[0m test/async-context.ts[0m[37m[1m 4[22m[32m OK [0m[1m[38;2;170;170;170m1s[39m[22m[0m[0m[42m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[38;2;0;0;0m[42m[0m[0m[0m[0m[0m[1m[38;2;0;0;0m[42m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m1 passed[0m[0m​[0m, [0m[0m​[0m1 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m4 passed[0m[0m​[0m, [0m[0m​[0mof 4[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m4s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/atomics-optimization.ts[0m[37m [0m[1m[38;2;170;170;170m1ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m1 passed[0m[0m​[0m, [0m[0m​[0m1 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m4 passed[0m[0m​[0m, [0m[0m​[0mof 4[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m4s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/atomics-optimization.ts[0m[37m [0m[1m[38;2;170;170;170m144ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m1 passed[0m[0m​[0m, [0m[0m​[0m1 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m4 passed[0m[0m​[0m, [0m[0m​[0mof 4[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m4s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/atomics-optimization.ts[0m[37m [0m[1m[38;2;170;170;170m345ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m1 passed[0m[0m​[0m, [0m[0m​[0m1 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m4 passed[0m[0m​[0m, [0m[0m​[0mof 4[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m4s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/atomics-optimization.ts[0m[37m [0m[1m[38;2;170;170;170m544ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m1 passed[0m[0m​[0m, [0m[0m​[0m1 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m4 passed[0m[0m​[0m, [0m[0m​[0mof 4[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m5s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m [0m[1m[38;2;170;170;170m5s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/atomics-optimization.ts[0m[37m [0m[1m[38;2;170;170;170m744ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m1 passed[0m[0m​[0m, [0m[0m​[0m1 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m4 passed[0m[0m​[0m, [0m[0m​[0mof 4[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m5s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m [0m[1m[38;2;170;170;170m5s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/atomics-optimization.ts[0m[37m [0m[1m[38;2;170;170;170m944ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m1 passed[0m[0m​[0m, [0m[0m​[0m1 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m4 passed[0m[0m​[0m, [0m[0m​[0mof 4[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m5s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m [0m[1m[38;2;170;170;170m5s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/atomics-optimization.ts[0m[37m [0m[1m[38;2;170;170;170m1s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m1 passed[0m[0m​[0m, [0m[0m​[0m1 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m4 passed[0m[0m​[0m, [0m[0m​[0mof 4[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m5s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m [0m[1m[38;2;170;170;170m5s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/atomics-optimization.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m1 passed[0m[0m​[0m, [0m[0m​[0m1 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m4 passed[0m[0m​[0m, [0m[0m​[0mof 4[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m6s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m [0m[1m[38;2;170;170;170m6s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/atomics-optimization.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m1 passed[0m[0m​[0m, [0m[0m​[0m1 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m4 passed[0m[0m​[0m, [0m[0m​[0mof 4[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m6s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m [0m[1m[38;2;170;170;170m6s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/atomics-optimization.ts[0m[37m [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m1 passed[0m[0m​[0m, [0m[0m​[0m1 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m4 passed[0m[0m​[0m, [0m[0m​[0mof 4[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m7s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m7s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/atomics-optimization.ts[0m[37m [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m1 passed[0m[0m​[0m, [0m[0m​[0m1 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m6 passed[0m[0m​[0m, [0m[0m​[0mof 6[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m7s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m7s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/atomics-optimization.ts[0m[37m [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m1 passed[0m[0m​[0m, [0m[0m​[0m1 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m6 passed[0m[0m​[0m, [0m[0m​[0mof 6[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m8s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m8s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/atomics-optimization.ts[0m[37m [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m1 passed[0m[0m​[0m, [0m[0m​[0m1 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m6 passed[0m[0m​[0m, [0m[0m​[0mof 6[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m8s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m8s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/atomics-optimization.ts[0m[37m [0m[1m[38;2;170;170;170m5s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m1 passed[0m[0m​[0m, [0m[0m​[0m1 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m6 passed[0m[0m​[0m, [0m[0m​[0mof 6[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m9s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m9s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/atomics-optimization.ts[0m[37m [0m[1m[38;2;170;170;170m5s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m1 passed[0m[0m​[0m, [0m[0m​[0m1 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m6 passed[0m[0m​[0m, [0m[0m​[0mof 6[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m9s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m9s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/atomics-optimization.ts[0m[37m [0m[1m[38;2;170;170;170m6s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m1 passed[0m[0m​[0m, [0m[0m​[0m1 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m6 passed[0m[0m​[0m, [0m[0m​[0mof 6[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m10s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m10s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/atomics-optimization.ts[0m[37m [0m[1m[38;2;170;170;170m6s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m1 passed[0m[0m​[0m, [0m[0m​[0m1 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m6 passed[0m[0m​[0m, [0m[0m​[0mof 6[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m10s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m10s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/atomics-optimization.ts[0m[37m [0m[1m[38;2;170;170;170m7s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m1 passed[0m[0m​[0m, [0m[0m​[0m1 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m6 passed[0m[0m​[0m, [0m[0m​[0mof 6[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m11s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m11s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/atomics-optimization.ts[0m[37m [0m[1m[38;2;170;170;170m7s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m1 passed[0m[0m​[0m, [0m[0m​[0m1 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m6 passed[0m[0m​[0m, [0m[0m​[0mof 6[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m11s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m11s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/atomics-optimization.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m7s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m1 passed[0m[0m​[0m, [0m[0m​[0m1 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m8 passed[0m[0m​[0m, [0m[0m​[0mof 8[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m11s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 7[22m[32m OK [0m[1m[38;2;170;170;170m11s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/atomics-optimization.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m8s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m1 passed[0m[0m​[0m, [0m[0m​[0m1 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m13 passed[0m[0m​[0m, [0m[0m​[0mof 13[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m11s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 7[22m[32m OK [0m[1m[38;2;170;170;170m11s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/atomics-optimization.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m8s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m1 passed[0m[0m​[0m, [0m[0m​[0m1 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m13 passed[0m[0m​[0m, [0m[0m​[0mof 13[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m12s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 7[22m[32m OK [0m[1m[38;2;170;170;170m12s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/atomics-optimization.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m8s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m1 passed[0m[0m​[0m, [0m[0m​[0m1 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m13 passed[0m[0m​[0m, [0m[0m​[0mof 13[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m12s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 7[22m[32m OK [0m[1m[38;2;170;170;170m12s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/atomics-optimization.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m9s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m1 passed[0m[0m​[0m, [0m[0m​[0m1 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m13 passed[0m[0m​[0m, [0m[0m​[0mof 13[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m13s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 7[22m[32m OK [0m[1m[38;2;170;170;170m13s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/atomics-optimization.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m9s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m1 passed[0m[0m​[0m, [0m[0m​[0m1 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m13 passed[0m[0m​[0m, [0m[0m​[0mof 13[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m13s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 7[22m[32m OK [0m[1m[38;2;170;170;170m13s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/atomics-optimization.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m10s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m1 passed[0m[0m​[0m, [0m[0m​[0m1 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m13 passed[0m[0m​[0m, [0m[0m​[0mof 13[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m14s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 7[22m[32m OK [0m[1m[38;2;170;170;170m14s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/atomics-optimization.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m10s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m1 passed[0m[0m​[0m, [0m[0m​[0m1 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m13 passed[0m[0m​[0m, [0m[0m​[0mof 13[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m14s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 7[22m[32m OK [0m[1m[38;2;170;170;170m14s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/atomics-optimization.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m11s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m1 passed[0m[0m​[0m, [0m[0m​[0m1 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m13 passed[0m[0m​[0m, [0m[0m​[0mof 13[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m15s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 7[22m[32m OK [0m[1m[38;2;170;170;170m15s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/atomics-optimization.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m11s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m1 passed[0m[0m​[0m, [0m[0m​[0m1 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m13 passed[0m[0m​[0m, [0m[0m​[0mof 13[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m15s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 9[22m[32m OK [0m[1m[38;2;170;170;170m15s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/atomics-optimization.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m11s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m1 passed[0m[0m​[0m, [0m[0m​[0m1 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m15 passed[0m[0m​[0m, [0m[0m​[0mof 15[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m15s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 9[22m[32m OK [0m[1m[38;2;170;170;170m15s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/atomics-optimization.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m12s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m1 passed[0m[0m​[0m, [0m[0m​[0m1 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m15 passed[0m[0m​[0m, [0m[0m​[0mof 15[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m16s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 9[22m[32m OK [0m[1m[38;2;170;170;170m16s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/atomics-optimization.ts[0m[37m[1m 3[22m[32m OK [0m[1m[38;2;170;170;170m12s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m1 passed[0m[0m​[0m, [0m[0m​[0m1 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m16 passed[0m[0m​[0m, [0m[0m​[0mof 16[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m16s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[38;2;0;0;0m[42m PASS [0m[0m​[0m test/atomics-optimization.ts[0m[37m[1m 3[22m[32m OK [0m[1m[38;2;170;170;170m8s[39m[22m[0m[0m[42m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[38;2;0;0;0m[42m[0m[0m[0m[0m[0m[1m[38;2;0;0;0m[42m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 9[22m[32m OK [0m[1m[38;2;170;170;170m16s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m2 passed[0m[0m​[0m, [0m[0m​[0m2 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m16 passed[0m[0m​[0m, [0m[0m​[0mof 16[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m16s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 9[22m[32m OK [0m[1m[38;2;170;170;170m16s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/console-log.ts[0m[37m [0m[1m[38;2;170;170;170m1ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m2 passed[0m[0m​[0m, [0m[0m​[0m2 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m16 passed[0m[0m​[0m, [0m[0m​[0mof 16[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m16s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 9[22m[32m OK [0m[1m[38;2;170;170;170m16s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/console-log.ts[0m[37m [0m[1m[38;2;170;170;170m143ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m2 passed[0m[0m​[0m, [0m[0m​[0m2 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m16 passed[0m[0m​[0m, [0m[0m​[0mof 16[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m16s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 9[22m[32m OK [0m[1m[38;2;170;170;170m16s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/console-log.ts[0m[37m [0m[1m[38;2;170;170;170m342ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m2 passed[0m[0m​[0m, [0m[0m​[0m2 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m16 passed[0m[0m​[0m, [0m[0m​[0mof 16[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m16s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 9[22m[32m OK [0m[1m[38;2;170;170;170m16s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/console-log.ts[0m[37m [0m[1m[38;2;170;170;170m543ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m2 passed[0m[0m​[0m, [0m[0m​[0m2 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m16 passed[0m[0m​[0m, [0m[0m​[0mof 16[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m16s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 9[22m[32m OK [0m[1m[38;2;170;170;170m16s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/console-log.ts[0m[37m [0m[1m[38;2;170;170;170m743ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m2 passed[0m[0m​[0m, [0m[0m​[0m2 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m16 passed[0m[0m​[0m, [0m[0m​[0mof 16[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m17s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 9[22m[32m OK [0m[1m[38;2;170;170;170m17s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/console-log.ts[0m[37m [0m[1m[38;2;170;170;170m944ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m2 passed[0m[0m​[0m, [0m[0m​[0m2 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m16 passed[0m[0m​[0m, [0m[0m​[0mof 16[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m17s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 9[22m[32m OK [0m[1m[38;2;170;170;170m17s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/console-log.ts[0m[37m [0m[1m[38;2;170;170;170m1s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m2 passed[0m[0m​[0m, [0m[0m​[0m2 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m16 passed[0m[0m​[0m, [0m[0m​[0mof 16[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m17s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 11[22m[32m OK [0m[1m[38;2;170;170;170m17s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/console-log.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m2 passed[0m[0m​[0m, [0m[0m​[0m2 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m18 passed[0m[0m​[0m, [0m[0m​[0mof 18[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m17s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 11[22m[32m OK [0m[1m[38;2;170;170;170m17s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/console-log.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m2 passed[0m[0m​[0m, [0m[0m​[0m2 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m18 passed[0m[0m​[0m, [0m[0m​[0mof 18[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m18s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 11[22m[32m OK [0m[1m[38;2;170;170;170m18s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/console-log.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m2 passed[0m[0m​[0m, [0m[0m​[0m2 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m18 passed[0m[0m​[0m, [0m[0m​[0mof 18[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m18s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 13[22m[32m OK [0m[1m[38;2;170;170;170m18s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/console-log.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m2 passed[0m[0m​[0m, [0m[0m​[0m2 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m20 passed[0m[0m​[0m, [0m[0m​[0mof 20[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m18s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 13[22m[32m OK [0m[1m[38;2;170;170;170m18s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/console-log.ts[0m[37m [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m2 passed[0m[0m​[0m, [0m[0m​[0m2 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m20 passed[0m[0m​[0m, [0m[0m​[0mof 20[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m18s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 13[22m[32m OK [0m[1m[38;2;170;170;170m18s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/console-log.ts[0m[37m [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m2 passed[0m[0m​[0m, [0m[0m​[0m2 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m20 passed[0m[0m​[0m, [0m[0m​[0mof 20[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m19s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 13[22m[32m OK [0m[1m[38;2;170;170;170m19s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/console-log.ts[0m[37m [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m2 passed[0m[0m​[0m, [0m[0m​[0m2 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m20 passed[0m[0m​[0m, [0m[0m​[0mof 20[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m19s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 16[22m[32m OK [0m[1m[38;2;170;170;170m19s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/console-log.ts[0m[37m [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m2 passed[0m[0m​[0m, [0m[0m​[0m2 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m23 passed[0m[0m​[0m, [0m[0m​[0mof 23[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m19s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 16[22m[32m OK [0m[1m[38;2;170;170;170m19s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/console-log.ts[0m[37m [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m2 passed[0m[0m​[0m, [0m[0m​[0m2 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m23 passed[0m[0m​[0m, [0m[0m​[0mof 23[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m19s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 16[22m[32m OK [0m[1m[38;2;170;170;170m19s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/console-log.ts[0m[37m [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m2 passed[0m[0m​[0m, [0m[0m​[0m2 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m23 passed[0m[0m​[0m, [0m[0m​[0mof 23[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m20s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 16[22m[32m OK [0m[1m[38;2;170;170;170m20s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/console-log.ts[0m[37m [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m2 passed[0m[0m​[0m, [0m[0m​[0m2 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m23 passed[0m[0m​[0m, [0m[0m​[0mof 23[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m20s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 21[22m[32m OK [0m[1m[38;2;170;170;170m20s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/console-log.ts[0m[37m [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m2 passed[0m[0m​[0m, [0m[0m​[0m2 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m28 passed[0m[0m​[0m, [0m[0m​[0mof 28[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m20s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 21[22m[32m OK [0m[1m[38;2;170;170;170m20s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/console-log.ts[0m[37m [0m[1m[38;2;170;170;170m5s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m2 passed[0m[0m​[0m, [0m[0m​[0m2 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m28 passed[0m[0m​[0m, [0m[0m​[0mof 28[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m20s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 21[22m[32m OK [0m[1m[38;2;170;170;170m20s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/console-log.ts[0m[37m [0m[1m[38;2;170;170;170m5s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m2 passed[0m[0m​[0m, [0m[0m​[0m2 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m28 passed[0m[0m​[0m, [0m[0m​[0mof 28[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m21s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 21[22m[32m OK [0m[1m[38;2;170;170;170m21s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/console-log.ts[0m[37m [0m[1m[38;2;170;170;170m5s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m2 passed[0m[0m​[0m, [0m[0m​[0m2 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m28 passed[0m[0m​[0m, [0m[0m​[0mof 28[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m21s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[38;2;0;0;0m[42m PASS [0m[0m​[0m test/console-log.ts[0m[37m[1m 1[22m[32m OK [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[42m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[38;2;0;0;0m[42m[0m[0m[0m[0m[0m[1m[38;2;0;0;0m[42m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 21[22m[32m OK [0m[1m[38;2;170;170;170m21s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m3 passed[0m[0m​[0m, [0m[0m​[0m3 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m29 passed[0m[0m​[0m, [0m[0m​[0mof 29[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m21s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 21[22m[32m OK [0m[1m[38;2;170;170;170m21s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/histogram.ts[0m[37m [0m[1m[38;2;170;170;170m1ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m3 passed[0m[0m​[0m, [0m[0m​[0m3 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m29 passed[0m[0m​[0m, [0m[0m​[0mof 29[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m21s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 21[22m[32m OK [0m[1m[38;2;170;170;170m21s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/histogram.ts[0m[37m [0m[1m[38;2;170;170;170m11ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m3 passed[0m[0m​[0m, [0m[0m​[0m3 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m29 passed[0m[0m​[0m, [0m[0m​[0mof 29[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m21s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 21[22m[32m OK [0m[1m[38;2;170;170;170m21s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/histogram.ts[0m[37m [0m[1m[38;2;170;170;170m20ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m3 passed[0m[0m​[0m, [0m[0m​[0m3 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m29 passed[0m[0m​[0m, [0m[0m​[0mof 29[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m21s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 21[22m[32m OK [0m[1m[38;2;170;170;170m21s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/histogram.ts[0m[37m [0m[1m[38;2;170;170;170m220ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m3 passed[0m[0m​[0m, [0m[0m​[0m3 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m29 passed[0m[0m​[0m, [0m[0m​[0mof 29[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m21s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 21[22m[32m OK [0m[1m[38;2;170;170;170m21s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/histogram.ts[0m[37m [0m[1m[38;2;170;170;170m420ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m3 passed[0m[0m​[0m, [0m[0m​[0m3 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m29 passed[0m[0m​[0m, [0m[0m​[0mof 29[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m22s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 21[22m[32m OK [0m[1m[38;2;170;170;170m22s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/histogram.ts[0m[37m [0m[1m[38;2;170;170;170m619ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m3 passed[0m[0m​[0m, [0m[0m​[0m3 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m29 passed[0m[0m​[0m, [0m[0m​[0mof 29[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m22s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 22[22m[32m OK [0m[1m[38;2;170;170;170m22s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/histogram.ts[0m[37m [0m[1m[38;2;170;170;170m770ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m3 passed[0m[0m​[0m, [0m[0m​[0m3 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m30 passed[0m[0m​[0m, [0m[0m​[0mof 30[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m22s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 22[22m[32m OK [0m[1m[38;2;170;170;170m22s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/histogram.ts[0m[37m [0m[1m[38;2;170;170;170m820ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m3 passed[0m[0m​[0m, [0m[0m​[0m3 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m30 passed[0m[0m​[0m, [0m[0m​[0mof 30[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m22s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 22[22m[32m OK [0m[1m[38;2;170;170;170m22s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/histogram.ts[0m[37m [0m[1m[38;2;170;170;170m1s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m3 passed[0m[0m​[0m, [0m[0m​[0m3 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m30 passed[0m[0m​[0m, [0m[0m​[0mof 30[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m22s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 22[22m[32m OK [0m[1m[38;2;170;170;170m22s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/histogram.ts[0m[37m [0m[1m[38;2;170;170;170m1s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m3 passed[0m[0m​[0m, [0m[0m​[0m3 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m30 passed[0m[0m​[0m, [0m[0m​[0mof 30[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m23s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 22[22m[32m OK [0m[1m[38;2;170;170;170m23s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/histogram.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m3 passed[0m[0m​[0m, [0m[0m​[0m3 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m30 passed[0m[0m​[0m, [0m[0m​[0mof 30[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m23s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 22[22m[32m OK [0m[1m[38;2;170;170;170m23s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/histogram.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m3 passed[0m[0m​[0m, [0m[0m​[0m3 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m30 passed[0m[0m​[0m, [0m[0m​[0mof 30[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m24s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 22[22m[32m OK [0m[1m[38;2;170;170;170m24s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/histogram.ts[0m[37m [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m3 passed[0m[0m​[0m, [0m[0m​[0m3 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m30 passed[0m[0m​[0m, [0m[0m​[0mof 30[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m24s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 22[22m[32m OK [0m[1m[38;2;170;170;170m24s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/histogram.ts[0m[37m [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m3 passed[0m[0m​[0m, [0m[0m​[0m3 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m30 passed[0m[0m​[0m, [0m[0m​[0mof 30[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m25s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 22[22m[32m OK [0m[1m[38;2;170;170;170m25s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/histogram.ts[0m[37m [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m3 passed[0m[0m​[0m, [0m[0m​[0m3 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m30 passed[0m[0m​[0m, [0m[0m​[0mof 30[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m25s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[38;2;0;0;0m[42m PASS [0m[0m​[0m test/abort-task.ts[0m[37m[1m 22[22m[32m OK [0m[1m[38;2;170;170;170m22s[39m[22m[0m[0m[42m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[38;2;0;0;0m[42m[0m[0m[0m[0m[0m[1m[38;2;0;0;0m[42m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/histogram.ts[0m[37m [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m4 passed[0m[0m​[0m, [0m[0m​[0m4 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m30 passed[0m[0m​[0m, [0m[0m​[0mof 30[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m25s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/histogram.ts[0m[37m [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m [0m[1m[38;2;170;170;170m1ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m4 passed[0m[0m​[0m, [0m[0m​[0m4 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m30 passed[0m[0m​[0m, [0m[0m​[0mof 30[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m25s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/histogram.ts[0m[37m [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m [0m[1m[38;2;170;170;170m10ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m4 passed[0m[0m​[0m, [0m[0m​[0m4 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m30 passed[0m[0m​[0m, [0m[0m​[0mof 30[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m25s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/histogram.ts[0m[37m [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m [0m[1m[38;2;170;170;170m212ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m4 passed[0m[0m​[0m, [0m[0m​[0m4 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m30 passed[0m[0m​[0m, [0m[0m​[0mof 30[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m26s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/histogram.ts[0m[37m [0m[1m[38;2;170;170;170m5s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m [0m[1m[38;2;170;170;170m411ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m4 passed[0m[0m​[0m, [0m[0m​[0m4 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m30 passed[0m[0m​[0m, [0m[0m​[0mof 30[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m26s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/histogram.ts[0m[37m [0m[1m[38;2;170;170;170m5s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m [0m[1m[38;2;170;170;170m611ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m4 passed[0m[0m​[0m, [0m[0m​[0m4 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m30 passed[0m[0m​[0m, [0m[0m​[0mof 30[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m26s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/histogram.ts[0m[37m [0m[1m[38;2;170;170;170m5s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m [0m[1m[38;2;170;170;170m812ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m4 passed[0m[0m​[0m, [0m[0m​[0m4 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m30 passed[0m[0m​[0m, [0m[0m​[0mof 30[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m26s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/histogram.ts[0m[37m [0m[1m[38;2;170;170;170m5s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m [0m[1m[38;2;170;170;170m1s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m4 passed[0m[0m​[0m, [0m[0m​[0m4 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m30 passed[0m[0m​[0m, [0m[0m​[0mof 30[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m26s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/histogram.ts[0m[37m [0m[1m[38;2;170;170;170m5s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m [0m[1m[38;2;170;170;170m1s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m4 passed[0m[0m​[0m, [0m[0m​[0m4 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m30 passed[0m[0m​[0m, [0m[0m​[0mof 30[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m27s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/histogram.ts[0m[37m [0m[1m[38;2;170;170;170m6s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m [0m[1m[38;2;170;170;170m1s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m4 passed[0m[0m​[0m, [0m[0m​[0m4 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m30 passed[0m[0m​[0m, [0m[0m​[0mof 30[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m27s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/histogram.ts[0m[37m [0m[1m[38;2;170;170;170m6s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m4 passed[0m[0m​[0m, [0m[0m​[0m4 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m30 passed[0m[0m​[0m, [0m[0m​[0mof 30[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m27s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/histogram.ts[0m[37m[1m 12[22m[32m OK [0m[1m[38;2;170;170;170m6s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m4 passed[0m[0m​[0m, [0m[0m​[0m4 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m42 passed[0m[0m​[0m, [0m[0m​[0mof 42[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m27s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[38;2;0;0;0m[42m PASS [0m[0m​[0m test/histogram.ts[0m[37m[1m 12[22m[32m OK [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[42m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[38;2;0;0;0m[42m[0m[0m[0m[0m[0m[1m[38;2;0;0;0m[42m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m5 passed[0m[0m​[0m, [0m[0m​[0m5 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m42 passed[0m[0m​[0m, [0m[0m​[0mof 42[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m28s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/load-with-esm.ts[0m[37m [0m[1m[38;2;170;170;170m0ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m5 passed[0m[0m​[0m, [0m[0m​[0m5 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m42 passed[0m[0m​[0m, [0m[0m​[0mof 42[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m28s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/load-with-esm.ts[0m[37m [0m[1m[38;2;170;170;170m64ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m5 passed[0m[0m​[0m, [0m[0m​[0m5 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m42 passed[0m[0m​[0m, [0m[0m​[0mof 42[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m28s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/load-with-esm.ts[0m[37m [0m[1m[38;2;170;170;170m264ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m5 passed[0m[0m​[0m, [0m[0m​[0m5 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m42 passed[0m[0m​[0m, [0m[0m​[0mof 42[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m28s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m[1m 1[22m[32m OK [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/load-with-esm.ts[0m[37m [0m[1m[38;2;170;170;170m465ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m5 passed[0m[0m​[0m, [0m[0m​[0m5 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m43 passed[0m[0m​[0m, [0m[0m​[0mof 43[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m28s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m[1m 1[22m[32m OK [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/load-with-esm.ts[0m[37m [0m[1m[38;2;170;170;170m499ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m5 passed[0m[0m​[0m, [0m[0m​[0m5 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m43 passed[0m[0m​[0m, [0m[0m​[0mof 43[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m28s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m[1m 1[22m[32m OK [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/load-with-esm.ts[0m[37m [0m[1m[38;2;170;170;170m666ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m5 passed[0m[0m​[0m, [0m[0m​[0m5 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m43 passed[0m[0m​[0m, [0m[0m​[0mof 43[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m28s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m[1m 1[22m[32m OK [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/load-with-esm.ts[0m[37m [0m[1m[38;2;170;170;170m866ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m5 passed[0m[0m​[0m, [0m[0m​[0m5 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m43 passed[0m[0m​[0m, [0m[0m​[0mof 43[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m28s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m[1m 1[22m[32m OK [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/load-with-esm.ts[0m[37m [0m[1m[38;2;170;170;170m1s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m5 passed[0m[0m​[0m, [0m[0m​[0m5 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m43 passed[0m[0m​[0m, [0m[0m​[0mof 43[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m29s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m[1m 1[22m[32m OK [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/load-with-esm.ts[0m[37m [0m[1m[38;2;170;170;170m1s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m5 passed[0m[0m​[0m, [0m[0m​[0m5 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m43 passed[0m[0m​[0m, [0m[0m​[0mof 43[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m29s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m[1m 1[22m[32m OK [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/load-with-esm.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m5 passed[0m[0m​[0m, [0m[0m​[0m5 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m43 passed[0m[0m​[0m, [0m[0m​[0mof 43[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m29s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m[1m 1[22m[32m OK [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/load-with-esm.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m5 passed[0m[0m​[0m, [0m[0m​[0m5 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m43 passed[0m[0m​[0m, [0m[0m​[0mof 43[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m30s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m[1m 1[22m[32m OK [0m[1m[38;2;170;170;170m5s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/load-with-esm.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m5 passed[0m[0m​[0m, [0m[0m​[0m5 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m43 passed[0m[0m​[0m, [0m[0m​[0mof 43[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m30s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m[1m 1[22m[32m OK [0m[1m[38;2;170;170;170m5s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/load-with-esm.ts[0m[37m [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m5 passed[0m[0m​[0m, [0m[0m​[0m5 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m43 passed[0m[0m​[0m, [0m[0m​[0mof 43[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m30s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m[1m 1[22m[32m OK [0m[1m[38;2;170;170;170m5s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/load-with-esm.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m5 passed[0m[0m​[0m, [0m[0m​[0m5 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m45 passed[0m[0m​[0m, [0m[0m​[0mof 45[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m30s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[38;2;0;0;0m[42m PASS [0m[0m​[0m test/load-with-esm.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m247.427ms[39m[22m[0m[0m[42m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[38;2;0;0;0m[42m[0m[0m[0m[0m[0m[1m[38;2;0;0;0m[42m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m[1m 1[22m[32m OK [0m[1m[38;2;170;170;170m5s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m6 passed[0m[0m​[0m, [0m[0m​[0m6 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m45 passed[0m[0m​[0m, [0m[0m​[0mof 45[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m30s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m[1m 1[22m[32m OK [0m[1m[38;2;170;170;170m5s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/messages.ts[0m[37m [0m[1m[38;2;170;170;170m1ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m6 passed[0m[0m​[0m, [0m[0m​[0m6 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m45 passed[0m[0m​[0m, [0m[0m​[0mof 45[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m30s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m[1m 1[22m[32m OK [0m[1m[38;2;170;170;170m5s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/messages.ts[0m[37m [0m[1m[38;2;170;170;170m46ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m6 passed[0m[0m​[0m, [0m[0m​[0m6 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m45 passed[0m[0m​[0m, [0m[0m​[0mof 45[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m30s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m5s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/messages.ts[0m[37m [0m[1m[38;2;170;170;170m245ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m6 passed[0m[0m​[0m, [0m[0m​[0m6 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m46 passed[0m[0m​[0m, [0m[0m​[0mof 46[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m31s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m5s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/messages.ts[0m[37m [0m[1m[38;2;170;170;170m290ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m6 passed[0m[0m​[0m, [0m[0m​[0m6 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m46 passed[0m[0m​[0m, [0m[0m​[0mof 46[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m31s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m5s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/messages.ts[0m[37m [0m[1m[38;2;170;170;170m445ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m6 passed[0m[0m​[0m, [0m[0m​[0m6 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m46 passed[0m[0m​[0m, [0m[0m​[0mof 46[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m31s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m6s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/messages.ts[0m[37m [0m[1m[38;2;170;170;170m646ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m6 passed[0m[0m​[0m, [0m[0m​[0m6 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m46 passed[0m[0m​[0m, [0m[0m​[0mof 46[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m31s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m6s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/messages.ts[0m[37m [0m[1m[38;2;170;170;170m845ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m6 passed[0m[0m​[0m, [0m[0m​[0m6 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m46 passed[0m[0m​[0m, [0m[0m​[0mof 46[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m31s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m6s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/messages.ts[0m[37m [0m[1m[38;2;170;170;170m1s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m6 passed[0m[0m​[0m, [0m[0m​[0m6 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m46 passed[0m[0m​[0m, [0m[0m​[0mof 46[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m31s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m6s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/messages.ts[0m[37m [0m[1m[38;2;170;170;170m1s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m6 passed[0m[0m​[0m, [0m[0m​[0m6 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m46 passed[0m[0m​[0m, [0m[0m​[0mof 46[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m32s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m7s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/messages.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m6 passed[0m[0m​[0m, [0m[0m​[0m6 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m46 passed[0m[0m​[0m, [0m[0m​[0mof 46[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m32s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m[1m 4[22m[32m OK [0m[1m[38;2;170;170;170m7s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/messages.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m6 passed[0m[0m​[0m, [0m[0m​[0m6 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m48 passed[0m[0m​[0m, [0m[0m​[0mof 48[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m33s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m[1m 4[22m[32m OK [0m[1m[38;2;170;170;170m8s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/messages.ts[0m[37m [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m6 passed[0m[0m​[0m, [0m[0m​[0m6 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m48 passed[0m[0m​[0m, [0m[0m​[0mof 48[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m33s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m[1m 4[22m[32m OK [0m[1m[38;2;170;170;170m8s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/messages.ts[0m[37m [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m6 passed[0m[0m​[0m, [0m[0m​[0m6 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m48 passed[0m[0m​[0m, [0m[0m​[0mof 48[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m34s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m[1m 4[22m[32m OK [0m[1m[38;2;170;170;170m8s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/messages.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m6 passed[0m[0m​[0m, [0m[0m​[0m6 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m50 passed[0m[0m​[0m, [0m[0m​[0mof 50[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m34s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[38;2;0;0;0m[42m PASS [0m[0m​[0m test/messages.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m1s[39m[22m[0m[0m[42m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[38;2;0;0;0m[42m[0m[0m[0m[0m[0m[1m[38;2;0;0;0m[42m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m[1m 4[22m[32m OK [0m[1m[38;2;170;170;170m9s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m7 passed[0m[0m​[0m, [0m[0m​[0m7 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m50 passed[0m[0m​[0m, [0m[0m​[0mof 50[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m34s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m[1m 4[22m[32m OK [0m[1m[38;2;170;170;170m9s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/move-test.ts[0m[37m [0m[1m[38;2;170;170;170m0ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m7 passed[0m[0m​[0m, [0m[0m​[0m7 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m50 passed[0m[0m​[0m, [0m[0m​[0mof 50[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m34s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m[1m 4[22m[32m OK [0m[1m[38;2;170;170;170m9s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/move-test.ts[0m[37m [0m[1m[38;2;170;170;170m88ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m7 passed[0m[0m​[0m, [0m[0m​[0m7 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m50 passed[0m[0m​[0m, [0m[0m​[0mof 50[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m34s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m[1m 4[22m[32m OK [0m[1m[38;2;170;170;170m9s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/move-test.ts[0m[37m [0m[1m[38;2;170;170;170m287ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m7 passed[0m[0m​[0m, [0m[0m​[0m7 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m50 passed[0m[0m​[0m, [0m[0m​[0mof 50[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m34s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m[1m 4[22m[32m OK [0m[1m[38;2;170;170;170m9s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/move-test.ts[0m[37m [0m[1m[38;2;170;170;170m488ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m7 passed[0m[0m​[0m, [0m[0m​[0m7 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m50 passed[0m[0m​[0m, [0m[0m​[0mof 50[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m34s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m[1m 4[22m[32m OK [0m[1m[38;2;170;170;170m9s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/move-test.ts[0m[37m [0m[1m[38;2;170;170;170m688ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m7 passed[0m[0m​[0m, [0m[0m​[0m7 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m50 passed[0m[0m​[0m, [0m[0m​[0mof 50[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m35s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m[1m 4[22m[32m OK [0m[1m[38;2;170;170;170m9s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/move-test.ts[0m[37m [0m[1m[38;2;170;170;170m888ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m7 passed[0m[0m​[0m, [0m[0m​[0m7 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m50 passed[0m[0m​[0m, [0m[0m​[0mof 50[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m35s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m[1m 4[22m[32m OK [0m[1m[38;2;170;170;170m10s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/move-test.ts[0m[37m [0m[1m[38;2;170;170;170m1s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m7 passed[0m[0m​[0m, [0m[0m​[0m7 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m50 passed[0m[0m​[0m, [0m[0m​[0mof 50[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m35s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/idle-timeout.ts[0m[37m[1m 8[22m[32m OK [0m[1m[38;2;170;170;170m10s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/move-test.ts[0m[37m [0m[1m[38;2;170;170;170m1s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m7 passed[0m[0m​[0m, [0m[0m​[0m7 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m54 passed[0m[0m​[0m, [0m[0m​[0mof 54[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m35s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[38;2;0;0;0m[42m PASS [0m[0m​[0m test/idle-timeout.ts[0m[37m[1m 8[22m[32m OK [0m[1m[38;2;170;170;170m7s[39m[22m[0m[0m[42m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[38;2;0;0;0m[42m[0m[0m[0m[0m[0m[1m[38;2;0;0;0m[42m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/move-test.ts[0m[37m [0m[1m[38;2;170;170;170m1s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m8 passed[0m[0m​[0m, [0m[0m​[0m8 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m54 passed[0m[0m​[0m, [0m[0m​[0mof 54[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m35s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/move-test.ts[0m[37m [0m[1m[38;2;170;170;170m1s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/nice.ts[0m[37m [0m[1m[38;2;170;170;170m1ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m8 passed[0m[0m​[0m, [0m[0m​[0m8 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m54 passed[0m[0m​[0m, [0m[0m​[0mof 54[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m35s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/move-test.ts[0m[37m [0m[1m[38;2;170;170;170m1s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/nice.ts[0m[37m [0m[1m[38;2;170;170;170m74ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m8 passed[0m[0m​[0m, [0m[0m​[0m8 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m54 passed[0m[0m​[0m, [0m[0m​[0mof 54[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m35s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/move-test.ts[0m[37m [0m[1m[38;2;170;170;170m1s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/nice.ts[0m[37m [0m[1m[38;2;170;170;170m274ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m8 passed[0m[0m​[0m, [0m[0m​[0m8 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m54 passed[0m[0m​[0m, [0m[0m​[0mof 54[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m35s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/move-test.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/nice.ts[0m[37m [0m[1m[38;2;170;170;170m474ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m8 passed[0m[0m​[0m, [0m[0m​[0m8 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m54 passed[0m[0m​[0m, [0m[0m​[0mof 54[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m36s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/move-test.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/nice.ts[0m[37m [0m[1m[38;2;170;170;170m675ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m8 passed[0m[0m​[0m, [0m[0m​[0m8 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m54 passed[0m[0m​[0m, [0m[0m​[0mof 54[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m36s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/move-test.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/nice.ts[0m[37m [0m[1m[38;2;170;170;170m875ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m8 passed[0m[0m​[0m, [0m[0m​[0m8 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m54 passed[0m[0m​[0m, [0m[0m​[0mof 54[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m36s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/move-test.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/nice.ts[0m[37m [0m[1m[38;2;170;170;170m1s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m8 passed[0m[0m​[0m, [0m[0m​[0m8 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m54 passed[0m[0m​[0m, [0m[0m​[0mof 54[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m36s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/move-test.ts[0m[37m [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/nice.ts[0m[37m [0m[1m[38;2;170;170;170m1s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m8 passed[0m[0m​[0m, [0m[0m​[0m8 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m54 passed[0m[0m​[0m, [0m[0m​[0mof 54[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m37s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/move-test.ts[0m[37m[1m 21[22m[32m OK [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/nice.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m8 passed[0m[0m​[0m, [0m[0m​[0m8 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m75 passed[0m[0m​[0m, [0m[0m​[0mof 75[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m37s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/move-test.ts[0m[37m[1m 21[22m[32m OK [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/nice.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m8 passed[0m[0m​[0m, [0m[0m​[0m8 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m75 passed[0m[0m​[0m, [0m[0m​[0mof 75[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m38s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/move-test.ts[0m[37m[1m 21[22m[32m OK [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/nice.ts[0m[37m [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m8 passed[0m[0m​[0m, [0m[0m​[0m8 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m75 passed[0m[0m​[0m, [0m[0m​[0mof 75[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m38s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/move-test.ts[0m[37m[1m 21[22m[32m OK [0m[1m[38;2;170;170;170m5s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/nice.ts[0m[37m [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m8 passed[0m[0m​[0m, [0m[0m​[0m8 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m75 passed[0m[0m​[0m, [0m[0m​[0mof 75[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m39s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/move-test.ts[0m[37m[1m 21[22m[32m OK [0m[1m[38;2;170;170;170m5s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/nice.ts[0m[37m [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m8 passed[0m[0m​[0m, [0m[0m​[0m8 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m75 passed[0m[0m​[0m, [0m[0m​[0mof 75[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m39s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/move-test.ts[0m[37m[1m 21[22m[32m OK [0m[1m[38;2;170;170;170m6s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/nice.ts[0m[37m [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m8 passed[0m[0m​[0m, [0m[0m​[0m8 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m75 passed[0m[0m​[0m, [0m[0m​[0mof 75[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m40s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/move-test.ts[0m[37m[1m 21[22m[32m OK [0m[1m[38;2;170;170;170m6s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/nice.ts[0m[37m[1m 1[22m[32m OK [0m[1m[38;2;170;170;170m5s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m8 passed[0m[0m​[0m, [0m[0m​[0m8 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m76 passed[0m[0m​[0m, [0m[0m​[0mof 76[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m40s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/move-test.ts[0m[37m[1m 21[22m[32m OK [0m[1m[38;2;170;170;170m7s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/nice.ts[0m[37m[1m 1[22m[32m OK [0m[1m[38;2;170;170;170m5s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m8 passed[0m[0m​[0m, [0m[0m​[0m8 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m76 passed[0m[0m​[0m, [0m[0m​[0mof 76[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m41s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/move-test.ts[0m[37m[1m 21[22m[32m OK [0m[1m[38;2;170;170;170m7s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/nice.ts[0m[37m[1m 1[22m[32m OK [0m[1m[38;2;170;170;170m6s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m8 passed[0m[0m​[0m, [0m[0m​[0m8 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m76 passed[0m[0m​[0m, [0m[0m​[0mof 76[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m41s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/move-test.ts[0m[37m[1m 21[22m[32m OK [0m[1m[38;2;170;170;170m8s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/nice.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m6s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m8 passed[0m[0m​[0m, [0m[0m​[0m8 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m77 passed[0m[0m​[0m, [0m[0m​[0mof 77[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m41s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/move-test.ts[0m[37m[1m 21[22m[32m OK [0m[1m[38;2;170;170;170m8s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/nice.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m6s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m8 passed[0m[0m​[0m, [0m[0m​[0m8 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m77 passed[0m[0m​[0m, [0m[0m​[0mof 77[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m42s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/move-test.ts[0m[37m[1m 21[22m[32m OK [0m[1m[38;2;170;170;170m8s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/nice.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m7s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m8 passed[0m[0m​[0m, [0m[0m​[0m8 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m77 passed[0m[0m​[0m, [0m[0m​[0mof 77[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m42s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[38;2;0;0;0m[42m PASS [0m[0m​[0m test/nice.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[42m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[38;2;0;0;0m[42m[0m[0m[0m[0m[0m[1m[38;2;0;0;0m[42m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/move-test.ts[0m[37m[1m 21[22m[32m OK [0m[1m[38;2;170;170;170m8s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m9 passed[0m[0m​[0m, [0m[0m​[0m9 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m77 passed[0m[0m​[0m, [0m[0m​[0mof 77[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m42s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/move-test.ts[0m[37m[1m 21[22m[32m OK [0m[1m[38;2;170;170;170m8s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/option-validation.ts[0m[37m [0m[1m[38;2;170;170;170m1ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m9 passed[0m[0m​[0m, [0m[0m​[0m9 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m77 passed[0m[0m​[0m, [0m[0m​[0mof 77[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m42s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/move-test.ts[0m[37m[1m 21[22m[32m OK [0m[1m[38;2;170;170;170m8s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/option-validation.ts[0m[37m [0m[1m[38;2;170;170;170m109ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m9 passed[0m[0m​[0m, [0m[0m​[0m9 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m77 passed[0m[0m​[0m, [0m[0m​[0mof 77[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m42s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/move-test.ts[0m[37m[1m 21[22m[32m OK [0m[1m[38;2;170;170;170m8s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/option-validation.ts[0m[37m [0m[1m[38;2;170;170;170m309ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m9 passed[0m[0m​[0m, [0m[0m​[0m9 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m77 passed[0m[0m​[0m, [0m[0m​[0mof 77[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m42s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/move-test.ts[0m[37m[1m 29[22m[32m OK [0m[1m[38;2;170;170;170m8s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/option-validation.ts[0m[37m [0m[1m[38;2;170;170;170m370ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m9 passed[0m[0m​[0m, [0m[0m​[0m9 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m85 passed[0m[0m​[0m, [0m[0m​[0mof 85[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m42s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/move-test.ts[0m[37m[1m 29[22m[32m OK [0m[1m[38;2;170;170;170m8s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/option-validation.ts[0m[37m [0m[1m[38;2;170;170;170m509ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m9 passed[0m[0m​[0m, [0m[0m​[0m9 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m85 passed[0m[0m​[0m, [0m[0m​[0mof 85[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m42s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[38;2;0;0;0m[42m PASS [0m[0m​[0m test/move-test.ts[0m[37m[1m 29[22m[32m OK [0m[1m[38;2;170;170;170m6s[39m[22m[0m[0m[42m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[38;2;0;0;0m[42m[0m[0m[0m[0m[0m[1m[38;2;0;0;0m[42m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/option-validation.ts[0m[37m [0m[1m[38;2;170;170;170m543ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m10 passed[0m[0m​[0m, [0m[0m​[0m10 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m85 passed[0m[0m​[0m, [0m[0m​[0mof 85[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m42s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/option-validation.ts[0m[37m [0m[1m[38;2;170;170;170m557ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/pool-destroy.ts[0m[37m [0m[1m[38;2;170;170;170m0ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m10 passed[0m[0m​[0m, [0m[0m​[0m10 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m85 passed[0m[0m​[0m, [0m[0m​[0mof 85[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m42s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/option-validation.ts[0m[37m [0m[1m[38;2;170;170;170m709ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/pool-destroy.ts[0m[37m [0m[1m[38;2;170;170;170m152ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m10 passed[0m[0m​[0m, [0m[0m​[0m10 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m85 passed[0m[0m​[0m, [0m[0m​[0mof 85[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m43s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/option-validation.ts[0m[37m [0m[1m[38;2;170;170;170m909ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/pool-destroy.ts[0m[37m [0m[1m[38;2;170;170;170m353ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m10 passed[0m[0m​[0m, [0m[0m​[0m10 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m85 passed[0m[0m​[0m, [0m[0m​[0mof 85[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m43s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/option-validation.ts[0m[37m [0m[1m[38;2;170;170;170m1s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/pool-destroy.ts[0m[37m [0m[1m[38;2;170;170;170m552ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m10 passed[0m[0m​[0m, [0m[0m​[0m10 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m85 passed[0m[0m​[0m, [0m[0m​[0mof 85[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m43s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/option-validation.ts[0m[37m [0m[1m[38;2;170;170;170m1s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/pool-destroy.ts[0m[37m [0m[1m[38;2;170;170;170m752ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m10 passed[0m[0m​[0m, [0m[0m​[0m10 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m85 passed[0m[0m​[0m, [0m[0m​[0mof 85[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m43s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/option-validation.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/pool-destroy.ts[0m[37m [0m[1m[38;2;170;170;170m952ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m10 passed[0m[0m​[0m, [0m[0m​[0m10 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m85 passed[0m[0m​[0m, [0m[0m​[0mof 85[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m43s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/option-validation.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/pool-destroy.ts[0m[37m [0m[1m[38;2;170;170;170m1s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m10 passed[0m[0m​[0m, [0m[0m​[0m10 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m85 passed[0m[0m​[0m, [0m[0m​[0mof 85[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m44s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/option-validation.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/pool-destroy.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m10 passed[0m[0m​[0m, [0m[0m​[0m10 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m85 passed[0m[0m​[0m, [0m[0m​[0mof 85[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m44s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/option-validation.ts[0m[37m [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/pool-destroy.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m10 passed[0m[0m​[0m, [0m[0m​[0m10 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m85 passed[0m[0m​[0m, [0m[0m​[0mof 85[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m44s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/option-validation.ts[0m[37m [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/pool-destroy.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m10 passed[0m[0m​[0m, [0m[0m​[0m10 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m85 passed[0m[0m​[0m, [0m[0m​[0mof 85[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m45s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/option-validation.ts[0m[37m[1m 13[22m[32m OK [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/pool-destroy.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m10 passed[0m[0m​[0m, [0m[0m​[0m10 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m98 passed[0m[0m​[0m, [0m[0m​[0mof 98[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m45s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/option-validation.ts[0m[37m[1m 18[22m[32m OK [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/pool-destroy.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m10 passed[0m[0m​[0m, [0m[0m​[0m10 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m103 passed[0m[0m​[0m, [0m[0m​[0mof 103[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m45s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/option-validation.ts[0m[37m[1m 27[22m[32m OK [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/pool-destroy.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m10 passed[0m[0m​[0m, [0m[0m​[0m10 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m112 passed[0m[0m​[0m, [0m[0m​[0mof 112[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m45s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/option-validation.ts[0m[37m[1m 27[22m[32m OK [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/pool-destroy.ts[0m[37m [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m10 passed[0m[0m​[0m, [0m[0m​[0m10 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m112 passed[0m[0m​[0m, [0m[0m​[0mof 112[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m45s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/option-validation.ts[0m[37m[1m 27[22m[32m OK [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/pool-destroy.ts[0m[37m [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m10 passed[0m[0m​[0m, [0m[0m​[0m10 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m112 passed[0m[0m​[0m, [0m[0m​[0mof 112[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m45s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[38;2;0;0;0m[42m PASS [0m[0m​[0m test/pool-destroy.ts[0m[37m[1m 1[22m[32m OK [0m[1m[38;2;170;170;170m96.449ms[39m[22m[0m[0m[42m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[38;2;0;0;0m[42m[0m[0m[0m[0m[0m[1m[38;2;0;0;0m[42m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/option-validation.ts[0m[37m[1m 27[22m[32m OK [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m11 passed[0m[0m​[0m, [0m[0m​[0m11 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m113 passed[0m[0m​[0m, [0m[0m​[0mof 113[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m46s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/option-validation.ts[0m[37m[1m 27[22m[32m OK [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m [0m[1m[38;2;170;170;170m1ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m11 passed[0m[0m​[0m, [0m[0m​[0m11 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m113 passed[0m[0m​[0m, [0m[0m​[0mof 113[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m46s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/option-validation.ts[0m[37m[1m 27[22m[32m OK [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m [0m[1m[38;2;170;170;170m10ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m11 passed[0m[0m​[0m, [0m[0m​[0m11 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m113 passed[0m[0m​[0m, [0m[0m​[0mof 113[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m46s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/option-validation.ts[0m[37m[1m 27[22m[32m OK [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m [0m[1m[38;2;170;170;170m43ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m11 passed[0m[0m​[0m, [0m[0m​[0m11 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m113 passed[0m[0m​[0m, [0m[0m​[0mof 113[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m46s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[38;2;0;0;0m[42m PASS [0m[0m​[0m test/option-validation.ts[0m[37m[1m 27[22m[32m OK [0m[1m[38;2;170;170;170m935.706ms[39m[22m[0m[0m[42m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[38;2;0;0;0m[42m[0m[0m[0m[0m[0m[1m[38;2;0;0;0m[42m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m [0m[1m[38;2;170;170;170m154ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m113 passed[0m[0m​[0m, [0m[0m​[0mof 113[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m46s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m [0m[1m[38;2;170;170;170m173ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m [0m[1m[38;2;170;170;170m0ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m113 passed[0m[0m​[0m, [0m[0m​[0mof 113[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m46s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m [0m[1m[38;2;170;170;170m243ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m [0m[1m[38;2;170;170;170m70ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m113 passed[0m[0m​[0m, [0m[0m​[0mof 113[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m46s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m [0m[1m[38;2;170;170;170m442ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m [0m[1m[38;2;170;170;170m270ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m113 passed[0m[0m​[0m, [0m[0m​[0mof 113[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m46s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m [0m[1m[38;2;170;170;170m645ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m [0m[1m[38;2;170;170;170m472ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m113 passed[0m[0m​[0m, [0m[0m​[0mof 113[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m46s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m [0m[1m[38;2;170;170;170m845ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m [0m[1m[38;2;170;170;170m672ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m113 passed[0m[0m​[0m, [0m[0m​[0mof 113[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m46s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m [0m[1m[38;2;170;170;170m1s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m [0m[1m[38;2;170;170;170m873ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m113 passed[0m[0m​[0m, [0m[0m​[0mof 113[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m47s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m [0m[1m[38;2;170;170;170m1s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m [0m[1m[38;2;170;170;170m1s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m113 passed[0m[0m​[0m, [0m[0m​[0mof 113[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m47s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m [0m[1m[38;2;170;170;170m1s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m113 passed[0m[0m​[0m, [0m[0m​[0mof 113[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m47s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m113 passed[0m[0m​[0m, [0m[0m​[0mof 113[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m47s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m113 passed[0m[0m​[0m, [0m[0m​[0mof 113[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m48s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m113 passed[0m[0m​[0m, [0m[0m​[0mof 113[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m48s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m113 passed[0m[0m​[0m, [0m[0m​[0mof 113[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m48s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m113 passed[0m[0m​[0m, [0m[0m​[0mof 113[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m49s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 3[22m[32m OK [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m116 passed[0m[0m​[0m, [0m[0m​[0mof 116[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m49s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 3[22m[32m OK [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m116 passed[0m[0m​[0m, [0m[0m​[0mof 116[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m49s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 3[22m[32m OK [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m116 passed[0m[0m​[0m, [0m[0m​[0mof 116[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m49s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 3[22m[32m OK [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m116 passed[0m[0m​[0m, [0m[0m​[0mof 116[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m50s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m [0m[1m[38;2;170;170;170m5s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 3[22m[32m OK [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m116 passed[0m[0m​[0m, [0m[0m​[0mof 116[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m50s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m [0m[1m[38;2;170;170;170m5s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 3[22m[32m OK [0m[1m[38;2;170;170;170m5s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m116 passed[0m[0m​[0m, [0m[0m​[0mof 116[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m50s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m [0m[1m[38;2;170;170;170m5s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 3[22m[32m OK [0m[1m[38;2;170;170;170m5s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m116 passed[0m[0m​[0m, [0m[0m​[0mof 116[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m51s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m [0m[1m[38;2;170;170;170m6s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 3[22m[32m OK [0m[1m[38;2;170;170;170m5s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m116 passed[0m[0m​[0m, [0m[0m​[0mof 116[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m51s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m [0m[1m[38;2;170;170;170m6s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 3[22m[32m OK [0m[1m[38;2;170;170;170m6s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m116 passed[0m[0m​[0m, [0m[0m​[0mof 116[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m51s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m [0m[1m[38;2;170;170;170m6s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 3[22m[32m OK [0m[1m[38;2;170;170;170m6s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m116 passed[0m[0m​[0m, [0m[0m​[0mof 116[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m52s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m [0m[1m[38;2;170;170;170m7s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 3[22m[32m OK [0m[1m[38;2;170;170;170m6s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m116 passed[0m[0m​[0m, [0m[0m​[0mof 116[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m52s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m [0m[1m[38;2;170;170;170m7s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 3[22m[32m OK [0m[1m[38;2;170;170;170m7s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m116 passed[0m[0m​[0m, [0m[0m​[0mof 116[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m52s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m [0m[1m[38;2;170;170;170m7s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 3[22m[32m OK [0m[1m[38;2;170;170;170m7s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m116 passed[0m[0m​[0m, [0m[0m​[0mof 116[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m53s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m [0m[1m[38;2;170;170;170m8s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 3[22m[32m OK [0m[1m[38;2;170;170;170m7s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m116 passed[0m[0m​[0m, [0m[0m​[0mof 116[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m53s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m [0m[1m[38;2;170;170;170m8s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 3[22m[32m OK [0m[1m[38;2;170;170;170m8s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m116 passed[0m[0m​[0m, [0m[0m​[0mof 116[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m53s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m [0m[1m[38;2;170;170;170m8s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 3[22m[32m OK [0m[1m[38;2;170;170;170m8s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m116 passed[0m[0m​[0m, [0m[0m​[0mof 116[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m54s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m [0m[1m[38;2;170;170;170m9s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 3[22m[32m OK [0m[1m[38;2;170;170;170m8s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m116 passed[0m[0m​[0m, [0m[0m​[0mof 116[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m54s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m [0m[1m[38;2;170;170;170m9s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 3[22m[32m OK [0m[1m[38;2;170;170;170m9s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m116 passed[0m[0m​[0m, [0m[0m​[0mof 116[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m54s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m [0m[1m[38;2;170;170;170m9s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 3[22m[32m OK [0m[1m[38;2;170;170;170m9s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m116 passed[0m[0m​[0m, [0m[0m​[0mof 116[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m55s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m [0m[1m[38;2;170;170;170m10s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 3[22m[32m OK [0m[1m[38;2;170;170;170m9s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m116 passed[0m[0m​[0m, [0m[0m​[0mof 116[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m55s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m10s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 3[22m[32m OK [0m[1m[38;2;170;170;170m10s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m118 passed[0m[0m​[0m, [0m[0m​[0mof 118[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m55s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m10s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 3[22m[32m OK [0m[1m[38;2;170;170;170m10s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m118 passed[0m[0m​[0m, [0m[0m​[0mof 118[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m56s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m10s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 5[22m[32m OK [0m[1m[38;2;170;170;170m10s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m120 passed[0m[0m​[0m, [0m[0m​[0mof 120[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m56s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m10s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 8[22m[32m OK [0m[1m[38;2;170;170;170m10s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m123 passed[0m[0m​[0m, [0m[0m​[0mof 123[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m56s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m11s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 8[22m[32m OK [0m[1m[38;2;170;170;170m10s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m123 passed[0m[0m​[0m, [0m[0m​[0mof 123[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m56s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m11s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 8[22m[32m OK [0m[1m[38;2;170;170;170m11s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m123 passed[0m[0m​[0m, [0m[0m​[0mof 123[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m56s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m11s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 8[22m[32m OK [0m[1m[38;2;170;170;170m11s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m123 passed[0m[0m​[0m, [0m[0m​[0mof 123[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m57s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m12s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 8[22m[32m OK [0m[1m[38;2;170;170;170m11s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m123 passed[0m[0m​[0m, [0m[0m​[0mof 123[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m57s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m12s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 8[22m[32m OK [0m[1m[38;2;170;170;170m12s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m123 passed[0m[0m​[0m, [0m[0m​[0mof 123[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m57s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m12s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 8[22m[32m OK [0m[1m[38;2;170;170;170m12s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m123 passed[0m[0m​[0m, [0m[0m​[0mof 123[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m58s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m13s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 8[22m[32m OK [0m[1m[38;2;170;170;170m12s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m123 passed[0m[0m​[0m, [0m[0m​[0mof 123[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m58s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m13s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 8[22m[32m OK [0m[1m[38;2;170;170;170m13s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m123 passed[0m[0m​[0m, [0m[0m​[0mof 123[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m58s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m13s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 8[22m[32m OK [0m[1m[38;2;170;170;170m13s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m123 passed[0m[0m​[0m, [0m[0m​[0mof 123[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m59s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m14s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 8[22m[32m OK [0m[1m[38;2;170;170;170m13s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m123 passed[0m[0m​[0m, [0m[0m​[0mof 123[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m59s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m14s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 8[22m[32m OK [0m[1m[38;2;170;170;170m14s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m123 passed[0m[0m​[0m, [0m[0m​[0mof 123[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m59s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m14s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 8[22m[32m OK [0m[1m[38;2;170;170;170m14s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m123 passed[0m[0m​[0m, [0m[0m​[0mof 123[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m60s[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m14s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 8[22m[32m OK [0m[1m[38;2;170;170;170m14s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m123 passed[0m[0m​[0m, [0m[0m​[0mof 123[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m15s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 8[22m[32m OK [0m[1m[38;2;170;170;170m14s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m123 passed[0m[0m​[0m, [0m[0m​[0mof 123[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m15s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 8[22m[32m OK [0m[1m[38;2;170;170;170m15s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m123 passed[0m[0m​[0m, [0m[0m​[0mof 123[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m16s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 8[22m[32m OK [0m[1m[38;2;170;170;170m15s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m123 passed[0m[0m​[0m, [0m[0m​[0mof 123[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m16s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 8[22m[32m OK [0m[1m[38;2;170;170;170m16s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m123 passed[0m[0m​[0m, [0m[0m​[0mof 123[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 5[22m[32m OK [0m[1m[38;2;170;170;170m16s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 8[22m[32m OK [0m[1m[38;2;170;170;170m16s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m126 passed[0m[0m​[0m, [0m[0m​[0mof 126[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 5[22m[32m OK [0m[1m[38;2;170;170;170m17s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 8[22m[32m OK [0m[1m[38;2;170;170;170m16s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m126 passed[0m[0m​[0m, [0m[0m​[0mof 126[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 5[22m[32m OK [0m[1m[38;2;170;170;170m17s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 8[22m[32m OK [0m[1m[38;2;170;170;170m17s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m126 passed[0m[0m​[0m, [0m[0m​[0mof 126[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 5[22m[32m OK [0m[1m[38;2;170;170;170m18s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 8[22m[32m OK [0m[1m[38;2;170;170;170m17s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m126 passed[0m[0m​[0m, [0m[0m​[0mof 126[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 5[22m[32m OK [0m[1m[38;2;170;170;170m18s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 8[22m[32m OK [0m[1m[38;2;170;170;170m18s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m126 passed[0m[0m​[0m, [0m[0m​[0mof 126[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 5[22m[32m OK [0m[1m[38;2;170;170;170m18s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 9[22m[32m OK [0m[1m[38;2;170;170;170m18s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m127 passed[0m[0m​[0m, [0m[0m​[0mof 127[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 5[22m[32m OK [0m[1m[38;2;170;170;170m19s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 9[22m[32m OK [0m[1m[38;2;170;170;170m19s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m127 passed[0m[0m​[0m, [0m[0m​[0mof 127[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 5[22m[32m OK [0m[1m[38;2;170;170;170m20s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 9[22m[32m OK [0m[1m[38;2;170;170;170m20s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m127 passed[0m[0m​[0m, [0m[0m​[0mof 127[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 6[22m[32m OK [0m[1m[38;2;170;170;170m20s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 9[22m[32m OK [0m[1m[38;2;170;170;170m20s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m128 passed[0m[0m​[0m, [0m[0m​[0mof 128[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 6[22m[32m OK [0m[1m[38;2;170;170;170m21s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 9[22m[32m OK [0m[1m[38;2;170;170;170m21s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m128 passed[0m[0m​[0m, [0m[0m​[0mof 128[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 6[22m[32m OK [0m[1m[38;2;170;170;170m22s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 10[22m[32m OK [0m[1m[38;2;170;170;170m22s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m129 passed[0m[0m​[0m, [0m[0m​[0mof 129[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 6[22m[32m OK [0m[1m[38;2;170;170;170m23s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 10[22m[32m OK [0m[1m[38;2;170;170;170m23s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m129 passed[0m[0m​[0m, [0m[0m​[0mof 129[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 6[22m[32m OK [0m[1m[38;2;170;170;170m23s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 11[22m[32m OK [0m[1m[38;2;170;170;170m23s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m130 passed[0m[0m​[0m, [0m[0m​[0mof 130[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 6[22m[32m OK [0m[1m[38;2;170;170;170m24s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 11[22m[32m OK [0m[1m[38;2;170;170;170m24s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m130 passed[0m[0m​[0m, [0m[0m​[0mof 130[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 12[22m[32m OK [0m[1m[38;2;170;170;170m24s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 11[22m[32m OK [0m[1m[38;2;170;170;170m24s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m136 passed[0m[0m​[0m, [0m[0m​[0mof 136[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 14[22m[32m OK [0m[1m[38;2;170;170;170m24s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 11[22m[32m OK [0m[1m[38;2;170;170;170m24s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m138 passed[0m[0m​[0m, [0m[0m​[0mof 138[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 14[22m[32m OK [0m[1m[38;2;170;170;170m24s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 13[22m[32m OK [0m[1m[38;2;170;170;170m24s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m140 passed[0m[0m​[0m, [0m[0m​[0mof 140[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 14[22m[32m OK [0m[1m[38;2;170;170;170m25s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 13[22m[32m OK [0m[1m[38;2;170;170;170m25s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m140 passed[0m[0m​[0m, [0m[0m​[0mof 140[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 14[22m[32m OK [0m[1m[38;2;170;170;170m25s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 14[22m[32m OK [0m[1m[38;2;170;170;170m25s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m141 passed[0m[0m​[0m, [0m[0m​[0mof 141[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 14[22m[32m OK [0m[1m[38;2;170;170;170m26s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 14[22m[32m OK [0m[1m[38;2;170;170;170m25s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m141 passed[0m[0m​[0m, [0m[0m​[0mof 141[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 14[22m[32m OK [0m[1m[38;2;170;170;170m26s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 14[22m[32m OK [0m[1m[38;2;170;170;170m26s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m141 passed[0m[0m​[0m, [0m[0m​[0mof 141[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 14[22m[32m OK [0m[1m[38;2;170;170;170m27s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 14[22m[32m OK [0m[1m[38;2;170;170;170m26s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m141 passed[0m[0m​[0m, [0m[0m​[0mof 141[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 14[22m[32m OK [0m[1m[38;2;170;170;170m27s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 14[22m[32m OK [0m[1m[38;2;170;170;170m27s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m141 passed[0m[0m​[0m, [0m[0m​[0mof 141[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 14[22m[32m OK [0m[1m[38;2;170;170;170m28s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 14[22m[32m OK [0m[1m[38;2;170;170;170m27s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m141 passed[0m[0m​[0m, [0m[0m​[0mof 141[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 14[22m[32m OK [0m[1m[38;2;170;170;170m28s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 14[22m[32m OK [0m[1m[38;2;170;170;170m28s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m141 passed[0m[0m​[0m, [0m[0m​[0mof 141[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 14[22m[32m OK [0m[1m[38;2;170;170;170m28s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 15[22m[32m OK [0m[1m[38;2;170;170;170m28s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m142 passed[0m[0m​[0m, [0m[0m​[0mof 142[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 14[22m[32m OK [0m[1m[38;2;170;170;170m28s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 16[22m[32m OK [0m[1m[38;2;170;170;170m28s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m143 passed[0m[0m​[0m, [0m[0m​[0mof 143[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 14[22m[32m OK [0m[1m[38;2;170;170;170m29s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 16[22m[32m OK [0m[1m[38;2;170;170;170m28s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m143 passed[0m[0m​[0m, [0m[0m​[0mof 143[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 14[22m[32m OK [0m[1m[38;2;170;170;170m29s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 16[22m[32m OK [0m[1m[38;2;170;170;170m29s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m143 passed[0m[0m​[0m, [0m[0m​[0mof 143[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 14[22m[32m OK [0m[1m[38;2;170;170;170m30s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 16[22m[32m OK [0m[1m[38;2;170;170;170m29s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m143 passed[0m[0m​[0m, [0m[0m​[0mof 143[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 14[22m[32m OK [0m[1m[38;2;170;170;170m30s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 16[22m[32m OK [0m[1m[38;2;170;170;170m30s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m143 passed[0m[0m​[0m, [0m[0m​[0mof 143[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 14[22m[32m OK [0m[1m[38;2;170;170;170m31s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 16[22m[32m OK [0m[1m[38;2;170;170;170m30s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m143 passed[0m[0m​[0m, [0m[0m​[0mof 143[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 14[22m[32m OK [0m[1m[38;2;170;170;170m31s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 16[22m[32m OK [0m[1m[38;2;170;170;170m31s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m143 passed[0m[0m​[0m, [0m[0m​[0mof 143[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 14[22m[32m OK [0m[1m[38;2;170;170;170m32s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 16[22m[32m OK [0m[1m[38;2;170;170;170m31s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m143 passed[0m[0m​[0m, [0m[0m​[0mof 143[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 14[22m[32m OK [0m[1m[38;2;170;170;170m32s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 16[22m[32m OK [0m[1m[38;2;170;170;170m32s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m143 passed[0m[0m​[0m, [0m[0m​[0mof 143[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 14[22m[32m OK [0m[1m[38;2;170;170;170m33s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 16[22m[32m OK [0m[1m[38;2;170;170;170m32s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m143 passed[0m[0m​[0m, [0m[0m​[0mof 143[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 14[22m[32m OK [0m[1m[38;2;170;170;170m33s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 16[22m[32m OK [0m[1m[38;2;170;170;170m33s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m143 passed[0m[0m​[0m, [0m[0m​[0mof 143[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 14[22m[32m OK [0m[1m[38;2;170;170;170m33s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 18[22m[32m OK [0m[1m[38;2;170;170;170m33s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m145 passed[0m[0m​[0m, [0m[0m​[0mof 145[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 14[22m[32m OK [0m[1m[38;2;170;170;170m34s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 18[22m[32m OK [0m[1m[38;2;170;170;170m33s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m145 passed[0m[0m​[0m, [0m[0m​[0mof 145[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 14[22m[32m OK [0m[1m[38;2;170;170;170m34s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 18[22m[32m OK [0m[1m[38;2;170;170;170m34s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m145 passed[0m[0m​[0m, [0m[0m​[0mof 145[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 15[22m[32m OK [0m[1m[38;2;170;170;170m34s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 18[22m[32m OK [0m[1m[38;2;170;170;170m34s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m146 passed[0m[0m​[0m, [0m[0m​[0mof 146[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 15[22m[32m OK [0m[1m[38;2;170;170;170m35s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 18[22m[32m OK [0m[1m[38;2;170;170;170m34s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m146 passed[0m[0m​[0m, [0m[0m​[0mof 146[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 15[22m[32m OK [0m[1m[38;2;170;170;170m35s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 19[22m[32m OK [0m[1m[38;2;170;170;170m34s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m147 passed[0m[0m​[0m, [0m[0m​[0mof 147[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 15[22m[32m OK [0m[1m[38;2;170;170;170m35s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 19[22m[32m OK [0m[1m[38;2;170;170;170m35s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m147 passed[0m[0m​[0m, [0m[0m​[0mof 147[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 15[22m[32m OK [0m[1m[38;2;170;170;170m36s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 19[22m[32m OK [0m[1m[38;2;170;170;170m35s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m147 passed[0m[0m​[0m, [0m[0m​[0mof 147[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 15[22m[32m OK [0m[1m[38;2;170;170;170m36s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 20[22m[32m OK [0m[1m[38;2;170;170;170m36s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m148 passed[0m[0m​[0m, [0m[0m​[0mof 148[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 15[22m[32m OK [0m[1m[38;2;170;170;170m37s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 20[22m[32m OK [0m[1m[38;2;170;170;170m36s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m148 passed[0m[0m​[0m, [0m[0m​[0mof 148[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 15[22m[32m OK [0m[1m[38;2;170;170;170m37s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 20[22m[32m OK [0m[1m[38;2;170;170;170m37s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m148 passed[0m[0m​[0m, [0m[0m​[0mof 148[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 15[22m[32m OK [0m[1m[38;2;170;170;170m37s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 24[22m[32m OK [0m[1m[38;2;170;170;170m37s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m152 passed[0m[0m​[0m, [0m[0m​[0mof 152[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 16[22m[32m OK [0m[1m[38;2;170;170;170m37s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 24[22m[32m OK [0m[1m[38;2;170;170;170m37s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m153 passed[0m[0m​[0m, [0m[0m​[0mof 153[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 16[22m[32m OK [0m[1m[38;2;170;170;170m38s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 24[22m[32m OK [0m[1m[38;2;170;170;170m37s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m153 passed[0m[0m​[0m, [0m[0m​[0mof 153[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 16[22m[32m OK [0m[1m[38;2;170;170;170m38s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 24[22m[32m OK [0m[1m[38;2;170;170;170m38s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m153 passed[0m[0m​[0m, [0m[0m​[0mof 153[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 16[22m[32m OK [0m[1m[38;2;170;170;170m39s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 24[22m[32m OK [0m[1m[38;2;170;170;170m38s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m153 passed[0m[0m​[0m, [0m[0m​[0mof 153[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 20[22m[32m OK [0m[1m[38;2;170;170;170m39s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 24[22m[32m OK [0m[1m[38;2;170;170;170m39s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m157 passed[0m[0m​[0m, [0m[0m​[0mof 157[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 22[22m[32m OK [0m[1m[38;2;170;170;170m39s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 24[22m[32m OK [0m[1m[38;2;170;170;170m39s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m159 passed[0m[0m​[0m, [0m[0m​[0mof 159[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 22[22m[32m OK [0m[1m[38;2;170;170;170m39s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 28[22m[32m OK [0m[1m[38;2;170;170;170m39s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m163 passed[0m[0m​[0m, [0m[0m​[0mof 163[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 22[22m[32m OK [0m[1m[38;2;170;170;170m40s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 28[22m[32m OK [0m[1m[38;2;170;170;170m39s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m163 passed[0m[0m​[0m, [0m[0m​[0mof 163[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 22[22m[32m OK [0m[1m[38;2;170;170;170m40s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 28[22m[32m OK [0m[1m[38;2;170;170;170m40s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m163 passed[0m[0m​[0m, [0m[0m​[0mof 163[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 22[22m[32m OK [0m[1m[38;2;170;170;170m40s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 31[22m[32m OK [0m[1m[38;2;170;170;170m40s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m166 passed[0m[0m​[0m, [0m[0m​[0mof 166[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 22[22m[32m OK [0m[1m[38;2;170;170;170m41s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 31[22m[32m OK [0m[1m[38;2;170;170;170m40s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m166 passed[0m[0m​[0m, [0m[0m​[0mof 166[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 22[22m[32m OK [0m[1m[38;2;170;170;170m41s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 31[22m[32m OK [0m[1m[38;2;170;170;170m41s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m12 passed[0m[0m​[0m, [0m[0m​[0m12 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m166 passed[0m[0m​[0m, [0m[0m​[0mof 166[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[38;2;0;0;0m[42m PASS [0m[0m​[0m test/simple-test.ts[0m[37m[1m 31[22m[32m OK [0m[1m[38;2;170;170;170m37s[39m[22m[0m[0m[42m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[38;2;0;0;0m[42m[0m[0m[0m[0m[0m[1m[38;2;0;0;0m[42m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 22[22m[32m OK [0m[1m[38;2;170;170;170m41s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m13 passed[0m[0m​[0m, [0m[0m​[0m13 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m166 passed[0m[0m​[0m, [0m[0m​[0mof 166[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 22[22m[32m OK [0m[1m[38;2;170;170;170m41s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/task-queue.ts[0m[37m [0m[1m[38;2;170;170;170m1ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m13 passed[0m[0m​[0m, [0m[0m​[0m13 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m166 passed[0m[0m​[0m, [0m[0m​[0mof 166[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 22[22m[32m OK [0m[1m[38;2;170;170;170m41s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/task-queue.ts[0m[37m [0m[1m[38;2;170;170;170m49ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m13 passed[0m[0m​[0m, [0m[0m​[0m13 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m166 passed[0m[0m​[0m, [0m[0m​[0mof 166[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 22[22m[32m OK [0m[1m[38;2;170;170;170m42s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/task-queue.ts[0m[37m [0m[1m[38;2;170;170;170m249ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m13 passed[0m[0m​[0m, [0m[0m​[0m13 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m166 passed[0m[0m​[0m, [0m[0m​[0mof 166[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 22[22m[32m OK [0m[1m[38;2;170;170;170m42s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/task-queue.ts[0m[37m [0m[1m[38;2;170;170;170m449ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m13 passed[0m[0m​[0m, [0m[0m​[0m13 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m166 passed[0m[0m​[0m, [0m[0m​[0mof 166[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 22[22m[32m OK [0m[1m[38;2;170;170;170m42s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/task-queue.ts[0m[37m [0m[1m[38;2;170;170;170m650ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m13 passed[0m[0m​[0m, [0m[0m​[0m13 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m166 passed[0m[0m​[0m, [0m[0m​[0mof 166[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 22[22m[32m OK [0m[1m[38;2;170;170;170m42s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/task-queue.ts[0m[37m [0m[1m[38;2;170;170;170m855ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m13 passed[0m[0m​[0m, [0m[0m​[0m13 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m166 passed[0m[0m​[0m, [0m[0m​[0mof 166[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 22[22m[32m OK [0m[1m[38;2;170;170;170m42s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/task-queue.ts[0m[37m [0m[1m[38;2;170;170;170m1s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m13 passed[0m[0m​[0m, [0m[0m​[0m13 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m166 passed[0m[0m​[0m, [0m[0m​[0mof 166[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 22[22m[32m OK [0m[1m[38;2;170;170;170m43s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/task-queue.ts[0m[37m [0m[1m[38;2;170;170;170m1s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m13 passed[0m[0m​[0m, [0m[0m​[0m13 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m166 passed[0m[0m​[0m, [0m[0m​[0mof 166[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 22[22m[32m OK [0m[1m[38;2;170;170;170m43s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/task-queue.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m13 passed[0m[0m​[0m, [0m[0m​[0m13 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m166 passed[0m[0m​[0m, [0m[0m​[0mof 166[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 22[22m[32m OK [0m[1m[38;2;170;170;170m44s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/task-queue.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m13 passed[0m[0m​[0m, [0m[0m​[0m13 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m166 passed[0m[0m​[0m, [0m[0m​[0mof 166[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 22[22m[32m OK [0m[1m[38;2;170;170;170m44s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/task-queue.ts[0m[37m [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m13 passed[0m[0m​[0m, [0m[0m​[0m13 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m166 passed[0m[0m​[0m, [0m[0m​[0mof 166[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 22[22m[32m OK [0m[1m[38;2;170;170;170m44s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/task-queue.ts[0m[37m[1m 9[22m[32m OK [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m13 passed[0m[0m​[0m, [0m[0m​[0m13 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m175 passed[0m[0m​[0m, [0m[0m​[0mof 175[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m1m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 22[22m[32m OK [0m[1m[38;2;170;170;170m45s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/task-queue.ts[0m[37m[1m 9[22m[32m OK [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m13 passed[0m[0m​[0m, [0m[0m​[0m13 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m175 passed[0m[0m​[0m, [0m[0m​[0mof 175[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/post-task.ts[0m[37m[1m 22[22m[32m OK [0m[1m[38;2;170;170;170m45s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/task-queue.ts[0m[37m[1m 9[22m[32m OK [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m13 passed[0m[0m​[0m, [0m[0m​[0m13 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m175 passed[0m[0m​[0m, [0m[0m​[0mof 175[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[38;2;0;0;0m[42m PASS [0m[0m​[0m test/post-task.ts[0m[37m[1m 22[22m[32m OK [0m[1m[38;2;170;170;170m41s[39m[22m[0m[0m[42m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[38;2;0;0;0m[42m[0m[0m[0m[0m[0m[1m[38;2;0;0;0m[42m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/task-queue.ts[0m[37m[1m 9[22m[32m OK [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m14 passed[0m[0m​[0m, [0m[0m​[0m14 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m175 passed[0m[0m​[0m, [0m[0m​[0mof 175[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/task-queue.ts[0m[37m[1m 9[22m[32m OK [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-resourcelimits.ts[0m[37m [0m[1m[38;2;170;170;170m1ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m14 passed[0m[0m​[0m, [0m[0m​[0m14 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m175 passed[0m[0m​[0m, [0m[0m​[0mof 175[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/task-queue.ts[0m[37m[1m 9[22m[32m OK [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-resourcelimits.ts[0m[37m [0m[1m[38;2;170;170;170m151ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m14 passed[0m[0m​[0m, [0m[0m​[0m14 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m175 passed[0m[0m​[0m, [0m[0m​[0mof 175[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/task-queue.ts[0m[37m[1m 9[22m[32m OK [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-resourcelimits.ts[0m[37m [0m[1m[38;2;170;170;170m351ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m14 passed[0m[0m​[0m, [0m[0m​[0m14 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m175 passed[0m[0m​[0m, [0m[0m​[0mof 175[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/task-queue.ts[0m[37m[1m 9[22m[32m OK [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-resourcelimits.ts[0m[37m [0m[1m[38;2;170;170;170m552ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m14 passed[0m[0m​[0m, [0m[0m​[0m14 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m175 passed[0m[0m​[0m, [0m[0m​[0mof 175[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/task-queue.ts[0m[37m[1m 9[22m[32m OK [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-resourcelimits.ts[0m[37m [0m[1m[38;2;170;170;170m753ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m14 passed[0m[0m​[0m, [0m[0m​[0m14 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m175 passed[0m[0m​[0m, [0m[0m​[0mof 175[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/task-queue.ts[0m[37m[1m 9[22m[32m OK [0m[1m[38;2;170;170;170m5s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-resourcelimits.ts[0m[37m [0m[1m[38;2;170;170;170m953ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m14 passed[0m[0m​[0m, [0m[0m​[0m14 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m175 passed[0m[0m​[0m, [0m[0m​[0mof 175[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/task-queue.ts[0m[37m[1m 9[22m[32m OK [0m[1m[38;2;170;170;170m5s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-resourcelimits.ts[0m[37m [0m[1m[38;2;170;170;170m1s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m14 passed[0m[0m​[0m, [0m[0m​[0m14 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m175 passed[0m[0m​[0m, [0m[0m​[0mof 175[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/task-queue.ts[0m[37m[1m 9[22m[32m OK [0m[1m[38;2;170;170;170m5s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-resourcelimits.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m14 passed[0m[0m​[0m, [0m[0m​[0m14 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m175 passed[0m[0m​[0m, [0m[0m​[0mof 175[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/task-queue.ts[0m[37m[1m 23[22m[32m OK [0m[1m[38;2;170;170;170m6s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-resourcelimits.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m14 passed[0m[0m​[0m, [0m[0m​[0m14 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m189 passed[0m[0m​[0m, [0m[0m​[0mof 189[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/task-queue.ts[0m[37m[1m 28[22m[32m OK [0m[1m[38;2;170;170;170m6s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-resourcelimits.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m14 passed[0m[0m​[0m, [0m[0m​[0m14 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m194 passed[0m[0m​[0m, [0m[0m​[0mof 194[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/task-queue.ts[0m[37m[1m 46[22m[32m OK [0m[1m[38;2;170;170;170m6s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-resourcelimits.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m14 passed[0m[0m​[0m, [0m[0m​[0m14 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m212 passed[0m[0m​[0m, [0m[0m​[0mof 212[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/task-queue.ts[0m[37m[1m 46[22m[32m OK [0m[1m[38;2;170;170;170m6s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-resourcelimits.ts[0m[37m [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m14 passed[0m[0m​[0m, [0m[0m​[0m14 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m212 passed[0m[0m​[0m, [0m[0m​[0mof 212[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/task-queue.ts[0m[37m[1m 46[22m[32m OK [0m[1m[38;2;170;170;170m7s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-resourcelimits.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m14 passed[0m[0m​[0m, [0m[0m​[0m14 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m214 passed[0m[0m​[0m, [0m[0m​[0mof 214[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/task-queue.ts[0m[37m[1m 46[22m[32m OK [0m[1m[38;2;170;170;170m7s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-resourcelimits.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m14 passed[0m[0m​[0m, [0m[0m​[0m14 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m214 passed[0m[0m​[0m, [0m[0m​[0mof 214[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/task-queue.ts[0m[37m[1m 46[22m[32m OK [0m[1m[38;2;170;170;170m7s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-resourcelimits.ts[0m[37m[1m 4[22m[32m OK [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m14 passed[0m[0m​[0m, [0m[0m​[0m14 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m216 passed[0m[0m​[0m, [0m[0m​[0mof 216[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/task-queue.ts[0m[37m[1m 46[22m[32m OK [0m[1m[38;2;170;170;170m8s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-resourcelimits.ts[0m[37m[1m 4[22m[32m OK [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m14 passed[0m[0m​[0m, [0m[0m​[0m14 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m216 passed[0m[0m​[0m, [0m[0m​[0mof 216[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/task-queue.ts[0m[37m[1m 57[22m[32m OK [0m[1m[38;2;170;170;170m8s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-resourcelimits.ts[0m[37m[1m 4[22m[32m OK [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m14 passed[0m[0m​[0m, [0m[0m​[0m14 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m227 passed[0m[0m​[0m, [0m[0m​[0mof 227[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[38;2;0;0;0m[42m PASS [0m[0m​[0m test/test-resourcelimits.ts[0m[37m[1m 4[22m[32m OK [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[42m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[38;2;0;0;0m[42m[0m[0m[0m[0m[0m[1m[38;2;0;0;0m[42m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/task-queue.ts[0m[37m[1m 57[22m[32m OK [0m[1m[38;2;170;170;170m8s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m15 passed[0m[0m​[0m, [0m[0m​[0m15 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m227 passed[0m[0m​[0m, [0m[0m​[0mof 227[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/task-queue.ts[0m[37m[1m 57[22m[32m OK [0m[1m[38;2;170;170;170m8s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-is-buffer-transferred.ts[0m[37m [0m[1m[38;2;170;170;170m0ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m15 passed[0m[0m​[0m, [0m[0m​[0m15 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m227 passed[0m[0m​[0m, [0m[0m​[0mof 227[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/task-queue.ts[0m[37m[1m 57[22m[32m OK [0m[1m[38;2;170;170;170m8s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-is-buffer-transferred.ts[0m[37m [0m[1m[38;2;170;170;170m141ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m15 passed[0m[0m​[0m, [0m[0m​[0m15 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m227 passed[0m[0m​[0m, [0m[0m​[0mof 227[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/task-queue.ts[0m[37m[1m 57[22m[32m OK [0m[1m[38;2;170;170;170m8s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-is-buffer-transferred.ts[0m[37m [0m[1m[38;2;170;170;170m340ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m15 passed[0m[0m​[0m, [0m[0m​[0m15 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m227 passed[0m[0m​[0m, [0m[0m​[0mof 227[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/task-queue.ts[0m[37m[1m 57[22m[32m OK [0m[1m[38;2;170;170;170m9s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-is-buffer-transferred.ts[0m[37m [0m[1m[38;2;170;170;170m540ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m15 passed[0m[0m​[0m, [0m[0m​[0m15 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m227 passed[0m[0m​[0m, [0m[0m​[0mof 227[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/task-queue.ts[0m[37m[1m 57[22m[32m OK [0m[1m[38;2;170;170;170m9s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-is-buffer-transferred.ts[0m[37m [0m[1m[38;2;170;170;170m740ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m15 passed[0m[0m​[0m, [0m[0m​[0m15 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m227 passed[0m[0m​[0m, [0m[0m​[0mof 227[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/task-queue.ts[0m[37m[1m 57[22m[32m OK [0m[1m[38;2;170;170;170m9s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-is-buffer-transferred.ts[0m[37m [0m[1m[38;2;170;170;170m941ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m15 passed[0m[0m​[0m, [0m[0m​[0m15 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m227 passed[0m[0m​[0m, [0m[0m​[0mof 227[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/task-queue.ts[0m[37m[1m 57[22m[32m OK [0m[1m[38;2;170;170;170m9s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-is-buffer-transferred.ts[0m[37m [0m[1m[38;2;170;170;170m1s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m15 passed[0m[0m​[0m, [0m[0m​[0m15 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m227 passed[0m[0m​[0m, [0m[0m​[0mof 227[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/task-queue.ts[0m[37m[1m 57[22m[32m OK [0m[1m[38;2;170;170;170m10s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-is-buffer-transferred.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m15 passed[0m[0m​[0m, [0m[0m​[0m15 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m227 passed[0m[0m​[0m, [0m[0m​[0mof 227[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/task-queue.ts[0m[37m[1m 65[22m[32m OK [0m[1m[38;2;170;170;170m10s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-is-buffer-transferred.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m15 passed[0m[0m​[0m, [0m[0m​[0m15 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m235 passed[0m[0m​[0m, [0m[0m​[0mof 235[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/task-queue.ts[0m[37m[1m 72[22m[32m OK [0m[1m[38;2;170;170;170m10s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-is-buffer-transferred.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m15 passed[0m[0m​[0m, [0m[0m​[0m15 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m242 passed[0m[0m​[0m, [0m[0m​[0mof 242[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[38;2;0;0;0m[42m PASS [0m[0m​[0m test/task-queue.ts[0m[37m[1m 72[22m[32m OK [0m[1m[38;2;170;170;170m7s[39m[22m[0m[0m[42m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[38;2;0;0;0m[42m[0m[0m[0m[0m[0m[1m[38;2;0;0;0m[42m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-is-buffer-transferred.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m16 passed[0m[0m​[0m, [0m[0m​[0m16 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m242 passed[0m[0m​[0m, [0m[0m​[0mof 242[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-is-buffer-transferred.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-uncaught-exception-from-handler.ts[0m[37m [0m[1m[38;2;170;170;170m1ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m16 passed[0m[0m​[0m, [0m[0m​[0m16 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m242 passed[0m[0m​[0m, [0m[0m​[0mof 242[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-is-buffer-transferred.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-uncaught-exception-from-handler.ts[0m[37m [0m[1m[38;2;170;170;170m15ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m16 passed[0m[0m​[0m, [0m[0m​[0m16 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m242 passed[0m[0m​[0m, [0m[0m​[0mof 242[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-is-buffer-transferred.ts[0m[37m [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-uncaught-exception-from-handler.ts[0m[37m [0m[1m[38;2;170;170;170m216ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m16 passed[0m[0m​[0m, [0m[0m​[0m16 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m242 passed[0m[0m​[0m, [0m[0m​[0mof 242[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-is-buffer-transferred.ts[0m[37m [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-uncaught-exception-from-handler.ts[0m[37m [0m[1m[38;2;170;170;170m415ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m16 passed[0m[0m​[0m, [0m[0m​[0m16 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m242 passed[0m[0m​[0m, [0m[0m​[0mof 242[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-is-buffer-transferred.ts[0m[37m [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-uncaught-exception-from-handler.ts[0m[37m [0m[1m[38;2;170;170;170m616ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m16 passed[0m[0m​[0m, [0m[0m​[0m16 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m242 passed[0m[0m​[0m, [0m[0m​[0mof 242[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-is-buffer-transferred.ts[0m[37m [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-uncaught-exception-from-handler.ts[0m[37m [0m[1m[38;2;170;170;170m815ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m16 passed[0m[0m​[0m, [0m[0m​[0m16 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m242 passed[0m[0m​[0m, [0m[0m​[0mof 242[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-is-buffer-transferred.ts[0m[37m [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-uncaught-exception-from-handler.ts[0m[37m [0m[1m[38;2;170;170;170m1s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m16 passed[0m[0m​[0m, [0m[0m​[0m16 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m242 passed[0m[0m​[0m, [0m[0m​[0mof 242[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-is-buffer-transferred.ts[0m[37m [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-uncaught-exception-from-handler.ts[0m[37m [0m[1m[38;2;170;170;170m1s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m16 passed[0m[0m​[0m, [0m[0m​[0m16 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m242 passed[0m[0m​[0m, [0m[0m​[0mof 242[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-is-buffer-transferred.ts[0m[37m [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-uncaught-exception-from-handler.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m16 passed[0m[0m​[0m, [0m[0m​[0m16 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m242 passed[0m[0m​[0m, [0m[0m​[0mof 242[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-is-buffer-transferred.ts[0m[37m [0m[1m[38;2;170;170;170m5s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-uncaught-exception-from-handler.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m16 passed[0m[0m​[0m, [0m[0m​[0m16 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m242 passed[0m[0m​[0m, [0m[0m​[0mof 242[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-is-buffer-transferred.ts[0m[37m[1m 1[22m[32m OK [0m[1m[38;2;170;170;170m5s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-uncaught-exception-from-handler.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m16 passed[0m[0m​[0m, [0m[0m​[0m16 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m243 passed[0m[0m​[0m, [0m[0m​[0mof 243[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-is-buffer-transferred.ts[0m[37m[1m 1[22m[32m OK [0m[1m[38;2;170;170;170m5s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-uncaught-exception-from-handler.ts[0m[37m [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m16 passed[0m[0m​[0m, [0m[0m​[0m16 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m243 passed[0m[0m​[0m, [0m[0m​[0mof 243[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-is-buffer-transferred.ts[0m[37m[1m 1[22m[32m OK [0m[1m[38;2;170;170;170m6s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-uncaught-exception-from-handler.ts[0m[37m [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m16 passed[0m[0m​[0m, [0m[0m​[0m16 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m243 passed[0m[0m​[0m, [0m[0m​[0mof 243[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-is-buffer-transferred.ts[0m[37m[1m 1[22m[32m OK [0m[1m[38;2;170;170;170m6s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-uncaught-exception-from-handler.ts[0m[37m[1m 1[22m[32m OK [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m16 passed[0m[0m​[0m, [0m[0m​[0m16 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m244 passed[0m[0m​[0m, [0m[0m​[0mof 244[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-is-buffer-transferred.ts[0m[37m[1m 1[22m[32m OK [0m[1m[38;2;170;170;170m6s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-uncaught-exception-from-handler.ts[0m[37m[1m 1[22m[32m OK [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m16 passed[0m[0m​[0m, [0m[0m​[0m16 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m244 passed[0m[0m​[0m, [0m[0m​[0mof 244[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-is-buffer-transferred.ts[0m[37m[1m 1[22m[32m OK [0m[1m[38;2;170;170;170m6s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-uncaught-exception-from-handler.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m16 passed[0m[0m​[0m, [0m[0m​[0m16 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m245 passed[0m[0m​[0m, [0m[0m​[0mof 245[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-is-buffer-transferred.ts[0m[37m[1m 1[22m[32m OK [0m[1m[38;2;170;170;170m7s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-uncaught-exception-from-handler.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m16 passed[0m[0m​[0m, [0m[0m​[0m16 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m245 passed[0m[0m​[0m, [0m[0m​[0mof 245[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-is-buffer-transferred.ts[0m[37m[1m 1[22m[32m OK [0m[1m[38;2;170;170;170m7s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-uncaught-exception-from-handler.ts[0m[37m[1m 3[22m[32m OK [0m[1m[38;2;170;170;170m5s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m16 passed[0m[0m​[0m, [0m[0m​[0m16 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m246 passed[0m[0m​[0m, [0m[0m​[0mof 246[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-is-buffer-transferred.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m8s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-uncaught-exception-from-handler.ts[0m[37m[1m 5[22m[32m OK [0m[1m[38;2;170;170;170m5s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m16 passed[0m[0m​[0m, [0m[0m​[0m16 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m249 passed[0m[0m​[0m, [0m[0m​[0mof 249[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[38;2;0;0;0m[42m PASS [0m[0m​[0m test/test-is-buffer-transferred.ts[0m[37m[1m 2[22m[32m OK [0m[1m[38;2;170;170;170m5s[39m[22m[0m[0m[42m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[38;2;0;0;0m[42m[0m[0m[0m[0m[0m[1m[38;2;0;0;0m[42m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-uncaught-exception-from-handler.ts[0m[37m[1m 5[22m[32m OK [0m[1m[38;2;170;170;170m5s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m17 passed[0m[0m​[0m, [0m[0m​[0m17 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m249 passed[0m[0m​[0m, [0m[0m​[0mof 249[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-uncaught-exception-from-handler.ts[0m[37m[1m 5[22m[32m OK [0m[1m[38;2;170;170;170m5s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/thread-count.ts[0m[37m [0m[1m[38;2;170;170;170m1ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m17 passed[0m[0m​[0m, [0m[0m​[0m17 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m249 passed[0m[0m​[0m, [0m[0m​[0mof 249[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-uncaught-exception-from-handler.ts[0m[37m[1m 5[22m[32m OK [0m[1m[38;2;170;170;170m5s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/thread-count.ts[0m[37m [0m[1m[38;2;170;170;170m165ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m17 passed[0m[0m​[0m, [0m[0m​[0m17 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m249 passed[0m[0m​[0m, [0m[0m​[0mof 249[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/test-uncaught-exception-from-handler.ts[0m[37m[1m 5[22m[32m OK [0m[1m[38;2;170;170;170m6s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/thread-count.ts[0m[37m [0m[1m[38;2;170;170;170m365ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m17 passed[0m[0m​[0m, [0m[0m​[0m17 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m249 passed[0m[0m​[0m, [0m[0m​[0mof 249[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[38;2;0;0;0m[42m PASS [0m[0m​[0m test/test-uncaught-exception-from-handler.ts[0m[37m[1m 5[22m[32m OK [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[42m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[38;2;0;0;0m[42m[0m[0m[0m[0m[0m[1m[38;2;0;0;0m[42m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/thread-count.ts[0m[37m [0m[1m[38;2;170;170;170m501ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m18 passed[0m[0m​[0m, [0m[0m​[0m18 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m249 passed[0m[0m​[0m, [0m[0m​[0mof 249[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/thread-count.ts[0m[37m [0m[1m[38;2;170;170;170m565ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m18 passed[0m[0m​[0m, [0m[0m​[0m18 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m249 passed[0m[0m​[0m, [0m[0m​[0mof 249[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/thread-count.ts[0m[37m [0m[1m[38;2;170;170;170m765ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m18 passed[0m[0m​[0m, [0m[0m​[0m18 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m249 passed[0m[0m​[0m, [0m[0m​[0mof 249[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/thread-count.ts[0m[37m [0m[1m[38;2;170;170;170m965ms[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m18 passed[0m[0m​[0m, [0m[0m​[0m18 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m249 passed[0m[0m​[0m, [0m[0m​[0mof 249[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/thread-count.ts[0m[37m [0m[1m[38;2;170;170;170m1s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m18 passed[0m[0m​[0m, [0m[0m​[0m18 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m249 passed[0m[0m​[0m, [0m[0m​[0mof 249[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/thread-count.ts[0m[37m [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[1m[43m[0m[0m[0m[0m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m18 passed[0m[0m​[0m, [0m[0m​[0m18 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m249 passed[0m[0m​[0m, [0m[0m​[0mof 249[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/thread-count.ts[0m[37m[1m 17[22m[32m OK [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m18 passed[0m[0m​[0m, [0m[0m​[0m18 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m266 passed[0m[0m​[0m, [0m[0m​[0mof 266[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/thread-count.ts[0m[37m[1m 18[22m[32m OK [0m[1m[38;2;170;170;170m2s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m18 passed[0m[0m​[0m, [0m[0m​[0m18 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m267 passed[0m[0m​[0m, [0m[0m​[0mof 267[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/thread-count.ts[0m[37m[1m 18[22m[32m OK [0m[1m[38;2;170;170;170m3s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m18 passed[0m[0m​[0m, [0m[0m​[0m18 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m267 passed[0m[0m​[0m, [0m[0m​[0mof 267[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/thread-count.ts[0m[37m[1m 18[22m[32m OK [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m18 passed[0m[0m​[0m, [0m[0m​[0m18 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m267 passed[0m[0m​[0m, [0m[0m​[0mof 267[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/thread-count.ts[0m[37m[1m 18[22m[32m OK [0m[1m[38;2;170;170;170m5s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m18 passed[0m[0m​[0m, [0m[0m​[0m18 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m267 passed[0m[0m​[0m, [0m[0m​[0mof 267[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[43m[38;2;0;0;0m RUNS [0m[0m​[0m test/thread-count.ts[0m[37m[1m 18[22m[32m OK [0m[1m[38;2;170;170;170m6s[39m[22m[0m[0m[43m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[1m[43m[38;2;0;0;0m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m18 passed[0m[0m​[0m, [0m[0m​[0m18 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m267 passed[0m[0m​[0m, [0m[0m​[0mof 267[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m[1m[38;2;0;0;0m[42m PASS [0m[0m​[0m test/thread-count.ts[0m[37m[1m 18[22m[32m OK [0m[1m[38;2;170;170;170m4s[39m[22m[0m[0m[42m[0m[0m[0m[0m[1m[32m[37m[0m[0m[1m[38;2;0;0;0m[42m[0m[0m[0m[0m[0m[1m[38;2;0;0;0m[42m[0m[0m[0m[0m[0m[0m[0m
[1mSuites:[22m   [0m​[0m[32m19 passed[0m[0m​[0m, [0m[0m​[0m19 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m267 passed[0m[0m​[0m, [0m[0m​[0mof 267[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
[2K[1A[2K[1A[2K[1A[2K[G[0m​[0m

[48;2;255;255;255m                         [49m
[48;2;255;255;255m[38;2;51;51;51m[1m  🌈 SUMMARY RESULTS 🌈  [22m[39m[49m
[48;2;255;255;255m                         [49m
[0m​[0m
[1mSuites:[22m   [0m​[0m[32m19 passed[0m[0m​[0m, [0m[0m​[0m19 of 19 completed[0m[0m​[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m
[1mAsserts:[22m  [0m​[0m[0m​[0m[0m​[0m[32m267 passed[0m[0m​[0m, [0m[0m​[0mof 267[0m[0m​[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[32m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m[0m
[0m​[0m[2m[1mTime:[0m[0m​[0m[0m[0m[2m[0m[0m   [0m[0m​[0m[2m[1m2m[0m[0m​[0m[0m[0m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[2m[1m[2m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m[0m[0m[0m[0m[0m[2m[1m[0m[0m[0m[0m[0m[2m[0m[0m
-----------|---------|----------|---------|---------|-----------------------------------------------
File       | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                             
-----------|---------|----------|---------|---------|-----------------------------------------------
All files  |   95.86 |    94.59 |   94.49 |   96.56 |                                               
 common.ts |     100 |      100 |     100 |     100 |                                               
 index.ts  |     100 |      100 |     100 |     100 |                                               
 worker.ts |   73.07 |       50 |   53.84 |   76.38 | ...55,59,65-66,85,146,150-151,164,167-170,190 
-----------|---------|----------|---------|---------|-----------------------------------------------
I am package postcss-color-gray .....

> postcss-color-gray@5.0.0 test
> echo 'Running tests...'; npm run test:js && npm run test:tape

Running tests...

> postcss-color-gray@5.0.0 test:js
> eslint *.js --cache --ignore-path .gitignore --quiet


> postcss-color-gray@5.0.0 test:tape
> postcss-tape

[2K[1G[33m⠋[0m postcss-color-gray [2msupports basic usage[0m[2K[1G[32m✔[0m postcss-color-gray [2msupports basic usage[0m
[2K[1G[33m⠋[0m postcss-color-gray [2msupports { preserve: true } usage[0m[2K[1G[32m✔[0m postcss-color-gray [2msupports { preserve: true } usage[0m
I am package pretty .....

> pretty@2.0.0 test
> mocha



  pretty
    ✓ should format HTML.
    ✓ should add a newline before comments
    ✓ should move "closing" comments after closing tags


  3 passing (23ms)

I am package purest .....

> purest@4.0.3 test
> npm run test:ci


> purest@4.0.3 test:ci
> npx mocha --recursive

I am package qs .....

> qs@6.11.0 pretest
> npm run --silent readme && npm run --silent lint

I am package raml-js-parser .....

> raml-parser@0.8.18 test
> grunt test

I am package razorpay-node .....

> razorpay@2.8.4 test
> npm run build && mocha --recursive --require babel-register test/


> razorpay@2.8.4 build
> npm run clean && npm run build:commonjs && npm run cp-ts


> razorpay@2.8.4 clean
> rm -rf dist && mkdir dist


> razorpay@2.8.4 build:commonjs
> babel lib -d dist

lib/api.js -> dist/api.js
lib/razorpay.js -> dist/razorpay.js
lib/resources/addons.js -> dist/resources/addons.js
lib/resources/cards.js -> dist/resources/cards.js
lib/resources/customers.js -> dist/resources/customers.js
lib/resources/fundAccount.js -> dist/resources/fundAccount.js
lib/resources/invoices.js -> dist/resources/invoices.js
lib/resources/items.js -> dist/resources/items.js
lib/resources/orders.js -> dist/resources/orders.js
lib/resources/paymentLink.js -> dist/resources/paymentLink.js
lib/resources/payments.js -> dist/resources/payments.js
lib/resources/plans.js -> dist/resources/plans.js
lib/resources/qrCode.js -> dist/resources/qrCode.js
lib/resources/refunds.js -> dist/resources/refunds.js
lib/resources/settlements.js -> dist/resources/settlements.js
lib/resources/subscriptions.js -> dist/resources/subscriptions.js
lib/resources/transfers.js -> dist/resources/transfers.js
lib/resources/virtualAccounts.js -> dist/resources/virtualAccounts.js
lib/utils/nodeify.js -> dist/utils/nodeify.js
lib/utils/predefined-tests.js -> dist/utils/predefined-tests.js
lib/utils/razorpay-utils.js -> dist/utils/razorpay-utils.js

> razorpay@2.8.4 cp-ts
> cp lib/razorpay.d.ts dist/



  Razorpay is initialized properly
    ✔ Validation for key_id & key_secret
    ✔ instance should initialize

  Addons
    Fetch Addon
      ✔ method fetch checks for Addon ID as param
      ✔ Checks if the URL is formed correctly
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise
    Delete Addon
      ✔ method delete checks for Addon ID as param
      ✔ Checks if the URL is formed correctly
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise
    Fetch All Addons
      ✔ Check if all params passed are being sent
      ✔ Check if skip and count are automatically populated
      ✔ Check if dates are converted to ms
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise

  Cards
    Fetch Card Detail
      ✔ Checks if the URL is formed correctly
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise

  CUSTOMERS
    ✔ Create Customer
    ✔ Edit Customer
    ✔ Customer fetch
    ✔ Fetch all customer 
    ✔ Tokens fetch
    ✔ Token fetch
    ✔ Token delete

  FUND ACCOUNTS
    ✔ Create Fund
    ✔ Fetch all fund 

  INVOICES
    Create Invoice
      ✔ Checks if the URL is formed correctly
      ✔ Validates URL and Params
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise
    Edit Invoice
      ✔ method edit checks for Invoice ID as param
      ✔ Checks if the URL is formed correctly
      ✔ Validates URL and Params
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise
    Issue Invoice
      ✔ method issue checks for Invoice ID as param
      ✔ Checks if the URL is formed correctly
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise
    Delete Invoice
      ✔ method delete checks for Invoice ID as param
      ✔ Checks if the URL is formed correctly
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise
    Cancel Invoice
      ✔ method cancel checks for Invoice ID as param
      ✔ Checks if the URL is formed correctly
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise
    Fetch Invoice
      ✔ method fetch checks for Invoice ID as param
      ✔ Checks if the URL is formed correctly
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise
    Fetch Multiple
      ✔ Check if all params passed are being sent
      ✔ Check if skip and count are automatically populated
      ✔ Check if dates are converted to ms
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise
    Notify
      ✔ method notifyBy checks for Invoice ID as param
      ✔ notify method checks for `medium` parameter
      ✔ Checks if the URL is formed correctly
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise

  ITEMS
    Create Item
      ✔ Checks if the URL is formed correctly
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise
    Edit item
      ✔ Checks if the URL is formed correctly
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise
    Delete item
      ✔ Checks if the URL is formed correctly
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise
    Fetch item
      ✔ Checks if the URL is formed correctly
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise
    Fetch All items
      ✔ Check if all params passed are being sent
      ✔ Check if skip and count are automatically populated
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise

  ORDERS
    Fetch Orders
      ✔ Default params
      ✔ `From` & `To` date are converted to ms
    Order fetch
      ✔ Throw error when orderId is provided
      ✔ Forms the order fetch request
    Order create
      ✔ Order create request
    Fetch order's payments
      ✔ Throw error when orderId is not provided
      ✔ Fetch order's payments
    edit order
      ✔ edit order

  PAYMENTLINK
    Create PaymentLink
      ✔ Payment link create request
    Update PaymentLink
      ✔ Update Payment Link
    Cancel PaymentLink
      ✔ method cancel checks for PaymentLink ID as param
      ✔ Checks if the URL is formed correctly
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise
    Fetch PaymentLink
      ✔ method fetch checks for PaymentLink ID as param
      ✔ Checks if the URL is formed correctly
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise
    Fetch Multiple
      ✔ Check if all params passed are being sent
      ✔ Check if skip and count are automatically populated
      ✔ Check if dates are converted to ms
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise
    Notify By
      ✔ method notifyBy checks for PaymentLink ID as param
      ✔ notify method checks for `medium` parameter
      ✔ Checks if the URL is formed correctly
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise

  PAYMENTS
    ✔ Otp Submit
    ✔ Otp Generate
    ✔ Otp Resend
    Fetch Payments
      ✔ Default params
      ✔ `From` & `To` date are converted to ms
    Payment fetch
      ✔ Throw error when paymentId is not provided
      ✔ Forms the payment fetch request
    Fetch Transfer
      ✔ Throw error when paymentId is not provided
      ✔ Forms the payment fetch request
    edit payment
      ✔ edit payment
    Payment capture
      ✔ Throws error when paymentId or amount is not provided
      ✔ Payment capture request
    Payment Refund
      ✔ Throw error when paymentId is not provided
      ✔ payment refund request
    Payment Transfers
      ✔ Throw error when paymentId is not provided
      ✔ Payment Transfer request
    Payment Bank Transfers
      ✔ Reject the promise if payment id is not provided
      ✔ Checks if the URL is formed correctly
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise
    Fetch card details with paymentId
      ✔ Reject the promise if payment id is not provided
      ✔ Checks if the URL is formed correctly
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise
    Payment Downtime 
      ✔ Fetch Payment Downtime Details
    Fetch Payment Downtime
      ✔ Reject the promise if downtime id is not provided
      ✔ Checks if the URL is formed correctly
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise
    Fetch multiple refunds for a payment
      ✔ Check if all params passed are being sent
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise
    Fetch a Specific Refund for a Payment
      ✔ Fetch Refund
    Server to server json v2
      ✔ Create Payment Json
    Recurring Payment
      ✔ Create a Recurring Payment

  PLANS
    Create Plan
      ✔ Checks if the URL is formed correctly
      ✔ Validates URL and Params
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise
    Fetch Plan
      ✔ method fetch checks for Plan ID as param
      ✔ Checks if the URL is formed correctly
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise
    Fech All Plans
      ✔ Check if all parameters passed are being sent
      ✔ Check if skip and count are automatically populated
      ✔ Check if dates are converted to ms
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise

  QRCODE 
    Create QrCode
      ✔ Check if all params passed are being sent
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise
    Fetch QrCode
      ✔ method fetchAllPayments checks for Addon ID as param
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise
    Close QrCode
      ✔ method close checks for Addon ID as param
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise
    Fetch all QrCode
      ✔ Check if all params passed are being sent
      ✔ Check if dates are converted to ms
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise
    Fetch all QrCode
      ✔ Check if all params passed are being sent
      ✔ Check if dates are converted to ms
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise
    Fetch QR Code for a Customer ID
      ✔ Check if all params passed are being sent
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise
    Fetch QR Code for a Payment ID
      ✔ Check if all params passed are being sent
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise
    Fetch all payment for a QrCode
      ✔ Check if all params passed are being sent
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise

  REFUNDS
    Fetch Refunds
      ✔ Default params
      ✔ `From` & `To` date are converted to ms
      ✔ Form `/payments/id/refunds` url when paymentId is provided
    Refund fetch
      ✔ Throw error when refundId is provided
      ✔ Forms the refund fetch request
      ✔ Form `/payments/id/refunds/id` url when paymentId is provided
    edit refund
      ✔ edit refund

  SETTLEMENTS 
    Create on-demand settlement
      ✔ Check if all params passed are being sent
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise
    Fetch a settlement
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise
    Fetch On-demand Settlements by ID
      ✔ Check if all params passed are being sent
    Fetch all settlements
      ✔ Check if all params passed are being sent
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise
    Settlement report for a month
      ✔ Check if all params passed are being sent
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise
    Fetch all on-demand settlements
      ✔ Check if all params passed are being sent
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise

  SUBSCRIPTIONS
    Create Subscription
      ✔ Checks if the URL is formed correctly
      ✔ Validates URL and Params
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise
    Update Subscription
      ✔ method update checks for Subscription ID as param
      ✔ Check params is being sent or not
      ✔ Checks if the URL is formed correctly
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise
    Delete Offer
      ✔ method deleteOffer checks for Subscription ID as param
      ✔ Checks if the URL is formed correctly
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise
    Fetch Subscription
      ✔ method fetch checks for Subscription ID as param
      ✔ Checks if the URL is formed correctly
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise
    Fetch All Subscriptions
      ✔ Check if all params passed are being sent
      ✔ Check if skip and count are automatically populated
      ✔ Check if dates are converted to ms
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise
    Fetch Pending Updates
      ✔ method pendingUpdate checks for Subscription ID as param
      ✔ Checks if the URL is formed correctly
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise
    Cancel Update
      ✔ method cancelScheduledChanges checks for Subscription ID as param
      ✔ Checks if the URL is formed correctly
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise
    Pause Subscription
      ✔ method pause checks for Subscription ID as param
      ✔ Check if pause at is being sent or not
      ✔ Checks if the URL is formed correctly
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise
    Resume Subscription
      ✔ method resume checks for Subscription ID as param
      ✔ Check if resume at is being sent or not
      ✔ Checks if the URL is formed correctly
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise
    Cancel Subscription
      ✔ method cancel checks for Subscription ID as param
      ✔ Checks for type of arguments
      ✔ Check if cancel at end of cycle is being sent or not
      ✔ Checks if the URL is formed correctly
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise
    Create Addon
      ✔ method createAddon checks for Subscription ID as param
      ✔ Checks if the URL is formed correctly
    Create Registration Link
      ✔ Check if params is being sent or not
      ✔ Checks if the URL is formed correctly
      ✔ Validates URL and Params
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise

  TRANSFERS
    ✔ Create Direct Transfer
    ✔ Create Transfer from Payment
    ✔ Edit Transfer
    ✔ Create Transfer Reversal
    ✔ Transfer fetch
    Fetch transfers
      ✔ Default params
      ✔ `From` & `To` date are converted to ms

  VIRTUAL_ACCOUNTS
    ✔ Create Virtual Account
    Fetch Virtual Accounts
      ✔ Default params
      ✔ `From` & `To` are converted to ms
    Fetch Virtual Account
      ✔ Validation
      ✔ Url Check
    Virtual Accounts close
      ✔ Validation
      ✔ Url Match
    Virtual Accounts get Payments
      ✔ method fetchPayments checks for Virtual Account ID as param
      ✔ Checks if the URL is formed correctly
      ✔ Checks if the passed api callback gets called
      ✔ Checks for error flow
      ✔ Checks if the api call returns a Promise
    Add Receiver
      ✔ Add Receiver to an Existing Virtual Account
    Allowed Payer
      ✔ Add an Allowed Payer Account
      ✔ Delete an Allowed Payer Account

  Nodeify should invoke the callback
    ✔ Resolve
    ✔ Reject

  Razorpay Utils
    ✔ normalizeDate
    ✔ isNumber
    ✔ normalizeBoolean
    ✔ normalizeNotes
    ✔ isDefined
    ✔ getTestError
    ✔ validateWebhookSignature
    ✔ Subscription Verfication
    ✔ PaymentLink Verfication
    ✔ Payment Verfication


  341 passing (1s)

I am package regex-not .....

> regex-not@1.0.2 test
> mocha



  regex-not
    ✓ should export a function
    1) should create a negation regex
    2) should create a loose negation regex when `options.contains` is true
    3) should create a loose negation regex when `options.strictNegate` is false
    4) should support `options.endChar`
    5) should throw when a potentially unsafe regex is passed
    ✓ should throw an error when invalid args are passed


  2 passing (11ms)
  5 failing

  1) regex-not should create a negation regex:
     TypeError: extend is not a function
      at Function.toRegex.create (index.js:44:14)
      at toRegex (index.js:22:29)
      at Context.<anonymous> (test.js:13:14)
      at processImmediate (node:internal/timers:466:21)

  2) regex-not should create a loose negation regex when `options.contains` is true:
     TypeError: extend is not a function
      at Function.toRegex.create (index.js:44:14)
      at toRegex (index.js:22:29)
      at Context.<anonymous> (test.js:22:22)
      at processImmediate (node:internal/timers:466:21)

  3) regex-not should create a loose negation regex when `options.strictNegate` is false:
     TypeError: extend is not a function
      at Function.toRegex.create (index.js:44:14)
      at toRegex (index.js:22:29)
      at Context.<anonymous> (test.js:31:22)
      at processImmediate (node:internal/timers:466:21)

  4) regex-not should support `options.endChar`:
     TypeError: extend is not a function
      at Function.toRegex.create (index.js:44:14)
      at toRegex (index.js:22:29)
      at Context.<anonymous> (test.js:40:22)
      at processImmediate (node:internal/timers:466:21)

  5) regex-not should throw when a potentially unsafe regex is passed:
     AssertionError [ERR_ASSERTION]: The input did not match the regular expression /potentially unsafe/. Input:

'TypeError: extend is not a function'

      at Context.<anonymous> (test.js:49:12)
      at processImmediate (node:internal/timers:466:21)



I am package resolve-dir .....

> resolve-dir@1.0.1 test
> mocha

I am package right-align .....

> right-align@0.1.3 test
> mocha



  rightAlign
    ✔ should right align the strings in an array of strings:
    ✔ should right align the lines in a string:


  2 passing (6ms)

I am package router .....

> router@1.3.7 test
> mocha --reporter spec --bail --check-leaks test/



  HEAD
    1) should invoke get without head


  0 passing (9ms)
  1 failing

  1) HEAD
       should invoke get without head:
     TypeError: setPrototypeOf is not a function
      at new Router (index.js:68:3)
      at Router (index.js:58:12)
      at Context.<anonymous> (test/auto-head.js:10:18)
      at processImmediate (node:internal/timers:466:21)



I am package rpc-websockets .....

> rpc-websockets@7.5.0 pretest
> npm run-script build


> rpc-websockets@7.5.0 build
> tsc && mkdir -p ./dist && eslint --fix -c ./.eslintrc './src/**/*.ts' && babel ./build-ts -d ./dist --copy-files && browserify -s RPCWebSocket ./dist/index.browser.js > ./dist/index.browser-bundle.js

Successfully compiled 8 files with Babel (1802ms).

> rpc-websockets@7.5.0 test
> mocha --exit test/*spec.js

I am package send .....

> send@0.18.0 test
> mocha --check-leaks --reporter spec --bail

I am package serve-index .....

> serve-index@1.9.1 test
> mocha --reporter spec --bail --check-leaks test/

I am package session .....

> express-session@1.17.3 test
> mocha --require test/support/env --check-leaks --bail --no-exit --reporter spec test/



  new Cookie()
    ✔ should create a new cookie object
    ✔ should default expires to null
    ✔ should default httpOnly to true
    ✔ should default path to "/"
    ✔ should default maxAge to null
    with options
      ✔ should create a new cookie object
      ✔ should reject non-objects
      ✔ should ignore "data" option
      expires
        ✔ should set expires
        ✔ should set maxAge
      httpOnly
        ✔ should set httpOnly
      maxAge
        ✔ should set expires
        ✔ should set maxAge
        ✔ should accept Date object
        ✔ should reject invalid types
      path
        ✔ should set path

  session()
    ✔ should export constructors
    ✔ should do nothing if req.session exists
    ✔ should error without secret
    ✔ should get secret from req.secret
    ✔ should create a new session
    ✔ should load session from cookie sid
    ✔ should pass session fetch error
    ✔ should treat ENOENT session fetch error as not found
    ✔ should create multiple sessions
    ✔ should handle empty req.url
    ✔ should handle multiple res.end calls
    ✔ should handle res.end(null) calls
    ✔ should handle reserved properties in storage
    ✔ should only have session data enumerable (and cookie)
    ✔ should not save with bogus req.sessionID
    ✔ should update cookie expiration when slow write (1401ms)
    when response ended
      ✔ should have saved session (203ms)
      ✔ should have saved session even with empty response (203ms)
      ✔ should have saved session even with multi-write (203ms)
      ✔ should have saved session even with non-chunked response (203ms)
      ✔ should have saved session with updated cookie expiration (984ms)
    when sid not in store
      ✔ should create a new session
      ✔ should have a new sid
    when sid not properly signed
      ✔ should generate new session
      ✔ should not attempt fetch from store
    when session expired in store
      ✔ should create a new session
      ✔ should have a new sid
      ✔ should not exist in store
    when session without cookie property in store
      ✔ should pass error from inflate
    proxy option
      when enabled
        ✔ should trust X-Forwarded-Proto when string
        ✔ should trust X-Forwarded-Proto when comma-separated list
        ✔ should work when no header
      when disabled
        ✔ should not trust X-Forwarded-Proto
        ✔ should ignore req.secure
      when unspecified
        ✔ should not trust X-Forwarded-Proto
        ✔ should use req.secure
    cookie option
      when "path" set to "/foo/bar"
        ✔ should not set cookie for "/" request
        ✔ should not set cookie for "http://foo/bar" request
        ✔ should set cookie for "/foo/bar" request
        ✔ should set cookie for "/foo/bar/baz" request
        when mounted at "/foo"
          ✔ should set cookie for "/foo/bar" request
          ✔ should not set cookie for "/foo/foo/bar" request
      when "secure" set to "auto"
        when "proxy" is "true"
          ✔ should set secure when X-Forwarded-Proto is https
        when "proxy" is "false"
          ✔ should not set secure when X-Forwarded-Proto is https
        when "proxy" is undefined
          ✔ should set secure if req.secure = true
          ✔ should not set secure if req.secure = false
    genid option
      ✔ should reject non-function values
      ✔ should provide default generator
      ✔ should allow custom function
      ✔ should encode unsafe chars
      ✔ should provide req argument
    key option
      ✔ should default to "connect.sid"
      ✔ should allow overriding
    name option
      ✔ should default to "connect.sid"
      ✔ should set the cookie name
    rolling option
      ✔ should default to false
      ✔ should force cookie on unmodified session
      ✔ should not force cookie on uninitialized session if saveUninitialized option is set to false
      ✔ should force cookie and save uninitialized session if saveUninitialized option is set to true
      ✔ should force cookie and save modified session even if saveUninitialized option is set to false
    resave option
      ✔ should default to true
      when true
        ✔ should force save on unmodified session
      when false
        ✔ should prevent save on unmodified session
        ✔ should still save modified session
        ✔ should detect a "cookie" property as modified
        ✔ should pass session touch error
    saveUninitialized option
      ✔ should default to true
      ✔ should force save of uninitialized session
      ✔ should prevent save of uninitialized session
      ✔ should still save modified session
      ✔ should pass session save error
      ✔ should prevent uninitialized session from being touched
    secret option
      ✔ should reject empty arrays
      when an array
        ✔ should sign cookies
        ✔ should sign cookies with first element
        ✔ should read cookies using all elements
    unset option
      ✔ should reject unknown values
      ✔ should default to keep
      ✔ should allow destroy on req.session = null
      ✔ should not set cookie if initial session destroyed
      ✔ should pass session destroy error
    res.end patch
      ✔ should correctly handle res.end/res.write patched prior
      ✔ should correctly handle res.end/res.write patched after
      ✔ should error when res.end is called twice
    req.session
      ✔ should persist
      ✔ should only set-cookie when modified
      ✔ should not have enumerable methods
      ✔ should not be set if store is disconnected
      ✔ should be set when store reconnects
      .destroy()
        ✔ should destroy the previous session
      .regenerate()
        ✔ should destroy/replace the previous session
      .reload()
        ✔ should reload session from store
        ✔ should error is session missing
        ✔ should not override an overriden `reload` in case of errors
      .save()
        ✔ should save session to store
        ✔ should prevent end-of-request save
        ✔ should prevent end-of-request save on reloaded session
        when saveUninitialized is false
          ✔ should prevent end-of-request save
      .touch()
        ✔ should reset session expiration (104ms)
      .cookie
        .*
          ✔ should serialize as parameters
          ✔ should default to a browser-session length cookie
          ✔ should Set-Cookie only once for browser-session cookies
          ✔ should override defaults
          ✔ should preserve cookies set before writeHead is called
          ✔ should preserve cookies set in writeHead
        .originalMaxAge
          ✔ should equal original maxAge
          ✔ should equal original maxAge for all requests (104ms)
          ✔ should equal original maxAge for all requests (104ms)
        .secure
          ✔ should set cookie when secure
          ✔ should not set-cookie when insecure
        .maxAge
          ✔ should set cookie expires relative to maxAge
          ✔ should modify cookie expires when changed
          ✔ should modify cookie expires when changed to large value
        .expires
          when given a Date
            ✔ should set absolute
          when null
            ✔ should be a browser-session cookie
            ✔ should not reset cookie
            ✔ should not reset cookie when modified
    synchronous store
      ✔ should respond correctly on save
      ✔ should respond correctly on destroy
    cookieParser()
      ✔ should read from req.cookies
      ✔ should reject unsigned from req.cookies
      ✔ should reject invalid signature from req.cookies
      ✔ should read from req.signedCookies


  139 passing (4s)

I am package sharp .....

> sharp@0.31.3 test
> npm run test-lint && npm run test-unit && npm run test-licensing


> sharp@0.31.3 test-lint
> semistandard && cpplint


> sharp@0.31.3 test-unit
> nyc --reporter=lcov --reporter=text --check-coverage --branches=100 mocha



  Bandbool per-channel boolean operations
    ✔ and operation
    ✔ or operation
    ✔ eor operation
    ✔ sRGB image retains 3 channels
    ✔ Invalid operation
    ✔ Missing operation


  Blur
    ✔ specific radius 1
    ✔ specific radius 10
    ✔ specific radius 0.3
    ✔ mild blur
    ✔ invalid radius
    ✔ blurred image is smaller than non-blurred


  AVIF
    ✔ called without options does not throw an error
    ✔ can convert AVIF to JPEG (537ms)
    ✔ can convert JPEG to AVIF
    ✔ can passthrough AVIF
    ✔ can convert animated GIF to non-animated AVIF
    ✔ should cast to uchar


  Boolean operation between two images
    ✔ and operation, file
    ✔ and operation, buffer
    ✔ and operation, raw
    ✔ or operation, file
    ✔ or operation, buffer
    ✔ or operation, raw
    ✔ eor operation, file
    ✔ eor operation, buffer
    ✔ eor operation, raw
    ✔ Invalid operation
    ✔ Invalid operation, non-string
    ✔ Missing input


  HTTP agent
    ✔ Without proxy
    ✔ HTTPS proxy with auth from HTTPS_PROXY
    ✔ HTTPS proxy with auth from HTTPS_PROXY using credentials containing special characters
    ✔ HTTP proxy without auth from npm_config_proxy


  Convolve
    ✔ specific convolution kernel 1
    ✔ specific convolution kernel 2
    ✔ horizontal Sobel operator
    invalid kernel specification
      ✔ missing
      ✔ incorrect data format
      ✔ incorrect dimensions


  Clone
    ✔ Read from Stream and write to multiple Streams (934ms)
    ✔ Stream-based input attaches finish event listener to original
    ✔ Non Stream-based input does not attach finish event listeners


  Affine transform
    ✔ Applies identity matrix
    ✔ Applies resize affine matrix
    ✔ Resizes and applies affine transform
    ✔ Extracts and applies affine transform
    ✔ Rotates and applies affine transform
    1) Extracts, rotates and applies affine transform
    2) Applies affine transform with background color
    3) Applies affine transform with background color and output offsets
    4) Applies affine transform with background color and all offsets
    ✔ Animated image rejects
    Invalid input
      ✔ Missing matrix
      ✔ Invalid 1d matrix
      ✔ Invalid 2d matrix
      ✔ Invalid options parameter type
      ✔ Invalid background color
      ✔ Invalid idx offset type
      ✔ Invalid idy offset type
      ✔ Invalid odx offset type
      ✔ Invalid ody offset type
      ✔ Invalid interpolator
    Interpolations
      ✔ Performs 2x upscale with nearest interpolation
      ✔ Performs 2x upscale with bilinear interpolation
      ✔ Performs 2x upscale with bicubic interpolation
      ✔ Performs 2x upscale with locallyBoundedBicubic interpolation
      ✔ Performs 2x upscale with nohalo interpolation
      ✔ Performs 2x upscale with vertexSplitQuadraticBasisSpline interpolation


  Extend
    ✔ extend all sides equally with RGB
    ✔ extend sides unequally with RGBA
    ✔ missing parameter fails
    ✔ negative fails
    ✔ invalid top fails
    ✔ invalid bottom fails
    ✔ invalid left fails
    ✔ invalid right fails
    ✔ can set all edges apart from right
    ✔ should add alpha channel before extending with a transparent Background
    ✔ PNG with 2 channels
    ✔ Premultiply background when compositing
    extend all sides equally via a single value
      ✔ JPEG
      ✔ Animated WebP


  failOn
    ✔ handles truncated JPEG
    ✔ handles truncated PNG, emits warnings
    ✔ throws for invalid options
    ✔ deprecated failOnError
    ✔ returns errors to callback for truncated JPEG
    ✔ returns errors to callback for truncated PNG
    ✔ rejects promises for truncated JPEG
    ✔ handles stream-based input


  Clahe
    ✔ width 5 width 5 maxSlope 0
    ✔ width 5 width 5 maxSlope 5
    ✔ width 11 width 25 maxSlope 14
    ✔ width 50 width 50 maxSlope 0
    ✔ width 50 width 50 maxSlope 14
    ✔ width 100 width 50 maxSlope 3
    ✔ width 100 width 100 maxSlope 0
    ✔ invalid maxSlope
    ✔ invalid width
    ✔ invalid height
    ✔ invalid options object
    ✔ uses default maxSlope of 3


  Image channel extraction
    ✔ Red channel
    ✔ Green channel
    ✔ Blue channel
    ✔ Blue channel by number
    5) With colorspace conversion
    ✔ Alpha from 16-bit PNG
    ✔ Alpha from 2-channel input
    ✔ Invalid channel number
    ✔ No arguments
    6) Non-existent channel


  Colour space conversion
    ✔ To greyscale
    ✔ To greyscale with gamma correction (1494ms)
    ✔ Not to greyscale
    ✔ Greyscale with single channel output
    ✔ From 1-bit TIFF to sRGB WebP
    ✔ From CMYK to sRGB
    7) From CMYK to sRGB with white background, not yellow
    ✔ From profile-less CMYK to sRGB
    ✔ From sRGB with RGB16 pipeline, resize with gamma, to sRGB
    ✔ Convert P3 to sRGB
    ✔ Passthrough P3
    ✔ Invalid pipelineColourspace input
    ✔ Invalid toColourspace input


  HEIF
    ✔ called without options does not throw an error
    ✔ valid quality does not throw an error
    ✔ invalid quality should throw an error
    ✔ non-numeric quality should throw an error
    ✔ valid lossless does not throw an error
    ✔ non-boolean lossless should throw an error
    ✔ valid compression does not throw an error
    ✔ unknown compression should throw an error
    ✔ invalid compression should throw an error
    ✔ valid effort does not throw an error
    ✔ out of range effort should throw an error
    ✔ invalid effort should throw an error
    ✔ invalid chromaSubsampling should throw an error
    ✔ valid chromaSubsampling does not throw an error


  GIF input
    ✔ GIF Buffer to JPEG Buffer
    ✔ 2 channel GIF file to PNG Buffer
    ✔ Animated GIF first page to PNG
    ✔ Animated GIF all pages to PNG "toilet roll"
    ✔ GIF with reduced colours, no dither, low effort reduces file size
    ✔ valid optimise
    ✔ invalid reoptimise throws
    ✔ invalid loop throws
    ✔ invalid delay throws
    ✔ invalid colour throws
    ✔ invalid effort throws
    ✔ invalid dither throws
    ✔ invalid interFrameMaxError throws
    ✔ invalid interPaletteMaxError throws
    ✔ should work with streams when only animated is set
    ✔ should work with streams when only pages is set
    ✔ should optimise file size via interFrameMaxError
    ✔ should optimise file size via interPaletteMaxError


  Partial image extraction
    ✔ JPEG
    ✔ PNG
    ✔ WebP
    ✔ TIFF
    ✔ Before resize
    ✔ After resize and crop
    ✔ Before and after resize and crop
    ✔ Extract then rotate
    ✔ Rotate then extract
    ✔ Extract then rotate then extract
    ✔ Extract then rotate non-90 anagle
    ✔ Rotate then extract non-90 angle
    Animated WebP
      ✔ Before resize
      ✔ After resize
    Apply exif orientation and mirroring then extract
      ✔ EXIF-1
      ✔ EXIF-2
      ✔ EXIF-3
      ✔ EXIF-4
      ✔ EXIF-5
      ✔ EXIF-6
      ✔ EXIF-7
      ✔ EXIF-8
    Invalid parameters
      ✔ Undefined
      ✔ String top
      ✔ Non-integral left
      ✔ Negative width - negative
      ✔ Null height
      ✔ Bad image area
      ✔ Multiple extract emits warning
      ✔ Multiple rotate+extract emits warning
      using the legacy extract(top,left,width,height) syntax
        ✔ String top
        ✔ Non-integral left
        ✔ Negative width - negative
        ✔ Null height


  JP2 output
    ✔ JP2 output should fail due to missing OpenJPEG
    ✔ JP2 file output should fail due to missing OpenJPEG


  Gamma correction
    ✔ value of 0.0 (disabled)
    ✔ value of 2.2 (default)
    ✔ value of 3.0
    ✔ input value of 2.2, output value of 3.0
    ✔ alpha transparency (1247ms)
    ✔ invalid first parameter value
    ✔ invalid second parameter value


  JPEG
    ✔ JPEG quality
    ✔ Progressive JPEG image
    ✔ Without chroma subsampling generates larger file
    ✔ Invalid JPEG chromaSubsampling value throws error
    ✔ Trellis quantisation
    ✔ Overshoot deringing
    ✔ Optimise scans generates different output length
    ✔ Optimise coding generates smaller output length
    ✔ Specifying quantisation table provides different JPEG
    ✔ Specifying quantization table provides different JPEG
    ✔ Can use mozjpeg defaults
    ✔ Invalid mozjpeg value throws error
    Invalid JPEG quality
      ✔ -1
      ✔ 88.2
      ✔ test
    Invalid JPEG quantisation table
      ✔ -1
      ✔ 88.2
      ✔ test


  JXL
    ✔ called without options does not throw an error
    ✔ valid distance does not throw an error
    ✔ invalid distance should throw an error
    ✔ non-numeric distance should throw an error
    ✔ valid quality > 30 does not throw an error
    ✔ valid quality < 30 does not throw an error
    ✔ valid quality does not throw an error
    ✔ invalid quality should throw an error
    ✔ non-numeric quality should throw an error
    ✔ valid decodingTier does not throw an error
    ✔ invalid decodingTier should throw an error
    ✔ non-numeric decodingTier should throw an error
    ✔ valid lossless does not throw an error
    ✔ non-boolean lossless should throw an error
    ✔ valid effort does not throw an error
    ✔ out of range effort should throw an error
    ✔ invalid effort should throw an error


  composite
    ✔ blend over
    ✔ blend xor
    ✔ blend saturate
    ✔ blend dest-over
    ✔ premultiplied true
    ✔ premultiplied false
    ✔ premultiplied absent
    ✔ multiple
    ✔ zero offset
    ✔ offset and gravity
    ✔ negative offset and gravity
    ✔ offset, gravity and tile
    ✔ offset and tile
    ✔ centre gravity should replicate correct number of tiles
    ✔ cutout via dest-in
    ✔ Allow offset beyond bottom/right edge
    8) Ensure tiled composition works with resized fit=outside
    9) Ensure implict unpremultiply after resize but before composite
    numeric gravity
      ✔ center
      ✔ centre
      ✔ north
      ✔ east
      ✔ south
      ✔ west
      ✔ northeast
      ✔ southeast
      ✔ southwest
      ✔ northwest
    string gravity
      ✔ center
      ✔ centre
      ✔ north
      ✔ east
      ✔ south
      ✔ west
      ✔ northeast
      ✔ southeast
      ✔ southwest
      ✔ northwest
    tile and gravity
      ✔ center
      ✔ centre
      ✔ north
      ✔ east
      ✔ south
      ✔ west
      ✔ northeast
      ✔ southeast
      ✔ southwest
      ✔ northwest
    validation
      ✔ missing images
      ✔ invalid images
      ✔ missing input
      ✔ invalid blend
      ✔ invalid tile
      ✔ invalid premultiplied
      ✔ invalid left
      ✔ invalid top
      ✔ left but no top
      ✔ top but no left
      ✔ invalid gravity


  Median filter
    ✔ 1x1 window
    ✔ 3x3 window
    ✔ 7x7 window
    ✔ default window (3x3)
    ✔ invalid radius


  Test fixtures
    assertMaxColourDistance
      ✔ should throw an Error when images have a different number of channels
      ✔ should throw an Error when images have different dimensions
      ✔ should accept a zero threshold when comparing an image to itself (1537ms)
      ✔ should accept a numeric threshold for two different images (1452ms)


  Alpha transparency
    ✔ Flatten to black (831ms)
    ✔ Flatten to RGB orange (912ms)
    ✔ Flatten to CSS/hex orange (926ms)
    ✔ Flatten 16-bit PNG with transparency to orange
    ✔ Do not flatten
    ✔ Ignored for JPEG
    ✔ Flatten with options but without colour does not throw
    ✔ Flatten to invalid colour throws
    ✔ Enlargement with non-nearest neighbor interpolation shouldn’t cause dark edges (1730ms)
    ✔ Reduction with non-nearest neighbor interpolation shouldn’t cause dark edges (859ms)
    ✔ Removes alpha from fixtures with transparency, ignores those without
    ✔ Ensures alpha from fixtures without transparency, ignores those with
    ✔ Valid ensureAlpha value used for alpha channel
    ✔ Invalid ensureAlpha value throws


  Image metadata
    ✔ JPEG
    ✔ JPEG with EXIF/ICC
    ✔ JPEG with IPTC/XMP
    ✔ TIFF
    ✔ Multipage TIFF
    ✔ PNG
    ✔ Transparent PNG
    ✔ WebP
    ✔ Animated WebP
    ✔ Animated WebP with all pages
    ✔ Animated WebP with limited looping
    ✔ GIF
    ✔ GIF grey+alpha
    ✔ Animated GIF
    ✔ Animated GIF with limited looping
    ✔ vips
    ✔ File in, Promise out
    ✔ Non-existent file in, Promise out
    ✔ Stream in, Promise out
    ✔ Stream in, rejected Promise out
    10) Stream in, finish event fires before metadata is requested
    ✔ Stream
    ✔ Resize to half width using metadata
    ✔ Keep EXIF metadata and add sRGB profile after a resize
    ✔ Apply CMYK output ICC profile
    ✔ Apply custom output ICC profile
    ✔ Include metadata in output, enabled via empty object
    ✔ Remove EXIF metadata after a resize
    ✔ Remove metadata from PNG output
    11) Add EXIF metadata to JPEG
    12) Set density of JPEG
    13) Set density of PNG
    ✔ chromaSubsampling 4:4:4:4 CMYK JPEG
    ✔ chromaSubsampling 4:4:4 RGB JPEG
    ✔ isProgressive JPEG
    ✔ isProgressive PNG
    ✔ 16-bit TIFF with TIFFTAG_PHOTOSHOP metadata
    ✔ AVIF
    ✔ File input with corrupt header fails gracefully
    ✔ Buffer input with corrupt header fails gracefully
    ✔ Unsupported lossless JPEG passes underlying error message
    Invalid withMetadata parameters
      ✔ String orientation
      ✔ Negative orientation
      ✔ Zero orientation
      ✔ Too large orientation
      ✔ Non-numeric density
      ✔ Negative density
      ✔ Non string icc
      ✔ Non object exif
      ✔ Non string value in object exif
      ✔ Non string value in nested object exif


  Image channel insertion
    ✔ Grayscale to RGB, buffer
    ✔ Grayscale to RGB, file
    ✔ Grayscale to RGBA, buffer
    ✔ Grayscale to RGBA, file
    ✔ Grayscale to CMYK, buffers
    ✔ Join raw buffers to RGB
    ✔ Grayscale to RGBA, files, two arrays
    ✔ Invalid raw buffer description
    ✔ Invalid input
    ✔ No arguments


  Normalization
    ✔ spreads rgb image values between 0 and 255
    ✔ spreads grayscaled image values between 0 and 255
    ✔ stretches greyscale images with alpha channel
    ✔ keeps an existing alpha channel
    ✔ keeps the alpha channel of greyscale images intact
    ✔ does not alter images with only one color
    ✔ works with 16-bit RGBA images


  Platform-detection
    ✔ Can override arch with npm_config_arch
    ✔ Can override platform with npm_config_platform
    ✔ Can override ARM version via --arm-version
    ✔ Can override ARM64 version via --arm-version
    ✔ Defaults to ARMv6 for 32-bit
    ✔ Defaults to ARMv8 for 64-bit
    ✔ Can ensure version ARMv7 if electron version is present
    ✔ Can override libc if platform is linux
    ✔ Handles libc value "glibc" as default linux
    ✔ Discards libc value on non-linux platform


  Input/output
    ✔ Read from File and write to Stream
    ✔ Read from Buffer and write to Stream
    ✔ Read from Stream and write to File
    ✔ Read from Stream and write to Buffer
    ✔ Read from Stream and write to Buffer via Promise resolved with Buffer
    ✔ Read from Stream and write to Buffer via Promise resolved with Object
    ✔ Read from File and write to Buffer via Promise resolved with Buffer
    ✔ Read from File and write to Buffer via Promise resolved with Object
    ✔ Read from Stream and write to Stream
    ✔ Read from Uint8Array and write to Buffer
    ✔ Read from Uint8ClampedArray and output to Buffer
    ✔ Read from Uint8ClampedArray with byteOffset and output to Buffer
    ✔ Stream should emit info event
    ✔ Stream should emit close event
    ✔ Handle Stream to Stream error 
    ✔ Handle File to Stream error
    ✔ Readable side of Stream can start flowing after Writable side has finished
    ✔ Invalid sequential read option throws
    ✔ Sequential read, force JPEG
    ✔ Not sequential read, force JPEG
    ✔ Support output to jpg format
    ✔ Support output to tif format
    14) Allow use of toBuffer and toFile with same instance
    ✔ Fail when output File is input File
    ✔ Fail when output File is input File via Promise
    ✔ Fail when output File is input File (relative output, absolute input)
    ✔ Fail when output File is input File via Promise (relative output, absolute input)
    ✔ Fail when output File is input File (relative input, absolute output)
    ✔ Fail when output File is input File via Promise (relative input, absolute output)
    ✔ Fail when output File is empty
    ✔ Fail when output File is empty via Promise
    ✔ Fail when input is invalid Buffer
    ✔ Fail when input file path is missing
    ✔ Promises/A+
    ✔ Invalid output format
    ✔ File input with corrupt header fails gracefully
    ✔ Buffer input with corrupt header fails gracefully
    ✔ Stream input with corrupt header fails gracefully
    ✔ Input and output formats match when not forcing
    ✔ Can force output format with output chaining
    ✔ toFormat=JPEG takes precedence over WebP extension
    ✔ toFormat=WebP takes precedence over JPEG extension (1180ms)
    ✔ Load Vips V file
    ✔ Save Vips V file
    ✔ Fails when writing to missing directory
    ✔ Queue length change events
    ✔ Info event data
    Fail for unsupported input
      ✔ Undefined
      ✔ Null
      ✔ Numeric
      ✔ Boolean
      ✔ Error Object
    Output filename with unknown extension
      ✔ Match JPEG input
      ✔ Match PNG input
      ✔ Match WebP input
      ✔ Match TIFF input
      ✔ Force JPEG format for PNG input
    Switch off safety limits for certain formats
      ✔ Valid
      ✔ Invalid
    Limit pixel count of input image
      ✔ Invalid fails - negative
      ✔ Invalid fails - float
      ✔ Invalid fails - integer overflow
      ✔ Invalid fails - string
      ✔ Same size as input works
      ✔ Disabling limit works
      ✔ Enabling default limit works and fails with a large image
      ✔ Enabling default limit works and fails for an image with resolution higher than uint32 limit
      ✔ Smaller than input fails
    Input options
      ✔ Option-less
      ✔ Ignore unknown attribute
      ✔ undefined with options fails
      ✔ null with options fails
      ✔ Non-Object options fails
      ✔ Invalid density: string
      ✔ Setting animated property updates pages property
      ✔ Invalid animated property throws
      ✔ Invalid page property throws
      ✔ Invalid pages property throws
      ✔ Valid level property
      ✔ Invalid level property (string) throws
      ✔ Invalid level property (negative) throws
      ✔ Valid subifd property
      ✔ Invalid subifd property (string) throws
      ✔ Invalid subifd property (float) throws
    create new image
      ✔ RGB
      ✔ RGBA
      ✔ Invalid channels
      ✔ Missing background


  PNG
    ✔ compression level is valid
    ✔ compression level is invalid
    ✔ default compressionLevel generates smaller file than compressionLevel=0 (524ms)
    ✔ without adaptiveFiltering generates smaller file
    ✔ Invalid PNG adaptiveFiltering value throws error
    ✔ Progressive PNG image
    ✔ 16-bit grey+alpha PNG identity transform
    ✔ 16-bit grey+alpha PNG roundtrip
    ✔ palette decode/encode roundtrip
    ✔ Valid PNG libimagequant palette value does not throw error
    ✔ Invalid PNG libimagequant palette value throws error
    ✔ Valid PNG libimagequant quality value produces image of same size or smaller
    ✔ Invalid PNG libimagequant quality value throws error
    ✔ Invalid effort value throws error
    ✔ Valid PNG libimagequant colours value produces image of same size or smaller
    ✔ Invalid PNG libimagequant colours value throws error
    ✔ Invalid PNG libimagequant colors value throws error
    15) Can set bitdepth of PNG without palette
    ✔ Valid PNG libimagequant dither value produces image of same size or smaller
    ✔ Invalid PNG libimagequant dither value throws error


  Modulate
    ✔ should be able to hue-rotate
    ✔ should be able to brighten
    ✔ should be able to darken
    ✔ should be able to saturate
    ✔ should be able to desaturate
    ✔ should be able to lighten
    ✔ should be able to modulate all channels
    ✔ should be able to use linear and modulate together
    Invalid options
      ✔ should throw
      ✔ should throw
      ✔ should throw
      ✔ should throw
      ✔ should throw
      ✔ should throw
      ✔ should throw
      ✔ should throw
      ✔ should throw
      ✔ should throw
      ✔ should throw
      ✔ should throw
      ✔ should throw
      ✔ should throw
    hue-rotate
      ✔ should hue rotate by 30 deg
      ✔ should hue rotate by 60 deg
      ✔ should hue rotate by 90 deg
      ✔ should hue rotate by 120 deg
      ✔ should hue rotate by 150 deg
      ✔ should hue rotate by 180 deg
      ✔ should hue rotate by 210 deg
      ✔ should hue rotate by 240 deg
      ✔ should hue rotate by 270 deg
      ✔ should hue rotate by 300 deg
      ✔ should hue rotate by 330 deg
      ✔ should hue rotate by 360 deg


  Gaussian noise
    ✔ generate single-channel gaussian noise
    ✔ generate 3-channels gaussian noise
    ✔ overlay 3-channels gaussian noise over image
    ✔ overlay strong single-channel (sRGB) gaussian noise with 25% transparency over transparent png image (3108ms)
    ✔ no create object properties specified
    ✔ invalid noise object
    ✔ unknown type of noise
    ✔ gaussian noise, invalid amount of channels
    ✔ gaussian noise, invalid mean
    ✔ gaussian noise, invalid sigma


  Recomb
    ✔ applies a sepia filter using recomb
    ✔ applies a sepia filter using recomb to an PNG with Alpha
    ✔ recomb with a single channel input
    ✔ applies a different sepia filter using recomb
    ✔ increases the saturation of the image
    invalid matrix specification
      ✔ missing
      ✔ incorrect flat data
      ✔ incorrect sub size
      ✔ incorrect top size


  Negate
    ✔ negate (jpeg)
    ✔ negate (png)
    ✔ negate (png, trans) (630ms)
    ✔ negate (png, alpha)
    ✔ negate (webp)
    ✔ negate (webp, trans)
    ✔ negate (true)
    ✔ negate (false)
    ✔ negate ({alpha: true})
    ✔ negate non-alpha channels (png)
    ✔ negate non-alpha channels (png, trans) (1212ms)
    ✔ negate non-alpha channels (png, alpha)
    ✔ negate non-alpha channels (webp)
    ✔ negate non-alpha channels (webp, trans)
    ✔ negate create
    ✔ invalid alpha value


  Raw pixel data
    Raw pixel input
      ✔ Empty data
      ✔ Missing options
      ✔ Incomplete options
      ✔ Invalid channels
      ✔ Invalid height
      ✔ Invalid width
      ✔ RGB
      ✔ RGBA (1495ms)
      ✔ RGBA premultiplied
      ✔ JPEG to raw Stream and back again
    Output raw, uncompressed image data
      ✔ 1 channel greyscale image
      ✔ 3 channel colour image without transparency
      ✔ 4 channel colour image with transparency
      ✔ Extract A from RGBA
    Raw pixel depths
      ✔ Invalid depth
      ✔ Uint8Array
      ✔ Uint8Array
      ✔ Uint8ClampedArray
      ✔ Int8Array
      ✔ Uint16Array
      ✔ Int16Array
      ✔ Uint32Array
      ✔ Int32Array
      ✔ Float32Array
      ✔ Float64Array


  Sharpen
    ✔ specific radius 10 (sigma 6)
    ✔ specific radius 3 (sigma 1.5) and levels 0.5, 2.5
    ✔ specific radius 5 (sigma 3.5) and levels 2, 4
    ✔ sigma=3.5, m1=2, m2=4
    ✔ sigma=3.5, m1=2, m2=4, x1=2, y2=5, y3=25
    ✔ specific radius/levels with alpha channel (654ms)
    ✔ mild sharpen
    ✔ invalid sigma
    ✔ invalid flat
    ✔ invalid jagged
    ✔ invalid options.sigma
    ✔ invalid options.m1
    ✔ invalid options.m2
    ✔ invalid options.x1
    ✔ invalid options.y2
    ✔ invalid options.y3
    ✔ sharpened image is larger than non-sharpened


  Linear adjustment
    ✔ applies linear levels adjustment w/o alpha ch
    ✔ applies slope level adjustment w/o alpha ch
    ✔ applies offset level adjustment w/o alpha ch
    ✔ applies linear levels adjustment w alpha ch (2291ms)
    ✔ applies slope level adjustment w alpha ch (2354ms)
    ✔ applies offset level adjustment w alpha ch (2206ms)
    ✔ per channel level adjustment
    16) output is integer, not float, RGB
    ✔ output is integer, not float, RGBA
    ✔ Invalid linear arguments


  libvips binaries
    Windows platform
      ✔ pkgConfigPath returns empty string
      ✔ globalLibvipsVersion returns empty string
      ✔ globalLibvipsVersion is always false
    non-Windows platforms
      ✔ pkgConfigPath returns a string (3407ms)
      ✔ globalLibvipsVersion returns a string (2535ms)
      ✔ globalLibvipsVersion returns a boolean (2222ms)
    platform agnostic
      ✔ minimumLibvipsVersion returns a valid semver
      ✔ hasVendoredLibvips returns a boolean
      ✔ useGlobalLibvips can be ignored via an env var
      ✔ cachePath returns a valid path ending with _libvips
    integrity
      ✔ reads value from environment variable
      ✔ reads value from package.json
    safe directory creation
      ✔ mkdirSync creates a directory
      ✔ mkdirSync does not throw error or overwrite an existing dir
    logger
      ✔ logs an info message
      ✔ logs an error message


  Text to image
    ✔ text with default values
    ✔ text with width and height
    ✔ text with dpi
    ✔ text with color and pango markup
    ✔ text with font
    ✔ text with justify and composite
    ✔ bad text input
    ✔ fontfile input
    ✔ bad font input
    ✔ bad fontfile input
    ✔ bad width input
    ✔ bad height input
    ✔ bad align input
    ✔ bad justify input
    ✔ bad dpi input
    ✔ bad rgba input
    ✔ bad spacing input
    ✔ only height or dpi not both


  SVG input
    ✔ Convert SVG to PNG at default 72DPI
    ✔ Convert SVG to PNG at 1200DPI
    ✔ Convert SVG to PNG at DPI larger than 2400 (709ms)
    ✔ Convert SVG to PNG utilizing scale-on-load (681ms)
    ✔ Convert SVG to PNG at 14.4DPI
    ✔ Convert SVG with embedded images to PNG, respecting dimensions, autoconvert to PNG
    ✔ Converts SVG with truncated embedded PNG
    ✔ Fails to render SVG larger than 32767x32767
    ✔ Fails to render scaled SVG larger than 32767x32767
    ✔ Detects SVG passed as a string


  Threshold
    ✔ threshold 1 jpeg
    ✔ threshold 40 jpeg
    ✔ threshold 128
    ✔ threshold true (=128)
    ✔ threshold false (=0)
    ✔ threshold grayscale: true (=128)
    ✔ threshold default jpeg
    ✔ threshold default png transparency (556ms)
    ✔ threshold default png alpha
    ✔ threshold default webp transparency
    ✔ color threshold
    ✔ invalid threshold -1
    ✔ invalid threshold 256


  TIFF
    ✔ Load TIFF from Buffer
    ✔ Load multi-page TIFF from file
    ✔ Load multi-page TIFF from Buffer
    ✔ Save TIFF to Buffer
    ✔ Increasing TIFF quality increases file size
    ✔ Invalid TIFF quality throws error
    ✔ Missing TIFF quality does not throw error
    ✔ Not squashing TIFF to a bit depth of 1 should not change the file size
    ✔ Squashing TIFF to a bit depth of 1 should significantly reduce file size
    ✔ Invalid TIFF bitdepth value throws error
    ✔ TIFF setting xres and yres on file
    ✔ TIFF setting xres and yres on buffer
    ✔ TIFF imputes xres and yres from withMetadataDensity if not explicitly provided
    ✔ TIFF uses xres and yres over withMetadataDensity if explicitly provided
    ✔ TIFF invalid xres value should throw an error
    ✔ TIFF invalid yres value should throw an error
    ✔ TIFF lzw compression with horizontal predictor shrinks test file
    17) TIFF LZW RGBA toFile
    18) TIFF LZW RGBA toBuffer
    ✔ TIFF ccittfax4 compression shrinks b-w test file
    19) TIFF resolutionUnit of inch (default)
    20) TIFF resolutionUnit of inch
    21) TIFF resolutionUnit of cm
    ✔ TIFF deflate compression with horizontal predictor shrinks test file
    ✔ TIFF deflate compression with float predictor shrinks test file
    ✔ TIFF deflate compression without predictor shrinks test file
    ✔ TIFF jpeg compression shrinks test file
    ✔ TIFF none compression does not throw error
    ✔ TIFF lzw compression does not throw error
    ✔ TIFF deflate compression does not throw error
    ✔ TIFF invalid compression option throws
    ✔ TIFF invalid compression option throws
    ✔ TIFF invalid predictor option throws
    ✔ TIFF invalid resolutionUnit option throws
    ✔ TIFF horizontal predictor does not throw error
    ✔ TIFF float predictor does not throw error
    ✔ TIFF none predictor does not throw error
    ✔ TIFF tiled pyramid image without compression enlarges test file
    ✔ TIFF pyramid true value does not throw error
    ✔ Invalid TIFF pyramid value throws error
    ✔ Invalid TIFF tile value throws error
    ✔ TIFF tile true value does not throw error
    ✔ Valid TIFF tileHeight value does not throw error
    ✔ Valid TIFF tileWidth value does not throw error
    ✔ Invalid TIFF tileHeight value throws error
    ✔ Invalid TIFF tileWidth value throws error
    ✔ Invalid TIFF tileHeight value throws error
    ✔ Invalid TIFF tileWidth value throws error
    ✔ TIFF file input with invalid page fails gracefully
    ✔ TIFF buffer input with invalid page fails gracefully


  Resize fit=contain
    ✔ Allows specifying the position as a string
    ✔ JPEG within PNG, no alpha channel
    ✔ JPEG within WebP, to include alpha channel
    ✔ PNG with alpha channel
    ✔ 16-bit PNG with alpha channel
    ✔ 16-bit PNG with alpha channel onto RGBA
    ✔ PNG with 2 channels
    ✔ TIFF in LAB colourspace onto RGBA background
    ✔ Enlarge
    ✔ Invalid position values should fail
    ✔ Position horizontal top
    ✔ Position horizontal right top
    ✔ Position horizontal right
    ✔ Position horizontal right bottom
    ✔ Position horizontal bottom
    ✔ Position horizontal left bottom
    ✔ Position horizontal left
    ✔ Position horizontal left top
    ✔ Position horizontal north
    ✔ Position horizontal northeast
    ✔ Position horizontal east
    ✔ Position horizontal southeast
    ✔ Position horizontal south
    ✔ Position horizontal southwest
    ✔ Position horizontal west
    ✔ Position horizontal northwest
    ✔ Position horizontal center
    ✔ Position vertical top
    ✔ Position vertical right top
    ✔ Position vertical right
    ✔ Position vertical right bottom
    ✔ Position vertical bottom
    ✔ Position vertical left bottom
    ✔ Position vertical left
    ✔ Position vertical left top
    ✔ Position vertical north
    ✔ Position vertical northeast
    ✔ Position vertical east
    ✔ Position vertical southeast
    ✔ Position vertical south
    ✔ Position vertical southwest
    ✔ Position vertical west
    ✔ Position vertical northwest
    ✔ Position vertical center
    Animated WebP
      ✔ Width only
      ✔ Height only


  Timeout
    ✔ Will timeout after 1s when performing slow blur operation (1051ms)
    ✔ invalid object
    ✔ invalid seconds


  toBuffer
    ✔ reusing same sharp object does not reset previously passed parameters to toBuffer
    ✔ correctly process animated webp with height > 16383 (507ms)


  toFormat
    ✔ accepts upper case characters as format parameter (string)
    ✔ accepts upper case characters as format parameter (object)


  Tint
    ✔ tints rgb image red
    ✔ tints rgb image green
    ✔ tints rgb image blue
    ✔ tints rgb image with sepia tone
    ✔ tints rgb image with sepia tone with rgb colour
    ✔ tints rgb image with alpha channel (1538ms)
    ✔ tints cmyk image red


  Utilities
    Cache
      ✔ Can be disabled
      ✔ Can be enabled with defaults
      ✔ Can be set to zero
      ✔ Can be set to a maximum of 10MB, 100 files and 1000 items
      ✔ Ignores invalid values
    Concurrency
      ✔ Can be set to use 16 threads
      ✔ Can be reset to default
      ✔ Ignores invalid values
    Counters
      ✔ Have zero value at rest
    SIMD
      ✔ Can get current state
      ✔ Can disable
      ✔ Can attempt to enable
    Format
      ✔ Contains expected attributes
      ✔ Raw file=false, buffer=true, stream=true
      ✔ vips format supports filesystem only
      ✔ input fileSuffix
      ✔ output alias
    Versions
      ✔ Contains expected attributes
    Vendor
      ✔ Contains expected attributes


  Image Stats
    ✔ JPEG (637ms)
    ✔ PNG without transparency (527ms)
    ✔ PNG with transparency
    ✔ PNG fully transparent
    ✔ Tiff (576ms)
    ✔ WebP
    ✔ GIF
    ✔ Grayscale GIF with alpha
    ✔ CMYK input without profile
    ✔ Dominant colour
    22) Entropy and sharpness of 1x1 input are zero
    ✔ Stream in, Callback out (707ms)
    ✔ Stream in, Promise out (577ms)
    ✔ File in, Promise out (741ms)
    ✔ Blurred image has lower sharpness than original (1554ms)
    ✔ File input with corrupt header fails gracefully
    ✔ File input with corrupt header fails gracefully, Promise out
    ✔ File input with corrupt header fails gracefully, Stream In, Promise Out
    ✔ Buffer input with corrupt header fails gracefully
    ✔ Non-existent file in, Promise out
    ✔ Sequential read option is ignored (626ms)


  Rotation
    ✔ Auto-rotate Landscape image with EXIF Orientation 1
    ✔ Auto-rotate then resize Landscape image with EXIF Orientation 1
    ✔ Resize then auto-rotate Landscape image with EXIF Orientation 1
    ✔ Auto-rotate Landscape image with EXIF Orientation 2
    ✔ Auto-rotate then resize Landscape image with EXIF Orientation 2
    ✔ Resize then auto-rotate Landscape image with EXIF Orientation 2
    ✔ Auto-rotate Landscape image with EXIF Orientation 3
    ✔ Auto-rotate then resize Landscape image with EXIF Orientation 3
    ✔ Resize then auto-rotate Landscape image with EXIF Orientation 3
    ✔ Auto-rotate Landscape image with EXIF Orientation 4
    ✔ Auto-rotate then resize Landscape image with EXIF Orientation 4
    ✔ Resize then auto-rotate Landscape image with EXIF Orientation 4
    ✔ Auto-rotate Landscape image with EXIF Orientation 5
    ✔ Auto-rotate then resize Landscape image with EXIF Orientation 5
    ✔ Resize then auto-rotate Landscape image with EXIF Orientation 5
    ✔ Auto-rotate Landscape image with EXIF Orientation 6
    ✔ Auto-rotate then resize Landscape image with EXIF Orientation 6
    ✔ Resize then auto-rotate Landscape image with EXIF Orientation 6
    ✔ Auto-rotate Landscape image with EXIF Orientation 7
    ✔ Auto-rotate then resize Landscape image with EXIF Orientation 7
    ✔ Resize then auto-rotate Landscape image with EXIF Orientation 7
    ✔ Auto-rotate Landscape image with EXIF Orientation 8
    ✔ Auto-rotate then resize Landscape image with EXIF Orientation 8
    ✔ Resize then auto-rotate Landscape image with EXIF Orientation 8
    ✔ Auto-rotate Portrait image with EXIF Orientation 1
    ✔ Auto-rotate then resize Portrait image with EXIF Orientation 1
    ✔ Resize then auto-rotate Portrait image with EXIF Orientation 1
    ✔ Auto-rotate Portrait image with EXIF Orientation 2
    ✔ Auto-rotate then resize Portrait image with EXIF Orientation 2
    ✔ Resize then auto-rotate Portrait image with EXIF Orientation 2
    ✔ Auto-rotate Portrait image with EXIF Orientation 3
    ✔ Auto-rotate then resize Portrait image with EXIF Orientation 3
    ✔ Resize then auto-rotate Portrait image with EXIF Orientation 3
    ✔ Auto-rotate Portrait image with EXIF Orientation 4
    ✔ Auto-rotate then resize Portrait image with EXIF Orientation 4
    ✔ Resize then auto-rotate Portrait image with EXIF Orientation 4
    ✔ Auto-rotate Portrait image with EXIF Orientation 5
    ✔ Auto-rotate then resize Portrait image with EXIF Orientation 5
    ✔ Resize then auto-rotate Portrait image with EXIF Orientation 5
    ✔ Auto-rotate Portrait image with EXIF Orientation 6
    ✔ Auto-rotate then resize Portrait image with EXIF Orientation 6
    ✔ Resize then auto-rotate Portrait image with EXIF Orientation 6
    ✔ Auto-rotate Portrait image with EXIF Orientation 7
    ✔ Auto-rotate then resize Portrait image with EXIF Orientation 7
    ✔ Resize then auto-rotate Portrait image with EXIF Orientation 7
    ✔ Auto-rotate Portrait image with EXIF Orientation 8
    ✔ Auto-rotate then resize Portrait image with EXIF Orientation 8
    ✔ Resize then auto-rotate Portrait image with EXIF Orientation 8
    ✔ Rotate by 30 degrees with semi-transparent background
    ✔ Rotate by 30 degrees with solid background
    ✔ Rotate by 90 degrees, respecting output input size (665ms)
    ✔ Resize then rotate by 30 degrees, respecting output input size
    ✔ Rotate by any 90-multiple angle (-3690deg)
    ✔ Rotate by any 90-multiple angle (-450deg)
    ✔ Rotate by any 90-multiple angle (-90deg)
    ✔ Rotate by any 90-multiple angle (90deg)
    ✔ Rotate by any 90-multiple angle (450deg)
    ✔ Rotate by any 90-multiple angle (3690deg)
    ✔ Rotate by any 30-multiple angle (-3750deg)
    ✔ Rotate by any 30-multiple angle (-510deg)
    ✔ Rotate by any 30-multiple angle (-150deg)
    ✔ Rotate by any 30-multiple angle (30deg)
    ✔ Rotate by any 30-multiple angle (390deg)
    ✔ Rotate by any 30-multiple angle (3630deg)
    ✔ Rotate by any 180-multiple angle (-3780deg)
    ✔ Rotate by any 180-multiple angle (-540deg)
    ✔ Rotate by any 180-multiple angle (0deg)
    ✔ Rotate by any 180-multiple angle (180deg)
    ✔ Rotate by any 180-multiple angle (540deg)
    ✔ Rotate by any 180-multiple angle (3780deg)
    ✔ Rotate by 270 degrees, square output ignoring aspect ratio
    ✔ Rotate by 315 degrees, square output ignoring aspect ratio
    ✔ Rotate by 270 degrees, rectangular output ignoring aspect ratio (1010ms)
    ✔ Rotate by 30 degrees, rectangular output ignoring aspect ratio
    ✔ Input image has Orientation EXIF tag but do not rotate output
    ✔ Input image has Orientation EXIF tag value of 8 (270 degrees), auto-rotate
    ✔ Override EXIF Orientation tag metadata after auto-rotate
    ✔ Input image has Orientation EXIF tag value of 5 (270 degrees + flip), auto-rotate
    ✔ Attempt to auto-rotate using image that has no EXIF
    ✔ Attempt to auto-rotate image format without EXIF support
    ✔ Rotate with a string argument, should fail
    ✔ Animated image rotate-then-extract rejects
    ✔ Animated image extract-then-rotate rejects
    ✔ Multiple rotate emits warning
    ✔ Flip - vertical
    ✔ Flop - horizontal
    ✔ Flip and flop
    ✔ Neither flip nor flop
    ✔ Auto-rotate and flip
    ✔ Auto-rotate and flop
    ✔ Auto-rotate and shrink-on-load
    ✔ Flip and rotate ordering
    ✔ Flip, rotate and resize ordering


  WebP
    ✔ WebP output
    ✔ Invalid WebP quality throws error
    ✔ Invalid WebP alpha quality throws error
    ✔ should work for webp alpha quality
    ✔ should work for webp lossless
    ✔ should work for webp near-lossless
    ✔ should use near-lossless when both lossless and nearLossless are specified
    ✔ should produce a larger file size using smartSubsample
    ✔ invalid smartSubsample throws
    ✔ should produce a smaller file size with increased effort
    ✔ invalid effort throws
    ✔ out of range effort throws
    ✔ should set effort to 0
    ✔ valid minSize
    ✔ invalid minSize throws
    ✔ valid mixed
    ✔ invalid mixed throws
    ✔ invalid loop throws
    ✔ invalid delay throws
    ✔ should repeat a single delay for all frames
    ✔ should limit animation loop
    ✔ should change delay between frames
    ✔ should preserve delay between frames
    ✔ should work with streams when only animated is set
    ✔ should work with streams when only pages is set
    ✔ should resize animated image to page height
    ✔ should take page parameter into account when animated is set


  Resize fit=cover
    ✔ Position: top
    ✔ Position: right
    ✔ Position: bottom
    ✔ Position: left
    ✔ Position: right top (top)
    ✔ Position: right top (right)
    ✔ Position: right bottom (bottom)
    ✔ Position: right bottom (right)
    ✔ Position: left bottom (bottom)
    ✔ Position: left bottom (left)
    ✔ Position: left top (top)
    ✔ Position: left top (left)
    ✔ Gravity: north
    ✔ Gravity: east
    ✔ Gravity: south
    ✔ Gravity: west
    ✔ Gravity: center
    ✔ Gravity: centre
    ✔ Default (centre)
    ✔ Gravity: northeast (north)
    ✔ Gravity: northeast (east)
    ✔ Gravity: southeast (south)
    ✔ Gravity: southeast (east)
    ✔ Gravity: southwest (south)
    ✔ Gravity: southwest (west)
    ✔ Gravity: northwest (north)
    ✔ Gravity: northwest (west)
    ✔ Allows specifying the gravity as a string
    ✔ Invalid position values fail
    ✔ Uses default value when none specified
    ✔ Skip crop when post-resize dimensions are at target
    Animated WebP
      ✔ Width only
      ✔ Height only
    Entropy-based strategy
      ✔ JPEG
      ✔ PNG (2639ms)
      ✔ supports the strategy passed as a string (3159ms)
      ✔ Animated image rejects
    Attention strategy
      ✔ JPEG
      ✔ PNG (730ms)
      ✔ supports the strategy passed as a string (748ms)
      ✔ Animated image rejects


  Resize dimensions
    ✔ Exact crop
    ✔ Fixed width
    ✔ Fixed height
    ✔ Identity transform
    ✔ Upscale (664ms)
    ✔ Invalid width - NaN
    ✔ Invalid height - NaN
    ✔ Invalid width - float
    ✔ Invalid height - float
    ✔ Invalid width - via options
    ✔ Invalid height - via options
    ✔ Invalid width - too large
    ✔ Invalid height - too large
    ✔ Webp resize then extract large image
    ✔ WebP shrink-on-load rounds to zero, ensure recalculation is correct
    ✔ JPEG shrink-on-load with 90 degree rotation, ensure recalculation is correct
    ✔ TIFF embed known to cause rounding errors
    ✔ TIFF known to cause rounding errors
    ✔ fit=inside, portrait
    ✔ fit=outside, portrait
    ✔ fit=inside, landscape
    ✔ fit=outside, landscape
    ✔ fit=inside, provide only one dimension
    ✔ fit=outside, provide only one dimension
    ✔ Do not enlarge when input width is already less than output width
    ✔ Do not enlarge when input height is already less than output height
    ✔ Do crop when fit = cover and withoutEnlargement = true and width >= outputWidth, and height < outputHeight
    ✔ Do crop when fit = cover and withoutEnlargement = true and width < outputWidth, and height >= outputHeight
    ✔ Do enlarge when input width is less than output width (562ms)
    ✔ Do enlarge when input width is less than output width (608ms)
    ✔ Do enlarge when input height is less than output height (649ms)
    ✔ Do enlarge when input width is less than output width (620ms)
    ✔ Do not resize when both withoutEnlargement and withoutReduction are true
    ✔ Do not reduce size when fit = outside and withoutReduction are true and height > outputHeight and width > outputWidth
    ✔ Do resize when fit = outside and withoutReduction are true and input height > height and input width > width  (1239ms)
    ✔ fit=fill, downscale width and height
    ✔ fit=fill, downscale width
    ✔ fit=fill, downscale height
    ✔ fit=fill, upscale width and height (906ms)
    ✔ fit=fill, upscale width (611ms)
    ✔ fit=fill, upscale height (638ms)
    ✔ fit=fill, downscale width, upscale height
    ✔ fit=fill, upscale width, downscale height
    ✔ fit=fill, identity transform
    ✔ Dimensions that result in differing even shrinks on each axis
    ✔ Dimensions that result in differing odd shrinks on each axis
    ✔ fastShrinkOnLoad: true does not causes image shifts
    ✔ fastShrinkOnLoad: false does not causes image shifts
    ✔ kernel nearest
    ✔ kernel cubic
    ✔ kernel mitchell
    ✔ kernel lanczos2
    ✔ kernel lanczos3
    ✔ nearest upsampling with integral factor
    23) Ensure shortest edge (height) is at least 1 pixel
    24) Ensure shortest edge (width) is at least 1 pixel
    25) Ensure embedded shortest edge (height) is at least 1 pixel
    26) Ensure embedded shortest edge (width) is at least 1 pixel
    27) Skip shrink-on-load where one dimension <4px
    28) Skip JPEG shrink-on-load for known libjpeg rounding errors
    ✔ unknown kernel throws
    ✔ unknown fit throws
    ✔ unknown position throws
    ✔ Multiple resize emits warning


  Trim borders
    ✔ Skip shrink-on-load (647ms)
    ✔ Single colour PNG where alpha channel provides the image
    ✔ 16-bit PNG with alpha channel
    29) Attempt to trim 2x2 pixel image fails
    30) Should rotate before trim
    ✔ Animated image rejects
    ✔ Ensure trim uses bounding box of alpha and non-alpha channels
    31) Ensure greyscale image can be trimmed
    32) Ensure trim of image with all pixels same is no-op
    Valid parameters
      ✔ Background and threshold default (1156ms)
      ✔ Background string (1061ms)
      ✔ Background option (873ms)
      ✔ Threshold number (787ms)
      ✔ Threshold option (815ms)
    Invalid parameters
      ✔ Invalid background string
      ✔ Invalid background option
      ✔ Negative threshold number
      ✔ Negative threshold option
      ✔ Boolean
    Specific background colour
      33) Doesn't trim at all
      ✔ Only trims the bottom
      ✔ Only trims the bottom, in 16-bit
      ✔ Only trims the bottom, including alpha


  Tile
    ✔ Valid size values pass
    ✔ Invalid size values fail
    ✔ Valid overlap values pass
    ✔ Invalid overlap values fail
    ✔ Valid container values pass
    ✔ Invalid container values fail
    ✔ Valid layout values pass
    ✔ Invalid layout values fail
    ✔ Valid formats pass
    ✔ Invalid formats fail
    ✔ Valid depths pass
    ✔ Invalid depths fail
    ✔ Prevent larger overlap than default size
    ✔ Prevent larger overlap than provided size
    ✔ Valid rotation angle values pass
    ✔ Invalid rotation angle values fail
    ✔ Valid skipBlanks threshold values pass
    ✔ InvalidskipBlanks threshold values fail
    ✔ Invalid center parameter value fail
    ✔ Valid id parameter value passes
    ✔ Invalid id parameter value fails
    ✔ Invalid basename parameter value fails
    ✔ Deep Zoom layout (948ms)
    ✔ Deep Zoom layout with custom size+overlap (572ms)
    ✔ Deep Zoom layout with custom size+angle (616ms)
    ✔ Deep Zoom layout with depth of one
    ✔ Deep Zoom layout with depth of onepixel
    ✔ Deep Zoom layout with depth of onetile (792ms)
    ✔ Deep Zoom layout with skipBlanks
    ✔ Zoomify layout (698ms)
    ✔ Zoomify layout with depth one
    ✔ Zoomify layout with depth onetile (528ms)
    ✔ Zoomify layout with depth onepixel (507ms)
    ✔ Zoomify layout with skip blanks
    ✔ Google layout (557ms)
    ✔ Google layout with jpeg format (526ms)
    ✔ Google layout with png format (533ms)
    ✔ Google layout with webp format (751ms)
    ✔ Google layout with depth one
    ✔ Google layout with depth onepixel (573ms)
    ✔ Google layout with depth onetile (573ms)
    ✔ Google layout with default skip Blanks (571ms)
    ✔ Google layout with center image in tile (727ms)
    ✔ Google layout with center image in tile centre (706ms)
    ✔ IIIFv2 layout
    ✔ IIIFv3 layout
    ✔ Write to ZIP container using file extension (705ms)
    ✔ Write to ZIP container using container tile option (667ms)
    ✔ Write ZIP container to Buffer (659ms)


  1096 passing (31s)
  33 failing

  1) Affine transform
       Extracts, rotates and applies affine transform:
     Error: Unable to parse color from string: blue
      at new Color (node_modules/color/index.js:49:10)
      at Color (node_modules/color/index.js:24:10)
      at Sharp.rotate (lib/operation.js:49:1096)
      at Context.<anonymous> (test/unit/affine.js:124:8)

  2) Affine transform
       Applies affine transform with background color:
     Error: Unable to parse color from string: red
      at new Color (node_modules/color/index.js:49:10)
      at Color (node_modules/color/index.js:24:10)
      at Sharp._setBackgroundColourOption (lib/colour.js:83:337)
      at Sharp.affine (lib/operation.js:109:651)
      at Context.<anonymous> (test/unit/affine.js:134:8)

  3) Affine transform
       Applies affine transform with background color and output offsets:
     Error: Unable to parse color from string: blue
      at new Color (node_modules/color/index.js:49:10)
      at Color (node_modules/color/index.js:24:10)
      at Sharp._setBackgroundColourOption (lib/colour.js:83:337)
      at Sharp.affine (lib/operation.js:109:651)
      at Context.<anonymous> (test/unit/affine.js:143:8)

  4) Affine transform
       Applies affine transform with background color and all offsets:
     Error: Unable to parse color from string: yellow
      at new Color (node_modules/color/index.js:49:10)
      at Color (node_modules/color/index.js:24:10)
      at Sharp._setBackgroundColourOption (lib/colour.js:83:337)
      at Sharp.affine (lib/operation.js:109:651)
      at Context.<anonymous> (test/unit/affine.js:152:8)

  5) Image channel extraction
       With colorspace conversion:
     Error: Unable to parse color from string: red
      at new Color (node_modules/color/index.js:49:10)
      at Color (node_modules/color/index.js:24:10)
      at Sharp._createInputDescriptor (lib/input.js:29:2306)
      at new Sharp (lib/constructor.js:159:174)
      at Sharp (lib/constructor.js:153:434)
      at Context.<anonymous> (test/unit/extractChannel.js:58:28)

  6) Image channel extraction
       Non-existent channel:
     Error: Unable to parse color from string: red
      at new Color (node_modules/color/index.js:49:10)
      at Color (node_modules/color/index.js:24:10)
      at Sharp._createInputDescriptor (lib/input.js:29:2306)
      at new Sharp (lib/constructor.js:159:174)
      at Sharp (lib/constructor.js:153:434)
      at /data/js-variants/multee/VariantsPureDep/sharp/variant_files/sharp/test/unit/extractChannel.js:107:13
      at waitForActual (node:assert:778:21)
      at Function.rejects (node:assert:913:31)
      at Context.<anonymous> (test/unit/extractChannel.js:106:18)

  7) Colour space conversion
       From CMYK to sRGB with white background, not yellow:
     Error: Unable to parse color from string: white
      at new Color (node_modules/color/index.js:49:10)
      at Color (node_modules/color/index.js:24:10)
      at Sharp._setBackgroundColourOption (lib/colour.js:83:337)
      at Sharp.resize (lib/resize.js:166:30)
      at Context.<anonymous> (test/unit/colourspace.js:69:8)

  8) composite
       Ensure tiled composition works with resized fit=outside:
     Error: Unable to parse color from string: red
      at new Color (node_modules/color/index.js:49:10)
      at Color (node_modules/color/index.js:24:10)
      at Sharp._createInputDescriptor (lib/input.js:29:2306)
      at new Sharp (lib/constructor.js:159:174)
      at Sharp (lib/constructor.js:153:434)
      at Context.<anonymous> (test/unit/composite.js:425:28)

  9) composite
       Ensure implict unpremultiply after resize but before composite:
     Error: Unable to parse color from string: saddlebrown
      at new Color (node_modules/color/index.js:49:10)
      at Color (node_modules/color/index.js:24:10)
      at Sharp._createInputDescriptor (lib/input.js:29:2306)
      at new Sharp (lib/constructor.js:159:174)
      at Sharp (lib/constructor.js:153:434)
      at Context.<anonymous> (test/unit/composite.js:452:32)

  10) Image metadata
       Stream in, finish event fires before metadata is requested:
     Error: Unable to parse color from string: red
      at new Color (node_modules/color/index.js:49:10)
      at Color (node_modules/color/index.js:24:10)
      at Sharp._createInputDescriptor (lib/input.js:29:2306)
      at new Sharp (lib/constructor.js:159:174)
      at Sharp (lib/constructor.js:153:434)
      at Context.<anonymous> (test/unit/metadata.js:444:20)

  11) Image metadata
       Add EXIF metadata to JPEG:
     Error: Unable to parse color from string: red
      at new Color (node_modules/color/index.js:49:10)
      at Color (node_modules/color/index.js:24:10)
      at Sharp._createInputDescriptor (lib/input.js:29:2306)
      at new Sharp (lib/constructor.js:159:174)
      at Sharp (lib/constructor.js:153:434)
      at Context.<anonymous> (test/unit/metadata.js:637:24)

  12) Image metadata
       Set density of JPEG:
     Error: Unable to parse color from string: red
      at new Color (node_modules/color/index.js:49:10)
      at Color (node_modules/color/index.js:24:10)
      at Sharp._createInputDescriptor (lib/input.js:29:2306)
      at new Sharp (lib/constructor.js:159:174)
      at Sharp (lib/constructor.js:153:434)
      at Context.<anonymous> (test/unit/metadata.js:661:24)

  13) Image metadata
       Set density of PNG:
     Error: Unable to parse color from string: red
      at new Color (node_modules/color/index.js:49:10)
      at Color (node_modules/color/index.js:24:10)
      at Sharp._createInputDescriptor (lib/input.js:29:2306)
      at new Sharp (lib/constructor.js:159:174)
      at Sharp (lib/constructor.js:153:434)
      at Context.<anonymous> (test/unit/metadata.js:680:24)

  14) Input/output
       Allow use of toBuffer and toFile with same instance:
     Error: Unable to parse color from string: red
      at new Color (node_modules/color/index.js:49:10)
      at Color (node_modules/color/index.js:24:10)
      at Sharp._createInputDescriptor (lib/input.js:29:2306)
      at new Sharp (lib/constructor.js:159:174)
      at Sharp (lib/constructor.js:153:434)
      at Context.<anonymous> (test/unit/io.js:350:22)

  15) PNG
       Can set bitdepth of PNG without palette:
     Error: Unable to parse color from string: red
      at new Color (node_modules/color/index.js:49:10)
      at Color (node_modules/color/index.js:24:10)
      at Sharp._createInputDescriptor (lib/input.js:29:2306)
      at new Sharp (lib/constructor.js:159:174)
      at Sharp (lib/constructor.js:153:434)
      at Context.<anonymous> (test/unit/png.js:209:24)

  16) Linear adjustment
       output is integer, not float, RGB:
     Error: Unable to parse color from string: red
      at new Color (node_modules/color/index.js:49:10)
      at Color (node_modules/color/index.js:24:10)
      at Sharp._createInputDescriptor (lib/input.js:29:2306)
      at new Sharp (lib/constructor.js:159:174)
      at Sharp (lib/constructor.js:153:434)
      at Context.<anonymous> (test/unit/linear.js:77:24)

  17) TIFF
       TIFF LZW RGBA toFile:
     Error: Unable to parse color from string: red
      at new Color (node_modules/color/index.js:49:10)
      at Color (node_modules/color/index.js:24:10)
      at Sharp._createInputDescriptor (lib/input.js:29:2306)
      at new Sharp (lib/constructor.js:159:174)
      at Sharp (lib/constructor.js:153:434)
      at Context.<anonymous> (test/unit/tiff.js:240:5)

  18) TIFF
       TIFF LZW RGBA toBuffer:
     Error: Unable to parse color from string: red
      at new Color (node_modules/color/index.js:49:10)
      at Color (node_modules/color/index.js:24:10)
      at Sharp._createInputDescriptor (lib/input.js:29:2306)
      at new Sharp (lib/constructor.js:159:174)
      at Sharp (lib/constructor.js:153:434)
      at Context.<anonymous> (test/unit/tiff.js:258:5)

  19) TIFF
       TIFF resolutionUnit of inch (default):
     Error: Unable to parse color from string: red
      at new Color (node_modules/color/index.js:49:10)
      at Color (node_modules/color/index.js:24:10)
      at Sharp._createInputDescriptor (lib/input.js:29:2306)
      at new Sharp (lib/constructor.js:159:174)
      at Sharp (lib/constructor.js:153:434)
      at Context.<anonymous> (test/unit/tiff.js:292:24)

  20) TIFF
       TIFF resolutionUnit of inch:
     Error: Unable to parse color from string: red
      at new Color (node_modules/color/index.js:49:10)
      at Color (node_modules/color/index.js:24:10)
      at Sharp._createInputDescriptor (lib/input.js:29:2306)
      at new Sharp (lib/constructor.js:159:174)
      at Sharp (lib/constructor.js:153:434)
      at Context.<anonymous> (test/unit/tiff.js:300:24)

  21) TIFF
       TIFF resolutionUnit of cm:
     Error: Unable to parse color from string: red
      at new Color (node_modules/color/index.js:49:10)
      at Color (node_modules/color/index.js:24:10)
      at Sharp._createInputDescriptor (lib/input.js:29:2306)
      at new Sharp (lib/constructor.js:159:174)
      at Sharp (lib/constructor.js:153:434)
      at Context.<anonymous> (test/unit/tiff.js:308:24)

  22) Image Stats
       Entropy and sharpness of 1x1 input are zero:
     Error: Unable to parse color from string: red
      at new Color (node_modules/color/index.js:49:10)
      at Color (node_modules/color/index.js:24:10)
      at Sharp._createInputDescriptor (lib/input.js:29:2306)
      at new Sharp (lib/constructor.js:159:174)
      at Sharp (lib/constructor.js:153:434)
      at Context.<anonymous> (test/unit/stats.js:466:42)

  23) Resize dimensions
       Ensure shortest edge (height) is at least 1 pixel:
     Error: Unable to parse color from string: red
      at new Color (node_modules/color/index.js:49:10)
      at Color (node_modules/color/index.js:24:10)
      at Sharp._createInputDescriptor (lib/input.js:29:2306)
      at new Sharp (lib/constructor.js:159:174)
      at Sharp (lib/constructor.js:153:434)
      at Context.<anonymous> (test/unit/resize.js:669:12)

  24) Resize dimensions
       Ensure shortest edge (width) is at least 1 pixel:
     Error: Unable to parse color from string: red
      at new Color (node_modules/color/index.js:49:10)
      at Color (node_modules/color/index.js:24:10)
      at Sharp._createInputDescriptor (lib/input.js:29:2306)
      at new Sharp (lib/constructor.js:159:174)
      at Sharp (lib/constructor.js:153:434)
      at Context.<anonymous> (test/unit/resize.js:686:12)

  25) Resize dimensions
       Ensure embedded shortest edge (height) is at least 1 pixel:
     Error: Unable to parse color from string: red
      at new Color (node_modules/color/index.js:49:10)
      at Color (node_modules/color/index.js:24:10)
      at Sharp._createInputDescriptor (lib/input.js:29:2306)
      at new Sharp (lib/constructor.js:159:174)
      at Sharp (lib/constructor.js:153:434)
      at Context.<anonymous> (test/unit/resize.js:703:12)

  26) Resize dimensions
       Ensure embedded shortest edge (width) is at least 1 pixel:
     Error: Unable to parse color from string: red
      at new Color (node_modules/color/index.js:49:10)
      at Color (node_modules/color/index.js:24:10)
      at Sharp._createInputDescriptor (lib/input.js:29:2306)
      at new Sharp (lib/constructor.js:159:174)
      at Sharp (lib/constructor.js:153:434)
      at Context.<anonymous> (test/unit/resize.js:720:12)

  27) Resize dimensions
       Skip shrink-on-load where one dimension <4px:
     Error: Unable to parse color from string: red
      at new Color (node_modules/color/index.js:49:10)
      at Color (node_modules/color/index.js:24:10)
      at Sharp._createInputDescriptor (lib/input.js:29:2306)
      at new Sharp (lib/constructor.js:159:174)
      at Sharp (lib/constructor.js:153:434)
      at Context.<anonymous> (test/unit/resize.js:737:24)

  28) Resize dimensions
       Skip JPEG shrink-on-load for known libjpeg rounding errors:
     Error: Unable to parse color from string: red
      at new Color (node_modules/color/index.js:49:10)
      at Color (node_modules/color/index.js:24:10)
      at Sharp._createInputDescriptor (lib/input.js:29:2306)
      at new Sharp (lib/constructor.js:159:174)
      at Sharp (lib/constructor.js:153:434)
      at Context.<anonymous> (test/unit/resize.js:757:25)

  29) Trim borders
       Attempt to trim 2x2 pixel image fails:
     Error: Unable to parse color from string: red
      at new Color (node_modules/color/index.js:49:10)
      at Color (node_modules/color/index.js:24:10)
      at Sharp._createInputDescriptor (lib/input.js:29:2306)
      at new Sharp (lib/constructor.js:159:174)
      at Sharp (lib/constructor.js:153:434)
      at Context.<anonymous> (test/unit/trim.js:61:5)

  30) Trim borders
       Should rotate before trim:
     Error: Unable to parse color from string: white
      at new Color (node_modules/color/index.js:49:10)
      at Color (node_modules/color/index.js:24:10)
      at Sharp._createInputDescriptor (lib/input.js:29:2306)
      at new Sharp (lib/constructor.js:159:174)
      at Sharp (lib/constructor.js:153:434)
      at Context.<anonymous> (test/unit/trim.js:82:5)

  31) Trim borders
       Ensure greyscale image can be trimmed:
     Error: Unable to parse color from string: silver
      at new Color (node_modules/color/index.js:49:10)
      at Color (node_modules/color/index.js:24:10)
      at Sharp._createInputDescriptor (lib/input.js:29:2306)
      at new Sharp (lib/constructor.js:159:174)
      at Sharp (lib/constructor.js:153:434)
      at Context.<anonymous> (test/unit/trim.js:128:29)

  32) Trim borders
       Ensure trim of image with all pixels same is no-op:
     Error: Unable to parse color from string: red
      at new Color (node_modules/color/index.js:49:10)
      at Color (node_modules/color/index.js:24:10)
      at Sharp._createInputDescriptor (lib/input.js:29:2306)
      at new Sharp (lib/constructor.js:159:174)
      at Sharp (lib/constructor.js:153:434)
      at Context.<anonymous> (test/unit/trim.js:154:28)

  33) Trim borders
       Specific background colour
         Doesn't trim at all:
     Error: Unable to parse color from string: yellow
      at new Color (node_modules/color/index.js:49:10)
      at Color (node_modules/color/index.js:24:10)
      at Sharp._setBackgroundColourOption (lib/colour.js:83:337)
      at Sharp.trim (lib/resize.js:282:307)
      at Context.<anonymous> (test/unit/trim.js:227:10)



----------------|---------|----------|---------|---------|-------------------
File            | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s 
----------------|---------|----------|---------|---------|-------------------
All files       |   99.35 |    99.26 |     100 |   99.35 |                   
 agent.js       |     100 |      100 |     100 |     100 |                   
 channel.js     |     100 |      100 |     100 |     100 |                   
 colour.js      |     100 |      100 |     100 |     100 |                   
 composite.js   |     100 |      100 |     100 |     100 |                   
 constructor.js |     100 |      100 |     100 |     100 |                   
 index.js       |     100 |      100 |     100 |     100 |                   
 input.js       |   99.55 |    99.55 |     100 |   99.55 | 483               
 is.js          |     100 |      100 |     100 |     100 |                   
 libvips.js     |     100 |      100 |     100 |     100 |                   
 operation.js   |   98.12 |    98.06 |     100 |   98.12 | 165,172,179,186   
 output.js      |   99.49 |    99.57 |     100 |   99.49 | 231,838           
 platform.js    |     100 |      100 |     100 |     100 |                   
 resize.js      |   99.16 |    99.27 |     100 |   99.16 | 527               
 sharp.js       |     100 |      100 |     100 |     100 |                   
 utility.js     |     100 |      100 |     100 |     100 |                   
----------------|---------|----------|---------|---------|-------------------
I am package socket.io .....

> socket.io@4.5.4 test
> npm run format:check && npm run compile && npm run test:types && npm run test:unit


> socket.io@4.5.4 format:check
> prettier --check "lib/**/*.ts" "test/**/*.ts"

Checking formatting...
All matched files use Prettier code style!

> socket.io@4.5.4 compile
> rimraf ./dist && tsc


> socket.io@4.5.4 test:types
> tsd


> socket.io@4.5.4 test:unit
> nyc mocha --require ts-node/register --reporter spec --slow 200 --bail --timeout 10000 test/index.ts



  socket.io
    ✔ should be the same version as client
    server attachment
      http.Server
        ✔ should serve client
        ✔ should serve client with query string
        ✔ should serve source map
        ✔ should serve client (min)
        ✔ should serve source map (min)
        ✔ should serve client (gzip)
        ✔ should serve bundle with msgpack parser
        ✔ should serve source map for bundle with msgpack parser
        ✔ should serve the ESM bundle
        ✔ should serve the source map for the ESM bundle
        ✔ should handle 304
        ✔ should handle 304
        ✔ should not serve static files
        ✔ should work with #attach
        ✔ should work with #attach (and merge options)
      port
        ✔ should be bound
        ✔ with listen
    handshake
      ✔ should send the Access-Control-Allow-xxx headers on OPTIONS request
      ✔ should send the Access-Control-Allow-xxx headers on GET request
      ✔ should allow request if custom function in opts.allowRequest returns true
      ✔ should disallow request if custom function in opts.allowRequest returns false
    close
      ✔ should be able to close sio sending a srv
      ✔ should be able to close sio sending a srv
      graceful close
        ✔ should stop socket and timers (513ms)
      protocol violations
        ✔ should close the connection when receiving several CONNECT packets
        ✔ should close the connection when receiving an EVENT packet while not connected
        ✔ should close the connection when receiving an invalid packet
    namespaces
      ✔ should be accessible through .sockets
      ✔ should be aliased
      ✔ should return an immutable broadcast operator
      ✔ should automatically connect
      ✔ should fire a `connection` event
      ✔ should fire a `connect` event
      ✔ should work with many sockets
      ✔ should be able to equivalently start with "" or "/" on server
      ✔ should be equivalent for "" and "/" on client
      ✔ should work with `of` and many sockets
      ✔ should work with `of` second param
      ✔ should disconnect upon transport disconnection
      ✔ should fire a `disconnecting` event just before leaving all rooms
      ✔ should return error connecting to non-existent namespace
      ✔ should not reuse same-namespace connections
      ✔ should find all clients in a namespace
      ✔ should find all clients in a namespace room
      ✔ should find all clients across namespace rooms
      ✔ should not emit volatile event after regular event (502ms)
      ✔ should emit volatile event (502ms)
      ✔ should enable compression by default
      ✔ should disable compression
      ✔ should throw on reserved event
      ✔ should close a client without namespace
      ✔ should exclude a specific socket when emitting
      ✔ should exclude a specific socket when emitting (in a namespace)
      ✔ should exclude a specific room when emitting
      ✔ should emit an 'new_namespace' event
      dynamic namespaces
        ✔ should allow connections to dynamic namespaces with a regex
        ✔ should allow connections to dynamic namespaces with a function
        ✔ should disallow connections when no dynamic namespace matches
        ✔ should emit an 'new_namespace' event for a dynamic namespace
        ✔ should handle race conditions with dynamic namespaces (#4136)
    socket
      ✔ should not fire events more than once after manually reconnecting
      ✔ should not fire reconnect_failed event more than once when server closed (715ms)
      ✔ should receive events
      ✔ should receive message events through `send`
      ✔ should error with null messages
      ✔ should handle transport null messages
      ✔ should emit events
      ✔ should emit events with utf8 multibyte character
      ✔ should emit events with binary data
      ✔ should emit events with several types of data (including binary)
      ✔ should receive events with binary data (112ms)
      ✔ should receive events with several types of data (including binary) (125ms)
      ✔ should not emit volatile event after regular event (polling) (203ms)
      ✔ should not emit volatile event after regular event (ws) (202ms)
      ✔ should emit volatile event (polling) (504ms)
      ✔ should emit volatile event (ws) (202ms)
      ✔ should emit only one consecutive volatile event (polling) (505ms)
      ✔ should emit only one consecutive volatile event (ws) (204ms)
      ✔ should emit only one consecutive volatile event with binary (ws) (203ms)
      ✔ should broadcast only one consecutive volatile event with binary (ws) (203ms)
      ✔ should emit regular events after trying a failed volatile event (polling) (203ms)
      ✔ should emit regular events after trying a failed volatile event (ws) (203ms)
      ✔ should emit message events through `send`
      ✔ should receive event with callbacks
      ✔ should receive all events emitted from namespaced client immediately and in order (111ms)
      ✔ should emit events with callbacks
      ✔ should receive events with args and callback
      ✔ should emit events with args and callback
      ✔ should receive events with binary args and callbacks (112ms)
      ✔ should emit events with binary args and callback
      ✔ should emit events and receive binary data in a callback (110ms)
      ✔ should receive events and pass binary data in a callback
      ✔ should have access to the client
      ✔ should have access to the connection
      ✔ should have access to the request
      ✔ should see query parameters in the request
      ✔ should see query parameters sent from secondary namespace connections in handshake object
      ✔ should handle very large json (2743ms)
      ✔ should handle very large binary data (1787ms)
      ✔ should be able to emit after server close and restart
      ✔ should enable compression by default
      ✔ should disable compression
[96mNote: warning expected and normal in test.[39m
      ✔ should error with raw binary and warn (208ms)
[96mNote: warning expected and normal in test.[39m
      ✔ should not crash when receiving an error packet without handler (210ms)
      ✔ should not crash with raw binary (113ms)
      ✔ should handle empty binary packet (112ms)
      ✔ should not crash when messing with Object prototype (and other globals)
      ✔ should throw on reserved event
      ✔ should ignore a packet received after disconnection (114ms)
      ✔ should leave all rooms joined after a middleware failure
      ✔ should not join rooms after disconnection
      onAny
        ✔ should call listener
        ✔ should prepend listener
        ✔ should remove listener
      onAnyOutgoing
        ✔ should call listener
        ✔ should call listener when broadcasting
        ✔ should prepend listener
        ✔ should remove listener
    messaging many
      ✔ emits to a namespace
      ✔ emits binary data to a namespace
      ✔ emits to the rest
      ✔ emits to rooms (118ms)
      ✔ emits to rooms avoiding dupes
      ✔ broadcasts to rooms
      ✔ broadcasts binary data to rooms
      ✔ keeps track of rooms
      ✔ deletes empty rooms
      ✔ should properly cleanup left rooms
      ✔ allows to join several rooms at once
      ✔ should exclude specific sockets when broadcasting
      ✔ should exclude a specific room when broadcasting (124ms)
      ✔ should return an immutable broadcast operator
      ✔ should broadcast and expect multiple acknowledgements
      ✔ should fail when a client does not acknowledge the event in the given delay (222ms)
      ✔ should broadcast and return if the packet is sent to 0 client
      ✔ should precompute the WebSocket frame when broadcasting
    middleware
      ✔ should call functions
      ✔ should pass errors
      ✔ should pass an object
      ✔ should only call connection after fns
      ✔ should only call connection after (lengthy) fns (310ms)
      ✔ should be ignored if socket gets closed
      ✔ should call functions in expected order (158ms)
      ✔ should disable the merge of handshake packets
      ✔ should work with a custom namespace
      ✔ should only set `connected` to true after the middleware execution
    socket middleware
      ✔ should call functions
      ✔ should pass errors
    v2 compatibility
      ✔ should connect if `allowEIO3` is true
      ✔ should be able to connect to a namespace with a query
      ✔ should not connect if `allowEIO3` is false (default)
    timeout
      ✔ should timeout if the client does not acknowledge the event
      ✔ should timeout if the client does not acknowledge the event in time (203ms)
      ✔ should not timeout if the client does acknowledge the event
    socket.io with uWebSocket.js-based engine
      ✔ should broadcast
      ✔ should broadcast in a namespace
      ✔ should broadcast in a dynamic namespace
      ✔ should broadcast binary content
      ✔ should broadcast volatile packet with binary content
      ✔ should broadcast in a room
      ✔ should broadcast in multiple rooms
      ✔ should broadcast in all but a given room
      ✔ should work even after leaving room
      ✔ should not crash when socket is disconnected before the upgrade
      ✔ should serve static files
    utility methods
      fetchSockets
        ✔ returns all socket instances
        ✔ returns all socket instances in the given room
        ✔ works with a custom adapter
      socketsJoin
        ✔ makes all socket instances join the given room
        ✔ makes all socket instances in a room join the given room
      socketsLeave
        ✔ makes all socket instances leave the given room
        ✔ makes all socket instances in a room leave the given room
      disconnectSockets
        ✔ makes all socket instances disconnect
        ✔ makes all socket instances in a room disconnect
    connection state recovery
      ✔ should restore session and missed packets
      ✔ should restore rooms and data attributes
      ✔ should not run middlewares upon recovery by default
      ✔ should run middlewares even upon recovery
      ✔ should fail to restore an unknown session


  180 passing (14s)

-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   88.53 |    77.77 |      85 |   89.29 |                                   
 broadcast-operator.js |   90.36 |    76.92 |   82.14 |   91.35 | 71,222,347-373                    
 client.js             |   98.03 |    89.18 |     100 |   98.03 | 55,130                            
 index.js              |   80.65 |    71.71 |   75.47 |   82.82 | ...51,356-359,365-370,430,551-611 
 namespace.js          |   86.51 |    79.54 |   86.66 |   86.51 | 222,278,324-380                   
 parent-namespace.js   |    87.5 |      100 |      70 |   86.36 | 15-16,43                          
 socket.js             |   93.42 |    81.91 |   91.22 |   93.33 | ...08,563,819,831-840,902,914-923 
 typed-events.js       |      90 |      100 |   83.33 |      90 | 44                                
 uws.js                |   89.77 |    79.06 |   88.23 |   89.65 | 19,111-112,119-125                
-----------------------|---------|----------|---------|---------|-----------------------------------
I am package standard-engine .....

> standard-engine@15.1.0 test
> run-s check test:*


> standard-engine@15.1.0 check
> run-s clean && run-p check:*


> standard-engine@15.1.0 clean
> run-p clean:*


> standard-engine@15.1.0 clean:declarations
> rm -rf $(find . -maxdepth 2 -type f -name '*.d.ts')


> standard-engine@15.1.0 check:standard
> standard


> standard-engine@15.1.0 check:installed-check
> installed-check --engine-ignore dependency-check


> standard-engine@15.1.0 check:dependency-check
> dependency-check *.js 'bin/**/*.js' 'lib/**/*.js' --no-dev


> standard-engine@15.1.0 check:type-coverage
> type-coverage --detail --strict --at-least 95 --ignore-files 'test/*'


> standard-engine@15.1.0 check:tsc
> tsc

/data/js-variants/multee/VariantsPureDep/standard-engine/variant_files/standard-engine/lib/utils.js:20:14: item
/data/js-variants/multee/VariantsPureDep/standard-engine/variant_files/standard-engine/lib/utils.js:21:16: item
/data/js-variants/multee/VariantsPureDep/standard-engine/variant_files/standard-engine/lib/utils.js:20:22: value
/data/js-variants/multee/VariantsPureDep/standard-engine/variant_files/standard-engine/bin/cmd.js:54:10: stdin
/data/js-variants/multee/VariantsPureDep/standard-engine/variant_files/standard-engine/bin/cmd.js:58:12: help
/data/js-variants/multee/VariantsPureDep/standard-engine/variant_files/standard-engine/bin/cmd.js:90:12: version
/data/js-variants/multee/VariantsPureDep/standard-engine/variant_files/standard-engine/bin/cmd.js:97:5: fix
/data/js-variants/multee/VariantsPureDep/standard-engine/variant_files/standard-engine/bin/cmd.js:97:15: fix
/data/js-variants/multee/VariantsPureDep/standard-engine/variant_files/standard-engine/bin/cmd.js:98:5: extensions
/data/js-variants/multee/VariantsPureDep/standard-engine/variant_files/standard-engine/bin/cmd.js:98:22: ext
/data/js-variants/multee/VariantsPureDep/standard-engine/variant_files/standard-engine/bin/cmd.js:99:5: ignore
/data/js-variants/multee/VariantsPureDep/standard-engine/variant_files/standard-engine/bin/cmd.js:99:18: ignore
/data/js-variants/multee/VariantsPureDep/standard-engine/variant_files/standard-engine/bin/cmd.js:100:5: globals
/data/js-variants/multee/VariantsPureDep/standard-engine/variant_files/standard-engine/bin/cmd.js:100:19: global
/data/js-variants/multee/VariantsPureDep/standard-engine/variant_files/standard-engine/bin/cmd.js:101:5: plugins
/data/js-variants/multee/VariantsPureDep/standard-engine/variant_files/standard-engine/bin/cmd.js:101:19: plugin
/data/js-variants/multee/VariantsPureDep/standard-engine/variant_files/standard-engine/bin/cmd.js:102:5: envs
/data/js-variants/multee/VariantsPureDep/standard-engine/variant_files/standard-engine/bin/cmd.js:102:16: env
/data/js-variants/multee/VariantsPureDep/standard-engine/variant_files/standard-engine/bin/cmd.js:103:5: parser
/data/js-variants/multee/VariantsPureDep/standard-engine/variant_files/standard-engine/bin/cmd.js:103:18: parser
/data/js-variants/multee/VariantsPureDep/standard-engine/variant_files/standard-engine/bin/cmd.js:106:9: outputFixed
/data/js-variants/multee/VariantsPureDep/standard-engine/variant_files/standard-engine/bin/cmd.js:106:28: stdin
/data/js-variants/multee/VariantsPureDep/standard-engine/variant_files/standard-engine/bin/cmd.js:106:42: fix
/data/js-variants/multee/VariantsPureDep/standard-engine/variant_files/standard-engine/bin/cmd.js:114:19: args
/data/js-variants/multee/VariantsPureDep/standard-engine/variant_files/standard-engine/bin/cmd.js:115:9: outputFixed
/data/js-variants/multee/VariantsPureDep/standard-engine/variant_files/standard-engine/bin/cmd.js:116:7: args
/data/js-variants/multee/VariantsPureDep/standard-engine/variant_files/standard-engine/bin/cmd.js:116:35: args
/data/js-variants/multee/VariantsPureDep/standard-engine/variant_files/standard-engine/bin/cmd.js:117:36: args
/data/js-variants/multee/VariantsPureDep/standard-engine/variant_files/standard-engine/bin/cmd.js:119:34: args
/data/js-variants/multee/VariantsPureDep/standard-engine/variant_files/standard-engine/bin/cmd.js:123:24: stdin
/data/js-variants/multee/VariantsPureDep/standard-engine/variant_files/standard-engine/bin/cmd.js:128:22: stdin
/data/js-variants/multee/VariantsPureDep/standard-engine/variant_files/standard-engine/bin/cmd.js:149:9: outputFixed
/data/js-variants/multee/VariantsPureDep/standard-engine/variant_files/standard-engine/bin/cmd.js:205:12: err
/data/js-variants/multee/VariantsPureDep/standard-engine/variant_files/standard-engine/bin/cmd.js:205:50: err
/data/js-variants/multee/VariantsPureDep/standard-engine/variant_files/standard-engine/index.js:37:10: customEslintConfigResolver
689 / 724 95.16%
type-coverage success.

> standard-engine@15.1.0 test:tape
> c8 --reporter=lcov --reporter=text tape test/clone.js test/*.js

TAP version 13
# test `standard` repo
ok 1 standard (https://github.com/feross/standard)
# api: lintFiles
ok 2 result is an array
ok 3 should be strictly equal
# api: lintText
ok 4 result is an array
ok 5 should have used single quotes
# api: resolveEslintConfig -- avoid this.eslintConfig parser mutation
ok 6 should be strictly equal
ok 7 should be strictly equal
# api: resolveEslintConfig -- avoid this.eslintConfig global mutation
ok 8 should be deeply equivalent
ok 9 should be strictly equal
# utils: ensureArray
# ensureArray converts string to array
ok 10 string becomes array containing that string
ok 11 undefined becomes array containing that undefined
ok 12 null becomes array containing that null
ok 13 true becomes array containing that true
# ensureArray clones array
ok 14 array stays an array
ok 15 array keeps it content
ok 16 array is cloned
# utils: ensureStringArrayValue
# ensureStringArrayValue returns empty array on non-array input
ok 17 should return empty array on non-array input
ok 18 should return empty array on non-array input
ok 19 should return empty array on non-array input
ok 20 should return empty array on non-array input
ok 21 should return empty array on non-array input
# ensureStringArrayValue clones array
ok 22 array keeps it content
ok 23 array is cloned
# ensureStringArrayValue removes non-string values
ok 24 non-string values has been removed
ok 25 input value remains untouched
# utils: stringArrayToObj
# stringArrayToObj accepts string input
ok 26 string becomes key with true value in result
# stringArrayToObj accepts array input
ok 27 string array becomes keys with true values in result
# stringArrayToObj clones input base
ok 28 object gets value added
ok 29 object is cloned
ok 30 base remains untouched

1..30
# tests 30
# pass  30

# ok

----------------------------------|---------|----------|---------|---------|------------------------
File                              | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s      
----------------------------------|---------|----------|---------|---------|------------------------
All files                         |   80.37 |    64.28 |   93.75 |   80.37 |                        
 standard-engine                  |    98.3 |    45.45 |     100 |    98.3 |                        
  index.js                        |    98.3 |    45.45 |     100 |    98.3 | 92-93                  
 standard-engine/bin              |   50.48 |    31.25 |      50 |   50.48 |                        
  cmd.js                          |   50.48 |    31.25 |      50 |   50.48 | ...145,150-157,166-202 
 standard-engine/lib              |   93.33 |    76.78 |     100 |   93.33 |                        
  resolve-eslint-config.js        |   91.98 |    69.76 |     100 |   91.98 | 92-97,200-201,221-231  
  utils.js                        |     100 |      100 |     100 |     100 |                        
 standard-engine/tmp/standard/lib |     100 |      100 |     100 |     100 |                        
  options.js                      |     100 |      100 |     100 |     100 |                        
----------------------------------|---------|----------|---------|---------|------------------------
I am package node-ical .....

> node-ical@0.15.3 test
> xo && vows test/test.js && vows test/test-async.js && printf "\n"

······································································································  
  ✓ OK » 102 honored (0.292s) 
  START Async Tests
···································································  
  ✓ OK » 67 honored (0.247s) 
  
I am package stream-splicer .....

> stream-splicer@2.0.1 test
> tape test/*.js

I am package string-to-stream .....

> string-to-stream@3.0.1 test
> standard && tape test/*.js

I am package strong-error-handler .....

> strong-error-handler@4.0.1 test
> mocha



  strong-error-handler
    ✔ sets nosniff header
    ✔ handles response headers already sent
    ✔ does not modify "options" argument
    status code
      ✔ converts non-error "err.status" to 500
      ✔ converts non-error "err.statusCode" to 500
      ✔ uses the value from "err.status"
      ✔ uses the value from "err.statusCode"
      ✔ prefers "err.statusCode" over "err.status"
      1) handles error from `res.statusCode`
    logging
      ✔ logs by default
      ✔ honours options.log=false
      ✔ honours options.log=true
      ✔ includes relevant information in the log message
      ✔ handles array argument
      ✔ handles non-Error argument
    JSON response
      ✔ contains all error properties when debug=true
      ✔ includes code property for 4xx status codes when debug=false
      2) excludes code property for 5xx status codes when debug=false
      ✔ contains non-enumerable Error properties when debug=true
      ✔ should allow setting safe fields when status=5xx
      ✔ safe fields falls back to existing data
      ✔ should allow setting safe fields when status=4xx
      ✔ contains subset of properties when status=4xx
      3) contains only safe info when status=5xx
      4) handles array argument as 500 when debug=false
      ✔ returns all array items when debug=true
      5) includes safeFields of array items when debug=false
      6) handles non-Error argument as 500 when debug=false
      ✔ returns non-Error argument in message when debug=true
      ✔ handles Error objects containing circular properties
      7) honors rootProperty
      8) honors rootProperty=false
    HTML response
      ✔ contains all error properties when debug=true
      ✔ HTML-escapes all 4xx response properties in production mode
      ✔ HTML-escapes all 5xx response properties in development mode
      ✔ contains subset of properties when status=4xx
      9) contains only safe info when status=5xx
    XML response
      ✔ contains all error properties when debug=true
      ✔ contains subset of properties when status=4xx
      10) contains only safe info when status=5xx
      ✔ honors options.rootProperty
      ✔ ignores options.rootProperty = false
    Content Negotiation
      ✔ defaults to json without options
      ✔ honors accepted content-type
      ✔ honors order of accepted content-type
      ✔ disables content-type negotiation when negotiateContentType=false
      ✔ chooses resolved type when negotiateContentType=false + not-supported
      ✔ chooses default type when negotiateContentType=false + not-supported 
      ✔ honors order of accepted content-types of text/html
      ✔ picks first supported type upon multiple accepted
      ✔ falls back for unsupported option.defaultType
      ✔ returns defaultType for unsupported type
      ✔ supports query _format
      ✔ handles unknown _format query


  44 passing (206ms)
  10 failing

  1) strong-error-handler
       status code
         handles error from `res.statusCode`:

      Error: expected { error: { statusCode: 507, message: 'Insufficient Storage' } } response body, got { error: { statusCode: 507, message: 'Unknown Error' } }
      + expected - actual

       {
         "error": {
      -    "message": "Unknown Error"
      +    "message": "Insufficient Storage"
           "statusCode": 507
         }
       }
      
      at Context.<anonymous> (test/handler.test.js:78:24)
      at processImmediate (node:internal/timers:466:21)
  ----
      at error (node_modules/supertest/lib/test.js:335:15)
      at Test._assertBody (node_modules/supertest/lib/test.js:193:16)
      at /data/js-variants/multee/VariantsPureDep/strong-error-handler/variant_files/strong-error-handler/node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)
      at Object.onceWrapper (node:events:627:28)
      at Server.emit (node:events:513:28)
      at emitCloseNT (node:net:1820:8)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  2) strong-error-handler
       JSON response
         excludes code property for 5xx status codes when debug=false:

      Uncaught AssertionError: expected { statusCode: 500, …(1) } to deeply equal { statusCode: 500, …(1) }
      + expected - actual

       {
      -  "message": "Unknown Error"
      +  "message": "Internal Server Error"
         "statusCode": 500
       }
      
      at Test.<anonymous> (test/handler.test.js:264:37)
      at Test.assert (node_modules/supertest/lib/test.js:172:8)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)
      at Object.onceWrapper (node:events:627:28)
      at Server.emit (node:events:513:28)
      at emitCloseNT (node:net:1820:8)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  3) strong-error-handler
       JSON response
         contains only safe info when status=5xx:

      Uncaught AssertionError: expected { statusCode: 500, …(1) } to deeply equal { statusCode: 500, …(1) }
      + expected - actual

       {
      -  "message": "Unknown Error"
      +  "message": "Internal Server Error"
         "statusCode": 500
       }
      
      at Test.<anonymous> (test/handler.test.js:387:35)
      at Test.assert (node_modules/supertest/lib/test.js:172:8)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)
      at Object.onceWrapper (node:events:627:28)
      at Server.emit (node:events:513:28)
      at emitCloseNT (node:net:1820:8)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  4) strong-error-handler
       JSON response
         handles array argument as 500 when debug=false:

      Uncaught AssertionError: expected [ { statusCode: 500, …(1) }, …(2) ] to deeply equal [ { statusCode: 500, …(1) }, …(2) ]
      + expected - actual

       [
         {
      -    "message": "Unknown Error"
      +    "message": "Internal Server Error"
           "statusCode": 500
         }
         {
      -    "message": "Unknown Error"
      +    "message": "Internal Server Error"
           "statusCode": 500
         }
         {
      -    "message": "Unknown Error"
      +    "message": "Internal Server Error"
           "statusCode": 500
         }
       ]
      
      at Test.<anonymous> (test/handler.test.js:404:50)
      at Test.assert (node_modules/supertest/lib/test.js:172:8)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)
      at Object.onceWrapper (node:events:627:28)
      at Server.emit (node:events:513:28)
      at emitCloseNT (node:net:1820:8)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  5) strong-error-handler
       JSON response
         includes safeFields of array items when debug=false:

      Uncaught AssertionError: expected [ { statusCode: 500, …(2) }, …(2) ] to deeply equal [ { statusCode: 500, …(2) }, …(2) ]
      + expected - actual

       [
         {
           "code": "MACHINE_READABLE_CODE"
      -    "message": "Unknown Error"
      +    "message": "Internal Server Error"
           "statusCode": 500
         }
         {
           "code": "VALIDATION_ERROR"
--
           "name": "ValidationError"
           "statusCode": 422
         }
         {
      -    "message": "Unknown Error"
      +    "message": "Internal Server Error"
           "statusCode": 500
         }
       ]
      
      at Test.<anonymous> (test/handler.test.js:492:53)
      at Test.assert (node_modules/supertest/lib/test.js:172:8)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)
      at Object.onceWrapper (node:events:627:28)
      at Server.emit (node:events:513:28)
      at emitCloseNT (node:net:1820:8)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  6) strong-error-handler
       JSON response
         handles non-Error argument as 500 when debug=false:

      Uncaught AssertionError: expected { statusCode: 500, …(1) } to deeply equal { statusCode: 500, …(1) }
      + expected - actual

       {
      -  "message": "Unknown Error"
      +  "message": "Internal Server Error"
         "statusCode": 500
       }
      
      at Test.<anonymous> (test/handler.test.js:502:35)
      at Test.assert (node_modules/supertest/lib/test.js:172:8)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)
      at Object.onceWrapper (node:events:627:28)
      at Server.emit (node:events:513:28)
      at emitCloseNT (node:net:1820:8)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  7) strong-error-handler
       JSON response
         honors rootProperty:

      Uncaught AssertionError: expected { statusCode: 500, …(1) } to deeply equal { statusCode: 500, …(1) }
      + expected - actual

       {
      -  "message": "Unknown Error"
      +  "message": "Internal Server Error"
         "statusCode": 500
       }
      
      at Test.<anonymous> (test/handler.test.js:549:34)
      at Test.assert (node_modules/supertest/lib/test.js:172:8)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)
      at Object.onceWrapper (node:events:627:28)
      at Server.emit (node:events:513:28)
      at emitCloseNT (node:net:1820:8)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  8) strong-error-handler
       JSON response
         honors rootProperty=false:

      Uncaught AssertionError: expected { statusCode: 500, …(1) } to deeply equal { statusCode: 500, …(1) }
      + expected - actual

       {
      -  "message": "Unknown Error"
      +  "message": "Internal Server Error"
         "statusCode": 500
       }
      
      at Test.<anonymous> (test/handler.test.js:562:29)
      at Test.assert (node_modules/supertest/lib/test.js:172:8)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)
      at Object.onceWrapper (node:events:627:28)
      at Server.emit (node:events:513:28)
      at emitCloseNT (node:net:1820:8)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  9) strong-error-handler
       HTML response
         contains only safe info when status=5xx:
     Uncaught AssertionError: expected '<html>\n  <head>\n    <meta charset=\…' to match /<title>Internal Server Error<\/title>/
      at Test.<anonymous> (test/handler.test.js:676:27)
      at Test.assert (node_modules/supertest/lib/test.js:172:8)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)
      at Object.onceWrapper (node:events:627:28)
      at Server.emit (node:events:513:28)
      at emitCloseNT (node:net:1820:8)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  10) strong-error-handler
       XML response
         contains only safe info when status=5xx:
     Uncaught AssertionError: expected '<?xml version=\'1.0\'?>\n<error>\n   …' to match /<message>Internal Server Error<\/message>/
      at Test.<anonymous> (test/handler.test.js:752:27)
      at Test.assert (node_modules/supertest/lib/test.js:172:8)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)
      at Object.onceWrapper (node:events:627:28)
      at Server.emit (node:events:513:28)
      at emitCloseNT (node:net:1820:8)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)



I am package subleveldown .....

> subleveldown@6.0.1 test
> standard && hallmark && (nyc -s node test | faucet) && nyc report

I am package svgo .....

> svgo@3.0.2 test
> NODE_OPTIONS=--experimental-vm-modules jest --maxWorkers=4 --coverage

------------------------------------|---------|----------|---------|---------|--------------------------------------------------------------------------------------------------------------------------------------------------------------
File                                | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                                                                                                                                            
------------------------------------|---------|----------|---------|---------|--------------------------------------------------------------------------------------------------------------------------------------------------------------
All files                           |   22.15 |     9.56 |   11.07 |   22.31 |                                                                                                                                                              
 lib                                |   49.23 |    48.46 |   28.81 |   48.97 |                                                                                                                                                              
  builtin.js                        |     100 |      100 |     100 |     100 |                                                                                                                                                              
  parser.js                         |    7.95 |        0 |    7.69 |    7.95 | 29-72,97-260                                                                                                                                                 
  path.js                           |   95.65 |    90.07 |     100 |   95.56 | 61,102-105,187,236                                                                                                                                           
  stringifier.js                    |   15.62 |        0 |       0 |   15.62 | 33,88-119,127-150,159-163,170,177,186,193,206-255,274-286,293                                                                                                
  style.js                          |   12.96 |        0 |       0 |    13.2 | 38-74,84-107,117-131,141-196,206-214,224-256,264-282                                                                                                         
  svgo-node.js                      |   97.82 |     92.3 |     100 |   97.82 | 74                                                                                                                                                           
  svgo.js                           |    42.1 |    21.87 |      50 |   41.07 | 15-47,55,67-90                                                                                                                                               
  xast.js                           |   91.17 |      100 |      50 |    90.9 | 22,30,38                                                                                                                                                     
 lib/svgo                           |   39.38 |    34.25 |    37.5 |   39.72 |                                                                                                                                                              
  coa.js                            |   51.85 |    49.23 |   55.88 |   51.55 | 87-94,99-107,112-119,124-127,132-133,144,156,165,180,185-186,191,196-199,205-206,211-212,225-226,230,232,236,249-256,270-273,286,333,393-394,399-462,489-520 
  css-select-adapter.js             |   24.13 |        0 |       0 |   24.13 | 4,8-12,18,22,26,30,34-35,39-42,46,50-74,78-87,91-102                                                                                                         
  plugins.js                        |      24 |        0 |      25 |      25 | 16-25,35-57                                                                                                                                                  
  tools.js                          |    23.4 |    21.73 |      20 |      25 | 14-26,35-53,73-114                                                                                                                                           
 plugins                            |   14.41 |      0.6 |    0.42 |   14.63 |                                                                                                                                                              
  _collections.js                   |     100 |      100 |     100 |     100 |                                                                                                                                                              
  _path.js                          |    2.04 |        0 |       0 |    2.12 | 22-37,51-172,186-219,231-677,711-814                                                                                                                         
  _transforms.js                    |       8 |        0 |       0 |    8.06 | 22-51,61-73,84-133,160-246,255-293,310-362,371                                                                                                               
  addAttributesToSVGElement.js      |   22.22 |        0 |       0 |   22.22 | 53-73                                                                                                                                                        
  addClassesToSVGElement.js         |   26.66 |        0 |       0 |   26.66 | 55-77                                                                                                                                                        
  applyTransforms.js                |    5.52 |        0 |       0 |    5.52 | 34-149,160-162,169-171,181-377                                                                                                                               
  cleanupAttrs.js                   |   35.29 |        0 |       0 |   35.29 | 19-40                                                                                                                                                        
  cleanupEnableBackground.js        |      20 |        0 |       0 |      20 | 25-68                                                                                                                                                        
  cleanupIds.js                     |   13.13 |        0 |       0 |    13.4 | 78-83,92-108,117,135-280                                                                                                                                     
  cleanupListOfValues.js            |      14 |        0 |       0 |      14 | 43-142                                                                                                                                                       
  cleanupNumericValues.js           |   18.75 |        0 |       0 |   18.75 | 36-100                                                                                                                                                       
  collapseGroups.js                 |    12.5 |        0 |       0 |    12.5 | 16-29,55-125                                                                                                                                                 
  convertColors.js                  |   19.56 |        0 |       0 |   19.56 | 31-39,73-138                                                                                                                                                 
  convertEllipseToCircle.js         |   23.07 |        0 |       0 |   23.07 | 16-31                                                                                                                                                        
  convertPathData.js                |    2.37 |        0 |       0 |    2.47 | 108-187,201-1181                                                                                                                                             
  convertShapeToPath.js             |    7.89 |        0 |       0 |    8.21 | 27-165                                                                                                                                                       
  convertStyleToAttrs.js            |      40 |        0 |   16.66 |      40 | 71-130                                                                                                                                                       
  convertTransform.js               |   15.74 |        0 |       0 |   16.03 | 44-72,106-126,142-170,177-184,191-194,202-205,215-216,225-291,300-328,338-351,358-382,391,402-416                                                            
  inlineStyles.js                   |    6.45 |        0 |       0 |    6.55 | 30-37,74-379                                                                                                                                                 
  mergePaths.js                     |   17.14 |        0 |       0 |   17.14 | 22-93                                                                                                                                                        
  mergeStyles.js                    |   11.76 |        0 |       0 |   11.76 | 24-93                                                                                                                                                        
  minifyStyles.js                   |    6.77 |        0 |       0 |    6.77 | 21-132                                                                                                                                                       
  moveElemsAttrsToGroup.js          |   11.62 |        0 |       0 |   11.62 | 33-121                                                                                                                                                       
  moveGroupAttrsToElems.js          |   31.25 |        0 |       0 |   31.25 | 29-59                                                                                                                                                        
  prefixIds.js                      |   13.25 |        0 |       0 |   13.41 | 15-19,27,34-40,48-51,59-62,76-223                                                                                                                            
  preset-default.js                 |     100 |      100 |     100 |     100 |                                                                                                                                                              
  removeAttributesBySelector.js     |   28.57 |        0 |       0 |   28.57 | 79-96                                                                                                                                                        
  removeAttrs.js                    |   18.51 |        0 |       0 |   18.51 | 87-145                                                                                                                                                       
  removeComments.js                 |   57.14 |        0 |       0 |   57.14 | 20-24                                                                                                                                                        
  removeDesc.js                     |      50 |        0 |       0 |      50 | 22-33                                                                                                                                                        
  removeDimensions.js               |   21.42 |        0 |       0 |   21.42 | 20-37                                                                                                                                                        
  removeDoctype.js                  |   66.66 |      100 |       0 |   66.66 | 33-36                                                                                                                                                        
  removeEditorsNSData.js            |   20.83 |        0 |       0 |   20.83 | 22-58                                                                                                                                                        
  removeElementsByAttr.js           |      25 |        0 |       0 |      25 | 44-66                                                                                                                                                        
  removeEmptyAttrs.js               |      50 |        0 |       0 |      50 | 16-25                                                                                                                                                        
  removeEmptyContainers.js          |   33.33 |        0 |       0 |   33.33 | 25-52                                                                                                                                                        
  removeEmptyText.js                |   33.33 |        0 |       0 |   33.33 | 28-46                                                                                                                                                        
  removeHiddenElems.js              |    8.82 |        0 |       0 |    8.82 | 50-305                                                                                                                                                       
  removeMetadata.js                 |   57.14 |        0 |       0 |   57.14 | 18-22                                                                                                                                                        
  removeNonInheritableGroupAttrs.js |   44.44 |        0 |       0 |   44.44 | 21-31                                                                                                                                                        
  removeOffCanvasPaths.js           |   14.63 |        0 |       0 |   14.63 | 33-130                                                                                                                                                       
  removeRasterImages.js             |   57.14 |        0 |       0 |   57.14 | 18-26                                                                                                                                                        
  removeScriptElement.js            |   57.14 |        0 |       0 |   57.14 | 18-22                                                                                                                                                        
  removeStyleElement.js             |   57.14 |        0 |       0 |   57.14 | 18-22                                                                                                                                                        
  removeTitle.js                    |   57.14 |        0 |       0 |   57.14 | 18-22                                                                                                                                                        
  removeUnknownsAndDefaults.js      |   49.38 |    15.11 |       0 |   49.38 | 106-201                                                                                                                                                      
  removeUnusedNS.js                 |   13.63 |        0 |       0 |   13.63 | 18-53                                                                                                                                                        
  removeUselessDefs.js              |   27.27 |        0 |       0 |   27.27 | 21-45,56-61                                                                                                                                                  
  removeUselessStrokeAndFill.js     |   13.04 |        0 |       0 |   13.04 | 22-132                                                                                                                                                       
  removeViewBox.js                  |   36.36 |        0 |       0 |   36.36 | 23-43                                                                                                                                                        
  removeXMLNS.js                    |   42.85 |        0 |       0 |   42.85 | 20-25                                                                                                                                                        
  removeXMLProcInst.js              |   57.14 |        0 |       0 |   57.14 | 19-23                                                                                                                                                        
  reusePaths.js                     |    7.31 |        0 |       0 |    7.31 | 27-105                                                                                                                                                       
  sortAttrs.js                      |     8.1 |        0 |       0 |     8.1 | 35-104                                                                                                                                                       
  sortDefsChildren.js               |   11.11 |        0 |       0 |   11.11 | 15-52                                                                                                                                                        
------------------------------------|---------|----------|---------|---------|--------------------------------------------------------------------------------------------------------------------------------------------------------------
I am package taskgroup .....

> taskgroup@7.19.0 test
> node ./source/test.js

test-usage: task ✘
I am package timeout .....

> connect-timeout@1.9.0 test
> mocha --reporter spec --bail --check-leaks test/



  timeout()
    1) should have a default timeout


  0 passing (5s)
  1 failing

  1) timeout() should have a default timeout:
     Uncaught TypeError: setPrototypeOf is not a function
      at new ServerError (node_modules/http-errors/index.js:190:5)
      at createError (node_modules/http-errors/index.js:91:9)
      at IncomingMessage.<anonymous> (index.js:84:8)
      at IncomingMessage.emit (node:events:513:28)
      at Timeout._onTimeout (index.js:49:11)
      at listOnTimeout (node:internal/timers:559:17)
      at processTimers (node:internal/timers:502:7)



I am package to-regex .....

> to-regex@3.0.2 test
> mocha



  to-regex
    main export
      ✓ should export a function
      1) should throw when a potentially unsafe regex is passed
      2) should create a strict regex from the given string
      3) should create a strict regex from the given array of strings
      4) should create a regex from the a mixture of strings and regexes
      ✓ should return a regex unchanged
      5) should create a loose regex when `options.contains` is true
      6) should create a negation regex when `options.negate` is true
      7) should create a loose negation regex when `options.strictNegate` is false
      8) should create a loose negation regex when `options.contains` and `options.negate` are true
      9) should create a negation regex for an array of strings
      10) should create a loose negation regex for an array of strings
      11) should not enforce beginning anchor when `options.strictOpen` is false
      12) should not enforce ending anchor when `options.strictClose` is false
      13) should use flags passed on `options.flags`
      14) should cache regex by default
      15) should not cache regex when options.cache is false
      16) should add `i` to flags when `options.nocase` is true
      ✓ should throw an error when invalid args are passed
      17) should throw an error on invalid regexes when `options.strictErrors` is true
      18) should escape non-word characters when invalid regexes are created
    .makeRe
      ✓ should be a function
      19) should create a strict regex from the given string
      ✓ should return a regex unchanged
      20) should create a loose regex when `options.contains` is true
      21) should create a negation regex when `options.negate` is true
      22) should create a loose negation regex when `options.strictNegate` is false
      23) should create a loose negation regex when `options.contains` and `options.negate` are true
      24) should not enforce beginning anchor when `options.strictOpen` is false
      25) should not enforce ending anchor when `options.strictClose` is false
      26) should use flags passed on `options.flags`
      27) should cache regex by default
      28) should not cache regex when options.cache is false
      29) should add `i` to flags when `options.nocase` is true
      ✓ should throw an error when invalid args are passed


  6 passing (28ms)
  29 failing

  1) to-regex main export should throw when a potentially unsafe regex is passed:
     AssertionError [ERR_ASSERTION]: The input did not match the regular expression /potentially unsafe/. Input:

'TypeError: extend is not a function'

      at Context.<anonymous> (test.js:14:14)
      at processImmediate (node:internal/timers:466:21)

  2) to-regex main export should create a strict regex from the given string:
     TypeError: extend is not a function
      at makeRe (index.js:63:14)
      at module.exports (index.js:26:12)
      at Context.<anonymous> (test.js:20:24)
      at processImmediate (node:internal/timers:466:21)

  3) to-regex main export should create a strict regex from the given array of strings:
     TypeError: extend is not a function
      at makeRe (index.js:63:14)
      at module.exports (index.js:28:10)
      at Context.<anonymous> (test.js:24:24)
      at processImmediate (node:internal/timers:466:21)

  4) to-regex main export should create a regex from the a mixture of strings and regexes:
     TypeError: extend is not a function
      at makeRe (index.js:63:14)
      at module.exports (index.js:28:10)
      at Context.<anonymous> (test.js:28:24)
      at processImmediate (node:internal/timers:466:21)

  5) to-regex main export should create a loose regex when `options.contains` is true:
     TypeError: extend is not a function
      at makeRe (index.js:63:14)
      at module.exports (index.js:26:12)
      at Context.<anonymous> (test.js:36:24)
      at processImmediate (node:internal/timers:466:21)

  6) to-regex main export should create a negation regex when `options.negate` is true:
     TypeError: extend is not a function
      at makeRe (index.js:63:14)
      at module.exports (index.js:26:12)
      at Context.<anonymous> (test.js:40:24)
      at processImmediate (node:internal/timers:466:21)

  7) to-regex main export should create a loose negation regex when `options.strictNegate` is false:
     TypeError: extend is not a function
      at makeRe (index.js:63:14)
      at module.exports (index.js:26:12)
      at Context.<anonymous> (test.js:48:24)
      at processImmediate (node:internal/timers:466:21)

  8) to-regex main export should create a loose negation regex when `options.contains` and `options.negate` are true:
     TypeError: extend is not a function
      at makeRe (index.js:63:14)
      at module.exports (index.js:26:12)
      at Context.<anonymous> (test.js:56:24)
      at processImmediate (node:internal/timers:466:21)

  9) to-regex main export should create a negation regex for an array of strings:
     TypeError: extend is not a function
      at makeRe (index.js:63:14)
      at module.exports (index.js:28:10)
      at Context.<anonymous> (test.js:64:16)
      at processImmediate (node:internal/timers:466:21)

  10) to-regex main export should create a loose negation regex for an array of strings:
     TypeError: extend is not a function
      at makeRe (index.js:63:14)
      at module.exports (index.js:28:10)
      at Context.<anonymous> (test.js:73:16)
      at processImmediate (node:internal/timers:466:21)

  11) to-regex main export should not enforce beginning anchor when `options.strictOpen` is false:
     TypeError: extend is not a function
      at makeRe (index.js:63:14)
      at module.exports (index.js:26:12)
      at Context.<anonymous> (test.js:82:24)
      at processImmediate (node:internal/timers:466:21)

  12) to-regex main export should not enforce ending anchor when `options.strictClose` is false:
     TypeError: extend is not a function
      at makeRe (index.js:63:14)
      at module.exports (index.js:26:12)
      at Context.<anonymous> (test.js:86:24)
      at processImmediate (node:internal/timers:466:21)

  13) to-regex main export should use flags passed on `options.flags`:
     TypeError: extend is not a function
      at makeRe (index.js:63:14)
      at module.exports (index.js:26:12)
      at Context.<anonymous> (test.js:90:24)
      at processImmediate (node:internal/timers:466:21)

  14) to-regex main export should cache regex by default:
     TypeError: extend is not a function
      at makeRe (index.js:63:14)
      at module.exports (index.js:26:12)
      at Context.<anonymous> (test.js:94:7)
      at processImmediate (node:internal/timers:466:21)

  15) to-regex main export should not cache regex when options.cache is false:
     TypeError: extend is not a function
      at makeRe (index.js:63:14)
      at module.exports (index.js:26:12)
      at Context.<anonymous> (test.js:104:7)
      at processImmediate (node:internal/timers:466:21)

  16) to-regex main export should add `i` to flags when `options.nocase` is true:
     TypeError: extend is not a function
      at makeRe (index.js:63:14)
      at module.exports (index.js:26:12)
      at Context.<anonymous> (test.js:114:24)
      at processImmediate (node:internal/timers:466:21)

  17) to-regex main export should throw an error on invalid regexes when `options.strictErrors` is true:

      AssertionError [ERR_ASSERTION]: 'extend is not a function' == 'Invalid regular expression: /^(?:*)$/: Nothing to repeat'
      + expected - actual

      -extend is not a function
      +Invalid regular expression: /^(?:*)$/: Nothing to repeat
      
      at Context.<anonymous> (test.js:134:16)
      at processImmediate (node:internal/timers:466:21)

  18) to-regex main export should escape non-word characters when invalid regexes are created:
     TypeError: extend is not a function
      at makeRe (index.js:63:14)
      at module.exports (index.js:26:12)
      at Context.<anonymous> (test.js:140:24)
      at processImmediate (node:internal/timers:466:21)

  19) to-regex .makeRe should create a strict regex from the given string:
     TypeError: extend is not a function
      at Function.makeRe (index.js:63:14)
      at Context.<anonymous> (test.js:150:32)
      at processImmediate (node:internal/timers:466:21)

  20) to-regex .makeRe should create a loose regex when `options.contains` is true:
     TypeError: extend is not a function
      at Function.makeRe (index.js:63:14)
      at Context.<anonymous> (test.js:158:32)
      at processImmediate (node:internal/timers:466:21)

  21) to-regex .makeRe should create a negation regex when `options.negate` is true:
     TypeError: extend is not a function
      at Function.makeRe (index.js:63:14)
      at Context.<anonymous> (test.js:162:32)
      at processImmediate (node:internal/timers:466:21)

  22) to-regex .makeRe should create a loose negation regex when `options.strictNegate` is false:
     TypeError: extend is not a function
      at Function.makeRe (index.js:63:14)
      at Context.<anonymous> (test.js:170:32)
      at processImmediate (node:internal/timers:466:21)

  23) to-regex .makeRe should create a loose negation regex when `options.contains` and `options.negate` are true:
     TypeError: extend is not a function
      at Function.makeRe (index.js:63:14)
      at Context.<anonymous> (test.js:178:32)
      at processImmediate (node:internal/timers:466:21)

  24) to-regex .makeRe should not enforce beginning anchor when `options.strictOpen` is false:
     TypeError: extend is not a function
      at Function.makeRe (index.js:63:14)
      at Context.<anonymous> (test.js:186:32)
      at processImmediate (node:internal/timers:466:21)

  25) to-regex .makeRe should not enforce ending anchor when `options.strictClose` is false:
     TypeError: extend is not a function
      at Function.makeRe (index.js:63:14)
      at Context.<anonymous> (test.js:190:32)
      at processImmediate (node:internal/timers:466:21)

  26) to-regex .makeRe should use flags passed on `options.flags`:
     TypeError: extend is not a function
      at Function.makeRe (index.js:63:14)
      at Context.<anonymous> (test.js:194:32)
      at processImmediate (node:internal/timers:466:21)

  27) to-regex .makeRe should cache regex by default:
     TypeError: extend is not a function
      at Function.makeRe (index.js:63:14)
      at Context.<anonymous> (test.js:198:15)
      at processImmediate (node:internal/timers:466:21)

  28) to-regex .makeRe should not cache regex when options.cache is false:
     TypeError: extend is not a function
      at Function.makeRe (index.js:63:14)
      at Context.<anonymous> (test.js:208:15)
      at processImmediate (node:internal/timers:466:21)

  29) to-regex .makeRe should add `i` to flags when `options.nocase` is true:
     TypeError: extend is not a function
      at Function.makeRe (index.js:63:14)
      at Context.<anonymous> (test.js:218:32)
      at processImmediate (node:internal/timers:466:21)



I am package unzip-stream .....

> unzip-stream@0.3.1 test
> tap ./test/*.js

TAP version 13
# Subtest: ./test/compressed.js
    # Subtest: parse compressed archive (created by POSIX zip)
        1..0
    ok 1 - parse compressed archive (created by POSIX zip) # time=24.297ms
    
    # Subtest: extract compressed archive w/ file sizes known prior to zlib inflation (created by POSIX zip)
        ok 1 - extracted directory contents
        1..1
    ok 2 - extract compressed archive w/ file sizes known prior to zlib inflation (created by POSIX zip) # time=33.209ms
    
    1..2
    # time=63.655ms
ok 1 - ./test/compressed.js # time=289.975ms

# Subtest: ./test/fileSizeUnknownFlag.js
    # Subtest: parse archive w/ file size unknown flag set (created by OS X Finder)
        1..0
    ok 1 - parse archive w/ file size unknown flag set (created by OS X Finder) # time=29.252ms
    
    # Subtest: extract archive w/ file size unknown flag set (created by OS X Finder)
        ok 1 - extracted directory contents
        1..1
    ok 2 - extract archive w/ file size unknown flag set (created by OS X Finder) # time=32.552ms
    
    # Subtest: archive w/ language encoding flag set
        ok 1 - extracted directory contents
        1..1
    ok 3 - archive w/ language encoding flag set # time=11.121ms
    
    1..3
    # time=79.346ms
ok 2 - ./test/fileSizeUnknownFlag.js # time=271.489ms

# Subtest: ./test/invalid.js
    # Subtest: parse archive w/ no signature
        1..0
    ok 1 - parse archive w/ no signature # time=10.862ms
    
    1..1
    # time=16.778ms
ok 3 - ./test/invalid.js # time=210.217ms

# Subtest: ./test/padding.js
    # Subtest: parse archive w/ padding between local files
        1..0
    ok 1 - parse archive w/ padding between local files # time=20.46ms
    
    # Subtest: extract archive w/ padding between local files
        ok 1 - extracted directory contents
        1..1
    ok 2 - extract archive w/ padding between local files # time=31.407ms
    
    1..2
    # time=57.586ms
ok 4 - ./test/padding.js # time=248.791ms

# Subtest: ./test/pipeSingleEntry.js
    # Subtest: pipe a single file entry out of a zip
        ok 1 - should be equal
        1..1
    ok 1 - pipe a single file entry out of a zip # time=22.592ms
    
    1..1
    # time=27.524ms
ok 5 - ./test/pipeSingleEntry.js # time=221.838ms

# Subtest: ./test/trail.js
    # Subtest: parse archive w/ trailing data
        1..0
    ok 1 - parse archive w/ trailing data # time=18.338ms
    
    # Subtest: extract archive w/ trailing data
        ok 1 - extracted directory contents
        1..1
    ok 2 - extract archive w/ trailing data # time=13.304ms
    
    1..2
    # time=37.388ms
ok 6 - ./test/trail.js # time=223.632ms

# Subtest: ./test/uncompressed.js
    # Subtest: parse uncompressed archive
        1..0
    ok 1 - parse uncompressed archive # time=21.281ms
    
    # Subtest: extract uncompressed archive
        ok 1 - extracted directory contents
        1..1
    ok 2 - extract uncompressed archive # time=33.667ms
    
    1..2
    # time=60.818ms
ok 7 - ./test/uncompressed.js # time=260.772ms

# Subtest: ./test/zip64.js
    # Subtest: parse zip64 archive
        1..0
    ok 1 - parse zip64 archive # time=23.74ms
    
    # Subtest: extract zip64 archive
        ok 1 - extracted directory contents
        1..1
    ok 2 - extract zip64 archive # time=16.196ms
    
    # Subtest: parse archive w/ zip64 local file
        1..0
    ok 3 - parse archive w/ zip64 local file # time=4.59ms
    
    # Subtest: extract archive w/ zip64 local file
        ok 1 - extracted directory contents
        1..1
    ok 4 - extract archive w/ zip64 local file # time=7.416ms
    
    1..4
    # time=58.829ms
ok 8 - ./test/zip64.js # time=247.473ms

1..8
# time=2005.275ms
I am package watchr .....

> watchr@6.11.0 test
> node ./source/test.js

